index,Final_title,Final_description
p00000,QQ,"
write a program which prints multiplication tables in the following format:
 


1x1=1
1x2=2
.
.
9x8=72
9x9=81


"
p00001,List of Top 3 Hills,"
there is a data which provides heights (in meter) of mountains. the data is only for ten mountains.
 
write a program which prints heights of the top three mountains in descending order.
 

"
p00002,Digit Number,"
write a program which computes the digit number of sum of two integers a and b.
 

"
p00003,Is it a Right Triangle?,"
write a program which judges wheather given length of three side form a right triangle. print ""yes"" if the given sides (integers) form a right triangle, ""no"" if not so.
 

"
p00004,Simultaneous Equation,"
write a program which solve a simultaneous equation:

 ax + by = c
 dx + ey = f


the program should print x and y for given a, b, c, d, e and f (-1,000 &le; a, b, c, d, e, f &le; 1,000). you can suppose that given equation has a unique solution.
 


"
p00005,GCD and LCM,"
write a program which computes the greatest common divisor (gcd) and the least common multiple (lcm) of given a and b. 
 

"
p00006,Reverse Sequence,"
write a program which reverses a given string str.
 

"
p00007,Debt Hell,"
your friend who lives in undisclosed country is involved in debt. he is borrowing 100,000-yen from a loan shark. the loan shark adds 5% interest of the debt and rounds it to the nearest 1,000 above week by week.
 
write a program which computes the amount of the debt in n weeks. 
 

"
p00008,Sum of 4 Integers,"
write a program which reads an integer n  and identifies the number of combinations of a, b, c and d (0 &le; a, b, c, d &le; 9) which meet the following equality:

a + b + c + d = n


for example, for n = 35, we have 4 different combinations of (a, b, c, d): (8, 9, 9, 9), (9, 8, 9, 9), (9, 9, 8, 9), and (9, 9, 9, 8).
 

"
p00009,Prime Number,"
write a program which reads an integer n and prints the number of prime numbers which are less than or equal to n. a prime number is a natural number which has exactly two distinct natural number divisors: 1 and itself. for example, the first four prime numbers are: 2, 3, 5 and 7.
 

"
p00010,Circumscribed Circle of a Triangle,"
write a program which prints the central coordinate $(p_x, p_y)$ and the radius $r$ of a circumscribed circle of a triangle which is constructed by three points $(x_1, y_1)$, $(x_2, y_2)$ and $(x_3, y_3)$ on the plane surface. 
 

"
p00011,Drawing Lots,"
let's play amidakuji. 
 
in the following example, there are five vertical lines and four horizontal lines. the horizontal lines can intersect (jump across) the vertical lines.
 
in the starting points (top of the figure), numbers are assigned to vertical lines in ascending order from left to right. at the first step, 2 and 4 are swaped by the first horizontal line which connects second and fourth vertical lines (we call this operation (2, 4)). likewise, we perform (3, 5), (1, 2) and (3, 4), then obtain ""4 1 2 5 3"" in the bottom.
 
your task is to write a program which reads the number of vertical lines w and configurations of horizontal lines and prints the final state of the amidakuji. in the starting pints, numbers 1, 2, 3, ..., w are assigne to the vertical lines from left to right.
 

"
p00012,A Point in a Triangle,"
there is a triangle formed by three points $(x_1, y_1)$, $(x_2, y_2)$, $(x_3, y_3)$ on a plain.
 
write a program which prints ""yes"" if a point $p$ $(x_p, y_p)$ is in the triangle and ""no"" if not.
 
you can suppose that p is never on the points nor sides of the triangle.
 
-->


"
p00013,Switching Railroad Cars,"
this figure shows railway tracks for reshuffling cars. the rail tracks end in the bottom and the top-left rail track is used for the entrace and the top-right rail track is used for the exit. ten cars, which have numbers from 1 to 10 respectively, use the rail tracks.
 
we can simulate the movement (comings and goings) of the cars as follow: 
 an entry of a car is represented by its number. an exit of a car is represented by 0 
for example, a sequence
 
demonstrates that car 1 and car 6 enter to the rail tracks in this order, car 6 exits from the rail tracks, and then car 8 and car 10 enter.
 
write a program which simulates comings and goings of the cars which are represented by the sequence of car numbers. the program should read the sequence of car numbers and 0, and print numbers of cars which exit from the rail tracks in order. at the first, there are no cars on the rail tracks. you can assume that 0 will not be given when there is no car on the rail tracks.
 




"
p00014,Integral,"
write a program which computes the area of a shape represented by the following three lines:

$y = x^2$
$y = 0$
$x = 600$

-->
 
it is clear that the area is $72000000$, if you use an integral you learn in high school. on the other hand, we can obtain an approximative area of the shape by adding up areas of many rectangles in the shape as shown in the following figure:
 
the approximative area $s$ where the width of the rectangles is $d$ is:

area of rectangle where its width is $d$ and height is $f(d)$ $+$ 
area of rectangle where its width is $d$ and height is $f(2d)$ $+$ 
area of rectangle where its width is $d$ and height is $f(3d)$ $+$ 
...
area of rectangle where its width is $d$ and height is $f(600 - d)$  
 
the more we decrease $d$, the higer-precision value which is close to $72000000$ we could obtain. your program should read the integer $d$ which is a divisor of $600$, and print the area $s$.
 

"
p00015,National Budget,"
a country has a budget of more than 81 trillion yen. we want to process such data, but conventional integer type which uses signed 32 bit can represent up to 2,147,483,647.
 
your task is to write a program which reads two integers (more than or equal to zero), and prints a sum of these integers.
 
if given integers or the sum have more than 80 digits, print ""overflow"".
 

"
p00016,Treasure Hunt,"
when a boy was cleaning up after his grand father passing, he found an old paper:
 
in addition, other side of the paper says that ""go ahead a number of steps equivalent to the first integer, and turn clockwise by degrees equivalent to the second integer"". 
 
his grand mother says that sanbonmatsu was standing at the center of town. however, now buildings are crammed side by side and people can not walk along exactly what the paper says in. your task is to write a program which hunts for the treature on the paper.
 
for simplicity, 1 step is equivalent to 1 meter. input consists of several pairs of two integers d (the first integer) and t (the second integer) separated by a comma. input ends with ""0, 0"". your program should print the coordinate (x, y) of the end point. there is the treature where x meters to the east and y meters to the north from the center of town.
 
you can assume that d &le; 100 and -180 &le; t &le; 180.
 

"
p00017,Caesar Cipher,"
is would become:
 
write a program which reads a text encrypted by caesar chipher and prints the corresponding decoded text. the number of shift is secret and it depends on datasets, but you can assume that the decoded text includes any of the following words: ""the"", ""this"", or ""that"".
 


"
p00018,Sorting Five Numbers,"
write a program which reads five numbers and sorts them in descending order.
 

"
p00019,Factorial,"
write a program which reads an integer n and prints the factorial of n. you can assume that n &le; 20.
 

"
p00020,Capitalize,"
write a program which replace all the lower-case letters of a given text with the corresponding captital letters. 
 

"
p00021,Parallelism,"
there are four points: $a(x_1, y_1)$, $b(x_2, y_2)$, $c(x_3, y_3)$, and $d(x_4, y_4)$. write a program which determines whether the line $ab$ and the line $cd$ are parallel. if those two lines are parallel, your program should prints ""yes"" and if not prints ""no"". 
 

"
p00022,Maximum Sum Sequence,"
given a sequence of numbers a1, a2, a3, ..., an, find the maximum sum of a contiguous subsequence of those numbers. note that, a subsequence of one element is also a contiquous subsequence.
 

"
p00023,Circles Intersection,"
you are given circle $a$ with radius $r_a$ and with central coordinate $(x_a, y_a)$ and circle $b$ with radius $r_b$ and with central coordinate $(x_b, y_b)$.
 
write a program which prints:
 ""2"" if $b$ is in $a$, ""-2"" if $a$ is in $b$,  ""1"" if circumference of $a$ and $b$ intersect, and ""0"" if $a$ and $b$ do not overlap. 
you may assume that $a$ and $b$ are not identical.
 

"
p00024,Physical Experiments,"
ignoring the air resistance, velocity of a freely falling object $v$ after $t$ seconds and its drop $y$ in $t$ seconds are represented by the following formulas:

$ v = 9.8 t $
$ y = 4.9 t^2 $
 
a person is trying to drop down a glass ball and check whether it will crack. your task is to write a program to help this experiment.
 
you are given the  minimum velocity to crack the ball. your program should print the lowest possible floor of a building to crack the ball. the height of the $n$ floor of the building is defined by $5 \times n - 5$.
 


"
p00025,Hit and Blow,"
let's play hit and blow game. a imagines four numbers and b guesses the numbers. after b picks out four numbers, a answers:
  the number of numbers which have the same place with numbers a imagined (hit)   the number of numbers included (but different place) in the numbers a imagined (blow) 
for example, if a imagined numbers:
 
and b chose:
 
a should say 1 hit and 1 blow.
 
write a program which reads four numbers a imagined and four numbers b chose and prints the number of hit and blow respectively. you may assume that the four numbers are all different and within from 0 to 9.
 
"
p00026,Dropping Ink,"
as shown in the following figure, there is a paper consisting of a grid structure where each cell is indicated by (x, y) coordinate system.
 
we are going to put drops of ink on the paper. a drop comes in three different sizes: large, medium, and small. from the point of fall, the ink sinks into surrounding cells as shown in the figure depending on its size. in the figure, a star denotes the point of fall and a circle denotes the surrounding cells.
 
originally, the paper is white that means for each cell the value of density is 0. the value of density is increased by 1 when the ink sinks into the corresponding cells.

for example, if we put a drop of small ink at (1, 2) and a drop of medium ink at (3, 2), the ink will sink as shown in the following figure (left side):
 
in the figure, density values of empty cells are 0. the ink sinking into out of the paper should be ignored as shown in the figure (top side). we can put several drops of ink at the same point.
 
your task is to write a program which reads a sequence of points of fall (x, y) with its size (small = 1, medium = 2, large = 3), and prints the number of cells whose density value is 0. the program must also print the maximum value of density.
 
you may assume that the paper always consists of 10 &times; 10, and 0 &le; x &lt; 10, 0 &le; y &lt; 10.
 

"
p00027,What day is today?,"
your task is to write a program which reads a date (from 2004/1/1 to 2004/12/31) and prints the day of the date. jan. 1, 2004, is thursday. note that 2004 is a leap year and we have feb. 29.
 

"
p00028,Mode Value,"
your task is to write a program which reads a sequence of integers and prints mode values of the sequence.
the mode value is the element which occurs most frequently. 
 

"
p00029,English Sentence,"
your task is to write a program which reads a text and prints two words. the first one is the word which is arise most frequently in the text. the second one is the word which has the maximum number of letters.
 
the text includes only alphabetical characters and spaces. a word is a sequence of letters which is separated by the spaces. 
 

"
p00030,Sum of Integers,"
0 から 9 の数字から異なる n 個の数を取り出して合計が s となる組み合わせの数を出力するプログラムを作成してください。n 個の数はおのおの 0 から 9 までとし、１つの組み合わせに同じ数字は使えません。たとえば、n が 3 で s が 6 のとき、3 個の数字の合計が 6 になる組み合わせは、

1 + 2 + 3 = 6
0 + 1 + 5 = 6
0 + 2 + 4 = 6

の 3 通りとなります。
 

"
p00031,Weight,"
祖母が天秤を使っています。天秤は、二つの皿の両方に同じ目方のものを載せると釣合い、そうでない場合には、重い方に傾きます。10 個の分銅の重さは、軽い順に 1g, 2g, 4g, 8g, 16g, 32g, 64g, 128g, 256g, 512g です。
 
祖母は、「1kg くらいまでグラム単位で量れるのよ。」と言います。「じゃあ、試しに、ここにあるジュースの重さを量ってよ」と言ってみると、祖母は左の皿にジュースを、右の皿に 8g と64g と128g の分銅を載せて釣合わせてから、「分銅の目方の合計は 200g だから、ジュースの目方は 200g ね。どう、正しいでしょう？」と答えました。
 
左の皿に載せる品物の重さを与えるので、天秤で与えられた重みの品物と釣合わせるときに、右の皿に載せる分銅を軽い順に出力するプログラムを作成して下さい。ただし、量るべき品物の重さは、すべての分銅の重さの合計 (=1023g) 以下とします。
 

"
p00032,Plastic Board,"
機械に辺・対角線の長さのデータを入力し、プラスティック板の型抜きをしている工場があります。この工場では、サイズは様々ですが、平行四辺形の型のみを切り出しています。あなたは、切り出される平行四辺形のうち、長方形とひし形の製造個数を数えるように上司から命じられました。
 
「機械に入力するデータ」を読み込んで、長方形とひし形の製造個数を出力するプログラムを作成してください。
 




"
p00033,Ball,"
図のように二股に分かれている容器があります。1 から 10 までの番号が付けられた10 個の玉を容器の開口部 a から落とし、左の筒 b か右の筒 c に玉を入れます。板 d は支点 e を中心に左右に回転できるので、板 d を動かすことで筒 b と筒 c のどちらに入れるか決めることができます。
 
開口部 a から落とす玉の並びを与えます。それらを順番に筒 b 又は筒 cに入れていきます。このとき、筒 b と筒 c のおのおのが両方とも番号の小さい玉の上に大きい玉を並べられる場合は yes、並べられない場合は no と出力するプログラムを作成してください。ただし、容器の中で玉の順序を入れ替えることはできないものとします。また、続けて同じ筒に入れることができるものとし、筒 b, c ともに 10 個の玉がすべて入るだけの余裕があるものとします。
 


"
p00034,Railway Lines,"
複線（上りと下りが別の線路になっていてどこででもすれ違える）の鉄道路線があります。この路線には終端駅を含めて11 の駅があり、それぞれの駅と駅の間は図で示す区間番号で呼ばれています。
 
この路線の両方の終端駅から列車が同時に出発して、途中で停まらずに走ります。各区間の長さと2 本の列車の速度を読み込んで、それぞれの場合について列車がすれ違う区間の番号を出力するプログラムを作成してください。ただし、ちょうど駅のところですれ違う場合は、両側の区間番号のうち小さいほうの数字を出力します。また、列車の長さ、駅の長さは無視できるものとします。
 

"
p00035,Is it Convex?,"
平面上の異なる 4 点　$a (x_a, y_a)$, $b (x_b, y_b)$, $c (x_c, y_c)$, $d(x_d, y_d)$ の座標を読み込んで、それら 4 点を頂点とした四角形 $abcd$ に凹みがなければ yes、凹みがあれば no と出力するプログラムを作成してください。
 
凹みのある四角形とは図 1 のような四角形です。
 






"
p00036,A Figure on Surface,"
この平面上に、以下の a から g の図形のどれかが一つだけ置かれています。
 
ただし、ひとつの平面に置かれている図形は必ず１つで、複数の図形が置かれていることはありません。また、a〜g で表される図形以外のものが置かれていることはありません。
 


"
p00037,Path on a Grid,"
上から見ると図 1 のような形の格子状の広場があります。この格子の各辺に「壁」があるかないかを 0 と 1 の並びで表します。点 a に立って壁に右手をつき、壁に右手をついたまま、矢印の方向に歩き続けて再び点 a に戻ってくるまでの経路を出力するプログラムを作成してください。
 








図1





"
p00038,Poker Hand,"
ポーカーの手札データを読み込んで、それぞれについてその役を出力するプログラムを作成してください。ただし、この問題では、以下のルールに従います。
 ポーカーはトランプ 5 枚で行う競技です。 同じ数字のカードは 5 枚以上ありません。 ジョーカーは無いものとします。 以下のポーカーの役だけを考えるものとします。(番号が大きいほど役が高くなります。) 役なし(以下に挙げるどれにも当てはまらない) ワンペア（2 枚の同じ数字のカードが1 組ある） ツーペア（2 枚の同じ数字のカードが2 組ある） スリーカード（3 枚の同じ数字のカードが1 組ある） ストレート（5 枚のカードの数字が連続している）

ただし、a を含むストレートの場合、a で終わる並びもストレートとします。つまり、a を含むストレート
は、a 2 3 4 5 　と　10 j q k a 　の２種類です。j q k a 2 などのように、a をまたぐ並び
はストレートではありません。（この場合、「役なし」になります）。
 フルハウス（3 枚の同じ数字のカードが1 組と、残りの2 枚が同じ数字のカード） フォーカード（4 枚の同じ数字のカードが1 組ある） 




"
p00039,Roman Figure,"
古代ローマでは数を数えることは難しい仕事でした。アラビア数字の 0,1,2,3,…, 9 はまだ流布していませんでした。その代わり次のような記号が使われていました。
 
i は 1、 v は 5、 x は 10、 l は 50、 c は 100、 d は 500、 m は 1000、 他の例は上の表を見てください。小さい数が大きい数に続いている、つまり右側にあるときは足し算をします。小さい数が大きい数の前に、つまり左にあるときは、大きい数から小さい数を引きます。大きい数字の前にあって引き算を表す小さな数字は一回の引き算あたりひとつしかありません。
 
ローマ数字をアラビア数字（通常の数字）の表記（10 進表示）に変換して出力するプログラムを作成してください。ただし、与えられるローマ数字は上記のルールにのみ従っています(実際のローマ数字の表記にはもっと細かいルールがありますが、ここでは考慮する必要はありません。たとえば、実際のローマ数字ではi はv かx から、x はl かc から、c はd かm からしか引き算しませんし、同じローマ数字は４つ以上（または５つ以上）足し並べることはありません。)
 


"
p00040,Affine Cipher,"
簡単な暗号法の一つに、アフィン暗号というものがあります。まず、アルファベット a〜z を a = 0, b = 1, c = 2,..., x = 23, y = 24, z = 25 と 0〜25 の数字に置き換えます。そして、以下の式で、原文のアルファベットを置換します。
 
f(γ) = (α・γ＋β) mod 26
 
$f(\gamma) = (\alpha \cdot \gamma + \beta)$ mod $26$
 
ただし、mod 26 は 26 で割った余りを表します。例えば、$\alpha = 3, \beta = 2$ のとき、アルファベットの 'a' (=0) は、$f(0) = (3 \cdot 0 + 2)$ mod $26 =  2$ で 'c' に、アルファベットの 'n' (=13) は $f(13) = (3 \cdot 13 + 2)$ mod $26 = 15$ で 'p' に置換されます。
このとき、$\gamma$ に対する $f(\gamma)$ が必ず 1 対 1 で対応付けられるように、$\alpha$ と $\beta$ は慎重に選ばれているものとします（$\alpha$ と 26 が互いに素であることが条件）。$\alpha = 4, \beta = 7$ のときのように、$f('a') = 7, f('n') = 7$ と、'a' も 'n' も同じ 'h' に置換されるようなことはありません。また、アルファベット以外の文字は置換されません。
 
暗号化された文字列を元の文章に復号したものを出力するプログラムを作成してください。元の文章には、キーワードとして
 
のいずれかが必ず含まれているものとします。
 

"
p00041,Expression,"
 与えられた 4 つの 1 から 9 の整数を使って、答えが 10 になる式をつくります。
 4 つの整数 a, b, c, d を入力したとき、下記の条件に従い、答えが 10 になる式を出力するプログラムを作成してください。また、答えが複数ある時は、最初に見つかった答えだけを出力するものとします。答えがない時は、0 と出力してください。
 演算子として、加算 (+)、減算 (-)、乗算 (*) だけを使います。除算 (/) は使いません。使用できる演算子は３個です。 数を4つとも使わなければいけません。 4つの数の順番は自由に入れ換えてかまいません。 カッコを使ってもかまいません。使用できるカッコは３組（６個）以下です。 


"
p00042,A Thief,"
宝物がたくさん収蔵されている博物館に、泥棒が大きな風呂敷を一つだけ持って忍び込みました。盗み出したいものはたくさんありますが、風呂敷が耐えられる重さが限られており、これを超えると風呂敷が破れてしまいます。そこで泥棒は、用意した風呂敷を破らず且つ最も価値が高くなるようなお宝の組み合わせを考えなくてはなりません。
 
風呂敷が耐えられる重さ w、および博物館にある個々のお宝の価値と重さを読み込んで、重さの総和が w を超えない範囲で価値の総和が最大になるときの、お宝の価値総和と重さの総和を出力するプログラムを作成してください。ただし、価値の総和が最大になる組み合わせが複数あるときは、重さの総和が小さいものを出力することとします。
 

<!--
また、博物館にあるお宝の総数は 1000 以下とし、お宝の価値は10000 以下とします。
-->

"
p00043,Puzzle,"
1 〜 9 の数字を 14 個組み合わせて完成させるパズルがあります。与えられた 13 個の数字にもうひとつ数字を付け加えて完成させます。
 
パズルの完成条件は
 同じ数字を２つ組み合わせたものが必ずひとつ必要です。 残りの12 個の数字は、３個の数字の組み合わせ４つです。
３個の数字の組み合わせ方は、同じ数字を３つ組み合わせたものか、または３つの連続する数字を組み合わせたものです。ただし、9 1 2 のような並びは連続する数字とは認められません。 同じ数字は4 回まで使えます。 
13 個の数字からなる文字列を読み込んで、パズルを完成することができる数字を昇順に全て出力するプログラムを作成してください。なお、1〜9 のどの数字を付け加えてもパズルを完成させることができないときは 0 を出力してください。
 例えば与えられた文字列が 3456666777999 の場合

「2」があれば、　234 567 666 77 999
「3」があれば、　33 456 666 777 999
「5」があれば、　345 567 666 77 999
「8」があれば、　345 666 678 77 999

というふうに、2 3 5 8 のいずれかの数字が付け加えられるとパズルは完成します。「6」でも整いますが、5 回目の使用になるので、この例では使えないことに注意してください。
 

"
p00044,Prime Number II,"
素数というのは、1 よりも大きくそれ自身か 1 でしか割りきれない整数をいいます。例えば、2 は、2 と 1 でしか割り切れないので素数ですが、12 は、12 と 1 のほかに、2, 3, 4, 6 で割りきれる数なので素数ではありません。
 
整数 n を入力したとき、n より小さい素数のうち最も大きいものと、n より大きい素数のうち最も小さいものを出力するプログラムを作成してください。
 

"
p00045,Sum and Average,"
販売単価と販売数量を読み込んで、販売金額の総合計と販売数量の平均を出力するプログラムを作成してください。
 

"
p00046,Differential,"
今まで登ったことのある山の標高を記録したデータがあります。このデータを読み込んで、一番高い山と一番低い山の標高差を出力するプログラムを作成してください。
 

"
p00047,Cup Game,"
3 つのカップがふせて置かれています。カップの置かれている場所を、順に a,b,c と呼ぶことにします。最初は a に置かれているカップの中にボールが隠されているとします。カップの位置を入れ替えると、中に入っているボールも一緒に移動します。
 
入れ替える２つのカップの位置を読み込んで、最終的にどの場所のカップにボールが隠されているかを出力するプログラムを作成してください。
 

"
p00048,Class,"
ボクシングは体重によって階級が分けられています。体重を読み込んで、その階級を出力するプログラムを作成してください。階級と体重の関係は以下の表のとおりとします。
 




階級体重（kg）
light fly48.00kg 以下
fly48.00kg 超 51.00kg 以下
bantam51.00kg 超 54.00kg 以下
feather54.00kg 超 57.00kg 以下
light57.00kg 超 60.00kg 以下
light welter60.00kg 超 64.00kg 以下
welter64.00kg 超 69.00 kg 以下
light middle69.00kg 超 75.00 kg 以下
middle75.00kg 超 81.00 kg 以下
light heavy81.00kg 超 91.00 kg 以下
heavy91.00kg 超




"
p00049,Blood Groups,"
ある学級の生徒の出席番号と abo 血液型を保存したデータを読み込んで、おのおのの血液型の人数を出力するプログラムを作成してください。なお、abo 血液型には、a 型、b 型、ab 型、o 型の４種類の血液型があります。
 

"
p00050,Apple and Peach,"
福島県は果物の産地としても有名で、その中でも特に桃とりんごは全国でも指折りの生産量を誇っています。ところで、ある販売用の英文パンフレットの印刷原稿を作ったところ、手違いでりんごに関する記述と桃に関する記述を逆に書いてしまいました。
 
あなたは、apple と peach を修正する仕事を任されましたが、なにぶん面倒です。１行の英文を入力して、そのなかの apple という文字列を全て peach に、peach という文字列を全てapple に交換した英文を出力するプログラムを作成してください。
 

"
p00051,Differential II,"
8 個の 0 から 9 までの数字を入力したとき、その 8 個の数字を並べ替えてできる、最大の整数と最小の整数の差を出力するプログラムを作成してください。並び替えてできる数は 00135569 のように 0 から始まってもよいものとします。
 

"
p00052,Factorial II,"
n! = n &times; (n &minus; 1) &times; (n &minus; 2) &times; ...  &times; 3 &times; 2 &times; 1

を n の階乗といいます。例えば、12 の階乗は

12! = 12 &times; 11 &times; 10 &times; 9 &times; 8 &times; 7 &times; 6 &times; 5 &times; 4 &times; 3 &times; 2 &times; 1 = 479001600

となり、末尾に 0 が 2 つ連続して並んでいます。
 
整数 n を入力して、n! の末尾に連続して並んでいる 0 の数を出力するプログラムを作成してください。ただし、n は 20000 以下の正の整数とします。
 

"
p00053,Sum of Prime Numbers,"
p(i) を小さい方から i 番目の素数とします。例えば、7 は、2, 3, 5, 7 と小さい方から 4 番目の素数なので、p(4) = 7 です。
 
n が与えられたとき、i = 1 から n までの p(i) の和 s

s = p(1) + p(2) + .... + p(n)

を出力するプログラムを作成してください。例えば、n = 9 のとき、s = 2 + 3 + 5 + 7 + 11 + 13 + 17 + 19 + 23 = 100 となります。
 

"
p00054,Sum of Nth decimal places,"
a, b, n は、いずれも正の整数であるとします。分数 a / b の小数第 i 位の数を f(i) とします (0 &le; f(i) &le; 9)。このとき、i = 1 から n までの f(i) の和を s とします。

s = f(1) + f(2) + ... + f(n)
 
a, b, n を読み込んで、 s を出力して終了するプログラムを作成してください。
 

"
p00055,Sequence,"
次のように定義されている数列があります。
 すべての偶数番目の項は一つ前の項に 2 を掛けたものと等しい数である。 すべての奇数番目の項は一つ前の項を 3 で割ったものと等しい数である。 
この数列の初項 a を読み込み、初項から第 10 項までの和 s(10) を出力するプログラムを作成してください。
 


"
p00056,Goldbach's Conjecture,"
4 以上の偶数は 2 つの素数の和で表すことができるということが知られています。これはゴールドバッハ予想といい、コンピュータの計算によりかなり大きな数まで正しいことが確かめられています。例えば、10 は、7 + 3、5 + 5 の 2 通りの素数の和で表すことができます。
 
整数 n を入力し、n を 2 つの素数の和で表す組み合わせ数が何通りあるかを出力するプログラムを作成してください。ただし、n は 4 以上、50,000 以下とします。また、入力される n は偶数であるとはかぎりません。
 

"
p00057,The Number of Area,"
無限に広い平面の上に、無限に長い直線を数本引くと、この平面はいくつかの領域に分割されます。たとえば、直線を１本引くと、平面は２つの領域に分割されます。同じ数の直線を引いても、引き方によって得られる領域の数は異なります。たとえば、2 本の直線を平行に引けば得られる領域は 3 つになり、互いに垂直に引けば得られる領域は 4 つになります。
 
n 本の直線を引くことで得られる最大の領域の数を出力するプログラムを作成してください。
 

"
p00058,Orthogonal,"
平面上の異なる 4 点、$a (x_a, y_a)$, $b (x_b, y_b)$, $c (x_c, y_c)$, $d (x_d, y_d)$ の座標を読み込んで、直線 $ab$ と $cd$ が直交する場合には yes、直交しない場合には no と出力するプログラムを作成してください。ここで、「直線」とは線分のことではありません。以下の図を参考にして下さい。
 

<!--
ただし、x_a, ya, xb, yb, xc, yc, xd, yd は、それぞれ -100 以上 100 以下の実数とします。
-->






"
p00059,Intersection of Rectangles,"
底辺が x 軸に対して平行な 2 つの長方形があります。長方形 a の左下の座標 (xa1, ya1) と右上の座標 (xa2, ya2)、長方形 b の左下の座標 (xb1, yb1) と右上の座標 (xb2, yb2) を読み込んで、長方形 a と長方形 b が一部でも重なっていれば yes を、まったく重なっていなければ no を出力するプログラムを作成してください。ただし、長方形 a と長方形 b は同じものではないとします。また、接しているものも重なっているとみなします。
 






"
p00060,Card Game,"
「1」から「10」までの数字が書かれたカードが各 1 枚、全部で 10 枚あります。このカードは、表側には数字が書かれ、裏側には何も書かれていません。このカードを使って、あなたと相手の 2 名で以下のルールでゲー ムを行います。
  あなたと相手には、表を上にして 1 枚、裏を上にして 1 枚、計 2 枚のカードが配られています。あなたは相手の表のカードの数字を見ることができますが、裏のカードの数字は見えません。
  配られたカードの数字の合計が 20 以下で、かつ相手の数字の合計より大きいときに勝ちとなります。
      例えば、あなたのカードが「7」「8」 (合計 15) 、相手のカードが「9」「10」 (合計 19) のときは、相手の勝ちです。
  あなたと相手は最大であと 1 枚カードを引くことができます。それを引かなくても構いません。
 
  ここで、あと 1 枚のカードを引くかどうかを決定する目安として、カードを引いたときに合計が 20 以下に なる確率を考え、その確率が 50% 以上のときはカードを引くこととしましょう。この確率を計算するときには、あなたの 2 枚のカードと相手の表のカードの計3枚のカードの情報を利用することができます。つまり、各カードは 1 枚ずつしかないので、それらのカードを引くことはないことになります。
 
あなたの 2 枚のカードと相手の表のカードを読み込んで、それぞれについて、あと 1 枚引いたときに合計が 20 以下になる確率が 50% 以上のときは yes、そうでないなら no を出力するプログラムを作成してください。
 



"
p00061,Rank Checker,"
時は2020 年。パソコン甲子園 2020 の予選結果を保存したデータがあります。このデータには、各チームに振られる整理番号と正解数が保存されています。参加者チーム数は不明ですが、かなり多い模様です（主催者のささやかな要望でもあります）。正解数の多いほうから順に 1 位、2 位 ... と順位をつけていくこととします。
 
時は2020 年。パソコン甲子園 2020 の予選結果を保存したデータがあります。このデータには、各チームに振られる整理番号と正解数が保存されています。ここでは、正解数で順位を決定するものとし、正解数の多いほうから順に 1 位、2 位 ... と順位をつけていくこととします。
 
予選結果のデータと整理番号をキーボードから入力して、その番号のチームの順位を出力するプログラムを作成してください。
 

"
p00062,What is the Bottommost?,"
次のような数字のパターンを作ることを考えます。
 
このパターンは以下の規則に従っています。
 
という数字の並びにおいて、c は a + b の 1 の位の数字である。たとえば、
 
では、9 + 5 = 14 の 1 の位の数字、すなわち 4 が 9 と 5 の斜め下に並べられます。また、
 
では、2 + 3 = 5 の 1 の位の数字、すなわち 5 が 2 と 3 の斜め下に並べられます。
 
一番上の行の 10 個の整数を読み込んで、一番下の行の 1 個の数を出力するプログラムを作成してください。
 

"
p00063,Palindrome,"
半角アルファベット文字列からなる、1 行あたり 100 文字以内のデータがあります。いくつかの行は対称（左端から読んでも右端から読んでも同じ）です。このデータを読み込んで、その中の対称な文字列の数を出力するプログラムを作成してください。なお、１文字だけからなる行は対称であるとします。
 

"
p00064,Secret Number,"
新しい暗証番号は覚えにくいものです。メモするのはダメといわれましたが、覚えられそうにありません。そこで文章の中に数値を埋め込んで暗証番号をメモすることにしました。ここでは全ての数値の和が暗証番号になります。
 
メモされた文章を読み込んで、暗証番号を出力するプログラムを作成してください。
 

"
p00065,Trading,"
取引先の顧客番号と取引日を月ごとに記録したデータがあります。今月のデータと先月のデータを読み込んで、先月から２ヶ月連続で取引のある会社の顧客番号と取引のあった回数を出力するプログラムを作成してください。ただし、月々の取引先数は 1,000 社以内です。
 

"
p00066,Tic Tac Toe,"
三目並べは，３ &times; ３のマス目の中に交互に ○ と × を入れていき、縦・横・斜めの何れかに一列 ○ か × が並んだときに、勝ちとなるゲームです（図1〜図3 を参照）
 
三目並べは、○と×が交互にマス目を埋めていき、どちらかが一列揃ったときにゲーム終了となります。そのため、図 4 のように、○と×が両方とも一列そろっている場合はありえない局面です。ありえない局面が入力されることはありません。
 
三目並べの盤面を読み込んで、勝敗の結果を出力するプログラムを作成して下さい。
 

"
p00067,The Number of Island,"
地勢を示す縦 12, 横 12 のマスからなる平面図があります。おのおののマスは白か黒に塗られています。白は海を、黒は陸地を表します。二つの黒いマスが上下、あるいは左右に接しているとき、これらは地続きであるといいます。この平面図では、黒いマス一つのみ、あるいは地続きの黒いマスが作る領域を「島」といいます。例えば下図には、5 つの島があります。
 
マスのデータを読み込んで、島の数を出力するプログラムを作成してください。
 

"
p00068,Enclose Pins with a Rubber Band,"
n 本の釘を平板上の座標 p1 (x1, y1), p2 (x2, y2), p3 (x3, y3),..., pn (xn, yn) に１本ずつ打ち、輪ゴムの輪の中に全ての釘が入るように 1 本の輪ゴムで囲みます。このとき、輪ゴムが交差してはいけません。
 
釘の座標を読み込んで、上記のように釘を輪ゴムで囲んだときに輪ゴムに接していない釘の本数を出力するプログラムを作成してください。輪ゴムは充分に伸び縮みするものとします。同じ座標に 2 本以上の釘を打つことはないものとします。また、輪ゴムがかかった釘と釘の間は直線で結ばれるものとし、その直線上に 3 本以上の釘が並ぶことはないものとします。例えば、図 1 に示すような入力はありえません。図 2 に示すように輪ゴムがかかっていない釘が 1 直線上に並ぶことはありえます。
 
ただし、それぞれの座標値は -1000.0 以上1000.0 以下の実数です。また、n は 3 以上 100 以下の整数です。
 


"
p00069,Drawing Lots II,"
縦線が n 本のあみだくじがあります。このあみだくじは以下の条件を満たしています。
 横線は真横に引きます。斜めに引くことはありません。 横線は必ず隣り合った縦線同士をつなぎます。つまり、横線が縦線をまたぐことはありません。 どの縦線についても同じ点から左右同時に横線が出ることはありません。つまり、横線が縦線を横切ることはありません。 当りはひとつだけです。 
下図 に n = 5 のときの、あみだくじの例を示します。上側の数字は縦線の番号(左から1, 2, 3, 4, 5 ) を表します。☆が当たりです。
 
縦線の本数 n、選んだ縦線の番号 m、あみだくじの当りの場所、各段における横線の有無を読み込んで、当りにたどり着けるかどうかの判定を出力するプログラムを作成してください。ただし、与えられたあみだくじの任意の位置に1 本だけ横線を付け加えることができるものとします（付け加えなくてもかまいません）。横線を1 本付け加えた後のあみだくじも前述の条件を満たしていなければなりません。
 

"
p00070,Combination of Number Sequences,"
0 から 9 までの整数を使った n 個の数の並び k1, k2, ..., kn を考えます。正の整数 n と s を読み込んで、

k1 + 2 &times; k2 + 3 &times; k3 + ... + n &times; kn = s 

となっているような n 個の数の並びが何通りあるかを出力するプログラムを作成してください。ただし、1 つの「n 個の数の並び」には同じ数が 2 回以上現われないものとします。
 

"
p00071,Bombs Chain,"
縦 8、横 8 のマスからなる図1 のような平面があります。その平面上に、いくつかの爆弾が置かれています。図2 にその例を示します（● = 爆弾）。
 
爆弾が爆発すると、その爆弾の上下左右 3 マスに爆風の影響が及び、それらのマスに置かれている爆弾も連鎖的に爆発します。たとえば、図 3 に示す爆弾が爆発すると図 4 の■のマスに爆風の影響が及びます。
 
爆弾が置かれている状態と最初に爆発する爆弾の位置を読み込んで、最終的な平面の状態を出力するプログラムを作成してください。
 

"
p00072,Carden Lantern,"
会津若松市は「歴史の町」として知られています。今から約 400 年前、蒲生氏郷により城下町の骨格が作られましたが、その後、徳川三代将軍家光公の異母弟「保科正之」公を藩祖とする会津藩 23 万石の中心都市として発展しました。今でも市内のいたるところに史跡や昔日の面影が残っているため、毎年、全国から多くの観光客が訪れています。
 
今年は、ｎｈｋ大河ドラマで「新選組！」が放送されているため、新選組ゆかりの地(*1)として、大幅に観光客が増加しています。そこで市では、市内に点在する史跡を結ぶ通り沿いに 100 m 間隔で灯篭を設置して飾りたてることにしました。灯篭を飾ってある通りを辿れば市内の全ての史跡に到達できるように設置することが条件ですが、一筆書きでたどれる必要はありません。しかし、予算が限られているので設置する灯篭の数を最小限にする必要があります。
 
史跡と史跡を結ぶ通りのデータを読み込んで、必要最小限の灯篭の数を出力するプログラムを作成して下さい。ただし、史跡と史跡の間の距離は 200 m 以上で、100 の倍数で与えられます。おのおのの史跡から一番近い灯篭までの距離は 100 m で、市内の史跡は 100 箇所以内です。史跡自身には灯篭を設置する必要はありません。
 
(*1) 新選組は会津藩御預という形で発足、白虎隊の悲劇で知られる会津戊辰戦争に参戦、市内天寧寺に土方歳三が近藤勇の墓を建立
 

"
p00073,Surface Area of Quadrangular Pyramid,"
1 辺が x の正方形を底面とする、高さ h の四角すいの表面積 s を出力するプログラムを作成して下さい。ただし、頂点と底面の中心を結ぶ線分は底面と直交しているとします。また、 x、h は 100 以下の正の整数とします。
 
複数のデータセットが与えられます。各データセットは以下の形式で与えられます。
 
x, h が共に 0 のとき入力の終了を示します。
 

"
p00074,Videotape,"
標準録画で 120 分のビデオテープがあります。テープを完全に巻き戻した状態でビデオデッキのカウンタを 00:00:00 にし、標準録画モードで録画したところ、あるカウンタ値になりました。このカウンタ値（時、分、秒）を入力し、残りのテープの長さ（録画可能時間）を求め、時：分：秒の形式で出力するプログラムを作成して下さい。
 
ただし、2 時間（120分）以内の入力とします。なお、テープ残量は標準録画モードと 3  倍録画モードの場合の２通りを計算し、出力例のように時、分、秒とも 2 桁ずつ出力します。また ""05"" のように 10 の位が 0 の場合は、""0"" をつけてください。
 


"
p00075,BMI,"
肥満は多くの成人病の原因として挙げられています。過去においては、一部の例外を除けば、高校生には無縁なものでした。しかし、過度の受験勉強等のために運動不足となり、あるいはストレスによる過食症となることが、非現実的なこととはいえなくなっています。高校生にとっても十分関心を持たねばならない問題になるかもしれません。
 
そこで、あなたは、保健室の先生の助手となって、生徒のデータから肥満の疑いのある生徒を探し出すプログラムを作成することになりました。
 
方法は bmi (body mass index) という数値を算出する方法です。bmiは次の式で与えられます。
 
bmi = 22 が標準的で、25 以上だと肥満の疑いがあります。
 
各々の生徒の体重、身長の情報から bmi を算出し、25 以上の生徒の学籍番号を出力するプログラムを作成してください。
 


"
p00076,Treasure Hunt II,"
蔵を片付けていたら、先祖の宝のありかへの行き方を記した古文書が見つかりました。この古文書にはおおよそ次のような事が書かれていました。
 
2 行目以降は、全く同じことが書かれていました。あなたは、宝を探そうと思いましたが、厄介なことに気がつきました。昔と違い建物が邪魔をしていて、まっすぐ井戸の方向をむこうにも井戸が見えなかったり 1m 直進しようにも直進できなかったりします。さらに、この古文書ときたら、1000 行近くあり、古文書どおりの作業をすることは、かなりの時間と体力が要ります。しかしながら、幸運なことに、あなたはコンピュータを利用することができます。
 古文書に書かれている行数 n を入力して、宝のありかを出力するプログラムを作成してください。ただし、 n は 2 以上 1,000 以下の正の整数とします。
 


"
p00077,Run Length,"
文字列が連続した場合、ある規則で文字を置き換え文字列を短くすることができます。たとえば、aaaa という文字列の場合、@4a と表現すれば 1 文字分圧縮されます。この規則で圧縮された文字列を入力してもとの文字列に復元するプログラムを作成してください。ただし、復元した文字列に＠文字は出現しないものとします。
 
また、原文の文字列は英大文字、英小文字、数字、記号であり 100 文字以内、連続する文字は 9 文字以内です。
 


"
p00078,Magic Square,"
 n × n の正方形のマス目の中に数字の１から n × n  が一つずつ入っていて、縦のどの列のマス目の和も、横のどの列のマス目の和も対角線のマス目の和も等しいものを魔方陣といいます。
 
一辺のマスの個数が奇数の魔方陣の作り方には以下の方法があります。
 中央のマス目のちょうど一つ下のマス目に１を入れる。 次の数字を右斜め下のマス目に入れる。ただし、数字を入れようとしたマス目が正方形からはみ出している場合、すでに数字が埋まっている場合は以下の方法に従って数字を入れるマス目を探す。 右にはみ出した場合には、同じ行の左はしに、左にはみ出した場合には、同じ行の右はしに、下にはみ出した場合には、同じ列の一番上に数字を入れる。
  数字を入れようとしたマス目が埋まっているときには、その埋まっているマス目の左斜め下のマス目に入れる。
 
この方法に従って、一辺のマス目の個数 n を入力として、その大きさの魔方陣を出力するプログラムを作成して下さい。ただし、n は 3 以上 15 以下の奇数とします。マス目に入る各数字は右詰 4 桁で出力してください。
 

"
p00079,Area of Polygon,"
凸 n 角形（すべての頂点の内角が 180 度未満である多角形、要するにへこんでいない多角形のこと）の頂点の座標を読んで、その面積を出力するプログラムを作成してください。頂点には辺のつながりの順序に従って頂点 1、頂点 2、頂点 3、‥‥頂点 n という名前がついています。
 
ただし、 n は 3 以上 20 以下とします。また、次の、三角形の 3 辺の長さ a, b, c から面積 s を求める公式を使ってもかまいません。
 






"
p00080,Third Root,"
$x^3 = q$ の解は漸化式 $x_{n+1} = x_n - \frac{x_{n}^3 - q}{3x_{n}^2}$ を計算していくことで近似的に求めることができます。 
$x_1$ に正の数 $\frac{q}{2}$ をいれ
 

$x_2 = x_1 - \frac{x_{1}^3 - q}{3x_{1}^2}$、$x_3 = x_2 - \frac{x_{2}^3 - q}{3x_{2}^2}$、…　と計算します。 
この計算をしながら、
 
$|x^3 - q|$ の値が、十分小さくなったところで、計算をやめ、最後に計算した $x_n$ を $x^3 = q$ の近似解とします。 


の解は漸化式 

 

を計算していくことで近似的に求めることができます。 
 に正の数 をいれ
 

 、 、…　と計算します。 
この計算をしながら、
 
 の値が、十分小さくなったところで、計算をやめ、最後に計算した を
 の近似解とします。 
この方法に従って、入力された正の整数 $q$ に対し、 $q$ の３乗根の近似値を出力するプログラムを作成してください。ただし、「十分小さくなった」という判定は $|x^3 - q| < 0.00001 q$ を用いてください。
 



"
p00081,A Symmetric Point,"
平面上の異なる 3 点 p1(x1,y1), p2(x2,y2), q(xq,yq) の座標の組を読み込んで、点 p1 点p2 を通る直線を対称軸として点 q と線対称の位置にある点 r(x,y) を出力するプログラムを作成してください。なお、点 q は、その対称軸上にないものとします。
 





"
p00082,Flying Jenny,"
遊園地にあるメリーゴーランドはご存じでしょう。大きな円盤の上に馬や馬車などの乗り物が固定されていて、円盤が回転すると同時に乗り物が上下に揺れる、定番の遊具です。ある遊園地のメリーゴーランドは、４人乗りの馬車が２台、２人乗りの車２台、１人乗りの馬が４台、計８台の乗り物が図１のような順序で備えられています。そして、遊園地においでのお客様は、図１に示す乗り場０〜７のどこかで待つようになっています。
 
この遊園地のメリーゴーランドは、かならず乗り物が乗り場にぴったりと合う位置に停止します。そして、０〜７のそれぞれで待っているお客さまは、目の前にとまった乗り物に乗ることになっています。急いで他の乗り場へ移動してそこから乗るということはできません。効率よく、お客さまにたのしんでいただくためには、メリーゴーランドの停止する位置をうまく調整して、乗れないお客さまをできるだけ少なくするようにしなければなりません。
 
乗り場０〜７で待っているお客さまの人数を読み込んで、どの位置にどの乗り物が来るように止めれば乗れないお客さまが最も少なくなるかを出力するプログラムを作成してください。


 


"
p00083,Era Name Transformation,"
西暦で表された年月日を、元号を用いた和暦に変換し、その年月日を出力するプログラムを作成してください。入力は例に示すように 3 つの整数であり、順に西暦年、月、日です。これを、出力例に示すように変換してください。なお、明治以前の年月日が入力された場合は「pre-meiji」と表示してください。
 
各年号の最初の年は「元年」ではなく「１年」と出力することとします。
 



元号期間
meiji1868. 9. 8	〜	1912. 7.29
taisho1912. 7.30	〜	1926.12.24
showa1926.12.25	〜	1989. 1. 7
heisei1989. 1. 8	〜




"
p00084,Search Engine,"
インターネットの検索エンジン、例えば、google などでは、世界中のウェブページを自動で収捨して分類し、巨大なデータベースを作成します。また、ユーザが入力した検索キーワードを解析して、データベース検索のための問い合わせ文を作成します。
 
いずれの場合も、効率的な検索を実現するために複雑な処理を行っていますが、とりあえずの基本は全て文章からの単語の切り出しです。
 
ということで、文章からの単語の切り出しに挑戦してください。今回は以下の通り、単語区切りが明確な英語の文章を対象とします。
 	対象となる文章　：　改行を含まない 1024 文字以下の英語の文章  	区切り文字 ：　いずれも半角で空白、ピリオド、カンマのみ 	切り出す単語　：　3 から 6 文字の単語（2文字以下や7文字以上の単語は無視）　 



"
p00085,Joseph's Potato,"昔、ヨセフのおイモというゲームがありました。n 人が参加しているとしましょう。参加者は中心を向いて円陣を組み、1 から順番に番号が振られます。アツアツのおイモがひとつ、参加者 n (左の図内側の大きい数字の 30 )に渡されます。おイモを渡された参加者は右隣の参加者にそのおイモを渡します。 m 回目に渡された人は右隣の人に渡して円陣から抜けます(左の図では m = 9 の場合を表しています) 。 回渡す毎に一人ずつぬけ、最後に残った人が勝者となり、おイモをいただきます。
 
n ,m が決まってから、実際におイモを渡し始める前にどこにいたら勝てるかわかるといいですよね。上の図は 30 人の参加者で 9 人ごとに抜けるというルールでこのゲームをした場合を書き表しています。内側の大きい数字が参加者に振られた番号、外側の小さい数字が抜ける順番です。それによると、9,18,27,6,16,26 という順番で円陣から抜け出し、最後には 21 が残ることになります。すなわち 21 が勝者となります(小さい数字が 30 になっています)。
 
ゲーム参加者数 n と円陣から抜け出す参加者の間隔 m を入力し、勝者の番号を出力するプログラムを作成してください。ただし、m, n &lt; 1000 とします。
 

"
p00086,Patrol,"
文久２（1862）年、会津の殿様が京都守護職を命ぜられました。京都守護職とは治安の悪化した幕末の京都を守る大切な役目です。幕府や他の藩と分担して市中をパトロールしなければなりません。ところがいざ分担ルートを決める段になって、家臣の中でも有名な頑固者の古老から以下のような注文がつきました。
 
大変なことになりました。殿様といえどもこの家臣の言い分を無視するわけにはいきません。分担ルートの選択によっては、「武士の面目が立たない」ということになってしまいます。
 
ということで、スタート地点、ゴール地点、交差点の情報を入力として、上の三つの条件を満たすかどうかを判定するプログラムを作って、殿様に献上してください。
 
スタート地点を 1、ゴール地点を2、その他の交差点を 3 以上の整数で表します。1つの道路は、その道が結ぶ1組の交差点番号で表します。なお、交差点の数は 100 以下とし、全ての交差点からスタート地点およびゴール地点への経路がそれぞれ一つ以上あるものとします。
 

"
p00087,Strange Mathematical Expression,"博士 : ピーター君、ついにやったよ。 ピーター : またですか。今度はどんなくだらない発明ですか。 博士 : ついに数式を計算機で処理する画期的な方法を思いついたんだ。この表をみてごらん。
 ピーター : はぁ。 博士 : ふっふっふ。これだけでは、未熟者の君には何のことだかわからないだろうねえ。ここからが肝心なんじゃ。 ピーター : っていうか・・・。 博士 : 計算機にはスタックというデータ構造があることは君も知っているね。ほれ、「先入れ後出し」のあれじゃよ。 ピーター : はい。知ってますが、あの・・・。 博士 : この画期的な記法はあのスタックを使うんじゃ。例えばこの 10 2 12 - / だが、次のように処理する。
 博士 : どうじゃな。括弧も演算子の優先順位も気にする必要がないじゃろう？語順も「10 を 2 から 12 を引いたもので割る。」となり、何となく彼の極東の島国の言葉、日本語と似ておるじゃろうて。
       この画期的な発明さえあれば、我が研究室は安泰じゃて。ファファファ。 ピーター : っていうか博士。これって日本にいたとき会津大学の基礎コースで習いましたよ。「逆ポーランド記法」とかいって、みんな簡単にプログラムしてました。 博士 : ・・・。 
ということで、ピーター君に変わって博士に、このプログラムを教える事になりました。「逆ポーランド記法」で書かれた数式を入力とし、計算結果を出力するプログラムを作成してください。
 


"
p00088,The Code A Doctor Loved,"
博士 : ピーター君、ついにやったよ。
ピーター : どうしました、デビッド博士？またくだらない発明ですか？
博士 : この表だよ、この表。
 
ピーター : なんですか? この表は。
博士 : いいから、言う通りにしてみなさい。まず、お前の名前を紙に書いてごらん。
ピーター : はい""peter potter"" っと。
博士 : そうしたら、１文字ずつ、この表の「符号」に置き換えるのだよ。
ピーター : えーと""p"" を「111」にして""e"" を「110」して…結構面倒ですね。
 
           になりました。なんだか、バーコードみたいですね。
博士 : よろしい。そうしたら、置き換えた文字列を全部つなげて、５文字ごとに区切ってみなさい。
ピーター : はいはい、つなげて区切ると。
 
           こんな感じになりました。けど、最後の「0」だけのやつはどうしますか?
博士 : ０を付け加えて５文字にしておいてくれ。
ピーター : えーと最後が０が1個だけだから０をあと４つ加えてやればいいんですね。できました。
 
博士 : 次はこの表を使うのだ。
 
ピーター : これをどう使うんですか…そうか!今度は符号から文字に置き換えるのか!
博士 : そうそう。「11111」だったら「?」に、「00011」だったら「d」にとやってゆけばいいんだよ。
ピーター : これは単純ですね……えーと「?d-c'kopua」になりました。でも意味不明ですよ。
博士 : 文字数を数えてごらん。
ピーター : １０文字ですよ。あっ、「peter potter」は１２文字だったのに２文字減っています。
博士 : そう、この表を使えば文字を減らすことができるのだよ。じゃあ今度はこの文章で同じことをやっ
       てごらん。
 
ピーター : ぎょぎょ、行が分かれていますが、どうするんですか?
博士 : 紙の都合で３行になってしまったが、改行文字のかわりに空白がある長い１行だと思っておくれ。
ピーター : はいはい。行と行の間にあるのは空白だと。しかし面倒だな……。
博士 : だったらプログラムにやらせればいいではないか。
 
ということで、ピーターの代わりに、読み込んだ文字列を符号に変換し出力するプログラムを作成してください。
 


"
p00089,The Shortest Path on A Rhombic Path,"
図１に例示するように整数（0 以上 99 以下）をひしがたに並べます。このような、ひしがたを表すデータを読み込んで、一番上からスタートして一番下まで次のルールに従って進むとき、通過する整数の和の最大値を出力するプログラムを作成してください。
 各ステップで、対角線上の左下か対角線上の右下に進むことができます。 
例えば図1の例では、図2に示すように、7,3,8,7,5,7,8,3,7を選んで通ったとき、その和は最大の 55 （7+3+8+7+5+7+8+3+7=55） となります。
 

"
p00090,Overlaps of Seals,"
1 辺の長さが 10 の正方形の折り紙に半径 1 の円形のシールを n 枚貼ります。シールは重ねて貼ることができます。シールを貼る位置の座標を読み込んで、折り紙上でもっとも多くシールが重なっている場所(シールが１枚だけでも""重なっている""とする)でのシールの枚数を出力するプログラムを作成してください。
 折り紙の左下を原点とした x, y 座標を与えます。この x, y を円の中心としてシールを貼ることとします。円の中心が折り紙の外に出ることはありません。また、同一座標に複数のシールが貼られることはありません。
 

"
p00091,Blur,"
図 1 のような 10×10 のマス目の「布」があり、（1，2）のようにx座標・y座標の値の対でマス目を示すことにします。座標値は 0 から始まる整数とします。例えば、図 1 の◎の座標は (1, 2) です。
この「布」に染料を少しずつたらして染物を作ります。たらす染料の滴には「大」「中」「小」の 3 サイズがあり、染料の滴の落ちたマス目を中心に図 1 のように周囲も色がつきます。図 1 で☆が中心、○が色のにじむ範囲です。
 
「布」は、最初は「まっしろ」つまり、どのマス目も色の濃さを示す値が 0 とします。染料の滴が落ちるごとに値が 1 ずつ増えていきます。「小」が（1, 2）、「中」が（3, 2）に落ちた場合、各マス目の値は図 2 の左のようになります。染料がもったいないので、図 2 の右に示すようなにじむ範囲が布の外にはみ出すような染料の落とし方はしないことになっています。また、同じ場所に複数の染料をたらすこともあります。
 
このような作業を何回か繰り返した結果、布にすばらしい模様が浮かび上がりましたが、残念なことに、うっかり作業経過を記録し忘れてしまいました。どうにもさっぱり思い出せませんが、かろうじて、落とした染料の滴数は覚えていました。あなたは、すばらしい染物を再現しなければなりません。すばらしい染物のデータを読みこんで、どこに、どのような染料をたらしたかを出力するプログラムを作成してください。なお、落とした染料の滴数は 12 以下とします。
 


"
p00092,Square Searching,"
縦に n 行、横に n 列並べられた、合計  n &times; n のマス目があります。いくつかのマス目には印がついています。各マス目の印の状態を読み込み、印のついていないマス目だけからなる最大の正方形の辺の長さを出力として表示するプログラムを作成してください。
 
たとえば各データセットで以下のようなデータが与えられます。
 
入力データの一行が、一行のマス目を表現します。入力データの文字列のうち、.（ピリオド）は印のついていないマス目、*（アスタリスク）は印のついているマス目を示しています。
 
上記の例では、下図の 0 で示される正方形が最大となります。
 よって、5 と出力すれば正解になります。 なお、すべてのマス目に印がついている場合には、0 を出力してください。 

"
p00093,Leap Year,"
 西暦 a 年から b 年までの間にあるすべてのうるう年を出力するプログラムを作成してください。
 
 うるう年の条件は、次のとおりとします。ただし、0 &lt; a &le; b &lt; 3,000 とします。与えられた期間にうるう年がない場合には ""na""と出力してください。
  西暦年が 4 で割り切れる年であること。  ただし、100 で割り切れる年はうるう年としない。  しかし、400 で割り切れる年はうるう年である。 


"
p00094,Calculation of Area,"
土地の面積を表現する「○○坪」という単位を聞いたことはないでしょうか？ 古来、１人の武士が１日に食べるお米を作る面積を言いました。
 
a［m］&times; b［m］の土地があります。a と b を入力し、その土地の坪面積 s［坪］を出力するプログラムを作成してください。 1 坪 = 3.305785 [m2] とし、a と b は 100 以下の整数とします。 
 


"
p00095,Surf Smelt Fishing Contest,"
桧原湖でワカサギ釣り大会が行われました。一番多くのワカサギを獲得した人が優勝者です。
 
参加者番号と釣った匹数のリストを読み込み、優勝者の番号と釣った匹数を出力するプログラムを作成してください。優勝者が複数いる場合は、その中で参加者番号が最も小さい一人を出力してください。 
 

"
p00096,Sum of 4 Integers II,"
4,000 以下の正の整数 n を入力し、0 〜 1000 の範囲の整数 a, b, c, d の組で を満たすものの組み合わせ数を出力するプログラムを作成して下さい。 

"
p00097,Sum of Integers II,"
0 から 100 の数字から異なる n 個の数を取り出して合計が s となる組み合わせの数を出力するプログラムを作成してください。n 個の数はおのおの 0 から 100 までとし、１つの組み合わせに同じ数字は使えません。たとえば、n が 3 で s が6 のとき、3 個の数字の合計が 6 になる組み合わせは、
 
の 3 通りとなります。
 

"
p00098,Maximum Sum Sequence II,"
与えられた整数の行列
 
で、縦・横方向に１つ以上連続した項（部分行列）の和の最大値を出力して終了するプログラムを作成して下さい。
 

"
p00099,Surf Smelt Fishing Contest II,"
桧原湖でワカサギ釣り大会が行われました。今回はキャッチ＆リリースが推奨されているようです。
 
参加者番号と釣った匹数またはリリースした匹数を１つのイベントとして順番に読み込み、各イベントの直後に最も多くのワカサギを手元に獲得している参加者番号と匹数を出力するプログラムを作成してください。最も多く獲得している参加者が複数いる場合（あるいは全ての参加者が 0 匹の場合）は、その中で参加者番号が最も小さい一人を出力してください。
 

"
p00100,Sale Result,"
there is data on sales of your company. your task is to write a program which identifies good workers.
 
the program should read a list of data where each item includes the employee id i, the amount of sales q and the corresponding unit price p. then, the program should print ids of employees whose total sales proceeds (i.e. sum of p &times; q) is greater than or equal to 1,000,000 in the order of inputting. if there is no such employees, the program should print ""na"". you can suppose that n &lt; 4000, and each employee has an unique id. the unit price p is less than or equal to 1,000,000 and the amount of sales q is less than or equal to 100,000.
 


"
p00101,Aizu PR,"
an english booklet has been created for publicizing aizu to the world.
when you read it carefully, you found a misnomer (an error in writing) on the last name of masayuki hoshina, the lord of the aizu domain. the booklet says ""hoshino"" not ""hoshina"".
 
your task is to write a program which replace all the words ""hoshino"" with ""hoshina"". you can assume that the number of characters in a text is less than or equal to 1000.
 

"
p00102,like Computation,"
your task is to develop a tiny little part of spreadsheet software.
 
write a program which adds up columns and rows of given table as shown in the following figure:



 






"
p00103,Baseball Simulation,"
ichiro likes baseball and has decided to write a program which simulates baseball. 
the program reads events in an inning and prints score in that inning. there are only three events as follows:
 single hit put a runner on the first base. the runner in the first base advances to the second base and the runner in the second base advances to the third base. the runner in the third base advances to the home base (and go out of base) and a point is added to the score. home run all the runners on base advance to the home base. points are added to the score by an amount equal to the number of the runners plus one. out the number of outs is increased by 1. the runners and the score remain stationary. the inning ends with three-out. 
ichiro decided to represent these events using ""hit"", ""homerun"" and ""out"", respectively.
 write a program which reads events in an inning and prints score in that inning. you can assume that the number of events is less than or equal to 100.
 

"
p00104,Magical Tiles,"
there is a magic room in a homestead. the room is paved with h &times w tiles. there are five different tiles:
 tile with a east-pointing arrow tile with a west-pointing arrow tile with a south-pointing arrow tile with a north-pointing arrow tile with nothing 
once a person steps onto a tile which has an arrow, the mystic force makes the person go to the next tile pointed by the arrow. if the next tile has an arrow, the person moves to the next, ans so on. the person moves on until he/she steps onto a tile which does not have the arrow (the tile with nothing). the entrance of the room is at the northwest corner.
 
your task is to write a program which simulates the movement of the person in the room. the program should read strings which represent the room and print the last position of the person.
 
the input represents the room as seen from directly above, and up, down, left and right side of the input correspond to north, south, west and east side of the room respectively. the horizontal axis represents x-axis (from 0 to w-1, inclusive) and the vertical axis represents y-axis (from 0 to h-1, inclusive). the upper left tile corresponds to (0, 0).
 
the following figure shows an example of the input:
 
characters represent tiles as follows:
 
if the person goes in cycles forever, your program should print ""loop"". you may assume that the person never goes outside of the room.
 

"
p00105,Book Index,"
books are indexed. write a program which reads a list of pairs of a word and a page number, and prints the word and a list of the corresponding page numbers.
 
you can assume that a word consists of at most 30 characters, and the page number is less than or equal to 1000. the number of pairs of a word and a page number is less than or equal to 100. a word never appear in a page more than once.
 
the words should be printed in alphabetical order and the page numbers should be printed in ascending order.
 
 本の最後には索引が設けられています。本の中から抽出された「語句」と「ページ番号」の組を読み取り、本の索引として「語句」とその語句が表れる「ページ番号のリスト」を出力して終了するプログラムを作成して下さい。ただし、1つの語句の長さは30文字以内とし、ページ番号は1,000以下とします。入力に含まれる語句とページ番号の組は100以下とし、1つの語句は同じページ番号に複数回現れないものとします。また、出力に関しては、語句の順番はアルファベット順とし、ページ番号は小さい順(昇順)とします。
 
-->

"
p00106,Discounts of Buckwheat,"
aizu is famous for its buckwheat. there are many people who make buckwheat noodles by themselves.
 
  one day, you went shopping to buy buckwheat flour. you can visit three shops, a, b and c. the amount in a bag and its unit price for each shop is determined by the follows table. note that it is discounted when you buy buckwheat flour in several bags.
 
 for example, when you buy 12 bags of flour at shop a, the price is reduced by 20 % for 10 bags, but not for other 2 bags. so, the total amount shall be (380 &times; 10) &times; 0.8 + 380 &times; 2 = 3,800 yen.
 
  write a program which reads the amount of flour, and prints the lowest cost to buy them. note that you should buy the flour of exactly the same amount as the given input.
 

"
p00107,Carry a Cheese,"
jerry is a little mouse. he is trying to survive from the cat tom. jerry is carrying a parallelepiped-like piece of cheese of size a &times; b &times; c. it is necessary to trail this cheese to the jerry's house. there are several entrances in the jerry's house. each entrance is a rounded hole having its own radius r. could you help jerry to find suitable holes to be survive?

 
your task is to create a program which estimates whether jerry can trail the cheese via each hole.
the program should print ""ok"" if jerry can trail the cheese via the corresponding hole (without touching it). otherwise the program should print ""na"".
 
you may assume that the number of holes is less than 10000.
 


"
p00108,Operation of Frequency of Appearance,"
有限数列の変換操作に出現頻度操作というものがあります。数列 $s = \{s_1, s_2,... s_n\}$ の変換結果は同じ長さの数列となります。その結果を $c = \{c_1,c_2, ..., c_n\}$ とすると、 $c_i$ は数列 $s$ における $s_i$ の個数を表します。
 
  例えば $s = \{3,4,1,5,9,2,6,5,3\}$ ならば $c = {2,1,1,2,1,1,1,2,2}$ となります。さらにこの数列 $c$ に出現頻度操作を行うと $p = \{4,5,5,4,5,5,5,4,4\}$ を得ます。この数列は出現頻度操作で変わることがありません。このような数列 $p$ を数列 $s$ の不動点と呼びます。どのような数列に対しても出現頻度操作を繰り返せば、その不動点を求めることが出来るということが知られています。
 
 下の例は出現頻度操作の手順を示したものです。1 行目を数列 $s$ 、2 行目を数列 $c$、最終行を数列 $p$ とします。数列 $s$ の最初の要素($s_1 = 2$) と同じ数は 3 個あるので数列 $c$ の最初の要素 $c_1$ は 3、次の要素 ($s_2 = 7$) と同じ数は 2 個あるので $c_2 = 2$、といった具合に個数を数え $c_i$ を求めていきます。
 
 数列の長さ $n$ と数列 $s$ を入力し、不動点の数列 $p$ および、$p$ を得るために実行した出現頻度操作の最小の回数を出力するプログラムを作成してください。
 

"
p00109,Smart Calculator,"
your task is to write a program which reads an expression and evaluates it.
 the expression consists of numerical values, operators and parentheses, and the ends with '='. the operators includes +, - , *, / where respectively represents, addition, subtraction, multiplication and division.  precedence of the operators is based on usual laws. that is one should perform all multiplication and division first, then addition and subtraction. when two operators have the same precedence, they are applied from left to right.
 you may assume that there is no division by zero. all calculation is performed as integers, and after the decimal point should be truncated length of the expression will not exceed 100. -1 &times 109 &le; intermediate results of computation &le; 109 



"
p00110,Alphametic,"
 数式の一部を隠してしまって、隠した数字を探す問題を覆面算といいます。今回は、数式の中のある数字のいくつかを x で隠してしまった式を扱います。以下の数式を入力して、結果を出力するプログラムを作成してください。
   数式 「数字列 + 数字列 = 数字列」の形で、1 行の単純な足し算式です。  「数字列」は、数字 0 から 9 と文字 x の並びです。  「数字列」は、8 桁以下の整数を表すものとします。  2 桁以上の「数字列」の左端の数字は 0 ではないものとします。   x は、数式全体の中で必ず 1 つ以上含まれます。   結果   覆面算の答えです。数式が成り立つ様な x の値で 0 ~ 9 のどれか 1 つです。2 つ以上の答えはないものとします。   答えがない場合、結果は“na”としてください。 



"
p00111,Doctor's Memorable Codes,"
博  士 : ?d-c'kopua
 
ピーター : どうしたんですか、デビッド博士? わけのわからないことを叫ぶのにはもう慣れましたが、
        今日は文章にすらなっていませんよ。
 
博  士 : ほれ。
 
ピーター : なんですか? この表は......ああ、予選の問題にこんなのがありました。表を使って文字を置き換え
       ると文字数が減るんですよね。まさか予選と本選で同じ問題を出して手を抜こうって気じゃないでし
       ょうね。
 
博  士 : 逆じゃよ。
 
ピーター : 逆? なるほど、今度は短くした文字列を元に戻そうって問題ですか。ということは「?d-c'kopua」の
      文字を、この表を使って「文字」から「符号」に置きかえるんですね......できましたよ。
 

博  士 : うむ。次はこれじゃ。
 
ピーター : そうそう、こんな表もありましたね。これを逆に使うんだから「符号」から「文字」に置き換えればいい
          んですね。でも、最初は「11111」ですが表にありませんよ?
 
博     士 : そういうときは、もっと短くするか、後ろとつなげるかしてみるのだよ。
 
ピ ー タ ー : じゃあ短くして......あ、 「111」ならあります。じゃあ最初は「p」ですね。そうすると残りは「11」ですが、
            これはぴったり合うのがないから次の「00011」から 1 文字借りて「110」にすればいいんですね。
 
博     士 : そうそう。つまり「e」だね。
 
ピ ー タ ー : それで残るのが「0011」なので、これも次から借りて「00111」にして「t」と......。全部できました。最
          後の「0000」は捨てちゃえばいいんですよね?
 
博     士 : そうじゃ、よろしい。次はこれじゃ。
 
博     士 : さらにこれじゃ。
 
博     士 : 仕上げにこうじゃ。
 
ピ ー タ ー : しっかし面倒だなあ。博士、今度は自分でプログラムを作って下さいよ。
 
  ということで、博士のかわりに、上の文章を置き換えるプログラムを作成してください。
 


"
p00112,A Milk Shop,"
 鈴木さんは会津地域に新しく搾りたてミルクの移動販売のお店を開きました。その日買い求めに来るお客さんは全員持ち帰るためのボトルを持って既にお店に並んでいて、それ以上増えないものとします。お客さんはそれぞれ1回だけしか注文しません。タンクの蛇口が一つしかないので、一人ずつ順番に販売しなければなりません。そこで、鈴木さんはなるべく並んでいるお客さんの待ち時間を少なくしたいと考えています。
 
 お客さんの人数とお客さんが牛乳を注ぎきるのに要する時間が入力として与えられます。あなたはお客さんの「一人一人の待ち時間の合計」(以下「待ち時間の合計」とする)を最小にするための注文の順序を鈴木さんに代わって調べ、そのときの「待ち時間の合計」を出力して終了するプログラムを作成してください。ただし、お客さんは 10,000 人以下で 1 人あたりに要する時間は 60 分以下とします。
 
 例えば、お客さんの人数が 5 人で、各お客さんが要する時間が順に 2,6,4,3,9 分の場合、そのままの順序だと「待ち時間の合計」は 37 分になります。次の例では、最初の列の順の 2 人目と 3 人目を入れ替えています。この場合、「待ち時間の合計」は 35 分になります。最適な順序だと 31 分で済みます。
 
2 人目と 3 人目を入れ替えた例
 


待ち時間
1 人目 2 分   0 分
2 人目 4 分   2 分
3 人目 6 分   6 分
4 人目 3 分  12 分
5 人目 9 分  15 分
            35 分 ← 「待ち時間の合計」



"
p00113,Period,"
 2 つの正の整数 p, q を入力し、 p / q を小数として正確に表現することを考えます。(ただし、0 &lt; p &lt; q &lt; 106とします。)
 
 このとき、結果は
  有限の桁で正確に表現できる。 ある桁の範囲を繰り返す循環小数となる。 
 のいずれかとなります。筆算と同じ手順で1桁ずつ小数部を求めていくと、
  割り切れた(余りが 0 になった)なら、そこまでの桁で正確に表現できた。  1度出てきた余りが、再び現れたなら、循環した。 
 と区別できます。
 
 2 つの整数 p, q を入力すると、 p / q を小数で表した時の、小数部を出力するプログラムを作成してください。 ただし、
  結果が有限の桁で正確に表現できる時は、数値だけを 1 行に出力してください。 最初の行に、循環する部分までの数字を出力してください。 次の行には、循環しない部分の下には空白を出力し、循環する部分の下には「^」を出力してください。 
      
  いずれの場合も数字列は 80 文字を超えることはないものとします。 



"
p00114,Fly,"
 ある計算機学者が電子空間に棲息する電子蝿という奇妙な生命体を見つけました。電子蝿の行動を観察しているうちに、この空間の (x, y, z) 地点にいる電子蝿は、次に以下の規則で示される (x', y', z')に移動することが分かりました。
 
 ただし、a1, m1, a2, m2, a3, m3 は電子蝿の個体ごとに定まる正の整数です。a mod b は正の整数 a を正の整数 b で割ったときの余りです。
 
 さらに観察をすると、ある種の電子蝿は (1,1,1) に置いてからしばらくすると、必ず (1,1,1) に戻ってくることがわかりました。このような蝿を戻り蝿と名付けました(1) 。
 
戻り蝿のデータを入力とし、(1,1,1) に戻ってくる最小の移動回数 (&gt;0) を出力するプログラムを作成してください。なお 1&lt; a1, m1, a2, m2, a3, m3 &lt; 215 とします。

 
(1)  a1 と m1, a2 と m2, a3 と m3 がそれぞれ互いに素 (公約数が 1) である時に戻ります。
 

"
p00115,Starship UAZ Advance,"
 恒星歴 2005.11.5。あなたは宇宙船 uaz アドバンス号の艦長として敵の宇宙船と交戦しようとしています。 幸い敵の宇宙船はまだこちらに気付かずに静止しています。また、すでに敵の宇宙座標は判明しており強力な直線のビームを放つ「フェザー砲」は発射準備を完了しています。あとは、発射命令を出すばかりです。
 
ところが、宇宙空間には、敵の設置したエネルギーバリアが存在しています。バリアは三角形をしており「フェザー砲」のビームをはね返してしまいます。また、ビームがバリアに当たれば敵に気付かれて逃げられてしまいます。事前に命中すると判定できなければ、発射命令は出せません。
 
そこで、uaz アドバンス号、敵、バリアの位置の宇宙座標(3次元座標 x, y, z) を入力して、ビームがバリアをさけて敵に命中する場合は ""hit""、バリアに当たってしまう場合""miss""と出力するプログラムを作成してください。
 
 ただし、バリアはアドバンス号から 3 角形に見えるものだけが対象であり、線分につぶれて見えるものはないものとします。また、バリアは 3 角形の頂点を含む境界でも有効であり、ビームをはね返すものとします。また、敵がバリア内にいる場合は""miss""と出力して下さい。
 
 恒星歴 2005.11.5。あなたは宇宙船 uaz アドバンス号の艦長として敵の宇宙船と交戦しようとしています。 幸い敵の宇宙船はまだこちらに気付かずに静止しています。また、すでに敵の宇宙座標は判明しており強力な直線のビームを放つ「フェザー砲」は発射準備を完了しています。あとは、発射命令を出すばかりです。
 
ところが、1つだけ困ったことが判明しました。宇宙空間には、敵の設置したエネルギーバリアが存在している
のです。バリアは三角形をしており「フェザー砲」ビームをはね返してしまいます。また、ビームがバリアに当たれ
ば敵に気付かれて逃げられてしまいます。事前に命中すると判定できなければ、発射命令は出せません。
 
 そこで、uaz アドバンス号、敵、バリアの位置の宇宙座標(3次元座標 x, y, z )を入力して、「フェ
ザー砲」がバリアをさけて敵に命中する場合は“hit”、バリアに命中してはね返されてしまう場合“miss”と出力し
て終了するプログラムを作成してください。
 
 ただし、バリアはアドバンス号から 3 角形に見えるものだけが対象であり、線分につぶれて見えるものはないも
のとします。また、バリアは 3 角形の頂点を含む境界でも有効であり、ビームをはね返すものとします。
 
-->

"
p00116,Rectangular Searching,"
 縦に h 行、横に w 列並べられた、合計 w &times; h のマス目があります。いくつかのマス目には印がついています。各マス目の印の状態を読み込み、印のついていないマス目だけからなる最大の長方形の面積を出力するプログラムを作成してください。 
 
入力データは 1 行 w 文字から構成され、h 行が与えられます。たとえば以下のようなデータが与えられます。
 
 入力データの一行が、一行のマス目を表現します。入力データの文字列のうち、. (ピリオド) は印のついていないマス目、* (アスタリスク) は印のついているマス目を示しています。入力データの文字列には、ピリオド、アスタリスク、改行以外の文字は含まれません。
 
 上記の例では、下図の 0 で示される長方形が最大となります。
 
よって、35 と出力すれば正解になります。なお、すべてのマス目に印がついている場合には、0 を出力してください。
 


"
p00117,A reward for a Carpenter,"
ある日、殿様は一人の大工に、「台風や地震が来たときに町人が避難できる、頑丈で大きな建物を造りなさい。」と命じました。しかし、その頑丈で大きな建物を完成させるには、大きな太い柱が必要です。町にそんな大きな柱はありません。そこで、大工は遠くの山里まで大きな柱を調達しに行くことになりました（大工は町から里山に行って、町に戻ってくる必要があります）。
 
大工の褒美は、殿様から受け取ったお金から柱の代金と交通費を差し引いた余りです。下の地図のように、山里に行くには、いろいろな町を通るたくさんの街道があり、2つの町をつなぐ街道はそれぞれ交通費が違います。大工の褒美を最大にするにはどのように街道をたどり調達すればよいでしょうか。最大となる大工の褒美を出力するプログラムを作成してください。ただし、町の数を n とすれば、各町は 1 から n までの整数で識別されます。2 つの町を直接つなぐ街道は 2 本以上ありません。
 
※ 矢印上の数字は、その方向に行くための交通費を示します。 
 

"
p00118,Property Distribution,"
 タナカ氏が hw アールの果樹園を残して亡くなりました。果樹園は東西南北方向に h &times; w の区画に分けられ、区画ごとにリンゴ、カキ、ミカンが植えられています。タナカ氏はこんな遺言を残していました。
 
      果樹園は区画単位でできるだけ多くの血縁者に分けること。ただし、ある区画の東西南北どれかの方向にとなりあう区画に同じ種類の果物が植えられていた場合は、区画の境界が分からないのでそれらは 1 つの大きな区画として扱うこと。
 
 例えば次のような 3 &times; 10 の区画であれば ('リ'はリンゴ、'カ'はカキ、'ミ'はミカンを表す)
 
同じ樹がある区画の間の境界を消すと次のようになり、
 
 結局 10 個の区画、つまり 10 人で分けられることになります。
 
雪が降って区画の境界が見えなくなる前に分配を終えなくてはなりません。あなたの仕事は果樹園の地図をもとに分配する区画の数を決めることです。
 
果樹園の地図を読み込み、分配を受けられる血縁者の人数を出力するプログラムを作成してください。
 


"
p00119,Taro's Obsession,"
 まんじゅう好きの太郎くんの家でたいへんな事件がおきました。和室の仏壇に供えてあった3つのまんじゅうのうち1つが無くなっていたのです。いつかはおやつにいただこうと狙っていた太郎くんが犯人を見つけるため捜査を始めると、その日、和室に入った人が何人もいることが分かりました。そこで、これらの容疑者が部屋に入った順序を調べるため、全員に次のような形式の証言をしてもらうことにました。
 
 容疑者 a の証言 「私は容疑者 b より先に部屋に入った。」
 
 容疑者の一人(?)は三毛猫のタマなので証言はできませんが、幸運にも最後に部屋に入ったところを太郎くんは見ていました。
 
 太郎くんはこれらの証言から、部屋に入った順番を推測して捜査に役立てることにしました。
 
 例えば、6 人の容疑者がいてタマを容疑者 2 とした場合、以下のような証言が得られたとします。
 
 容疑者 5 の証言 「私は 2 より先に部屋に入った。」
 容疑者 1 の証言 「私は 4 より先に部屋に入った。」
 容疑者 3 の証言 「私は 5 より先に部屋に入った。」
 容疑者 4 の証言 「私は 2 より先に部屋に入った。」
 容疑者 1 の証言 「私は 6 より先に部屋に入った。」
 容疑者 6 の証言 「私は 4 より先に部屋に入った。」
 容疑者 3 の証言 「私は 4 より先に部屋に入った。」
 
 この証言をつなぎ合わせると、部屋に入った順序は
 3→5→1→6→4→2 1→6→3→4→5→2 3→1→6→5→4→2 
   など、何通りかの可能性に絞り込むことができます。
 
タマ (容疑者 2) 以外の容疑者全員の証言から、部屋に入った順番を推測し、可能性のある順番の 1 つを出力するプログラムを作成してください。ただし、複数の証言をする容疑者がいるかもしれませんが、どの証言も真実であり矛盾していないものとします。
 

<!--
ただし、容疑者の人数を m とすると m は 20 以下であり、容疑者は 1 から m までの整数で識別されます。証言の数は 100 以下とします。また、複数の証言をする容疑者がいるかもしれませんが、どの証言も真実であり矛盾していないものとします。
-->


"
p00120,Patisserie,"
 ケーキ屋さんが、まちまちな大きさのロールケーキをたくさん作りました。あなたは、このケーキを箱に並べる仕事を任されました。
 
ロールケーキはとてもやわらかいので、他のロールケーキが上に乗るとつぶれてしまいます。ですから、図(a) のように全てのロールケーキは必ず箱の底面に接しているように並べなければなりません。並べ替えると必要な幅も変わります。
 
n 個のロールケーキの半径 r1, r2, ...,  rn と箱の長さを読み込み、それぞれについて、箱の中にうまく収まるかどうか判定し、並べる順番を工夫すると箱に入る場合は ""ok""、どう並べても入らない場合には ""na""を出力するプログラムを作成してください。
 
ロールケーキの断面は円であり、箱の壁の高さは十分に高いものとします。 ただし、ロールケーキの半径は 3 以上 10 以下の整数とします。つまり、ケーキの半径に極端な差はなく、図(b) のように大きなケーキの間に小さなケーキがはまり込んでしまうことはありません。
 



"
p00121,Seven Puzzle,"
7 パズルは 8 つの正方形のカードとこれらのカードがぴたりと収まる枠で構成されています。それぞれのカードには、互いに区別できるように 0, 1, 2, ..., 7 と番号がつけられています。枠には、縦に 2 個、横に 4 個のカードを並べることができます。
 
7 パズルを始めるときには、まず枠にすべてのカードを入れます。枠のなかで 0 のカードだけは、上下左右に隣接するカードと位置を交換することができます。たとえば、枠の状態が図(a) のときに、0 のカードの右に隣接した、7 のカードと位置を交換すれば、図(b) の状態になります。あるいは、図(a) の状態から 0 のカードの下に隣接した 2 のカードと位置を交換すれば図(c) の状態になります。図(a) の状態で 0 のカードと上下左右に隣接するカードは 7 と 2 のカードだけなので、これ以外の位置の入れ替えは許されません。
 
ゲームの目的は、カードをきれいに整列して図(d) の状態にすることです。最初の状態を入力とし、カードをきれいに整列するまでに、必要な最小手数を出力するプログラムを作成してください。ただし、入力されたカードの状態からは図(d) の状態に移ることは可能であるとします。
 
   入力データは、1 行に 8 つの数字が空白区切りで与えられます。これらは、最初の状態のカードの並びを表します。例えば、図(a) の数字表現は0 7 3 4 2 5 1 6 に、図(c) は 2 7 3 4 0 5 1 6 となります。
 








図(a) 0 7 3 4 2 5 1 6 の場合
図(b) 7 0 3 4 2 5 1 6 の場合









図(c) 2 7 3 4 0 5 1 6 の場合
図(d) 0 1 2 3 4 5 6 7 (最終状態)






"
p00122,Summer of Pyonkichi,"
 会津大学には一面芝生で覆われた公園があり、日差しを遮る木や建物がありません。日差しの強い夏の日には、公園内に設置されたスプリンクラーが作動して芝生に散水しています。この公園にはカエルのぴょん吉が住み着いています。ぴょん吉は暑いのが苦手で、日差しが強い夏の日には常にスプリンクラーの水に当たっていないと干からびて死んでしまいます。公園に設置されたスプリンクラーは、節水のため一度に一つだけ散水することになっているので、ぴょん吉はスプリンクラーの作動に合わせて移動しなくてはなりません。
 
 公園は上図の(a)のとおりで、公園内の場所は縦横それぞれ 0~9 の座標で表し、黒い●がスプリンクラーで、その番号が作動する順番を表しています。これは一例で各スプリンクラーの場所と作動順序は日々変わります。
 
ぴょん吉は不器用なので、移動するにも決まった距離をジャンプすることしかできません。ぴょん吉のジャンプできる範囲は上図(b)のとおりで、それ以外の場所に移動することはできません。しかも、一回のジャンプで相当体力を消耗するため、しばらく水に当たって休まなくてはなりません。
 
スプリンクラーが散水できる範囲は上図(c)のとおりで、スプリンクラー自身の座標も含みます。各スプリンクラーは一定時間散水すると停止し、すぐに次のスプリンクラーが作動を開始します。ぴょん吉はこの時に一回だけジャンプするものとし、次に散水が停止するまでジャンプしないものとします。また、公園の四方は灼熱のアスファルトで囲まれているので公園の外にでてしまうような方向にはジャンプしないものとします。
 
 猛暑となったこの夏。果たしてぴょん吉は生き延びることができたのでしょうか? ある日のぴょん吉の初期位置、スプリンクラーの位置と作動順序を読み込み、ぴょん吉が生き延びられる移動経路が存在している場合は”ok”、どう頑張っても死んでしまう場合は”na”を出力するプログラムを作成してください。ただし、スプリンクラーの数は最大 10 個とし、ぴょん吉は一番目のスプリンクラーの作動と同時に初期位置からジャンプすることとします。
 

"
p00123,Speed Skating Badge Test,"
スピードスケートバッジテストでは、2 種類の距離で規定されたタイムを上回った場合に級が認定されます。例えば a 級になるには 500 m で 40.0 秒未満、かつ 1000 m で 1 分 23 秒未満であることが求められます。
 
スピードスケート大会 (500 m と 1000 m) で記録したタイムを入力とし、スピードスケートバッジテストで何級に相当するかを出力するプログラムを作成して下さい。500 m と1000 m のバッジテスト規定タイムは下表のとおりです。 e 級に満たなかった場合には、na と出力してください。
 


 500 m1000 m
aaa 級   35 秒 50 1 分 11 秒 00
 aa 級   37 秒 50 1 分 17 秒 00
 a 級   40 秒 00 1 分 23 秒 00
  b 級   43 秒 00 1 分 29 秒 00
  c 級   50 秒 00 1 分 45 秒 00
  d 級   55 秒 00 1 分 56 秒 00
  e 級 1分10 秒 00 2 分 28 秒 00




"
p00124,League Match Score Sheet,"
スポーツの大会にはリーグ戦とトーナメント戦があります。サッカーのリーグ戦では勝・負・引分にそれぞれ点数を付け、その勝ち点で順位を競います。勝ち点はそれぞれ勝(3点)、負(0点)、引分(1点)です。 
 
チーム数とリーグ戦の成績を入力とし、成績の良い順(勝ち点の多い順)に並べ替え、チーム名と勝ち点を出力するプログラムを作成してください。勝ち点が同点の場合は入力順に出力してください。
 


"
p00125,Day Count,"
2 つの日付を入力とし、その 2 つの日付けの間の日数を出力するプログラムを作成してください。
 
日付 1 (y1, m1, d1) は日付 2 (y2, m2, d2) と同じか、あるいはそれ以前の日付とします。日付 1 は日数に含め、日付 2 は含めません。また、うるう年を考慮にいれて計算してください。うるう年の条件は次のとおりとします。
 西暦年が 4 で割り切れる年であること。 ただし、100 で割り切れる年はうるう年としない。 しかし、400 で割り切れる年はうるう年である。 


"
p00126,Puzzle,"
たろう君は 9 &times; 9 のマス目に 1〜9 の数字を配置するパズルで遊んでいます。このパズルでは以下の規則で数字を配置しなければいけません。
 同じ列に 1 つの数字はちょうど 1 回だけ現われる 同じ行に 1 つの数字はちょうど 1 回だけ現われる 二重線で区切られた 3 &times; 3 の各範囲には、1 つの数字はちょうど 1 回だけ現われる 
例えば、下の図 1 はそのような規則を満たした配置の一つです。しかしたろう君は、図 2 のようによく規則に反した配置を作ってしまいます。左端の列に「2」が 2 回現われて、「1」が 1 回も現われず、左から2 番目の列に「1」が 2 回現われて、「2」が 1 回も現われていません。
 
たろう君を助けるために、数字の配置を読み込んで、その配置が規則を満たしているかどうかを調べ、規則に反していたらその場所を出力するプログラムを作成してください。3 つの規則に照らして誤っている (2 回以上現れている) 数字の前には * (半角アスタリスク)を、誤っていない数字の前には空白を表示してください。
 

"
p00127,Pocket Pager Input,"
ある日、たろう君は、本文に「519345213244」という数字だけが書いてあるおかしなメールを受け取り
ました。そのメールは、10 歳年上の従姉からだったので電話して聞いてみると、「あ、急いでたから
ポケベル打ちで送っちゃった。便利よね。よろしくねっ!」といって切られてしまいました。いつも
せわしなく、少し強引なところのあるこの従姉をよく知るたろう君は、仕方なく自分で「ポケベル打
ち」について調べてみると、10 年ぐらい前に一世を風靡したかな入力の方法だということが分かりまし
た。
 
「ポケベル打ち」では、図 1 のような変換表に従い‘あ’は 11、‘お’は 15 という具合に、2 つの数字
で一つの文字を入力していきます。例えば「なると」という文字列を入力するには「519345」と打ちま
す。従って、どの文字も 2 つの数字で入力することができるのです。
 
携帯電話がまだ広く普及していないころ、高校生はこの方法で公衆電話から友達のポケベルにメッセー
ジを送信していたのだそうです。猛烈なスピードでポケベル打ちができる女子高生もいたとか。最近、
仕事も忙しくなってきた従姉は、メールを無意識のうちにポケベル打ちでタイプするようになってしま
いました。
 
 そこで、毎回解読に苦労しているたろう君を助けるために、ポケベル打ちによるメッセージを文字列
に変換し出力するプログラムを作成してください。ただし、変換には図2の変換表を使い、英
小文字及び、「.」、「?」、「!」、空白のみを対象とします。変換出来ない文字を含むメッセージに対しては na と出力してください。
 図2



"
p00128,Abacus,"
そろばんを習い始める友人からのお願いで、あなたはそろばんの珠の並び
を表示するプログラムを作成することになりました。ある数字を入力として、そろばんの珠の並びを出力するプログラムを作成してください。ただし、表示するそろばんの桁数は 5 桁とし、0 から 9 までの珠の配置はそれぞれ '*' (半角アスタリスク)、' ' (半角空白)、'=' (半角イコール) を用いて以下のように表すものとします。
 






"
p00129,Seek Supporting System,"
たろう君はかくれんぼうが苦手です。隠れるとすぐ見つかっちゃうし、隠れている子をなかなか見つけることができません。見かねたお父さんは、超高性能位置探索システムを作ってくれました。これを使うと自分の位置を含めて、友達の位置を正確に知ることができます。鬼になったら、隠れている子を探すことが簡単にできるようになりました。
 
たろう君はさらにこのシステムを進化させ、鬼から自分が見えるか否かを判定する機能を付加することを思いつきました。これができれば、「もういいかい」と言われても、見える位置にいれば「まあだだよ」だし、見えない位置にいれば「もういいよ」ですね。いつも遊んでいる公園には大小さまざまな円筒形の壁があります。この壁は外からは中は見えないし、中から外も見えません。鬼と一緒に中に入ると別の壁がなければ見えちゃいます。
 
たろう君はアイデアはいいのですが、ソフトを作るのが苦手です。そこで親友のあなたはたろう君に代わって、「鬼から見えないこと確認システム」のソフトウェアを作ることになりました。公園の壁は固定されていますが、たろう君と鬼のいろいろな位置情報に対して見えるか否かを判定する必要があります。
 
公園にある壁の情報(中心の座標 (wx, wy) と 半径 r) とたろう君と鬼の位置情報(たろう君の位置の座標 (tx, ty) と鬼の位置の座標 (sx, sy) ) を入力とし、その位置で鬼からたろう君が見えるか否かを判定するプログラムを作成してください。
 
なお、鬼からたろう君が見える場合には danger、見えない場合には safe と出力してください。鬼とたろう君の位置を結んだ線分上に壁がある場合には見えないものとし、鬼もたろう君も壁の上にはいないものとします。
 




"
p00130,Train,"
26 両以下の編成の列車があります。それぞれの車両には、英小文字の a から z までの識別記号が付いています。同じ記号が付いている車両はありません。ただし、車両を連結する順番は自由とします。列車の中を車掌が巡回します。車掌は、列車の中を行ったり来たりして巡回するので、同じ車両を何度も通ることがあります。ただし、すべての車両を最低一回は巡回するものとします。また、巡回をはじめる車両や巡回を終える車両が列車の一番端の車両とは限りません。
 
ある車掌が乗ったすべての列車の巡回記録があります。そこから分かる各列車の編成を先頭車両から出力するプログラムを作成してください。巡回記録は 1 行が 1 つの列車に対応します。各行は、英小文字を 1 文字ずつ  または -> で区切った文字列でできています。 は前方の車両への移動、-> は後方の車両への移動を表します。
 
例えば、a->b は車両 a から後方の車両である b に移り、b から前方の a に移り、a から前方の c へ移ったことを表します。この場合の列車の編成は先頭車両から cab となります。
 


"
p00131,Doctor's Strange Particles,"
博士 :   ピーター君。やったよ。
 
ピーター : またですか。今度はどんなくだらない発明ですか。
 
博士 :   あの幻の素粒子アキシオンの検出器を発明したんじゃ。
 
ピーター : アキシオンといえば、欧州合同原子核研究機構 (cern) をはじめとする研究者たちが血眼で追っかけているという、あれですよね。本当ですかぁ?
 
博士 :   本当だってばよ。細かい説明は省くが、非常に強力な磁場を内蔵する特殊な光電管が光ることによって、通過するアキシオンを検出する。
 
ピーター : 他 に先んじて検出すれば、小柴先生のニュートリノ検出に匹敵するノーベル賞級の研究ですよ。
       これで役立たずの研究ばかりしている「ダメ研究室」などという汚名も返上できますね。
 
博士 :   そうだとも。小柴先生の「スーパーカミオカンデ」にあやかって、この装置を、(悪口言ったら)「タダジャオカンデ」と命名した。
 
ピーター : ちょっと苦しいって言うか、卑屈って言うか・・・。
 
博士 :   それはいいとして、この装置ちょっとした癖があるんじゃよ。
       アキシオン粒子がある光電管を通過すると、感度の関係でその光電管と隣接する上下左右の光電管が反応する。
 
ピーター : つまり、図1の左側★印の光電管を粒子が通過した場合、
       右側のように点灯すると言うことですね。
       (図は 5 &times; 5 の例。黒は消灯・白は点灯状態。以下同じ。)
 
博士 :   また反応とは、光電管の状態が反転する。つまり消えている光電管は光り、
       光っている光電管は消える。
 
ピーター : つまり、図2の左側の★印や☆印を粒子が通過した場合、右側のような状態になると。
 
博士 :   これを正方形になんと 100 個 (10 &times; 10) 配置して待ち受けるわけだ。
 
ピーター : これだけの大発明、ノーベル賞選考委員会も「ホッチャオカンデ」なんて。
 
博士 :   おぉピーター君、君も我が研究室の作風になじんできたようだね。いい感じだ。
       では、早速実験を始めよう。まずはこの装置、現在ランダムに光電管が点いているので、
       実験が始められるように全部消えた状態にリセットしてくれたまえ。
       なあに、どの光電管にアキシオン粒子を当てれば全部消えるか考えればいいだけじゃよ。
       簡単だろう?
 
ピーター : 考えるのはいいんですが博士。当てるためには、
       幻のアキシオン粒子を発生させて打ち込める装置がないといけないんじゃないですか。
 
博士 :   ・・・。
 
博士とピータ      (同時に)コリャアカンデ!だははは・・・・。
ー:
 
ということで、本日も和気あいあいと暮れてゆく博士の研究室ですが、例によって話は全く進みそうもありません。しょうがないので、ピーター君に代わってプログラムを作成してあげてください。
プログラムは次のようなものになります。
 
 a. 装置の光電管の状態を 10 &times; 10 の配列として入力します。0は消灯中、1は点灯中を表します。
    0 と 1 以外のデータは含まれません。
 
 b. 入力した装置の状態をすべて消灯にするために、アキシオン粒子を通過させる位置を計算して出力します。これは、入力と同じ 10 &times; 10の配列で光電管の位置を表します。「0 は通過させない」、「1 は通過させる」ことを表します。すべてを消灯する方法は必ず 1 通りだけ存在するものとします。
 

<!--
    なお、以下はヒントです。
      a. 粒子を通過させる順番は結果に関係ありません。
      b. 粒子を偶数回通過させることは通過させないことと同じです。 また、奇数回通過させるこ
         とは1回通過させることと同じです。
      c. 以上から、すべての光電管について0(通過させない)と 1(通過させる)のどちらかを選
         択することがすなわち解答になります。
 c. プログラムを終了します。
-->

"
p00132,Jigsaw Puzzle,"
子供から大人まで脳トレ系パズルゲームが流行しています。我々も遅れを取らぬよう、パズルゲームを作ってみんなで遊ぶことにしました。
 
  我々が考えたのはジグソーパズルのゲームで、未完成の部分を埋めるのに必要なピースを選ぶというものです。図 1 (a) はパズルの枠の例です。黒が埋まっている部分、白が未完成の部分です。このパズルを完成するのに使えるピースが図 1 (b) のように与えられます。この中から、枠の白い部分を埋めることができる黒いピースを 1 つ以上選択します。例えば、図 2 の選択例 1 のような組み合わせなら正解となります。一方、選択例 2 のような組み合わせではパズルは完成しないので不正解となります。また、選択したピースが余ってしまう場合も不正解です。このように、プレイヤーは適切なピースを選択することでゲームをクリアします。
 
  そこでこのパズルゲームで用いる判定プログラムを開発することになりました。未完成のパズル、ピースの候補、そしてプレイヤーが選んだピースの組み合わせを入力とし、プレイヤーが適切なピースを選ぶことができていれば yes を、そうでなければ no と出力するプログラムを作成してください。
 
  この問題では、パズルの枠は h &times; w の配列で表し、未完成の部分を . (半角ピリオド)、完成している部分を # (半角シャープ)によって与えます。パズルの枠の大きさは最大 20 &times; 20 とします。また、各ピースは h &times; w の配列で表し、ピースを構成する部分を # 、そうでない部分を . によって与えます。与えられる各ピースは、元の状態から 90 度、180 度、270 度だけ回転することができます。また、各ピースの大きさは最大 20 &times; 20 とし、与えられるピースの数 n は最大 10 とします。
 







"
p00133,Rotation of a Pattern,"
8 文字 &times; 8 行のパターンを右回りに 90 度、180 度、270 度回転させて出力するプログラムを作成してください。
 

"
p00134,Exit Survey,"
あるデパートで買い物金額の出口調査を行いました。買い物金額のデータを入力とし、1 人あたりの平均買い物金額を計算し、出力するプログラムを作成してください。調査人数は、10 万人以下とし、一人あたりの買い物金額は 100 万円を超えないものとします。
 

"
p00135,Clock Short Hand and Long Hand,"
原始スローライフ主義組織「アカルイダ」から、いたずらの予告状が届きました。アカルイダといえば、要人の顔面にパイを投げつけたりするいたずらで有名ですが、最近では火薬を用いてレセプション会場にネズミ花火をまき散らすなど、より過激化してきました。予告状は次の文面です。
 
たどたどしくてよく解らないのですが、時計の短針と長針とが重なったころにいたずらを決行するという意味のようです。
 
このいたずらを警戒するため、時刻を入力として、短針と長針が近い場合は ""alert""、遠い場合は ""safe""、それ以外の場合は ""warning"" と出力するプログラムを作成してください。ただし、「近い」とは短針と長針の角度が 0° 以上 30° 未満の場合をいい、「遠い」とは 90° 以上 180° 以下の場合をいいます。なお、時刻は 00:00 以上 11:59 以下とします。
 

"
p00136,Frequency Distribution of Height,"
健康診断で生徒の身長を計測しました。身長のデータを入力とし、度数分布を作成して出力するプログラムを作成してください。度数分布の階級は 5 cm 刻みの 6 つの階級とし、度数は人数を *（半角アスタリスク）で表示します。ただし、その階級の度数（人数）が 0 の場合、階級の見出しのみを出力してください。
 

"
p00137,Square Method,"
古典的な乱数生成方法の一つである平方採中法のプログラムを作成します。平方採中法は、フォンノイマンによって 1940 年代半ばに提案された方法です。
 
平方採中法は、生成する乱数の桁数を n としたとき、初期値 s の2乗を計算し、その数値を 2n 桁の数値とみて、（下の例のように 2 乗した桁数が足りないときは、0 を補います。）その中央にある n 個の数字を最初の乱数とします。次にこの乱数を 2 乗して、同じ様に、中央にある n 個の数字をとって、次の乱数とします。例えば、123 を初期値とすると
 
の様になります。この方法を用いて、初期値 s（10000未満の正の整数）を入力とし、n = 4 の場合の乱数を 10 個生成し出力するプログラムを作成してください。
 

"
p00138,Track and Field Competition,"
陸上競技大会 200m の準決勝 3 組のレースが行われました。それぞれの組に 8 名（計 24 名）の選手が出場します。各組上位 2 位までの選手と、各組の 3 位以下の全選手の中から上位 2 名の計 8 名が決勝に進出します。
 
選手番号とタイムを入力とし、決勝進出者 8 名の番号とそのタイムを出力するプログラムを作成してください。
 
入力データの1件目から8件目までが1組目、9件目から16件目までが2組目、17件目から24件目までが3組目のデータとします。タイムは、1/100まで計測し、同タイムの選手はいないものとし、棄権は無いものとします。
 
-->

"
p00139,Snakes,"
ある世界には，文字だけでできた不思議なヘビが住んでいます。このヘビには現在a種とb種の2種類が確認されていますが、それ以外の種類がいる可能性もあります。
 
a種は，"">'""の後に""=""が1個以上並んだ後、""#""が来て、さらに前と同じ個数の""=""が来た後、""~""（半角チルダ）で終わります。
 
b種は，"">^""の後に ""q=""が1個以上並んだ後、""~~""で終わります。
 
ヘビを文字列データとして受け取り、それがどんな種類であるかを判別して、a種の場合は「a」、b種の場合は「b」、それ以外の種類の場合は「na」を出力するプログラムを作成してください。
 

"
p00140,Bus Line,"
図 1のようなバス路線があります。停留所は 10 箇所で、それぞれ 0〜9 の番号がついています。バスは停留所 0 では折り返しますが、反対側は循環路線になっており、図のように 5→6→7→8→9→5 の順で循環します。
 
このバス路線について、乗車する停留所と降車する停留所を入力とし、乗車から降車までに通る停留所の番号を出力するプログラムを作成してください。
 
ただし、1〜5 の停留所では 2 方向のバスに乗車できますが、より短い経路で降車停留所に到着するバスに乗車することとします。例えば、停留所 4 から停留所 2 へ行く場合、左方向に進むバスに乗り「4→3→2」の経路を通ります。また、一度バスに乗車したら途中下車はしないものとします。同じ停留所を乗車停留所、降車停留所に指定することはありません。
 


"
p00141,Spiral Pattern,"
「ぐるぐる模様」を表示するプログラムを作成することにしました。「ぐるぐる模様」は以下のようなものとします。
 1 辺の長さが n の場合、n 行 n 列の文字列として表示する。 左下隅を基点とし，時計回りに回転する渦状の模様とする。 線のある部分は #（半角シャープ）、空白部分は "" ""（半角空白）で表現する。 線と線の間は空白を置く。 
整数 n を入力とし，1 辺の長さが n の「ぐるぐる模様」を出力するプログラムを作成してください。
 


"
p00142,Nature of Prime Numbers,"
4 で割ると 3 あまる素数 n (11、19、23 など) には、面白い性質があります。1 以上 n 未満の自然数 (1, 2,... , n - 1) を 2 乗したものを n で割ったあまりを計算した結果を並べると、同じ数になるものがあるため、互いに異なった数の個数は、(n - 1)/2 になります。
 
この様にして得られた数の集合には、特別な性質があります。得られた数の集合から、互いに異なる 2 つ a と b を選んでその差を計算します。差が負になったときは、その差に n を足します。さらに結果が (n - 1)/2 より大きいときは、その差を n から引きます。
 
例えば、n = 11 のとき 1 と 9 の差は、1 &minus; 9 = &minus;8  → &minus;8 + n = &minus;8 + 11 = 3 になります。9 と 1 の差も 9 &minus;1 = 8 → n &minus; 8 = 11 &minus; 8 = 3 で、同じ値 3 になります。この差は、円周上に 0, 1, ・・・, n - 1 を書いて、二つの数字の間の短い方の円弧を考えるとわかりやすくなります。(下図参照)
 
  こうして得られた数の「差」は、1, 2, . . ., (n - 1)/2 のいずれかであり、同じ回数出現します。
 
【例】 n = 11 の時は、以下のようになります。
  1 から n-1 までの数を 2 乗したものを n で割った余りを計算します。

 12  =    1   →   1
 22  =    4   →   4
 32  =    9   →   9
 42  =   16   →   5
 52  =   25   →   3
 62  =   36   →   3
 72  =   49   →   5
 82  =   64   →   9
 92  =   81   →   4
102  =  100   →   1

  1 で得られた 1, 3, 4, 5, 9 について異なる数同士の差を計算します。  計算結果が負の場合、n = 11 を加算します。  さらに、計算結果が  (n-1)/2 = 5 より大きい場合 n = 11 から減算します。 
       
 
計算結果 1, 2, 3, 4, 5 の出現回数をそれぞれ数え上げます。
 
 
これらの計算結果から 1, 2, 3, 4, 5 の出現回数が 4 回であることがわかります。この性質は 4 で割ると 3 あまる素数特有の性質であり 4 で割ると 1 あまる素数ではこのようなことはおきません。このことを確認するため、10000 以下の奇数 n を入力とし、例題にあるような計算 (n で割ったあまりの 2 乗の差の頻度を求める)を実行し、その出現回数を出力するプログラムを作成してください。
 

<!--

-->

"
p00143,Altair and Vega,"
織女は天帝の子供でしたが、父の言いつけであけてもくれても機を織っていました。
 

 織女の織る雲錦という見事な布で仕立てた服を着るのが天帝の楽しみでした。雲錦は寿命が短くすぐに劣化してしまいますが、働き者の織女が毎日織ってくれるので、問題はありませんでした。織女は、父の言いつけを守り、毎日毎日雲錦を織り続けていたので、ボーイフレンドはいませんでした。かわいそうに思った父は、天の川の向こう岸に住む牽牛という働き者を紹介し、嫁入りさせました。
  
すると、織女は、結婚の楽しさに夢中になって、機織りなどそっちのけで、牽牛と遊び呆けています。天帝のお気に入りの雲錦の服も新しく仕立てられないためボロボロになってしまいました。
  
これには父も怒って、織女を宮殿に連れ戻したいと思いました。しかし人間である牽牛の前にボロボロの服で姿を現すわけにはいきません。遊び呆けている二人を 3 角形の壁で遮断し自分以外の全てのものが行き来できなくすることを考えました。そして、牽牛に見つからずに、織女に会って、まじめに機を織るか、さもなければ強制的に連れ帰ると宣言するというのです。
 
天帝はこの作戦を遂行するために 3 角形の壁生成装置を開発することにしました。3 角形の 3 頂点の位置 (xp1, yp1), (xp2, yp2), (xp3, yp3)、牽牛の位置 (xk, yk)、および織女の位置 (xs, ys)、を入力とし、三角形が牽牛と織女を遮断しているか否かを判定し、遮断できている場合は ok、遮断できていない場合には ng を出力するプログラムを作成してください。ただし、遮断しているとは、牽牛と織女のいずれかが三角形の内側にあり、他方が外側にある場合を言います。牽牛と織女は三角形の頂点もしくは辺の上にはいないものとします。
 
織女と牽牛は時々刻々場所を変えるため、プログラムは様々な位置情報を入力し質問に答えなければなりません。
 
天帝はこの作戦遂行のために 3 角形の壁生成装置の開発を開発部署に命じました。3 点を与えてそこに壁を作るという仕様で発注したつもりでしたが、開発部署では何を間違えたのか、ランダムに(無作為に)に 3 角形の壁を生成し、その 3 点を報告するシステムを作ってしまいました。発注者として、天帝は作り直しを命じたいのですが、服がますますボロボロになったので、最小限の手直しで手を打つことにしました。ランダムに壁ができたのではたまったもんじゃないので、作ろうとする 3 角形が決まった段階で、3 点を報告し、それで満足するものならば(すなわち遮断ができていれば)天帝が ok ボタンを押して壁の作成を指示するという仕様にしました。遮断できていなければ(遮断不全ならば) ng ボタンを押し、やり直しとなります。織女と牽牛は時々刻々場所を変えます。壁生成装置からは無作為の 3 点がどんどん出力されてきます。
 
天帝は与えられた状況下で、壁の作成を指示すべきか否かを判定する必要に迫られました。そこで、天帝にかわり、3角形の 3 頂点の位置 (xp1, yp1), (xp2, yp2), (xp3, yp3)、牽牛の位置 (xk, yk)、および織女の位置 (xs, ys)、を入力とし、三角形が牽牛と織女を遮断しているか否かを判定し、遮断できている場合は ok、遮断できていない場合には ng を出力するプログラムを作成してください。ただし、遮断しているとは、牽牛と織女のいずれかが三角形の内側にあり、他方が外側にある場合を言います。牽牛と織女は三角形の頂点もしくは辺の上にはいないものとします。
 
-->


"
p00144,Packet Transportation,"
インターネットでは、データはパケットに分割され、パケットごとにルータと呼ばれる中継機器を介して宛先に転送されます。各ルータはパケットに記載された宛先から次に転送すべきルータを判断します。さらに、無限にルータ間を転送され続けることを防ぐため、パケットには ttl（time to live） という値が付加されています。ルータは受け取ったパケットの ttl を 1 減算し、その結果が 0 ならそのパケットを破棄し、それ以外なら次のルータに転送します。
 
そこで、ネットワークの設計を手助けするプログラムを作ることになりました。ネットワークの接続情報と送信パケットの情報を入力として、各パケットが宛先ルータに到着するまでに経由するルータの数のうち最小の値を表示するプログラムを作成してください。
 
ネットワークは図のように複数のルータとそれらを結ぶケーブルで構成されています。ただし、各接続（ケーブル）は単方向であることに注意してください。各ルータが直接つながっているルータの番号の配列がネットワークの接続の情報として与えられます。ルータの数を n とすれば、各ルータは 1 から n までの整数で識別されます。送信元から宛先ルータまでの経路が複数ある場合は、経由するルータの数が少ない方の値を出力してください。また、パケットが宛先に到達しない場合は na と出力してください。
 
例えば、以下の図のようなネットワークで、送信元ルータが 6、宛先ルータが 5 の場合を考えます。最短経路は 6→1→5 であり経由するルータは 3 個です。この場合、ttl はルータ 6、1 でそれぞれ減算されるので、送信時の ttl が 3 以上であればパケットは到達できます。宛先ルータでは ttl を減算する必要はありません。また、送信元と宛先が同じルータになるようなパケットは無いものとします。
 







"
p00145,Cards,"
正の整数が書かれた一組のカードがあります。カードを積んで山をいくつか作り、それらを横一列に並べます。その中から隣り合った 2 つのカードの山を選び、右側の山の上に左側の山をそのまま重ねます。この操作をカードの山が一つになるまで繰り返していきます。
 
2 つのカードの山を重ねる時にそれらの一番上と下のカードに書かれた数をすべて掛け合わせます。こうして得られた数をカードの重ね合わせのコストと呼ぶことにします。カードの山を一つにするためのコストはすべての重ね合わせのコストを足し合わせたものとします。
 
どのような順番でカードの山を重ねるかでコストは変わります。たとえば、3 つのカードの山がある場合を考えます。それらの一番上と下のカードに書かれた数が，左側の山から順にそれぞれ 3 と 5, 2 と 8, 5 と4 だったとします。このとき，はじめに左と真ん中の山を重ねたときのコストは、3 × 5 × 2 × 8 = 240 です。この重ね合わせによって、一番上のカードが 3 で一番下のカードが 8 である山ができます。
 
この山を右の山の上に重ねると、そのコストは 3 × 8 × 5 × 4 = 480 になります。したがって、この順番でカードの山を一つにまとめたときのコストは 240 + 480 = 720 です。（図1）
 
一方、はじめに真ん中と右の山を重ねてから最後に左の山を重ねることにすると、そのときのコストは 2 × 8 × 5 × 4 + 3 × 5 × 2 × 4 = 440 になります。したがって，後の場合のように重ねた方がコストが小さくなります。（図2）
 
カードの山の個数とそれぞれの山の一番上と下のカードに書かれた数を入力とし、カードの山を一つにまとめるのに必要な最小のコストを出力するプログラムを作成してください。ただし、山の個数は 100 個以下とし、入力されるデータはどのような順番でコストを計算しても 231-1 を超えることはありません。
 


"
p00146,Lupin The 4th,"
怪盗「ルパン四世」は会津藩士を末裔とする美女「富士峰子」より、会津若松市に会津藩が残した軍資金が眠っていることを聞かされる。ルパンの長年の仲間である「石川越ェ門」の報告によれば、軍資金は千両箱に収められいくつかの蔵に保管されている。蔵に見張りはいないが厳重に施錠されている。しかし、越ェ門は彼が父から伝授された秘伝「鋼鉄斬り」の技を繰り出せば瞬時に蔵を破れるという。
 
残った問題は千両箱の運搬だ。体力のないルパンと越ェ門は千両箱を一つも持てない。そこで、頼りになる男「無限大介」に運搬を頼んだ。
すべての千両箱を運び出すために、ルパンは以下のような計画を立案した。
 
まず、ルパンの運転で最初の蔵へ行き、越ェ門と大介を降ろす。
 越ェ門が蔵を破る 大介がすべての千両箱を運び出す その千両箱を持ったままルパンが決めた次の蔵へ向かう 
これを繰り返し、最後の蔵まで破り千両箱を運び出す。その間にルパンはヘリコプターを準備し最後の蔵で二人と千両箱を運び上げ脱出する。大介はどんなに重いものも運搬できるが、荷物の重さに応じて移動速度は遅くなる。ルパンは、このことを考慮して蔵を破る順番を決めなければならない。
 
ルパンに代わって、最初の蔵を破ってから最後の蔵に辿りつくまでの移動時間が最小となるような蔵を破る順番を出力するプログラムを作成してください。ただし、
 蔵はすべて鶴ヶ城からまっすぐ北に走る通りに面している。蔵の数は高々 15 個であり、城からの距離は高々 10000 メートル以下である。 千両箱の重さはいずれもひとつ 20 キログラムである。それぞれの蔵に収められている千両箱の個数は 10000 個以下である。 蔵から蔵への移動は、通りに沿って地下に設置されている地下道を使う。 大介は w キログラムの荷物を運ぶのに、分速 2,000／(70 + w) メートルで移動する。 富士峰子は計画を妨害する恐れがあるので事前に睡眠薬を飲ませて眠らせる。このほかの妨害についても、遺漏なく対処する。 
入力データは、それぞれの蔵について蔵の番号（100 以下の整数）と城からの距離（メートル）とその蔵に保管されている千両箱の個数が与えられる。
 

"
p00147,Fukushimaken,"
「福縞軒」は行列のできる人気のラーメン屋です。でも最近、お客さんの間から「待ち時間が長いのに、店に入ったら空席があるのは許せない」という声が聞こえるようになってきました。どうしてそんな不満が出るのか調べたいのですが、お店が開いているあいだは忙しくて、実際の行列の様子を調べることができません。しかし、長年の経験からお客さんが来る間隔や人数は分かっているので、それをもとに待ち時間の分析をすることにしました。
 
店内にはカウンターに向かって 17 の席があります。開店時間は正午で、お客さんは次のようにやってきます。
 0 番から 99 番までの 100 組のグループが来ます。 i 番目のグループは正午から 5i 分後にお店に到着します。 i 番目のグループの人数は i % 5 が 1 のとき 5 人、それ以外のときは 2 人です。
   (x % yは x を y で割ったときの余りを表わします。) i 番目のグループは、席に着くと 17(i % 2) + 3(i % 3) + 19 分間で食事を済ませます。 
最初の 10 グループの到着時刻、人数、食事時間は次のようになります。
 
また、お客さんを席に案内するときには、次のようにしています。
 席には 0 から 16 までの番号が付いています。 x 人のグループは連続して x 個あいている席があった時だけ着席できます。 
また、座れる場所が複数あった場合は、席の番号が最も小さくなるところに座ります。例えば、0、1、2、4、5番の席だけが空いていた場合、5 人のグループは着席できません。2 人のグループであれば 0、1 番に着席します。
 一度着席したら、席を移動してもらうことはしません。 お客さんは 1 分単位で出入りします。各時刻には次の順序でお客さんを案内します。 前のグループの離席と同時に次のグループの着席が可能となります。 お客さんを着席させる際には、行列の先頭にいるグループから順に、できる限り多くのグループを同じ時刻に着席させます。行列の順序を追い越すことはしません。つまり、先頭のグループが着席できなければ、行列内の他のグループが着席できたとしても、着席させません。 その時刻に到着したグループは、行列が残っている場合は行列の最後尾に並びます。行列が無く、着席できる場合は着席し、できない場合は並んで待ちます。例として最初の 10 グループが到着するまでの様子を示すと以下のようになります。各行の3つの欄は、左から時刻、座席の様子、行列の様子を示しています。座席は「_」が空席で、番号はその席にその番号のグループが座っていることを示しています。 
例えば、時刻 40 では 8 番目のグループが到着しますが、着席できないので行列に加わります。4 番目のグループは時刻 41 まで食事をします。時刻 42 では、4 番目のグループの席が空きますが、連続した席数が足りないので 6 番目のグループはまだ着席できません。1 番目のグループは時刻 43 まで食事をします。時刻 44 で 1 番目のグループの席が空くので、6 番目のグループが着席し、同時に 7 番目、8 番目のグループも着席します。9 番目のグループは時刻 45 で到着し、席が空いているのでそのまま着席します。
 
これらの情報を基にして、0 以上 99 以下の整数 n を入力として、n 番目グループのお客さんが待つ時間(分単位)を出力するプログラムを作成してください。
 

"
p00148,Candy and Class Flag,"
3年c組では、平成19年11月10日の体育祭で使用する「クラス旗」を、将来のクラス会の時にも使うことにしました。そこで「クラス旗」を保管する生徒を決めるために、先生が先日差し入れてくれた大量のキャンディーを使って次のようなゲームを行うことにしました。
 各生徒は生徒番号の順に１個ずつキャンディーを取ります。 一巡してもキャンディーが残っていたら、最初の生徒番号の人から順々にキャンディーを取り続けます。 最後のキャンディーを取った人が「クラス旗」を保管する生徒になります。 
3年c組のクラスの人数は 39 人です。彼らの生徒番号は 3c01 から 3c39 です。例えば、キャンディーの数が 50 個の場合、クラス全員が１個目のキャンディーを取り終えると、キャンディーの残りは 11 個となります。それを再び生徒番号順に取ると、最後の 1 個は、3c11 の生徒が取ることとなります。すなわち 3c11 の生徒が「クラス旗」を保管する生徒となります。
 
キャンディーの個数を入力とし、「クラス旗」を保管する生徒の生徒番号を出力するプログラムを作成してください。
 

"
p00149,Eye Test,"
視力検査の検査結果データを入力とし、下記の視力判定表に基づいて各判定に当てはまる人数を、左右の視力別に出力するプログラムを作成してください。
 



判定視力
a1.1 以上
b0.6 以上 1.1 未満
c0.2 以上 0.6 未満
d0.2 未満




"
p00150,Twin Prime,"
prime numbers are widely applied for cryptographic and communication technology.
a twin prime is a prime number that differs from another prime number by 2.
for example, (5, 7) and (11, 13) are twin prime pairs.
 
in this problem, we call the greater number of a twin prime ""size of the twin prime.""
 
your task is to create a program which reads an integer n and prints a twin prime which has the maximum size among twin primes less than or equals to n
 
you may assume that 5 &le; n &le; 10000.
 


"
p00151,Grid,"
there is a n &times; n grid d where each cell contains either 1 or 0.
 
your task is to create a program that takes the gird data as input and computes the greatest number of consecutive 1s in either vertical, horizontal, or diagonal direction.
 
for example, the consecutive 1s with greatest number in the figure below is circled by the dashed-line.
 
the size of the grid n is an integer where 2 &le; n &le; 255.
 

"
p00152,Bowling,"
クラスのレクリエーションとしてボウリングを行うことになりました。参加者ごとの投球情報を入力とし、得点の高い順に成績情報を出力するプログラムを作成してください。なお、同点の場合は学籍番号の若い順に出力してください。ただし参加者は 3 名以上 40 名以下とし、1人当たり1ゲームずつ投球しているものとします。
 
ボウリングとは、プレイヤーに対して頂点を向けて正三角形に並べられた、10 本のピンをめがけてボールを転がし、ピンを倒すスポーツです。 1 回目の投球ですべて転倒した場合をストライクと言い、その投球のみで次のフレームに進みます。ストライクでない場合は、残ったピンをそのままにして 2 回目の投球を行います。2 回目の投球ですべて転倒した場合をスペアと言います。2 回目の投球終了後、次のフレームに進みます。
 
1 ゲームは 10 のフレームから構成され、第 1 から第 9 の各フレームは 2 回投球できます。各フレームの開始時点では、10 本のピンがすべて立った状態で用意されます。第 10 フレームは、ストライクもしくはスペアが出た場合には計 3 回の投球を、それ以外の場合は 2 回の投球を行い、ゲーム終了となります。
 スコア計算の方法  各フレームにおいてスペア、ストライクがない場合は、 2 回の投球で倒したピンの本数がそのフレームの得点となります。（スコア例１の第 4 フレームと第 8 フレーム） スペアを出した場合、倒した本数である 10 点に加え、次の投球で倒したピンの本数がこのフレームの得点に加算されます。（スコア例１の第 1 フレームと第 2 フレームの関係など）スコア例１の第 1 フレームでは第 2 フレームの 1 投で倒した 10 本（点）を加えた 20 点が得点となります。第 3 フレームも同様の計算方法です。 ストライクを出した場合、倒した本数である 10 点に加え、続く 2 回の投球で倒したピンの本数が加算されます。（スコア例１の第 2 フレームと第 3 フレームの関係など）もちろん続く 2 投中にストライクの場合があります。（スコア例１の第 5 フレームと第 6、7 フレームの関係など） 第 10 フレームのみ、スペア、ストライクを出した場合、3 投して倒したピンの総数が第 10 フレームの得点として加算されます。 各フレームの得点の合計が 1 ゲームの得点となり、最高得点は 300 点となります。 



"
p00153,Triangle and Circle,"
平面上にある三角形と円の位置関係を判定するプログラムを作成してください。対象となる図形はいずれも境界を含むものとします。
三角形は 3 頂点の位置が与えられ、円は中心の位置と半径が与えられます。位置は直交座標系による２つの整数の組によって与えられます。半径も整数で与えられます。
 


"
p00154,Sum of Cards,"
整数が書いてあるカードが何枚か入っている袋を使ってゲームをしましょう。各回のゲームで参加者はまず、好きな数 n を一つ宣言します。そして、袋の中から適当な枚数だけカードを一度に取り出して、それらのカードに書かれた数の総和が n に等しければ豪華賞品がもらえます。なお、それぞれのゲーム終了後カードは袋に戻されます。
 
袋の中の m 種類のカードの情報および、g 回のゲームで参加者が宣言した数を入力とし、それぞれのゲームで豪華商品をもらえるカードの組み合わせが何通りあるかを出力するプログラムを作成してください。
 

"
p00155,Spider Jin,"
正義のヒーロー「スパイダー人」は、腕からロープを出してビルからビルへ飛び移ることができます。しかし、ロープが短いので自分からの距離が 50 以下のビルにしか移動できません。それより遠くのビルに移動するには、一旦別のビルに飛び移らなくてはなりません。
 
ビルの数 n、n 個のビルの情報、スパイダー人の移動開始位置及び目的地を入力とし、その移動の最短経路を出力するプログラムを作成してください。どのようにビルを経由しても目標のビルに移動できない場合は na と出力してください。各ビルは点として扱い、最短距離で移動するビルの経由方法が２つ以上存在することはないものとします。
 


"
p00156,Moats around the Castle,"
いま、忍者が城外から天守閣に忍び入ろうと計画を立てています。この忍者は地面を走ったり、堀の中を泳いだりすることは難なくできますが、堀から這い上がることはとても苦手なので、忍者は堀に入る回数をできるだけ少なくしたいと考えています。
 
お城の見取図を入力とし、城外から天守閣に至るまでに、堀から這い上がらなくてはならない最小回数を出力するプログラムを作成して下さい。お城の見取図は二次元格子として与えられます。見取り図に描かれた記号には、天守閣の位置を示す「&」と堀の位置を示す「#」の位置が記され、そのほかの地点には「.」（半角ピリオド）が記されています。なお、お城には天守閣は一つだけあるものとし、忍者は走ったり泳いだりして移動するときに東西南北方向に1マスずつ移動するものとし、斜めには移動しません。
 


"
p00157,Russian Dolls,"
マトリョーシカとは女性像をかたどった木製の人形で、ロシアの代表的な民芸品です。マトリョーシカは、大きな人形の中にそれより小さな人形が入っている入れ子構造になっており、大きさの異なる複数の人形で構成されています。このような入れ子構造にするため、各人形の胴体は上下で分割できる筒状の構造になっています。マトリョーシカは職人の手で手作りされるため、一つ一つの人形は世界に一つしかない非常に貴重なものになります。
 
兄弟である一郎君と次郎君は、マトリョーシカで遊ぶのが大好きで、各自がそれぞれ1組のマトリョーシカを持っていました。一郎君のマトリョーシカは n 個の人形から構成されており、次郎君のマトリョーシカは m 個の人形から構成されています。
 
ある日、好奇心が旺盛な一郎君は、これら2組のマトリョーシカに含まれる人形たちを組み合わせて、より多くの人形を含む新たなマトリョーシカを作れないかと考えました。つまり、n + m 個の人形を使い、k 個の人形からなる１組のマトリョーシカを作ることを試みたのです。n と m の大きい方よりも k を大きくすることができれば、一郎君の目的は達成されます。
 
兄弟は2人仲良く、どのように人形を組み合わせれば k の値を最大にできるかを考えました。しかし、幼い2人にとってこの問題はあまりにも難しいので、年上のあなたはプログラムを作成して弟たちを助けることにしました。
 
一郎君と次郎君のマトリョーシカの人形の情報を入力とし、新たなマトリョーシカが含む人形の数 k を出力するプログラムを作成して下さい。入力される人形に大きさが同じものは存在しません。また、人形を高さ h 半径 r の円柱とみなした場合、高さh、半径 r の人形が含むことのできる人形は x &lt; h  かつ y &lt; r を満たす高さ x 半径 y の人形です。
 


"
p00158,Collatz's Problem,"
正の整数 n に対し、
 n が偶数の時は 2 で割る。 n が奇数の時は 3 倍し、1 を足す。 
という操作を繰り返すと結果が 1 になります。任意の正の整数 n に対してこの操作を繰り返すと必ず 1 になるであろうというのが「コラッツの予想」と呼ばれる問題です。この問題は日本では、「角谷の問題」としても知られている未解決の問題です。コンピュータを利用して非常に大きな数 3 &times; 253 = 27,021,597,764,222,976 以下については反例がないことが知られていますが、数学的には証明されていません。
 
整数 n を入力とし、結果が 1 になるまでに繰り返される操作の回数を出力するプログラムを作成してください。整数 n は 1 以上でかつ上記の計算を繰り返す途中の値が 1000000 以下となる程度の整数とします。たとえば、入力として 3 を受け取った場合は、操作列は
 
になるので、操作の回数（上の矢印の個数）である 7 を出力します。
 


"
p00159,The Best Body,"
肥満度を表す指数としてbmi（body mass index）があります。bmiの値は以下の式で計算します。
 
bmi = 体重(kg) / (身長(m))2
 
bmiの値が標準値に近いほど「理想の体型」と考えられます。そこで、bmiの標準値を 22 とした場合、対象者の情報を入力とし、最も「理想の体型」に近い人の情報を出力するプログラムを作成してください。
 
対象者の数を n とすると、各対象者には重複のないように1 以上 n 以下の整数値の受付番号 p が振られています。
 

"
p00160,Delivery Fee,"
ある宅配業者の宅配料金は大きさと重量で下表のように料金が設定されています。
 
大きさは三辺（縦、横、高さ）の和です。例えば大きさが120cmで、重さが15kg以内の荷物はｄサイズ（1,200円）となります。大きさが120cm以内でも、重さが15kgを超え、20kg以内ならばｅサイズとなります。
 
1日に持ち込まれた荷物の情報を入力とし、料金の総計を出力するプログラムを作成してください。なお、ｆサイズを超えた荷物は対象外とし料金の総計には含みません。
 





"
p00161,Sport Meet,"
秋の体育祭が行われます。種目は徒競走、ボール運び、障害物競走、リレーの4種目です。参加チームは n チームで、この4種目の合計タイムが最も小さいチームが「優勝」、次に小さいチームが「準優勝」、そして、最下位より2番目のチームを「ブービー賞」として表彰したいと思います。
 
各チームの成績を入力として、「優勝」、「準優勝」、「ブービー賞」のチームを出力するプログラムを作成してください。
ただし、チームにはそれぞれ 1 から n のチーム番号が割り当てられています。
 



"
p00162,Hamming Numbers,"
1 に 2, 3, 5 を何回か (0 回以上) かけ算して得られる数をハミング数 (hamming numbers) と呼びます。例えば、
 1 1 × 2 × 2 = 4 1 × 2 × 2 × 3 × 5 × 5 = 300 
などはハミング数ですが、11, 13, 14 などはハミング数ではありません。
 
ハミング数はどれも 60 のべき乗を割り切る(例えば、54 は 603 = 21600 を割り切る) ので、時刻など 60 進法の計算には都合の良い数として昔から知られていました。また、楽器の調律に用いる音階の一つである純正律では、音の周波数の比が 24, 27, 30, 32, 36, 40, 45, 48 というハミング数からなる数列になります。
 
整数 m、n を入力とし、m 以上 n 以下のハミング数の個数を出力するプログラムを作成してください。
 


"
p00163,Highway Toll,"
20xx年に喜多方市熱塩加納町から南会津町までの6区間、総距離58kmの会津中央道路が完成し開通する予定です。
 
開通後、半年間は利用促進のため17時30分〜19時30分までに出発icか到着icを通過し、なおかつ走行距離が40km以下の車に対する通行料金は半額になります。ただし料金は50円単位とし、端数は切り上げます。下記の表は料金と距離の一覧表です。
 
例えば喜多方（２）から会津若松（４）までは料金が450円、距離が12kmとなります。半額時間帯であれば250円になります。
 
出発ic、出発ic通過時刻、到着ic、到着ic通過時刻を入力とし、料金を計算して出力するプログラムを作成してください。ただし、入力される時刻は24 時間表記の値とします。なお、17時30分および19時30分ちょうどに通過した場合も半額時間帯に含めます。
 


"
p00164,Ohajiki Game,"
一郎君と次郎君の兄弟は家でよくおはじき取りをして遊びます。おはじき取りは、一カ所に積まれた複数のおはじきを二人が交互にとっていくゲームです。一度に1〜4個のおはじきを好きな数だけ順に取り、相手に最後の1個を取らせた方が勝ちになります。二人はいつも 32 個のおはじきを使い、兄である一郎君の番からゲームを始めます。
 
これまでに何度も戦っている二人ですが、次郎君は兄の一郎君にどうしても勝つことができません。それもそのはず、一郎君はこのゲームの必勝法を知っているからです。一郎君は、残りのおはじきの数を n とすると、必ず (n - 1) % 5 個のおはじきを取ります。ここで x % y は、x  を y  で割った余りを示します。
 
一方、次郎君は、残りのおはじきの数にかかわらず、ゲームのはじめに各回で取るおはじきの数を数列として決めてしまうのです。例えば、次郎君が決めた数列が{ 3, 1, 4, 2 } であるならば、彼の取るおはじきの数は順に 3 -> 1 -> 4 -> 2 -> 3 -> 1 -> 4 -> … となります（取ると決めた数が、おはじきの残りの数以上になった場合は、残りのおはじき全てを取ります）。
 
なんど負けてもやり方を変えようとしない頑固な次郎君の将来が心配になったお母さんは、次郎君がいかなる数列を選んだとしても一郎君には勝てないということを示すために、ゲームをシュミレートするプログラムを書くことにしました。
 
次郎君の考えた数列 a を入力とし、一郎君と次郎君が順次おはじきを取った後の残りのおはじきの個数を出力するプログラムを作成してください。
 


"
p00165,Lottery,"
ある国の王様は素数とギャンブルが大好きです。この国の通貨の単位はプライムといいます。2007 年 11 月 1 日現在のプライムのクロス円レートは 9973 とちょうど素数になっていたので、王様は大喜びです。この国では 1/101 プライムを1サブプライムとする補助貨幣が使われています。
 
この国の政府は、国家財政の安定、国民の娯楽、王様の趣味を同時に満足させることを目的に宝くじ振興公社を設立し、宝くじ事業を始めることにしました。素数が大好きな王様は、素数が話題になればそれだけで満足して、賞金をあげたくなります。そこで振興公社は次のような宝くじを考えました。
 くじには 0 から mp までの一連の番号がつけられている。mp はこの国で知られている最大の素数で、毎月一日に官報で告示される。同時に、mp 以下のすべての素数も発表される。それ以上大きな素数が発見されても、その月の間は、宝くじ振興公社を含む全ての公的な機関では、一日に発表されたmp を最大の素数として扱う。2007 年 11 月 1 日 にはmp = 999983 (1000000 以下の最大の素数) が発表された。 宝くじの販売価格は 1 サブプライム。 宝くじの抽選では、当たりくじの番号 p と賞金算出のための数 m の組(p, m) が何組か選ばれる。p, m はそれぞれ0 以上 mp 以下の整数。 この国で知られている素数の中で p - m 以上 p + m 以下のものが x 個あるとすると、抽選結果(p, m) の賞金は、x プライムとなる。 抽選結果 (p, m) の賞金 x プライムは番号 p の宝くじを持っている当選者に支払われるが、x = 0 の場合もあり、この場合には当選者には賞金は支払われない。 賞金のうち 1 プライムは宝くじの売り上げから支出され、x - 1 プライムは王様の内廷費から支出される（王様が払ってくれる）。x = 0 ならば宝くじの売り上げから 1 プライムが内廷費に繰り入れられる。（王様に対し支払われる） ひとつの番号 p が複数の当たりくじになることもある。この場合にはそれぞれの抽選結果(p, m) から算出される賞金の合計が当選者に支払われる。 
このくじでは当たりくじを買った人は抽選結果から関係する素数を探し、その個数を数えるので、国民の話題に素数がよく出てきて王様はとてもご満悦です。宝くじ振興公社としては当たりくじ1本当たり公社負担が 1 プライム、販売価格が 1 サブプライムだから、当たりくじの本数 n を、販売した宝くじ 101 本あたり 1 本以下となるようにすれば (すなわち、n &le; (販売した本数)/101 とすれば) 赤字にはなりません。
 
問題は内廷費からの支出額です。宝くじ振興公社の歴代の総裁は王様のご学友で、みんな王様と同様に素数が大好きでした。当たりくじに対する内廷費からの支出額を決める会議を楽しんでいました。ところが2007年の人事異動でご学友ではないお役人が総裁に就任しました。不幸なことにこの総裁は王様のことは十分に尊敬していますが、数学が苦手で、素数の話を聞くとすぐに鳥肌が立ちます。そこであなたはこの不幸な新総裁のアシスタントとなって、抽選結果を入力として、2007年11月における宝くじ振興公社が王様に請求する賞金の額を出力するプログラムを作成してください。ただし、抽選結果の数 n は1以上1000000以下であり、請
求する賞金の額が負になることはないものとします。
 
問題は内廷費からの支出額です。あなたの仕事は、抽選結果を入力として、2007 年 11 月における宝くじ振興公社が王様に請求する賞金の額を出力するプログラムを作成することです。ただし、請求する賞金の額が負になることはないものとします。
 注意 この国における素数の定義も日本の学校教育で学習する内容と同じです。即ち、素数とは 1 と自分自身以外の約数を持たない自然数をいいます（なお、1 は素数ではありません）。 我々は 1000003 が素数であることを知っていますが、この国では 2007 年 11 月段階では知られていません。そのため、999963 以上 1000003 以下の範囲にあるこの国で知られている素数は 999983 と 999979 の 2 個しかありません。 



"
p00166,Area of Polygon,"
１つの円に内接する２つの多角形の頂点情報を入力とし、それらの面積の大小関係を出力するプログラムを作成してください。
 
x 角形の各頂点には反時計回りに 1 から x まで番号が振ってあるものとします（図は、x = 4 の場合の例を示しています）。ただし、与えられる多角形は円の中心を内部に含むものとし、頂点 i の位置に関するデータは、頂点 i から頂点 i+1  まで反時計回りに計った中心角の角度 v (1 &le; v &lt; 180 の整数) で与えられます。また、出力する大小関係については、第１の多角形の面積が大きい場合は 1 (半角数字)、第２の多角形の面積が大きい場合は 2 (半角数字)、それぞれの面積が等しい場合は 0 (半角数字) と出力してください。

 
プログラムは以下に定義する入力が続く限り処理を繰り返し、入力が終わったら終了するように作成し
てください。
 
-->


"
p00167,Bubble Sort,"
データを並べ替えるための整列（ソート）アルゴリズムはコンピュータ科学には欠かせない基本的なアルゴリズムです。例えば、下図のように「整数値の配列の要素を昇順に並べ替える」という操作が整列です。
 
多くの整列アルゴリズムが考案されてきましたが、その中でも基本的なアルゴリズムの１つがバブルソートです。例として、与えられた整数値の配列をバブルソートで昇順に並べてみます。
 
バブルソートでは、各計算ステップにおいて、配列を「ソートされた部分」と「ソートされていない部分」に分けて考えます。最初は配列全体がソートされていない部分になります。
 
ソートされていない部分の先頭から、隣同士の要素を比較して（図では緑色の要素）、大きい値が右にくるようにそれらを交換します。二つの値が等しい場合は交換しません。
 
この処理をソートされていない部分（図では白色の要素）の末尾まで繰り返します。最後に、末尾をソートされている部分（図では青色の要素）に追加して1ステップが完了します。
 
このステップをソートされていない部分の長さが1になるまで繰り返します。
 
このようにソートされていない部分の長さが 1 になったら、ソートの処理を終了します。
 
それでは、n 個の数値の配列を入力とし、数値が配列の先頭から昇順に並ぶように上記のバブルソートの手順で並べ替えを行い、要した配列要素の交換回数を出力するプログラムを作成してください。
 


"
p00168,Kannondou,"
一郎君の家の裏山には観音堂があります。この観音堂まではふもとから 30 段の階段があり、一郎君は、毎日のように観音堂まで遊びに行きます。一郎君は階段を１足で３段まで上がることができます。遊んでいるうちに階段の上り方の種類（段の飛ばし方の個数）が非常にたくさんあることに気がつきました。
 
そこで、一日に 10 種類の上り方をし、すべての上り方を試そうと考えました。しかし数学を熟知しているあなたはそんなことでは一郎君の寿命が尽きてしまうことを知っているはずです。
 
一郎君の計画が実現不可能であることを一郎君に納得させるために、階段の段数 n を入力とし、一日に 10 種類の上り方をするとして、一郎君がすべての上り方を実行するのに要する年数を出力するプログラムを作成してください。一年は 365 日として計算してください。一日でも必要なら一年とします。365 日なら 1 年であり、366 日なら 2 年となります。
 


"
p00169,Blackjack,"
ブラックジャックはカジノで行われるカードゲームの一種で、1 〜 13  までの数が書かれたカードを使ってゲームが行われます。各カードの点数は次のように決まっています。
 1 は 1 点あるいは 11 点 2 から 9 までは、書かれている数の通りの点数 10 から 13 までは、10 点 
このゲームには親を含めた何人かの参加者がおり、それぞれが何枚かのカードの組を持っています。このカードの組のことを手と呼びます。手の点数はカードの点数の合計です。その計算は次のように行うものとします。
 カードの点数の合計が 21 より大きくなるときは、手の点数を 0 点とする カードの点数として、1 は 1 点と計算しても 11 点と計算してもよいが、手の点数が最大となる方を選ぶこととする 
配られたカードの情報を入力とし、手の点数を出力するプログラムを作成してください。
 
<!--
ただし、1つの手に含まれるカードの枚数 n は1以上21以下とし、同じ数が書かれたカードを何枚でも
含むことができるものとします。-->


"
p00170,Lunch,"
お昼に食べるお弁当を作るために、お店で食べ物を買いました。お店では、食べ物を入れるのに細長い袋しかもらえなかったので、すべての食べ物を縦に積んで袋に入れる必要があります。袋が倒れにくいように、できるだけ重い物を下にして詰めたいのですが、食べ物の中にはやわらかい物もあって、上に重い物を乗せるとつぶれてしまいます。
 
そこで、食べ物の情報を入力とし、全ての食べ物がつぶれず、かつ全体の重心が最も低くなるような積み方を出力するプログラムを作成してください。それぞれの食べ物ごとに、名前 f、重さ w、上に載せて耐えられる重さ s  が指定されます。
「全ての食べ物がつぶれない」というのは、下から順に、（f1、f2、... 、fn）と n 個の食べ物を積んだ時、すべての f について、


sfi &ge; wfi+1 + wfi+2 +  ...  + wfn



であることを意味します。また、全体の重心 g は、

g = (1 &times; wf1 + 2 &times; wf2 +  ...  + n &times; wfn) / (wf1 + wf2+ ... +wfn)


とします。ただし、解はちょうど1つだけ存在するものとします。
 





"
p00171,Dice Puzzle,"
各面にアルファベット一文字(a 〜 z、a 〜 z)が描かれたサイコロがあります。
 
このようなサイコロを8つ組み合わせて 2 × 2 × 2 の立方体を作ることを考えます。
 
組み合わせ方には条件があり、各サイコロの向き合う面は同じアルファベットでかつ一方が小文字、も
う一方が大文字でなければなりません。例えば、a と描かれた面に接することができるのは a と描か
れた面です。ただし、接するときの文字の向きは問いません。
 
このルールに従い、８つのサイコロの情報を入力とし、立方体を作れるか否かを判定するプログラムを作成してください。立方体を作れる場合は yes（半角英大文字）、作れない場合は no（半角英大文字）と出力してください。
 
  なお、サイコロの各面の文字を次の図にあるように c1 〜 c6 と表すことにします。


  また、1つのサイコロに同じ文字が複数回描かれていることは無いものとします（同じアルファベットの大文字と小文字はその限りではありません）。

 



"
p00172,Doctor's Research Rooms,"
会津大学の鶴賀博士はとても研究熱心なことで有名です。彼の研究室には複数の学生がいますが、彼は毎日夜遅くまで研究をするので必ず最後に帰宅します。彼の研究室にはドアでつながった複数の部屋があり、最後に研究室を出る人がすべての部屋の明かりを消して帰宅することになっています。
 
最近、大学では省エネに力を入れているため、すべての明かりが消えているか厳しくチェックされます。困ったことに彼は誰もが認める極度の臆病者で、明かりの消えた部屋には決して入ることができません。そこで、彼はある部屋の照明のon/offを他の部屋から操作できるように研究室の照明設備を改造しました。
 
ところが、予算の都合で１つの部屋からコントロールできる部屋が限られています。その上、帰宅時の各部屋の明かりの状態も日によって異なるため、全ての明かりを消して出口までたどりつくのに毎日かなりの時間が掛かっています。そこで、研究員のあなたが博士を助けるためにプログラムを作成することになりました。
 
研究室の部屋情報、各部屋の明かりの点灯情報、各部屋の照明スイッチの情報を入力とし、博士がすべての明かりを消して帰宅できるかどうかを出力するプログラムを作成してください。ただし、部屋の数 n  は 1 以上 15 以下の整数、ドアの数 m  は 1 以上 30 以下の整数、照明の点灯情報 l  は 0 または 1 の整数でそれぞれ消灯と点灯を表し、各部屋には 1 以上 n 以下の整数で番号が付与されているものとします。出口は番号 n の部屋に存在し、博士は常に部屋 1 からスタートするものとします。
 
なお、出力は、博士の取るべき行動に応じて以下の 3 通りに分けて出力します。
 ケース１.
出口以外の全ての明かりを消して出口にたどりつける場合（経路の過程で出口を通ってもよい）。
 
と出力します。ここで x は部屋の移動、スイッチのon/off をそれぞれ１ステップとした場合の、博士の部屋から出口にたどり着くまでの最短のステップ数です。さらに、以下の文字列に従い博士の部屋から出口までの経路（博士のとるべき行動）を x 行で出力します。
 部屋 r へ移動する場合

move to room r.

 部屋 r の照明を消す場合

switch off room r.

 部屋 r の照明を点灯する場合

switch on room r.

 
ここで、r は部屋の番号を表します。博士がある部屋に移動した直後、複数のスイッチを操作して次の部屋に移動する場合は操作する部屋番号が小さいほうから出力してください。この条件を満たす限り、複数の解がある場合は、どれを出力してもかまいません。この情報をもとに、博士は無事帰宅することができます。
 
ケース2. 出口にたどり着くことはできるが、出口のある部屋以外の全ての明かりを消すことが
できない場合。
 
と出力する。この場合、博士は省エネを守らなかったとして大学に罰せられます。
 
と出力する。この場合、博士は警備員に緊急救助を求めます。
 
簡単な例を示します。この例では、研究室は 4 つの部屋で構成され、部屋 1 と 2、2 と 3、2 と 4 がそれぞれ繋がっています。また、部屋 1 及び 4 から部屋 2、3 の照明を操作することができ、部屋 3 から部屋 1、2、4 の照明を操作することができます。最初、部屋 2、3、4 の照明が消えた状態で、博士が部屋 1 にいます。
 
この状況では、博士が取るべき行動は次のようになります。
 
これで博士は部屋 4 以外の照明を消すことができ、帰宅することができます。
 


"
p00173,Haunted House,"
 会津学園高等学校では、毎年学園祭をおこなっています。その中でも一番人気はお化け屋敷です。一番人気の理由は、お化け屋敷をおこなうクラスが 1クラスや 2クラスではなく、9クラスがお化け屋敷をおこなうことです。それぞれが工夫することより、それぞれが個性的なお化け屋敷になっています。そのため、最近では近隣から多くの来場者が訪れます。
 
 そこで、学園祭実行委員会では、お化け屋敷の入場料金を下表のように校内で統一し、これにもとづき各クラスごとに入場者総数と収入の集計をおこなうことにしました。
 
入場料金表(入場者 1人あたりの入場料)
 
各クラス毎の午前と午後の入場者数を入力とし、各クラス毎の入場者総数及び収入の一覧表を作成するプログラムを作成してください。
 



"
p00174,Badminton,"
 a君、bさん、c君で久しぶりに遊ぶことになりました。 a君とbさんがプレイヤー、c君が審判になりバドミントンのシングルスのゲームをしました。3人で決めたルールは以下の通りです。
 3 ゲームを行います。 11 点を先取した人が、そのゲームの勝者となります。 第 1 ゲームの最初のサーブはa君から始まりますが、次のサーブは直前のポイントを取った人が行います。 第 2 ゲーム、第 3 ゲームは前のゲームを取った人が最初のサーブを行います。 10 - 10 になって以降は 2 点差をつけた人が勝者となります。 
 全てのゲームが終わり、得点を見ようとしたのですが、審判のc君が得点を記録するのを忘れていました。しかし、サーブを打った人をきちんと記録していました。サーブ順の記録から得点を計算するプログラムを作成してください。ただし、二人が打ったサーブの回数の合計は 100 以下とし、サーブ順の記録は、サーブを打った人を表す ""a"" または ""b"" の文字列で表されます。
 

"
p00175,Quaternary Notation,"
10 進数は現在使われている一般的な記数法で、0、1、2、3、4、5、6、7、8、9 の10 個の記号を用いて全ての数字を表します。
 
2 進数はコンピュータの世界でよく使われる記数法で、0 と1 の二つの記号を用いて全ての数字を表します。
 
4 進数で用いられるのは 0、1、2、3 の 4 つの数字だけです。4 進数では 0 から順に数を増やしていったときに 4 まで来たら次の位に桁上がりします。そのため、10 進数の 4 は桁上がりして「10」という表現になります。
 
昔ハワイでは魚やタロイモを指にはさんで数えていたので、10 進数ではなく4 進数を使っていたそうです。
 
10 進数で入力される整数 n を 4 進数に変換し出力するプログラムを作成してください。
 


"
p00176,What Color?,"
ウェブデザイナーを目指す太郎君はただいま修行中。事務所の先輩から「このページの背景色は#ffe085で」と、ウェブデザイン特有の色番号で指示されるのですが、それがどんな色かパッと思い浮かべることができません。
 
この色番号は光の三原色である赤、緑、青それぞれの強さを表わしています。具体的には2 桁の 16 進数を3 つ組み合わせたもので、色番号を“#rgb”とするとき、r は赤の強さ、g は緑の強さ、は青の強さを表します。それぞれ 00 から ff までの値になります。
 
色番号にまだ不慣れな太郎君のために、色番号を入力とし、色の表の中からもっとも近い色の名前
を出力するプログラムを作成してください。使用する色の表は以下の通りです。
 
「もっとも近い色」とは、以下のように定義します。与えられた色番号での赤、緑、青の強さをそれぞれ r、g、b とし、表の k 番目の色の赤、緑、青の強さをそれぞれ rk、gk、bk とするとき、次の式で計算する dk の値が最も小さい色がもっとも近い色とします。
 
なお、dk の値が同じになる色が複数存在する場合は表の中でより上にある色がもっとも近い色になり
ます。

 

"
p00177,Distance Between Two Cities,"
地球上の2 都市の北緯と東経を入力とし、地表距離を計算して出力するプログラムを作成してください。ただし、地球は半径 6,378.1 km の球とし、2 点間の地表距離とはこの球面に沿った最短距離です。また、南半球でも南緯は用いずに北緯 0 ~ -90 度を用い、グリニッジ子午線の西でも西経は用いずに東経 180 ~ 360 度を用いることとします。地表距離は km 単位で求め、小数点以下は四捨五入し、整数値として出力してください。
 
以下に主要都市の北緯、東経の例を示します。
 



地名 北緯(度) 東経(度)
東京     35.68 139.77
 シンガポール    1.37  103.92
  シドニー    -33.95 151.18
   シカゴ     41.78 272.25
ブエノスアイレス  -34.58 301.52
  ロンドン     51.15 359.82





"
p00178,TETORIS,"
テトリスは、落ちてくるブロックを盤面上に並べて消すゲームです。ここでは、それを少しアレンジしたゲームを考えましょう。
 
このゲームの盤面の大きさは横 5 コマで、出現するブロックがすべて入るだけの高さがあります。落ちてくるブロックは直線状で、横向き、縦向きの 2 種類があり、長さは 1 から 5 までの 5 種類です。
 
以下に例を示します。step(イ) からstep(ホ)までの図はブロックが落ちて消えていく様子を表したものです。
step(イ)から順にstep(ロ)、step(ハ)と順に進んでいきます。
 
  ブロックを落とすときに、step(イ)のようにブロックのどこかが下に積んであるブロックに引っかかったときには、step(ロ)のように落ちたブロックはその場所で止まります。また、ブロックを落とした結果、盤面の横一行の全てのコマにブロックが詰まった場合には、step(ニ)で示されるように、その行のブロックが消えます。この後、消えた行の上にあるブロックが、そのままの形で1行下にしずみます(step(ホ))。
 
1 ゲームは 1000 個以内のブロックが順に落ちてくることとします。例えば、落ちるブロックの長さが順番に横向き 4 コマ, 横向き 3 コマ, 縦向き 2 コマ, 縦向き 3 コマで、落ちる場所が左端から 1 コマ目、1 コマ目、4 コマ目、5 コマ目であった場合には、下図のstep(イ)~(ト)のように落ち、最後に残るブロックは 2 コマになります。
 
 順番に落ちてくるブロックの情報を入力とし、全てのブロックが落ちた時に残るコマ数を出力するプログラムを作成してください。
 

"
p00179,Mysterious Worm,"
会津生物学研究所のa博士は、とある南の島でふしぎな虫を発見しました。形は芋虫のように細長いのですが、ひとつの体節が玉のような形をしているので、糸でつないだビーズ玉のように見えます。ふしぎなのは体の色に様々なバリエーションがあることと、なかには時間がたつにつれて体の色が変っていく虫がいることでした。どの虫の体節の色も赤か緑か青のどれかに限られるようですが、1 秒ごとに体節の色が変わっていき、最後にはすべての体節が同じ色になって落ち着く場合もあれば、いつまで待ってもずっと色が変わりつづける場合もあるようでした。
 
調べていくうちに、ふだんはすべての体節が同じ色をしているのですが、何かに驚いたりして興奮した後は体節の色が勝手に変わってしまうことがわかりました。一度体節の色が変わってしまうと、ふたたびすべての体節が同じ色になるまではずっと色が変わり続けることがわかりました。
 
 a博士はこの虫を何匹も捕まえて興奮させてみては、色が変わる様子を興味深く観察していましたが、やがて色が変化している最中の色の変わり方には次のような規則性があることに気がつきました。
 色が変わるのは、隣り合っている色違いの 2つの体節のペア 1組だけが変わり、他の体節の色は変わらない。ただし、そのようなペアが複数あるときに、どのペアの色が変わるかはあらかじめ予測できない。 そのようなペアは、2つの体節の色のどちらでもない色に同時に変わる(たとえば、緑と赤の体節が隣り合っているときは、それらが同時に青に変わる)。 
 虫の色の変化を、2秒後まですべて書いたものが上の図です。図の上段のような色をした虫がいるとします。このとき、隣り合った色違いの体節のペアは 3組あるので、1秒後には中段に並べて描いた 3通りの色のどれかに変わります。1秒後に中段左側の 2つのように変わったときには、2秒後にすべての体節が緑色になることができます(図の下段の左側から 2番目)。 それに対して、1秒後に中段の1番右のように変わったときには、2秒後にすべての体節が同じ色に変わることはありません。
 
 博士は、目の前にいる虫の体節がすべて同じ色になる可能性があるのか、あるとしたらそうなるのは最短で何秒後なのかを予測することにしました。
 
目の前にいる虫の体節の色の並びを入力とし、その虫の体節がすべて同じ色になるのに要する最短の時間を秒単位で出力するプログラムを作成してください。ただし、同じ色になる可能性がないときは「na(半角英大文字)」と出力してください。また、虫の体節の色の並びは2  以上 10 以下のr(赤)、g(緑)、b(青)からなる文字列で表されます。
 


"
p00180,Demolition of Bridges,"
水の国ウォーターデブンには n 個の都市があります。各都市は水に囲まれており、島国のようになっています。ウォーターデブンには m 本の橋があり、都市間の交通はそれらの橋によって行われ、全ての都市に行き来することができます。
 
最近、道路特定財源の見直しにより橋の維持費の削減が決定されました。全部の橋を維持することができなくなってしまい、いくつかの橋を取り壊すことになりました。そこで、ウォーターデブンはどの都市にでも行くことができるように橋を残しつつ、橋の維持費を最小化することが課題となりました。
 
都市の数、橋の数、各橋の維持費を入力とし、橋を利用してどの都市にも行けるようにしつつ、橋を取り壊した場合の維持費の最小値を出力するプログラムを作成してください。なお、橋の取り壊しには費用が掛からないものとします。ただし、各都市は 0 から n - 1 まで順番に番号が付けられているものとします。

 

"
p00181,Bookshelf,"
太郎君はとある小説にはまっています。その小説は全部で n 巻あり、各巻で本の厚さが異なります。太郎君はこの小説が大変気に入ったので、その小説専用の本棚を買おうと思っています。しかし、部屋に大きな本棚を置くとかなり狭くなってしまうので、出来るだけ本棚の幅が小さくなるように工夫しなければなりません。床から天井の高さを測ったところ、どうやら m 段の本棚なら置けることが分かりました。そこで、小説 n 巻をどのように分ければ m 段の本棚の幅を最小に出来るでしょうか?
 太郎君にはこだわりがあり、各段に納める小説は巻の番号順に並んでいなければなりません。
  
 本棚の段数、小説の巻数、各本の厚さを入力として、全巻を 1巻から順に収めることができる本棚の中で幅が最小となるものの幅を求めるプログラムを作成してください。ただし、本棚の枠の大きさは幅に含めないこととします。
  







"
p00182,Beaker,"
いろいろな容量のビーカーが与えられています。はじめに、その中の一番容量の大きなビーカーを一個選び、蛇口から水をいっぱいになるまで注ぎます。つぎに、次のルールにしたがいながら、ビーカーの水を他のビーカーに移し替えていきます。
 ビーカーに入っている水は,残さずにすべて他のビーカーに移さなければならない。ただし、一個のビーカーに水を全部移せないときは、複数のビーカーに分けて移してもよい。 ビーカーに水を入れるとき、いっぱいになるまで水を注がなければならない。また、水をこぼしてはならない。 複数のビーカーから同じビーカーに一度に水を注いではならない。 同じビーカーには一度しか水を注いではならない。 
このルールにしたがったとき、ビーカーの個数 n と各ビーカーの容量を入力とし、すべてのビーカーに水を注ぐことができるかどうかを判定して出力するプログラムを作成してください。すべてのビーカーに水を注ぐことができるときは yes (半角英大文字)、できないときは no (半角英大文字) を出力してください。
 


"
p00183,White,"
 3 &times; 3 の盤面の三目並べを考えましょう。三目並べは 2 人で行う対戦ゲームです。先攻後攻を決め、一人は黒石、一人は白石を打ちます。盤面に石を交互に一つずつ置いていき、縦横斜めのいずれかの方向に先に 3 つ自分の石を並べた人が勝ちとなります。
  
 盤面の情報を入力とし、勝敗の判定を行い、黒が勝ちの場合は「b」、白が勝ちの場合は「w」、どちらもそろっていない場合は「na」と出力するプログラムを作成してください。 盤面の情報は、3行3列の文字列で構成されます。「b」は黒石、「w」は白石、「+」(半角プラ
ス)は何も置かれていない状況を表します。ただし、同時に黒が3つ、白が3つ並ぶことはありませ
ん。
 

-->


"
p00184,Tsuruga Castle,"
 会津若松市のシンボルである鶴ヶ城は、蒲生氏郷が本格的な天守閣を築城し、「鶴ヶ城」と名付けました。天守閣からは会津盆地が一望できます。また、晴れた日には、白虎隊で有名な飯盛山の山頂から鶴ヶ城を見ることができます。
 
 会津若松市の今後の広報活動の参考にするため、鶴ヶ城に訪れた来場者について、年代調査をすることにしました。来場者の年齢を入力とし、下記の年齢区分別に人数を出力するプログラムを作成してください。
 




  区分     年齢
10歳未満  0  ~ 9
 10代  10  ~ 19
 20代  20  ~ 29
 30代  30  ~ 39
 40代  40  ~ 49
 50代  50  ~ 59
60歳以上 60  ~







"
p00185,Goldbach's Conjecture II,"
 ゴールドバッハ予想とは「6 以上のどんな偶数も、2 つの素数 (*1) の和として表わすことができる」というものです。
 
たとえば、偶数の 12 は 12 = 5 + 7 、18 は 18 = 5 + 13 = 7 + 11 などと表すことができます。
 
 和が 134 となる 2 つの素数の組み合せをすべて書き出すと、以下の通りとなります。
 
134 = 3+131 = 7+127 = 31+103 = 37+97 = 61+73 = 67+67 
       = 131+3 = 127+7 = 103+31 = 97+37 = 73+61
       
与えられた数が大きくなると、いくらでも素数の組み合せが見つかるような気がします。しかし、現代数学をもってしてもこの予想を証明することも、反例を作ることもできません(*2)。ちょっと不思議な感じがしますね。
 
そこで、ゴールドバッハ予想を鑑賞するために、偶数 n を入力とし、和が n となる 2 つの素数の組み合せの数を求めるプログラムを作成してください。
 
和が n となる素数の組み合せの数とは n = p + q かつ p &le; q  であるような正の素数 p, q の組み合せの数です。上の例からわかるように和が 134 となる素数の組み合せは6 個です。
 
(*1)  素数とは、1 または自分自身以外に約数を持たない整数のことである。なお、1 は素数ではない。
(*2)  2007 年 2 月現在、5&times;1017 までの全ての偶数について成り立つことが確かめられている。(wikipedia)
 

"
p00186,Aizu Chicken,"
2008 年 4 月に、会津若松市は長さ20 m 85 cm のやきとり作りに挑戦して成功しました。このとき使われた鶏肉が、会津特産の会津地鶏です。会津地鶏はとてもおいしいのですが、飼育がむずかしいので生産量が少なく、値段が高いのが難点です。
 
今日は一郎君の家に、遠くから親戚が遊びに来ます。お母さんは鶏肉の水炊きを作って親戚をもてなすことにしました。近くのお肉屋さんでは会津地鶏とふつうの鶏肉の 2 種類の鶏肉を売っています。お母さんは、以下のような指示を一郎君に与えて、お肉屋さんに行って鶏肉を買ってくるように
頼みました。
 鶏肉が足りなくなると困るので、決められた量以上の鶏肉を買う。 予算の許す範囲で会津地鶏をできるだけ多く買う(会津地鶏は必ず買うこと)。 会津地鶏を買った残りでふつうの鶏肉をできるだけ多く買う(予算が足りなければ買わない)。 
一郎君がお肉屋さんに行くと、会津地鶏が品薄のため一人が買える量を制限していました。一郎君が、お母さんから与えられたすべての指示を守って買い物をするとき、一郎君が買う会津地鶏と普通の鶏肉の量はそれぞれ何グラムになるでしょう?
 
買うべき鶏肉の量の下限 q1、予算 b、このお肉屋さんでの会津地鶏 100 グラムの値段 c1、ふつうの鶏肉 100 グラムの値段 c2、会津地鶏を一人が買える量の上限 q2  を入力とし、一郎君が買う会津地鶏とふつうの鶏肉の量を 100 グラム単位で出力するプログラムを作成してください。ただし、このお肉屋さんではお母さんの指示通りに買えない場合には、「na」と出力してください。
 

"
p00187,Stoning Fortune,"
 「自分の道は自分で切り開く」をモットーに、ある神社が自分自身の手で運勢を決めるおみくじを作りました。そのおみくじを引く人にはまず6つの石を投げてもらい、その投げた石の一つ目と二つ目を結ぶ 線分、三つ目と四つ目を結ぶ 線分、五つ目と六つ目を結ぶ 線分の3本の線分の交点を頂点とする 三角形の面積から運勢を決めるというものです。各運勢と三角形の面積との関係は以下のとおりです。
 
 しかし、三角形の面積の大きさの判定は神主さんが手計算でやっているので正確とはいえず、時間もかかってしまいます。そこで近所に住む優秀なプログラマであるあなたは、一刻でも早くプログラムを書いて神主さんを助けてあげることにしました。
 
 3 本の線分の情報を入力とし、線分の交点を頂点とする 三角形の面積から運勢を出力するプログラムを作成してください。線分の情報は始点の座標 (x1, y1) と、終点の座標 (x2, y2) が与えられ、始点と終点の座標は必ず異なることとします。また、2 つ以上の線分が同一直線上にある場合、交点を持たない 2 つの線分がある場合、3 つの線分が 1 点で交わる場合は、「三角形なし」となります。
 






"
p00188,Search,"
 「探索」とは、たくさんの情報の中から望みの情報を得る操作のことです。身近な例では、合格発表の時の「たくさんの受験番号から自分の受験番号を見つける」ことや、電話帳から「会津太郎さんの電話番号を見つける」ときなどがあります。この探索という操作はコンピュータの分野でも広く用いられています。
 
探索の方法は沢山あります。探索の対象となるデータが、小さい順(または大きい順)に並べられている場合に使うことができる探索の方法を考えます。
 
小さい順(または大きい順)に並べられているデータ列の中央に位置する値と目的の値との大小関係を用いて、中央に位置する値から前半部分を探索範囲にするか後半部分を探索範囲にするかを決めることで、探索の範囲を絞っていく方法があります。手順は以下のようになります。
 データの列の全体を探索の範囲とします。 探索の範囲の中央に位置する値を調べます。 目的の値と中央に位置する値が一致すれば探索を終了します。 目的の値と中央に位置する値よりも小さければ前半部分を探索の範囲とし、大きければ後半部分を探索の範囲として2.へ戻ります。 
 以下は上述した探索の方法の例です。この例での目的の値は51です。それぞれのデータには番号
(index)が振られており、この番号は0から始まっています。
 
ステップ1: 最初は番号0~6全体を探索の範囲とします。
 
ステップ2: 探索の範囲の中央に位置する値を調べます。ただし、「中央に位置する値」とは、(左側の番号+右側の番号)を2で割った番号の位置にある値とします。つまり、この場合、(0 + 6) ÷ 2 を計算し、番号3にある値(36)が中央に位置する値となります。
 
ステップ3:目的の値(51)と中央に位置する値(36)を比較します。
 
ステップ4:ステップ3の結果から、目的の値は中央に位置する値より大きいので、後半部分にあたる番号4 (中央に位置する値の隣)以降を探索の範囲とします。同様の手順で探索の範囲の中央に位置する値を調べ、目的の値が中央に位置する値より小さければ前半部分を探索の範囲とし、大きければ後半部分を探索の範囲として、探索の範囲を小さくしていきます。(ステップ2~ステップ4の繰り返し)目的の値が中央に位置する値と一致するか、探索の範囲がつきてしまった時に探索を終了します。
 
 n 個の数値の配列を入力とし、目的の値と中央に位置する値を比較した回数を出力するプログラムを作成してください。ただし、中央に位置する値の番号を計算したとき、割り切れない場合は、小数点以下を切り捨てた値をその番号とすることとします。
与えられるデータ列は小さい順に整列されているものとします。
 




"
p00189,Convenient Location,"
 来春卒業するaさんは、就職を機に引越しをすることにしました。就職する会社は、オフィスがいくつかの町にあって、日によって出勤するオフィスが違います。そこでaさんは,どこのオフィスに
行くにも時間の短い町に住もうと考えました。
 
 そこであなたは、aさんを助けるため、住むのに一番便利な町を探すことになりました。
 
 町には 0 から始まる番号が振られており、町と町の間には道があります。それぞれの道に対して通勤時間が決まっています。aさんがある町に住んでいる場合に、自分の町のオフィスまでの通勤時間は 0 とします。このときに全ての町までの通勤時間の総和を考えます。例えば、町と道の配置が上の図のようになっていて、aさんが町1に住んだ場合には、それぞれの町までの通勤時間は



   町 0 まで 80
   町 1 まで  0
   町 2 まで 20
   町 3 まで 70
   町 4 まで 90

となり、総和は 260 となります。
 
道の数と、全ての道の情報を入力とし、それぞれの町に住んだ場合の通勤時間の総和を計算し、それが最小となる町の番号と、そのときの通勤時間の総和を出力するプログラムを作成してください。ただし、通勤時間の総和が最小となる町が複数ある場合は、一番小さい町の番号及びその時の通勤時間の総和を出力してください。町の総数は 10 以下、道の総数は 45 以下とし、全ての道は双方向に移動でき、通勤時間は方向によって変わらないものとします。また、どの町からでもその他全ての町への 経路があるものとします。
 


"
p00190,Eleven Puzzle,"
太郎君は 8 パズルが大得意で休み時間などにいつも友達に並び替えてもらって遊んでいます。そんなとき、友達から「もっと複雑なパズルは解ける?」と聞かれたのですが、他のパズルはやったことはありません。どうやらその友達は自作で 11 パズルを作っていたみたいです。そのパズルは以下のような形をしています。
 
11 パズルは 11 枚の正方形のカードと、図 1 のような形の枠を使って行います。最初に 11 枚のカードを枠に入れます。すると 2 カ所の空きスペースができますので、この空きスペースに隣接したカードを動かすことができます。これを繰り返し、カードをきれいに整列して、図 2 の完成型にすることが 11 パズルの目的です。
 
 太郎君はこのパズルに挑戦することにしました。ところが太郎君はこの 11 パズルをいとも簡単に解いてしまいました。そこで友達は「動かす数を一番少なくして解いてよ!」と無茶なことを言ってきました。太郎君は答えがわからないので、プログラムのできるあなたに 11 パズルを解くときの最小ステップ数を出すプログラムを作成してもらってから挑戦することにしました。このとき、2 カ所動かせるところがあるのですが、一つの数字を 1 スペース分移動させることを1ステップとして考えることとします。
 
11 パズルの初期状態を入力とし、11 パズルを解くときの最小ステップ数を出力するプログラムを作成してください。ただし、パズルを解くときの最小ステップ数が 20 ステップより多くかかってしまう場合は、「na」と出力してください。パズルの状態は、一行目の情報から順に入力されるものとし、数字の 0 は空きスペースを表します。例えば、図 1 の状態を表す入力は以下のようになります。
 


6
2 1 3
10 5 7 0 8
9 4 11
0


"
p00191,Baby Tree,"
 植物学者のサトー博士は苗木用の特殊肥料を何種類も発明しました。その肥料を苗木に与えると、瞬く間に苗木の大きさが変わります。
 但し、肥料に以下のように副作用があることが判明しました。
 1 回目に与えた肥料だけでは、苗木の大きさが変わりません。 2 回目以降は、その回に与えた肥料と、その直前に与えた肥料との組み合わせによって苗木に影響を与えます。良い影響を与えると苗木が伸び、悪い影響を与えると苗木が縮んでしまうこともあります。 
試しに、サトー博士は 3 種類の肥料 (肥料 1、2、3) に対し、ある時点で与えた肥料 (今回の肥料) とその直前に与えた肥料 (直前の肥料) の組み合わせによる苗木の成長度合いを調べ、以下の「成長度表」を作成しました。
 
 右表の 1 行目は今回与える肥料の番号で、1 列目はその直前に与えた肥料の番号です。他の数字は直前に与えた肥料と今回与える肥料の組み合わせによる苗木の成長度 (成長後対成長前の大きさの比率) を示します。成長度 &gt; 1.0 の場合は苗木が伸びる、成長度 &lt; 1.0 の場合は苗木が縮むことを示します。例えば肥料 1 の後に肥料 2 を与えると苗木の大きさが 3 倍になるが、肥料 1 の後に肥料 3 を与えると苗木の大きさが半分に縮んでしまいます。
 
 苗木に与える肥料の回数が制限された場合、苗木をできるだけ大きく育てるにはどの肥料をどのような順で与えればよいでしょうか?「成長度表」がその答え教えてくれます。例として上の表にある肥料を 3 回だけ与える場合、以下のように肥料 3 → 肥料 1 → 肥料 2 の順にあげると最も苗木が成長します。
  1 回目の肥料 (肥料 3) では苗木の大きさは変わりません。  2 回目の肥料 (肥料 1) では、表より肥料 3 後の肥料 1 での成長度が 3.0 なので、苗木の大きさは前回の 3.0 倍になります。  3 回目の肥料 (肥料 2) では、表より肥料 1 後の肥料 2 での成長度が 3.0 なので、苗木の大きさはさらに前回の 3.0 倍で、最初の 3.0 &times; 3.0 の 9.0 倍になります。 
今度は、サトー博士は発明した n 種類の肥料を全部調べて、上のような「成長度表」を作りあげましたが、非常に大きな表になってしまい、肥料の種類と与える順番を決めるのに大変苦労しています。
 
 そこで博士に代わり、n 種類の肥料の組み合わせによる苗木の「成長度表」中の成長度値部分を入力とし、肥料を m  回与えた後の最大の苗木の大きさを求めるプログラムを作成してください。ただし、初めの苗木の大きさを 1 とし、1 回目に与える肥料の成長度はどの肥料でも 1.0 とします。なお、肥料は 1 から n まで番号付けされています。


 


"
p00192,Multistory Parking Lot,"
 街中には駐車場の利用効率を上げるため、立体式やタワー式などの様々な駐車場があります。その中には、ひとつの駐車スペースに図のような「2段式駐車装置」を設置し、2台分の駐車スペースを確保している駐車場もあります。この2段式駐車装置は1台を昇降式のパレット(車を乗せる平らな鉄板)に乗せて上段に駐車させ、もう1台を下段に駐車することができます。
 
 このような2段式駐車装置を用いている駐車場では、上段の車を出し入れするのに、その都度、下段に駐車されている車を出して、退かす必要があるので、必ず管理人さんが駐車している車のカギを預かって、必要に応じて車の出し入れを行います。
 
鶴ヶ駐車場もこのような2段式駐車装置を設置している駐車場のひとつですが、人手不足のため、車の運転ができない人が管理人になってしまいました。そのため、一度駐車した車はお客さんが戻るまで動かすことができず、上段になった車は下段の車の持ち主が戻ってからでないと車を出すことができない状態になってしまいました。
 
次から次へと駐車しに来る車を手際よくさばかなければならない管理人さんを手伝うため、鶴ヶ駐車場のルールを満たすプログラムを作成してください。
 鶴ヶ駐車場の設備    駐車スペースは1つ以上あり、全て2段式駐車装置が設置されています。    各駐車スペースには1から順に番号が割り振られています。    初めは駐車場に1台も駐車していないものとします。 鶴ヶ駐車場は以下のようなルールを採用しています。 車を止める時 駐車する車の駐車時間が管理人に知らされます。 1台も駐車されていない駐車スペースから先に駐車していきます。 1台も駐車されていない駐車スペースがない場合には、空いている駐車スペースに駐車します。
ただし、そのような駐車スペースが複数あるときは以下の手順で駐車します。  駐車してある車の残り駐車時間が駐車しようとしている車の駐車時間以上のものがある場合、その差が一番小さい駐車スペースに駐車します。  駐車してあるどの車の残り駐車時間も駐車しようとしている車の駐車時間未満である場合、その差が一番小さい駐車スペースに駐車します。 満車(空いている駐車スペースがない)の場合、駐車しようとする車は駐車スペースが空くまで順番に待ちます。空いたと同時に、最初に待っていた車から順に駐車します。
 
※各条件において、該当する駐車スペースが複数ある場合は駐車スペース番号の最も小さいところに駐車することとします。また、同時刻に出庫する車がある場合は、出庫する車がすべて出てから駐車を始め、待っている車がある限り、駐車できるだけの車が同時刻に駐車することとします。
 車が出る時 管理人に知らされた駐車時間を過ぎた車は出庫します。 複数の駐車スペースで同時に駐車時間を過ぎた車があった場合、駐車スペース番号の小さい車から先に出庫します。 上段に駐車した車の駐車時間が過ぎた場合、下段の車が出庫するまで待たなければなりません。上段の車は下段の車が出庫した後、同時刻に出庫します。 
 下図で鶴ヶ駐車場の駐車方法の例を示します。この例では、駐車スペースの数は3で、車 b ~車 eがすでに駐車してあるとします。そこに駐車時間70分の車 a が来たことを考えます。駐車スペース3にはすでに2台駐車されているので駐車できず、まだ空いている駐車スペース1か駐車スペース2のどちらかに駐車することになります。駐車スペース1に駐車中の車 b の残り駐車時間は50分、駐車スペース2に駐車中の車cの残り駐車時間は22分で、どちらも車 a の駐車時間より少ないので、車 a の駐車時間との差がより小さい車 b が駐車してある駐車スペース1に駐車します。その結果、先に駐車していた車 b は上段になります。
 
 駐車スペースの数 m、駐車する車の台数 n、各車の駐車時間 t を入力とし、駐車場から出てくる順番に車の整理番号を出力するプログラムを作成してください。ただし、車には入力の順に1からはじまる整数の整理番号が割り振られており、車は10分おきに1台ずつ整理番号順に駐車しにくるものとします。
 


"
p00193,Convenience Store,"
 コンビニエンスストア・デブンイレブンは事業を広げるため若松市に一店舗目をオープンしようと考えています。若松市には既に他のたくさんのコンビニエンスストアがあるので、新店舗をオープンする場所が成功の鍵を握ることになりそうです。デブンイレブンは「お客さんは自分の住んでいる地域から最も近いコンビニを利用する」という前提の下、「多くのお客さんが利用するであろう地点」に出店することにしています。
 
デブンイレブンは、既設の各コンビニがカバーしている範囲を把握するため、若松市の地図を合同な正六角形(以後「ブロック」)を用いて区分しました。このとき、各ブロックには既設のコンビニが多くとも一つだけ入るように区分しました。この地図上で、各ブロックからあるコンビニへ行くのに経由するブロックの数をもとにコンビニとの距離を求めます。各ブロックはこの距離が最も小さいコンビニによってカバーされていると考えます。問題は、この地図をもとに「できるだけ多くのブロックをカバーする既設のコンビニがないブロック」を探すことです。
 
 デブンイレブンのプログラマであるあなたは、ブロック分けされた地図情報と新店舗の候補地の情報から、最も広くカバーできるブロック数を計算するプログラムを開発することになりました。
  
 m &times; n に区分した地図は図1のように表します。六角形のブロックが横に m 個、縦に n 個並び、それぞれは一つの座標(x, y)で示されます。奇数行の左端はその上の行の左端の左下に、偶数行の左端はその上の行の左端の右下に、それぞれ位置します。例えば、座標(1, 1)は図1の一番左上のブロックを示します。また、座標(1, 2)は座標(1, 1)の右下に位置し、座標(1, 3)は座標(1, 2)の左下に位置します。
 
 図2は既設のコンビニが6個あった場合の例で、6 &times; 6 に区分されています。各コンビニは1から順に番号が振られています。このとき、各コンビニがカバーするブロックを番号毎に塗り分けると図3のようになります。座標(1, 4)や(2, 5)のように塗られていないブロックは最も近いコンビニが二つ以上あり、どちらとも判断がつかないブロックになっています。例えば、座標(1, 4)のブロックの場合、番号4のコンビニと番号5のコンビニへの距離が等しく、このブロックをカバーしているコンビニはないものとして考えます。番号4のコンビニがカバーしているブロック数は5となります。
 
 ここで、デブンイレブンが座標(1, 3)と座標(5, 3)を新店舗の候補地として考えているとします。座標(1, 3)に店舗を構えた場合、カバーできるブロック数は3となります(図4)。一方、座標(5, 3)に店舗を構えた場合にカバーできるブロック数は4となります(図5)。したがって、最も広くカバーできるブロック数は4となります。
 
 地図情報 m &times; n、既設のコンビニの数 s とその座標(x, y)、候補地の数 t とその座標(p, q)を入力とし、全候補地の中で最も広くカバーできるブロック数を出力するプログラムを作成してください。
 


"
p00194,Delivery Company,"
 白虎運送は会津若松市を代表する運送会社です。昨今の原油価格の高騰は運送会社にも多大なダメージを与え、運送会社各社では、できるだけ少ないガソリンで荷物を運ぶことが課題となっています。
 
 白虎運送では、重い荷物を積んだトラックは、その走りだしに多くのエネルギーを必要とすることに着目しました。トラックが倉庫を出発してから一度も停止することなく目的地まで到達する経路の中で最短時間の経路を通ることで、ガソリンの節約ができると考えました。
 
あなたの仕事は、このような最短経路を計算できるカーナビを開発することです。作成するカーナビ用プログラムの仕様は以下のとおりです。
 市内は、下図のように、東西方向の道路 m 本、南北方向の道路 n 本 からなる格子で表し、格子の各交点は交差点を表します。 交差点のいくつかには東西 - 南北の方向に信号機が設置されており、一定の周期で青、赤のシグナルが点灯しています。 市内の交差点間を結ぶ道路には工事中で通過できない個所がいくつかあります。 トラックが交差点から交差点へ移動するのに必要な時間は一定ですが、渋滞している道路ではさらに長い時間がかかります。 
市内の道路情報、トラックが交差点間を移動するのに必要な時間、信号機がある交差点と各信号機の周期、工事中の道路、渋滞している道路と渋滞度、白虎運送の倉庫(始点)と目的地(終点)の位置を入力とし、始点から終点までの最短の時間を出力するプログラムを作成して下さい。
 
図のように、東西の方向の道路はa、b、c、... と英小文字で名前が付けられ 、南北の方向の道路は 1、2、3、... と整数で名前が付けられています。市内の交差点は、これらの英小文字と整数の組み合わせ h-v で指定されます。
 
例えば、市内の最北西の交差点は a-1 で指定されます。各信号は周期 k をもち、k 分ごとに切り替わります。東西が青ならば南北が赤で、南北が青ならば東西が赤です。黄色のシグナルは存在しません。トラックは二つの交差点を結ぶ道路を移動するのに d 分要しますが、その道路が渋滞している場合はさらに d 分の時間を要します。トラックは道路が工事中の場合は移動できません。
 
また、交差点に到達した時刻に、信号が赤の場合には進入できません。トラックは交差点でのみ、東、西、南、北に方向を変えることができますが、来た方向へは移動(uターン)できません。道路は2方通行であり、トラックが行き来する時間、工事状況、渋滞度は2方向共通です。
 
 初期状態として、トラックは東を向いていて、トラックが倉庫を出発する瞬間すべての信号機が南北の方向に青に切り替わるものとします。また、トラックは 100分以内で目的地に到達できるものとします。
 


"
p00195,What is the Most Popular Shop in Tokaichi?,"
 会津若松市では、毎年1月10日に「十日市」という初市があります。この十日市は、約600年の歴史があり会津地方最大の初市です。会津地方ではお馴染みの縁起物である、起き上がり小法師(おきあがりこぼし)が売られていることでもよく知られています。起き上がり小法師は、大きさ3cm 程度の重心が底にある張り子で、転がしてもすぐに起きあがることからこの名前が付きました。各家庭では、必ず家族より一個多く買って神棚に供えます。この一個は、 「家族が増えるように」や「厄を背負ってくれる」との意味があります。
 
十日市実行委員会では、次回の十日市に向けて、起き上がり小法師の販売個数が一番多い出店を調べることになりました。今年の出店の数は5店(a、b、c、d、e:半角英字)で、販売個数は、午前と午後に分けて十日市実行委員会に報告されています。
 
各出店の情報を入力とし、一日の販売個数が一番多い出店の名前とその個数を出力するプログラムを作成してください。
 


"
p00196,Baseball Championship,"
 野球の国別対抗戦 wbc で、日本が2連覇達成!! 野球人気が高まる中、会津学園高校を会場に野球大会が行われました。この大会では、総当りのリーグ戦を行い、以下のような方法で順位を決めることになりました。
  勝ち数の多いチームを上位とする  勝ち数が同数の場合は負け数の少ないチームを上位とする 
 各チームの成績を入力とし、チーム名を上位のチームから順に出力するプログラムを作成してください。同順位のチームが存在する場合は、入力順に出力してください。ただし、チーム数 n は 2 以上 10 以下の整数、チーム名 t は 1 文字の半角英字、試合毎の成績 r は n - 1 個の数字で表され、勝ちの場合は 0 、負けの場合は 1 、引き分けの場合は 2 とします。また、チーム名に重複はないものとします。
 


"
p00197,Greatest Common Divisor: Euclidean Algorithm,"
 最大公約数は、コンピュータ上で扱う数学には欠かせない要素です。最大公約 数を使うことで、計算の効率が大きく変動することもあります。最大公約数を求めるアルゴリズムのひとつが「ユークリッドの互除法」です。その処理 の流れを以下に示します。
 
例えば 1071 と 1029 の場合、1071 を x 、1029 を y に代入して、
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   1071 &divide; 1029 の余りは 42 、x に 42 を代入して x  と y を入れ替える。 (1 ステップ)

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     1029 &divide;   42 の余りは 21 、x  に 21 を代入して x と y を入れ替える。 (2 ステップ)
                                                  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;       42 &divide;   21 の余りは  0 、x に  0 を代入して x と y を入れ替える。 (3 ステップ)
y が 0 になったので、この時の x が最大公約数となる。よって最大公約数は 21 。
 
  このように、たったの 3 ステップで 1071 と 1029 の最大公約数を求めることが出来ました。ユークリッドの互除法は約数を出して比較していく方法に比べ、圧倒的に早く結果を出してくれます。
 
２つの整数を入力とし、ユークリッドの互除法を用いて最大公約数を求め、その最大公約数と計算にかかったステップ数を出力するプログラムを作成してください。
 



"
p00198,Trouble in Shinagawa's Artifacts,"
  芸術家品川は n 点の作品を出展するように依頼されました。そこで、立方体の 6 面をペンキで色付けしたものを作品として出展することにしました。作品は、red、yellow、blue、magenta、green、cyan の 6 色全てが使われていて、各面は 1 色で塗りつぶされています。品川は形が同じ立方体の作品でも色の配置の仕方を変え、異なる作品として n 点作成しました。
 
 彼の友人であるあなたは、友人のよしみで作品を出展前に閲覧させてもらいましたが、そこであることに気が付きました。それらの作品の中に異なる色付けをされているように見えても、実は同じ色の組み合わせをした立方体が存在していたのです。このままでは、 n 点の作品を出展することできなくなってしまいます。
 
 作成した作品の数と各作品の色の情報を入力とし、出展するためにあと何点必要かを出力するプログラムを作成してください。
 
 立方体の各面の色は c1 から c6 までの記号で表され、 以下のような配置となっています。また、c1 から c6 のそれぞれは red、yellow、blue、magenta、green、cyan のいずれか 1 色となります。
 








"
p00199,Chairs Where Demanding People Sit,"
 4つの国の中心にある中立都市アイズシティには、大陸横断列車バンダイ号のホームがあります。 ホームには、バンダイ号を待つ乗客用の椅子が一列に用意されており、ホームに入ってきた人は自由に椅子を利用することができます。
 
  このバンダイ号、安いし早いし快適ということで、周囲の4つの国からの利用者が絶えません。今日は開通記念日ということで、ホームに座っている人たちに特別なことをしてあげようと思っています。そのためには、改札を通った人たちがどこに座っているか把握しなければなりません。4つの国の人たちの難儀な性格を考慮して、椅子がどのように埋まっているかをシミュレートするプログラムを作成してください。改札を通った人たちは、次々に一列に並んだ椅子に座っていきます。4つの国の人たちは、国ごとに決まった性格と座り方があります。それぞれの座り方は以下の通りです。
 
バンダイ号に乗ろうとしている乗客の情報を入力とし、 椅子にどのように座っているかを出力するプログラムを作成してください。左から順番に座っている人の国籍を出力します。ただし、空席の場合は # (半角シャープ)を出力してください。
 




"
p00200,way Ticket of Youth,"
太郎君は夏休みに電車で長旅をする計画を立てています。しかし高校生の身である太郎君が一ヵ月しかない夏休みで可能な限り遠くに旅をするには、出来るだけ安い行き方と出来るだけ早い行き方をそれぞれ見つけなければうまく計画が立てられません。太郎君が素敵な旅を満喫できるように、太郎君の計画の助けになるプログラムを作ってあげましょう。
 
線路の情報、駅の数を入力とし、問い合わせに応じて、最小金額または最短時間を出力するプログラムを作成してください。
 

"
p00201,Wrought Gold Master,"
  あなたはついに魔法の釜、錬金釜を手に入れました。錬金釜に複数のアイテムを入れると、新しいア イテムを作ることができます。新しく作ったアイテムは、他のアイテムを作るために錬金釜へ入れることもできます。アイテムを作るために必要なアイテムのリストを記したものを錬金レシピと呼ぶことにします。以下の 3 つは錬金レシピの例です。
  木片と糸でラケットができる。  お米と水でおにぎりができる。  ラケットとマイクとおにぎりでギターができる。 
  アイテムはお金を使って手にいれることもできますが、錬金釜で作った方が安くすむ場合もあります。例えば、各アイテムの購入価格が以下のように与えられているとします。
 
 ラケットは 5,000 円で購入できますが、木片と糸を購入して錬金すれば 3,800 円で手に入れられます。更に、錬金を重ねることによりとてもお得にアイテムを手に入れられます。図 1 は上記 3 つの錬金レシピ例を組み合わせたものです。ギターは 98,000 円で購入できますが、木片、糸、お米、水、マイクを購入して錬金すれば、たったの 13,636 円で手に入れられます。
 図 1 
 あなたは冒険を楽に進めるため、なるべく安く目的のアイテムを手に入れようと考えました。 アイテムのリスト、錬金レシピのリスト、指定されたアイテムを入力とし、指定されたアイテムを作るために必要な金額の最小値を出力するプログラムを作成して下さい。
 
 アイテムリストに含まれるアイテムの種類 n は 1 以上 100 以下の整数とし、各アイテムを購入する場合の値段 p は 0 以上 1000000 以下とします。アイテムの名前 i は 1 文字以上 100 文字以下のアルファベットからなる半角文字列です。錬金レシピの種類 m は 0 以上 100 以下の整数です。 1つの錬金レシピはアイテムの名前 o、それを作るために必要なアイテムの個数 k 、 k 個のアイテム名 q のリストによって与えられます。k は 100 以下とします。
 
 各アイテムの数量に限りはないものとします。アイテムは複数のレシピに使われることがありますが、1 つのアイテムを作るためのレシピはたかだか 1 つです。また、あるアイテムを起点としてレシピをたどっていったとき、そのアイテムが再びレシピに現れることはありません。
 

"
p00202,At Boss's Expense,"
会津太郎さんの会社には、割り切れない事が大嫌いな上司がいます。太郎さんがその上司と食事に行くときは、割り勘で会計をしているのですが、支払金額が参加人数で割り切れないときは、いつも上司がおごってくれています。
 
 ある日、太郎さんは食事会の幹事になりました。お金の少ない太郎さんは、その上司を誘ってなんとかおごってもらえるように出来ないか考えました。もう料理屋に注文をしなければならないのですが、まだ何人参加するかは分からないので、どんな人数が参加してもおごってもらえるような注文をしておきたいようです。太郎さんの同期で、同じく食事会に参加する予定のあなたは、太郎さんに協力して、予算額以下で最大のどんな人数でも割り切れない金額を算出することにしました。
 
 料理の種類、各料理の料金、予算額を入力とし、予算額以下で最大のどんな数字でも割り切れない合計金額(ただし、 1 と合計金額は除く)を出力するプログラムを作成してください。なお、各種類の料理は複数個注文できますが、全種類の料理を注文する必要はありません。ただし、このような合計金額がない場合は、 na と出力してください。
 






"
p00203,A New Plan of Aizu Ski Resort,"
 会津山スキー場の経営者である油木屋さんは、上級者向けとして障害物やジャンプ台を配置したコースを用意しました。コースにはいろいろな滑り方があり、シーズン中に全てのパターンの滑り方が出来た利用者には、プレゼントを贈ることになっています。
 
油木屋さんのために、コースの見取り図をもとに滑り方のパターン数を出力するプログラムを作ってあげましょう。
 
 しかし、オープン直前になって、油木屋さんは滑り方のパターン数を記録した書類をなくしてしま
いました。どうにかして書類を作り直したい油木屋さんは、コースの見取り図を片手にあなたに助け
を求めてきました。油木屋さんのために、コースの見取り図をもとに滑り方のパターン数を出力する
プログラムを作ってあげましょう。
 
  コースは上図のような x &times; y 個のマスからなるグリッドで表されます。左上を原点とし、x 座標は右に行くにつれて大きくなり、y 座標は下にいくにつれて大きくなるものとします。
 
 各滑り方のパターンは、最も高いところ(y = 1 、ただし障害物の無いところ) からスタートし、ゴール(y = y) に向かって進んでいきます。グリッドのマス(x, y) にいる滑走者は、(x &minus; 1, y + 1)、(x, y + 1)、 (x + 1, y + 1) のいずれかに移動することができます。マスには、障害物やジャンプ台があり、障害物のあるマスには進入できず、ジャンプ台があるマスに進入すると(x, y + 2) へ移動します。ただし、いちばん高いマス (y = 1 のマス) にはジャンプ台は存在せず、ジャンプ台のあるマスに進入する際には x 座標が同じマスからしか進入できません。コースの上端(y = 1) からスタートし、コースからはずれることなく下端を超えれば(y &ge; y) 1つの滑り方とみなし、滑り終わります。
 
  コースの情報を入力とし、滑り方の総数を出力するプログラムを作成してください。
 


"
p00204,UFO Shooting Down Operation,"
  40xx 年、地球は宇宙人の侵攻を受けていた!すでに地球のほとんどは宇宙人により制圧されており、残る防衛拠点は鶴ヶ城要塞のみになってしまった。その鶴ヶ城要塞にも、制圧部隊が次々に迫ってきている。
 
  しかし、希望は残されている。防衛軍の最終兵器、超長距離貫通レーザー砲が完成したのだ。欠点といえば、   威力が出るまでに一定の距離が必要で、          近すぎる敵はただ通りぬけてしまうということだ。  威力が出ない範囲に侵入した敵は、他の戦力でどうにかするしかない。防衛軍の参謀は、侵入して来た ufo に対処するために、その数を知らなければならないのだが、あまりにも敵が多いせいでうまく数えられそうにない。そこで参謀はあなたに、レーザーに撃墜されなかった ufo の数を出力するプログラムを用意するように命令した。戦闘開始までにプログラムを作成し、鶴ヶ城要塞を守る力となろう。
 
  敵の ufo はただまっすぐにレーザー砲のある拠点を目指して突撃してくる(ufo には互いにすり抜ける処理が施されており、衝突してしまうことはない) 。レーザー砲は、初期状態から 1 分後に最も近い ufo の中心を狙ってレーザーを発射し始め、それから 1 分ごとに同じ条件でレーザーを発射し続ける。レーザーは貫通し、その先にある ufo もレーザーがかすっただけで撃墜することができる。しかし、このレーザーには威力の出ない範囲があり、その範囲に入ってしまったufo は狙っても意味がないため、狙わないように設計されている。撃墜できるだけ撃墜したとき、レーザーの威力が出ない範囲には何機の ufo が侵入しただろうか。
 
  レーザーの威力が出ない範囲の半径 r と、襲来する ufo の情報を入力とし、撃墜されず侵入している ufo が何機いるかを出力するプログラムを作成してください。 襲来する ufo の情報は、ufo の数 n 、各 ufo の初期座標 (x0, y0)、各 ufo の半径 r 、各 ufo の分速 v で構成されます。
 
  座標の原点 (0 , 0) をレーザー砲の位置とします。レーザー砲と ufo の距離は原点から ufo の中心までの距離で与えられ、この距離が r 以下の ufo はレーザーの威力が出ない範囲に入ったとします。狙うべき対象が同時に複数存在する場合はないものとして考えます。計算は全て平面上で考え、入力はすべて整数で与えられます。
 


"
p00205,Rock,"
 仲良し 5 人組でじゃんけんをすることになりました。じゃんけんとは、グー、チョキ、パーという 3つの手があり、グーとチョキの勝負ならグーが「勝ち」・チョキが「負け」、チョキとパーなら、チョキが「勝ち」・パーが「負け」、パーとグーならパーが「勝ち」・グーが「負け」というルールです。全員が同じ手、またはグー、チョキ、パー全てが出た場合は「あいこ」となります。
 
 5 人のじゃんけんの手を入力とし、それぞれの人の勝敗を出力するプログラムを作成してください。じゃんけんの手は、グーは 1、チョキは 2、パーは 3 の数字で表します。勝敗は「勝ち」を 1、「負け」を 2、「あいこ」を 3 の数字で表し、入力順に従って出力します。
 


"
p00206,Next Trip,"
  あなたは友人と旅行に行きたいと考えています。ところが、浪費癖のある友人はなかなか旅行費用を貯めることができません。友人が今の生活を続けていると、旅行に行くのはいつになってしまうか分かりません。そこで、早く旅行に行きたいあなたは、友人が計画的に貯蓄することを助けるプログラムを作成することにしました。
 
  友人のある月のお小遣いを m 円、その月に使うお金を n 円とすると、その月は (m - n) 円貯蓄されます。毎月の収支情報 m 、 n を入力とし、貯蓄額が旅行費用 l に達するのにかかる月数を出力するプログラムを作成してください。ただし、12 ヶ月を過ぎても貯蓄額が旅行費用に達しなかった場合はna と出力してください。
 

"
p00207,Block,"
 a さんの家に親戚の b 君がやってきました。彼は 3 歳でブロックが大好きです。彼が持っているブロックは図 1 のような形をしています。
 
図1
 
 b 君はボードの上にブロックを敷き詰めています。彼に「何を作っているの?」と聞くと、彼は「迷路!!」と元気よく答えました。彼の言う迷路とは、スタートからゴールまで側面が接している、同じ色のブロックだけでたどることができるブロックの配置のことだそうです。図 2 は黄色のブロックにより、左上(スタート)から右下(ゴール)へ迷路ができていることを表しています。

 
図2
 
 無邪気に遊んでいる b 君を横目に、プログラマーであるあなたは、ブロックの並びが迷路となっているかを確かめてみることにしました。
 
 ブロックの情報とスタート、ゴールの座標を入力とし、ブロックが迷路となっていれば ok 、なっていなければ ng を出力するプログラムを作成してください。 ボードは横方向に w 、縦方向に h の大きさをもち、 左上の座標は(1 , 1)、右下の座標は(w, h)とします。ブロックは 2 &times; 4 の長方形ですべて同じ大きさです。ブロックの色 c は 1 (白)、2 (黄)、3 (緑)、4 (青)、5 (赤) のいずれかです。ブロックのボード上での向き d は 横方向に長い場合 0 、 縦方向に長い場合 1 とします。 ブロックの位置はブロックの左上の座標 (x, y) によって表されます。なお、ブロックの位置は他のブロックと重なることは無く、ボードからはみ出すこともありません。
 


"
p00208,Room Numbers of a Hospital,"
  ウォーターデブンに住む建築家のデブンキーさんのもとに、古い大病院を改装する仕事の依頼が舞い込んできました。
 
  国によっては忌み数(いみかず)として嫌われる数字を部屋番号に用いたくない人がいます(日本では 4 と 9 が有名です)。しかし、この病院の部屋番号は忌み数に関係なく、1 から順番に付けられていました。
 
  それが気になったデブンキーさんは、機材やベッドの入れ替えが全て終わる前にウォーターデブンの忌み数である「4」と「6」を除いた数字で部屋番号を付けなおしてしまいました。しかし、入れ替え作業は旧部屋番号で計画していたので、残りの作業を確実に行うには旧部屋番号を新部屋番号に変換する必要があります。計算が苦手なデブンキーさんはこのことに気づいて愕然としています。
 
  そんなデブンキーさんのために、旧部屋番号を入力とし対応する新部屋番号を出力するプログラムを作成してください。
 
15 番目までの部屋番号の対応表は以下のようになります。
 




旧部屋番号 1 2 3 4 5 6 7 8  9  10  11 12 13 14 15


新部屋番号 1 2 3 5 7 8 9 10 11 12 13 15 17 18 19





"
p00209,Scene in a Picture,"
 a 君は会津に観光にやってきました。宿泊したホテルの窓からは会津盆地が一望できます。景色を眺めていると、床に写真の切れ端が落ちているのに気がつきました。どうやら窓から外の景色を撮ったようです。「どの辺りを撮ったのかな」と、a 君は窓の外の景色と写真が同じ大きさになるように写真をかざして、写真と窓の外の景色が一致する場所を探し始めました。
 
 それでは、a 君がやっていることをコンピュータでやってみましょう。窓の外の景色を n &times; n マスの正方形に分割します (n を景色の大きさと呼びます)。各マスには、そのマスの画像の情報を表す 0 以上の整数が書かれています。マスの位置は座標 (x, y) で表します。各マスの座標は以下の通りになります。
 
 写真の切れ端は、m &times; m マスの正方形で表されます (m を写真の切れ端の大きさと呼びます) 。この正方形の中で、切れ端の部分のマスには画像の情報が、切れ端に含まれない部分のマスには -1 が書かれています。たとえば、下図では、色が塗られている部分が実際の写真の切れ端の形を表しています。切れ端に穴が開いていることはありますが、必ず 1 つにつながっています。 (0 以上の値をもつマスが頂点だけで接しているときは、つながっていないものとみなします。) また、値 -1 のマスが縦または横 1 列に端から端まで並ぶことはありません。
 
  窓から見える景色の中で、写真の切れ端を 0、90、180、270 度回転させたいずれかと一致する領域を探します。たとえば、景色が下図のように表わせるとき、上図の切れ端を反時計回りに90 度回転させると、色が塗られた領域に一致します。
 
 窓から見える景色と写真の切れ端の情報を入力とし、景色の中で、切れ端を 0、90、180、270 度回転させたいずれかと一致する領域の最も上端に近いマスのうち、最も左端に近いマスの座標を出力するプログラムを作成してください。
 
 一致する領域が複数ある場合は、それらの領域内にあるマスの中で、最も上端に近いマスのうち、最も左端に近いマスの座標を出力してください。一致する領域がないときは、na と出力します。
 


"
p00210,The Squares,"
 この度、有名なテーマパークに、巨大迷路ザ・スクエアーズが新しく完成しました。 消防署の指導により避難訓練をしなければなりませんが、巨大迷路なだけに訓練にかかる時間を予測することができません。そこで、あなたは以下の仕様をもとに避難訓練シミュレータを開発することになりました。
 
 巨大迷路は図 1 に示すように、横 w 、縦 h の w &times; h 個のマス目で表わされます。各マス目は、通路(白いマス目)、壁(茶色いマス目)  、非常口(緑のマス目)のいずれかです。図中の○は人を表し、その中の英小文字(e、w、s、n)はその人が向いている方角(東西南北)を表しています。図は上方向が北になるように描かれています。
 図1 
 巨大迷路内にいる人は最初、東西南北のいずれかの方向を向いて立っています。各人は 1 秒単位で同時に次に示す手順で移動を試みます。
 現在向いている方向の、右、前、左、後のマス目を順番に調べ、最初に見つけた、空いている通路または非常口の方向に向きを変えます。そのようなマス目が無い場合は向きを変えません。  目の前のマス目が空いていて、他の人の目の前のマス目になっていない場合は移動します。同じマス目を目の前のマスとする人が複数いる場合は、そのマス目の、東、北、西、南のマス目にいる人の順で選択された 1 人が移動します。
 
 移動後に非常口に到着した人は、無事避難し迷路内から消えます。
 
 与えられた巨大迷路と人の位置情報を入力とし、全ての人が避難し終える時間を出力するプログラムを作成してください。   脱出に 180 秒より長い時間を要する場合は na と出力して下さい。  迷路と人の位置情報は、 h 行 w 列の文字によって与えられます。各文字の意味は以下のとおりです。
 
# : 壁
. : 床
x : 非常口
e : 東を向いている人
n : 北を向いている人
w : 西を向いている人
s : 南を向いている人
 
なお、迷路と外部との境界は壁 # または非常口 x のいずれかです。また、巨大迷路の中には、人が必ず１人以上います。
 


"
p00211,Jogging,"
 赤ベコ小学校では、生徒全員が参加する、ちょっと変わったジョギングをします。生徒は、それぞれ独自の周回コースを、自分のペースで走ります。それぞれ自分のコースを 1 周すると小学校に戻ってきます。全員が小学校を同時にスタートしてから、全員が同時に小学校で最初に出会うのは、それぞれ何周したときでしょうか?
 
 生徒の人数 n、各生徒のコースの 1 周の距離 d (km)  、各生徒の走る速さ v (km/時間)を入力とし、全員が小学校を同時にスタートしてから次に同時に小学校に位置するのは、各生徒がそれぞれ何周したときかを出力するプログラムを作成してください。なお、各生徒は 231-1 周を超えて走ることはありません。
 


"
p00212,Highway Express Bus,"
a 君は高校の休みを利用して、高速バス(以下、「バス」 )で一人旅をする計画を立てています。まず、a 君は一番行ってみたい町を選んでそこを目的地にしました。次に出発地から目的地までバスを乗り継いでいくルートを決めなければなりません。乗り継ぎをするときは、バスを降りてから別のバスに乗り換えるので、それぞれのバスの乗車券が必要になります。
 
 a 君は親戚のおじさんからバスの割引券を何枚かもらいました。   この券を 1 枚使うと乗車券 1 枚を半額で購入できます。例えば、図 1 の出発地5から目的地1へ行く場合には、5→4→6→2→1と5→3→1の二つの経路が考えられます。割引券が 2 枚あるとすると、交通費を最も安くするには5→4→6→2→1の経路をたどった場合、4→6と6→2の路線に割引を利用し、合計料金は 4600円となります。一方、5→3→1の経路をたどった場合、5→3と3→1の路線に割引を利用し、合計料金は 3750 円となります。
 
 a 君は観光にお金を回したいので、交通費はできるだけ少なくしようと考えています。そこで a 君は、出発地から目的地までの最も安い交通費を求めるプログラムを作成することにしました。
 
図1
 
 割引券の枚数、バスがつなぐ町の数、バスの路線数、各バスの路線情報を入力とし、出発地から目的地までの最も安い交通費を出力するプログラムを作成してください。各バスは双方向に同一料金で運行しています。また、町の数を n とすると、町にはそれぞれ異なる 1 から n までの番号が振られています。出発地から目的地までの経路は必ず存在するものとします。
 


"
p00213,Subdivide The Land,"
 ハウジングメーカーの山田ハウスは、新たな目玉商品として、学校や病院など環境が充実している緑ホームタウンの分譲地を売り出しました。この分譲地は複数の区画に分割されており、好きなだけ購入できますが、購入する区画を合わせた土地の形状は長方形(正方形を含む)でなければなりません。
 
 山田ハウスは、全区画が完売した分譲地を管理するため購入者ごとに境界線を引き、その区画の 1つに購入者番号を書いた看板を設置しておきました。境界線は地面に木の枝で線を引いただけのものであったため、数日後の豪雨により消えてしまい看板だけが残りました。図 1 は看板のあった区画に、その区画を買った購入者番号を記したものです。これでは分譲地がどのように買われたか分かりません。救いは事務所の引き出しにあった購入者番号 b と購入区画数 k のメモ(図 2)が見つかったことです。
 図１（左）：看板の配置、図2（右）：メモ 
 プログラマーであるあなたは、プログラムを書いて山田ハウスを助けることになりました。分譲地の大きさ x &times; y 、購入者数 n 、メモの情報 b、 k 、及び看板の位置情報 s を入力とし、図 3 に示すように各区画の購入者を出力するプログラムを作成してください。
 
図3：各区画の購入者
 
与えられた情報について、以下の場合は na と出力します。
  区画を区別する方法が存在しない場合  区画を区別する方法が複数存在する場合 




"
p00214,Autumnal Illumination,"
 四角形が大好きな人が多く住む四角町では、四角形の電光板を組み合わせたイルミネーションで町中を彩るお祭りが開催されます。この電光板は電気を流すと発光し、発光している板に接している板も発光します。したがって、電光板を何枚使っても、すべてがひとかたまりに接していれば電源がひとつで済むという優れものです。
  
お祭り実行委員会では、四角形を組み合わせたデザインを町民から募集し多数のイルミネーションを作成します。各イルミネーションは、デザインを構成する四角形の配置によって必要となる電源の個数が変わるため、必要な電源の個数を把握する作業に大きな手間がかかります。そこで、あなたは四角形の配置を調べ、必要な電源の個数を計算するプログラムを作成して実行委員会を手助けすることにしました。
 
イルミネーションの個数、各イルミネーションを構成する四角形の情報を入力とし、イルミネーションごとに必要な電源の個数を出力するプログラムを作成してください。重なっていたり接していたりする四角形を 1 つのまとまりと考え、1 つのまとまりに対して電源の個数は 1 つと数えてください。
 



"
p00215,Pachimon Creature,"
 某国で大人気のゲーム、パチモンクリーチャーが日本でリメイクされて発売されました。 ゲームが大好きなあなたは、  このゲームを何度もプレイするうちにどうしたら最速でクリアできるのか考えるようになりました。しかし、いくら考えても最速の攻略方法がわからなかったあなたは、どれだけ早くゲームをクリアできるかを求めるプログラムを作成することにしました。 
 
ゲームの詳細は以下の通りです。
 
 パチモンクリーチャー(以下、パチクリ)という生物が多く存在する世界がゲームの舞台です。各パチクリは、火属性、氷属性、木属性、土属性、水属性の 5 種類の属性のいずれか一属性を持ちます。ゲームの主人公である e 君は、近所に住んでいる親切なおじさんから好きな属性のパチクリ一匹を冒険のパートナーとして受け取ります。そのパチクリと共にゴールを目指し、ゴールにいるライバルを倒してパチクリマスターになることが主人公の夢であり、ゲームクリアでもあります。
 
パチモンクリーチャー(以下、パチクリ)という生物が多く存在する世界がゲームの舞台です。各パチクリは、火属性、氷属性、木属性、土属性、水属性の 5 種類の属性のいずれか１つの属性を持ちます。ゲームの主人公は、ゲーム開始時に好きな属性のパチクリ一匹を冒険のパートナーとして選びます。そのパチクリと共にゴールを目指し、ゴールにいるライバルを倒してパチクリマスターになることがゲームの目的です。
 
 しかし、ライバルを倒すためには全属性のパチクリがいないと勝てないので、途中で全属性のパチクリを捕まえなければなりません。パチクリを捕まえるには属性がカギとなります。火属性のパチクリは氷属性のパチクリを捕まえることができ、同様に、氷属性は木属性、木属性は土属性、土属性は水属性、水属性は火属性を捕まえることができます。属性の関連は以下の図のようになります。
 
以下の図はゲームが行われるマップの一例を表しています。
 
 主人公はパチクリを一匹もってスタート地点である「s」から出発し、一マスずつ移動しながらゴール地点である「g」を目指します。その途中で、最初に持っているパチクリ以外の 4 つの属性のパチクリを捕まえ、ゴール地点であるマス目に移動するとゲーム終了となります。
 
主人公は、今いるマス目から、辺を共有する隣のマス目に移動することができ、それを一回の移動と数えます。主人公がパチクリのいるマスに移動した場合、そのパチクリを捕まえられる属性のパチクリを持っていればそのパチクリを捕まえたことになります。そのマスにいるパチクリを捕まえられるかの可否にかかわらず、すべてのマスに何度でも移動することができます。
 
 マップの大きさ(横方向の列数、縦方向の行数)とマップの初期状態を入力とし、初めに選んだパチクリの属性と、それ以外の 4 つの属性のパチクリを捕まえるのにかかる、スタート地点からゴール地点に至る最小移動数を出力するプログラムを作成してください。
 


"
p00216,Cutting Down Water Bills,"
  松平さんは、普段からエコに気を付けて生活をしています。先月の水道料金が 4280 円となり、いつも目標としている 4000 円を超えてしまったので、今月は節水に努めてきました。先月と比べて水道料金はどのくらい節約できたのでしょうか。
 
今月の使用水量 w [m3] を入力とし、先月の水道料金である 4280 円と比較して、どのくらい水道料金を節約できたかを出力するプログラムを作成してください。
 
  なお、水道料金は次のように計算されます。
 
(水道料金) = (基本料金) + (水量による料金)
 
水量による料金は下表のように使用量に応じて計算されます。
 
例えば、使用水量 40 [m3] の場合は、
基本料金 1150 円(第 1 段階) + 10 [m3] &times; 125 円(第 2 段階) + 10 [m3] &times; 140 円(第 3 段階) + 10 [m3] &times; 160 円(第 4 段階) = 5400 円 

 となります。
 




"
p00217,Walking in the Hospital,"
会津リバーサイドホスピタルでは、リハビリと健康増進のため、入院患者が一日二回のウォーキングを行っています。元気に退院するために、ウォーキングで体力を回復しようと頑張る人が日に日に増えきたことから、院長が「一日で一番長い距離を歩いた人にプレゼントをあげよう!」という企画を立ち上げました。
 
  会津リバーサイドホスピタルでは、リハビリと健康増進のため、入院患者が一日二回のウォーキングを行っています。元気に退院するために、ウォーキングで体力を回復しようと頑張る人が日に日に増えていきました。健康になるにつれ、気持ちも明るく笑顔も見られるようになったことから、院長先生が、   「一日で一番長い距離を歩いた人にプレゼントをあげよう!」という企画を立ち上げました。
 
  患者の数 n (1 &le; n &le; 10000)、それぞれの患者の番号 pi (1 &le; pi &le; 10000)、一回目に歩いた距離 d1i、二回目に歩いた距離 d2i (0 &le; d1i, d2i &le; 5000) を入力とし、歩いた距離の合計が最も長い患者の番号とその距離を出力するプログラムを作成してください。ただし、一日に歩いた距離が同じ患者はいないものとします。
 


"
p00218,Dividing Students,"
  会津進学塾では、生徒が塾に入る際に実力テストを行ってクラス分けをします。テストは数学、英語、国語の 3 科目行い、生徒を a,b,c クラスにクラス分けします。a クラスのレベルが一番高く、順に低くなっていきます。
 
クラス分けの判断は以下の表に基づきます。
 
  複数の条件を満たす場合は、よりレベルの高いクラスに分けられます。
 
  生徒の人数 n (1 &le; n &le; 10000)、各生徒の数学の点数 pmi (0 &le; pmi &le; 100)、英語の点数 pei (0 &le; pei &le; 100)、国語の点数 pji (0 &le; pji &le; 100) を入力とし、各生徒のクラスa,b,c (半角英字) を出力するプログラムを作成してください。
 

"
p00219,cream Shop,"
テンアイスクリームという名前のアイスクリーム屋さんがあります。このお店では常に 10 種類のアイスクリームが店頭に並ぶようにしています。お店の店長は商品開発の参考にするために、アイスクリームの売れ具合を表すグラフを毎日作成しています。
 
 そんな店長のために、あなたは各アイスクリームの販売数をグラフで表示するプログラムを作成することになりました。
 
 一日に販売されるアイスクリームの総数と売れたアイスクリームの番号を入力とし、アイスクリームの種類ごとに販売した数だけ * (半角アスタリスク) を出力するプログラムを作成してください。ただし、アイスクリームの種類を 0 から 9 までの整数で表わします。また、販売個数がゼロのアイスクリームは、- (半角ハイフン) をひとつ出力します。
 


"
p00220,Binary Digit A Doctor Loved,"
  「君の靴のサイズはいくつかね」 

  初対面の私に、いきなり博士は尋ねました。

  「 23.5 です」

  「ほお、実にきりのいい数字だ。2 の 4 乗に 2 の 2 乗と 2 の 1 乗と 2 の 0 乗と 2 の  -1  乗を 加えた数だ」

  続けて博士は尋ねました。

  「君、身長はいくつかね」

  「はい、158.1 です」

  博士は腕組みをして目を閉じました。しばらくの沈黙の後、口を開きました。

  「ナァ~」

  その後一緒に過ごした時間の中で、博士の行動がだんだん理解できるようになりました。
 
  まず、 私が博士の求めに応じて実数を言います。実数が整数部 8 桁以内で小数部 4 桁以内の 2 進数で表される場合、博士は 2 進数への変換結果を満足げに語ります。そうでない場合、悲しげに「ナァ~」 と鳴きます。これは、私が負の実数を言うまで繰り返されるのです。
 
  さて、博士は年齢とともにだんだんに長い計算が難しくなってきました。そこで、みなさんが博士に代わって、実数を入力し 2 進数に変換・出力するプログラムを作ってあげてください。ただし、2 進表現が制限桁数 (整数部 8 桁以内 + 小数部 4 桁以内) に収まらない場合は、na (半角英字) を出力してください。入力される実数は整数部 8 桁以内、小数部 4 桁以内に収まるものとし、出力する 2 進表現は整数部 8 桁、小数部 4 桁で出力してください。
 

"
p00221,FizzBuzz,"
「fizz buzz」と言われる数字を使ったゲームがあります。このゲームは複数のプレイヤーで数字を1 から順にひとつずつ数え上げていくもので、各プレイヤーは直前のプレイヤーが発言した次の数字をひとつだけ発言します。その時、3 で割り切れる場合は 「fizz」, 5 で割り切れる場合は 「buzz」、両者で割り切れる場合は「fizzbuzz」と数の代わりに発言しなければなりません。例えば、最初の 16 までの発言は以下のようになります。
 
    1, 2, fizz, 4, buzz, fizz, 7, 8, fizz, buzz, 11, fizz, 13, 14, fizzbuzz, 16, ・・・
 
  太郎君は友達と「fizz buzz」をして遊ぶことにしました。太郎君たちはルールを次のように決めました。 
  
  「間違えた人は脱落する。その次の人は間違えた数の次の数から始める。つまり、1, 2, 3 と発言した場合、3 で間違えたので次は 4 から始めることになる。」
  

このルールに従ってゲームを行うのですが、ゲームに慣れていないため、間違えたことに気付かないことがあり、公平な判断ができません。そこであなたは太郎君たちがこのゲームを楽しめるように、決められた発言回数が終わった時点で残っていた人を出力するプログラムを作成することにしました。
 
  プレイヤー数、ゲーム中に発言された回数、それぞれの発言を入力とし、入力が終わった時点で残っているプレイヤーの番号を小さい順に出力するプログラムを作成してください。ただし、プレイヤーには 1 から番号が割り振られており、発言順番も 1 番目のプレイヤーから順に行い、一通り発言が終わると、再度 1 番目のプレイヤーから発言することとします。順番の回ってきたプレイヤーが既に脱落している場合は、その次のプレイヤーが発言します。また、このプログラムは、プレイヤーが一人になった時点で、その後の発言を無視しなければなりません。


 


"
p00222,Prime Quadruplet,"
  (a, a+2, a+6, a+8) のように並んだ 4 つの素数の組を四つ子素数といいます。四つ子素数を構成する四つの素数のうち、最大の数をその四つ子素数の大きさと呼びます。例えば、最も小さい大きさの四つ子素数は、(5, 7, 11, 13) の組であり、その大きさは 13 です。次に大きい四つ子素数は、(11, 13, 17, 19) の組で、その大きさは 19 です。
 
  整数 n (13 &le; n &le; 10,000,000) を入力とし、大きさが n 以下になるような四つ子素数のうち、最大となるものの大きさを出力するプログラムを作成してください。
 


"
p00223,Stray Twins,"
たかゆき君とかずゆき君は仲良しの双子ですが、行動が真逆です。 例えば、たかゆき君が西に行けば、かずゆき君は東へ行き、かずゆき君が北へ行けば、たかゆき君は南へ行きます。 現在 2 人はデパートに来ており、別々の場所にいます。真逆に移動してしまう 2 人ができるだけ早く出会うためにはどうしたらよいでしょうか?
 
  デパートは横 w 個 &times; 縦 h 個のマスで構成されるグリッドで表され、2 人は単位時間に東西南北に 1 マス分移動することができます。ただし、グリッドの範囲外や障害物のあるマスに移動することはできません。
 
図のように、グリッドのマスの位置は座標 (x, y) で表されます。
 
 グリッドの情報と 2 人の初期位置を入力とし、2 人が出会うまでの最短の時間を出力するプログラムを作成してください。出会うことができない場合や、出会うのに 100 以上の時間を要する場合は、na と出力してください。グリッドの情報は、h 行 w 列の数字、2 人の位置情報は座標によって与えられます。
  
  移動後にたかゆき君かかずゆき君のうち、どちらか一方が障害物やグリッドの範囲外に位置してしまうときには、移動ができないので、障害物やグリッドの範囲外に位置する方は元の場所に戻りますが、そうでない方は元の場所に戻ることなく動くことができます。
 
  なお、2 人が出会うとは、移動後に 2 人が同じマスに止まることを言います。2 人がすれ違っても、出会ったことにはなりません。
 

"
p00224,Bicycle Diet,"
  a さんは甘いものが大好きですが、最近は奥さんからダイエットするように言われています。ある日、a さんが自宅から市役所に出かけるとき、奥さんは自転車で行くことを勧めました。そこでa さんはしぶしぶ自転車に乗って出かけましたが、甘い物の好きな a さんは、途中にあるケーキ屋さんに立ち寄りケーキの食べ歩きをしようと思いつきました。
 
  自転車をこげば走行距離に応じてカロリーが消費されますが、ケーキを食べればその分カロリーが摂取されます。正味の消費カロリーは、自転車をこいで消費したカロリーからケーキを食べて摂取したカロリーを引いた値になります。したがって、正味の消費カロリーが 0 より小さくなることもあります。
 
  ケーキ屋さんでケーキを買ったら、 aさんはその場でケーキを全部食べてしまいます。 aさんがすべてのケーキ屋さんに立ち寄るとは限りませんが、ケーキ屋さんが存在する地点を通るときには、必ず立ち寄ってケーキを 1 つ買って食べるものとします。ただし、同じケーキ屋さんの前を何度も通るのはさすがに気がひけるので、各ケーキ屋さんに訪れられるのは 1 回だけとします。また、目的地の市役所をいったん通り過ぎてからケーキ屋さんに立ち寄り、その後で市役所に戻って用を済ませてもよいものとし、ケーキ屋さん以外は何度訪れても良いものとします。
 
  a さんの自宅から市役所までの地図情報と、その途中にあるケーキ屋さんで食べられるケーキのカロリーの一覧、単位距離の走行による消費カロリーを入力とし、自宅を出発してから市役所に入るまでの正味の消費カロリーの最小値を出力するプログラムを作成してください。
 
  地図には、a さんの自宅と市役所、ケーキ屋さんとランドマーク(目印)になる建物が書かれています。地図を表す入力データは、a さんの自宅、市役所、ケーキ屋さんとランドマークの各地点の間をつなぐ道があるとき、2 つの地点を表す記号とその間の距離からなる行を含みます。たとえば、5 番目のケーキ屋さんと 3 番目のランドマークの間の距離が 10 なら、入力データは以下のような行を含みます。
 
  このようにケーキ屋さんには c、ランドマークには l を番号の前につけて表します。また、a さんの自宅は h、市役所は d で表します。入力データに 2 つの地点とその間の距離が与えられているなら、2 地点の間をどちら向きにも進めます。たとえば、上の例ではケーキ屋さんからランドマークへも、その逆向きへも進むことができます。また、自宅から市役所までは必ずたどり着けるものとします。それ以外に与えられる入力データは、ケーキ屋さんの数 m、ランドマークの数 n、単位距離あたりの消費カロリー k、 1 番目のケーキ屋さんから m 番目のケーキ屋さんまでのそれぞれで買えるケーキのカロリーを表す m 個のデータ、距離のデータの総数 d です。
 


"
p00225,Kobutanukitsuneko,"
  a子さんの家に親戚のb男君がやってきました。彼は3歳で歌が大好きです。彼は幼稚園でならった「こぶたぬきつねこ」(山本直純作詞・作曲)という歌を一生懸命に歌っています。この歌では、4つのことば「こぶた」  「たぬき」 「きつね」「ねこ」が順にしりとりになっていて、さらに最後の音と最初の音が同じになっています。b男君は、a子さんに、同じようなしりとりが、b男君が言った単語から作れるか教えて欲しいと言われました。
 
    そこで、a子さんを助けるために、与えられた単語から、その単語をすべて使って、順にしりとりをつくり、その上で、 第1 の単語の最初の文字と最終の単語の最後の文字が同じであるようにできるか否かを判定するプログラムを作成しましょう。
 
  n 個の単語を入力とし、それらの単語の組からしりとりを作成できるか否かを判定し、可能な場合はok と、不可能な場合は ng と出力するプログラムを作成してください。
 


"
p00226,Hit and Blow,"
  太郎君と花子さんはヒットアンドブローで遊ぶことにしました。ヒットアンドブローのルールは、以下の通りです。
  出題者と回答者に分かれて行う。  出題者は、重複した数を含まない 4 桁の数字(正解)を決める。  回答者は、その 4 桁の数字(回答)を言い当てる。  回答に対して、出題者はヒットとブローの数でヒントを与える。  回答と正解を比べて、数と桁位置の両方が同じであることをヒットと呼び、数だけが同じで桁位置が異なることをブローと呼ぶ。たとえば、正解が 1234 で、回答が 1354 なら、出題者は「2 ヒット、1 ブロー」というヒントを与え、正解までこれを繰り返す。  出題者と回答者は交代してゲームを行い、より少ない回答で正解を言い当てた方を勝ちとする。 
太郎君と花子さんは、ヒットの数とブローの数をその都度判断することが少し面倒に感じているようです。そんな二人のために、ヒットの数とブローの数が即座に分かるプログラムを作成してあげましょう。
 
  正解 r と回答 a を入力とし、ヒットの数とブローの数を出力するプログラムを作成してください。r、a はそれぞれ 0 から 9 の数字 4 つからなる数字の列です。
 

"
p00227,Thanksgiving,"
 悪天候が続き野菜の価格が高騰する中、セブンマートではお客様に野菜のまとめ買いセールを実施しています。 日ごろなかなか店頭に並ばない野菜もお手頃価格で手に入るとあって、        店内はとても賑わっています。
 
 ある日、松長団地に住む仲良し 3 人組がセブンマートの広告を手に話に花を咲かせていました。今回のセールは「お客様大感謝祭」と銘打っただけに、袋詰めした野菜の中で最も安いものが無料になるのが目玉となっています。広告を読んでみると、どうやら以下のようなセールのようです。
  1 つの袋には m 個まで野菜を詰められる。  野菜が m 個詰めてある袋については、その中で最も安い野菜が無料となる。  野菜の個数が m 個に達しない袋は割引の対象外。 
 3人は早速セブンマートへ買い物に行きました。
 
 買い物が終わり、  お店の外で待ち合わせた 3 人は安くてたくさん購入できたことに満足した様子で話をしていると、どうやら 3 人とも同じ野菜を購入していたことが分かりました。ある一人が、「本当に安いわよねぇ。これでxxx円だもの!」と言うと、もう一人は、「え?私はそれより**円高かったわ!どうして?」と驚き、また、残りの一人はレシートを見て自分が一番安く購入したことに気付きました。
 
さて、どのように袋詰めすれば購入価格を一番安くできるでしょうか。 購入する野菜の個数、袋に入る野菜の個数、各野菜の値段を入力とし、最低購入価格を出力するプログラムを作成してください。
 

"
p00228,Seven Segments,"
  電卓などでよく目にするデジタル数字を表示している画面は、デジタル数字が 7 つの部分(セグメン
ト)で構成されることから、「7セグメントディスプレイ」と呼ばれています。
 
ワカマツ社で新しく売り出す予定の製品は、7セグメントディスプレイを製品に組み込むことになり、社員であるあなたは、与えられた数字を 7 セグメントディスプレイに表示するプログラムを作成することになりました。
 
  この7セグメントディスプレイは、次の切り替えの指示が送られてくるまで表示状態は変わりません。7 ビットからなるシグナルを送ることで、それぞれ対応したセグメントの表示情報を切り替える事ができます。ビットとは 1 か 0 の値を持つもので、ここでは 1 が「切り替え」、0 が「そのまま」を表します。
 
  各ビットとセグメントの対応関係は下の図のようになっています。シグナルは 7 つのビットを""gfedcba""の順番になっています。例えば、非表示の状態から「0」を表示するためには""0111111""をシグナルとしてディスプレイに送らなければなりません。「0」から「5」に変更する場合には""1010010""を送ります。続けて「5」を「1」に変更する場合には""1101011""を送ります。
 
  各ビットとセグメントの対応関係は下の図のようになっています。シグナルは 7 つのビットを""gfedcba""の順番に送ります。例えば、非表示の状態から「0」を表示するためには""0111111""をシグナルとしてディスプレイに送らなければなりません。「0」から「5」に変更する場合には""1010010""を送ります。続けて「5」を「1」に変更する場合には""1101011""を送ります。
 
 表示したい n (1 &le; n &le; 100) 個の数字を入力とし、それらの数字 di (0 &le; di &le; 9) を順に 7 セグメントディスプレイに正しく表示するために必要なシグナル列を出力するプログラムを作成してください。なお、7 セグメントディスプレイの初期状態は全て非表示の状態であるものとします。
 

"
p00229,Big Hit !,"
 あいづ学園大学附属高校の大阿足あたる君は、スロットマシーンで遊ぶことにしました。
 
 このマシーンは、メダルを投入すると、3 つのリールが回転を始め、各リールが自動的に止まります。通常の1ゲーム(通常ゲーム)は 3 枚のメダルを投入し、図柄が揃うと、その図柄に応じて次のとおりメダルが得られます。
 
 図柄の揃い方によっては特別なサービスが開始されます。 7 の図柄が 3 つ揃うとビッグボーナスが始まり、ボーナスゲームを 5 ゲーム行うことができます。また、bar の図柄が 3 つ揃うとレギュラーボーナスが始まり、ボーナスゲームを 3 ゲーム行うことができます。
 
 スターの図柄が 3 つ揃うと無料ゲームが開始され、メダルを得ることはできませんが、次のゲームをメダルの投入なく始めることができます。
 
 ボーナスゲーム中は 1 ゲームあたり 2 枚のメダルを投入すると、自動でブドウの図柄が 3 つ揃い、メダルを 15 枚得ることができます。
 
 大阿足君は 100 枚のメダルを持ってマシーンで遊び始めました。しばらく遊び、通常ゲームになった状態で終了しました。手元に残ったメダルは何枚となったでしょうか。
 
 プレイ情報を入力とし、手元に残ったメダルの数を出力するプログラムを作成して下さい。 プレイ情報として、ビッグボーナスの回数 b、レギュラーボーナスの回数 r、通常ゲーム中にブドウが揃った回数 g、チェリーが揃った回数 c、スターが揃った回数 s、総ゲーム数 t が与えられます。
 
 なお、t にはボーナスゲームの回数を含みます。また、メダルはゲームの途中になくなることはありません。
  

"
p00230,Ninja Climbing,"
 忍者のあつしさんは、毎日朝早くから夜遅くまで忍者ビルの屋上から町を警備しています。この忍者ビルは、隣接する 2 つの同じ階数のビルであり、あつしさんは警備のために、ビルとビルの間をジャンプしながら屋上へ向かうことを日課としています。
 
 この 2 つのビルは頻繁に清掃が行われるため、ビル登りの助けとなるはしごや障害となる滑りやすい部分があります。  しかも、はしごや滑りやすい部分の位置は毎日変わります。   そのためあつしさんは、屋上へ向かう方法を毎日考えなければいけません。
 
 あつしさんは二つ並んだ同じ階数のビルの壁を跳び移りながら、ビルの屋上を目指します。ジャンプ
はどちらか一方のビルの1階から始められます。向かい側のビルへジャンプするときには、同じ階・1つ上の階・2 つ上の階の、いずれかに飛び移ることができます。
 
 壁には以下の 3 種類があり、それぞれの壁にジャンプした後の移動が決まっています。
 0. 普通の壁: 上下の移動はしない。次のジャンプはそこから行う。 1. はしご: はしごは 2 つ以上の階にまたがってかかっており、今いるはしごの一番上まで移動する。次のジャンプはそこから行う。 2. すべる壁: 普通の壁かはしごの一番上まで滑り落ちる。次のジャンプはそこから行う。 
 また、壁は 1 階から屋上のすぐ下の最上階まであり、屋上へはそのビルの最上階からのみ行くことが
できます。また、ビルの最下階の壁はすべる壁にはなりません。
 
 2 つのビルの階数 n と 2 つのビルの壁の種類を入力とし、最少で何回目のジャンプで最上階までたどり着き、屋上まで行くことができるかを出力するプログラムを作成してください。なお、どちらのビルの屋上にたどり着いてもよいものとします。ただし、あつしさんがどちらのビルの屋上へもたどり着けない場合は“na”と出力してください。
 






"
p00231,Dangerous Bridge,"
  会津若松市よりずっと北に位置する会津古松村では、「ヤ橋(やばし)   」と呼ばれる橋が周辺の村へ移動する唯一の手段となっています。その橋は通行人が多いにも関わらず、今にも壊れそうなほど老朽化が進んでしまっています。 
 
 ヤ橋は 150 [kg] まで耐えられる強度を持っています。例えば、80 [kg] の人と 50 [kg] の人が同時に渡ることはできますが、80 [kg] の人が渡っているときに 90 [kg] の人が渡り始めると、ヤ橋は壊れてしまいます。
 
  もしヤ橋が壊れてしまったら、会津古松村の人々は周辺の村へ移動する手段を失ってしまいます。そこで、村で唯一のプログラマーであるあなたは、村民の生活を守るために、橋の渡り方から橋が壊れるか否かを判定するプログラムを作成することにしました。
 
 橋を渡る通行人の人数 n (1 &le; n &le; 100)、各通行人の体重 mi (1 &le; mi &le; 100)、橋を渡り始める時刻 ai、渡り終える時刻 bi (0 &le; ai, bi &lt; 231) を入力とし、橋が壊れない場合は“ok ”と出力し、壊れる場合は“ng ”と出力するプログラムを作成してください。なお、橋の上にいる通行人の体重の総和が 150 [kg] を超えてしまうとヤ橋は壊れてしまいます。また、ai の時点で通行人は橋の上にいますが、bi の時点では橋の上にいません。
 

"
p00232,Life Game,"
太郎君は、おもちゃ屋さんに会津ホビー社製の人生ゲームを買いに行きました。人生ゲームは、マス目の書かれたボードとルーレットを使って遊びます。ボードには図のようにスタート地点とゴール地点が一つずつあり、それらはひとつながりのマス目でつながっています。最初に、コマはスタート地点のマスに置かれ、ルーレットを回して出た数によってコマを進めます。マスによっては、そこに止まったり通過したりすることでお金を得たり、コマの位置を変えたりするイベントマスがあります。最終的な勝敗は、コマがゴール地点に到達した時点の所持金の多寡で決まります。
 
 この会社の人生ゲームの面白いところは、ルーレットの出る目の大きさ、ゴールまでのマスの数、イベントマスの配置がひとつひとつパッケージごとに異なるところです。それらはケースに書かれており、それを読むことで確認することができます。お金を最も得られる人生ゲームを選びたい太郎君は、得るお金の期待値が一番大きいものを買いたがっています。そこであなたは、太郎君のゲーム選びを手伝うことにしました。
 
 ルーレットは、円周を x 等分に区分され、それぞれに v1、v2、...、vx という値が記入されているとします。ボードには、0 番、1 番、...、y 番と番号がふられたマス目があり、順番につながっています。マス目の中には、イベントマスと呼ばれる特別なマスが z 個あり、そこに到達すると特別な動作を行います。イベントマスのマス目の番号は ni で与えられます。イベントマスには 1 ~ 3 の種類 (ei)  があり、それぞれ次の動作が行われます。
 
最初の所持金は 0 円で、第 0 マス目からスタートし、第 y マス目に到達するとゴールとなります。ゴールを越えた場合もゴールと見なします。スタートとゴールにイベントは無く、1 マスに複数のイベントが重なることはありません。イベントによって進んだ先のマスのイベントは無視します。所持金が 0 円より少なくなる場合は 0 円とします。
 
 例えば、ある人生ゲームで得られるお金の期待値は以下のように計算できます。
 
 この例では、スタート、イベントマス(100 円入手) 、ゴールの 3 つのマスと、1 か 2 が出るルーレットからなる人生ゲームが表されています。まず、1 回目にルーレットを回した時、1 が出ればイベントマスに到達し、所持金は 100 円になります。一方、2 が出た場合はゴールに到達し、所持金は 0 円のままです。これらはどちらも 2 分の 1 の確率で起こります。
 
 さらに、1 回目でイベントマスに到達した場合は 2 回目のルーレットを回しますが、どの値が出てもゴールに到達し、所持金はどの場合も 100 円です。
 
 このように、全部で 3 通りのゴールの仕方があります。ゴールした時点の所持金に着目すると、0 円になる場合が 1 通りでその確率は 2 分の 1、100 円になる場合が 2 通りでその確率が 4 分の 1 です。この場合、ゴールでの所持金の期待値は、ゴールの仕方ごとの    (所持金 &times; その確率)   を足した値であり、この人生ゲームの期待値は 50 円になります。
 
 ルーレットの情報とボードの情報を入力とし、ゴール時の所持金の期待値を出力するプログラムを作成してください。
 

"
p00233,Book Arrangement,"
 数の表わし方には色々な種類があり、私たちが普段使っている 10 進数は一つの代表的なものでしかありません。コンピュータ関連の知識がある人には、2 進数、16 進数あたりはとても身近なものです。
 
n さんは司書資格を活かして司書の仕事に就きました。最初の仕事は図書整理です。この図書館では、一冊ごとに一貫して番号が与えられており、それに従って本を整理しています。
 
この図書館では本の番号をマイナス十進数で表すことになっています。
 
 マイナス十進数は、anan&minus;1an&minus;2...a2a1a0 (各ai は 0~9 の数字) と表記する方法であり、この数は次の数を表します。
 

an&times;(&minus;10)n + an&minus;1&times;(&minus;10)n&minus;1 + ... + a2&times;(&minus;10)2 + a1&times;(&minus;10)1 + a0&times;(&minus;10)0

 
 たとえば、マイナス十進数の 2156 は、以下のとおり十進数の-1944 に対応しています。
 
2&times;(-10)3 + 1&times;(-10)2 + 5&times;(-10)1 + 6&times;(-10)0 = 
2&times;(-1000) + 1&times;(100) + 5&times;(-10) + 6&times;(1) = 
-2000 + 100 - 50 + 6 = -1944
 
 十進数の番号をマイナス十進数に直すのは大変なので、n さんは大変不自由な思いをしています。
 
 本の番号を入力とし、 この番号のマイナス十進数表記を出力するプログラムを作成してください。
 


"
p00234,Aizu Buried Treasure,"
 会津には古くから伝わる埋蔵金の伝説があります。あなたは、遂に埋蔵金が埋まっている場所を突き止めました。埋蔵金が埋まっている深さ、掘り進める地層の状態が分かっているので、綿密に計画を立てれば最小費用で埋蔵金まで到達することができます。そこであなたは、地層の状態を読み取って埋蔵金の埋まっている深さまで最小費用で到達するルートを算出するプログラムを作成することにしました。
 地層の状態は 2 次元格子状に配置されたセルで表わされ、各セルの位置は座標 (x,y) で表されます。左上を (1,1) とし、x 座標は右に行くにつれて大きくなり、y 座標は下に深くなるにつれて大きくなるものとします。あなたは y 座標の一番小さいセルのうち一つを選んでそこから掘り始め、y 座標の一番大きいセルの一つまで掘り進めます。地層には以下の 2 種類のセルがあります：
 土の詰まったセル。掘るのに、セルごとに決められた費用がかかる。 酸素のたまったセル。掘る必要はなく、セルごとに決まった量の酸素を補給できる。一度酸素を補給したセルの酸素はなくなり、再度の補給はできない。また、このセルに辿りついたら必ず酸素の補給をしなければならない。 
あるセルから掘ることができるのは左右と下方向のセルのみです。
一度掘ったセルを左右に移動することはできますが、上に移動することはできません。
 発掘にあたっては、酸素ボンベを携帯しなければなりません。酸素ボンベの残量が 0 になった瞬間、移動も発掘も酸素の補給もできなくなります。残量はセルを移動するたびに 1 減ります。酸素ボンベの残量が 0 で埋蔵金の埋まっている深さまで到達しても、到達したとみなされません。また、酸素のたまったセルでは酸素を補給することができますが、容量を超えた分は廃棄されます。 
 地層のサイズ 、発掘費用、酸素ボンベの容量、初期状態で持っている酸素の量、地層の情報を入力とし、一番深いセルまでたどりつくための最小費用を出力するプログラムを作成してください。ただし、最小費用が発掘費用を超えてしまう場合や、どのように掘り進めても埋蔵金にたどりつけない場合は“na”と出力してください。
 






"
p00235,Sergeant Rian,"
 「ライアン軍曹を救え」という指令のもと、アイヅ軍の救出部隊はドイツリーの水上都市で敵軍と激しい戦闘を繰り広げていました。彼らは無事に軍曹と合流しましたが、敵の戦車が多く、救出ヘリを呼べずにいました。そこで、彼らは敵の戦車を混乱させるため、都市にある橋を全て爆破するという作戦を実行することにしました。
 
作戦はすぐに司令部に伝えられ、救出ヘリの準備が進められました。救出ヘリを飛ばすためには、いつ橋が全て爆破されるかを予測しなければなりません。軍のプログラマであるあなたの任務は、救出部隊が全ての橋の爆破に必要な時間を計算することです。
 
水上都市は n 個の島で構成されており、島と島との間には橋がかかっています。すべての島はツリー状に繋がっています(下図参照)     。ある島からある島への経路は、一通りだけ存在します。各橋を渡るには、橋ごとに決められた時間がかかり、どちらの方向にもその時間で橋を渡ることが可能です。
 
 救出部隊はボートなど水上を移動する手段を持っていないので島と島の間を移動するには橋を通る他ありません。救出部隊は、その時いる島に隣接している橋のうち、必要なものを一瞬で爆破することができます。救出部隊が全ての橋を爆破するのに必要な最小の時間はいくらでしょうか。ただし、島の中での移動時間は考えません。
 
 島の数、それぞれの橋情報を入力とし、橋を全て爆破するのに必要な最小の時間を出力するプログラムを作成してください。島はそれぞれ 1 から n の番号で表されます。橋は n-1 本あります。橋情報は、その橋が隣接している二つの島の番号(a, b)と、その橋を渡るのに必要な時間 t で構成されます。救出部隊は島番号 1 の島からスタートするものとします。
 






"
p00236,Alien Messages,"
 宇宙人 mr.x は地球への来星記念として、地球人に向けてのメッセージを残しました。 mr.x がメッセージを残す場所に選んだのは古代遺跡として有名な""トロンコ遺跡""でした。  ここはいろいろな大きさの碁盤のマス目に、奇抜な石像が無造作に配置されている不思議な場所でした。
 
 mr.x は、メッセージとして、石像が置かれていない全てのマス目を一度だけ通る、単一の閉曲線を描きました。mr.x はとても賢く、このような閉曲線を描くことが可能な碁盤であれば必ず閉曲線を描き、メッセージを残しました。しかし、石像の配置によっては、閉曲線を描くことが不可能な碁盤もあり、その場合はメッセージを残しませんでした。 図1の碁盤に描かれている閉曲線は、全ての空いているマス目を一度だけ通っています。mr.x はこのような閉曲線をメッセージとして残しました。
 
mr.x は、図2の碁盤に描かれているような閉曲線は描きませんでした。
 
 後に mr.x のメッセージは、古代遺跡と見事に調和した宇宙人の美として、地球人に夢とロマンを与える伝説となりました。しかし、長年に渡る風化によってメッセージは消えてしまい、伝説だけが残りました。
 
 トロンコ遺跡の近くに住んでいるあなたは、mr.x が残したメッセージを巡るツアーを企画したいと考えており、遺跡にあるどの碁盤に mr.x がメッセージを残したかを知る必要が生じました。 
 
碁盤の情報を入力とし、mr.x がその碁盤上にメッセージを残した場合は yes と、残さなかった場合は no と出力するプログラムを作成してください。ただし、全てのマスに石像が配置されている場合は、no と出力することとします。
 


"
p00237,The Last Door,"
 秘境の地""ナラマンダ地方""
 この奥深い洞窟に眠る黄金の伝説を求め、探検家ボブとマイクは様々な困難に立ち向かいました。ようやくたどり着いた最後の扉。この先には夢に見た黄金が待っています。
 
 その扉には多数の三角形が描かれていました。試しにマイクがその 1 つに触れてみると、その三角形は光を放ちました。光は三角形の底辺から垂直に頂点方向へ長方形を描きながら伸びていき、その先にある別の三角形に触れました。すると、光に触れた三角形も同じように光を放ち、それを繰り返していきました。
 
 扉の三角形は全て二等辺三角形(正三角形は含まない)で、どれも同じ大きさで、どれも重ならず（かつ触れることなく）、またどれも光は一定の距離だけ伸びていました。最後の三角形が光り終えると、そこには何事もなかったかのような静けさが戻ってきました。
 
 ボブは自分の足下に奇妙なメッセージを見つけました。
 「むやみに触れるべからず。汝正しくこの扉に触れたとき、この扉は放たれん。  」
 
 ボブとマイクはこのメッセージの意味を考えながら、  何度も三角形に触れてみましたがなかなか扉は開きません。 しかし、それを繰り返していくうちに、二人はメッセージの意味がだんだん分かってきました。
 「""むやみに触れるべからず""とは、扉に触れる回数は最小ということ。
  できるだけ少ない回数で触れて、全ての三角形を光らせれば、きっと扉は開くはずだ!」
 
例えば、扉には図 1 のように複数の二等辺三角形が描かれています。
 
 最初に左下の三角形に触れると、図 2 に示すように、その三角形の底辺から垂直に頂点方向へ光が放たれ、その光が触れる三角形が次々に光ります。
 
 次に左端の三角形に触れると、図 3 に示すように、全ての三角形が光ります。この手順が全ての三角形を光らせるための最少の手数(2 手)となります。
 図 3 
  さあ、ボブとマイクが最後の扉を開ける手助けをしよう。
 
  扉に描かれている三角形の個数、光の伸びる長さ、それぞれの三角形の頂点の座標を入力とし、全ての三角形を光らせるために扉に触れる最少の回数を出力するプログラムを作成して下さい。光の伸びる長さは、底辺からの長さであるものとします。また、光はそれを放つ三角形の頂点を含むような十分な長さを持ちます。
 
  なお、この問題を解くにあたっては、2 点の距離が 0.01 以下の場合には、同一の点と処理します。また、1 点とひとつの直線の距離が 0.01 以下の場合には、この点はこの直線上にあるとして処理します。
 

"
p00238,Time to Study,"
複数のデータセットの並びが与えられます。入力の終わりはゼロひとつの行で示されます。各データセットは以下の形式で与えられます。
 
１行目に１日の目標時間 t (0 &le; t &le; 22)、 ２行目に勉強の回数 n (1 &le; n &le; 10)が与えられます。続く n 行に i 回目の勉強の開始時刻 si と終了時刻 f (6 &le; si, fi &le; 22) が与えられます。
 
データセットの数は 100 を超えません。
 


"
p00239,Calorie Counting,"
天高く馬肥ゆる秋。そろそろ食べ物が美味しくなる季節です。高校生のよしお君
も、テレビや読書のお供についついお菓子に手が伸びてしまいます。そのせいか最近体重は増える一方で、健康的にもよろしくありません。しかしどうしても直ぐに間食がやめられないよしお君は、お菓子の栄養素やカロリーが制限された場合に、食べたいお菓子を、食べてもよいお菓子と食べてはいけないお菓子に分類することにしました。
 
食べ物には3大栄養素と呼ばれる「たんぱく質」「脂質」「炭水化物」の３つの栄養素が含まれています。１g（グラム）あたりたんぱく質と炭水化物は 4 kcal（キロカロリー）、脂質は 9 kcal と計算されます。たとえば、下の表によると番号１のケーキにはタンパク質 7 g、脂質 14 g、炭水化物 47 g が含まれています。これをもとに含まれるカロリーを計算すると、4 &times; 7 + 9 &times; 14 + 4 &times; 47 = 342 kcal となります。その他も同様に計算されています。
 
分類の対象となるお菓子の個数 n と各お菓子の情報、制限の情報を入力とし、そのお菓子一つだけなら制限を超えることがない（食べてもよい）お菓子の一覧を出力するプログラムを作成してください。
 
お菓子の情報は、お菓子の番号 s、そのお菓子に含まれるたんぱく質の重量 p、脂質の重量 q、炭水化物の重量 r から構成されています。制限の情報には、含むことができる最大のたんぱく質の重量 p、脂質の重量 q、炭水化物の重量 r、および摂取することができる最大のカロリー c からなっており、タンパク質、脂質、炭水化物、カロリーのいずれかの一つでも超えると制限違反となり、「食べてはいけないお菓子」と判断されます。
 
食べてもよいお菓子の一覧は、食べてもよいお菓子の番号を入力順に出力してください。なお、食べてもよいお菓子がなければ”na”と出力してください。
上の表にある4個のお菓子について、p = 10, q = 15, r = 50, c = 400 という制限の場合、ケーキとプリンはそれぞれの栄養素及びカロリーが制限値以下なので食べてもよいお菓子に分類されますが、ポテトチップスは炭水化物とカロリー、どら焼きは炭水化物の量が制限値を超えているため食べてはいけないお菓子に分類されます。
 

"
p00240,Interest Rates,"
金利は銀行に預けているお金に付き、その計算方法や利率は銀行によって様々です。利息と元金を合わせたものを元利と呼びますが、元利の計算方法として、利息を元金に組み入れずに計算する「単利」と利息を元金に組み入れて計算する「複利」というものがあり、より多くの元利を得るためにはこの差異を理解していなければなりません。元利の計算方法は以下のようになります。
 
できれば、わずかな金利でもより多くお金を増やしたいと思うものです。相沢さんの家庭では、今まで預けていた銀行は金利が低い事に気づき、新しい銀行に乗り換えようとしています。しかし、相沢さん一家は金利のことについてあまり詳しく知らなかったので、金利に詳しいあなたに助けを求めてきました。比較すべき銀行の数は多いうえ、相沢さん一家以外にも助けを求められそうです。作業を効率化するためにより良い銀行を計算するプログラムを作成しておきましょう。
 
銀行の数、お金を預ける年数、各銀行の情報（銀行番号、金利の種類、年利率（パーセント））を入力とし、最も元利が高くなる銀行番号を出力するプログラムを作成してください。ただし、最も元利が高くなる銀行は一つだけです。
 

"
p00241,Quaternion Multiplication,"
複素数を拡張したものに四元数と呼ばれるものがあります。物体の回転などを表現するのに便利なので、ロボットの腕の制御などに使える便利な数です。四元数は、４つの実数 $x$、$y$、$z$、$w$ と特別な数（虚数を拡張したもの）$i$、$j$、$k$ を用いて、$x + yi + zj + wk$ と表されます。このような四元数の和は次のように定義されます。


$(x_1 + y_1 i + z_1 j + w_1 k) + (x_2 + y_2 i + z_2 j + w_2 k) = (x_1 + x_2) + (y_1 + y_2)i + (z_1 + z_2)j + (w_1 + w_2)k$
 
(x1 + y1i+z1j+w1k) + (x2 + y2i + z2j + w2k) = (x1 + x2) + (y1 + y2)i + (z1 + z2)j + (w1 + w2)k
 
一方、1、$i$、$j$、$k$ の間の積は次のように与えます。
 
この表は、２つの特別な数 $a$ と $b$ の積 $ab$ を表しています。例えば、 $i$ と $j$ の積 $ij$ は $k$ であり、 $j$  と $i$ の積 $ji$ は $-k$ であることを表しています。
 
一般の四元数の積は、この関係を満たすように計算されます。例えば、2つの四元数、$1+2i+3j+4k$ と$7+6i+7j+8k$ の積は次のように計算します。
 
$(1+2i+3j+4k) \times (7+6i+7j+8k)=$
$7+6i+7j+8k$
$+14i+12i^2+14ij+16ik$
$+21j+18ji+21j^2+24jk$
$+28k+24ki+28kj+32k^2$
 
上の表を適用することにより
 
$= -58+16i+36j+32k$
 
となります。
 
4つの係数$x$、$y$、$z$、$w$ が整数でかつすべてがゼロとはならない2つの四元数 ($x_1+y_1 i+z_1 j+w_1 k$) と($x_2+y_2 i+z_2 j+w_2 k$)を入力とし、その積を($x_3+y_3 i+z_3 j+w_3 k$)とする時の$x_3$、$y_3$、$z_3$、$w_3$ を出力するプログラムを作成してください。
 

"
p00242,Input Candidates,"
携帯電話には、メールなどの文章を効率良く入力するために入力候補を表示する機能が搭載されています。これは、使われる頻度が高い単語を記録しておき、入力された文字を頭文字に持つ単語を入力候補として提示するものです。例えば、普段”computer”という単語を多く入力しているなら、”c”と入力するだけで候補として”computer”が提示されます。このような機能の基本部分を作成してみましょう。
 
文章、文字を入力とし、その文字を頭文字に持つ単語を出現数の順に出力するプログラムを作成してください。ただし、出現数が同じ単語が複数ある場合は、辞書式順序で出力します。出力する単語は最大5つまでとします。該当する単語が存在しない場合は”na”と出力してください。
 


"
p00243,Filling Game,"
指で画面にタッチして操作することのできるタブレットインターフェースの技術は、ゲームの分野でも応用され、新しい操作感を持つ様々な種類のゲームが作られています。現在、ａｚ社が開発しているゲームもその一つです。
 
このソフトウェア（ゲーム）の要件は以下の通りです。
  画面には x 列&times; y行の2次元グリッドがあります。  グリッドのセルは赤(r)、緑(g)、茶(b)の3色のいずれかで塗られています。  セルの色を変更するボタンr、g、bがあり、このボタンが押下されると一番左上(0,0)のセルがその色に変更されます。  一番左上のセルの色が変更されると、そのセルの元の色と同じ色に塗られた隣接するすべてのセルが指定された色に変わります。すなわち、元の色が同じ色のセルでつながったセルはすべて指定された色に変更されます。 
このようにグリッドを塗りつぶしていき、最終的にグリッド全体を一色にするというゲームです。少ない手順で解くと高得点が与えられます。
 
ａｚ社のプログラマーであるあなたは、このゲームのロジックの一部分を開発することになりました。まずは、この最高得点を計算するため、このゲームを最短で解いた場合、最低何回選択ボタンを操作すればグリッドが一色になるかをもとめるプログラムを作ることにしました。
 
2次元のグリッドのサイズx&times;yと各セルの初期状態の色（r、g、bのいずれか）を入力とし、すべてのセルを同一色にするために必要な選択ボタンの操作回数の最小値を出力するプログラムを作成してください。ただし、xとyは2以上10以下とします。
 
-->






"
p00244,Hot Spring Trip,"
温泉好きのたけしさんは、次の長期休暇を利用してとある温泉地への旅行を計画しています。移動は長距離バスを乗り継ぎ、なるべくお金をかけずに目的地へたどり着きたいと思っています。貯金があるとはいえ、資金に心許ないたけしさんは、おじいさんに相談することにしました。計画を聞いて感心したおじいさんは、たけしさんに特別な切符を渡しました。
 
その切符は、長距離バスの連続した2区間を1回だけ無料で乗れるというものでした。使いようによってはかなりの移動費削減が見込めますが、より大きな効果を発揮させるためにはしっかりした計画を練る必要があります。
 
出発地と目的地、及び中継地点が合わせて n 個、2つの地点を結ぶ路線が m 個与えられます。各地点にはそれぞれ 1 から n までの数字が割り振られています。出発地は 1、目的地は n です。路線の情報は、その路線が結ぶ2つの地点 a と b、及びその料金 c で表されます。特別な切符の効力により、任意の地点から、一度だけ連続した2つの路線を料金0で通過することができます。ただし、途中で目的地を通過しても、目的地にたどり着いたことにはなりません。
 
出発地、目的地、及び中継地点の総数 n と路線の数 m、各路線の情報を入力とし、料金の最小値を出力するプログラムを作成してください。ただし、必ず出発地から目的地へと到達する経路が存在するものとします。 



"
p00245,Time Sale,"
より良い物を、より安く。今日もどこかのスーパーマーケットで行われるタイムセールでは、激しい闘いが繰り広げられています。ここ会津にある「ll堂」もそんなスーパーマーケットのひとつで、他のチェーン店と対抗すべく、少し変わったタイムセールを実施しています。一般的なタイムセールでは複数の商品が同じ時間に安くなるものですが、ll堂では対象となる商品によって、タイムセールを開始する時間が別々に設定されています。
 
坂井家はll堂をよく利用する家庭の一つです。そんな坂井家では、奥様主導のもと、次の日曜に行われるタイムセールに向けて作戦会議を開き、どのような順番で買い物をすれば値引きが最大となるかを分析することになりました。店内を熟知している坂井家は売り場の見取り図を書き、また欲しい品物がどこにあるか、値引きは幾らであるか、売り切れるまでの時間を把握することに成功しました。
ここまでは完璧だった坂井家ですが、分析を行える人がいませんでした。そこで坂井家と親交があったあなたはプログラムを書くことにしました。一人の人が動くことを想定してシミュレーションを行います。
 
商品は10種類あり、数字1桁の商品番号 g によって 区別されます。タイムセール情報には商品番号 g、 値引き額 d、タイムセールの開始時刻 s と売り切れ時刻 e があります。
 
店内は横 x、縦 y のマスで構成される2次元 グリッドで表され、マスごとに通路、商品棚の どちらかが割り当てられています。一つの商品棚には 1種類の商品があり、それは商品番号 g で区別されます。
どの商品を買ってもよいですが、同じ商品番号の商品を複数買ってはいけません。商品棚からは、上下左右に隣接する通路のマスならどんな向きでも商品を取れます。
 
タイムセールが始まる時刻から商品を取ることができますが、売り切れる時刻からは商品を取ることができません。また、時間は入店した時点で0から始まります。
 
移動は現在いるマスから上下左右の隣接する通路マスに移動することができますが、商品棚のマスに移動することはできません。グリッドで表される店の外に出ることもできません。１回移動する毎に１単位時間経過します。また、商品を取る時間は考えないものとします。
 
店内の見取り図と買い物をする人の初期位置と商品のタイムセール情報を入力とし、取ることのできた商品の値引き額の合計の最大値を出力するプログラムを作成してください。
 


"
p00246,Bara Manju,"
会津若松市にある和菓子屋・友栗堂の店長さんは、とても腕のいい職人さんなのにちょっと気分屋なのが玉にキズです。店長さんの作る饅頭はとても美味しいのですが、その時の気分によって大きさがまちまちになってしまいます。
 
見かねた店長さんの奥さんは、大きさと重さがばらばらな饅頭を袋に詰めて売り出すことを思いつきました。一定の重さになるように饅頭を袋に詰めて売れば、一つ一つの大きさはばらばらでも一定の値段で売り出すことが出来ますし、どんな饅頭が入っているのか開けるまでわからないというサプライズも売りになるかもしれません。
「ばらばら饅頭」という名前で売りだしたところ、新しいアイディアが話題となり友栗堂はたちまち評判となりました。しかし、問題もあり、袋に入れる饅頭の組み合わせ方によって作れる「ばらばら饅頭」の数が変わり、無駄が発生してしまうことがありました。アルバイトで友栗堂に来ていたあなたは無駄なく袋に詰めるためにプログラムをつくることにしました。
 
饅頭の重さは1から9の9種類あります。袋に詰める時には、饅頭の重さの合計がぴったり10になるように詰め込みます。饅頭の組み合わせ方は1+1+2+4+2=10や1+1+1+1+1+5=10などで、同じ重さの饅頭をいくつ使っても構いません。
 
作られる饅頭の個数と饅頭の重さの情報を入力とし、作ることのできる「ばらばら饅頭」の最大の数を出力するプログラムを作成してください。
 


"
p00247,Ice Maze,"
四角のマスを縦横にならべた長方形の迷路があります。この迷路では東西南北の隣接するマスへ移動しながら、スタートのマスsを出発し、ゴールのマスgを目指します。マスの種類には、平原、山、氷の３種類があります。sとgは、平原のマスに置かれています。平原のマスには移動できますが、山のマスには移動できません。氷のマスは移動できますが、条件によって氷が割れ動けなくなります。
  氷のマスは東西南北に隣接するもの全体でひとつの塊として扱われます。  氷の塊のなかで、マスの個数の半分より多くのマスに移動すると、塊全体が割れます。 
例えば、図１は与えられた迷路の最短経路のステップ数が 11 であることを示しています。
 
しかし、図２のように氷のマスを通って近道をしようとすると、大きさが６の氷の塊に対する４回目の移動後に動けなくなってしまいgには到達できません。
 
このような迷路の情報を入力とし、sからgまでの最短経路のステップ数を求めるプログラムを作成してください。マスの種類はそれぞれ以下の文字で表されます：
 
与えられる迷路は必ず解けるものとします。迷路はその東西方向のマスの数 x、南北方向のマスの数 y と x &times; y 個の文字として与えられます。
 


"
p00248,Magic Square,"
人里離れた森の奥深くに、マリーという名の魔女が住んでいました。彼女は魔女なので、食料・水・燃料など、生活に必要なものを魔法によってまかなっています。
 
彼女の魔法は、魔力を込めたいくつかの石と紐を使って、魔法陣を描くことによって発動します。この魔法陣は、石を設置し、いくつかの石のペアを紐で繋ぐことで描かれます。ただし、紐は弛んでいてはいけません。さらに、どの紐も、(両端を除いて) 他の紐や石に触れてはいけません。もちろん、同じ場所に複数の石を置くこともできません。この制約が守られる限り、石と石の位置関係や紐の長さに制限はありません。また、石は十分小さいので点として扱うことができ、紐は十分細いので線分として扱うことができます。さらに、彼女は同じ石のペアを2本以上の紐で繋ぐことも、ある紐の両端を同じ石に結ぶこともありません。
 
マリーは初め、石を彼女の家の平らな壁に貼り付けて魔法陣を描いていました。しかし、彼女はやがて、どうしても作ることのできない魔法陣があることに気付いたのです。しばらくして、彼女は魔法陣を平らな壁、つまり二次元平面の上で作ることができるか判定する方法を編み出しました。ある魔法陣は、次のような部分を含む場合、またその場合に限って、二次元平面上で作ることができないのです。
 
このような魔法陣を描くために、彼女は石を空中に固定する魔法を編み出しました。三次元空間では、これらの魔法陣も描くことができるのです。それどころか、どんな魔法陣も三次元空間中では描くことができることを彼女は突き止めたのです。
 
さて、ここからが問題です。ある日マリーは、彼女の家の玄関に足元灯の魔法陣を作ることにしました。しかし、彼女は既に狭い玄関にいろいろな魔法陣を設置していたので、足元灯の魔法陣を、残された唯一のスペースである一次元の直線の上に描かなければなりません。彼女が設計したいくつかの足元灯の魔法陣について、それが直線の上に描けるかどうかを判定し、描ける場合 yes と、そうでない場合 no と出力するプログラムを作成して下さい。
 
魔法陣は、石の個数 n、紐の本数 m、m 個の紐の情報で与えられます。紐は、その両端の石の番号 u、v で表されます。石には 1 から n までの番号が与えられ、n は 1 以上 100,000 以下、m は 0 以上 1,000,000 以下とします。
 


"
p00249,Ant Nest,"
求悟君は夏休みの自由研究としてアリの巣の観察を行うことにしました。彼のおじいちゃんが孫のために用意してくれた観察用の透明ケースはとてもユニークで、図1のような形をしています。
 
このケースは、2枚の合同な凸多角形 s1、s2 と何枚かの長方形で構成されています。s1、s2 以外のいずれかの長方形の面を床に接するように置きます。観察を始めた求悟君は、入っている土の量が同じにもかかわらず、底面の選び方によって土の高さが変わることに気付きました（図2）。
 
求悟君は、ケースの置き方によって、どのくらい高くなるか知りたくなりました。凸多角形 s1 の形、s1 と s2 間の距離 d、土の体積 v を入力とし、土の高さの最大値を出力するプログラムを作成してください。土は、ケースの底面を床に置くとすぐに水平になるものとします。透明ケースの s1 の形は、二次元の座標平面上の n 個の頂点で与えられます。これらの頂点は、反時計回りの順番で入力されます。n は 3 以上 100 以下で、d と v はそれぞれ 1 以上 10,000 以下の整数とします。また、多角形の頂点の座標 (x, y) の x、y はそれぞれ -1,000 以上 1,000 以下の整数とします。vはケースの体積を超えません。
 




"
p00250,Scone,"
愛歌さんの家は、小さな喫茶店を経営しています。愛歌さんのお母さんが焼くスコーンはとても美味しくて、店はとても繁盛していました。
 
ウェイトレスである愛歌さんの仕事の一つは、次々と焼き上がるスコーンを、お客様の席まで届けることです。焼きあがったスコーンはお盆の上に乗せられ、カウンターの上に一列に並べられます。i 番目のお盆の上に乗っているスコーンの数を ki としましょう。愛歌さんは、それぞれのお客様にちょうど m 個のスコーンを運ばなければなりません。愛歌さんは一度にいくつでもお盆を持つことができ、また複数のお盆から 1 人のお客様にスコーンを配ったり、１つのお盆から複数のお客様に配っても構いません。
 
喫茶店にはとてもたくさんのお客様がやってくるので、カウンターに置いてある全てのスコーンを運んでも、全てのお客様に届けることはできません。しかし、できるだけ多くのお客様に届けた後で、m 個に満たない数のスコーンが余ることもあるかもしれません。そのようなスコーンは、お手伝いのご褒美として、愛歌さんが貰えることになりました。

 
ここでふと、愛歌さんは考えました。一度に全てのお盆を持つのではなく、一部のお盆だけを持ってお客様にスコーンを届けると、余るスコーンの数も違ってくるはずです。適切にお盆を選ぶことで、より多くのスコーンが余るようにできるかもしれません。愛歌さんは、作為的にお盆を選んでいることをお母さんに見抜かれないように、カウンターの上の1つの連続した範囲のお盆を選ぶことにしました。また、残ったお盆はお父さんやお母さんが運んでしまうので、愛歌さんがスコーンをもらうチャンスは一度しかありません。
 
さて、愛歌さんは最大いくつのスコーンを貰えるでしょうか？計算するプログラムを書いてください。お盆の数 n は 1 以上 30,000以下、 m は 1 以上 100,000 以下です。また数列の各要素 ki は 0 以上 232-1 です。
 


"
p00251,Points for a Perfect Scorer,"
選手の皆さん、パソコン甲子園にようこそ。パソコン甲子園は今年で10周年になりますが、出題される問題数や合計得点は年によって異なります。各問題には難易度に応じて得点が決められています。問題数が10問で、それぞれの問題の得点が与えられるとき、それらの合計を出力するプログラムを作成して下さい。
 


"
p00252,Railway Ticket,"
新幹線に乗るためには、「乗車券」「特急券」の2枚の切符が必要です。経路の一部で新幹線を利用しない場合があるため、これらは別々の切符となっていますが、新幹線のみを利用する経路では、1枚で乗車券と特急券を兼ねる「乗車・特急券」が発行されることもあります。
 
自動改札機では、これらの切符を読み込んで、正しい切符が投入されたときだけゲートを開けなければなりません。「乗車券」と「特急券」それぞれ１枚、または、その両方、または、「乗車・特急券」が１枚投入されたかどうかを判定し、自動改札機の扉の開閉を判断するプログラムを作成して下さい。
 



"
p00253,Kitchen Garden,"
家庭菜園に野菜を植えることにしました。n 粒の種があったので1日に1粒ずつ、n 日かけて n 粒の種をまきました。どの種からも芽が出て、すくすくと育っています。収穫の時期が待ち遠しいものです。
 
ある日、いつものように苗に水やりをしていると、おかしなことに気づきました。n 本の野菜の苗があるはずなのに、1本多いのです。雑草が生えてきてしまいました。直ちに引っこ抜きたいのですが、困ったことにどの苗もよく似ていて、野菜と雑草の見分けがつきません。
 
手がかりになるのは、野菜の成長速度です。この野菜は、種をまいてからずっと、1日に決まった長さだけ伸び続けるのです。しかし、この「決まった長さ」というのが何センチメートルなのかはわかりません。また、最初の種を何日前にまいたのかも忘れてしまいました。苗は一列に並んでいますが、唯一覚えているのは、種をまくとき毎日一粒ずつ右から順にまいていったことだけです。
 
n＋１本の苗の長さを入力し、雑草の長さを出力するプログラムを作成して下さい。
 


"
p00254,All Numbers Lead to 6174,"
0 から 9 の数字からなる四桁の数 n に対して以下の操作を行う。
  n の桁それぞれの数値を大きい順に並べた結果得た数を l とする  n の桁それぞれの数値を小さい順に並べた結果得た数を s とする  差 l-s を新しい n とする(1回分の操作終了)  新しい n に対して 1. から繰り返す 
このとき、全桁が同じ数字(0000, 1111など)である場合を除き、あらゆる四桁の数はいつかは 6174になることが知られている。例えば n = 2012の場合

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1回目 (n = 2012): l = 2210, s = 0122, l-s = 2088
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2回目 (n = 2088): l = 8820, s = 0288, l-s = 8532
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3回目 (n = 8532): l = 8532, s = 2358, l-s = 6174
となり、3 回の操作で 6174 に到達する。
 
0 から 9 の数字からなる四桁の数が与えられたとき、何回の操作で 6174 に到達するか計算するプログラムを作成して下さい。
 


"
p00255,Salary for a Plumber,"
ぼくはパイプつなぎ職人です。パイプをつなぐジョイントとパイプさえもらえれば、どんなパイプだってつないでみせます。ぼくは毎日、親方からパイプとジョイントを渡されて、それをつないで親方に渡します。でも、パイプの数が多すぎるときは、１日でそれを全部つなげることはできません。そんなときでも親方はにっこり笑って、ぼくに給料を渡してくれます。
 
ところで、あるとき変なことに気がつきました。全部のパイプをつなげられたときより、つなげられなかったときの方が給料が多いことがしょっちゅうあるんです。あんまり変なので、ある日、親方が来たときに、給料の計算方法が書いてあるメモをこっそり見ちゃいました。そしたら、なんと
 
""給料は「パイプの本数×パイプの長さの総和」で支払う。ただし、ジョイントでつなげて、ひとつながりになったものは、それを１本のパイプとみなす。""
 
って書いてありました。これで全部つなげた方が給料が安くなることがある理由がわかりました。たとえば下図のように、長さ 1 のパイプ 3 本と長さ 2 のジョイント 2 本を全部つなげると長さ 1+2+1+2+1 = 7 のパイプが 1 本できるので、1 &times; (7) = 7 です。でも、ジョイントを一つだけ使って長さ 1+2+1 = 4のパイプと長さ 1 のパイプの 2 本にすると2 &times; (4+1) = 10なので、全部つなげるよりいっぱい給料がもらえます。
 
親方がなんでこんな方法で給料を決めてるかわからないけど、これでぼくもどうすればもらえる給料を多くできるかわかりました！
 
それでは、パイプの本数が与えられたとき、もらえる給料の最大の金額を計算するプログラムを作成してください。
 



"
p00256,Mayan Crucial Prediction,"
真也君はテレビで「マヤの大予言！2012年で世界が終る？」という番組を見ました。結局、世界が終るかどうかはよくわかりませんでしたが、番組で紹介されていたマヤの「長期暦」という暦に興味を持ちました。その番組では以下のような説明をしていました。
 
マヤ長期暦は、右の表のような単位からなる、全部で13バクトゥン(187万2000日)で構成される非常に長い暦である。ある計算法では、この暦は紀元前3114年8月11日に始まり2012年12月21日に終わると考えられていて、このため今年の12月21日で世界が終るという説が唱えられている。しかし、13バクトゥンで１サイクルとなり、今の暦が終わったら新しいサイクルに入るだけという考えもある。
 
「ぼくの二十歳の誕生日はマヤ暦だと何日になるのかな？」真也君はいろいろな日をマヤ長期暦で表してみたくなりました。
 
では、真也君の代わりに、西暦とマヤ長期暦とを相互変換するプログラムを作成してください。
 


"
p00257,Making Sugoroku,"
太郎君は、子供会の催しでみんなで遊べるようにすごろくを作りました。ゲームをおもしろくするために、「ふりだし」と「あがり」以外のすごろくのマスのいくつかに「６つ進む」、「５つ戻る」のように指示を書き込んでいきました。ルーレットを回して出た数だけ進み、止まったマスに指示が書き込んであれば、その指示に従って移動します。ただし、指示に従って進んだ先のマスの指示には従いません。
 
ルーレットは１からある数までの間の数を等確率で出すことができるものとします。また、「あがり」に達するより大きな数が出たときや、指示に従うと「あがり」より先に進んでしまうときは「あがり」に移動します。指示に従って戻るときに「ふりだし」より前に戻ってしまうときは「ふりだし」に戻ることにします。
 
ところが、ルーレットとマスの指示によっては「あがり」にたどりつけない場合が出てきてしまいます。たとえば、図のようなすごろくを作ったとしましょう。１と２しか出ないルーレットを使うと、１，２の順に出れば「あがり」に行けますが、はじめに２が出たらその後は何が出ても永久に「あがり」にはたどり着けません。太郎君は、そうとは知らずに調子に乗ってあちこちのマスに指示を書き込んでしまいました。
 
そこで、太郎君に代わって、ルーレットとマスの指示によっては、「あがり」にたどり着けない場合が生じるかどうか判定するプログラムを作成してください。
 



"
p00258,Beat Panel,"
遊太君は、近所のゲームセンターで人気のゲーム「ビートパネル」にはまっています。このゲームは図のようなグリッド状に並べられた 4×4 の計16個のパネル型のボタンからなります。
 
図のように、左上から右下にボタン1, ボタン2, …, ボタン16の順にボタンが並んでいます。ゲームでは一定間隔でビート音が鳴り最後に終了音が鳴ります。ビート音が鳴ると同時に複数のボタンが光ります。１個も光らない場合もあります。プレイヤーは、ビート音が鳴った直後から次の音が鳴るまでの間に両手の指を使って複数のボタンを１度だけ同時に押すことができます。何も押さないということも可能です。終了音が鳴ったと同時にゲームは終了します。
 
遊太君は c 通りの押し方を習得しており、ビート音が鳴る度に、それらの押し方の中から１つ決めてボタンを押します。押したボタンが光っていれば、それらのボタンの光は消え、消えたボタンの数がプレイヤーのスコアに加算されます。また、一度光ったボタンはそのボタンが押されるまで光は消えることはありません。
 
ビート音が n 回鳴るときのボタンの光り方と遊太君が習得している c 通りのボタンの押し方を入力とし、遊太君が獲得することのできる得点の最大値を出力するプログラムを作成してください。
 



"
p00259,Finite Field Calculator,"
0以外のすべての実数の逆数は実数になりますが、整数の逆数が整数になるとは限りません。ｃ言語などで 3.0/2.0*2.0 = 3.0 なのに 3/2*2 = 2 になってしまうのはこのためです。ですが、素数で割った余りが等しい整数を同じものとみなすと、0以外のすべての整数が逆数をもつようにできます。
 
整数 x と y を p で割った余りが等しいとき、x &equiv; y (mod p) と書きます。p が素数のとき、このような x と y を同じものとみなすなら、すべての整数 n は0から p&minus;1 までのどれかの整数 x に対して x &equiv; n (mod p) となるので、けっきょく { 0, 1, 2, ..., p&minus;1 } という集合だけからなる世界を考えればよいことがわかります。
 
この世界での加減乗除は以下のようになります。
  加算 x+y の値は、x+y &equiv; z (mod p) となる 0 から p&minus;1 までの数 z になります。  減算 x&minus;yの値は、y+m &equiv; 0 (mod p) となる 0 から p&minus;1 までの数 m（これが  y に相当します）について、x&minus;y &equiv; x + m (mod p) となることから得られます。たとえば、p = 5のとき、4+1 &equiv; 0 (mod 5) となります。このとき、2&minus;4 &equiv; 2+1 &equiv; 3 (mod 5) より、2&minus;4の値は3になります。  乗算 x*y の値は、x*y &equiv; z (mod p) となる 0 から p&minus;1 までの数 z になります。 
このようにして加減乗除の四則演算がすべて0からp&minus;1の範囲に収まります。このとき、集合 { 0,1,...,p&minus;1 } を p の有限体といいます。この有限体の中で、加減乗除、0 から p&minus;1 までの数、カッコを使って 算術式を構成することができます。
 
p の有限体の 0 以外のすべての要素が逆数をもつことは、フェルマーの小定理と呼ばれる有名な定理 ap&minus;1 &equiv; 1 (mod p) からわかります（ただし、p は素数、a と p は互いに素）。p の有限体のすべての要素 x は p と互いに素なので、この定理から x*xp-2 &equiv; 1 (mod p) となり xp-2 が x の逆数になるからです。
 
では、素数と式が与えられたときに、その素数の有限体で式を計算する電卓プログラムを作成してください。
 


"
p00260,Cats Going Straight,"
あるところに、高い塀に囲まれた大きなお屋敷がありました。そのお屋敷の主人は猫がとても大好きで、時折やってくる猫たちのために、いつもおいしいごはんを用意していました。お腹を空かせた猫たちは、高い塀をひょいと飛び越え、お屋敷の至る所に置いてあるごはんにまっしぐらに駆け寄るのでした。
 
ある日主人は、屋敷の中で何匹かの猫が倒れているのを見つけました。猫たちはごはんを探して屋敷の中を縦横無尽に走り回ったので、ぶつかったり転んだりしてしまったのです。主人は猫たちの安全を考えて、ごはんの置き場所を工夫することにしました。
 
上空から見ると、このお屋敷の塀は多角形をなしています。主人は猫たちがごはんを見つけやすいように、敷地内の中でも、多角形の頂点にあたる場所だけにごはんを置くことにしました。また猫たちは気まぐれなので、多角形の周上のどの点からお屋敷に入ってくるかは予想できません。そこで主人は、猫がどの点から入ったとしても、その点から直進していずれかのごはんにたどり着けるように、ごはんを配置することも決めました。
 
すべての頂点にごはんを配置すれば、この条件を満たすことができます。しかし、ごはんを補充して回るのは大変なので、主人はできるだけ少ない数の頂点にごはんを配置したいと思いました。さて、主人は最低何箇所にごはんを配置する必要があるでしょうか。
 
お屋敷の塀を表す多角形を入力とし、ごはんを配置する頂点の数の最小値を求めるプログラムを作成して下さい。ただし、猫は多角形の内部のみを直進できるものとします（辺は多角形の内部に含めるものとします）。
 


"
p00261,beko and 40 Thieves,"
40 人の盗賊から逃れようとしているアカ・ベコは、a 市の街中で道に迷ってしまった。アカ・ベコは新しいアジトがあるb 市に行きたいのだが地図を盗賊に盗まれてしまった。
 
盗賊の一人であるコボー氏はアカ・ベコに同情し、気の毒に思っていた。そこで、密かにアカ・ベコに、「あなたがb 市に行くお手伝いをしたいが、仲間にばれない様にしなければならないので、直接道順を教えたいが教えることができない。しかし、あなたの質問には答えられる。」と伝言を送った。
 
コボー氏は、「○○という道順はどうか。」という質問をアカ・ベコから受け取ると、それがa 市からb市までちょうどたどり付ける道順ならyes、そうでなければno という答えを伝える。道順のチェックは以下の地図に従って行う。
 
各都市は一方通行の道でつながっており、それぞれの道には、0 か1 の数字が付いている。アカ・ベコは数字の並びで道順を指定する。例えば、0100 は a 市から x、z、w 市を経由して b 市にちょうどたどり着く道順である。地図にない道順を選ぶと砂漠に迷い込んでしまい、決して b 市にたどり着くことはない。アカ・ベコは自分がいる都市の名前を知ることはできないため、道順をたどり終えたときにちょうど b 市に到達する必要がある。
 
コボー氏はアカ・ベコからの質問に答えるために、あなたを密かに雇いプログラムの作成を依頼した。アカ・ベコからの質問を入力すると、それがa 市からb 市にちょうどたどり付ける道順なら yes、そうでなければ no と出力するプログラムを作成してほしい。
 



"
p00262,Triangle of Blocks,"
図a のように積まれたブロックに対し、以下の並べ替え操作を繰り返す。
  一番下のブロック全て（図a 中の白のブロック）を右端に新しく積み上げる（残りのブロックは自動的に１段下に落ち、図b のようになる）。  ブロックの間に隙間ができたら、左に詰めて隙間をなくす（図 b から図c のようになる）。 
1 以上の整数 k に対して、k&times;(k＋1)/2 で表される数 (例:1, 3, 6, 10, ...)を三角数という。ブロックの総数が三角数の場合、上記の並べ替えを繰り返すと、左端の高さが1 で右に向かって１つずつ高くなっていくような三角形になると予想されている（図d は総数が15 個の場合）。
 
ブロックの最初の並びが与えられたとき、あらかじめ決められた回数以下の操作で、上で説明したようなブロックの三角形ができるとき、三角形が得られるまでの最小の操作回数を出力するプログラムを作成してください。
 


"
p00263,Kongo Type,"
以下のように、右から 7 ビット分が小数部、続く24 ビット分が整数部で、一番左の 1 ビット分を符号部とする 32 ビット実数型を考える(b1, ... , b32 は 0 か1 を表す）。
 
この形式を、人が理解しやすい 10 進数表現に直すときは、以下のように解釈する。
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (-1)符号部 &times; (整数部 + 小数部)
 
上の表現で、整数部の値は b8 ＋ 21&times;b9 ＋ 22&times;b10＋ ... ＋ 223&times;b31 になる。例えば整数部が
 
のようになっていた場合、整数部の値は以下のように計算される。
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 1 +  21 + 23 = 1 + 2 + 8 =  11
 
一方、小数部の値は(0.5)1&times;b7＋(0.5)2&times;b6 ＋ ... ＋ (0.5)7 &times; b1 になる。例えば小数部が
 
のようになっていた場合、小数部は以下のように計算される。
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0.51 + 0.53 = 0.5 + 0.125 = 0.625
 
さらに、符号部、整数部、小数部を合わせた以下のようなビット列の場合、
 
ビット列全体が表す10 進数は、以下のようになる(ただし、-1 の0 乗は1)。
(-1)0 &times; (1 + 2 + 8 + 0.5 + 0.125) = 1 &times; (11.625) = 11.625
 
32 ビットのビット列を q 個入力すると、それらのビット列が表す実数の10 進表記を一切の誤差無く出
力するプログラムを作成してください。
 



"
p00264,East Wind,"
引っ越しが決まり、この地を去ることになった。この土地自体に未練は無いが、１つだけ気になることがある。それは、庭に植えた梅の木のことだ。私は毎年、この梅が花を咲かすことを楽しみにしていた。ここを離れた後は春の楽しみが１つ減ってしまう。私の梅の香りだけでも風に乗って引っ越し先の家まで届き、春を楽しませてはくれないものか。
 
日本には春を象徴する３つの花がある。梅・桃・桜の３つだ。引っ越し先には、私の梅以外にも、これらの花の香りが届くだろう。しかし、私の梅の香りだけが届く日数が最も多い家に住みたい。
 
図のように、花の香りは扇状に広がり、その領域は風の向かう方向と強さによって決まる。扇形は風の向かう方向 w を中心にして対称に広がり、風の強さ a を半径とする領域をもつ。香りが広がる角度 d は花の種類によって決まっているが、風の向かう方向と強さは日によって異なる。ただし、同じ日では、すべての場所で風の向かう方向と強さは同じである。
 
手元には、私の梅以外の梅・桃・桜の位置と花の種類ごとの香りが広がる角度、引っ越し先の家の候補のデータがある。さらに、数日分の風の向かう方向と強さのデータもある。私の梅以外の梅・桃・桜の木と家の位置は、私の梅の位置を原点とした座標で示されている。
 
これらのデータを使って、私の梅の香りだけが届く日数の最も多い家を探すためのプログラムを書いてみることとしよう。私は有能なプログラマーなのだから！
 


"
p00265,Modular Query,"
あなたに n 枚のカードを渡します。どのカードにも一つだけ自然数が書いてあります。ただし、同じ数が書いてあることはありません。
 
これから質問として、適当な自然数を言います。あなたが持っているカードに書いてある数を私が言った数で割ったときに得られる余りのうち最も大きなものを答えてください。
 
たとえば、あなたは 3 枚のカードを持っていて、それぞれ 9、3、8 と書いてあるとします。私が「4」と言ったら、9 と 3 と 8 をそれぞれ4 で割った余りを求めてください。余りはそれぞれ 1、3、0 ですが、この中でもっとも大きな余りは3 なので、3 が正しい答えになります。
 
では始めましょうか。え？ カードがいっぱいあるとたいへんだ？ しょうがないですね。それではコ
ンピュータを使って最大の余りを見つけることにしましょう。カードに書いてある数を、質問された数で割った余りのうち、最大のものを見つけるプログラムを作成してください。なお、質問は１回だけでなく何度もしますが、同じ数を 2 回以上質問することはありません。
 


"
p00266,Izua Dictionary,"
あなたはイヅア国の公用語であるイヅア語の国語辞典と、イヅア語のアルファベット（文字の一覧表）
を手に入れました。イヅア語のアルファベットにはn 種類の文字があります。イヅア語の国語辞典に現れる単語の順番は、イヅア語のアルファベット順に並んでいます。
 
辞典を見ると、載っているどの単語もn 文字で、しかも、n 種類の文字をひとつずつ含んでいることがわかりました。さらに調べてみると、辞典にはn 種類の文字の可能な並び方がすべて書かれていることを発見しました。
 
この発見から、あなたはある単語が辞典の何番目に出てくるかわかるようになりました。この知識を利用してイヅア国の人を驚かせてみましょう。まず、n 種類の文字をひとつずつアルファベット順に並べます。次に、任意の２文字の順番を入れ替える操作を r 回繰り返してもらいます。あなたは、出来上がった単語がイヅア国語辞典の何番目に出てくるか当てて見せます。そのための準備として、国語辞典中の単語の場所を求めるプログラムを作成してください。ただし、アルファベット順で最初の単語を 0 番目の単語とします。
 



"
p00267,The Lonely Girl's Lie,"
パケットモンスターというゲームがあります。モンスターを捕まえ、育て、戦わせたり交換したりするゲームで、日本中で大流行しています。もちろん、わたしのクラスでも。だからわたしもこのゲームでみんなと遊べるようにモンスターを育てているけど、悲しいことに対戦する相手がいません。わたしは積極的に人に話しかけるのが得意なタイプではないからです。だから今日も、クラスメイトが誘ってくれるのを待ちながら、独り寂しくモンスターのレベルを上げています。
 
そしてついに、待ち望んでいた瞬間が訪れました。クラスメイトの一人が対戦しないかとわたしに話を持ちかけてきたのでした。彼女は自慢気に、彼女のモンスターたちを見せてくれました。
 
一般的なパケットモンスターの対戦ルールでは、各プレイヤーがそれぞれn 匹のモンスターを用意し、互いに1 匹ずつ戦わせます。各モンスターには成長の度合いを示す「レベル」という数値があり、レベルが大きいモンスターが必ず勝ちます。同レベルのときは引き分けです。一度戦ったモンスターは、それ以上戦わせることができません。こうして一対一の戦いをn 回行ったあと、過半数の勝利を収めたプレイヤーが勝者となります。
 
わたしは、彼女のモンスターを見た瞬間、嫌な予感がしました。彼女のモンスターはどれも、とても強そうなのです。わたしと戦ってくれるのなら負けてもかまいません。でも、あまりにもひどい負け方をしたら、""こいつと戦っても面白くないな""とか思われて、もう遊んでくれなくなるんじゃないかな。それは、とても嫌です。だから、
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;「ごめん、わたしまだモンスターをn 匹持ってなくて」
 
嘘をつきました。
 
n 回勝負では勝ち目がなくても、それより少ない数のモンスターで勝負する特別ルールなら、もしかしたら勝てるかもしれません。さっきは負けたってかまわないと言ったけど、やっぱり勝てたら嬉しいです。
 
彼女はこの特別ルールを受け入れてくれました。つまり、二人が持っているモンスターからお互いに k 匹選んで一匹ずつ順番に戦わせ、過半数の(つまり、k/2 より大きな数の) 勝利を収めた方が勝ちとなります。
 
さっきわたしは、彼女のモンスターのレベルを知ってしまいました。彼女がどのモンスターを選び、どんな順番で出してくるのかはわかりません。でも、対戦させるモンスターの数kをわたしがうまく決めれば、彼女がどんな選択をしようとわたしが勝つことができるかもしれません。
 
皆さんにお願いです。モンスターの数 n と、二人が持っているモンスターのレベルを入力すると、彼女がどんな選択をしようとわたしが勝てるような最小のモンスターの数 k を出力するプログラムを作成して下さい。
 


"
p00268,Cats Going Straight II,"
あるところに大きな古いお屋敷があり、１匹のねこが住み着いていました。図のように、お屋敷は上空から見ると凸多角形になっており、まっすぐな壁で囲まれたいくつかの部屋で造られています。１枚の壁はその両端にある柱によって支えられています。お屋敷はとても古いため、どの壁にもねこが通ることができるくらいの穴が１つ空いています。ねこは壁の穴を通ってお屋敷の部屋と部屋または部屋と外を行き来することができます。
 
お屋敷のご主人は、ねこに餌をあげるために、口笛を吹いてねこをお屋敷の外へ呼び出します。ねこはとても賢く、ご主人が口笛を吹くと、「最良の選択」でお屋敷の外へ抜け出します。つまり、最も少ない回数だけ穴を通って外へ出ます。
 
ねこはとても気まぐれで、どの部屋にいるか分かりません。そのため、ねこがお屋敷の外へ出るのにかかる時間は日によって異なり、ご主人はどれだけ待てばよいかわからず困っていました。ある時ご主人は、ねこが穴を通り抜けるときに、とても時間がかかっていることに気が付きました。ということは、ねこが外に出るのにかかる時間は穴を通る回数によって決まることになります。ご主人は、ねこが「最良の選択」をした場合の穴を通る回数の最大値が分かれば、ねこがどの部屋にいたとしても、最大どれだけ待てばよいか分かるのではないかと考えました。ご主人はお屋敷の間取りを知っていますが、お屋敷はとても大きく、自分では計算することができません...。
 
お屋敷の間取りを読み込み、ねこが「最良の選択」をした場合、外に出るまでに通る穴の数の最大値を
出力するプログラムを作成して下さい。
 


"
p00269,Arts and Crafts,"
イヅア大学附属小学校は日本有数の競技プログラマー養成校として有名です。この学校の教員は幅広い
アルゴリズムの知識を持ち、日々それを活用しています。教員であるあなたは、今年は図画工作の授業
を担当することになりました。この授業では、児童全員がそれぞれ１年間で一つの課題を完成させることになっています。授業の概要は以下のとおりです。
  １年間で授業は d 回（同じ日に2 回以上授業はない）あり、その全てが課題制作に充てられる。  制作する課題は m 種類用意されている。  それぞれの児童に、m 種類の中から課題を１つずつ割り当てる。  児童は n 人であり、n 人それぞれに異なる課題が割り当てられる。 
児童は、k 種類ある部品のうちいくつかの種類の部品を使用して課題を完成させます。課題の制作の概要は以下のとおりです。
  課題ごとに、使用すべき部品の種類と数はあらかじめ決められている。  課題が完成するまでに使用する部品の種類と数は、その課題で使用すべき部品の種類と数に、過不足なく一致していなければならない。  異なる課題でも、使われる部品の種類と数がすべて同じ場合もある。  どの課題も、同じ種類の部品は２個までしか使用できない。  部品を使用する順序は課題の完成に影響を与えない。  いくつかの部品が入っている袋が事前に p 個用意されている。ただし、異なる袋でも、入っている部品の種類と数がすべて同じ場合もある。  教員は、児童１人につき袋を１つだけ渡すことができる（袋を渡さない児童がいてもよい）。  ２人以上の児童に同じ袋を渡すことはできない（反対に、誰にも渡されない袋があってもよい）。  袋を渡された児童は、袋の中に入っている部品をすべて、自分が制作する課題に使わなければならない。 
袋に入っている部品以外で課題に使用する部品は、別途購入する必要があります。部品の購入に関する条件は以下のとおりです。
  部品は授業の日だけ購入でき、その日にしか使えない。  それぞれの課題について、１回の授業でｌ個までの部品を購入することができる。  部品の種類によって価格が設定されており、購入する日によって価格が変動する。ただし、どの種類も品切れになることはない。 
あなたは、このような条件下で、授業にかかる経費をなるべく抑えたいと考えています。そこで、児童全員の部品購入費の合計の最小値を計算するプログラムを作成することにしました。
 


"
p00270,Railroad,"
ある国の鉄道網に、自動改札を導入することになりました。導入にあたって難しい問題の一つは、与えられた切符で、指定された駅の間を移動できるかどうかを判定することです。それぞれの切符には乗車駅と降車駅が記載されています。この切符でできるのは、「乗車駅で乗って、降車駅で降りる」ことだけではなく、途中乗車や途中下車も許されています。
 
この鉄道網にはs 個の駅があり、そのうちr 組の駅は隣り合っていて、他の駅を経由せずに双方向に鉄道で移動することができます。隣り合った駅を結ぶ線路はひとつしかありません。隣り合った駅の間の距離は、この線路に沿って測った距離です。ある駅からある駅までの経路は鉄道網の形状によっては複数通り考えられますが、そのうち最も距離が短くなるような経路を最短経路と呼ぶことにします。そのような経路が複数ある場合、どちらも最短経路として認められます。
 
乗車駅 a、降車駅 b の切符で駅 c から駅 d まで移動できるのは、以下の条件をすべて満たす経路 p が存在するときです。
  経路 p は、駅 a から駅 b への最短経路である。  経路 p は、駅 a から出発し、駅 c、駅 d の順に経由し、駅 b で終わる経路である。また、駅 c から駅 d の区間はこの2 駅の最短経路になっている。 
路線図と切符の情報が与えられます。次に、始点と終点の組がいくつか与えられるので、その切符で始点から終点へ移動できるかどうかを判定するプログラムを作成してください。
 


"
p00271,Temperature Difference,"
選手の皆さん、パソコン甲子園にようこそ。イベントに参加するには体調管理が大切です。気温が大きく変動する季節の変わり目には体に負担がかかり、風邪をひきやすいと言われています。一番気を付けなければいけない日は、最高気温と最低気温の差が最も大きい日です。１日の最高気温と最低気温が７日分与えられたとき、それぞれの日について最高気温から最低気温を引いた値を出力するプログラムを作成してください。
 




"
p00272,Ticket Sales,"
今日は、アイヅ・エンターテインメント社イチオシのアイドルグループ「アカベコ＆コボウシ」のチケット発売日です。チケットには以下の４種類があります。

ｓ席 6000円
ａ席 4000円
ｂ席 3000円
ｃ席 2000円

販売責任者のあなたは、ドキドキしながら発売開始を待っています。いよいよ発売開始。売れ行き絶好調です！
 
発売開始からしばらく経ったところで、それまでの注文をまとめた表を受け取りました。表の各行には、それまでに売れたチケットの種類と枚数が書いてあります。ただし、チケットの種類がｓ，ａ，ｂ，ｃの順に現れるとは限りません。この表の行ごとの売上金額を求めるプログラムを作成してください。
 


"
p00273,Admission Fee,"
アイヅ温泉には、浴場とプールがあり、浴場を利用するには入浴券を、プールを利用するにはプール券をそれぞれ買う必要があります。これらの券の値段は、日によって変わるかもしれません。また、アイヅ温泉には以下のようなルールがあります。
  券は購入当日１回の利用に限り有効。  「入浴券５枚以上かつプール券２枚以上」でまとめて買うと、すべての券が２割引になる。 
温泉好きの貞吉さんとその友人たちは、アイヅ温泉に毎日のように通っています。彼らは皆気まぐれで、日によって使う枚数は異なります。アイヅ温泉には割引ルールがあるため、グループで協力して上手に買えば、合計料金を安く済ますことができるかもしれません。
 
入浴券とプール券の料金、使用する入浴券の枚数とプール券の枚数が入力として与えられたとき、最も安い合計料金を出力するプログラムを作成してください。ただし、使用する枚数より多く券を買うことで合計料金が安くなるなら、買った券すべてを使わなくともよいものとします。
 

"
p00274,A Pair of Prizes,"
ジョウ君とヤエさんは仲の良いカップルです。ジョウ君はカプセル玩具自販機(ガチャポン)の景品を集めており、二人で出かけたときも、ガチャポンを見つけると何度かやってみるほどの熱の入りようです。ヤエさんは楽しそうなジョウ君をそばで見ているだけでしたが、ジョウ君の今度の誕生日プレゼントにガチャポンの景品をひとつあげることにしました。ヤエさんはガチャポン自体にはあまり興味がわきませんでしたが、できればジョウ君とおそろいの景品が欲しいと思っています。
 
ヤエさんがやってみようと思うガチャポンは、１回のチャレンジで景品がひとつ出ます。品切れのものも含め景品が何種類あるのかと、それぞれの景品がいくつ残っているのかはわかります。しかし、1回のチャレンジでどの景品が出るかはわかりません。そこで、景品が出る順番にかかわらず、ヤエさんが同じ景品を必ず２つ得るために最低限必要なチャレンジの回数を出力するプログラムを作成してください。
 



"
p00275,The Outcome of Bonze,"
百人一首の札を使った遊戯の１つに、「坊主めくり」というものがあります。絵札だけを使う簡単な遊戯なので広く楽しまれています。きまりには様々な派生型がありますが、ここで考える坊主めくりはn人の参加者で、以下のようなルールで行います。
  ６４枚の「男」、１５枚の「坊主」、２１枚の「姫」、計１００枚の札を使う。   絵が見えないように札を裏がえしにしてよく混ぜ、「札山」をつくる。   引いた札が男なら、引いた人はその札を手に入れる。   引いた札が坊主なら、引いた人はその札を含め、持っている札をすべて「場」に出す。   引いた札が姫なら、引いた人はその札を含め、場にある札をすべて手に入れる。 

   札山の札がなくなったら終了で、一番多くの札を持っている人の勝ち。 
参加者数と札山に積まれた札の順番が与えられたとき、遊戯が終了した時点で各参加者が持っている札数を昇順で並べたものと、場に残っている札数を出力するプログラムを作成してください。
 

"
p00276,Formation,"
この高校では以下のいずれかの陣形で３人一組のチームを構成しています。
 
競技プログラミング部のコーチであるあなたは、これらの部員をうまく組み合わせ、できるだけ多くのチームを結成できるよう、毎年気を配っています。そこで、コーダーの人数、アルゴリズマーの人数、ナビゲーターの人数が入力として与えられたとき、最大何チーム作れるかを出力するプログラムを作成してください。
 

"
p00277,Programming Contest,"
白虎大学では毎年プログラミングコンテストが開催されています。チームの総数をnとしたとき、チームには1からnのチームidがそれぞれ割り当てられています。コンテストは全てのチームの得点が0の状態から開始し、l秒間連続して行われます。
 
今年のコンテストは、テレビで中継されることになりました。コンテストの間テレビに映るのは、その時点で最も得点の高いチームだけです。ただし、該当するチームが複数いるときは、その中でチームidの一番小さいチームが映ります。映すべきチームが変わると、瞬時にカメラが切り替わります。
 
あなたはコンテストのログを入手しました。ログには、あるチームの得点が変化した時のレコードがすべて含まれています。各レコードは「チームdがコンテスト開始t秒後の時点でx点獲得した」という形式で与えられています。なお、減点される場合もあるので、現在の得点が0より小さくなることもあります。
 
コンテストのログを入力とし、コンテスト開始から終了までの間にテレビに映った時間が最も長いチームのidを報告するプログラムを作成してください。
 


"
p00278,Study Session,"
プログラマー養成校のアカベ高校には、生徒自身で運営するユニークな勉強会があります。プログラマーは新しい技術を常に取り入れることが大切なので、この勉強会を通して自学自習の習慣を身につけることがこの活動のねらいです。
 
生徒は全部でn人おり、それぞれが入学時のプログラミングコンテストの結果で得られたスコアを持っています。勉強会ではn人の生徒のうち何人かがリーダーになり、各リーダーがそれぞれのグループを運営するとともに、自らの運営するグループに参加します。
 
リーダー以外の生徒は、自分のスコアよりも低いスコアのリーダーが運営するグループには参加できません。また、0以上のある値rを１つ決め、グループに参加する生徒とリーダーのスコアの差がr以内となるようにしています。つまり、グループのリーダーのスコアがsのとき、自分のスコアがsを超えているか、あるいは s - r 未満ならば、そのグループには参加できません。
 
あなたは勉強会の実行委員長であり、運営準備のためにシミュレーションを行うことにしました。シミュレーションでは、リーダーが誰もいない状態から始め、以下の操作を何回か繰り返します。
  生徒をリーダーに加える。  生徒をリーダーから外す。  要求時点でのリーダーの組み合わせについて、どのグループにも参加できない生徒がx人以下になるような、最小のrを求める。 
このようなシミュレーションを行うプログラムを作成してください。
 

"
p00279,Happy End Problem,"
「ハッピーエンド問題」と呼ばれる数学の未解決問題に関連したプログラムを書いてみましょう。平面上に与えられたn個の点から、ちょうどk個の点を結んでできる凸多角形のうち、最も面積の小さいものを見つけるプログラムを作成してください。ただし、n個の点の座標を与えられた後、質問として凸多角形の角の個数kがいくつか与えられます。
 
（補足：ハッピーエンド問題について）
平面上にどの３点も同じ直線上に乗らないようにn個の点を置きます。そのとき、どのように点を置いても、k個の点をうまく選ぶとk個の角をもつ凸多角形が必ず作れると予想されています。 今のところ、三角形ならばn=3、四角形ならばn=5、五角形ならばn=9、六角形ならばn=17であればよいことが、２００６年までに証明されています。また、三角形以上のすべてのk角形に対して、n=1+2k-2という予想がありますが、いまだ証明されていません。これは１００年にわたり研究が進められている難問です。
この問題には、「ハッピーエンド問題」という素敵な名前がつけられています。ある男女がこの問題を研究しているうちに仲良くなって、ついに結婚したことにちなんで、友人の数学者が名付けたそうです。ロマンチックですね。
 


"
p00280,Tennis,"
ジョウ君とヤエさんは昼休みにテニスをします。ただし、昼休みは時間が限られているので、短い時間で終わるように、得点について以下の３つのルールで行います。
  相手が３点以下のときに先に５点とれば勝ち。  ４対４の同点になったときは、その直後に連続して２点とった方が勝ち。  ４対４の後に双方が１点ずつとったときは引き分け。 
以下の図は、ジョウ君とヤエさんの試合で起こり得るすべての状況を表しています。丸の中の左の数がジョウ君の得点、右がヤエさんの得点です。ａと書いた矢印はジョウ君が１点とったことを、ｂと書いた矢印はヤエさんが１点とったことを表します。
 
ジョウ君とヤエさんの得点が与えられたとき、試合開始からその得点状況になるまでに、上の図で通り得るすべての経路を列挙するプログラムを作成してください。
 

"
p00281,Computation of Salary,"
ワシはパイプつなぎ組合の親方じゃ。職人を工事現場に派遣し、現場でパイプをつながせておる。去年は工事が増えて大儲けするかと思ったのじゃが、ちょっと給料の出し方がまずくてのぅ。ウチとしては大赤字になってしまったのじゃよ…。そこで、今年は職人たちへの給料の出し方を工夫したいのじゃ。
 
職人たちの給料は、工事の種類とこなした回数で決めておる。つまり、
職人の給料 ＝ 種類 1 の単価 &times; 種類 1 をこなした回数
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  + 種類 2 の単価 &times; 種類 2 をこなした回数
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;....
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  + 種類 m の単価 &times; 種類 m をこなした回数


となるのじゃ。これを計算するために、ウチでは、どの職人がどの種類の工事を何回こなしたかを次のような表に記録しておる。
 
例えば、上の表では、職人１が工事２を２回、工事４を１回こなしたことを示しておる。
 
職人たちがこなした仕事の回数はもう変えられんが、やつらは工事の単価を知らんので、単価をいろいろと変えながら皆の不満が出ぬよう給料を調整しようと思うておる。じゃが、ワシがこしらえたプログラムが今もって動かなくてのぅ。ちょっとみてくれんかね。
 
n は職人の数で m は工事の種類の数じゃ。変数 a[i][j] に職人iが工事 j をこなした回数を、b[j] に工事 j の単価をいれて、c[i] に職人 i の給料を格納しておる。合っているはずなのに、うんともすんとも言わん！そろそろ今年の給料を職人たちに払わないとまずいのじゃが・・・・・なんとかならんかのぅ。
 
それでは、職人のこなした仕事の回数と各工事の単価の情報が与えられたとき、各職人の給料を計算するプログラムを作成してください。
 

"
p00282,Jinkoki,"
大きな数を表そうとすると、文字数も多くなるし、位取りがわからなくなってしまうので、なかなか面倒です。大きな数をわかりやすく表すために、人々は数の単位を使ってきました。江戸時代に書かれた「塵劫記」という本の中では、数の単位が次のように書かれています。
 
たとえば、２の１００乗のようなとても大きな数は、１２６穣７６５０(じょ)６００２垓２８２２京９４０１兆４９６７億３２０万５３７６と表せます。それでは、正の整数 m と n が与えられたとき、m の n 乗を塵劫記の単位を使って上のように表すプログラムを作成してください。
 

"
p00283,Knocker of the Gigas Cedar,"
あなたは n 種類の道具を使って、目の前の巨樹を切り倒そうとしています。はじめは、樹の耐久力は d、あなたの経験値は 0 ですが、道具 i で１回樹を叩くと樹の耐久力は ai 減り、あなたは ei の経験値を得ます。ただし、道具 i を使うためには、あなたは ri 以上の経験値を持っていなければなりません。樹の耐久力が 0 以下になると樹は倒れます。
 
樹の耐久力と道具についての情報が与えられたとき、樹を切り倒すには最低何回樹を叩かなければいけないかを求めるプログラムを作成してください。
 


"
p00284,Infinite Express,"
ムゲン鉄道のムゲン線には無限個の駅があります。駅には …, -3, -2, -1, 0, 1, 2, 3, … と番号が振られていて、各駅は数直線上の整数と同じ順番で隣り合っています。あなたはいま、ある番号の駅から電車に乗り、それより大きな番号の駅に向かおうとしています。
 
ムゲン線には無限種類の快速電車が走っています。それらは 0 級快速、1 級快速、2 級快速、3 級快速、… のように番号で呼ばれています。n 級快速の電車は、2n の倍数の番号の駅に停車します。たとえば、1級快速は駅 …, -4, -2, 0, 2, 4, … に、3 級快速は駅 …, -24, -16, -8, 0, 8, 16, 24, … に停車するといった具合です。0 級快速はすべての駅に停車するので、本当は各駅停車ですがムゲン鉄道は「快速」と呼んでいます。
 
どの級の快速電車も、ある停車駅から次の停車駅まで移動するのに1単位時間かかります。また、快速電車間の乗り換えにかかる時間は無視できるものとします。乗車駅 s と降車駅 d が与えられたとき、s から d へ移動するのに必要な最小の時間を求めるプログラムを作成してください。ただし、s から d へ移動する間に、大きな番号から小さな番号の駅に向かっての移動は認められないものとします。
 


"
p00285,Microorganism Power Generation,"
飯沼博士は磐梯山の噴気孔でふしぎな微生物を見つけました。この微生物の雄と雌１体ずつが合体すると、電気エネルギーを放出します。この微生物を研究すれば、将来のエネルギー危機から我々を救えるかもしれません。
 
観察を続けると、微生物は合体したときだけ電気エネルギーを発生させることと、合体した微生物のさらなる合体はないことがわかりました。さらに観察を続けると、合体で放出される電気エネルギーは、微生物が体内に持つ未知の粒子（博士はこれを磐梯山にちなんでｂ粒子と名づけました）の量で決まることがわかりました。合体する雄と雌が体内に持つｂ粒子の量をそれぞれ bm と bw とすると、合体により放出される電気エネルギーは |bm - bw| &times; (|bm - bw| - 30)2 という式で計算できます。
 
この発見により、微生物の集団から得られる最大の電気エネルギーが計算できるようになりました。それでは、微生物の集団に含まれる雄と雌の数と、各個体が持つｂ粒子の量が与えられたとき、この微生物の集団から得られる最大の電気エネルギーを計算するプログラムを作成してください。
 

"
p00286,Mystery of an Ancient Ruin,"
古代遺跡から超大型あみだくじが発見された。学者達はこれをvla(very long amidakuji)と命名した。分析の結果、vlaは n 本の縦棒を持ついくつかの部品の組み合わせで構成され、多くの場合繰り返しを含んでいることがわかった。例えば、図のvlaは２種類の部品aとbを使った４つの部品から構成されている。
 
このvlaの上端に左から順番に 1,2,3,4,5 と番号をつけ、それぞれの番号からvlaをたどり（あみだくじのたどり方については問題文最後の補足を参照してください)、下端にたどり着いた場所の縦棒にその番号を振る。すべての番号についてたどり終えた後で、下端に振られた番号を左から読むと 4,2,5,1,3 になる。このように、1,2,3,4,5 という番号の列が 4,2,5,1,3 という列に変換される。
 
彼らはvlaによって 1 から n までの番号の列がどのように変換されるのかを知りたいが、手作業でたどるのは大変そうだ。そこでパソコン甲子園出場者である優秀なプログラマーの君たちに、vlaのシミュレーションを依頼した。
 
vlaはとても長いため、そのままの状態ではプログラマーたちに情報を伝えることができない。そこで学者たちは、部品の種類を英大文字１つで表し、vlaを式で表現することにした。
 
部品は同じ位置関係である縦棒が一致するように、左から順番に + 演算子で接続される。たとえば、上からa,b,c,d という順番で連結された部品の列は a+b+c+d という式で表記される。
 
部品の列を表す式 seq の m 回の繰り返しは、m(seq) と表記できる。たとえば、a+b の2回の繰り返しは 2(a+b) と表せ、これは a+b+a+b と同じである。また、seq が１つの部品 a の場合は、a を囲むかっこを省略しても構わない。4(a+b) と 3(x+y) を、この順番で連結したvlaは 4(a+b)+3(x+y) と表せる。また、かっこは 2(4(a+b)+3(x+y))+10c のように入れ子にしても構わない。
 
それでは、縦棒の数 n、各部品の情報、複数のvlaの式を入力とし、各式が表すvlaによって1から n までの番号の列がどのように変換されるかを出力するプログラムを作成しなさい。
 
（※補足：あみだくじのたどり方について）
あみだくじのある縦棒の上端から出発して上から下へ進む。ただし、横棒がある地点ではその横棒でつながった別の縦棒に移動する。これを、縦棒の下端にたどり着くまで繰り返す。
 


"
p00287,Wall,"
２xxx年、突然出現した天敵の侵入を防ぐために、人類は壁を作りその中に逃げ込んだ。その結果、人類の活動領域はその壁で囲まれた範囲に限定されてしまった。この領域は、上空から見ると w &times h の長方形である。領域内部には x 軸あるいは y 軸に対して平行な壁がいくつか設置されている。活動領域の例を下図に示す。
 
人類は活動領域内を自由に移動することができるが、壁を越えるためには一定量の資源を消費しなければならない。ただし、壁を越えることはできるが（図中の (1)）、壁の交点を越えること (2)、壁や活動領域の境界の上を移動すること (3)、活動領域外に出ること (4) はできない。
 
領域内部の壁の情報といくつかの始点と終点の組を入力し、始点から終点へ移動するために越えなければならない壁の数の最小値を計算するプログラムを作成しなさい。ただし、壁は幅のない線分とします。
 

"
p00288,Algorithm Exam,"
あなたはイズア地区におけるアルゴリズム検定試験を運営しており、運営費を最小にしたいと考えています。運営費は、会場使用料、バスの使用料、移動補助金の総和です。
 
今年は n 人の受験者登録があり、それぞれ ci 人まで受け入れ可能な m 個の会場を確保しました。あなたは各受験者を必ずどこかの会場に割り当てなければなりません。1 人以上割り当てた会場については、人数にかかわらず fi 円の会場使用料を支払う必要があります。
 
イズア地区は図に示すように東西方向と南北方向に 1 km 間隔で道が走っており、受験者の家と会場は交差点上にあると考えます。各受験者は家から会場まで道に沿って徒歩で移動できます。また、この検定試験では、1 人以上受験者を受け入れる各会場につき 1 台のシャトルバスが運行されるので、受験者はバスを利用することもできます。ただし、自分が受験する会場行きのバスにしか乗れません。
 
各シャトルバスは、会場からの東西方向の距離と南北方向の距離の和が d 以内のすべての交差点に停車します（図は d = 3 の場合）。バスの使用料は d に比例し、d が 1 km 増えると b 円上がります。つまり、シャトルバスを運行するには 1 会場あたり d &times; b 円の費用を支払う必要があります。なお、d 及び b はすべての会場で共通の値を用います。
 
移動補助金とは、各受験者に必要な最低限の徒歩での移動に対して運営者が受験者に支払う費用で、1 km について 1 円を払う必要があります。
 
あなたは受験者の家と会場の位置、会場の受け入れ可能人数と使用料、d が 1 km 増えたときに加算される料金 b の情報を入力データとして持っており、各受験者への会場割り当てと d を決定することができます（ただし、d は 0 以上の整数)。このとき、運営費の最小値を求めてください。
 


"
p00289,Catch a Thief,"
怪盗アカ・ベコは大胆にも、ツルガジョーから銀のシャチホコを盗み去った。警部であるあなたは、アカ・ベコが仲間のコボウ氏にシャチホコを渡すらしいという情報を手に入れた。ただ、コボウ氏はアカ・ベコのアジトまで出向けないので、アジトの外で渡すらしい。あなたはアカ・ベコを待ち伏せして捕まえることにした。この町は古い城下町なので、道が複雑に入り組んでいて、どの道も一方通行になっている。アカ・ベコがアジトから受け渡し場所までどの経路を通るのかはわからないが、人員不足のため、待ち伏せ場所は１つに設定しなければならない。
 
あなたは、アジトを含むいくつかの地点を選び、それらをつなぐ道を調べ、地図を作った。地図上の地点のどこかで受け渡しが行われるらしい。受け渡し場所が判明次第、以下のように待ち伏せ場所を選ぶ。
  アジトは危険なのでアジト以外の地点。  アカ・ベコがアジトから受け渡し場所までどのような経路を通っても必ず通る地点。  1, 2 の両方を満たす地点のうち、受け渡し場所にたどり着くまでに通過しなければならない地点の数がより少ない地点。ただし、コボウ氏に見つからないようにするために、1, 2 を満たす地点が他にない場合のみ、受け渡し場所を待ち伏せ場所にする。 
アジトと待ち伏せ場所の候補からなる地点をつなぐ道の情報のあとに、質問として受け渡し場所が複数入力されたとき、それぞれの受け渡し場所について待ち伏せ場所を出力するプログラムを作成してください。
 

"
p00290,The Number of Chairs,"
選手のみなさん、パソコン甲子園にようこそ。パソコン甲子園の本選は会津大学で行われ、会場内では
１つの机に１チームが割り当てられます。パソコン甲子園は１チーム２人なので、チーム数×２脚の椅子が必要です。大学では、他にも様々なイベントの会場設営で机と椅子を準備する機会がありますが、必要な机と椅子の数も様々です。そこで、あるイベントに対して準備する机の数と、机１つあたりに必要な椅子の数が与えられたとき、必要な椅子の総数を計算するプログラムを作成してください。
 

"
p00291,A Fat Wallet,"
４月に消費税が８％になってから、お財布が硬貨でパンパンになっていませんか。同じ金額を持ち歩くなら硬貨の枚数を少なくしたいですよね。硬貨の合計が１０００円以上なら、硬貨をお札に両替して、お財布のメタボ状態を解消できます。
 
お財布の中の硬貨の枚数が種類ごとに与えられたとき、硬貨をお札に両替できるかどうかを判定するプログラムを作成してください。
 


"
p00292,The Last One is the Best,"
k 個の石から、p 人が順番に１つずつ石を取るゲームがあります。p 人目が石を取った時点で、まだ石が残っていれば、また１人目から順番に１つずつ石を取っていきます。このゲームでは、最後の石を取った人が勝ちとなります。k とp が与えられたとき、何人目が勝つか判定するプログラムを作成してください。
 

"
p00293,Bus Timetable,"
バスマニアの健次郎君は、ａ市内のバスをよく利用しています。ある日ふと、健次郎君の家の前のバス停から出発するすべてのバスを写真に収めることを思い立ちました。このバス停には飯盛山行きと鶴ケ城行きの２つのバス路線が通ります。各路線の時刻表は手に入れましたが、１つの時刻表としてまとめた方がバス停で写真が撮りやすくなります。
 
健次郎君を助けるために、２つの路線の時刻表を、０時０分を基準として出発時刻が早い順に１つの時刻表としてまとめるプログラムを作成してください。
 

"
p00294,Railroad II,"
わたしの住む街には、図のような n 個の駅からなる円環状の鉄道路線があります。この路線の各駅には 0 から n-1 までの番号が順番に割り当てられていて、隣の駅まで100 円で移動することができます。移動はどちらの方向にでも可能です。
 
わたしはこの路線上のいくつかの駅で買い物をしたいと思っています。そこで、プログラムを作成して移動費を計算することにしました。ある駅を始点として、買い物をするすべての駅を訪問する最小の費用（円）を求めるプログラムを作成してください。ただし、同じ駅を何度訪問しても良く、どのような順番で駅を訪問しても構いません。
 

"
p00295,Floppy Cube,"
フロッピーキューブをプログラミングで解いてみましょう。フロッピーキューブは図のように表面に色のついた９個の立方体から構成されている立体パズルで、キューブの列を回転させることによって、６つの各面の色をそろえます。 
 
フロッピーキューブに対しては下図のような４種類の操作を行うことができ、一回の操作で、端にある３つの隣接したキューブを１８０度回転することができます。わかりやすいように、図では、上面に＋(赤色)、下面に＊(緑色)、右前面に□(黄色)、左前面に●(青色)、右奥面に○(水色)、左奥面に■紫色) の記号が付いている状態を初期状態としています。
 
フロッピーキューブの初期状態が与えられるので、パズルを解くために必要な最小の操作回数を求めるプログラムを作成してください。 
 

"
p00296,Baton Relay Game,"
アカベ高校では、毎年全校生徒が参加するゲームを行っています。まず、校庭に n 人の全校生徒が円形に並びます。図のように、各生徒は 0 から n-1 までの番号が書かれたゼッケンを付けています。
 
ゲームではバトンを１本使い、最初はゼッケン 0 番の生徒がバトンを持っています。そこから、以下の手順を m  回繰り返します。まず、現時点でバトンを持っている生徒が適当な正の整数 a を宣言します。a が偶数のときは時計回り、奇数のときは反時計回りに隣の生徒にバトンを渡していき、a 番目にバトンを受け取った生徒が脱落します。脱落した生徒は、時計回りで隣の生徒にバトンを渡し、円から抜けます。
 
ゲームが終わった後に円に残った生徒は、放課後の掃除が１年間免除されます。しかし、ここ数年は生徒数が増えたため、全校生徒を集めるのが難しくなってきています。そこで、競技プログラミング部のあなたは、シミュレーションで掃除が免除される生徒を求めるプログラムを作成するよう頼まれました。
 
指定した生徒が掃除を免除されているかどうかを質問したとき、それに答えるプログラムを作成してください。
 


"
p00297,Star Watching,"
ある晴れた夜の帰り道、空を見上げるとそこには無数の星。強く輝く星々、かすかに見える星々、いろ
いろな明るさの星々が夜空を彩っています。
 
あなたはふと思いました。この星空に自分の星座があったらどんなに素敵だろうと。そこであなたはひとつの基準を決め、部屋の窓から見える星々を適当につなげて自分の星座を作ることにしました。その基準とは、「どの２つの星を選んでも、それらの明るさの差がある定数 d 以下になるような星のグループを作り、その中で一番大きいものを自分の星座にしよう！」というものです。例えば、図のような窓から見える夜空を考えてみましょう（外側の長方形は窓枠です）。 
 
この夜空には、明るさがそれぞれ 1，12, 2，4，1，8, 3，5，4 の９つの星がありますが、d = 2 とすると例えば以下のような３つの星座 a, b, c ができます。
 
星座の大きさを次のように決めることにしました。ある星座の星をすべて含むような、窓枠に平行な辺からなる長方形のうち、面積が最も小さいものを選びます。この長方形の面積をその星座の大きさとします。例えば、上の夜空では星座 a, b, cの大きさはそれぞれ12, 10, 16になるので、星座cが最も大きい星座となります。
 
n 個の星の位置と明るさ、および整数 d が与えられたとき、一番大きい星座の面積を求めるプログラムを作成してください。星の位置は窓枠の左下隅を原点とした座標で与えられ、軸は図のような向きとします。星座を構成する星が１つの場合や、星々が軸に平行な直線上にある場合は、その星座の面積は 0 となることに注意してください。
 

"
p00298,Mighty Man,"
力持ちたちが集う力持ち学園がありました。力持ち学園の運動会では、力持ちたちが隊列を組んで行進します。
 
力持ちたちは常に自分たちの力を誇示したい一方で、彼らの大半は自分で歩きたくありません。そこで彼らの一部が一番下になり、その上に大勢の人を縦一列に持ちあげて歩くことで、実際に歩く人数を減らそうと考えました。
 
はじめに、n 人の力持ちは地面の上に横一列に並んでいて、それぞれ左側から １,２,３,..., n と通し番号で呼ばれています。通し番号 i の力持ちの体重は wi で最大 ci の重量まで持つことができます。
 
力持ちは、以下の条件をすべて満たすときだけ、隣に立っている左右どちらかの力持ちを持ちあげることができます。
  自分の上下には力持ちはいない。つまり、誰かに持ち上げられてもいないし、誰かを持ちあげてもいない。  隣の力持ちの体重が、自分が持つことのできる最大の重量以下である。ただし、隣の力持ちが既に誰かを持ち上げているなら、縦に積み上がった力持ちたちの体重の合計が、自分が持つことのできる最大の重量以下でなければならない。 
例えば、次のような３人の力持ちの隊列を考えてみましょう。
 
下図のように、２の力持ちが持つことのできる重さが w3 以上のとき、２の力持ちは３の力持ちを持ちあげることができます。続いて、１の力持ちが持つことのできる重さが w2 + w3 以上のとき、１の力持ちは２の力持ちを持ちあげることができます。
 
また、下図のように３の力持ちが２の力持ちを持ちあげた場合は、１の力持ちの隣が、２の力持ちを持った３の力持ちになるので、１の力持ちは３の力持ちを持ちあげることができます。 
 
２の力持ちが、下の図のように１と３の力持ちを両方持つことはできません。
 
力持ち学園の専属プログラマーとして、一番下で歩くことになる最小の人数を求めてください。
 

"
p00299,School Cafeteria,"
今日はｚ大学のオープンキャンパスです。毎年この日の昼休みには、大勢の高校生たちが学食に列をつくります。そこでｚ大学の事務局は、行列の長さが最大でどのくらいの距離になるかを予測することにしました。事前調査の結果で、以下のことが分かっています。
  行列にはそれぞれ 1 から n までの番号が振られた n 人が並びます。 １つ目の制約は順序に関するもので以下のいずれかです：
         ai は bi よりも先、または同じ位置に並ばなくてはならない
	 ai は bi よりも後、または同じ位置に並ばなくてはならない
	 ai は bi より先でも、同じ位置でも、後でもよい
	  ２つ目の制約は距離に関するもので以下のいずれかです：
	ai と bi は di メートル以上離れなければならない
	ai と bi は di メートル以内に並ばなければならない
	 
 
また、先頭から同じ距離の場所に複数の人が並ぶことができ、行列の先頭には常に番号 1 の人が並ぶことが分かっています。
 
与えられた c 個の制約をすべて満たす行列について、先頭から最後尾までの距離が最大となるような並び方をした場合の距離を求めるプログラムを作成してください。ただし、どこまでも離れることができる場合は inf と、制約を満たす並び方が不可能な場合は -1 と出力してください。
 

"
p00300,Yuekis' Audio Room,"
数学者である有益氏の趣味は音楽鑑賞で、家に念願のオーディオルームを作りました。完成したオーディオルームで、友人を招いてお披露目会を開きたいと考えています。全員にできるだけ良い音で聴いてもらいたいので、部屋の中の何か所かで音を計測し、友人たちの位置での音の質を計算するつもりです。
 
計測点は、下の図の円弧と線分の交点である 1 番から 35 番までの点から選択します。１つの線分上にある点は、オーディオシステムからの距離が 100ｃｍから 500ｃｍまで 100ｃｍずつ離れて並んでいます。１つの円弧状にある点は、もっとも右のもの（1 番から 5 番までの点）から反時計回りに、0°から 180°
の範囲で 30°度刻みに並んでいます。
 
このような円弧と線分に囲まれた領域内のどこかに友人が居ることになるので、友人の居る位置によっ
て必要な計測点を選択します。友人の位置は、円弧に沿って反時計回りに測った角度とオーディオシス
テムからの距離で与えられます。必要な計測点は以下のように１点か、２点か、４点が選ばれます。
 
有益氏を助けるために、必要な計測点の番号を求めるプログラムを作成してください。
 


"
p00301,Symmetric Ternary Number,"
1 グラム、3 グラム、9 グラム、27 グラムのおもりが１つずつあれば、天びんを使って 1 グラムから 40グラムまで 1 グラム刻みで量れることが知られています。たとえば、天びんの一方の皿に重さを量りたいものと 3 グラムのおもりを載せ、もう一方の皿に 27 グラムと 1 グラムのおもりを載せて釣り合えば、量りたいものの重さは 27-3+1=25 グラムだとわかります。 さらに、1(=30)グラム、31 グラム、... 、3n-1 グラム、3n グラムまでのおもりが１つずつあれば、天びんを使って(3n+1-1)/2グラムまで量れることが知られています。また、天びんが釣り合うようなおもりの置き方は一通りしかないことも知られています。
 
量りたいものとおもりを天びんに置いて、釣り合うようなおもりの置き方を文字列で表すことができます。3i グラムのおもりを量りたいものと同じ皿に載せたときは「-」、もう一方の皿に載せたときは「+」、どちらにも載せなかったときは「0」を文字列の右端からi番目に書きます（右端を０番目と数えます）。たとえば、先ほどの 25 グラムの例は +0-+ と表わせます。
 
それでは、量りたいものの重さが与えられたとき、天びんが釣り合うようなおもりの置き方を表す文字列を出力するプログラムを作成してください。ただし、３のべき乗グラムのおもりは、どのような重さのものでも必ず１つあるものとします。
 
（補足： 対称３進数について）
量りたいものの重さがwのとき、おもりの置き方を表す文字列はwの対称３進数になっています。対称３進数とは、３のべき乗の数で位取りを行い、各位に数 1、0、-1 を表す文字を書くことで表した数のことです。上の文字列では、文字「+」、「0」、「-」がそれぞれ数 1、0、-1 に対応します。たとえば、25 グラムのものを量るときのおもりの置き方が +0-+ である対称３進数が表す数は、1 &times; 33 + 0 &times; 32 - 1&times; 31 + 1 &times; 30 = 25 となります。
 

"
p00302,Nisshinkan Marathon Club,"
アイヅ市立ニッシン館は、文武両道を掲げる歴史ある学校です。ニッシン館マラソン部は熱血指導で有名であり、決められた練習時間の間、周回コースをひたすら走るという鬼の特訓を行います。このとき、脱水症状で倒れる部員がいないように、部員の実力に合わせて飲み物を提供する給水所を設けています。
 
各部員が１単位時間あたりに走れる距離(ペース)は部員ごとに決まっており、全員が１単位時間ごとに必ず給水できるように給水所を設けたうえで特訓を行います。部員は 1 単位時間で着いた給水所で必ず中身の入った容器を取り、そのまま走り続けます。さらに、次の１単位時間で着いた給水所で空の容器を置き、中身の入った容器を取って走り続けるということを繰り返します。また、空の容器は、置いてから 1 単位時間の時点で飲料が補充され、その瞬間から誰にでも提供できるようになります。
 
部員は全員同じ地点から、容器を持たずに出発します。決められた練習時間まで走ると練習を終えます(このときも給水が必要です)。複数の部員が同時に同じ給水所に到着する場合もあるので、一か所の給水所で同時に複数の容器が必要になることもあります。
 
鬼の特訓を安全に行うために、最低いくつの給水容器が必要になるか求めるプログラムを作成してください。
 


"
p00303,Deadlock,"
コンピュータにおける「データベース」とは、情報を管理するための入れ物で、「データベースマネジメントシステム(dbms)」とは、その管理をする仕組みです。複数のユーザが利用するデータベースでは、dbms は慎重に構築する必要があります。
 
例えば、倉庫から商品を１つ取り出した人が、データベースに対して以下の処理を行うとしましょう。
(1) 商品の個数 n をデータベースから読む。
(2) 新たな商品の個数 n-1 をデータベースに書き込む。
 
ユーザ１が(1)を終えて(2)を始める前に、別のユーザ２が倉庫から商品を取り出して(1)を行ったとします。ユーザ２もユーザ１と同じ個数を読むので、２人が(2)を終えたときには商品は２個減るのにデータベース上では１個しか減らないというおかしな結果になります。このような問題を防ぐために、dbms は特定のデータを操作中のユーザに、そのデータを「ロック」する権利を与えます。ロックされていれば、他のユーザはその値を操作できなくなるので、おかしな結果を返すことはなくなります。
 
これで安全に操作できることは保証されますが、今度は別の問題が起こります。例えば、ユーザ１とユーザ２が以下のような順番でデータａとｂをロックしようとしたらどうなるでしょうか？

(1) ユーザ１がデータａのロックを試みる → 成功（データａがロック中になる）
(2) ユーザ２がデータｂのロックを試みる → 成功（データｂがロック中になる）
(3) ユーザ１がデータｂのロックを試みる → データｂがロック中なのでユーザ１は待つ
(4) ユーザ２がデータａのロックを試みる → データａがロック中なのでユーザ２は待つ


(4)を実行した時点では、ユーザ１がａ、ユーザ２がｂをロックしているので、(3)(4)は永久に成功しませ
ん。これを「デッドロック」と呼びます。dbms はこれを検出しなければなりません。
 
ある時点でデッドロックが起きているかどうかは、その時点でのすべてのユーザとデータの依存関係を書き、循環ができているかどうかで判断できます。依存関係は，ユーザがデータをロック済みの場合はデータからユーザの向きに矢印を、ユーザがデータのロックを試行していて待ち状態になっている場合はユーザからデータの向きに矢印を書くことで表します。
 
上の(1)から(4)の例であれば、(4)を実行した時点での依存関係は右上のような図になります。このとき、矢印の方向に進むと、ユーザ１→データｂ→ユーザ２→データａ→ユーザ１という循環ができているため、デッドロックが起きていることがわかります。dbms の苦労を体験するため、あなたにここでやってもらいたいのは、このようなデッドロックを検出するプログラムを作成することです。
 

"
p00304,New Drug Development,"
英世博士は日々研究を行い、新しい薬を開発しようとしています。新薬を開発するためには、色々な物質を組み合わせて薬を作り試験を行い、良い薬を見つけなければなりません。様々な組み合わせを試していくうちに、英世博士は物質の組み合わせが樹形図で表せることを突き止めました。
 
右の図は、薬の調合を表す樹形図の例です。図の中で丸く囲まれたものを物質ノード、三角で囲まれたものを選択ノードと呼びます。物質ノードは物質を表します。選択ノードは、物質の選択を表すもので、それ自体は物質を表しません。選択ノードには or 型（&or;が付いたもの）と alt 型（&harr;が付いたもの）の２種類があります。また ? が付いたノードは、それがオプションであることを表します。ただし、選択ノードの子ノード（下向きの枝の先にあるノード）がオプションになることはありません。樹形図に現れる異なる物質ノードは、それぞれ別の物質を表すものとします。
 
薬の調合を行うときは、樹形図の一番上のノードからはじめて、順々にノードをたどっていきながら以下のようにしてノードを選んでいきます。
  たどり着いたノードがオプションでない物質ノードなら、それを必ず選ぶ。  オプションの物質ノードなら、それを選ぶかどうかは任意。  or 型の選択ノードなら、その子から少なくとも一つを選ぶ。ただし、その選択ノードがオプションなら、子を一つも選ばなくてもよい。  alt 型の選択ノードなら、その子から一つだけを選ぶ。ただし、その選択ノードがオプションなら、子を選ばなくてもよい。 
あるノードが選ばれたときだけ、そのノードから下に向かう枝をそれぞれたどっていきます。選ばれなければ、それらをたどることはありません。
 
あなたは英世博士から、薬の物質の組み合わせを表す樹形図を受け取り、組み合わせの数が全部で何通りあるか求めるよう指示されました。樹形図が与えられたとき、組み合わせの総数を出力するプログラムを作成してください。
 


"
p00305,Frame,"
画像の中から有益な情報を抽出する画像認識はコンピュータサイエンスの中でも重要な研究テーマのひとつです。デジタルカメラ、運転支援システム、防犯システムなどに幅広く応用されています。
 
このような研究のおかげで、私たちは画像解析を行うための多くのソフトウェアやプログラム集を使い様々な処理を行うことができます。一方、自力でプログラムを書いて解析することで、その仕組みを知り、楽しい時間を過ごすことができます。ここでは、一風変わった画像認識をしてみましょう。
 
画像として次のような各ピクセルが整数の値を持つ n &times; n のピクセルが入力として与えられます。この画像の中から、線の太さが１ピクセルの長方形の枠（わく）を１つ抽出します。
 
枠が覆うピクセルの値の和が最大となるような枠を抽出して、その和を報告するプログラムを作成して
下さい。ただし、下の図のように、縦、横のピクセル数が１つや２つの場合も枠とみなすものとします。
 







"
p00306,Kaguya,"
いよいよ今月末に「はやぶさ２」が打ち上げられます。４年前に「はやぶさ」が帰ってきたときは、日本中が盛り上がったのを覚えている人も多いと思います。７年前には、「かぐや」が打ち上げられ、月の周りを回りながらたくさんの鮮明な画像を地球に送ってくれました。
 
上の図は、地球を原点とした空間座標（z軸は紙面から垂直に下から上に向いているものとします）に、月の軌道といくつかの月の位置、月の周りを回るかぐやの軌道を描いたものです。月の軌道は、x軸とy軸を通る平面上にある、原点を中心とする円とします。月の周りを回るかぐやの軌道は、x軸とz軸を通る平面に平行な平面上にある円とし、その中心は月の中心と一致します。月は、その軌道に沿って描かれた矢印の方向に回っているものとします。
 
右の図で、月の位置はａ，ｂ，ｃの３つが描かれています。月を横切る直線がかぐやの軌道です。かぐやは月の周りを回っているので軌道は円ですが、z軸の正の方向から見ているので、図のx軸に平行な直線に見えます（月の位置が変わっても、つねにx軸に平行であることに注意してください）。かぐやは、その軌道上に描かれた矢印の方向に回っているものとします。
 
かぐやが地球から見て月の裏側に隠れてしまうと、地球と直接通信ができなくなります。かぐやの管制を担当するあなたは、かぐやが月の裏側に隠れる時間が、与えられた時間の中でどれだけになるかをプログラムで求めようとしています。
 
月の地球に対する位置と分単位での時間tが与えられたとき、その位置から始めてt分後までの間に、かぐやが月の裏側に隠れる時間を求めるプログラムを作成してください。ただし、地球とかぐやは点、月は半径 1800 km の球と考えます。月は半径 380000 km の軌道を 2500000 秒で一周し、かぐやは月の表面から高度 100 km の円上を２時間で一周するものとします。かぐやの最初の位置は、かぐやの軌道がz座標で最大の値をとる位置とします。
 


"
p00307,Net Cafe,"
あなたはネットカフェを経営しています。今日あなたは、顧客に指摘され続けている問題を解決しようと取り組んでいます。その問題とは、店舗の本棚の単行本が巻数順に並んでおらず、目的の単行本を探しだすのが面倒だという苦情です。
 
あなたの店舗で一番巻数の多い単行本は「名探偵 赤ベコ」（通称「赤ベコ」）です。あまりに長編なので、特別な本棚を「赤ベコ」のために用意しました。
 
単行本の各巻の重さと厚さは様々で、本棚の各段の幅と、各段に並べることができる本の重さの上限も様々です。あなたは、次の条件を満足するように本棚に本を並べることにしました。
  1 巻からある巻までの「赤ベコ」が本棚に並んでいる。  それぞれの段には、巻数順に（途中で抜けている巻がないように）本が並ぶ。  各段に並べる本の重さの合計が、その段で定められた重さの上限を超えない。  各段に並べる本の厚さの合計が、その段の幅を超えない。 
これらの条件を満たしたとき，この本棚に最大で何巻まで「赤ベコ」を並べることができるかを求めるプログラムを作成してください。
 

"
p00308,Unknown Germ,"
英世博士は未知の病原菌を発見しました。この病原菌は、アクダマキンとゼンダマキンと呼ばれる二種類の菌が、一直線に連なった鎖状の構造をしています。人類のために、この病原菌を無害化したいと考えています。
 この病原菌は、長さが２以下になると力が弱まり、免疫力によって無害化されることが分かっています。英世博士は、この病原菌を任意の場所で切断して、前半と後半の２つの鎖にすることができます。また、２つの鎖を連結して１つの鎖にすることもできます。
 
しかし注意しなければいけないのは、アクダマキンの数が多い鎖はきわめて有害だということです。ある鎖においてアクダマキンの数がゼンダマキンの数よりも多くなると、その瞬間アクダマキンは無制限に増殖を始めます。これは長さ２以下の鎖についても例外ではないので、慎重に鎖を切断していかなければなりません。
 
どの瞬間においてもアクダマキンの数の方が多いような鎖を作ることなく、一本の鎖を長さ２以下にして無害化することは可能でしょうか。英世博士は、助手であるあなたに無害化が可能かどうか判定するプログラムを作成するよう指示しました。無害化が可能ならばその操作を出力し、不可能ならば不可能であると出力するプログラムを作成してください。ただし、その操作のステップ数が最小である必要はありません。
 


"
p00309,The Kingdom of Akabeko,"
アカベコ国の国王には２人の王子がいます。国王は自分が退位するときに国を２つに分割し、それぞれの王子に一つずつ国を治めさせることにしました。新しい国の名前はアカ国とベコ国です。アカベコ国には n 個の町と、２つの町を繋ぐ m 本の道があります。国王は、以下の手順でアカベコ国の町と一部の道を２つの国に配分することにしました。

(1)&nbsp;&nbsp; 町を２つ選び、それぞれアカ国とベコ国に配分する。
(2)&nbsp;&nbsp; すでに配分された町sを選ぶ。さらに、町 s から１本の道で繋がっている、まだ配分されていない町 t を選ぶ。そして、町 s、t 間の道と町 t を、町 s が配分された国に配分する。
(3)&nbsp;&nbsp; (2)を、行えなくなるまで繰り返す。
 
実は２人の王子はあまり仲が良くないので、国王は２つの国の距離をなるべく大きくしたいと考えています。ここで、２つの国の距離とは、アカ国の町とベコ国の町を繋ぐ道の中で、最も短い道の長さです。
 
アカベコ国の町と道の情報が与えられたとき、分配後のアカ国とベコ国の距離の最大値と、そのような距離になる配分が何通りあるかを求めるプログラムを作成してください。ただし、２つの配分結果は、アカ国とベコ国に異なる町か道が配分された場合に区別されます。
 


"
p00310,The Number of Participants,"
選手のみなさん、パソコン甲子園にようこそ。パソコン甲子園では、現在、プログラミング部門、モバイル部門、そして、いちまいの絵ｃｇ部門、計３部門の競技が開催されています。
<!--
大会の運営に当たって参加者の総数を求める必要がありますが、参加者数は部門ごとに集計されているので全体の人数がわかりません。
-->
 
各部門の参加者数が与えられたとき、参加者の総数を計算するプログラムを作成せよ。
 

"
p00311,Fishing Competition,"
浩と健次郎の兄弟は猪苗代湖に魚釣りをしに来ました。二人は以下のように点数を決め、釣り上げた魚の合計得点で勝負することにしました。
 イワナは１匹 a 点 ヤマメは１匹 b 点 イワナ１０匹ごとに c 点追加 ヤマメ２０匹ごとに d点追加 
浩と健次郎が釣り上げた魚の数をもとに、どちらが勝ちか、あるいは引き分けか判定するプログラムを作成せよ。
 


"
p00312,Frog Going Straight,"
一匹のカエルが巣穴に帰ろうとしています。巣穴はカエルの d センチメートル前方にあって、カエルは巣穴に向かってまっすぐ進みます。カエルができる行動は、以下の２つだけです。
  大ジャンプ（l センチメートル前方に進む）  小ジャンプ（１センチメートル前方に進む） 
カエルは巣穴を跳び越すことなく、ちょうど巣穴に着地することをねらっています。
 
カエルが巣穴に帰るために、最低何回跳ぶ必要があるかを求めるプログラムを作成せよ。
 

"
p00313,Secret Investigation,"
秘密の組織アイヅアナリティクス(aizu analytics)は、極秘の調査を開始した。ターゲットになっている人物は n 人いて、1 から n の識別番号が付けられている。azas 情報戦略調査員であるあなたは、
ターゲットの中から、以下の条件を少なくとも一つ満たす人物の数を割り出すことにした。
  組織 $a$ に属さず、かつ、商品 $c$ を所持している者。  組織 $b$ に属し、かつ、商品 $c$ を所持している者。 
組織 $a$ に属している者、組織 $b$ に属している者、商品 $c$ を所持している者の識別番号が入力として与えられたとき、条件を満たす人物の数を割り出すプログラムを作成せよ。ただし、どちらの条件も満たす人物を重複して数えないように注意せよ。
 
（補足：上記の条件について）
1 から $n$ までの自然数の集合から、いくつかの要素を選んだ集合を $a$，$b$，$c$ とする。条件を満たす人物の数は、$(\bar{a} \cap c) \cup (b \cap c)$ (図の塗られた部分) を満たす要素の個数である。ただし、$\bar{a}$ は集合 $a$ の補集合とする。
 







"
p00314,Programming Contest,"
今年も白虎大学でプログラミングコンテストが開催されることになりました。コンテストではいくつかの問題が出題され、それぞれ難易度に応じた得点が割り当てられています。
 
実行委員会は、解いた問題の数とそれらの得点の両方を考慮し、次のルールに基づいて各チームのスコアを計算することにしました。
 
「あるチームが正解した問題のうち、得点が a 以上であるものが a 問以上あることを満たすような最大の a を、そのチームのスコアとする」
 
あるチームが正解した問題の数と、それらの問題の得点から、チームのスコアを計算するプログラムを作成せよ。
 


"
p00315,Quality Management,"
会津タカダ市が生産販売する布製コースターは、対称なデザインでとても美しいことで知られている。会津タカダ市では品質管理の一環として、製造ラインにカメラを設置し、各コースターを撮影して得られた画像が対称になっているかを自動で検証している。各コースターは n &times; n ピクセルの正方形の白黒画像として表される。各ピクセルは白または黒の画像に対応して、0 または 1 の値をとる。
 
この度、生産ラインの機器更新にともなって、画像解析システムのソフトウェアを更新することになった。新システムでは、通信データ量を削減する工夫がなされ、以下の方法でカメラから解析システムにデータが送られてくる。
  ラインに流れてくる最初のコースターの情報は、n &times; n ピクセルの画像としてシステムに送られてくる。  ２枚目以降のコースターの情報は、１つ前に送られた画像との差分だけが送られてくる。差分は、「0 から 1 」または「1 から 0 」へと変化したピクセルの位置の集合として与えられる。 
c 枚のコースターについて、１枚目の画像のピクセル情報と続く c - 1 枚分の差分情報を入力し、上下対称かつ左右対称となっているコースターの枚数を報告するプログラムを作成せよ。
 


"
p00316,Investigation of Club Activities,"
a 高校の生徒会長である明は、a 高校の生徒がどの部活動に所属しているかを調査することにした。a高校には 1 から n の番号が付けられた n 人の生徒と、1 から m の番号が付けられた m 種類の部活動がある。各部活動に人数制限はなく、0 人の部活動もありえる。ただし、a 高校の校則では生徒はひとつの部活動までしか所属できない。生徒は全員この校則を守っている。
 
明は生徒会員に調査を依頼し、各行が次のいずれかであるような k 行の記録を入手した。
  生徒 a と生徒 b は同じ部活動に所属している。  生徒 c は部活動 x に所属している。 
しかし、この記録には誰かが校則違反になってしまうような矛盾があるかもしれない。明は１行目から順に見ていき、矛盾があると判断できる最初の行を探すことにした。
 
k 行の記録が与えられたとき、矛盾があると判断できる最初の行の番号を求めるプログラムを作成せよ。
 

"
p00317,Slates,"
古代国家イワシロの遺跡から無数の石版が発見された。研究者の調査によって、各石版には一つの単語が刻まれていることが分かった。しかし、長年の風化によって、以下の理由で解読が困難な石版もあるようだ。
  石版に書かれている単語の一つの文字だけが 苔(こけ)で覆われている場合があり、その文字を把握することができない。
  石版の左側が欠けており、そこに何か文字列が書かれていたかもしれない（石版の左側０文字以上を把握することができない）。  石版の右側が欠けており、そこに何か文字列が書かれていたかもしれない（石版の右側０文字以上を把握することができない）。
 
石版に苔が生えている場所は多くても一か所しかない。また、欠けた石版に苔が生えていることはあるが、石版の両側が同時に欠けていることはない。
 
研究者は、石版発見以前の調査でわかっている単語をまとめた辞書を持っている。しかし、風化の影響による苔と欠けがある石版から元の単語を推測したとき、辞書の中の単語に当てはまるものがいくつあるか、すぐには分からない。
 
石版の情報が与えられたとき、与えられた辞書の中に当てはまりそうな単語がいくつあるかを数えるプログラムを作成せよ。
 


"
p00318,Ruins,"
アイヅ考古学会は、ヒバラ海に沈む古代国家イワシロの遺跡調査に乗り出した。遺跡はヒバラ海のどこか一か所に存在する。そこで、探査レーダを使い、海岸線からのレーダ探査で遺跡の位置のおおよその目星を付け、海岸線から最大何メートル離れた位置まで調査しなければならないかを見積もることにした。
 
上図のような直線で表された海岸線上に観測点を設置し、探査レーダを置く。探査レーダでは、観測点を中心とする、ある大きさの半円の範囲に遺跡があるということしかわからない。しかし、複数の観測データを組み合わせることで、より狭い範囲に絞り込むことができる。
 
観測点の位置と探査レーダが示す半径からなるいくつかの観測データが与えられたとき、海岸線から最大でどのくらいの距離まで調査する必要があるかを求めるプログラムを作成せよ。
 


"
p00319,Downhill Race,"
あなたは磐梯山で開催されるスキー競技に参加します。この競技では、ゲレンデを各選手が２回滑降し、その合計時間の短さを競います。ゲレンデにはいくつもの旗が立っていて、それらの間には選手が通るラインが設定されています。選手はスタート地点からゴール地点まで、ラインをたどりながら滑降します。ラインは以下のように設定されています。
  ゴール地点以外の旗からは一本以上のラインが延びている。  ある旗とある旗を直接結ぶラインは多くても一つしかない。  ラインは決まった方向にしか滑降できない。  どの旗にも必ずスタートからたどり着くことができ、どの旗からもゴールにたどり着ける。  どのようにラインをたどっていっても、同じ旗に戻ることはない。 
選手は現在いる旗から延びているラインを選んで次に行く旗を決めることができます。ラインの選び方は自由なので、選手は滑降ごとに異なるラインを通ってゴールに向かうことができます。
 
競技前夜、スポーツドクターのソルト君が、あなたが滑るときのゲレンデの状態を予想してくれました。それによると、１回目の滑降で通ったラインは通過の影響で雪質が変わってしまうため、２回目の滑降で同じラインを通ると、かかる時間が変わることがあるそうです。ソルト君は、それぞれのラインを１回目に通るときの時間と、２回目に通るときの時間を教えてくれました。あなたはこの情報をたよりに、２回の滑降の合計時間を最短にする滑り方を朝までに見つけなければなりません。
 
ゲレンデの状態が与えられたとき、２回の滑降の合計時間でもっとも短い値を計算するプログラムを作成せよ。
 


"
p00320,Cuboid,"
アイヅ放送協会の教育番組(ａｈｋ教育)では、子供向けの工作番組「あそんでつくろ」という番組を放送しています。今日は画用紙で箱を作る回ですが、用意した長方形の画用紙で直方体ができるかを確かめたいと思います。ただし、画用紙は切ったり折ったりしてはいけません。
 
６つの長方形が与えられるので、それらを使って直方体が作れるかどうか判定するプログラムを作成せよ。
 


"
p00321,Related Products,"
インターネット通販サイトでは、ユーザが現在見ている商品と同じページに、過去に他のユーザによって、現在見ている商品と一緒に買われた別の商品をいくつか表示してくれます。関連性の高いと思われる商品を提示することで、売り上げを伸ばすことができると考えられているからです。
 
似たようなことは、一緒に買われることが多い商品を近くに配置する、という工夫として、近所のスーパーマーケットでも目にすることができます（例えば、パンとジャムのような）。あなたの仕事は、商品配置の工夫を助けるプログラムを書くことです。今回は、ある基準となる回数を設定し、一緒に買われた回数が基準回数以上である、２つの商品の組み合わせを求めたいと思います。
 
一緒に買われた商品の情報と基準回数が与えられたとき、基準回数以上一緒に買われた商品２つの組み合わせを出力するプログラムを作成せよ。
 


"
p00322,Alphametic,"
足し算は筆算で簡単に計算できますが、もし、いくつかの数字が欠けていたら、欠けている数字を埋めるのは簡単でしょうか？ 例えば、以下のような筆算において、１から９の数字が一度しか現れないという条件があるとき、ｃとｅのマスに入る数字はいくつになるでしょう？ この場合、ｃに入るのは８，ｅに入るのは５が正解となります。このように、数字がいくつか欠けている演算を虫食い算と呼びます。
 
１から９の数字が一度しか現れないという条件はそのままで、以下のようにもっとたくさんの数字が欠けていたら、正解となる数字の埋め方は一通りしかないのでしょうか？ 実は、必ず一通りに決まるとは限りません。
 
上の図のような形をした虫食い算の、ａからｉの各マスの情報が与えられたとき、正しい埋め方が何通りあるかを出力するプログラムを作成せよ。
 


"
p00323,Metal Recycling,"
会津特産の貴金属であるアイヅニウムをリサイクルするｐｃｋ社は、全国各地にネットワークを持ち、たくさんの回収車でアイヅニウムを集めてきます。この会社は、処理の効率化のために、塊の重さと個数の単位を規格で定めています。
 
塊の重さには「ボッコ」という単位を使います。x ボッコのアイヅニウムの重さは 2xグラムです。宝石で例えると、「カラット」のようなものです。また、塊の個数には「マルグ」という単位を使います。y マルグは 2y 個です。１箱に入っている品物の個数である「ダース」のようなものです。ただし、x と y は ０ 以上の整数でなければいけません。
 
回収車 i は、 ai ボッコの重さのアイヅニウムを bi マルグずつ集めます。こうして集まったアイヅニウムを、炉の中に入れて溶かし、いくつかのアイヅニウムの塊を再生しますが、なるべくアイヅニウムの塊の数が少なくなるようにします。このとき、集めてきたアイヅニウムの重さの合計と、再生してできるアイヅニウムの重さの合計は変わりません。
 
回収車が集めたアイヅニウムの塊のボッコ単位の重さとマルグ単位の個数が与えられたとき、再生後のアイヅニウムの塊の数が最小になるような結果を求めるプログラムを作成せよ。
 


"
p00324,Bilateral Trade,"
サイバースペースにあるアイヅ国はワカマツ国と情報貿易を行っています。２つの国はお互いに有用なデータを交換することで経済発展を遂げています。博愛と平等、そして何よりも会津地方の古い言葉である、「ならぬことはならぬものです」を国是とする両国は、定期的に貿易状況の調査を行っています。
 
調査では、バイト単位でアイヅ国から見たデータ流入量から流出量を引いた値を、１ナノ秒ごとに求めた表が与えられます。その表から、値の総和が０になる最長の区間を見つけます。この区間が長いほど、平等性が保たれていると判断します。
 
貿易状況が記録された表が与えられたとき、値の総和が０になる最長の区間の長さを求めるプログラムを作成せよ。
 


"
p00325,Halting Problem,"
皆さんは、苦労して作ったプログラムを実行してみたら、無限ループになってしまった経験はありませんか？ プログラムの実行が停止するかどうかを、実行しなくても事前に判定できると便利ですよね。
 
残念ながら、皆さんがふだん使っているプログラミング言語では、あらゆるプログラムに対してそのような判定をすることは不可能です。しかし、それよりもはるかに計算能力の低いプログラミング言語なら、その言語で書いたプログラムが停止するかどうかを判定するプログラムを書ける場合があります。
 
tinypowerというプログラミング言語を考えます。この言語のプログラムは行の並びです。プログラムの各行には、先頭に行番号を書き、その後ろに文を一つ書きます。この言語で書ける文の種類は以下の通りです。
 
行番号は正の整数で、プログラム中に同じ行番号が２つ以上現れることはありません。変数は英小文字一文字で表し、定数と変数の値は整数です。変数の宣言は不要で、変数の初期値は０です。
 
プログラムの実行は先頭の文から始まり、並んでいる順に文が実行されます。ただし、上の表に書かれたように、if文の変数の値が０でないときは、変数の後ろに書かれた行番号で指定される行にジャンプし、その行に書かれた文から実行を続けます。プログラムは以下のときに停止します。
  halt文を実行したとき。  負の整数または１６以上の整数を変数に代入しようとしたとき（変数の値は更新されない）。  プログラムに現れない行番号にジャンプしようとしたとき。  プログラムの最後の文を実行した後、そこからどの行にもジャンプしないとき。 
tinypowerのプログラムが与えられたとき、それが停まるかどうかを判定するプログラムを作成せよ。
 


"
p00326,Scheduler,"
あなたはユニークなオペレーティングシステム「ウンズグネ１５」の開発に取り組んでおり、性能を決定付けるスケジューラの設計に頭を悩ませている。スケジューラとは、実行すべき処理をタスクという単位で表現し、それらをどの順序で実行するかを決定するプログラムである。スケジューラはタスクに１から n の番号をつけて管理する。全てのタスクは k 個の属性 f1, f2,..., fk を持ち、各属性にはそれぞれ固有の値が設定されている。ただし、ある２つのタスクについて、対応する属性の値すべてが同じになることはない。
 
あるタスクには、そのタスクの実行を始める前までに実行を完了していなければならないタスクが与えられることがある。タスクａがタスクｂの前に完了していなければならないことを「タスクａ &rarr; タスクｂ」と表す。例えば、タスク１ &rarr; タスク２、タスク３ &rarr; タスク２という関係があれば、タスク２を処理する前にタスク１とタスク３の両方の処理が終わっていなければならない。このような関係をタスク間の依存関係という。ただし、あるタスクから依存関係をたどっていって、そのタスクにたどり着くことはない。
 
スケジューラは依存関係に従って、実行順序を決定する。しかし、依存関係だけでは順序が一通りに定まらない場合がある。そのような場合は、各タスクが持つ属性の値によって、次に処理するタスクを選択する。
 
ウンズグネ１５のタスクは属性を複数もつため、すべての属性の値を考慮して実行順序を決定する必要がある。そのために、属性を比較する順番を定める評価順序を用いる。評価順序が最も先の属性を比較し、その属性の値が最も大きいタスクを選択する。そのようなタスクが複数ある場合は、評価順序がその次の属性で比較し、以下同様な手順を繰り返す。例えば、以下の3 つの属性を持つ3 つのタスクについて考える。
 
評価順序がf1 f2 f3、f2 f1 f3、または f2 f3 f1 に設定されている場合は、タスクx が選ばれる。また、評価順序が f1 f3 f2、f3 f1 f2、または f3 f2 f1 に設定されている場合はタスクz が選ばれる。
 
ウンズグネ１５のスケジューラの特徴は、属性の評価順序が途中で何度でも変更できることである。評価順序は、ある個数のタスクの実行が完了した時点で変更できる。ただし、スケジューラが最初に使う評価順序はあらかじめ決まっている。
 
各タスクの属性の値、タスクの依存関係、評価順序の変更情報が与えられたとき、タスクを実行する順序を報告するプログラムを作成せよ。
 

"
p00327,Disappearing Sequence,"
ただお君は頭の体操をするために、数列を使ったゲームをしています。このゲームでは、はじめに、１から９までの数字がランダムに並んだ列が与えられます。ただお君は、数列からその一部分を消していきます。ルールは、以下の通りです。
  数列から、同じ数字が２つ以上並んでいる部分を適当に選ぶ。その部分を含み、連続して現れている同じ数字をすべて消す。  消した部分の右側に数列が残っていた場合は、それを左に詰めて、数列を１つにまとめる。  上の２つの操作を繰り返した結果、すべての数字が消えればゲームクリアとなる。 
例えば、上の図のような 1,2,3,3,2,2,1,2,2 という数列の場合、
左から数えて、３番目、４番目の３を消すと 1,2,2,2,1,2,2 
左から数えて、２番目から４番目の２を消すと 1,1,2,2
左から数えて、１番目と２番目の１を消すと 2,2
左から数えて、１番目と２番目の２を消すと、ゲームクリアとなります。
 
ただし、どのように数字を消してもクリアできない数列があります。たとえば、1,2,3,3,1,2 や 1,2,3,1,2,3 などの数列です。短い数列であれば、ただお君でもクリアできるかどうかがすぐに分かり、クリアできないと分かれば違う数列にチャレンジできますが、長い数列になるとそう簡単にはいきません。
 
与えられた数列が上のゲームをクリアできるかどうか判定するプログラムを作成せよ。
 


"
p00328,Line Segment Arrangement,"
ａ大学は今年もプログラミングコンテストを開催する。作題チームの一員であるあなたは、計算幾何学の問題の入力データの作成を担当することになった。あなたが作りたい入力データは、x 軸または y 軸に平行で、互いに触れ合うことのない線分の集合である。あなたは、次のアルゴリズムに基づいたデータ生成プログラムを開発して、入力データを生成する。
  xy 平面上の線分の集合 t を空にする。 x 軸または y 軸に平行な適当な線分 s を作る。 s が t 内のどの線分にも触れない場合は s を t に追加し、触れる場合は s を追加しない。 
  
 
x 軸または y 軸に平行な n 本の線分を順番に入力し、各線分が平面上に追加されるかどうかを判定するプログラムを作成せよ。
 


"
p00329,Amidakuji,"
pck 君はみんなでゲーム大会をしています。このゲーム大会では、大会の最後にあみだくじで順位を入れ替えます。大会には n 人のプレイヤーが参加しており、あみだくじには n 本の縦棒があります。
 
あみだくじは、図のように n - 1 段の部品からできており、それぞれ 1 から n-1 の番号が割り当てられています。各部品は、あみだくじの一部を横方向に切り取った部分です。各部品にはいくつかの横棒が引かれていますが、部品の中の横棒はすべて同じ高さにあります。横棒同士がつながることはありません。
 
大会の最後に、順位の高い人から右から左の順に縦棒が割り当てられます。pck 君は現時点で最下位なので、左端からスタートです。例えば、上図の組み立て方では、６位だったpck 君は、このあみだくじによって４位（右から４番目の棒）に浮上することができます。
 
このゲームでは、最下位の人にあみだくじを組み立てる権利が与えられます。pck 君はうまくあみだくじの部品の順番を決めて、逆転優勝を狙っています。ただし、部品を回転することはできません。
 
（※補足：あみだくじのたどり方について）
あみだくじのある縦棒の上端から出発して上から下へ進む。ただし、横棒がある地点ではその横棒でつながった別の縦棒に移動する。これを、縦棒の下端にたどり着くまで繰り返す。
 
ゲームの参加人数とあみだくじの部品の情報を入力し、pck 君が優勝できるかどうか判定するプログラムを作成せよ。優勝できる場合、そのあみだくじの部品の並びを１つ出力せよ。ただし、そのような並べ方が複数ある場合は、与えられた部品の番号で辞書順最小のものを出力せよ。
 



"
p00330,Word,"
コンピュータで扱われるデータの最小単位をビット(bit)と呼び、複数のビットをまとめて表した情報量をワード(word)と呼びます。現在、多くのコンピュータでは１ワードを３２ビットとして処理しています。
 
１ワードを３２ビットで表すコンピュータについて、ワード単位で与えられたデータ量 w をビット単位で出力するプログラムを作成せよ。
 

"
p00331,Sunrise and Sunset,"
太陽が現れることを「日の出」、隠れることを「日の入り」と呼びますが、その厳密な時刻は太陽が地平線に対してどのような位置にある時でしょうか。
 
下の図のように、太陽を円、地平線を直線で表すことにします。このとき、太陽の「日の出」「日の入り」の時刻は、太陽を表す円の上端が地平線を表す直線と一致する瞬間とされています。日の出の時刻を過ぎ、円の上端が直線より上にある時間帯が昼間、円が直線の下へ完全に隠れている時間帯が夜間となります。
 
ある時刻の地平線から太陽の中心までの高さと、太陽の半径を入力とし、その時刻が「昼間」か、「日の出または日の入り」か、「夜間」かを出力するプログラムを作成せよ。
 


"
p00332,Japanese Calendar,"
「西暦」は西洋から輸入された概念ですが、日本には暦上の年を表す方法として「元号」に年を付けて識別する和暦という概念があります。例えば今年は西暦なら２０１６年ですが、和暦なら平成２８年です。どちらもよく使われる年の表現方法ですが、ある年の西暦がわかっていても和暦で何年かわからない、またはその逆の状況を経験したことはありませんか？
 
西暦で年が与えられたとき和暦の年を、和暦で年が与えられたとき西暦の年を出力するプログラムを作成せよ。ただし、西暦と和暦の対応は、簡単のため以下のようにする。
 




西暦
和暦


１８６８年から１９１１年
明治元年から明治４４年


１９１２年から１９２５年
大正元年から大正１４年


１９２６年から１９８８年
昭和元年から昭和６３年


１９８９年から２０１６年
平成元年から平成２８年





"
p00333,New Town,"
会津県では人口増加のためにニュータウンを作ることにしました。そのために、新たに長方形の土地を開拓し、この土地を余すところなく、すべて同じ大きさの正方形からなる区画に区切ることを決めました。この土地の整備には、区画数に比例した費用がかかりますが、県としてはこの費用を最小にしたいと考えています。
 
新たに開拓した土地の東西方向と南北方向の長さと、１区画当たりの整備費用が与えられたとき、すべての区画を整備したときにかかる、最小の整備費用を求めるプログラムを作成せよ。 
 


"
p00334,Geometric Data,"
コンピュータグラフィクスでは、三次元の形状を表現する方法として、ポリゴンモデルが使われます。ポリゴンモデルとは、頂点座標と、それらの頂点のつなぎ方を与えて面を作るモデルです。
 
一般のポリゴンモデルでは、任意の多角形を扱えますが、今回は三角形からなるポリゴンモデルを考えることにします。任意のポリゴンモデルは三角形を表す面情報の集まりとして表すことができます。
 
一つの面情報は、３つの頂点を並べて表します。ただし、並び方が異なるだけで同じ３点からなる場合は、同じ面情報を表すことにします。例えば、下図の四面体で、頂点１,２,３を繋いでできる面は、頂点２,３,１や、頂点３,２,１などのように表すこともできます。このように、同じ面情報が複数あると無駄になるので、１つにまとめてしまった方が良いでしょう。 
 
面情報が与えられたとき、重複した面を無くすために消さなければならない面情報の個数を求めるプログラムを作成せよ。 
 


"
p00335,Pancake,"
あなたが勤めているパンケーキ屋では、細長い鉄板にパンケーキの生地を横１列に並べて焼きます。パンケーキはへらで何回か裏返せば完成します。何回以上裏返せば完成するかはパンケーキごとに異なります。
 
へらは大きいので、隣り合ったパンケーキは２枚同時に裏返されてしまいます。このとき、これら２枚の位置は入れ替わりません。ただし、両端だけは、隣のパンケーキといっしょに裏返すだけでなく、１枚だけ裏返すこともできます。すべてのパンケーキを必要な回数以上裏返したら、全部いっぺんに鉄板からおろして完成です。
 
パンケーキを必要な回数より多く裏返すと固くなってしまうので、あまり多く裏返したくありません。そこであなたは、すべて完成するまでに、各パンケーキが裏返る回数の総和が最小になるような方法を見つけようと考えました。
 
鉄板の上のパンケーキの枚数と、完成するまでに何回以上裏返さなければならないかがパンケーキごとに与えられているとき、すべて完成するまでに各パンケーキが裏返る回数（へらを操作する回数ではない）の総和の最小値を計算するプログラムを作成せよ。
 


"
p00336,Repeated Spell,"
古代国家イワシロを発見し調査を進めた我々研究者は、ついにイワシロの中心部にある神殿を発見した。神殿にはイワシロの神にささげた石版が保管されていた。石版には、文章と呪文が一つずつ、２つの文字列が書かれていた。
 
イワシロでは呪文が文章の中に、何回現れるかが重要な意味を持つ。ただし、呪文に含まれるすべての文字が順番に、文章の中にとびとびで現れるものも１回現れていると考える。例えば、文章が""abab"" で、呪文が ""ab"" であれば、連続でないものも含めて ""ab"" は ""abab"" の中に３回現われている（ abab, abab, abab の３通り）。
 
文章と呪文が与えられたとき、呪文が文章の中に何回現れるかを出力するプログラムを作成せよ。 
 


"
p00337,Road Planning,"
会津国の若松平野に、集落が点在していました。いくつかの集落の間はまっすぐで互いに行き来できる道で繋がっていて、平野にあるどの集落の間も道を辿って行き来ができます。それぞれの道には長さに応じた維持費がかかりますが、すべての集落が資金を出し合って道を維持していました。
 
あるとき、すべての集落が一つの村にまとまることが決まり、村を囲む境界線を引くことになりました。国の決まりでは、村を構成するどの２つの集落を結んだまっすぐな線も、村の外を通ってはいけません（境界線上を通ることは許されます）。さらに、会津国では村を囲む境界線上に道がなければなりません。境界線上に道がない場所には、国が新たに道を作ってくれます。
 
しかし、道の維持費は村が支払うので、村人達は境界線をできるだけ短くしたいと考えています。さらに、村人達はすべての集落の間を行き来できる状態を維持しつつ、境界線上にない道を廃止することで、道の長さの合計を最小にすることにしました。
 
集落の位置と元々あった道の情報が与えられる。境界線上に道を置き、かつ、すべての集落が行き来できるようにした場合の、道の長さの合計の最小値を計算するプログラムを作成せよ。ただし、集落は大きさのない点、道は幅のない線分とする。 
 



"
p00338,Programming Contest II,"
白虎大学では毎年プログラミングコンテストを開催しています。コンテストは全てのチームの得点が 0の状態から開始し、解答状況に応じて得点が加算されていきます。このコンテストでは、得点の高い順に順位付けが行われます。チームの総数を n としたとき、チームには 1 から n の番号がそれぞれ割り当てられています。得点が同じ場合は番号がより小さい方が上位になります。
 
白虎大学では、コンテストを盛り上げるために観戦用のランキングシステムを開発しています。開発チームの一員であるあなたは、このシステムの一部であるプログラムの作成を任されています。
 
与えられた命令に従って、得点の更新と、指定された順位のチームの番号と得点を報告するプログラムを作成せよ。
 

"
p00339,Game Strategy,"
あなたは所属するプログラミング部の部室から古びたボードゲームを発見しました。面白そうなので遊んでみることにしました。
 
このゲームは m 個のイベントから成り、時刻 ti にイベント i  を攻略しなければいけません。ただし、そのときにあなたの強さは si 以上である必要があり、si 以上にできない場合はゲームオーバーになります。ゲーム開始時（時刻０）のあなたの強さは０ですが、アイテムを買うことで強さを増加させることができます。ゲーム開始時のあなたの所持金は０ですが、１単位時間あたり１増加します。
 
ボードにはそれぞれ１から n の番号が付けられた n 個のアイテムが順番に並べられており、アイテム i の値段は vi で、それを購入するとあなたの強さが hi 増加します。アイテムは所持金が十分であれば好きな時刻に好きな数だけ購入することができますが、残っているアイテムの中で番号が小さいものから順に選ばなければなりません。各アイテムは１度購入すると消滅します。
 
また、同じ時刻に複数のアイテムを連続で買うことができ、このとき隣り合うアイテムの hi の差分の和をボーナスとして得ることができます。例えば、ある時刻にアイテム１,２,３を同時に買った場合、h1 + h2 + h3 に加えて|h1 - h2| + |h2 - h3| だけあなたの強さが増加します。
 
あなたは、全てのイベントを攻略した後の所持金を最大化したいと考えています。
 
アイテムの情報とイベントの情報を入力とし、すべてのイベントを攻略した後の所持金の最大値を出力するプログラムを作成せよ。
 

"
p00340,Rectangle,"
  アイヅ放送協会の教育番組(ａｈｋ教育)では、子ども向けの工作番組「あそんでつくろ」を放送しています。今日は棒で長方形を作る回ですが、用意した４本の棒を使って長方形ができるかを確かめたいと思います。ただし、棒は切ったり折ったりしてはいけません。
 
４本の棒の長さが与えられるので、それらすべてを辺とする長方形が作れるかどうか判定するプログラムを作成せよ。
 


"
p00341,Cuboid Made with Bars,"
  アイヅ放送協会の教育番組(ａｈｋ教育)では、子ども向けの工作番組「あそんでつくろ」を放送しています。今回は棒で箱を作る回ですが、用意した１２本の棒を使って直方体ができるかを確かめたいと思います。ただし、棒は切ったり折ったりしてはいけません。
 
１２本の棒の長さが与えられるので、それらすべてを辺とする直方体が作れるかどうか判定するプログラムを作成せよ。
 


"
p00342,Maximization of Rational Expression,"
  n 個の異なる自然数が与えられる。その中から異なる４つを選んで、それらを $a$, $b$, $c$, $d$ としたとき、次の数式  
  の最大値を求めたい。
 
n 個の異なる自然数が与えられたとき、その中から異なる４つを選んで、上の数式の最大値を求めるプログラムを作成せよ。
   


"
p00343,Sevens,"
  トランプを使ったゲームに「７並べ」があります。ここではそれを簡単にしたゲームを考えます。１から１３の番号がそれぞれ書かれた１３枚のカードを使って７並べをします。対戦は、２者だけで次のようにゲームを進めます。
  「場」に７のカードを置きます。  ２者には、残りのカードがランダムに６枚ずつ配布されます。  先手の手持ちのカードのうち、場にあるカードの番号と連続する番号のカードがあれば、そのうちの１枚を場に置きます。プレイヤーはカードが置ける場合には必ず置かなければいけません。無いときに限り、カードを出さずに相手の番になります。  後手も同じ要領で、手持ちのカードを場に置きます。  手順３と４を繰り返して、一方の手持ちのカードがなくなるまで続けます。先に手持ちのカードをすべて場に置けた方が勝者となります。 
先手のカードの番号が与えられたとき、後手がどのようにカードを出してきても、先手が勝つ手順が少なくとも一つあるかを判定して出力するプログラムを作成せよ。
 


"
p00344,Cyclic Sugoroku,"
  ユキさんは、子供会の催しでみんなで遊べるようにすごろくを作りました。このすごろくでは、環状にマスが並んでいて、それぞれのマスには１以上の整数が書いてあります。
 
  プレイヤーは出発点としてどこかのマスを選んで自分の駒を置きます。そのマスに書いてある数だけ、時計回りに駒を進めます。止まったマスに書いてある数だけ、再び時計回りに駒を進めます。これを繰り返して、出発点に選んだマスの上で駒が止まったら「あがり」です。
 
  実際には、マスの選び方によっては絶対に「あがり」にならない場合もあります。ユキさんは、このすごろくで「あがり」にたどり着けるマスの個数を数えようとしています。
 
すごろくの情報を入力とし、「あがり」にたどり着けるマスの個数を報告するプログラムを作成せよ。
 


"
p00345,Irreducible Fractionalization,"
  実数のうち、小数部が循環するものと有限桁のものは分数として表すことができます。
 
分数で表すことができる実数が与えられたとき、その実数と等しい既約分数（それ以上約分できない分数）を出力するプログラムを作成せよ。
 


"
p00346,Quiet Town,"
  アイヅ国では、毎年、駅伝大会が開催されています。アイヅ国には n 個の町が点在しており、それぞれ 1 から n までの番号が付いています。いくつかの町の間は、互いに直接行き来できる道でつながっています。また、どの町の間もいくつかの道を辿って行き来ができます。大会のコースは、次のようにして決めます。
  ２つの町のすべての組み合わせについて、最短経路の距離を求める。  それらの中で、最短経路の距離が最大になるような２つの町を、スタートの町とゴールの町とする。町の組み合わせが複数ある場合、そのうちのどれか一つを選ぶ。  選ばれたスタートの町とゴールの町の間の最短経路を大会のコースとする。最短経路が複数ある場合、そのうちのどれか一つを選ぶ。 
ヤマト国から来たお坊さんのトクイツは、アイヅ国のできるだけ静かな町に新しいお寺を開きたいと考えています。そのため、駅伝大会のコースに使われる可能性がない町を知りたがっています。
 
アイヅ国の町を結ぶ道の情報が与えられたとき、駅伝大会のコースに使われる可能性がない町を求めるプログラムを作成せよ。
 


"
p00347,Forecast of Forces,"
信夫くんと静夫くんは長方形の島で領地を取り合うゲームをしています。下の図&#9312;のように、島全体は格子状に区切られた正方形の区画でできており、区画にはそこから生じる損得が整数で示されています。
 
  このゲームでは１つの駒を動かして領地の境界線を決めていきます。ゲーム開始時、駒は島の北西端にあります（図&#9312;）。この駒を島の南東端まで動かしていったときの駒の軌跡が領地の境界線となります。二人のプレーヤーは交互に駒を動かします。駒は南隣の格子点か東隣の格子点にのみ動かすことができます（図&#9313;）。駒が島の端に到達した場合は、南か東のうち動かせる方向に動かします。駒が南東端に到達したらゲーム終了です。
 
ゲーム終了後の境界線から北東側の領域が先攻プレーヤーの領域、南西側の領域が後攻プレーヤーの領
域です（図&#9314;）。各プレーヤーの領域内に含まれる、区画から生じる損得の合計がそのプレーヤーのス
コアとなります。二人ともゲームにはかなり慣れており、最終的に自分のスコアから相手のスコアをひ
いた値が一番大きくなるように正確に駒を動かします。
 
島の大きさとそれぞれの区画から生じる損得が与えられたとき、ゲーム終了時の結果を計算するプログラムを作成せよ。結果は、信夫くんと静夫くんのスコアの差の絶対値とする。
 

"
p00348,Sort,"
  高校入学後、プログラミング部に入部したタケ子さんは、次第にアルゴリズムの面白さにのめりこんでいきました。いまでは、２年生になったらプログラミング甲子園に出場してみたいと考えています。
 
  あるとき、ソート・アルゴリズムについて学んだタケ子さんは、ソート・アルゴリズムを自分で設計してみました。タケ子さんが作ったソート・アルゴリズムでは、入力として要素の間に重複のない、１個以上の自然数からなる列が与えられたとき、以下の処理を実行します。
  はじめに、列の先頭の要素を選ぶ。  選んだ要素の直前に要素があるとき、選んだ要素とその直前の要素を比べる。直前の要素のほうが大きいなら、それを列の末尾の直後に移動させる(図）。この操作を、選んだ要素が列の先頭になるか、選んだ要素よりその直前の要素の方が小さくなるまで続ける。  選んだ要素が列の末尾なら終了。そうでなければ、選んだ要素の直後の要素を新たに選び、2 へ戻る。 
  タケ子さんはこのアルゴリズムがどのくらいの計算時間を必要とするか見積もるために、要素を列の末尾の直後に移動させる操作の回数を数えることにしました。
 
列の情報を入力とし、要素を列の末尾の直後に移動させる操作の回数を報告するプログラムを作成せよ。
 


"
p00349,Ant,"
  大きなチェス盤上に、それぞれ１から n までの番号が割り振られた n 匹の蟻がいます。図のように、チェス盤は h×w のマスからなる長方形で、北西角を白として、白マスと黒マスが交互に並んでいます。
 
  最初、どの蟻もチェス盤のマスの中にいて、東または南を向いています。１つのマスの中に２匹以上の蟻がいることはありません。
 
  今、蟻たちが一斉に動き出します。すべての蟻は 1 単位時間に向いている方向のマスに１つ移動します。ただし、移動先がチェス盤の外の場合、落下してチェス盤から姿を消します。
 
  チェス盤上で２匹の蟻が同じマスに入ると、それらの蟻は以下のような行動をとります：
  そのマスの色が白ならば、東方向に進んでいた蟻は南方向へ、南方向に進んでいた蟻は東方向へ向きを変える。  そのマスの色が黒ならば、それぞれの蟻は進む方向を維持する。 
  チェス盤の大きさと蟻の情報が与えられたとき、落下する順番に蟻の番号を報告するプログラムを作成せよ。ただし、同じ時刻に複数の蟻が落下する場合は、番号がより小さい方を先に報告する。
   
  

"
p00350,String Game,"
  あなたは、双子のアイ君とヅー君に文字列を使ったゲームのプログラムをプレゼントしました。このゲームでは、アイ君とヅー君が文字列の中から部分文字列をそれぞれ選び、それらを比較して小さい方を選んだ人に得点が加算されます。二人は競い合い、何度もゲームを行いました。ところが、同じ文字列に対して何度もゲームをしているうちに飽きてしまいました。そこであなたは、文字列が変化するようにプログラムを修正することにしました。
 
  長さ n の文字列 u と q 個の命令文が与えられたとき、以下の命令を処理するプログラムを作成せよ。
  文字列 u の指定された範囲にあるすべての文字を、指定された文字に置き換える。  文字列 u の指定された２つの部分文字列 s, t を辞書順で比較して、それらの大小関係を出力する。 


"
p00351,Evening,"
  aizu 国の夕暮れ時は、スマートフォンを西の空へ構えて立ち止まる観光客で賑わう。aizu 国は無数のビルが建ち並ぶ大都市であり、ビルの谷間が長く連なる西の空には、ビルのシルエットとそれらから漏れ出す太陽の光による絶景が広がる。
 
  aizu 観光協会の若松氏によると、太陽を表す円が、その面積のちょうど半分だけ遮られているとき、格段の絶景になるという。
 
図のように、西の空を、地平線を x 軸、太陽の中心の軌跡を y 軸とするような x-y 平面で表し、太陽を半径 r の円、それぞれのビルのシルエットを長方形とする。
 
各ビルのシルエットの底辺は x 軸上にあり、太陽は十分高い位置から地平線に対して垂直に沈んでいく。太陽はビルのシルエットあるいは地平線を上端とする地面に遮られ、やがて地平線の下へ消えてゆく。
   
太陽の半径と各ビルのシルエットの情報が与えられたとき、太陽の面積のちょうど半分が遮られるような、最も高い太陽の高さ（中心の y座標）を求めるプログラムを作成せよ。
 


"
p00352,Handsel,"
alice and brown are brothers in a family and each receives pocket money in celebration of the coming year. they are very close and share the total amount of the money fifty-fifty. the pocket money each receives is a multiple of 1,000 yen. 
 
  write a program to calculate each one’s share given the amount of money alice and brown received.
 

"
p00353,Shopping,"
you are now in a bookshop with your friend alice to buy a book, ""the winning strategy for the programming koshien contest,” just released today. as you definitely want to buy it, you are planning to borrow some money from alice in case the amount you have falls short of the price. if the amount you receive from alice still fails to meet the price, you have to abandon buying the book this time.
 
  write a program to calculate the minimum amount of money you need to borrow from alice given the following three items of data: the money you and alice have now and the price of the book.
 


"
p00354,Day of Week,"-->
"
p00355,Reservation System,"
the supercomputer system l in the pck research institute performs a variety of calculations upon request from external institutes, companies, universities and other entities. to use the l system, you have to reserve operation time by specifying the start and end time. no two reservation periods are allowed to overlap each other.
 
  write a program to report if a new reservation overlaps with any of the existing reservations. note that the coincidence of start and end times is not considered to constitute an overlap. all the temporal data is given as the elapsed time from the moment at which the l system starts operation.
 

"
p00356,Wire,"
i am a craftsman specialized in interior works. a customer asked me to perform wiring work on a wall whose entire rectangular surface is tightly pasted with pieces of panels. the panels are all of the same size (2 m in width, 1 m in height) and the wall is filled with an x (horizontal) by y (vertical) array of the panels. the customer asked me to stretch a wire from the left top corner of the wall to the right bottom corner whereby the wire is tied up at the crossing points with the panel boundaries (edges and vertexes) as shown in the figure. there are nine tied-up points in the illustrative figure shown below.
 
  write a program to provide the number of points where the wire intersects with the panel boundaries.
assume that the wire and boundary lines have no thickness.
 


"
p00357,Trampoline,"
  a plurality of trampolines are arranged in a line at 10 m intervals. each trampoline has its own maximum horizontal distance within which the jumper can jump safely. starting from the left-most trampoline, the jumper jumps to another trampoline within the allowed jumping range. the jumper wants to repeat jumping until he/she reaches the right-most trampoline, and then tries to return to the left-most trampoline only through jumping. can the jumper complete the roundtrip without a single stepping-down from a trampoline?
 
  write a program to report if the jumper can complete the journey using the list of maximum horizontal reaches of these trampolines. assume that the trampolines are points without spatial extent.
 

"
p00358,Loading,"-->
"
p00359,Dungeon,"
bob is playing a popular game called ""dungeon"". the game is played on a rectangular board consisting of w &times;  h squares. each square is identified with its column and row number, thus the square located in the x-th column and the y-th row is represented as (x, y). the left-most square in the top row is (0, 0) and the right-most square in the bottom row is (w-1, h-1).
 
  bob moves a character ""bombom"" to clear the game. bombom is initially located at (0, 0). the game is won if bob successfully destroys all the enemy characters on the board by manipulating bombom cleverly. the enemy characters are fixed on specific squares, and bob can manipulate bombom using the following two operations any number of times.
  one-square movement in the up, down, left, or right direction within the board  using a bomb, eliminate all the enemy characters that are located in the same column and row as that of bombom 
bombom consumes a cost when it moves from one square to another. bombom can use a bomb any number of times without consuming a cost. use of a bomb has no effect on bombom’s behavior and it can move even to a square where an enemy character is located.
 
given the board size and enemy information, make a program to evaluate the minimum cost bombom consumes before it destroys all enemy characters.
 

"
p00360,Swapping Characters,"
  you are given a string and a number k. you are suggested to generate new strings by swapping any adjacent pair of characters in the string up to k times. write a program to report the lexicographically smallest string among them.
  
 

"
p00361,Road Improvement,"-->
"
p00362,Charging System for Network,"-->
"
p00363,Flag,"-->
"
p00364,Bange Hills Tower,"
a project is underway to build a new viewing tower in bange town called “bange hills tower” whose selling point will be the gorgeous view of the entire main keep of wakamatsu castle from top to bottom. therefore, the view line from the top of the tower must reach the bottom of the keep without being hindered by any of the buildings in the town.
 
write a program to calculate the minimum tower height required to view the keep in its entirety based on the following information: the planned location of the tower and the heights and locations of existing buildings. assume all the buildings, including the keep, are vertical lines without horizontal stretch. “view of the entire keep” means that the view line from the tower top can cover the keep from the bottom to the top without intersecting (contacts at the top are exempted) any of the other vertical lines (i.e., buildings).
 


"
p00365,Age Difference,"
a trick of fate caused hatsumi and taku to come to know each other. to keep the encounter in memory, they decided to calculate the difference between their ages. but the difference in ages varies depending on the day it is calculated. while trying again and again, they came to notice that the difference of their ages will hit a maximum value even though the months move on forever.
 
  given the birthdays for the two, make a program to report the maximum difference between their ages. the age increases by one at the moment the birthday begins. if the birthday coincides with the 29th of february in a leap year, the age increases at the moment the 1st of march arrives in non-leap years.
 

"
p00366,Electronic Metronome,"
  a boy pck is playing with n electric metronomes. the i-th metronome is set to tick every t_i seconds. he started all of them simultaneously.
 
he noticed that, even though each metronome has its own ticking interval, all of them tick simultaneously from time to time in certain intervals. to explore this interesting phenomenon more fully, he is now trying to shorten the interval of ticking in unison by adjusting some of the metronomes’ interval settings. note, however, that the metronomes do not allow any shortening of the intervals.
  
 
  given the number of metronomes and their preset intervals t_i (sec), write a program to make the tick-in-unison interval shortest by adding a non-negative integer d_i to the current interval setting of the i-th metronome, and report the minimum value of the sum of all d_i.
 

"
p00367,Three Meals,"-->
"
p00368,Checkered Pattern,"
you have a cross-section paper with w x h squares, and each of them is painted either in white or black. you want to re-arrange the squares into a neat checkered pattern, in which black and white squares are arranged alternately both in horizontal and vertical directions (the figure shown below is a checkered patter with w = 5 and h = 5). to achieve this goal, you can perform the following two operations as many times you like in an arbitrary sequence: swapping of two arbitrarily chosen columns, and swapping of two arbitrarily chosen rows.
 
  create a program to determine, starting from the given cross-section paper, if you can re-arrange them into a checkered pattern.
 

"
p00369,Paper Fortune,"
if you visit aizu akabeko shrine, you will find a unique paper fortune on which a number with more than one digit is written. 
 
each digit ranges from 1 to 9 (zero is avoided because it is considered a bad omen in this shrine). using this string of numeric values, you can predict how many years it will take before your dream comes true. cut up the string into more than one segment and compare their values. the difference between the largest and smallest value will give you the number of years before your wish will be fulfilled. therefore, the result varies depending on the way you cut up the string. for example, if you are given a string 11121314 and divide it into segments, say, as 1,11,21,3,14, then the difference between the largest and smallest is 21 - 1 = 20. another division 11,12,13,14 produces 3 (i.e. 14 - 11) years. any random division produces a game of luck. however, you can search the minimum number of years using a program.
  
 
given a string of numerical characters, write a program to search the minimum years before your wish will be fulfilled.
  
 

"
p00370,Lake Survey,"
  the onogawa expedition is planning to conduct a survey of the aizu nature reserve. the expedition planner wants to take the shortest possible route from the start to end point of the survey, while the expedition has to go around the coast of the lake of onogawa en route. the expedition walks along the coast of the lake, but can not wade across the lake.
 
  based on the base information including the start and end point of the survey and the area of lake onogawa as convex polygon data, make a program to find the shortest possible route for the expedition and calculate its distance. note that the expedition can move along the polygonal lines passing through the nodes, but never enter within the area enclosed by the polygon.
 


"
p00371,Lottery Box,"
a lottery is being held in a corner of the venue of the aizu festival. several types of balls are inside the lottery box and each type has its unique integer printed on the surfaces of the balls. an integer t is printed on the lottery box.
 
in the lottery, you first declare two integers a and b, and draw up to m balls from the box. let the sum of the integers printed on the balls be s. you can get a wonderful gift if the following two criteria are met: s divided by t gives a remainder greater than or equal to a, and s divided by t gives a quotient (fractional portion dropped) greater than or equal to b.
 
  write a program to determine if you have any chance of getting the gift given the following information: the number of ball types, ball-type specific integers, the maximum number of balls to be drawn from the box, the integer printed on the lottery box, and two integers declared before drawing. assume that each ball type has sufficient (&ge;m) population in the box. note also that there may be a chance of getting the gift even without drawing any ball.
 

  

"
p00372,Party,"
  the students in a class in akabe high-school define the relation “acquaintance” as: 
 if a and b are friends, then a is acquainted with b. if a and b are friends and b is acquainted with c, then a is acquainted with c. 
  they define the relation “companion” as:
 
    suppose a is acquainted with b, and two classmates who have been friend distance. if a is still acquainted with b, then a and b are companions.
   
a boy pck joined the class recently and wishes to hold a party inviting his class fellows. he wishes to invite as many boys and girls as possible to the party and has written up an invitation list. in arranging the list, he placed the following conditions based on the acquaintanceship within the class before he joined.
 
  when t is in the list:
 u is listed if he/she is a companion of t. if u is not a companion of t, u is not listed if he/she and t are friends, or he/she and some of t’s companions are friends. 
  pck made the invitation list so that the maximum number of his classmates is included.
 
  given the number of classmates n and the friendships among them, write a program to estimate the number of boys and girls in the list. all the classmates are identified by an index that ranges from 0 to n-1.
 


"
p00373,Aerial Photo,"
hideyo has come by two aerial photos of the same scale and orientation. you can see various types of buildings, but some areas are hidden by clouds. apparently, they are of the same area, and the area covered by the second photograph falls entirely within the first. however, because they were taken at different time points, different shapes and distribution of clouds obscure identification where the area in the second photograph is located in the first. there may even be more than one area within the first that the second fits equally well.
 
  a set of pixel information is given for each of the photographs. write a program to extract candidate sub-areas within the first photograph that compare with the second equally well and output the number of the candidates.
 

"
p00374,Iron Bars,"
a boy pck had n straight iron bars, which were serially indexed. unfortunately, the first m bars (0 &le; m &le; n) among them were bent during transportation. they all suffered a perpendicular bend at one point.
 
  he is planning to make a cube using a set of bars selected using the following rules: x bars from bent ones, y bars from straight ones, where 2x + y = 12. any two bars can be jointed only at the apexes of the cube. he wants to count how many types of rectangular parallelepipeds (hereafter rp) he can make using these bars.
 
make a program to count out types (different shapes) of rps that pck can make using the following information: the number of bars and length of each one, position of the bend, and the number of bars to be used to construct an rp. note that any two rps similar in shape are considered identical: namely if the length of three defining sides of two rps coincide if arranged in increasing/decreasing order (e.g., three sides of rp i and j are a_i, b_i, c_i, and a_j, b_j and c_j in increasing order, then the relations a_i = a_j, b_i = b_j, and c_i = c_j hold. note also that the bars are sufficiently thin to allow you to consider them as idealized lines.
  
 


"
p00375,Celsius and Fahrenheit,"
  in japan, temperature is usually expressed using the celsius (&#x2103) scale. in america, they used the fahrenheit (&#x2109) scale instead. $20$ degrees celsius is roughly equal to $68$ degrees fahrenheit. a phrase such as ""today’s temperature is $68$ degrees"" is commonly encountered while you are in america.
 
a value in fahrenheit can be converted to celsius by first subtracting $32$ and then multiplying by $\frac{5}{9}$. a simplified method may be used to produce a rough estimate: first subtract $30$ and then divide by $2$. using the latter method, $68$ fahrenheit is converted to $19$ centigrade, i.e., $\frac{(68-30)}{2}$.
 
  make a program to convert fahrenheit to celsius using the simplified method: $c = \frac{f - 30}{2}$.
 

"
p00376,Red Dragonfly,"
  it’s still hot every day, but september has already come. it’s autumn according to the calendar. looking around, i see two red dragonflies at rest on the wall in front of me. it’s autumn indeed.
 
  when two red dragonflies’ positional information as measured from the end of the wall is given, make a program to calculate the distance between their heads.
 

"
p00377,Cake Party,"　
  i’m planning to have a party on my birthday. many of my friends will come to the party. some of them will come with one or more pieces of cakes, but it is not certain if the number of the cakes is a multiple of the number of people coming.
   
  i wish to enjoy the cakes equally among the partiers. so, i decided to apply the following rules. first, all the party attendants are given the same number of cakes. if some remainder occurs, a piece goes on a priority basis to the party host (that’s me!). how many pieces of cake can i enjoy?
 

  given the number of my friends and cake information, make a program to calculate how many pieces of cake i can enjoy. note that i am not counted in the number of my friends.
 

"
p00378,Heat Strokes,"　
we have had record hot temperatures this summer. to avoid heat stroke, you decided to buy a quantity of drinking water at the nearby supermarket. two types of bottled water, 1 and 0.5 liter, are on sale at respective prices there. you have a definite quantity in your mind, but are willing to buy a quantity larger than that if: no combination of these bottles meets the quantity, or, the total price becomes lower.
 
  given the prices for each bottle of water and the total quantity needed, make a program to seek the lowest price to buy greater than or equal to the quantity required.
 

"
p00379,Dudeney Number,"
  a dudeney number is a positive integer for which the sum of its decimal digits is equal to the cube root of the number. for example, $512$ is a dudeney number because it is the cube of $8$, which is the sum of its decimal digits ($5 + 1 + 2$).
 
  in this problem, we think of a type similar to dudeney numbers and try to enumerate them.
 
  given a non-negative integer $a$, an integer $n$ greater than or equal to 2 and an upper limit $m$, make a program to enumerate all $x$’s such that the sum of its decimal digits $y$ satisfies the relation $x = (y + a)^n$, and $x \leq m$.
 

"
p00380,Bozo Sort,"
  bozosort, as well as bogosort, is a very inefficient sort algorithm. it is a random number-based algorithm that sorts sequence elements following the steps as below:
  randomly select two elements and swap them.  verify if all the elements are sorted in increasing order.  finish if sorted, else return to 1. 
  to analyze bozosort, you have decided to simulate the process using several predetermined pairs of elements.
 
  you are given several commands to swap two elements. make a program to evaluate how many times you have to run the command before the sequence is aligned in increasing order.
 


"
p00381,Transporter,"
  in the year 30xx, an expedition team reached a planet and found a warp machine suggesting the existence of a mysterious supercivilization. when you go through one of its entrance gates, you can instantaneously move to the exit irrespective of how far away it is. you can move even to the end of the universe at will with this technology!
 
  the scientist team started examining the machine and successfully identified all the planets on which the entrances to the machine were located. each of these n planets (identified by an index from $1$ to $n$) has an entrance to, and an exit from the warp machine. each of the entrances and exits has a letter inscribed on it.
 
  the mechanism of spatial mobility through the warp machine is as follows:
 if you go into an entrance gate labeled with c, then you can exit from any gate with label c. if you go into an entrance located on the $i$-th planet, then you can exit from any gate located on the $j$-th planet where $i < j$. 
  once you have reached an exit of the warp machine on a planet, you can continue your journey by entering into the warp machine on the same planet. in this way, you can reach a faraway planet. our human race has decided to dispatch an expedition to the star $n$, starting from star $1$ and using the warp machine until it reaches star $n$. to evaluate the possibility of successfully reaching the destination. it is highly desirable for us to know how many different routes are available for the expedition team to track.
 
  given information regarding the stars, make a program to enumerate the passages from star $1$ to star $n$.
 

"
p00382,Taxi,"
pck taxi in aizu city, owned by pck company, has adopted a unique billing system: the user can decide the taxi fare. today as usual, many people are waiting in a queue at the taxi stand in front of the station.
 
  in front of the station, there are $n$ parking spaces in row for pck taxis, each with an index running from $1$ to $n$. each of the parking areas is occupied by a taxi, and a queue of potential passengers is waiting for the ride. each one in the queue has his/her own plan for how much to pay for the ride.
 
  to increase the company’s gain, the taxi driver is given the right to select the passenger who offers the highest taxi fare, rejecting others.
 
  the driver in the $i$-th parking space can perform the following actions any number of times in any sequence before he finally selects a passenger and starts driving.
 offer a ride to the passenger who is at the head of the $i$-th parking space’s queue. reject to offer a ride to the passenger who is at the head of the $i$-th parking space’s queue. the passenger is removed from the queue. move to the $i + 1$-th parking area if it is empty. if he is in the $n$-th parking area, he leaves the taxi stand to cruise the open road. 
  a preliminary listening is made as to the fare the users offer. your task is to maximize the sales volume of pck taxi in reference to the table of offered fares. a taxi cannot accommodate more than one passenger.
 
  given the number of taxi parking spaces and information regarding the persons waiting in the parking areas, calculate the maximum possible volume of sales.
 

"
p00383,Points on a Straight Line,"
  the university of a stages a programming contest this year as has been the case in the past. as a member of the team in charge of devising the problems, you have worked out a set of input data for a problem, which is an arrangement of points on a 2d plane in the coordinate system. the problem requires that any combination of these points greater than or equal to $k$ in number must not align on a line. you want to confirm that your data satisfies this requirement.
 
  given the number of points $k$ and their respective 2d coordinates, make a program to check if any combination of points greater or equal to $k$ align on a line.
 

"
p00384,Dungeon 2,"
  bob is playing a game called ""dungeon 2"" which is the sequel to the popular ""dungeon"" released last year. the game is played on a map consisting of $n$ rooms and $n-1$ roads connecting them. the roads allow bidirectional traffic and the player can start his tour from any room and reach any other room by way of multiple of roads. a point is printed in each of the rooms.
 
  bob tries to accumulate the highest score by visiting the rooms by cleverly routing his character ""tora-tora."" he can add the point printed in a room to his score only when he reaches the room for the first time. he can also add the points on the starting and ending rooms of tora-tora’s journey. the score is reduced by one each time tora-tore passes a road. tora-tora can start from any room and end his journey in any room.
 
  given the map information, make a program to work out the maximum possible score bob can gain.
 

"
p00385,Disk,"
a mysterious device was discovered in an ancient ruin. the device consists of a disc with integers inscribed on both sides, a bundle of cards with an integer written on each of them and a pedestal within which the cards are placed. the disc rotates when the bundle of cards is put into the pedestal. only one side of the disc is exposed to view at any one time.
  
 
  the disc is radially segmented in equal angles into $k$ sections, and an integer, from $1$ to $k$ in increasing order, is inscribed clockwise on each section on the front side. the sections on the back side share the same boundaries with the front side, and a negative counterpart of that in the section on the front side is inscribed, i.e., if $x$ is inscribed in the front side section, $-x$ is inscribed on the counterpart section on the back side. there is a needle on the periphery of the disc, and it always points to the middle point of the arc that belongs to a section. hereafter, we say ""the disc is set to $x$"" if the front side section just below the needle contains an integer $x$.
 
  investigation of the behavior of the device revealed the following:
 
when the bundle of cards is placed in the pedestal, the device sets the disc to 1.
then, the device reads the cards slice by slice from top downward and performs one of the following actions according to the integer $a$ on the card
 if $a$ is a positive number, it rotates the disc clockwise by $|a|$ sections. if $a$ is zero, it turns the disc back around the vertical line defined by the needle and the center of the disc. if $a$ is a negative number, it rotates the disc counterclockwise by $|a|$ sections. 
  it is provided that $|a|$ is the absolute value of $a$. the final state of the device (i.e., to what section the needle is pointing) varies depending on the initial stacking sequence of the cards. to further investigate the behavior of the device, we swapped two arbitrary cards in the stack and placed the bundle in the pedestal to check what number the disc is set to. we performed this procedure over again and again.
   
  given the information on the device and several commands to swap two cards, make a program to determine the number to which the device is set at the completion of all actions. note that the stacking sequence of the cards continues to change as a new trial is made.
 

"
p00386,Gathering,"
  you are a teacher at iazu high school is the zuia kingdom. there are $n$ cities and $n-1$ roads connecting them that allow you to move from one city to another by way of more than one road. each of the roads allows bidirectional traffic and has a known length.
   
as a part of class activities, you are planning the following action assignment for your students. first, you come up with several themes commonly applicable to three different cities. second, you assign each of the themes to a group of three students. then, each student of a group is assigned to one of the three cities and conducts a survey on it. finally, all students of the group get together in one of the $n$ cities and compile their results.
  
 
  after a theme group has completed its survey, the three members move from the city on which they studied to the city for getting together. the longest distance they have to travel for getting together is defined as the cost of the theme. you want to select the meeting city so that the cost for each theme becomes minimum.
 
  given the number of cities, road information and $q$ sets of three cities for each theme, make a program to work out the minimum cost for each theme.
 

"
p00387,Party Dress,"
yae joins a journey plan, in which parties will be held several times during the itinerary. she wants to participate in all of them and will carry several dresses with her. but the number of dresses she can carry with her may be smaller than that of the party opportunities. in that case, she has to wear some of her dresses more than once.  
 
  fashion-conscious yae wants to avoid that. at least, she wants to reduce the maximum number of times she has to wear the same dress as far as possible.
 
  given the number of dresses and frequency of parties, make a program to determine how she can reduce the maximum frequency of wearing the most reused dress.
 

"
p00388,Design of a Mansion,"
  our master carpenter is designing a condominium called bange hills mansion. the condominium is constructed by stacking up floors of the same height. the height of each floor is designed so that the total height of the stacked floors coincides with the predetermined height of the condominium. the height of each floor can be adjusted freely with a certain range.
 
  the final outcome of the building depends on clever height allotment for each floor. so, he plans to calculate possible combinations of per-floor heights to check how many options he has.
 
  given the height of the condominium and the adjustable range of each floor’s height, make a program to enumerate the number of choices for a floor.
 

"
p00389,Pilling Blocks,"
  we make a tower by stacking up blocks. the tower consists of several stages and each stage is constructed by connecting blocks horizontally. each block is of the same weight and is tough enough to withstand the weight equivalent to up to $k$ blocks without crushing.
 
  we have to build the tower abiding by the following conditions:
 every stage of the tower has one or more blocks on it. each block is loaded with weight that falls within the withstanding range of the block. the weight loaded on a block in a stage is evaluated by: total weight of all blocks above the stage divided by the number of blocks within the stage. 
  given the number of blocks and the strength, make a program to evaluate the maximum height (i.e., stages) of the tower than can be constructed.
 


"
p00390,A Round Table for Sages,"
  $n$ sages are sitting around a round table with $n$ seats. each sage holds chopsticks with his dominant hand to eat his dinner. the following happens in this situation.
 if sage $i$ is right-handed and a left-handed sage sits on his right, a level of frustration $w_i$ occurs to him. a right-handed sage on his right does not cause such frustration at all. if sage $i$ is left-handed and a right-handed sage sits on his left, a level of frustration $w_i$ occurs to him. a left-handed sage on his left does not cause such frustration at all. 
  you wish you could minimize the total amount of frustration by clever sitting order arrangement.
 
  given the number of sages with his dominant hand information, make a program to evaluate the minimum frustration achievable.
 

"
p00391,Treasure Map,"
  mr. kobou found a bundle of old paper when he was cleaning his family home. on each paper, two series of numbers are written. strange as it appeared to him, mr. kobou further went through the storehouse and found out a note his ancestor left. according to it, the bundle of paper is a treasure map, in which the two sequences of numbers seem to give a clue to the whereabouts of the treasure the ancestor buried.
 
  mr. kobou’s ancestor divided the area where he buried his treasure in a reticular pattern and used only some of the grid sections. the two series of numbers indicate the locations: the $i$-th member of the first series indicates the number of locations in the $i$-th column (form left) of the grid sections where a part of the treasure is buried, and the $j$-th member of the second indicates the same information regarding the $j$-th row from the top. no more than one piece of treasure is buried in one grid section. an example of a 5 &times; 4 case is shown below. if the pieces of treasure are buried in the grid sections noted as ""#"" the two series of numbers become ""0,2,2,1,1"" and ""1,1,1,3"".
 
mr. kobou’s ancestor seems to be a very careful person. he slipped some pieces of paper with completely irrelevant information into the bundle. for example, a set of number series ""3,2,3,0,0"" and ""4,2,0,0,2"" does not match any combination of 5 &times; 5 matrixes. so, mr. kobou has first to exclude these pieces of garbage information.
 
  given the set of information written on the pieces of paper, make a program to judge if the information is relevant.
 

"
p00392,Prime Sort,"
you are now examining a unique method to sort a sequence of numbers in increasing order. the method only allows swapping of two numbers that have a common prime factor. for example, a sequence [6, 4, 2, 3, 7] can be sorted using the following steps.


step 0: 6 4 2 3 7 (given sequence)
step 1: 2 4 6 3 7 (elements 6 and 2 swapped)
step 2: 2 6 4 3 7 (elements 4 and 6 swapped)
step 3: 2 3 4 6 7 (elements 6 and 3 swapped)
 
  depending on the nature of the sequence, however, this approach may fail to complete the sorting. you have given a name ""coprime sort"" to this approach and are now examining if a given sequence is coprime-sortable.
 
  make a program to determine if a given sequence can be sorted in increasing order by iterating an arbitrary number of swapping operations of two elements that have a common prime number.
 


"
p00393,Beautiful Sequence,"
alice is spending his time on an independent study to apply to the nationwide mathematics contest. this year’s theme is ""beautiful sequence."" as alice is interested in the working of computers, she wants to create a beautiful sequence using only 0 and 1. she defines a ""beautiful"" sequence of length $n$ that consists only of 0 and 1 if it includes $m$ successive array of 1s as its sub-sequence.
  
 
  using his skills in programming, alice decided to calculate how many ""beautiful sequences"" she can generate and compile a report on it.
 
  make a program to evaluate the possible number of ""beautiful sequences"" given the sequence length $n$ and sub-sequence length $m$ that consists solely of 1. as the answer can be extremely large, divide it by $1,000,000,007 (= 10^9 + 7)$ and output the remainder.
   

"
p00394,Payroll,"-->
"
p00395,Maze and Items,"
maze &amp; items is a puzzle game in which the player tries to reach the goal while collecting items. the maze consists of $w \times h$ grids, and some of them are inaccessible to the player depending on the items he/she has now. the score the player earns is defined according to the order of collecting items. the objective of the game is, after starting from a defined point, to collect all the items using the least number of moves before reaching the goal. there may be multiple routes that allow the least number of moves. in that case, the player seeks to maximize his/her score.
 
one of the following symbols is assigned to each of the grids. you can move to one of the neighboring grids (horizontally or vertically, but not diagonally) in one time, but you cannot move to the area outside the maze.
 
the player fails to complete the game if he/she has not collected all the items before reaching the goal. when entering a grid in which an item is located, it’s the player’s option to collect it or not. the player must keep the item once he/she collects it, and it disappears from the maze.
 
given the state information of the maze and a table that defines the collecting order dependent scores, make a program that works out the minimum number of moves required to collect all the items before reaching the goal, and the maximum score gained through performing the moves.
 

"
p00396,Playing With Stones,"
  koshiro and ukiko are playing a game with black and white stones. the rules of the game are as follows:
 
before starting the game, they define some small areas and place ""one or more black stones and one or more white stones"" in each of the areas.
   
koshiro and ukiko alternately select an area and perform one of the following operations.
    
(a) remove a white stone from the area
(b) remove one or more black stones from the area. note, however, that the number of the black stones must be less than or equal to white ones in the area.
(c) pick up a white stone from the stone pod and replace it with a black stone. there are plenty of white stones in the pod so that there will be no shortage during the game.

 if either koshiro or ukiko cannot perform 2 anymore, he/she loses. 
  they played the game several times, with koshiro’s first move and ukiko’s second move, and felt the winner was determined at the onset of the game. so, they tried to calculate the winner assuming both players take optimum actions.
 
  given the initial allocation of black and white stones in each area, make a program to determine which will win assuming both players take optimum actions.
 

"
p00397,Kth XOR,"
exclusive or (xor) is an operation on two binary numbers $x$ and $y$ (0 or 1) that produces 0 if $x = y$ and $1$ if $x \ne y$. this operation is represented by the symbol $\oplus$. from the definition: $0 \oplus 0 = 0$, $0 \oplus 1 = 1$, $1 \oplus 0 = 1$, $1 \oplus 1 = 0$.
 
exclusive or on two non-negative integers comprises the following procedures: binary representation of the two integers are xored on bit by bit bases, and the resultant bit array constitute a new integer. this operation is also represented by the same symbol $\oplus$. for example, xor of decimal numbers $3$ and $5$ is equivalent to binary operation $011 \oplus 101$ which results in $110$, or $6$ in decimal format.
 
  bitwise xor operation on a sequence $z$ consisting of $m$ non-negative integers $z_1, z_2, . . . , z_m$ is defined as follows:
   $v_0 = 0, v_i = v_{i - 1} \oplus z_i$ ($1 \leq i \leq m$) bitwise xor on series $z$ is defined as $v_m$. 
you have a sequence $a$ consisting of $n$ non-negative integers, ample sheets of papers and an empty box. you performed each of the following operations once on every combinations of integers ($l, r$), where $1 \leq l \leq r \leq n$.
 perform the bitwise xor operation on the sub-sequence (from $l$-th to $r$-th elements) and name the result as $b$. select a sheet of paper and write $b$ on it, then put it in the box. 
  assume that ample sheets of paper are available to complete the trials. you select a positive integer $k$ and line up the sheets of paper inside the box in decreasing order of the number written on them. what you want to know is the number written on the $k$-th sheet of paper.
   
  you are given a series and perform all the operations described above. then, you line up the sheets of paper in decreasing order of the numbers written on them. make a program to determine the $k$-th number in the series.
 

"
p00398,Road Construction,"
the zuia kingdom has finally emerged through annexation of $n$ cities, which are identified by index from $1$ to $n$. you are appointed the minister of transport of the newly born kingdom to construct the inter-city road network.
 
to simplify the conceptual design planning, you opted to consider each city as a point on the map, so that the $i$-th city can be represented by an coordinate ($x_i, y_i$).
 
  the cost of road construction connecting $u$-th and $v$-th cities is equal to the distance $|x_u - x_v|$ or $|y_u - y_v|$, whichever the larger. the notation $|a|$ represents the absolute value of $a$. the object here is to explore the minimum cost required to construct the road network in such a way that people can move between different cities along one or more roads.
 
  make a program to calculate the minimum of total road construction cost from the number of cities and their coordinates.
 

"
p00399,Shiba Inu,"
イヅア公園には、夕方になると柴犬と散歩する人たちがたくさん来ます。柴犬には毛の色によって赤柴、黒柴、白柴、胡麻柴という種類があります。柴犬がたくさんいるとうれしいトモエちゃんは、それぞれの毛色の柴犬が何頭いるかがんばって数えましたが、まだ足し算ができないので柴犬が全部で何頭いるかわかりません。
 
  それぞれの毛色の柴犬の数が与えられたときに、柴犬の総数を計算するプログラムを作成せよ。
 

"
p00400,ASCII Characters,"
コンピュータの内部ではすべての情報が数値として扱われています。たとえば、アスキーコードでは、アルファベットの大文字aに数値の65が割り当てられています。同様にアルファベットの大文字bに66、cに67というように、aからzには連続してそれぞれ65から90が割り当てられています。また、アスキーコードでは、アルファベットの小文字aに97が割り当てられています。同様にアルファベットの小文字bに98、cに99というように、aからzには連続してそれぞれ97から122が割り当てられています。
 
  与えられたアスキーコードの数値が、アルファベットの大文字と小文字のどちらを表すか判定するプログラムを作成せよ。
 

"
p00401,Power of Two,"
与えられた数を、それ以下の数の中で最大の$2$の累乗に変換してください。たとえば、$2$や$3$ならば$2^1=2$に変換してください。同様に$4$,$5$,$6$,$7$ならば$2^2=4$に、$8$,$9$,$10$,$11$,...,$15$ならば$2^3=8$に変換してください。
 
  与えられた数を、その数以下の数の中で最大の$2$の累乗に変換するプログラムを作成せよ。
 


"
p00402,Meeting Place,"
イヅア村の住民は村に集会所を建てることにしました。この村では東西に一直線に伸びる道路に沿って建物を建てられる地点が決まっています。最も西の地点を０番目の地点として、そこから等間隔に東に向かって１番目、２番目、…と地点番号が与えられています。村人の家と集会所を建てることができるのは、これらの地点だけです。各家には１人以上の村人が住んでいます。どの村人も隣の地点まで１分間で移動できます。
 
  集会を開くのに便利なように、ある時刻に一斉に全ての村人が自分の家から集会所に向かったとき、全員が集まるのに必要な時間が最小になるような場所に、集会所を建てることにしました。
  
家の建っている地点の番号が与えられたときに、全ての村人が集会所に集まるのに必要な時間の最小値を計算するプログラムを作成せよ。ただし、集会所の地点番号が家の地点番号と重複してもよいものとする。
 

"
p00403,Cave for Cats,"　
あなたの家の近所には多くの猫が出入りする横穴があります。中は行き止まりで通り抜けることはできませんが、近所の猫が全部入れるくらいの奥行きがあります。穴の幅は猫がちょうど収まるくらいなので、先に入った猫を後から入った猫が押しのけて奥に向かうことはできません。また、先に入った猫が、後から入ってきた猫を押しのけて出口から出ることもできません。
 
  猫好きのあなたは横穴に出入りする猫を順番に記録していきました。記録をはじめたときは横穴の中には一匹も猫はいませんでしたが、やがて猫たちは横穴への出入りを始めました。同じ猫が何度も出入りすることもありました。
   
  記録を終えたあなたは、正しく記録できたかプログラムを書いてチェックすることにしました。
   
  横穴に出入りした猫のリストが与えられる。リストを先頭から順に見ていったとき、それより後ろを見なくても誤りと判断できる最初の位置を求めるプログラムを作成せよ。ただし、猫は100匹いて、1から100までの番号が与えられているものとする。
 


"
p00404,Floor,"
  ヒデヨ博士の家の床には正方形のタイルが敷きつめられています。芸術に造詣が深いヒデヨ博士は、赤、黄、青の塗料を使ってタイルに色を塗ることにしました。はじめに部屋の適当なタイルをひとつ選び、以下の方法で色を塗っていきます。
 タイルを塗る色を、赤（図の番号１）、黄（図の番号２）、青（図の番号３）の順に変えていき、青の次はまた赤から始める。 すでに色を塗った領域の隣に正方形を追加し、そこに色を塗る。それらを合わせた領域が長方形になるようにする。正方形を追加する方向は、東、北、西、南の順に変えていき、南の次はまた東から始める（図では、上方向が北、右方向が東である）。 
  最初に赤く塗ったタイルから東西方向に$x$個、南北方向に$y$個移動したところにあるタイルは、何色に塗られているでしょうか。ただし、東の方向を$x$の正の方向、北の方向を$y$の正の方向とします。
 
  $x$と$y$を入力し、タイルの色を出力するプログラムを作成せよ。
 

"
p00405,Akabeko 20,"
「アカベコ２０」は、イヅア地方の専用劇場で公演を開催しているグループです。アカベコ２０のそれぞれのメンバーは、ある一定の日数ごとに公演に参加することになっています。
 
今日の公演ではメンバーが全員参加していました。プロデューサーであるあなたは、メンバーから、今後の公演のメンバーの組み合わせを教えてほしい、と頼まれました。あなたは、公演に参加するメンバーの組み合わせがいくつあるのかを数えることにしました。
 
アカベコ２０のメンバー数と、それぞれのメンバーが公演に参加する周期が１日単位で与えられたとき、参加するメンバーの組み合わせが何通りあるかを数えるプログラムを作成せよ。このとき、グループは同じメンバーで永遠に存続すると仮定する。ただし、だれも参加しない場合は組み合わせに含めないこととする。
 

"
p00406,Arrows,"
  $l$個のマスが左右に一列に並んでいます。いくつかのマスの上に駒が置いてあります。駒には左向きか右向きの矢印が書いてあります。なお、一つのマスに二つ以上の駒を置くことはできません。
 
  どのマスにいる駒も、駒が置かれていないマスに動かすことができます。ただし、一度に動けるのは隣のマスまでで、一度に動かせるのは一つの駒だけです。駒は、矢印の向きにかかわらず、左にも右にも動かすことができます。ただし、駒を矢印の方向に一回動かすと点数が１点もらえますが、矢印とは逆方向に一回動かすと１点減点されてしまいます。なお、どのような状況から始めたとしても、得られる点数には必ず最大値があることがわかっています。
 
  マスの個数と駒の状況が与えられたとき、得られる最大の点数を計算するプログラムを作成せよ。ただし、マスには列の左端から順番に1から$l$までの番号が割り当てられているものとする。
 

"
p00407,Castle in the Sky,"
  天空の城ツルガはアイヅ国の上空に浮かんでいる。アイヅ国では、天空の城ツルガによって日光がさえぎられる日もある。日光が当たらない日があった場所の住人には、その日数に応じて補償金を支払っている。アイヅ国の補償金支払い担当者であるあなたは、天空の城ツルガの日ごとの位置と補償金の申請があった場所のリストから、その日にその場所で日光が当たらなかったことを確かめる必要がある。
   
  天空の城ツルガの場所とアイヅ国の地上のある場所が与えられたとき、その日にその場所が影に入っていたかどうかを判定するプログラムを作成せよ。影の中に入っていたかどうかは、ある特定の時刻で判定するので、天空の城ツルガや太陽の移動については考えなくて良い。太陽の位置は$x=y=0,z=10^6$にある大きさのない点であり、天空の城ツルガは$z=100$の平面にある凸多角形、地上の場所は$z=0$にある大きさのない点とする。また、ある地点と太陽を結ぶ直線を天空の城ツルガがさえぎるとき、その地点は影に入るものとする。
 

"
p00408,Tournament Record,"
　<p.
$n$人が参加するトーナメントを行いました。トーナメントでは一対一で対戦を行い、勝ち負けを決定します。勝った方が次の試合に進んでゆき、最終的に残った一人が優勝します。トーナメントが行われる会場はひとつしかないので、同時に行えるのは１試合のみです。
     
トーナメントが終わって優勝者が決まるまで、記録係のあなたは対戦の勝者と敗者を記録しました。あなたは対戦ごとに１枚の紙を使って正しく記録しましたが、記録した紙の順序がいくつか入れ替わった可能性があります。
 
  順序が入れ替わった可能性のある対戦の記録から、あり得る対戦の順番が何通りあるかを求めるプログラムを作成せよ。ただし、トーナメントの参加者には1から$n$までの番号が割り当てられているものとする。
 


"
p00409,Prayer for Iwashiro,"
古代国家イワシロでは、災害が起きたときにそれを鎮めるために、神官が祈りをささげます。
 
  神官は古文書から文字列sを選び、以下を繰り返すことで儀式を進めていきます。
 文字列$s$の中の場所を一つ選び、そこに書かれた文字を他の文字に入れ替えて、$s$を更新する。 $s$がどのような文字列の繰り返しで表せるかを見つけて、見つけた文字列を唱える。ただし、$s$が文字列の繰り返しで表せないときは$s$を唱える。
 
  祈りの効力が最大になるのは、最も短い文字列の繰り返しで元の文字列を表すものを唱えたときです。たとえば、ababababという文字列に対して、この文字列そのものやababではなく、abと唱えたときに祈りの効力が最大になります。
 
  新米神官のあなたは、与えられた文字列$s$から祈りの効力を最大にする文字列を素早く見つける方法を会得しなければなりません。
   
 
文字列$s$と文字の入れ替えの情報がいくつか与えられる。文字を入れ替えるたびに、得られた文字列について祈りの効力を最大にする文字列の長さを求めるプログラムを作成せよ。
 

"
p00410,Dungeon 3,"
あなたは有名な冒険家であり、すでに２つのダンジョンを制覇した。あなたはいくつかの通路と宝物庫が記された新たなダンジョンの地図を入手した。地図にはそれぞれの宝物庫にある財宝の価値が書かれている。
 
あなたは、任意の宝物庫からダンジョンに侵入し、任意の宝物庫からダンジョンを脱出することができる。侵入から脱出までの間に、通路を通って宝物庫の間を何度か移動して、訪れた宝物庫の財宝を手に入れることができる。地図によれば、各通路は双方向に通ることができ、どの宝物庫からどの宝物庫にも１本以上の通路を経由してたどりつくことができる。しかし、通路は一度通ると二度目以降は一度目と同じ向きにしか通ることができなくなる。宝物庫の財宝は、そこを最初に訪れたときだけ手に入れることができる。このとき、手にする財宝の価値の総和を最大にしたい。
 
地図の情報が与えられたとき、侵入から脱出までの間に手にいれることのできる財宝の価値の総和の最大値を求めるプログラムを作成せよ。ただし、宝物庫には1からnまでの番号が割り当てられているものとする。
 

"
p00411,Stop Watch without Tick Mark,"
図のようなストップウォッチがあります。このストップウォッチには０を示す目印が一つあるだけで、目盛りがありません。起動した瞬間、針は目印を指し、そこから針は軸を中心に一定の割合で時計回りに回転します。目盛りがないので、起動からの経過時間を直接読み取ることはできません。その代わり、針が目印から時計回りに$a$度回ったときの経過時間が$t$秒であることがわかっています。ただし、$a$は360度未満とします。
 
  角度$a$と経過時間$t$が与えられたとき、ストップウォッチ起動後に読み取った針の角度rが表す経過時間を求めるプログラムを作成せよ。ただし、針が１周していないことはわかっているものとする。
 


"
p00412,Gas Station,"
  白虎サービスエリアのガソリンスタンドには、$1$から$n$の番号が割り当てられた$n$個のレーンがあります。各レーンの先頭の車が給油を行うことができます。
 
ガソリンスタンドに入場した車は、並んでいる車が最も少ないレーンを選び列の末尾に並びます。そのようなレーンが複数ある場合は、番号が最も小さいレーンを選びます。給油が終わるとその車はレーンから出ていき、その後ろの車が給油を行います。一度レーンを選んだら、他のレーンに移ることはできません。また、レーンに並んでいる車の順番が変わることはありません。
 
  レーンの数、入場した車と給油が終了したレーンの情報が与えられたとき、給油が終了した車のナンバーを順番に出力するプログラムを作成せよ。入場の情報はスタンドに入ってくる車のナンバー、給油終了の情報は先頭の車の給油が終了したレーン番号としてそれぞれ与えられる。ただし、最初はどのレーンにも車は並んでいないものとする。
 
  
"
p00413,Laver,"　
ヒバラ海の浜辺の集落では海苔の生産が盛んです。海苔はすべて長方形に成型されます。海苔を天日干しするときは、２枚の海苔を同じ敷物の上に乗せて、１枚目の上辺と２枚目の上辺が平行になるように置きます。アルバイトのゲンムさんは平行に置くことはできるのですが、まだ慣れていないため重なった部分ができてしまうことがあります。重なった部分は売り物にならないので、重なっていない部分の海苔の面積を求めておく必要があります。
 
同じ敷物の上に置いた２枚の海苔それぞれの左下端の位置と幅と高さが与えられたとき、重なっていない部分の海苔の面積を出力するプログラムを作成せよ。
 


"
p00414,Molting,"
セアブリ高原で発見された新種のへびは、頭から尾にかけて１列に並んだマル（o）とバツ（x）からなる模様が特徴です。下図に例を示しますが、へびの模様は個体により様々です。
 
このへびは脱皮のときに、２つのマルが並んだ部分の間すべてが伸びることで成長します。新たに加わった箇所にはマル、バツ、マルが並んだ模様が付きます。
 
たとえば、長さ３のへびoooが１回脱皮すると、左から1番目と２番目、２番目と３番目のマルの間にマル、バツ、マルが並んだ模様が加わるので、脱皮後のへびはooxoooxooとなります（下線部が新たに加わった箇所です）。もう一回脱皮するとooxooxooxoooxooxooxoo となり、へびの長さは２１になります。
 
  このへびの生態を研究しているあなたは、このへびが脱皮を繰り返したら、とてつもない長さになってしまうかもしれないと危惧しています。
   
  へびの模様と脱皮の回数が与えられたとき、この回数だけ脱皮した後のへびの長さを求めるプログラムを作成せよ。
 

"
p00415,Digits K,"
アイヅ赤べこ店では、デジットｋと呼ばれるユニークな「くじ」を販売しています。各くじには、左から右へ向かって1列に$n$個の数字が並んでいます。ただし、書かれているのは１から９までの数字です。
 
くじの購入者は、これらの数字から$k$個の数字を消去し、残った$n-k$個の数字を左から順番に並べてできる数をポイントとして獲得することができます。たとえば$k=3$のとき、くじに$1414213$と書かれていれば、左から$1$、$1$、$2$を選択して消去することで$4413$ポイントを獲得することができます。
 
  数字の列と整数$k$が与えられたとき、獲得できるポイントの最大値を出力するプログラムを作成せよ。
 

"
p00416,Two Polygons,"
ヤエさんは３本以上の真っすぐな棒を繋げて多角形を作り、恋人のジョウ君にプレゼントすることにしました。棒はそれらの端点でのみ繋げることができます。端点はすべて同じ平面上に置きます。一つの接合点で繋がる棒は２本だけで、それらがなす角度は自由に決めることができます。
 
ヤエさんは、自分が持っている棒をすべて使って大きさが同じくらいの２つの多角形を作ろうとしています。
 
与えられたすべての棒を使って、２つの多角形を、それらの周囲の長さの差の絶対値が最小となるように作る。各棒の長さが与えられたとき、２つの多角形の周囲の長さの差の絶対値を求めるプログラムを作成せよ。２つの多角形を作成できない場合はそのことを報告せよ。ただし、長さが$a_1 \leq a_2 \leq  ... \leq a_m$である$m$ ($3 \leq m$)本の棒で、$a_m ＜a_1+a_2+ ... +a_{m-1}$を満たすとき、これら$m$本の棒でひとつの多角形を作成できるものとする。
 

"
p00417,Bug,"
あなたは世界最高性能のコンピュータシステム「那由多（なゆた）」を設計している。しかし、このシステムのプロトタイプの実装中に、命令列がある条件を満たすとシステムが停止するという不具合が見つかった。
 
このシステムは、長さ$n$の命令列をプログラムとして与えることで動作する。命令列の中の$m$番目の命令を数$x_m$で表したとき、不具合が起こる条件は、ある整数$i,j$ ($2 \leq i＜j \leq n$)に対して$x_i + x_{j-1} = x_j + x_{i-1}$となる命令のパターンが命令列に存在することであると判明した。
 
  あなたはこの不具合がどの程度の影響になるのかを調べるため、ある長さで作ることができる命令列のうち、何種類の命令列が不具合を起こすかを調べることにした。
 
長さ$n$の命令列のうち、不具合が起こる命令列が何通りあるかを求めるプログラムを作成せよ。ただし、命令は$1$以上$k$以下の整数で表せることとする。答えは与えられた素数$m$で割った余りとする。
 

"
p00418,Gym with Many Rules,"
イヅア村のスポーツジムには$1$から$n$までの番号が付いた$n$台のトレーニング機器があります。トレーニング機器を１回利用するには、その機器の番号が書かれたチケットが１枚必要です。トレーニング機器を１回利用したときの消費カロリーは、機器ごとに決まっています。
 
このスポーツジムのチケットを何枚かもらったアツシ君は、運動不足解消のためにジムに行きました。このジムでは、利用者が運動をやりすぎて体を痛めないように、機器の利用回数にルールがあります。たとえば、「２番の機器は３番の機器よりも５回以上多く使ってはいけません」というようなルールです。機器を使う人は、ルールを守って機器を利用しなければなりません。
 
もらったチケットとそれぞれの機器の情報が与えられたとき、ルールを守ったときの消費カロリーの最大値を求めるプログラムを作成しなさい。
 

"
p00419,Into the Wild,"　
  近年イズア国では、山から街に降りてくる動物に悩まされている。あなたは動物を山へ帰そうと研究を重ね、以下のことを明らかにした。
 	それぞれの動物には固有の名前がついている。 	２体の動物について、一方の動物の名前のどこかの位置に１文字を挿入すると、もう一方の動物の名前と一致する場合、これらをペアにして山へ帰すことができる。 	一度山へ帰った動物が、再び街に降りてくることはない。 
  あなたは、街に降りてきた動物を、この方法でどのくらい山へ帰すことができるかを計算することにした。
   
  街に降りてきた動物の名前が与えられたとき、この方法で最大いくつのペアを山へ帰すことができるかを求めるプログラムを作成せよ。
 


"
p00420,Chemical Substance Alpha,"
アイヅ製薬では日々化学物質の研究がなされています。いま研究をしているのは、$1$番から$n$番の分子が左端から右端へ直線状にならんだ構造をしている化学物質、コードネーム「アルファ」です。
 
アイヅ製薬の開発した技術を使えば、アルファを構成する分子の位置を入れ替えることができます。入れ替えは決まった手順でしか行うことができませんが、その手順の途中から始めて途中で終わることもできます。左端から$a$番目と$b$番目の分子を入れ替える操作を$(a,b)$と書くとします。たとえば、$n=5$で決まった手順が$(1,3),(2,5),(4,3),(1,5)$のとき、$1$番目の操作$(1,3)$から始めて$3$番目の操作$(4,3)$で終わることも、$2$番目の操作$(2,5)$から始めて$4$番目の操作$(1,5)$で終わることもできます。
 
  あなたは、アルファの分子の入れ替え手順の中の開始位置と終了位置を選んでシミュレーションを行い、入れ替え後の分子の状態を調べることにしました。
 
  アルファの分子の入れ替え手順が与えられる。シミュレーションを何度か行ったとき、各シミュレーションでの分子の位置について質問に答えるプログラムを作成せよ。質問は次の1.または2.の形をしている。 
  終了後に左端から$i$番目に位置している分子は、最初は何番目に位置していたか。  最初に$i$ 番目に位置していた分子が終了後にどの位置に来ているか。
 
  ただし、各シミュレーションは、アルファの初期状態（$1$番から$n$番の分子が左端から右端へ直線状にならんだ状態）から始めるものとする。
 

"
p00421,Sum of the Number of Triangles,"
座標平面上の原点$o$を左下、座標$(w,h)$にある点を右上とする長方形の領域が与えられています。この領域に含まれる、$x$座標と$y$座標がともに整数である点を３個以上含む点の集まりを考えます。このような点の集まりのすべての組み合わせの個数を$n$とし、点の集まりのそれぞれを$d_1, d_2, ..., d_n$で表したとき、$d_1, d_2, ..., d_n$のそれぞれに含まれる点を頂点とする三角形を考えます。
 
  たとえば、図のように$w=h=1$のとき、点$o(0,0)$、$a(1,0)$、$b(1,1)$、$c(0,1)$のうち、３個以上含む点の集まりは$\{o,a,b\}$、$\{o,a,c\}$、$\{o,b,c\}$、$\{a,b,c\}$、$\{o,a,b,c\}$の５つです。この例の場合、点の集まりのそれぞれに含まれる三角形は次のようになります。
 	$\{o,a,b\}$に含まれる三角形は$oab$のみ。 	$\{o,a,c\}$に含まれる三角形は$oac$のみ。 	$\{o,b,c\}$に含まれる三角形は$obc$のみ。 	$\{a,b,c\}$に含まれる三角形は$abc$のみ。 	$\{o,a,b,c\}$に含まれる三角形は$oab$、$oac$、$obc$、$abc$の４個。 
    この例からわかるように、同じ三角形が２つ以上の点の集まりに含まれる場合があります。たとえば、三角形$oab$は点の集まり$\{o,a,b\}$にも$\{o,a,b,c\}$にも含まれます。
   
$w$と$h$が与えられる。点の集まり$d_1, d_2, ..., d_n$それぞれに含まれる点を頂点とする三角形の個数を$t_1, t_2, ..., t_n$とするとき、三角形の個数の和$t_1+t_2+...+t_n$を計算するプログラムを作成せよ。
   
  
  "
p00422,Resource of the Planet Yanaizu,"
人類はついに知的生命体の存在する惑星ヤナイヅを発見した。惑星ヤナイヅでは科学が進歩していたので、次第に我々との共同研究が盛んにおこなわれるようになった。
 
  惑星ヤナイヅではベコという虫が重要な資源とみなされている。ベコは幼虫からう化して成虫になる。ベコの生息域ではベコの幼虫が群れて生息している群生がいくつもあり、そのような群生が一列に並んでいる。惑星ヤナイヅのバイオテクノロジーを使うと、群生に対して以下のような操作ができる。
 	指定した範囲のすべての群生に、同じ数の幼虫を追加する。 	指定した範囲のすべての群生で、指定した数の幼虫を成虫にう化させ、う化した幼虫の数の合計を求める。このとき、う化させる幼虫の数を一つだけ指定できる。 
２つ目の操作では、指定した数よりも幼虫の数が少ない群生については、その群生にいるすべての幼虫をう化させる。たとえば、群生１に幼虫が３匹、群生２に幼虫が２匹いる場合、群生１から２の範囲に対してう化させる数３を指定すると、群生１からは３匹、群生２からは２匹を成虫にすることになる。このときにう化した幼虫の数の合計は５匹である。
 
  今回の共同研究では、我々人類がベコの幼虫に対するこれらの操作のシミュレーションを担当することとなった。ここは我々の科学の力を示すときである。
   
  各群生に存在する幼虫の情報が与えられたとき、それらに対する操作をシミュレーションするプログラムを作成せよ。
 

"
p00423,Card Game,"
a と b の 2 人のプレーヤーが， 0 から 9 までの数字が書かれたカードを使ってゲームを行う．最初に， 2 人は与えられた n 枚ずつのカードを，裏向きにして横一列に並べる．その後， 2 人は各自の左から 1 枚ずつカードを表向きにしていき，書かれた数字が大きい方のカードの持ち主が，その 2 枚のカードを取る．このとき，その 2 枚のカードに書かれた数字の合計が，カードを取ったプレーヤーの得点となるものとする．ただし，開いた 2 枚のカードに同じ数字が書かれているときには，引き分けとし，各プレーヤーが自分のカードを 1 枚ずつ取るものとする．
 
例えば， a，b の持ち札が，以下の入力例 1 から 3 のように並べられている場合を考えよう．ただし，入力ファイルは n + 1 行からなり， 1 行目には各プレーヤのカード枚数 n が書かれており， i + 1 行目（i = 1，2，... ，n）には a の左から i 枚目のカードの数字と b の左から i 枚目の カードの数字が，空白を区切り文字としてこの順で書かれている．すなわち，入力ファイルの 2 行目以降は，左側の列が a のカードの並びを，右側の列が b のカードの並びを，それぞれ表している．このとき，ゲーム終了後の a と b の得点は，それぞれ，対応する出力例に示したものとなる．
 
　入力ファイルに対応するゲームが終了したときの a の得点と b の得点を，この順に空白を区切り文字として 1 行に出力するプログラムを作成しなさい．ただし， n &le; 10000 とする． 
 
アップロードする出力ファイルにおいては、出力の後（bの得点の後）に改行を入れること。
 
-->



 
  入力例１
   入力例２
   入力例３
  
333
9 19 19 1
5 45 45 5
0 81 01 8

  　


  出力例１
   出力例２
   出力例３

19 820 015 14



"
p00424,Data Conversion,"
与えられた変換表にもとづき，データを変換するプログラムを作成しなさい．
 
データに使われている文字は英字か数字で，英字は大文字と小文字を区別する．変換表に現れる文字の順序に規則性はない．
 
変換表は空白をはさんで前と後ろの 2 つの文字がある(文字列ではない)．変換方法は，変換表のある行の前の文字がデータに現れたら，そのたびにその文字を後ろの文字に変換し出力する．変換は 1 度だけで，変換した文字がまた変換対象の文字になっても変換しない．変換表に現れない文字は変換せず，そのまま出力する．
 
入力ファイルには，変換表（最初の n + 1 行）に続き変換するデータ（n + 2 行目以降）が書いてある． 1 行目に変換表の行数 n，続く n 行の各行は，空白をはさんで 2 つの文字，さらに続けて， n + 2 行目に変換するデータの行数 m，続く m 行の各行は 1 文字である． m &le; 105 とする．出力は，出力例のように途中に空白や改行は入れず 1 行とせよ．
 


 
  入力例
 
3
a a
0 5
5 4
10
a
b
c
0
1
4
5
a
b
a

  　


  出力例

abc5144aba



"
p00425,Dice,"
サイコロが以下の図のような向きで置かれている．
 
ここで使用するサイコロは，この図のように，上側に 1，南側に 2 があるときは，東側に 3 があるものとする．サイコロの向かいあう面の和は必ず 7 なので，見えない面はそれぞれ北側 5，西側 4，下側 6 になっている．
 
　この初期配置の状態から指示に従ってサイコロを動かしていく．ただし，指示は以下の 6 通りの操作を何回か行うものである． 
 
north，east，south，west の各操作は指示された方向へサイコロを 90 度回転させる．
　right，left の 2 つの操作は上下の面はそのままで水平方向に 90 度回転させる．（回転させる向きに要注意．）
 
　初期配置で上の面に出ている目 1 を初期値とし， 1 回の操作が終わるたびに，上の面に出ている目の数を加算していき，指示にしたがってすべての操作を終えたときの合計値を出力するプログラムを作成しなさい.
 
　入力ファイルの 1 行目には総指示回数 n が書かれていて，続く n 行の各行には「north，east，south，west，right，left」のいずれか 1 つの指示が書かれているものとする．ただし， n ≦ 10000 とする． 
 
アップロードする出力ファイルにおいては、出力（合計値）の後に改行を入れること。
 
-->


 
  入力例１入力例２

 
58
northwest
northnorth
eastleft
southsouth

westright
north
left
east

  　


  出力例１  出力例２


2134



"
p00426,Cup,"
大きさが異なる n 個のコップと 3 つのトレイ（お盆）a，b，c があり，それらのコップは 3 つのトレイの上にそれぞれ何個かずつ一山に重ねて置かれている．ただし，どのトレイにおいても，そのトレイの中で一番小さいコップが一番下に， 2 番目に小さいコップがその上に， 3 番目に小さいコップがその上にと，小さい順に伏せて重ねてある．例えば，下図の右側は， n = 5 個のコップがトレイ a，b，c にそれぞれ 2 個，0 個，3 個重ねて置かれている状態を示している．
 
このように，コップの初期状態が与えられたとき，次の規則 1 〜 3 を守りながら，すべてのコップを a または c のどちらかのトレイに移動させるには何回移動を行えばよいかを求めたい．
 
（規則 1） 1 回に 1 つのコップだけを移動させることができる．それは，そのトレイにあるコップの中で一番上のコップ（つまり，一番大きいコップ）である．
 
（規則 2）大きいコップの上に小さいコップを重ねてはいけない．
 
（規則 3）コップ 1 個の直接移動は，トレイ a から b，b から a，b から c，c から b のみが許され， a から c への直接移動や c から a への直接移動は許されない．
 
　n 個のコップの初期状態と整数 m が与えられたとき， m 回以内の移動で， a または c のどちらかのトレイにすべてのコップをまとめて重ねることができるかどうかを判定し，可能な場合には移動回数の最小値を，不可能な場合には -1 を出力するプログラムを作成しなさい．
 
　入力ファイルの 1 行目には， n と m がこの順に空白を区切り文字として書いてある． 1 ≦ n ≦ 15 であり， 1 ≦ m ≦ 15000000 である． 2 行目，3 行目，4 行目には， 1 から n までの整数を何個かずつ 3 つのグループに分けて，それぞれのグループ内で小さい順（昇順）に並べたものが書いてある．ただし，各行の先頭（それらの整数の前）には，それらの個数が書いてある． 2 行目に書かれている整数（先頭の 1 つを除く）はトレイ a の上に重ねられている各コップの大きさを表す．同様に， 3 行目に書かれている整数（先頭の 1 つを除く）はトレイ b の上に重ねられている各コップの大きさを表し， 4 行目に書かれている整数（先頭の１つを除く）はトレイ c の上に重ねられている各コップの大きさを表す． 
 
アップロードする出力ファイルにおいては，出力（移動回数または -1）の後に改行を入れること． 
 
-->



 
  入力例１
  入力例２
  入力例３
  入力例４

 

3 104 20 2 53 3
02 1 22 1 20
1 11 301 1

2 2 31 402 2 3

  　


  出力例１
  出力例２

  出力例３
  出力例４

930-1



"
p00427,Card Game II,"
次のようなゲームを考える． 1 から n までの数が 1 つずつ書かれた n 枚のカードが k 組ある．これら kn 枚のカードをよくシャッフル（よく切ること）して， k 枚ずつの山を作り横一列に並べる．このようにしてできる n 個の山の左から i 番目の（k 枚のカードの）山を「山 i 」と呼ぶことにする．
 
ゲームは山 1 から始める．山の一番上のカード 1 枚を引き（引いたカードは元の山に戻さない），そのカードに書かれていた数が i だった場合には山 i の一番上のカード 1 枚を引く．このようにして，引いたカードに書かれていた数を番号とする山の一番上のカード 1 枚を引くことを繰り返し，すべての山にカードが無くなれば成功である．まだカードが残っている山があるのに，次にカードを引くべき山が無くなっていた場合は失敗である．
 
　途中で失敗した場合には，そのまま失敗で終了するか，または残ったカードの山をそのまま（山の番号もそのまま）にしてゲームを再開する．ゲームを再開する場合は，最初に引くカードはカードが残っている山のうちの一番左の山からとする（その山の一番上のカードが最初に引かれるカードとなる）．再開後も再開前と同様の方法でゲームを進め，すべての山にカードが無くなれば成功であり，まだカードが残っている山があるのに，次にカードを引くべき山が無くなった場合は失敗である． 
 
このようなゲームの再開を最大 m 回まで行うものとする．ただし，m は 0 か 1 である．つまり， 1 回も再開しないか， 1 回だけ再開するかのいずれかである．ゲーム開始前のシャッフルの仕方によりカードの初期配置は異なる．当然，カードの初期配置により，再開せずに成功することもあれば，再開して成功することも，再開して失敗することもある．十分シャッフルしているので，どの初期配置も全て同じ確率で現れるものと考えることにして，再開が m 回以内で成功する確率 p を求めたい．この確率 p を小数で表し，小数第 r 位まで求めて出力するプログラムを作りなさい．ただし，次の条件を満たすように出力すること.
   十分大きい正整数 k を取ると p×10k が 整数となる場合， 小数部は途中から 0 が続くが，その 0 も出力すること． 例えば， p = 3/8 = 0.375 の場合， r = 5 なら 0.37500 と出力し， r = 2 なら 0.37 と出力する． p = 1.0 の場合も同様に， 例えば r = 3 なら 1.000 と出力すること．  例えば 0.150000… は循環小数 0.1499999… として表すこともできるが， このような場合， 前者の表し方を用いる．  
入力ファイルの 1 行目には整数 n，k，m，r がこの順に空白を区切り文字として書いてある． 1 ≦ n ≦ 10000， 1 ≦ k ≦ 100， m = 0 または m = 1， 1 ≦ r ≦ 10000 である．
 
　アップロードする出力ファイルにおいては，指定通りに出力した p の後に改行を入れること．
 
-->



 
  入力例１

  入力例２
  入力例３
 

2 1 0 53 1 1 32 2 1 3

  　



  出力例１
  出力例２
  出力例３

0.500000.8331.000



"
p00428,Questionnaire,"
  ある学校で修学旅行へ行く計画がある.そのためにアンケート調査を行った.
生徒は 1 から n までの生徒番号を持ち,旅行候補の場所を 1 から m までの番号で表し,行きたい場所に ○,行きたくない場所に×の印をつけて提出している.
 
  このとき, 行きたい場所の人数が多い順に,場所の番号を出力するプログラムを作成せよ.人数が同じときは,場所の番号順とする.
 
  入力ファイルのファイル名は “input.txt” である. “input.txt” の 1 行目は生徒の人数 n と旅行候補の場所の数 m が空白で区切られ, i + 1 行に生徒 i のアンケート結果を ○ は 1 で×は 0 で表し,空白で区切られた m 個の数字が並んでいる.1 &le; n &le; 1000, 1 &le; m &le; 100 とする.
 
  出力ファイルのファイル名は “output.txt” である.“output.txt” においては,出力(場所の番号)の後に改行を入れること.
 
  入力データ の 1 行目は生徒の人数 n と旅行候補の場所の数 m が空白で区切られ, i + 1 行に生徒 i のアンケート結果を ○ は 1 で×は 0 で表し,空白で区切られた m 個の数字が並んでいる.1 &le; n &le; 1000, 1 &le; m &le; 100 とする.
 



 
  入力例１
 


4 6
1 0 1 0 1 1
1 1 0 1 0 0
1 1 1 0 0 0
1 0 1 0 1 0




  　


  出力例１


1 3 2 5 4 6



"
p00429,String,"
 0 から 9 までの数字だけで構成された文字列が与えられたとき,その文字列から次の規則に従って新しい文字列を作る操作を考える.与えられた文字列を左端から1文字ずつ順に読んで行き,同じ数字 a が r 個続いていた場合,個数 r と数字a を空白で区切らずにこの順で書き出す.与えられた文字列の右端まで読み,最後の書き出しが終わったところまでを途中何回書き出しがあったとしても全部まとめて操作1回とカウントする.2回目以降の操作は前回の操作により書き出された文字列を与えられた文字列として同様の操作を実施する.例えば “122244” という文字列が与えられた場合には左端から順に1個の1, 3個の2,2個の4なのでこの操作1回で得られる文字列は “113224” であり,“44444444444” (11 個の4)の場合には得られる文字列は “114” となる.
 
  100 文字以下の与えられた文字列に上の操作を n 回実施した文字列を出力するプログラムを作成せよ.ただし, n &le; 20 とする.
 
  入力ファイルのファイル名は “input.txt” である. “input.txt” は 2 行からなり,1 行目に操作回数 n, 2 行目に最初の文字列が書かれている.
 
  出力ファイルのファイル名は “output.txt” である.“output.txt” は 1 行であり, 指定された回数の操作を施した文字列の後に改行を入れること.
 
  入力データ は 2 行からなり,1 行目に操作回数 n, 2 行目に最初の文字列が書かれている.
 


 
  入力例
 



  5
11


  　


  出力例

13112221




"
p00430,Square,"
同じ大きさの正方形の紙が n 枚ある.これらの紙の下部を水平に揃えて何列かに並べる.ただし,隣り合う列は左側が右側より低くならないように並べなければならない.例えば, n = 5 のときは,次のような 7 通りの並べ方が可能である.
 
   これらを,各列に並んだ正方形の個数の列で表すことにする.例えば, n = 5 の
ときは,それぞれ,

          (5) (4, 1) (3, 2) (3, 1, 1) (2, 2, 1) (2, 1, 1, 1) (1, 1, 1, 1, 1)
	  
と表わされる.
 
   n を入力したとき, 辞書式順序で全て出力するプログラムを作成せよ.n &le;30
とする.ただし, 辞書式順序とは2つの並べ方 (a1, a2 , ..., as) が並べ方 (b1, b2, ..., bt ) に対して, a1 &gt; b1 または, ある整数 i &gt; 1 が存在して a1 = b1 , ..., ai-1 = bi-1 かつ ai &gt; bi が成り立つとき (a1, a2, ..., as) が (b1 , b2, ..., bt) より先に出力されるように並べることである.
 
   入力ファイルのファイル名は “input.txt” である.“input.txt” は 1 行からなり,1 行目に n が書かれている.
 
   出力ファイルのファイル名は “output.txt” である.“output.txt” には並べ方を辞書式順序で 1 行に1通りずつ書き最後に改行を入れること. 並べ方は (a1, a2, ..., as) の出力は整数 a1, a2, . . . , as をこの順番に空白で区切って出力すること.
 
   入力データ は 1 行からなり,1 行目に n が書かれている.
 
   出力には並べ方を辞書式順序で 1 行に1通りずつ書き最後に改行を入れること. 並べ方は (a1, a2, ..., as) の出力は整数 a1, a2, . . . , as をこの順番に空白で区切って出力すること.
 



 
  入力例１
 

5

  　


  出力例１


5
4 1
3 2
3 1 1
2 2 1
2 1 1 1
1 1 1 1 1






"
p00431,String With Rings,"
両端にリングのついた紐を考える.リングは正整数が付いていて,紐を区別する.紐の両端のリングには異なる数 a, b が付けられる.これを,[a, b] と記述する.複数の紐があり,一方の紐と他方の紐のリングに付いている数が同じ場合,そのリングのところで,これらの紐をつなげることができて,つなげてできたものを鎖と呼ぶことにする.例えば,[1, 3] と [3, 4] という紐からは [1, 3, 4] という鎖ができる.紐と鎖や鎖同志も同じ整数が付いているリングのところでつなげることができるものとする.
 
例えば,鎖 [1, 3, 4] と紐 [5, 1] からは [5, 1, 3, 4] ができ,鎖 [1, 3, 4] と鎖 [2, 3, 5] からは, 中央でクロスしたような形になる.鎖 [1, 3, 4] と鎖 [4, 6, 1] からは, 輪の形ができる.
 
このように様々な形ができるが, そのうちの一部で,同じ数の付いたリングは一度だけたどるつながった複数の紐を鎖と呼ぶことにする.例えば,鎖 [1, 3, 4] と鎖[2, 3, 5] からできる,中央でクロスしたような形には, [1, 3, 5],[2, 3, 4] という鎖も含まれ,鎖 [1, 3, 4] と鎖 [4, 6, 1] からできる輪には, [1, 3, 4, 6],[3, 4, 6, 1],[4, 6, 1, 3]などの鎖が含まれる.
 
これらの鎖に対して,含まれる数の個数を長さと定義する. 与えられた複数の紐に対して,つなげられるものはすべてつなげると1つ以上の
鎖を含む形ができる.そのうちの最大の鎖の長さを求めるプログラムを作成せよ.
 
   入力ファイルのファイル名は “input.txt” である.“input.txt” の最初の行には紐の個数である正整数 1 &le; n &le; 100 が書いてあり,つづく n 行のそれぞれには, 空白で区切られた 2 つの整数 a, b が書いてあり 1 &le; a &lt; b &le;  100 となっている.各行の 2 つの整数は 1 つの紐の両端の整数を表わす.
 
   出力ファイルのファイル名は “output.txt” である.“output.txt” においては,出力(最大の鎖の長さ)の後に改行を入れること.
 
   入力データ の最初の行には紐の個数である正整数 1 &le; n &le; 100 が書いてあり,つづく n 行のそれぞれには, 空白で区切られた 2 つの整数 a, b が書いてあり 1 &le; a &lt; b &le;  100 となっている.各行の 2 つの整数は 1 つの紐の両端の整数を表わす.
 


 
  入力例１
  入力例２
  入力例３
 

7  6  7  
1 3  1 2  1 3  
3 4  2 3  2 4  
1 4  3 4  3 5  
2 7  4 5  4 6  
5 7  1 5  6 7  
6 7  2 6  2 6  
1 7    4 7  

  　


  出力例１
  出力例２
  出力例３

564





"
p00432,Sheets,"
平面に長方形のシートが何枚か置かれている. これらのシートで覆われている部分の面積や周長を求めるプログラムを作成せよ.
 
ただし, 平面を座標平面とみなしたとき, シートの配置は次の条件 (1), (2) を満たすものとする.
 
(1) 各シートの長方形の 4 頂点の x, y 座標は全て 0 以上 10000 以下の整数であり, 長方形の各辺は x 軸, または y 軸に平行である.
 
(2) シートの枚数は高々 10000 枚以下である.
 
入力ファイルのファイル名は “input.txt” である.“input.txt” の 1 行目に長方形の個数 n と問題の種類を表す整数 r が空白で区切って書かれている. 2 行目以降の各行には, 各シートの左下頂点座標 (x1, y1) と右上頂点座標 (x2, y2) の座標値が x1, y1, x2, y2 の順で空白で区切って書いてある.
 
出力ファイルのファイル名は “output.txt” である.“output.txt” には r = 1 のとき 1 行目に面積を, r = 2 のとき 1 行目に面積, 2 行目に周囲の長さを出力する. いずれの場合も最後に改行を入れること.
 
入力データ の 1 行目に長方形の個数 n と問題の種類を表す整数 r が空白で区切って書かれている. 2 行目以降の各行には, 各シートの左下頂点座標 (x1, y1) と右上頂点座標 (x2, y2) の座標値が x1, y1, x2, y2 の順で空白で区切って書いてある.
 
出力には r = 1 のとき 1 行目に面積を, r = 2 のとき 1 行目に面積, 2 行目に周囲の長さを出力する. いずれの場合も最後に改行を入れること.
 
   また, テストデータの 40% では長方形の頂点の座標が 0 以上 100 以下で, そのうちの 1/2 では面積だけを求める問題である. さらに, 全体の 1/2 は面積だけを求める問題である.
 


 
  入力例１
  入力例２
  入力例３
  入力例４

 

5 1   5 2   2 2   3 2   
0 0 3 2   0 0 3 2   0 0 8 9   2 2 8 8   
1 1 2 5   1 1 2 5   0 0 9 8   3 0 4 9   
0 4 6 5   0 4 6 5      5 0 7 9   
3 3 5 6   3 3 5 6         
5 0 7 6   5 0 7 6         


  　


  出力例１
  出力例２
  出力例３
  出力例４

29  29  80   45  
  38  36   36  





"
p00433,Score,"
joi高校の2人の生徒 a さんと b さんは，情報，数学，理科，英語の4教科の試験を受けた． a さんと b さんのこれら4教科の得点が与えられると， aさんの合計点 s と bさんの合計点 t のうち大きな方を出力するプログラムを作成せよ．ただし，同点の場合は s (= t) を出力せよ．
 


"
p00434,Who Are The Student Yet To Submit,"
joi大学のm教授はプログラミングの授業を担当している．クラスには30人の受講生がいて各受講生には1番から30番までの出席番号がふられている．この授業の課題を28人の学生が提出した．提出した28人の出席番号から提出していない2人の出席番号を求めるプログラムを作成せよ．
 

"
p00435,Caesar Cipher,"
ガイウス・ユリウス・カエサル（gaius julius caesar)，英語読みでジュリアス・シーザー（julius caesar）は，古代ローマの軍人であり政治家である．カエサルは，秘密の手紙を書くときに， 'a' を 'd' に， 'b' を 'e' に， 'c' を 'f' に，というように3つずらして表記したという記録が残っている．
 
大文字のアルファベット26文字だけからなる文字列を，カエサルがしたように3文字ずつずらす変換を施し得られた文字列がある．このような文字列を元の文字列に戻すプログラムを作成せよ．
 
各文字の変換前と変換後の対応は次のようになる．
 
例えば，この方法で文字列 joi を変換すると mrl が得られ，この方法で変換された文字列 furdwld の元の文字列は croatia である． 
 


"
p00436,Shuffle The Cards,"
1 から 2n の数が書かれた 2n 枚のカードがあり，上から 1, 2, 3, ... , 2n の順に積み重なっている．
 
このカードを，次の方法を何回か用いて並べ替える．
 
整数 k でカット
上から k 枚のカードの山 a と 残りのカードの山 b に分けた後， 山 a の上に山 b をのせる．
 
リフルシャッフル
    上から n 枚の山 a と残りの山 b に分け， 上から a の1枚目， b の1枚目， a の2枚目， b の2枚目， …， a の n枚目， b の n枚目， となるようにして， 1 つの山にする．
 
入力の指示に従い，カードを並び替えたあとのカードの番号を，上から順番に出力するプログラムを作成せよ．
 

"
p00437,Quality Checking,"
 あなたはある機械の製造工場で品質管理の責任者をしている． この機械には， 部品として電源とモーターとケーブルが必要である． 製造工場には電源が a 個， モーターが b 個， ケーブルが c 個あり， それぞれ 1 から a まで， a+1 から a+b まで， a+b+1 から a+b+c までの番号が付いている． 困ったことに， 部品の中に故障しているものがあるかもしれない． 工場ではどの部品が故障していてどの部品が正常であるかを知りたい．
 
そこで， 工場では次の方法で部品を検査した． 電源とモーターとケーブルを１つずつ持ってきてつなぎ， 動作させてみる． このとき， ３つの部品がすべて正常であるときは正しく動作して「合格」とわかる． ３つの中に故障している部品が１つでも入っているときは正しく動作しないので「不合格」とわかる． （工場で作っている機械はとても精密なので， 故障した部品がまざっているのに偶然正しく動作してしまうなどということは起きないのだ．）
 
あなたには検査結果のリストが渡される． 検査結果のリストの各行には， 検査に使った電源とモーターとケーブルの番号と， 検査が合格だったか不合格だったかが書かれている．
 
検査結果のリストが与えられたとき， すべての部品を， 検査結果から確実に故障しているとわかる部品と， 確実に正常とわかる部品と， 検査結果からは故障しているとも正常であるとも決まらない部品に分類するプログラムを作成せよ． 
 


"
p00438,School Road,"
太郎君の住んでいるjoi市は，南北方向にまっすぐに伸びる a 本の道路と，東西方向にまっすぐに伸びる b 本の道路により，碁盤の目の形に区分けされている．
 
南北方向の a 本の道路には，西から順に 1, 2, ... , a の番号が付けられている．また，東西方向の b 本の道路には，南から順に 1, 2, ... , b の番号が付けられている．西から i 番目の南北方向の道路と，南から j 番目の東西方向の道路が交わる交差点を (i, j) で表す．
 
太郎君は，交差点 (1, 1) の近くに住んでおり，交差点 (a, b) の近くのjoi高校に自転車で通っている．自転車は道路に沿ってのみ移動することができる．太郎君は，通学時間を短くするため，東または北にのみ向かって移動して通学している．
 
現在， joi市では， n 個の交差点 (x1, y1), (x2, y2), ... , (xn, yn) で工事を行っている．太郎君は工事中の交差点を通ることができない．
 
太郎君が交差点 (1, 1) から交差点 (a, b) まで，工事中の交差点を避けながら，東または北にのみ向かって移動して通学する方法は何通りあるだろうか．太郎君の通学経路の個数 m を求めるプログラムを作成せよ．
 


"
p00439,Maximum Sum,"
n 個の整数からなる数列 a1, a2, ..., an と正整数 k (1 &le; k &le; n) が与えられる.このとき, 連続して並ぶ k 個の整数の和  si = ai + ai+1 + ... + ai+k-1 (1 &le; i &le; n - k + 1) の最大値を出力するプログラムを作りなさい.

 

"
p00440,Longest Steps,"
 1 から n までの整数がそれぞれ 1 つずつ書かれた n 枚のカードと,1 枚の白紙の
カードがある.これら n + 1 枚のカードの内,k 枚のカードが与えられる.ただし,
1 &le; k &le; n である.白紙のカードには 1 から n までの整数を 1 つ書くことができ
る.与えられたカードだけで,できるだけ長い連続した整数列を作りたい.
 
 与えられるカードが入力されたときに, 与えられたカードから作ることができる連
続した整数列の最大長を出力するプログラムを作成せよ.
 

"
p00441,The Oldest Site,"
 昔, そこには集落があり, 多くの人が暮らしていた. 人々は形も大きさも様々な建物を建てた. だが, それらの建造物は既に失われ, 文献と, 遺跡から見つかった柱だけが建造物の位置を知る手がかりだった.
 
 文献には神殿の記述がある. 神殿は上から見ると正確に正方形になっており, その四隅には柱があった. 神殿がどの向きを向いていたかはわからない. また, 辺上や内部に柱があったかどうかもわからない. 考古学者たちは, 遺跡から見つかった柱の中で, 正方形になっているもののうち, 面積が最大のものが神殿に違いないと考えた.
 
 柱の位置の座標が与えられるので, 4 本の柱でできる正方形のうち面積が最大のものを探し, その面積を出力するプログラムを書け. なお, 正方形の辺は座標軸に平行とは限らないことに注意せよ.
 

"
p00442,Worst Reporter,"
あなたは joi 新聞社の記者であり，スポーツ記事を担当している．
 
昨日までに，クロアチアでは，n 個のサッカーチームによる総当りのリーグ戦が行われた．大会実行委員会は，試合結果と規定に基づき各チームに 1 位から n 位までの順位をつけたようである．あなたには，一部の試合の勝敗とともに，次の情報が伝えられた．


情報 1 引き分けの試合はなかった．
情報 2 全てのチームに異なる順位がついた．
情報 3 全ての 1 &le; a < b &le; n に対し，a 位のチームと b 位のチームの試合において，必ず a 位のチームが勝利した．

 
あなたは記事を作成するために，一部の試合の勝敗と，伝えられた情報 1 3 をもとに，順位表を推測することにした．
 
入力として一部の試合の勝敗が与えられたとき，伝えられた情報に適合する順位表を 1 つ出力するプログラムを作れ．また，出力した順位表以外に，伝えられた情報に適合する順位表が存在するかどうかも判定せよ．
 
ここで，順位表とは 1 位から n 位の順にチームを並べたもののことをいう．
 


"
p00443,Lightest Mobile,"
 モビールは動く芸術品として広く親しまれている.ioi 日本委員会では,joi を広報するためにモビールを作成することになった.joi 広報用モビールは,棒,紐(ひも),錘(おもり)の 3 種類の要素を用いて,次のように構成される.
  棒の一方の端は青に,もう一方の端は赤に塗られている.   棒は両端以外の 1 箇所を支点として紐でつるされる.  支点から赤の端までの長さも支点から青の端までの長さも正整数である.  棒の両端には,紐で錘か他の棒をつるす.  錘は紐を用いてどれかの棒の一端につるされる.  錘には何もつるさない.  錘の重さは正整数である.  紐のうち 1 本だけは,片方の端をある棒をつるすためにその棒の支点に結ばれ,
    もう一方の端は他のどの構成要素とも結ばれていない.他の紐は全て次のいず
    れかを満たす.  ある棒の端とある棒の支点を結ぶ.  ある棒の端とある錘を結ぶ. 
ただし,どの棒においても,バランスが取れている必要がある.棒と紐の重さは無視できるほど軽いので,棒と紐の重さは全て 0 であるとみなして解答せよ.つまり,それぞれの棒について,
 
   (その棒の赤の端より下につるされている錘の重さの総計)
   &times; (その棒の支点から赤の端までの長さ)
 = (その棒の青の端より下につるされている錘の重さの総計)
   &times;  (その棒の支点から青の端までの長さ)
 
であるとき,その棒はバランスが取れているとせよ.
 
 どのような長さの棒をどのように結びモビールを構成するかは既に決まっているのだが,錘の重さがまだ決まっていない.モビールは軽い方がつりやすいため, なるべく軽いモビールを作りたい.前述したようにどの棒もバランスを取りながら, モビールの総重量を最小にするような錘の付け方を求め, そのときのモビールの総重量を出力するプログラムを作れ. プログラムには以下のモビールの構成に関する情報が与えられる.
   棒の本数 n  各棒ごとの情報(棒の番号は 1 から n) 支点から赤の端までの長さと支点から青の端までの長さの比  赤の端につるす棒の番号 (錘をつるす場合は 0)  青の端につるす棒の番号 (錘をつるす場合は 0) 
     






"
p00444,Change,"
太郎君はよくjoi雑貨店で買い物をする． joi雑貨店には硬貨は500円，100円，50円，10円，5円，1円が十分な数だけあり，いつも最も枚数が少なくなるようなおつりの支払い方をする．太郎君がjoi雑貨店で買い物をしてレジで1000円札を1枚出した時，もらうおつりに含まれる硬貨の枚数を求めるプログラムを作成せよ．
 
例えば入力例1の場合は下の図に示すように，4を出力しなければならない． 
 






"
p00445,JOI and IOI,"
与えられた文字列内の連続する3文字が，joiまたはioiという並びになっている個所がそれぞれ何個所あるのかを数え上げるプログラムを作成せよ．文字列はアルファベットの大文字だけからなる．例えば下図の「joioioi」という文字列にはjoiが1個所，ioiが2個所に含まれている．
 



"
p00446,Card Game,"
次のような2人で行うカードゲームがある．
  このゲームでは， 1から2nまでの各整数が書かれた全部で2n枚のカードを使用する． ここで，nは1以上100以下の整数である．  このカードを2人にn枚ずつ配る．  次のルールに従って交互にカードを1枚ずつ場に出す．  場にカードが出ていないならば， 好きなカードを出すことができる．  場にカードが出ているならば， 最後に場に出たカードよりも大きい数の書かれたカードを出すことができる．  カードが出せる場合は，必ず場にカードを出す必要がある．  出せるカードが無い場合はパスとなり，相手の番になる． このとき，場に出ているカードは無くなる．   ゲームは場にカードが出ていない状態で始める．  どちらかの手持ちのカードが無くなった時点でゲームは終了する．  ゲーム終了時に相手の持っているカードの枚数を得点とする． 
太郎と花子は，このゲームで対戦することになった．ゲームは太郎の番から始める． 2人は共に，出すことのできるカードのうち必ず一番小さい数が書かれたカードを出すことにしている．
 
太郎に配られるカードが入力されたとき，太郎と花子の得点を出力するプログラムを作成せよ． 
 

"
p00447,Searching Constellation,"
あなたは星空の写真の中から星座を探している．写真には必ず，探したい星座と同じ形・向き・大きさの図形がちょうど一つ含まれている．ただし，写真の中には星座を構成する星以外に余分な星が写っている可能性がある．
 
例えば，図 1 の星座は図 2 の写真に含まれている（丸で囲んで示した）．与えられた星座の星の座標を x 方向に 2， y 方向に −3 だけ平行移動すると写真の中の位置になる．
 
探したい星座の形と写真に写っている星の位置が与えられたとき，星座の座標を写真の中の座標に変換するために平行移動するべき量を答えるプログラムを書け． 
 



  
  
  図 1: 探したい星座図 2: 星空の写真



"
p00448,Osenbei,"
ioi製菓では，創業以来の伝統の製法で煎餅（せんべい）を焼いている．この伝統の製法は，炭火で一定時間表側を焼き，表側が焼けると裏返して，炭火で一定時間裏側を焼くというものである．この伝統を守りつつ，煎餅を機械で焼いている．この機械は縦 r (1 &le; r &le; 10) 行, 横 c (1 &le; c &le; 10000) 列の長方形状に煎餅を並べて焼く．通常は自動運転で，表側が焼けたら一斉に煎餅を裏返し裏側を焼く．
 
ある日，煎餅を焼いていると，煎餅を裏返す直前に地震が起こり何枚かの煎餅が裏返ってしまった．幸いなことに炭火の状態は適切なままであったが，これ以上表側を焼くと創業以来の伝統で定められている焼き時間を超えてしまい，煎餅の表側が焼けすぎて商品として出荷できなくなる．そこで，急いで機械をマニュアル操作に変更し，まだ裏返っていない煎餅だけを裏返そうとした．この機械は，横の行を何行か同時に裏返したり縦の列を何列か同時に裏返したりすることはできるが，残念なことに，煎餅を１枚ごと裏返すことはできない．
 
裏返すのに時間がかかると，地震で裏返らなかった煎餅の表側が焼けすぎて商品として出荷できなくなるので，横の何行かを同時に１回裏返し，引き続き，縦の何列かを同時に１回裏返して，表側を焼きすぎずに両面を焼くことのできる煎餅，つまり，「出荷できる煎餅」の枚数をなるべく多くすることにした．横の行を１行も裏返さない，あるいは，縦の列を１列も裏返さない場合も考えることにする．出荷できる煎餅の枚数の最大値を出力するプログラムを書きなさい．
 
地震の直後に，煎餅が次の図のような状態になったとする．黒い丸が表側が焼ける状態を，白い丸が裏側が焼ける状態を表している． 
 
1行目を裏返すと次の図のような状態になる． 
 
さらに， 1列目と5列目を裏返すと次の図のような状態になる．この状態では，出荷できる煎餅は9枚である． 
 



"
p00449,Boat Travel,"
joi国には，n 島の島があり，各島には 1 から n までの番号が付けられている．現在，joi国では各島の間を結ぶ航路網の整備が進んでいる．
 
あなたは，船舶の切符を扱っているチケットセンターに勤務している．joi国には船舶を使って，できる限り安価に，島と島の間を旅行したいと考えている人が沢山おり，彼らは，出発地と目的地を注文票に記入して，あなたのところに送ってくる．
 
あなたの仕事は，客から注文票を受け取ったらすぐに，いくつかの船舶を乗り継いで，出発地と目的地を結ぶ航路の中で，もっとも安価な運賃を計算し，客に伝えることである．
ただし，旅程によっては，船舶を使って旅行することが出来ない場合もある．そのときは『船舶を使って旅行することが出来ない』と客に伝える必要がある．また，joi国では，島と島の間を結ぶ新しい船舶が，次々と運航を開始しており，あなたには，その情報が随時伝えられる．客に返事をする際には，最新の情報に留意しなければならない．
 
入力として，客の注文票や新たに運航を開始した船舶の運航情報が与えられたときに，客への返事を求めるプログラムを作成せよ．
 
なお，入力例１と出力例１に対する実行状況を，図１として図示している．
 


"
p00450,Setting Go Stones,"
 白と黒の碁石をテーブルの上にならべて遊ぶ.まずテーブルの左端に碁石を置く.次に左から 2 番目の場所に碁石を置く.これを n 回繰り返して n 個の碁石を横一列にならべる.ただし,新しく i 番目の碁石を置く際には,次のルールに従ってテーブル上の碁石を置き換える.
  i が奇数の場合: テーブルに置いてあった碁石は置き換えず,新しい碁石を左
    から i 番目に置く.  i が偶数の場合: 新しく左から i 番目に置く碁石の色とテーブル上の右端の碁
    石の色が同じ場合は,テーブル上の碁石は置き換えず,新しい碁石を左から i
    番目に置く.そうでない場合,すなわち,新しく左から i 番目に置く碁石の色
    とテーブル上の右端の碁石の色が異なる場合は,まずテーブル上の右端の連続
    した同色の碁石を全て取り除き,i 番目の碁石と同色の碁石に置き換える.そ
    してテーブルの右端に i 番目の碁石を置く. 
 例えば,最初の 7 個の碁石を置いた時点で,
 
   ○○●●○○○
 
となっていたとする.   (○は白の碁石を,●は黒の碁石を表す. )
 ○○●●○○○○ 
    となる.
   
      ○○●●●●●●
 
    となる.
 
入力として置く碁石の順番が与えられたとき,n 個の碁石をならべ終わった後,テー
ブル上に置いてある白い碁石の個数を求めるプログラムを作成せよ.
 

"
p00451,String,"
  2 個の文字列が与えられたとき, 両方の文字列に含まれる文字列のうち最も長いものを探し, その長さを答えるプログラムを作成せよ.
 
  ここで, 文字列 s が文字列 t に含まれるとは, t の中に s が連続して現れることをいう. 空文字列, すなわち長さ 0 の文字列は, どんな文字列にも含まれる. 例えば, 文字列 abracadabra には次の文字列が含まれる: abra, rac, d, acadabra, abracadabra,空文字列など. 一方, 文字列 abracadabra には次の文字列は含まれない: abrc, raa,ba, k など.
 


"
p00452,Darts,"
あなたは以下のルールでダーツゲームをすることになった.
 
あなたは,矢を的(まと)に向かって 4 本まで投げることができる.必ずしも 4 本全てを投げる必要はなく,1 本も投げなくてもかまわない.的は n 個の部分に区切られていて,各々の部分に点数 p1,..., pn が書か   れている.矢が刺さった場所の点数の合計 s があなたの得点の基礎となる.s があらかじめ決められたある点数 m 以下の場合は s がそのままあなたの得点となる.しかし,s が m を超えた場合はあなたの得点は 0 点となる.
 
的に書かれている点数と m の値が与えられたとき,あなたが得ることのできる点数の最大値を求めるプログラムを作成せよ.
 

"
p00453,Pyon River Crossing,"
ある川で,一方の岸から石の上を次々と飛び移って反対側の岸まで行くという少々危険なゲームがはやっている.
 
今,図 4-1 のように,石はマス目の上に存在すると考える.行の数は n である. 図 4-1 では n = 5 である.
 
このゲームでは,一方の岸から始めて,通常のジャンプまたは m 回以下の一行飛ばしのジャンプをして反対側の岸まで渡る.通常のジャンプとは,今いる行の一つ先の行の岸または石のどれかに飛び移ることであり,一行飛ばしのジャンプとは,今いる行の二つ先の行の岸または石のどれかに飛び移ることである.始める岸の一つ先の行は 1 行目,二つ先の行は 2 行目であり,n − 1 行目の二つ先の行,及び n 行目の一つ先の行は反対側の岸であるとする.
 
さて,このゲームをできるだけ安全に成し遂げるために,ジャンプの危険度というものを考えることにした.それぞれの石には,滑りやすさが定まっている.石から石へ飛び移る際のジャンプの危険度は,通常のジャンプであっても,一行飛ばしのジャンプであっても,
 
  (今いる石の滑りやすさ + 飛び移る先の石の滑りやすさ)&times;(横の移動距離)
 
で定める.ただし,横の移動距離とは,列の番号の差である.また,岸から石へ,あるいは石から岸へ飛び移るジャンプの危険度は 0 とする.
 
入力として n, m,それぞれの石の位置と滑りやすさが与えられたとき,反対側の岸まで到達する際のジャンプの危険度の合計の最小値を求めるプログラムを作成せよ.与えられる入力データは必ず反対側の岸まで到達することができるようになっており,同じマス目に石は 2 個以上存在しない.
 


"
p00454,Paint Color,"
情報オリンピックの宣伝のために,長方形のベニヤ板にペンキを塗り看板を制作したい.ベニヤ板には色を塗りたくないところにあらかじめ何枚かの長方形のマスキングテープが貼られている.そこでマスキングテープで区切られた領域ごとに別々の色を使いペンキを塗ることにした.例えば,図 5-1 の場合は 5 色のペンキを使う.
 
入力としてマスキングテープを貼る位置が与えられた時,使うペンキの色の数を求めるプログラムを作成せよ.ただし,ベニヤ板全体がマスキングテープで覆われることはなく,全てのマスキングテープの辺はベニヤ板のいずれかの辺に平行である.
 


"
p00455,Time Card,"
joi商事では社員の在社時間をタイムカードで管理している．社員は，出社すると専用の装置を使ってタイムカードに出社時刻を刻印する．勤務を終え退社するときにも，タイムカードに退社時刻を刻印する．時刻は24時間制で扱われる．
 
防犯上の理由から，社員の出社時刻は7時以降である．また，全ての社員は23時より前に退社する．社員の退社時刻は常に出社時刻より後である．
 
入力としてjoi商事の3人の社員aさん，bさん，cさんの出社時刻と退社時刻が与えられたとき，それぞれの社員の在社時間を計算するプログラムを作成せよ． 
 

"
p00456,Contest,"
先日，オンラインでのプログラミングコンテストが行われた． w大学とk大学のコンピュータクラブは以前からライバル関係にあり，このコンテストを利用して両者の優劣を決めようということになった．
 
今回，この2つの大学からはともに10人ずつがこのコンテストに参加した．長い議論の末，参加した10人のうち，得点の高い方から3人の得点を合計し，大学の得点とすることにした．
 
w大学およびk大学の参加者の得点のデータが与えられる．このとき，おのおのの大学の得点を計算するプログラムを作成せよ． 
 

"
p00457,Chain,"
次のようなゲームがある．
 
あるキャラクターが縦 1 列に n 個並んでいる．これらのキャラクターの色は赤，青，黄のいずれかであり，初期状態で同じ色のキャラクターが4つ以上連続して並んでいることはない．プレーヤーは，ある位置のキャラクターを選び他の色に変更することができる．この操作により同じ色のキャラクターが4つ以上連続して並ぶとそれらのキャラクターは消滅する．キャラクターが消滅することにより新たに同じ色のキャラクターが4つ以上連続して並ぶとそれらのキャラクターも消滅し，同じ色のキャラクターが4つ以上連続して並んでいる箇所がなくなるまでこの連鎖は続く．このゲームの目的は，消滅しないで残っているキャラクター数をなるべく少なくすることである．
 
例えば，下図の左端の状態で，上から6番目のキャラクターの色を黄色から青に変更すると，青のキャラクターが5つ連続するので消滅し，最終的に3つのキャラクターが消滅せずに残る． 
 
初期状態における n 個のキャラクターの色の並びが与えられたとき， 1箇所だけキャラクターの色を変更した場合の，消滅しないで残っているキャラクター数の最小値 m を求めるプログラムを作成せよ． 

"
p00458,Crossing Black Ice,"
冬の寒いある日，joi太郎君は広場にはった薄氷を割って遊ぶことにした．広場は長方形で，東西方向に m 個，南北方向に n 個，つまり， m &times; n の区画に区切られている．また，薄氷が有る区画と無い区画がある． joi太郎君は，次のルールにしたがって，薄氷を割りながら区画を移動することにした．
  薄氷があるどの区画からも薄氷を割り始めることができる．  東西南北のいずれかの方向に隣接し， まだ割られていない薄氷のある区画に移動できる．  移動した先の区画の薄氷をかならず割る． 
joi太郎君が薄氷を割りながら移動できる区画数の最大値を求めるプログラムを作成せよ．ただし， 1 &le; m &le; 90，1 &le; n &le; 90 である．与えられる入力データでは，移動方法は20万通りを超えない．
 

"
p00459,Shuffle,"
1 から n までの番号が書かれた n 枚のカードがある．まず，一番上が番号 1 のカード，上から2枚目が番号 2 のカード，…，一番下が番号 n のカードとなるように順番に重ねて，カードの山を作る．
 
カードの山に対して，「シャッフル(x,y)」と呼ばれる次のような操作を行うことで，カードを並び替える（x, y は 1 &le; x &lt; y &lt; n をみたす整数）．
 
シャッフル(x,y)
    n 枚のカードを，一番上から x 枚目までのカードからなる山a， x+1 枚目から y 枚目のカードからなる山b， y+1 枚目から n 枚目のカードからなる山c の3つの山に分ける．そして，山aの上に山bを重ね，さらにその上に山cを重ねる． 
 
例えば，順番に並んでいる9枚のカードに対して「シャッフル(3,5)」を行うと， 9 枚のカードに書かれた番号は, 上から順番に 6, 7, 8, 9, 4, 5, 1, 2, 3 となる． 
 
最初の山の状態から m 回のシャッフル「シャッフル(x1, y1)」「シャッフル(x2, y2)」 … 「シャッフル(xm, ym)」を順番に行った後のカードの山において，上から数えて p 枚目から q 枚目のカードの中に番号が r 以下のカードが何枚含まれているかを求めるプログラムを作成せよ．
 

"
p00460,Bingo,"
あるプログラミングコンテストでは,競技後の懇親会でビンゴゲームをする習わしがある．しかし,このビンゴゲームで使うビンゴカードは少々特殊で,以下の条件に従って作成される．
  ビンゴカードは n 行 n 列のマス目に区切られており，各マス目には正整数が１つずつ書かれている．それらの整数は全て異なる．  マス目に書かれている整数は 1 以上 m 以下である．  ビンゴカードに書かれているn×n個の整数の合計は s である．  どの列を見たときも，上から下に向かって整数は昇順に並んでいる．  どのマス目の整数も，そのマス目より左の列のどの整数よりも大きい． 
以下は， n = 5, m = 50, s = 685 のときのビンゴカードの例である． 
 
懇親会のために上の条件を満たすビンゴカードをできるだけたくさん作りたい．ただし，同一のカードを2枚以上作ってはならない．作ることができるビンゴカードの枚数の最大値を 100000 で割った余りを出力するプログラムを作成せよ．
 


"
p00461,IOIOI,"
 整数 n (1 &le; n) に対し, n + 1 個の i と n 個の o を i から始めて交互に並べてできる文字列を pn とする.ここで i と o はそれぞれ英大文字のアイとオーである.
 
図 1-1 本問で考える文字列 pn
 
 整数 n と, i と o のみからなる文字列 s が与えられた時, s の中に pn が何ヶ所含まれているかを出力するプログラムを作成せよ.
 

"
p00462,Pizza,"
    joi ピザでは,市の中心部を通る全長 d メートルの環状線の沿線上でピザの宅配販
売を行っている.
 
    joi ピザは,環状線上に n 個の店舗 s1, ... , sn を持つ.本店は s1 である. s1 から si まで,時計回りに環状線を移動したときの道のりを di メートルとおく. d2, ... , dn は 1 以上 d - 1 以下の整数である. d2 , ... , dn は全て異なる. ピザの注文を受けると, ピザが冷めないように, 宅配先までの移動距離がもっとも短い店舗でピザを焼き宅配する.
 
    宅配先の位置は 0 以上 d - 1 以下の整数 k で表される.これは, 本店 s1 から宅配先までに時計回りで環状線を移動したときの道のりが k メートルであることを意味する. ピザの宅配は環状線に沿って行われ, それ以外の道を通ることは許されない. ただし, 環状線上は時計回りに移動しても反時計回りに移動してもよい.
 
    例えば,店舗の位置と宅配先の位置が下図のようになっている場合 (この例は「入出力の例」の例 1 と対応している),
 
  宅配先 1 にもっとも近い店舗は s2 なので, 店舗 s2 から宅配する.このとき, 店舗からの移動距離は 1 である.また, 宅配先 2 にもっとも近い店舗は s1 (本店) なので, 店舗 s1 (本店) から宅配する.このとき,店舗からの移動距離は 2 である.
 
  環状線の全長 d, joi ピザの店舗の個数 n, 注文の個数 m, 本店以外の位置を表す n - 1 個の整数 d2, ... , dn , 宅配先の場所を表す整数 k1, ... , km が与えられたとき, 各注文に対する宅配時の移動距離 (すなわち,最寄店舗から宅配先までの道のり) の全注文にわたる総和を求めるプログラムを作成せよ.
 



"
p00463,Amidakuji,"
  あなたは j 君と一緒にあみだくじを使って遊んでいる.あみだくじは n 本の縦棒と
m 本の横棒からなる.縦棒には左から順に 1 から n の番号がついており,縦棒 i の下端には正整数 si が書かれている.
 
図 3-1 あみだくじの例(n = 4, m = 5, s1 = 20, s2 = 80, s3 = 100, s4 = 50)
 
 縦棒 i の一番上から順に道をたどっていき到達した下端に書かれている整数が, 縦
棒 i を選んだ場合の得点である.例えば,図 3-1 では,縦棒 1 を選ぶと得点は 80 点
であり,縦棒 2 を選ぶと得点は 100 点である.
 
図 3-2 道のたどり方の例
 
 j 君は縦棒 1 から縦棒 k までの連続した k 本を選ぶことにした.それら k 本の縦棒を選んだときの点数の合計が j 君の得点となる.ただし,あなたはあみだくじ内の
横棒を一本選び,その横棒をあみだくじから削除することができる. (削除しなくてもよい.) もし,あなたが横棒を一本削除した場合は,削除後のあみだくじにおいて,
縦棒 1 から縦棒 k までの連続した k 本の縦棒を選んだときの点数の合計が j 君の得点となる.
 
 入力としてあみだくじの形と j 君の選ぶ縦棒の本数 k が与えられたとき,j 君の得
点の最小値を求めるプログラムを作成せよ.
 


"
p00464,Walk,"
 joi 町に住む太郎君は, ある日,健康増進のために散歩を日課にしようと思い立った.
 太郎君の住む joi 町には,図のように,東西方向に走る (h + 1) 本の道路と,南北
方向に走る (w + 1) 本の道路が碁盤目状に通っている.太郎君の家はもっとも北西の
交差点にあり,ここから散歩を開始する.
 
 以降,北から a 番目,西から b 番目の交差点を (a, b) で表す.たとえば,太郎君の家がある交差点は (1, 1) である.
 
図: joi 町の図 (h = 3, w = 4 の場合).図の上が北,左が西に対応する.
 
 太郎君は,散歩のルートが日々違ったほうが面白いと考えたので,(1, 1) から (h, w) までの h &times; w 個の交差点に, 「東」または「南」の文字を書き,次のようなルールに従って毎日散歩を行うことにした.
   文字の書かれた交差点にいる場合,その交差点に書かれている文字が「東」な
  ら「南」に, 「南」なら「東」に文字を書き換え,もともと書かれていた文字の方角にある次の交差点まで進む.  もっとも東やもっとも南の道路に到達したら散歩を終了する. 
 この計画を考えた後,太郎君は,将来の散歩で自分がどのようなルートをたどる
ことになるのかが気になった.太郎君のために,太郎君の n 回目の散歩のルートを
予測するプログラムを作成せよ.

 


"
p00465,Authentication Level,"
あなたは just odd inventions 社を知っているだろうか? この会社の業務は「ただ奇妙な発明 (just odd inventions)」をすることである.ここでは略して joi 社と呼ぶ.
 
joi 社には 2 つの事務所があり,それぞれ同じ大きさの正方形の部屋がマス目状に並んでできている.辺で接しているすべての部屋の間に,身分証による認証機能の付いた扉がある.joi 社では様々なレベルの機密情報を扱っているため,部屋ごとに機密レベルという正の整数が設定されており,身分証の事務所ごとに定められた非負整数の認証レベルが,機密レベル以上でないとその部屋に入室することができない.各事務所の出入り口は唯一あるエレベーターホールのみで,エレベーターホールの部屋の機密レベルは最低の 1 である.その事務所についての認証レベルが 0 のときはエレベーターホールに入ることさえできない.
 
joi 社では,社長の突発的な提案で,一般の人に社内を見学してもらうツアーを実施することになった.あなたは見学者に渡す身分証の認証レベルの組み合わせを決める必要がある.見学者は開けられる扉を見つけると必ず開けて中に入る (同じ部屋を何度も訪れることも可能である).そのため,必要以上に見学者の身分証の認証レベルを高くしたくはない.しかし,ツアーに魅力を持たせるため,ツアーではエレベーターホールの部屋を含め 2 つの事務所であわせて r 個以上の部屋を訪れることができるようにする必要がある.身分証の認証レベルを低くしすぎると,この条件を満たすことができないかもしれない.
 
joi 社には事務所が 2 個あり,第 k 事務所 (k = 1, 2) の部屋は東西方向に wk 個,南北方向に hk 個並んでおり,全部で wk &times; hk 個ある. 西から i 番目,北から j 番目の部屋を (i, j)k で表すことにする.
 
 wk と hk と r の値,エレベーターホールの位置 (xk, yk )k ,各部屋の機密レベルが与えられたとき,見学者が 2 つの事務所であわせて r 個以上の部屋を訪れることができるための,見学者の身分証の認証レベルの和の最小値を求めるプログラムを作成せよ.
 
 なお,joi 社が「ただ奇妙な発明」をすることでどうやって利益を得ているかは,社内でも最高機密であり社長以外の誰も知らない.

 

"
p00466,Receipt,"
太郎君は10冊の本を購入した．
後日，
レシートをもとに価格を調べようとしたが，
レシートには汚れがあり，
ある本の価格が読み取れなかった．
その本の価格を， 
10冊の総額と他の9冊の価格から計算することにした．
 
価格が読み取れなかった本の価格を出力するプログラムを書け．
なお，本の価格はすべて正の整数である．
また，消費税を考慮する必要はない．
 

"
p00467,Sugoroku,"
joi さんは一人ですごろく遊びをしている．
このすごろくには一直線上に n 個のマスがあり，それぞれ移動の指示が書かれている．スタート地点は 1 マス目であり，ゴールはnマス目である．
joi さんはゴールするまで次を繰り返す．
 
サイコロを振って出た目の数だけ現在のマスから進み，そのマスの指示に従う．
指示に従って移動した先のマスの指示には従わない．
 
ちょうど n マス目に止まる時だけでなく，移動先が n マス目を超える場合もゴールとなる．
 
すごろくの盤面と， m 回分のサイコロの出る目が与えられたとき，サイコロを何回振ったところでゴールするかを出力するプログラムを作成せよ．
 

"
p00468,Party,"
あなたはクリスマスパーティーに学校内の自分の友達と，自分の友達の友達を招待することにした．
あなたの通う学校の生徒数は n 人であり，それぞれの生徒には 1 から n までの番号が割り振られている．
あなたの番号は 1 である．
あなたの手元には，誰と誰が友達であるかを記したリストがある．
このリストをもとに，
あなたがクリスマスパーティーに招待する生徒数を求めるプログラムを作成せよ．
 

"
p00469,Lining up the cards,"
花子さんは n 枚（4 &le; n &le; 10）のカードを並べて遊んでいる．
それぞれのカードには 1 以上 99 以下の整数が 1 つずつ書かれている．
花子さんは，これらのカードの中から k 枚（2 &le; k &le; 4）を選び，
横一列に並べて整数を作ることにした．
花子さんは全部で何種類の整数を作ることができるだろうか．
 
例えば，1, 2, 3, 13, 21 の 5 枚のカードが与えられ，そこから 3 枚を選び整数を作ることを考える．
2, 1, 13 をこの順に並べると，整数 2113 を作ることができる．
また，21, 1, 3 をこの順に並べても，同じ整数 2113 を作ることができる．
このように，異なるカードの組み合わせから同じ整数が作られることもある．
 
n 枚のカードに書かれた整数が与えられたとき，
その中から k 枚を選び，横一列に並べることで作ることができる整数の個数を求めるプログラムを作成せよ．
 

"
p00470,Commute routes,"
joiさんが住むカナダのある都市は，南北方向にまっすぐに伸びる w 本の道路と，東西方向にまっすぐに伸びる h 本の道路により，碁盤の目の形に区分けされている．
 
南北方向の w 本の道路には，西から順に 1, 2, ... , w の番号が付けられている．また，東西方向の h 本の道路には，南から順に 1, 2, ... , h の番号が付けられている．西から i 番目の南北方向の道路と，南から j 番目の東西方向の道路が交わる交差点を (i, j) で表す．
 
joiさんは，交差点 (1, 1) の近くに住んでおり，交差点 (w, h) の近くの会社に車で通っている．車は道路に沿ってのみ移動することができる．joiさんは，通勤時間を短くするため，東または北にのみ向かって移動して通勤している．また，この都市では，交通事故を減らすために，次のような交通規則が設けられている：
 
交差点を曲がった車は，その直後の交差点で曲がることは出来ない．
 
すなわち，交差点で曲がったあとに1ブロックだけ進んで再び曲がることは許されない．このとき，joiさんの通勤経路は何通り考えられるだろうか．
 
w と h が与えられたとき，joiさんの通勤経路の個数を 100000 で割った余りを出力するプログラムを作成せよ．
 

"
p00471,Reindeer with no sense of direction,"
今年も joi 町にサンタクロースが空からやってきた．joi 町にある全ての家には子供がいるので，このサンタクロースは joi 町の全ての家にプレゼントを配ってまわらなければならない．しかし，今年は連れているトナカイが少々方向音痴であり，また建物の上以外に降りることができないため，全ての家にプレゼントを配るためには少々道順を工夫しなければならないようだ．
 
joi 町は東西南北に区画整理されており，各区画は家，教会，空き地のいずれかである．joi 町には 1 つだけ教会がある．次のルールに従い，サンタクロースとトナカイは教会から出発し，全ての家に 1 回ずつプレゼントを配った後，教会に戻る．
 
入力として町の構造が与えられたとき，サンタクロースとトナカイがプレゼントを配る道順が何通りあるかを求めるプログラムを作成せよ．
 

"
p00472,A Traveler,"
あなたは joi 街道を旅する旅人である.joi 街道は東西にまっすぐに延びた道路で,joi 街道上には n 個の宿場町がある.宿場町には西から東の順に 1 から n までの番号が付けられている.joi 街道上の最も西の宿場町が宿場町 1 であり,最も東の宿場町が宿場町 n である.
 
あなたは,宿場町 1 から出発して m 日間の旅に出ることになった.あなたの旅程は数列 a1 , a2 , . . . , am に従い,次のように決められている.ai は i 日目の移動方法を表す 0 ではない整数である.i 日目にあなたが出発する宿場町を宿場町 k とおくと,i 日目にあなたは宿場町 k から宿場町 k + ai までまっすぐに移動することを意味する.
 
宿場町の個数 n,旅の日数 m,宿場町間の距離の情報と,移動方法を表す数列a1 , a2 , . . . , am が与えられたとき,m 日間の旅におけるあなたの移動距離の合計を100000 = 105 で割った余りを求めるプログラムを作成せよ.
 


"
p00473,Dividing Snacks,"
長さ n ミリメートルの棒状のお菓子が 1 本ある(ここで n は偶数). 2 人の joi
関係者が,このお菓子を複数本に切断して,合計 n/2 ミリメートルずつに分けること
にした.
 
理由は不明であるが,このお菓子は場所によって切断のしやすさが異なっている.
2 人は,お菓子を左から 1 ミリメートルごとに調べ,各場所で切断に何秒かかるか
を割り出した.2 人がお菓子を分けるための切断にかかる秒数の最小値を求めるプ
ログラムを作成せよ.
 



"
p00474,Icicles,"
カナダに住む joi 君の家の軒下には,立派なつららが出来ている.せっかくなので,joi 君はつららについて調べてみることにした.
 
joi 君の家の軒下には n 本(2 &le; n &le; 100000 = 105 )のつららが出来ている.これらのつららは一直線上に並んでおり,軒下の左端から i cm(1 &le; i &le; n )の位置に i 本目のつららが出来ている.i 本目のつららの長さは最初 ai cm(ai は 1 以上の整数)である.これらのつららは,次のような規則によって伸びていく:
  i 本目のつららは,i − 1 本目のつららと i + 1 本目のつららの両方よりも長い場合にのみ,1 時間につき 1 cm ずつ伸びる(ただし,両端のつららに関しては片方の隣のみ考える.すなわち,1 本目のつららは 2 本目のつららより長ければ伸び,n 本目のつららは n − 1 本目のつららより長ければ伸びる).
  どのつららも,l cm(2 &le; l &le; 50000)に達した瞬間に,根元から折れる(折れたつららは,以後長さ 0 cm のつららとみなす)
.
 
最初の段階で,隣り合う 2 本のつららの長さはすべて異なっている.このとき,十分な時間が経過すれば,n 本すべてのつららが折れて長さ 0 cm となる.joi 君は,つららがこのような状態になるまでの時間を知りたくなった.
 
n 本のつららの最初の長さとつららの限界の長さ l が与えられると,すべてのつららが折れるまでにかかる時間を求めるプログラムを作成せよ.
 


"
p00475,Exposition,"
joi 市では,とある大規模な博覧会を開催することになった.
 
今回の博覧会には 2 つのテーマがあり,joi 市にある n 個の展示施設でそれぞれ,
2 つのテーマのうちどちらか一方に沿った展示を行う予定である.
 
施設の位置は平面座標 (x, y) で表される.位置 (x, y) にある施設から (x′ , y′) にある施設まで移動するためには, |x − x′| + |y − y′| だけの時間がかかる (整数 a に対して,
|a| で a の絶対値を表す).同一テーマ内での統一感を出すため,および一方のテーマのみに関心を持つ人に不便を感じさせないために,同一のテーマで展示を行っている 2 つの施設の間の移動時間がなるべく短くなるようにテーマを割りふりたい.すべての展示施設に同じテーマを割りふらない限り, どのようにテーマを割りふってもよい.
 
同一のテーマで展示を行っている 2 つの施設の間の移動時間の最大値を m とする. n 個の展示施設の位置が与えられたとき, m の最小値を求めるプログラムを作成せよ.
 


"
p00476,Dungeon,"
あなたはあるダンジョンの地下 n 階にある財宝を手に入れたいと思っている.最初,あなたは地下 1 階におり,あなたの体力は h(h は正整数) である.下の階に降りるときに,体力が消費される.あらかじめ各階における下の階に降りるときに消費される体力が分かっている.一方,各階には 1 つの回復の泉があり,泉を 1 回使うごとに回復できる体力がそれぞれ定まっている.体力が 0 以下になるとあなたは死んでしまう.また,体力が h よりも高くなることはない.回復の泉は何回でも使うことができるが,回復には時間がかかるので,あなたは泉の使用回数をできるだけ少なくしたいと考えている.
 
n ,h ,各階の下の階に降りるときに消費される体力,そして各階で回復の泉を 1 回使用したときに回復する体力が与えられたとき,体力を 0 以下にすることなく地下 n 階まで到達するために必要な泉の使用回数の最小値を求めるプログラムを作成せよ.
 
また,一度下の階に降りると,財宝を手に入れるまで上の階に戻ることはできない.
 


"
p00477,Total Time,"
太郎君は 3 カ所の店を訪ねることを日課にしている．家を出発し，決まった順番で 3 カ所の店を回った後，家に帰る．ときどき，ストップウォッチを使って，各区間を移動するのに何秒かかったかを計り，その秒数を記録する．
 
ある日の計測結果が与えられたとき，この日の移動時間の合計が何分何秒かを求めるプログラムを作成せよ． 
 


"
p00478,Ring,"
あなたは n 個の指輪を持っている．どの指輪にも，アルファベットの大文字 10 文字からなる文字列が刻印されている．指輪には文字列の最初と最後がつながった形で文字が刻印されている．指輪に刻印された文字列を逆順に読む心配はない．
 
探したい文字列が与えられたとき，その文字列を含む指輪が何個あるかを求めるプログラムを作成せよ． 
 


"
p00479,Tile,"
joi 高校では， 1 &times; 1 の正方形のタイルを使って n &times; n の正方形の壁画を作り，文化祭で展示することになった．タイルの色は，赤，青，黄の 3 種類である．壁画のデザインは次の通りである．まず，最も外側の周に赤のタイルを貼り，その内側の周に青のタイルを貼る．さらにその内側の周に黄色のタイルを貼る．これを n &times; n の正方形が埋め尽くされるまで繰り返す．用いるタイルの色は，一番外側の周から順番に赤，青，黄，赤，青，黄，…である．
 
文化祭が近づいてきたある日，壁画のうち k 枚のタイルがはがれていることが判明した．そこで，新しいタイルを購入して，はがれた箇所に新しいタイルを貼ることにした．
 
入力として壁画の一辺の長さ n と，はがれたタイルの枚数 k， k 枚のはがれたタイルの位置が与えられたとき，はがれたタイルの色を求めるプログラムを作成せよ．
 
例えば，n = 11 の場合，11 &times; 11 の壁画のデザインは下図の通りである． 
 
また，n = 16 の場合，16 &times; 16 の壁画のデザインは下図の通りである． 
 





"
p00480,A First Grader,"
joi君は小学 1 年生である．joi君は教わったばかりの足し算，引き算がとても好きで，数字が並んでいるのを見ると最後の 2 つの数字の間に「=」を入れ，残りの数字の間に必ず「+」または「-」を入れて等式を作って遊んでいる．例えば「8 3 2 4 8 7 2 4 0 8 8」から，等式「8+3-2-4+8-7-2-4-0+8=8」を作ることができる．
 
joi 君は等式を作った後，それが正しい等式になっているかを計算して確かめる．ただし，joi君はまだ負の数は知らないし，20 を超える数の計算はできない．したがって，正しい等式のうち左辺を左から計算したとき計算の途中で現れる数が全て 0 以上 20 以下の等式だけがjoi君が確かめられる正しい等式である．例えば，「8+3-2-4-8-7+2+4+0+8=8」は 正しい等式だが，途中に現れる 8+3-2-4-8 が負の数なのでjoi君はこの等式が正しいかどうか確かめることができない．
 
入力として数字の列が与えられたとき，joi君が作り，確かめることができる正しい等式の個数を求めるプログラムを作成せよ． 
 


"
p00481,Cheese,"
今年も joi 町のチーズ工場がチーズの生産を始め，ねずみが巣から顔を出した．joi 町は東西南北に区画整理されていて，各区画は巣，チーズ工場，障害物，空き地のいずれかである．ねずみは巣から出発して全てのチーズ工場を訪れチーズを 1 個ずつ食べる．
 
この町には，n 個のチーズ工場があり，どの工場も１種類のチーズだけを生産している．チーズの硬さは工場によって異なっており，硬さ 1 から n までのチーズを生産するチーズ工場がちょうど 1 つずつある．
 
ねずみの最初の体力は 1 であり，チーズを 1 個食べるごとに体力が 1 増える．ただし，ねずみは自分の体力よりも硬いチーズを食べることはできない．
 
ねずみは，東西南北に隣り合う区画に 1 分で移動することができるが，障害物の区画には入ることができない．チーズ工場をチーズを食べずに通り過ぎることもできる．すべてのチーズを食べ終えるまでにかかる最短時間を求めるプログラムを書け．ただし，ねずみがチーズを食べるのにかかる時間は無視できる． 
 


"
p00482,JOI Flag,"
情報オリンピック日本委員会では，今年の日本情報オリンピック (joi) を宣伝するために， joi のロゴをモチーフにした旗を作ることになった．旗は「良い旗」でなければならない．「良い旗」とは，アルファベットの j, o, i のいずれかの文字を，縦 m 行，横 n 列の長方形状に並べたもので， j, o, i が以下の図のように (すなわち，j の右隣に o が，その j の下隣に i が) 並んでいる箇所が旗の少なくとも 1 か所にあるものである．
 
以下の図に，「良い旗」の例を 2 つ示す．
 
以下の図に，「良い旗」ではない例を 2 つ示す．
 
いま m, n の値，および旗の一部の場所について j, o, i のどの文字にするかが決まっており，入力としてその情報が与えられる．考えられる「良い旗」は何通りあるかを計算し，その数を 100000 (=105) で割った余りを出力するプログラムを作成せよ．
 


"
p00483,Planetary Exploration,"
あなたを乗せた超時空移民船は長旅の末，ついに居住可能と思われる惑星を発見した．joi 星と名付けられたその惑星は，その名の通り「ジャングル(jungle)」，「海(ocean)」，「氷(ice)」の3 種類の地形が入り組んだ過酷な惑星である．簡単な調査により，居住予定地近辺の地図が作成された．居住予定地は南北m km, 東西n km の長方形の形をしており， 1 km 四方の正方形の区画に分けられている．区画は全部でmn 個あり，北からp 行目，西からq 列目の区画を(p, q) で表す．北西の角の区画が(1, 1) であり，南東の角の区画が(m, n) である．各区画の地形は，「ジャングル」，「海」，「氷」のいずれかであり，「ジャングル」はj, 「海」はo, 「氷」はi の英字1 文字で表される.
 
さて，詳細な移住計画を立てるにあたり， k 箇所の長方形領域内に「ジャングル」，「海」，「氷」がそれぞれ何区画含まれるかを調べることにした．
 


"
p00484,Books,"
あなたの町にはjoi 古本店という老舗の古本屋があり，あなたはjoi 古本店をよく利用している．それぞれの本には基準価格が定まっており，joi 古本店に行けばその価格で買い取ってもらえる．
 
joi 古本店では，本を小説,漫画,雑誌など10 種類のジャンルに分類して扱っている．ジャンルには1から10 までの番号が付けられている．joi 古本店には，同じジャンルの本をまとめて買い取ってもらうと高値で買い取ってくれるというサービスがある．具体的には，同じジャンルの本をまとめてt 冊買い取ってもらう場合，そのジャンルの本の一冊あたりの買取価格が基準価格よりt - 1 円高くなる．例えば，同じジャンルで基準価格100 円，120 円，150 円の本をまとめてjoi 古本店に売ったとすると，買取価格はそれぞれ102 円，122 円，152 円となる．
 
さて，あなたは一身上の都合で急遽引越しをすることになった．あなたはn 冊の本を持っているが，新しい住居にすべての本を持っていくことは困難なため，n 冊の本のうちk 冊をjoi 古本店に売ることにした．
 


"
p00485,Shopping in JOI Kingdom,"
joi 国にはn 個の町があり，それらの間はm 本の双方向に通行可能な道路で結ばれている．k 個の町にはショッピングモールがあり，国民は道路を通ってそれらの町のいずれかに行き買い物をする．
 
家の場所によっては，買い物に行くために長い距離を移動する必要があり，それは非常に不便である．国王はこの実情を把握するため，ショッピングモールのある町までの最短距離が家の場所によってどれだけ長くなりうるのかを調べることにした．家は道路の途中に建てられることもあるので(入力例1 の説明を参照)，この調査は非常に大変である．そこで国王は，優秀なプログラマーであるあなたに，調査を行うプログラムの作成を依頼した．
 


"
p00486,Walking Santa,"
昨年末，サンタクロースはjoi 村の子供たちにクリスマスプレゼントを渡すのを忘れてしまった．そこで，お詫びの気持ちとして子供たちにチョコレートケーキを届けることにした．届けるべき日は明日に迫っているので，そろそろ移動計画を考えなければならない．
 
joi 村は，南北方向にまっすぐに伸びるw 本の道路と，東西方向にまっすぐに伸びるh 本の道路により，碁盤の目の形に区分けされている. 南北方向のw 本の道路には，西から順に1, 2, ... , w の番号が付けられており，東西方向のh 本の道路には，南から順に1, 2, ... , h の番号が付けられている. 西からx 番目の南北方向の道路と，南からy 番目の東西方向の道路が交わる交差点を(x, y) で表す. joi 村にはn 軒の家があり，それらはいずれかの交差点に位置している. サンタクロースは道路に沿ってのみ移動することができる. 隣り合う交差点の間を移動するのにかかる時間を1 とする.
 
joi 村のすべての家には子供がいるので，サンタクロースはjoi 村のすべての家に1 個ずつチョコレートケーキを届けてまわらなければならない. 大切なチョコレートケーキを持ってトナカイと空を飛びまわるのはやや危険であるので，サンタクロースとトナカイはjoi 村のいずれかの交差点に降り立ち，サンタクロースがそこから歩いてチョコレートケーキを届けることにした. サンタクロースは同時に2 個以上のチョコレートケーキを運んで歩くことはしない．つまり，サンタクロースはチョコレートケーキを1 軒の家に届けるたびに降り立った交差点に戻る．
 
サンタクロースは，joi 村に降り立ってからすべての家にチョコレートケーキを届けるまでの所要時間が最小になるような移動計画を選ぶことにした．ここで，最後の家にチョコレートケーキを届けてから降り立った交差点に戻るまでの時間は所要時間に含めないことに注意せよ．また，移動にかかる時間以外は考えない．
 


"
p00487,Bug Party,"
あなたはjust odd inventions 社を知っているだろうか? この会社の業務は「ただ奇妙な発明(just odd inventions)」をすることである．ここでは略してjoi 社と呼ぶ．
 
joi 社では多くの微生物を1 つのシャーレに生きたまま閉じ込める研究をしている．調査対象の微生物はn 匹存在し，1, 2, ... , n という番号がついている．各微生物はシャーレに閉じ込められると，foo (fatally odd object) と呼ばれる有害物質を一瞬のうちにシャーレ内に放出する．各微生物が放出するfoo の量は知られている．シャーレに閉じ込められた全微生物が放出したfoo はシャーレ内の各微生物が均等に摂取する．各微生物のfoo 許容量は知られており，この量を超えてfoo を摂取すると微生物は死んでしまう．
 
微生物i のfoo 放出量はai ミリグラム，foo 許容量はbi ミリグラムである．すなわち，シャーレに微生物i1, i2, ... , ik を閉じ込めたとき，シャーレ内の各微生物はそれぞれ(ai1 + ai2 + ... + aik)/k ミリグラムのfoo を摂取し，シャーレ内の微生物i は，この摂取量がbi より大きいと死んでしまう．
 
joi 社からの委託により，あなたは出来るだけ多くの微生物をシャーレに生きたまま閉じ込めなければならない．ただし，微生物の死骸はシャーレ内の環境に悪影響を及ぼすため，シャーレ内のどの微生物もfoo の摂取で死んではならない．
 
なお，joi 社が「ただ奇妙な発明」をすることでどうやって利益を得ているかは，今もって謎であり，joi社内でも社長以外の誰も知らない．
 


"
p00488,Lunch,"
joi パスタ店では，ランチのおすすめパスタと搾りたてジュースのセットメニューが好評である．このセットメニューを注文するときは，その日の 3 種類のパスタと 2 種類のジュースから 1 つずつ選ぶ．パスタとジュースの値段の合計から 50 円を引いた金額が代金となる．
 
ある日のパスタとジュースの値段が与えられたとき，その日のセットメニューの代金の最小値を求めるプログラムを作成せよ．
 

"
p00489,Soccer,"
joi 国ではサッカーが人気であり，joi リーグというリーグ戦が毎週行われている．
 
joi リーグには n 個のチームが所属していて，1 から n までの番号がつけられている．すべての組み合わせの試合がちょうど一度ずつ行われる．つまり， n × (n - 1) / 2 試合が行われる．各試合の勝敗はそれぞれのチームの得点で決まる．勝ったチームの勝ち点は 3 点であり，負けたチームの勝ち点は 0 点である．引き分けの場合，両チームの勝ち点は 1 点である．順位は各チームの獲得した勝ち点の合計で決定し，得失点差は考えない．勝ち点の合計が等しいチームの順位は上位に揃える．
 
例として， 4 チームでのリーグ戦を考える．4 × (4 - 1) / 2 = 6 試合が行われる．それらの結果が以下の表のようになったとする．ハイフンの左側はその横のチームの得点であり，右側はその縦のチームの得点である．
 
このとき，勝ち点の最も多いチーム 2 が 1 位である．
その次に勝ち点が多いチームはチーム 1 とチーム 4 であり，これらのチームの順位は共に 2 位である．
そして勝ち点が最も少ないチーム 3 が 4 位である．
 
全ての試合の結果が与えられたとき，各チームの順位を求めるプログラムを作成せよ．
 

"
p00490,Best Pizza,"
 k 理事長は，joi 市の中心部にある joi ピザ店の常連客である．彼はある事情により，今月から節約生活を始めることにした．そこで彼は，joi ピザ店で注文できるピザのうち，1 ドルあたりのカロリーが最大となるようなピザを注文したいと思った．このようなピザを「最高のピザ」と呼ぶことにしよう．「最高のピザ」は 1 種類とは限らない．
 
joi ピザでは n 種類のトッピングから何種類かを自由に選び，基本の生地の上に載せたものを注文することができる．同種のトッピングを 2 つ以上載せることはできない．生地にトッピングを 1 種類も載せないピザも注文できる．生地の値段は a ドルであり，トッピングの値段はいずれも b ドルである．ピザの値段は，生地の値段と載せたトッピングの値段の合計である．すなわち，トッピングを k 種類 (0 ≦ k ≦ n) 載せたピザの値段は a + k × b ドルである．ピザ全体のカロリーは，生地のカロリーと載せたトッピングのカロリーの合計である．
 
生地の値段とトッピングの値段，および，生地と各トッピングのカロリーの値が与えられたとき，「最高のピザ」の 1 ドルあたりのカロリー数を求めるプログラムを作成せよ．
 

"
p00491,Pasta,"
あなたはパスタが大好物であり，毎日，晩御飯にパスタを作って食べている．あなたはトマトソース，クリームソース，バジルソースの 3 種類のパスタを作ることができる．
 
n 日間の晩御飯の予定を考えることにした．それぞれの日に 3 種類のパスタから 1 種類を選ぶ．ただし，同じパスタが続くと飽きてしまうので，3 日以上連続して同じパスタを選んではいけない．また，n 日のうちの k 日分のパスタはすでに決めてある．
 
入力として n の値と，k 日分のパスタの情報が与えられたとき，条件をみたす予定が何通りあるかを 10000 で割った余りを求めるプログラムを作成せよ．
 

"
p00492,Illumination,"
joi 社の建物は図のような 1 辺 1 メートルの正六角形をつなぎ合わせた形である．クリスマスが近づいているので，joi 社では建物の壁面をイルミネーションで飾り付けることにした．ただし，外から見えない部分にイルミネーションを施すのは無駄なので，イルミネーションは外から建物の中を通らずに行くことのできる壁面にのみ飾り付けることにした．
 図: joi 社の建物の配置の例 
上の図は上空から見た joi 社の建物の配置の例である．正六角形内の数字は座標を表す．灰色の正六角形は建物がある場所を表し，白色の正六角形は建物がない場所を表す．この例では，赤の実線で示される部分がイルミネーションで飾り付けを行う壁面となり，その壁面の長さの合計は 64 メートルとなる．
 
joi 社の建物の配置を表す地図が与えられたとき，飾り付けを行う壁面の長さの合計を求めるプログラムを作成せよ．ただし，地図の外側は自由に行き来できるものとし，隣接した建物の間は通ることはできないものとする．
 

"
p00493,Zag Numbers,"
正の整数を (先頭に 0 をつけずに) 10 進法で書いて桁の数字を順番に見ていくと増加と減少を交互に繰り返しているとき，その数は「ジグザグ数」であると呼ぶことにしよう．たとえば，2947 は桁の数字が 2 → 9 → 4 → 7 と，増加 → 減少 → 増加 の順になっているのでジグザグ数である．また，71946 は 減少 → 増加 → 減少 → 増加 の順なのでジグザグ数である．一方，123 や 71446 や 71442 や 88 はジグザグ数ではない．なお，1 桁の正の整数はジグザグ数であると考えることとする．
 
a 以上 b 以下の m の倍数のうち，ジグザグ数の個数を 10000 で割った余りを求めるプログラムを作成せよ．
 

"
p00494,JJOOII,"
joi (日本情報オリンピック) の本選に向けてプログラミングの練習をしていたあなたは，今年度のjoi の予選の問題には数値を扱う問題ばかりが出題され，文字列を扱う問題がなかったことに気がついた．そこであなたは，こっそり文字列の問題に強くなってライバルたちに差をつけることにした．
 
joi の過去問を眺めていると，j, o, i の3 種類の文字からなる文字列に慣れておく必要がありそうなことがわかった．そこで，そのような文字列について考えよう．あなたは「与えられた文字列がjoi という部分文字列をもつかどうかを答えよ」という問題を思いついたものの，これはすぐに解けてしまった．もっとレベルの高い問題を解きたいあなたは，以下のような問題を作った．
 
文字列t が文字列s の部分文字列であるとは，t の先頭および末尾に何文字か(0 文字でもよい) を付け足すとs になることである．たとえば，jjooii はojjooiiojoi の部分文字列である．一方，joi はjooi の部分文字列ではない．
 
また，0 以上の整数k に対し，レベルk のjoi 列とは，k 個の文字j，k 個の文字o，k 個の文字i をこの順に並べた文字列のことであるとする．たとえば，jjooii はレベル2 のjoi 列である．与えられた文字列の部分文字列であるjoi 列のうち，レベルが最大のものを求めたい．
 


"
p00495,Card Game is Fun,"
1 から1000 までのどれかの整数が書かれたカードがたくさんある．アンナとブルーノはそれらのカードを用いて，次のようなゲームをする．
 
アンナはa 枚，ブルーノはb 枚のカードからなる山を持つ．アンナはa 枚のカードの中から任意の何枚か（0 枚でもよい）を捨てて新しい山を作る．ブルーノはb, 枚のカードからなる山の一番上から何枚か（0枚でもよい）と，一番下から何枚か（0 枚でもよい）を捨てて新しい山を作る．ただし，捨てる際に残ったカードの並び替えは行わない．このように作った2 つの山が一致していたら，一方の山に含まれるカードの枚数が2 人の得点になる．ただし，2 つの山が一致するとは，山に含まれるカードの枚数n が同じで，かつ上からi 番目(1 &le; i &le; n) に書かれたカードの整数が全て同じであることである．
 
例えば，アンナが5 枚のカードの山を持ち，書かれている整数は上から順に1,2,3,4,5 であり，ブルーノが4 枚のカードの山を持ち，書かれている整数が上から順に3,1,4,1 であったとする．このとき，アンナが2,3,5 のカードを捨て，ブルーノが一番上の3 と一番下の1 のカードを捨てると2 人の山が一致する．このとき，残った山の一方に含まれるカードの枚数は2 枚なので，2 人は得点2 を得る．
 
2 人の得点の最大値を求めたい．
 





"
p00496,Night Market,"
太郎くんは，joi 神社で開かれる夏祭りに行くことにした．
 
joi 神社に向かう道に沿って，n 個の夜店が開かれている．それぞれの夜店には，1 からn までの番号が順番についており，遊んだ時の楽しさと遊ぶのにかかる時間がそれぞれ整数で決まっている．夜店i で遊んだ時の楽しさはai で，夜店i で遊ぶのにかかる時間はbi である．
 
また，夏祭りのイベントとして花火大会があり，時刻s に最も大きな花火が打ち上げられる．太郎くんはこの最も大きな花火を見たいと思っている．
 
太郎くんは夜店と花火の両方を楽しむために，夏祭りに到着する時刻0 から夏祭りが終わる時刻t までの予定を立てることにした．
 
太郎くんは夜店の中からk 個(1 &le; k &le; n) の夜店を選び，それぞれに対して訪れる時刻を整数で決める．同じ夜店を2 度選ぶことはできない．選ばれた夜店の番号を小さい順にy1, y2, ... yk とし，夜店yi を訪れる時刻をxyi とすると，太郎くんは夜店yi で時刻xyi から時刻xyi + byi まで遊ぶ．
 
太郎くんは夜店の番号の小さい順に遊び，同時に2 つの夜店では遊べない．また，夜店と夜店の間の移
動にかかる時間は無視できる．
 
時刻t を超えると夏祭りが終わるので，夜店で遊ぶことはできない．また，夜店で遊んでいる間は花火を見ることはできない．ただし，時刻s がある夜店で遊び始める時刻や遊び終わる時刻であった場合は，太郎くんは花火を見ることができるものとする．
 
すなわち，予定は以下の条件を満たしていなければならない．
  y1 &lt; y2 &lt; ... &lt; yk  xy1, xy2, ... xyk は整数．  0 &le; xy1 &lt; xy1 + by1 &le; xy2 &lt; xy2 + by2 &le; ... &le; xyk &lt; xyk + byk &le; t  xyi &lt; s &lt; xyi + byi となるようなi は存在しない． 
選ばれた夜店の楽しさay1, ay2, ... ayk の合計をm とする．太郎くんはm ができるだけ大きくなるように予定を立てたいと思っている．
 


"
p00497,Nails,"
joi くんは板に釘を刺して遊んでいる．下図のように，joi くんは一辺n 本の正三角形の形に釘を並べて刺した．上からa 行目(1 &le; a &le; n) にはa 本の釘が並んでいる．そのうち左からb 本目(1 &le; b &le; a) の釘を(a, b) で表す．
 
釘を頂点とする正三角形が，「各辺が全体の正三角形の辺のいずれかと平行で，全体の正三角形と同じ向き」であるとき，この正三角形を「よい正三角形」と呼ぶ．すなわち，「よい正三角形」とは，3 本の釘(a, b), (a + x, b), (a + x, b + x) を頂点とする正三角形のことである（ただしa, b, x は1 &le; a &lt; n, 1 &le; b &le; a, 1 &le; x &le; n - a) をみたす）．
 
joi くんは，輪ゴムを使って，「よい正三角形」の周りを囲うことにした．
 




図2: 輪ゴムによる「よい正三角形」の囲い方の例






"
p00498,Festivals in JOI Kingdom,"
joi 国にはn 個の街があり，それらの間はm 本の双方向に通行可能な道路で結ばれている．国民は道路を通ってそれらの街を移動する．
 
joi 国の国民には，お祭りが好きな人が多く，現在，k 個の街でお祭りが開催されており，非常に賑わっている．一方で，一部の国民はお祭りを騒がしいとして嫌い，お祭りにできるだけ近づきたくないと思っている．
 
そこで国王は，優秀なプログラマーであるあなたに，そのようなお祭りを嫌う国民のため，ある街からある街に移動するために，お祭りが開催されている街にどれだけ近づかずに移動することができるかを高速に調べることのできるプログラムの作成を依頼した．
 


"
p00499,Homework,"
冬休みの宿題に毎回苦しめられてきた joi 君が，今回は宿題を計画的に実行することにした．宿題は国語と算数のドリルであり，国語のドリルは a ページ，算数のドリルは b ページある．
 
joi 君は，1 日に国語のドリルを最大 c ページと，算数のドリルを最大 d ページ進めることができるが，宿題をするとその日は遊ぶことができない．
 
冬休みは l 日あり，joi 君は冬休み中に宿題を終わらせなければならない．joi 君が冬休み中に最大で何日遊べるかを求めるプログラムを作成せよ．
 

"
p00500,Unique number,"
joi 君は友達とゲームをすることにした．このゲームには n 人のプレイヤーが参加する．1 回のゲームのルールは次のようなものである：
 
それぞれのプレイヤーは 1 以上 100 以下の好きな整数をカードに書いて提出する．各プレイヤーは，自分と同じ数を書いた人が他にいなかった場合，自分の書いた数と同じ得点を得る．自分と同じ数を書いた人が他にいた場合は得点を得られない．
 
joi 君たちはこのゲームを 3 回行った．各プレイヤーが 3 回のゲームにおいて書いた数が与えられたとき，各プレイヤーが 3 回のゲームで得た合計得点を求めるプログラムを作成せよ．
 

"
p00501,Signboard,"
joi 君はお店の看板を作ることにした．
 
文字が等間隔に書かれた古い看板が n 枚ある．joi 君は古い看板からいくつかの文字を消すことで看板を作る．残った文字列がお店の名前になっていて，しかも残った文字が等間隔に並んでいるようにしたい．看板は 1 枚の古い看板から作らなければならず，古い看板を切ったりつなげたりしてはならない．
 
お店の名前と n 枚の古い看板の情報が与えられた時，joi 君が作ることができる看板の枚数を求めるプログラムを作成せよ．ただし， 1 枚の古い看板から作ることができる看板が複数考えられる場合も，作ることができる看板は 1 枚であると考える．
 

"
p00502,Hot days,"
日本が冬であるこの時期，南半球にあるオーストラリアでは暑い日が続いている．オーストラリアに住む ioi 君は，ある d 日間の天気予報をもとに，着る服の計画を立てることにした．i 日目 (1 ≦ i ≦ d) の最高気温は ti 度であると予報されている．
 
ioi 君は n 種類の服を持っており，それらには 1 から n までの番号がついている．服 j (1 ≦ j ≦ n) は最高気温が aj 度以上 bj 度以下の日に着るのに適している．また，それぞれの服には「派手さ」とよばれる整数が定まっており，服 j の派手さは cj である．
 
d 日間のそれぞれに対し，ioi 君は，最高気温が天気予報に従ったときに着るのに適した服のうち 1 つを着る服として選ぶ．同じ服を何度選んでもよいし，d 日間で一度も選ばれない服があってもよい．
 
似ている服を連続して着ることをなるべく避けようと思った ioi 君は，連続する日に着る服の派手さの差の絶対値の合計をできるだけ大きくしようと考えた．すなわち，i 日目に服 xi を選んだとして，値 |cx1 - cx2| + |cx2 - cx3| + … + |cxd-1 - cxd| を最大にしたい．この最大値を求めるプログラムを作成せよ．
 

"
p00503,Fish,"
オーストラリア大陸の西には，広いインド洋が広がっている．海洋研究者である joi 氏は，インド洋に生息しているある n 種類の魚の性質について研究している．
 
それぞれの魚の種類に対して，海の中に直方体状の生息範囲が定まっている．魚は境界も含めて生息範囲の中のどの場所にも移動できるが，生息範囲の外に出ることは決してない．海の中の点は，3 つの実数 (x, y, d) によって表される： (x, y, d) は，上空から見たときにある地点を基準にして東に x，北に y 進んだ位置であり，海面からの深さが d の点を表す．ただし，海面は平面であるとする．
 
joi 氏は，k 種類以上の魚の生息範囲が重なる場所がどのくらいあるかを知りたい．そのような場所全体の体積を求めるプログラムを作成せよ．
 

"
p00504,Gifts,"
オーストラリアに旅行に来た joi 君は様々な場所で観光を楽しみ，ついに帰国する日がやってきた．今，joi 君は帰りの飛行機が出発する国際空港のある町にいる．この町は東西南北に区画整理されており，各区画には道，土産店，住宅，国際空港がある．
joi 君は最も北西の区画から出発して最も南東の区画の国際空港を目指す．
 
joi 君は今いる区画から隣り合った区画に移動することができるが，住宅のある区画には入ることはできない．また飛行機の時間に間に合わせるために，今いる区画の東か南の区画にのみ移動する．ただし，時間にはいくらか余裕があるため，k 回まで今いる区画の北か西の区画へ移動することができる．
 
joi 君は土産店のある区画に入ると，日本の友人たちのためにお土産を買う．joi 君は土産店について入念に下調べをしていたので，どの土産店に行ったら何個のお土産を買うことができるかが分かっている．joi 君が購入できるお土産の個数の最大値を求めるプログラムを作成せよ．
 
ただし，お土産を買う時間は無視できるとし，同じ土産店に 2 度以上訪れたときは最初に訪れたときだけお土産を買う．
 

"
p00505,Triangle Types,"



　三角形の形は辺の長さで決まる．
順番に３つの正整数が与えられたとき，
辺の長さがそれらの値と一致する三角形が存在するかどうかを調べ，
存在するなら鋭角三角形，直角三角形，鈍角三角形のいずれかを判定し，
次の入力へ進む．
三角形が存在しないとき，
それまでに入力された，三角形，直角三角形，鋭角三角形，鈍角三角形の
個数を空白で区切って出力し，
それ以降の入力は無視して終了する．
入力の中には必ず三角形が存在しないようなものがある
と仮定してよい.
入力の行数は判らないが各行には３つの正整数が空白で区切って書かれている．
ただし，各整数は100 以下とする.
 


<!--　入力ファイルの改行コードは cr+lf である．
また，-->
出力ファイルにおいては，
出力の最後の行にも改行コードを入れること．
 

"
p00506,Common Divisors,"
　入力ファイルの１行目に正整数 n が書いてあり，
２行目には半角空白文字１つを区切りとして， 
n 個の正整数が書いてある．
n は 2 または 3 であり，
２行目に書かれているどの整数も値は 108 以下である． 
これら２個または３個の数の公約数をすべて求め，
小さい方から順に1行に1個ずつ出力せよ．
自明な公約数（「１」）も出力すること．
 
　<!--入力ファイルの改行コードは cr+lf である．
また,-->
出力ファイルにおいては，
出力の最後行にも改行コードを入れること．
 

"
p00507,The Third Permutation,"
　入力ファイルの１行目に正整数 n （n≧3）が書いてあり，
つづく n 行に異なる正整数 a1, ..., an が
１つずつ書いてある．
a1, ..., an から異なる２個を選んで作られる
順列を（数として見て）小さい順に並べたとき，
３番目に来るものを出力せよ．
 
　ただし，
例えば，a1 = 1，a4 = 11 のような場合も，
a1a4 と a4a1 は異なる順列とみなす．
また，
1≦ai≦10000 (i=1, ..., n) かつ 3≦n≦104 である．
 
<!--　入力ファイルの改行コードは cr+lf である．
また，-->
出力ファイルにおいては，
出力の最後にも改行コードを入れること．
 


"
p00508,Nearest Two Points,"
　平面上の n 個の点 p1, ..., pn が与えられたとき，
距離が最小の２点を求めたい．
 
　入力ファイルの１行目には整数 n が書いてある．
２行目から n+1 行目のそれぞれには，
２つの正整数 x, y が１つの半角空白文字を区切りとして書いてある．
i+1 行目の x, y はそれぞれ pi の x 座標，
pi の y 座標である．
これら n 点の中から最も近い２点を選んだとき，
この２点間の距離の２乗を出力せよ．
 
　ただし，
2≦n≦108 かつ -10000≦x≦10000, -10000≦y≦10000 とし，
５つの入力ファイルのうち３つでは n≦100 である．
また，どの入力ファイルにおいても，全ての座標は異なるものとする．
 
　ただし，
2&le;n&le;500000 かつ -10000&le;x&le;10000, -10000&le;y&le;10000 とし，
５つの入力ファイルのうち３つでは n&le;100 である．
また，どの入力ファイルにおいても，全ての座標は異なるものとする．
 
<!--　入力ファイルの改行コードは cr+lf である．
また，-->
出力ファイルにおいては，
出力の最後の行にも改行コードを入れること．
 

"
p00509,Palindrome,"
　ｊ中学校の運動会で次のようなクラス対抗の競技を行なうことになった． 
各クラスから生徒代表の男女 n ペア

&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;　　 (男子生徒 b1， 女子生徒 g1)， (男子生徒 b2， 女子生徒 g2)， … ， (男子生徒 bn， 女子生徒 gn)



を選び，
0 から 9 までの数字が書かれた旗を自由に選んでもらい 
（それぞれの旗は十分な個数ある）， 
横一列に並んでもらう． 
ただし， 
ペアになっている男子生徒と女子生徒は同じ番号の旗を一人１つずつ 
選ばなければならず，
 並び順は


&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;　　 b1 b2 … bn c gn … g2 g1


のように，
男子生徒達 n 人の並び順 
b1 b2 … bn とは逆の順番 
gn … g2 g1 で女子生徒達は
並ばなければならない． 
中央の c には， 
クラス担任の先生があらかじめ審判長によって指定された
番号の付いた旗を持って立つ場合と， 
立たないことを審判長に指定される場合とがある．
  
　こうして並んだ生徒達（と先生）が持った旗の番号
を 2n 桁（または 2n+1 桁）の整数と考えたとき， 
それが素数である方が勝ちである． 
ただし， 
両クラスとも素数だった場合あるいは両クラスとも素数でなかった場合には， 
数が大きい方が勝ちである． また，

　　 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0 b2 … bn c gn … g2 0
 　あるいは　 
0 b2 … bn gn … g2 0


のように先頭に 0 が来るものは， 
普通使われる数の表し方ではないので禁止されている．
 
　ｊ中学校の生徒であるあなたは， 
自分のクラスが勝つためにはどのように並ぶのがよいかを 
考えなければならない．
 
　入力ファイルの１行目に正整数 n と
１桁の整数 c（先生が持つ旗の番号）が
１つの半角空白文字で区切られて書かれている． 
c&lt;0 のときは，
先生が中央に立たないことを表わす．

与えられる入力は 1≦n≦10 である．
 
　負けない並び方の順番 

　　 
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b1 b2 … bn c gn … g2 g1 
　または　 
b1 b2 … bn gn … g2 g1


を出力せよ．
 
<!--　入力ファイルの改行コードは cr+lf である．
また，-->
出力ファイルにおいては，
出力の最後にも改行コードを入れること．

"
p00510,Tunnel,"

　n 分間にわたり，
トンネルの入口と出口で，
1分間に通過する車の数を数えたデータがある．
そのデータは，
全部で n+2 行からなり，
各行には次の内容が書かれている．
  第1行目には，正整数 n が書かれており，
      調査時間が n 分間であったことを表している．  第2行目には，正整数 m が書かれており，
      調査開始時におけるトンネル内の車の台数が m であったことを表している．  第(2+i)行目（ i = 1, 2, ... , n ) には，
      調査開始後 (i-1) 分経過した時点から i 分経過するまでの1分間に，
      入口を通過した車の台数と出口を通過した車の台数が
      １つの空白で区切られて書かれている． 
調査開始後 j 分経過した時点 ( j=0, 1, 2, ... , n ) 
におけるトンネル内の車の台数を sj とする．
sj の最大値を出力しなさい．
また，
トンネル内の車の台数が負になることは考えられないので，
sj が一度でも負になった場合は，
「エラー」の意味で 0 を出力しなさい．
ただし，
n は 10000 以下で，
トンネルの入口および出口を1分間に通過する車の台数は 100 以下である．
 
　出力ファイルにおいては，
出力の最後の行にも改行コードを入れること．
 

"
p00511,Simple Calculator,"
　加減乗除の計算をする電卓プログラムを作りなさい．
 
　入力データの各行には数と記号 +, -, *, /, = のどれか1つが交互に書いてある．
１行目は数である．
演算 +, -, *, / の優先順位（乗除算 *, / を加減算 +, - よりも先に計算すること）は考えず，入力の順序で計算し，= の行になったら，計算結果を出力する．
入力データの数値は108以下の正の整数とする．
計算中および計算結果は，0または負の数になることもあるが
 -108〜108 の範囲は超えない．
割り算は切り捨てとする．
したがって，100/3*3= は 99 になる．
 
　出力ファイルにおいては，
出力の最後の行にも改行コードを入れること．
 

"
p00512,Production,"
　ある工場では，各営業所から製品生産の注文を受けている．
前日の注文をまとめて，各製品の生産合計を求めたい．
 
　入力ファイルの１行目には注文データの数 n が書いてあり，
続く n 行には製品名と注文数が空白で区切られて書いてある．
製品名は5文字以内の英大文字で書かれている．
注文データには同じ製品が含まれていることもあり，順序はバラバラである．
 
　この注文データの中に現れる同じ製品の注文数を合計し，
出力ファイルに製品名と合計を空白を区切り文字として出力しなさい．
ただし，製品名に次の順序を付けて，その順で出力すること．
 
　順序：文字の長さの小さい順に，同じ長さのときは，前から比べて
最初に異なる文字のアルファベット順とする．
 
入力データにおける製品数，注文数とその合計のどれも106以下である．
 
　出力ファイルにおいては，
出力の最後の行にも改行コードを入れること．
 

"
p00513,Available Areas,"
　ioi 不動産ではマンションの賃貸を行なっている．
この会社が取り扱うマンションの部屋は 1ldk で，
下図のように面積が 2xy+x+y になっている．
ただし， x, y は正整数である．
 
　ioi 不動産のカタログにはマンションの面積が昇順に（狭いものから順番に）書かれているが，この中にいくつか間違い（ありえない面積のもの）が混じっていることがわかった．
 
　カタログ（入力ファイル）は n+1 行で，最初の行に部屋数が書かれていて，
続く n 行に，１行に１部屋ずつ面積が昇順に書かれている．
ただし，
部屋数は 100,000 以下，
面積は (2の31乗)-1 = 2,147,483,647 以下である．
５つの入力データのうち３つまでは，
部屋数 1000 以下，面積 30000 以下である．
 
　間違っている行数（ありえない部屋の数）を出力しなさい．
 
　出力ファイルにおいては，
出力の最後の行にも改行コードを入れること．
 

"
p00514,Beads,"
　ioi 宝飾店ではビーズのネックレスを売り出すことになった．
ビーズは n 色あり，
これらをそれぞれ m 個以上ずつ選んで r 個のビーズからなるネックレスとし，
１つずつ化粧箱に入れて販売したい．
色の組合せが違うものをすべて１つずつ用意したいが，
化粧箱を何個用意したらよいか店員の誰もわからない．
n, m, r によっては現実的でない個数の化粧箱が必要となるのではないかと店長は心配している．
ioi 宝飾店の店長に代わって，
必要な化粧箱の個数を出力するプログラムを作成しなさい．
n, m, r は整数で，0≦m＜n≦r≦10000 である．
 
　入力ファイルは１行で，
空白を区切りとして n, m, r がこの順に書いてある．
入力ファイル５つのうちの３つでは n≦10 である．
 
　出力ファイルにおいては，
出力の最後の行にも改行コードを入れること．
 

"
p00515,Average Score,"
joi 高校の授業には，太郎君，次郎君，三郎君，四郎君，花子さんの 5 人の生徒が参加した．
 
この授業では，期末試験を実施した．期末試験は，5 人全員が受験した．期末試験の点数が 40 点以上の生徒は，期末試験の点数がそのまま成績になった．期末試験の点数が 40 点未満の生徒は全員，補習を受け，成績が 40 点になった．
 
5 人の生徒の期末試験の点数が与えられたとき，5 人の成績の平均点を計算するプログラムを作成せよ．
 

"
p00516,Vote,"
20xx年に東京で世界的なスポーツ大会が開かれることになった．プログラミングコンテストはスポーツとして世界で楽しまれており，競技として採用される可能性がある．採用される競技を決める審査委員会について調べたところ，次のようなことが分かった．
 
審査委員会のために，候補となる n 個の競技を面白い方から順番に並べたリストが作成された．リストの上から i 番目には i 番目に面白い競技が書かれている．それを競技 i とする．さらに競技 i の開催に必要な費用 ai が書かれている．
 また，審査委員会は委員 1 から委員 m までの m 人の委員で構成されている．委員 j は自分の審査基準 bj をもっており，開催に必要な費用が bj 以下の競技のうち最も面白いものに 1 票を投票した．
 
どの委員の審査基準に対しても，少なくとも 1 つの競技は開催に必要な費用が審査基準以下であった．したがって，委員は全員 1 票を投票した．
 
最も多く票を獲得した競技は 1 つだけであった．
 
競技のリストと委員の情報が与えられたとき，最も多く票を獲得した競技の番号を求めるプログラムを作成せよ．
 


"
p00517,Super Metropolis,"
joi 君は，ioi 国にある超都という都市の観光ツアーを計画することになった．
 
超都は，南北方向にまっすぐに伸びる w 本の道路と，東西方向にまっすぐに伸びる h 本の道路により，碁盤の目の形に区分けされている．
 
南北方向の w 本の道路には，西から順に 1, 2, ... , w の番号が付けられている．また，東西方向の h 本の道路には，南から順に 1, 2, ... , h の番号が付けられている．西から i 番目の南北方向の道路と，南から j 番目の東西方向の道路との交差点を (i, j) で表す．
 
さらに，下図のように，各交差点からは１つ北東の交差点への道がある（最も北の道路上の交差点と最も東の道路上の交差点を除く）．
また，１つ南西の交差点への道もある（最も南の道路上の交差点と最も西の道路上の交差点を除く）．
すなわち，交差点 (i, j) からは，もし交差点 (i - 1, j), (i + 1, j), (i, j - 1), (i, j + 1) があるときは，それらの交差点へ１本の道を使って行くことが出来る．それに加え，もし交差点 (i - 1, j - 1), (i + 1, j + 1) があるときは，それらの交差点へも１本の道を使って行くことが出来る．
 
joi 君はツアーの計画として既に n 個の観光スポットをどのような順番で訪れるかを決めている．
i 番目 (1 ≦ i ≦ n) に訪れる観光スポットは交差点 (xi, yi) にある．
joi 君は，ツアーにかかる時間をできるだけ短くするために，通らなければならない道の本数を少なくしたい．
観光スポットを事前に決めた順番で訪れるために通らなければならない道の本数の合計の最小値を求めるプログラムを作成せよ．
 
ただし，ツアーの開始地点は交差点 (x1, y1) である．また，ツアーの途中で超都の外へ移動してはならないものとする．
また，joi 君は，観光スポットのある交差点を，観光スポットを訪れずに通過することもできる．
 
「道の本数の合計」についての補足．ツアーの途中で同じ道を２回以上通ることもできる．その場合，「道の本数の合計」としては，その道については通った回数だけ重複して数えるものとする．
 

"
p00518,Schedule,"
ioi 高校のプログラミング部には，j 君と o 君と i 君の 3 人の部員がいる．
プログラミング部では，部活のスケジュールを組もうとしている．
 
今，n 日間の活動のスケジュールを決めようとしている．
各活動日のスケジュールとして考えられるものは，各部員については活動に参加するかどうかの 2 通りがあり，部としては全部で 8 通りある．
部室の鍵はただ 1 つだけであり，最初は j 君が持っている．
各活動日には，その日の活動に参加する部員のうちのいずれか 1 人が鍵を持っている必要があり，活動後に参加した部員のいずれかが鍵を持って帰る．
 
プログラミング部では，活動日には毎回必ず活動が行われるように，あらかじめ各活動日の責任者を定めた．
責任者は，必ずその日の活動に出席しなければならない．
 
スケジュールを決めようとしている日数と，各活動日の責任者が誰であるかの情報が与えられた時，すべての活動日に部活動を行うことができるようなスケジュール表として考えられるものの数を 10007 で割った余りを求めるプログラムを作成せよ．
ただし，部活の終了時に鍵を持って帰る部員は，その日の活動に参加している部員の誰でもよく，最終日は誰が鍵を持って帰ってもよいものとする．
 

"
p00519,Taxis,"
ioi 国は町 1 から町 n までの n 個の町からなり，町と町とは道路で結ばれている．ioi 国には k 本の道路があり，すべての道路は異なる 2 つの町を結んでいる．車は道路を双方向に自由に移動できるが，道路以外を通ってある町から別の町に行くことはできない．
 
ioi 国の町 1 に住む joi 君は，町 n に住む祖母の家までタクシーで行くことにした．ioi 国にはタクシー会社 1 からタクシー会社 n までの n 個のタクシー会社がある．ioi 国のタクシー会社には次のような少々特殊な規則がある．
 タクシー会社 i のタクシーには，町 i でのみ乗車できる． タクシー会社 i のタクシーの運賃は，利用した距離によらず ci である． タクシー会社 i のタクシーは，乗車してから連続して最大 ri 本の道路しか通ることができない． 
たとえば r1 = 2 の場合，町 1 からタクシー会社 1 のタクシーに乗車すると，最大 2 本の道路しか通ることができないため，道路を 3 本以上通るためには途中の町でタクシーを乗り換える必要がある．
 
joi 君は町以外の地点でタクシーに乗ったりタクシーから降りたりすることはできない．また，タクシー以外の移動手段を用いることもできない．joi 君が町 n に到達するために必要な運賃の合計の最小値を求めるプログラムを作成せよ．
 

"
p00520,Xiao Long Bao,"
joi 君はお昼ごはんに，中華料理屋で小籠包を食べることにした．
小籠包とは，具と熱いスープを小麦粉の皮で包んだ料理であり，食べるときにスープが周囲に飛び散ることで知られている．
 
joi 君が注文した小籠包のセットは，具やスープの異なる n 個の小籠包からなる．
n 個の小籠包は等間隔に一列に並んでおり，順番に 1 から n の番号がつけられている．
 i 番目の小籠包と j 番目の小籠包の間の距離は絶対値 |i - j| である．
 
joi 君は小籠包をある順番で食べていく．
最初，すべての小籠包のおいしさは 0 である．
 i 番目の小籠包を食べると，周囲にその汁が飛び散り，まだ食べられていない小籠包のうち，小籠包 i からの距離が di 以下の小籠包に汁がかかる．汁がかかった小籠包はおいしさが
 ai 増える．すなわち， i 番目の小籠包を食べたときに，
 j 番目の小籠包 (1 &le; j &le; n かつ i - di &le; j &le; i + di) がまだ食べられずに残っているならば，
 j 番目の小籠包のおいしさが ai 増える．
 
joi 君は，食べる順番を工夫することで，食べる小籠包のおいしさの合計を最大化したい．
もっとも良い順番で食べたときの，joi 君が食べる小籠包のおいしさの合計を求めるプログラムを作成せよ．
 


"
p00521,JOI Emblem,"
情報オリンピック日本委員会では，台湾大会に向かう選手を応援するために新しいjoi 旗を作成することにした．

joi 旗は，正方形が縦に $m$ 行，横に $n$ 列並んだ形をしており，各正方形には j，o，i のいずれかの文字が1 つずつ書かれている．
 
情報オリンピック日本委員会はjoi 旗とは別にjoi 紋章というものを決めている．joi 紋章は，正方形が縦に2 行，横に2 列並んだ形をしており，各正方形にはj，o，i のいずれかの文字が1 つずつ書かれている．
 
joi 旗に含まれるjoi 紋章の個数とは，joi 旗に含まれる縦2 行，横2 列の領域のうち，その領域のj，o，i の配置がjoi 紋章と(回転や裏返しをせずに) 一致しているものの個数のことである．条件を満たす縦2 行，横2 列の領域同士が重なっていてもそれらを別々に数えるものとする．

情報オリンピック日本委員会は古いjoi 旗と1 枚の白紙を持っている．白紙はjoi 旗を構成する正方形1 個分の大きさで，j，o，i のうち好きな1 文字を書き込むことができる．情報オリンピック日本委員会は以下のいずれか1 つの操作をして，新しいjoi 旗を作成することにした．
 古いjoi 旗に対して何も操作せず，そのまま新しいjoi 旗とする．白紙は使用しない． 白紙に1 文字書き込み，古いjoi 旗のいずれかの正方形に重ねて貼り付けることで古いjoi 旗のうち1 箇所を変更する．変更後のjoi 旗を新しいjoi 旗とする． 
情報オリンピック日本委員会は新しいjoi 旗に含まれるjoi 紋章の個数をできるだけ多くしたいと思っている．あなたは新しいjoi 旗に含まれるjoi 紋章の個数の最大値を求めることになった．
 




"
p00522,IOI Manju,"
incredible okashi inc. は「途方もなくおいしいお菓子(incredible okashi)」を製作している会社である．ここでは略してioi 社と呼ぶ．ioi 社は特製のioi 饅頭を作ったので，それを販売することになった．ioi 社は$m$ 種類の饅頭を1 個ずつ作った．作られた$m$ 個の饅頭はすべて同じ大きさであるが，ひとつひとつ異なる味なので価格は様々であり，$i$ 番目$(1 \leq i \leq m)$ の饅頭の価格は$p_i$ 円である．
 
ところで，あなたはjust odd inventions 社を知っているだろうか？ この会社の業務は「ただ奇妙な発明(just odd inventions)」をすることである．ここでは略してjoi 社と呼ぶ．ioi 社は，饅頭を詰めるための高級な箱をjoi 社に発注することになった．joi 社の製作する饅頭用の箱は$n$ 種類あり， $j$ 番目$(1 \leq j \leq n)$の箱は最大で$c_j$ 個の饅頭を詰められる大きさであり，販売価格は$e_j$ 円である．これらの$n$ 種類の箱のうちの何種類か(0 種類以上$n$ 種類以下) を1 個ずつ発注し，饅頭をそれらの箱に詰め分けてセットで販売することになった．各饅頭セットの価格は，それに含まれる饅頭の価格の合計である．
 
すべての饅頭セットが売れるとした場合，ioi 社が得ることができる利益の最大値はいくらだろうか．ここで利益とは，販売した饅頭セットの価格の合計から，発注した箱の価格の合計を引いた値である．なお，箱に詰めなかった饅頭については，ioi 社のスタッフがおいしくいただくため，利益には影響しないものとする．
 



"
p00523,Baumkuchen,"
joi 君は妹のjoi 子ちゃんとjoi 美ちゃんと一緒におやつを食べようとしている．今日のおやつは3 人の大好物のバームクーヘンだ．
 
バームクーヘンは下図のような円筒形のお菓子である．3 人に分けるために，joi 君は半径方向に刃を3回入れて，これを3 つのピースに切り分けなければならない．ただしこのバームクーヘンは本物の木材のように固いので，刃を入れるのは簡単ではない．そのためこのバームクーヘンにはあらかじめ $n$ 個の切れ込みが入っており，joi 君は切れ込みのある位置でのみ切ることができる．切れ込みに1 から $n$ まで時計回りに番号をふったとき，$1 \leq i \leq n - 1$ に対し， $i$ 番目の切れ込みと$i + 1$ 番目の切れ込みの間の部分の大きさは $a_i$ である．また $n$ 番目の切れ込みと1 番目の切れ込みの間の部分の大きさは $a_n$ である．
 




図1: バームクーヘンの例 $n = 6, a_1 = 1, a_2 = 5, a_3 = 4, a_4 = 5, a_5 = 2, a_6 = 4$





"
p00524,Sugar Glider,"
フクロモモンガのjoi 君が住んでいる森にはユーカリの木が $n$ 本生えており，それらの木には1 から $n$ の番号がついている．木 $i$ の高さは $h_i$ メートルである．
 
joi 君が相互に直接飛び移ることのできる木の組が $m$ 組あり，各組の木の間を飛び移るためにかかる時間が定まっている．joi 君が木の間を飛び移っている間は，地面からの高さが1 秒あたり1 メートル下がる．すなわち，joi 君の現在の地面からの高さが $h$ メートル，木の間を飛び移るためにかかる時間が $t$ 秒であるとき，飛び移った後の地面からの高さは $h - t$ メートルとなる．ただし，$h - t$ が0 よりも小さくなる場合や行き先の木の高さよりも大きくなる場合は飛び移ることができない．
 
さらに，joi 君は木の側面を上下に移動することによって，地面からの高さを0 メートルから今いる木の高さの範囲で増減させることができる．joi 君が地面からの高さを1 メートル増加または減少させるためには1 秒の時間がかかる．
 
joi 君は，木1 の高さ$x$ メートルの位置から木$n$ の頂上(高さ$h_n$ メートルの位置) に行こうとしており，そのためにかかる時間の最小値を知りたい．
 



"
p00525,Cutting,"
joi 君はペーパークラフトが趣味である．今日もjoi 君はペーパークラフトの作品を作ろうとしている．まず，joi 君は設計図にしたがって1 枚の長方形の紙に $n$ 本の切り取り線を印刷した．各切り取り線は，紙の縦または横の辺に平行な線分である．
 
紙を切り出してできるすべての部分は作品の中で何らかの部品として用いられる．当然のことながら，
部品数の多い作品は製作が大変である．joi 君は，すべての切り取り線にしたがって紙を切り出したとき，
紙がいくつの部分に分かれるかを知りたい．
 





"
p00526,Illumination,"
joi 高校の文化祭では毎年廊下に電飾が飾られる．電飾は n 個の電球で構成されており，電球は廊下の西側から東側に一列に並んでいる．各電球は明かりがついているか，ついていないかのいずれかの状態である．
 
joi 高校の倉庫には電球を操作する機械が眠っている．この機械は電飾内で連続した電球を指定すると，指定された電球のうち，明かりがついている電球全てを明かりがついていない状態にし，明かりがついていない電球全てを明かりがついている状態にする．ただし，機械は老朽化のため，1 回しか使用できない．
 
joi 高校の生徒達は明かりがついている電球とついていない電球が交互に並んだ列（このような電球の列を交互列と呼ぶ）が好きである．そこで，この機械を必要ならば1 回だけ使って，できるだけ長い交互列を含む電飾を作ることにした．
 

"
p00527,Take the 'IOI' train,"
ioi 国ではこのたび新たに鉄道を敷設した．ioi 国の鉄道を走る列車はいくつかの車両が連結されたものであり，車両には i, o の 2 種類がある．車両はそれぞれ異なる種類の車両としか連結できない．また，列車に運転席を設ける関係上，列車の両端の車両は種類 i でなければならない．列車は車両の種類を表す文字を順につなげた文字列で表され，列車の長さはその文字列の長さであるとする．たとえば， ioioi の順に車両を連結すると長さ 5 の列車を編成でき，また車両 i は単独で長さ 1 の列車である．車両を oioi や iooi といった順に並べても列車を編成することはできない．
 
いくつかの車両が 2 つの車庫に格納されている．それぞれの車庫の中には車両が一列に並んでいる．列車を編成するときは車庫から車両を出してきて車庫前で連結していく．車庫から出せる車両は最も車庫の入り口に近い車両のみであるが，どちらの車庫から車両を出すかの順番については自由である．
 
列車を編成する前に，車両を好きなだけ車庫から出して別の待機用レールに移すことができる．一度待機用レールに移した車両は今後列車を編成するために使うことはできない．また，一度列車の編成を始めるとその編成が終わるまでの間は車両を車庫から待機用レールに移すことはできない．
 
列車を編成するとき，車庫内の全ての車両を使い切る必要はない．すなわち，列車の編成を終えた後，車庫内に使われなかった車両が残っていても構わない．
 
ioi 国では鉄道に乗る人がとてもたくさんいると考えられているので，できるだけ長い列車を編成したい．
 
図: 列車を編成している途中であり，このとき車庫にある車両を待機用レールに移すことはできない．この図は入出力例1 に対応している．
 

"
p00528,Modern Mansion,"
あなたは，ある大きな屋敷に迷い込んでしまった．この屋敷は正方形の部屋が東西南北に格子状に，東西方向に m 列，南北方向に n 行の合計 m &times; n 個並んだ構造をしている．西から x 列目(1 &le; x &le; m)，南から y 行目(1 &le; y &le; n) にある部屋を(x, y) で表す．
 
東西南北に隣り合う 2 部屋の間は，壁の中央にある扉により結ばれている．それぞれの扉は，閉じていて通行不可能な状態か，開いていて通行可能な状態のいずれかにある．扉が開いているとき，それらの部屋の中央間を移動するのに 1 分間かかる．また，いくつかの部屋の中央にはスイッチがあり，スイッチを 1 分間押し続けると，屋敷内のすべての扉の開閉の状態が切り替わる．
 
今，東西に隣り合う 2 部屋を結ぶすべての扉は閉じていて，南北に隣り合う 2 部屋を結ぶすべての扉は開いている．あなたは今部屋 (1, 1) の中央にいて，部屋 (m, n) の中央まで最短時間で移動したい．
 

"
p00529,Tower of JOIOI,"
joioi の塔とは，1 人で遊ぶ円盤を使ったゲームである．
 
このゲームは，j，o，i のいずれかの文字が書かれたいくつかの円盤を用いて行う．円盤は直径が互いに異なり，ゲーム開始時にはこれらの円盤は直径の大きいものから順に下から上に向かって積まれている．あなたは，これらの円盤を用いて，出来るだけ多くのミニ joioi の塔を作りたい．ミニ joioi の塔とは 3 枚の円盤からなり，円盤の直径が小さいものから順に読んで joi もしくは ioi と読めるものである．ただし，同じ円盤を2 度以上使うことはできない．
 
図: joioii からはミニ joioi の塔が 2 つ作れる
 


"
p00530,Bubble Sort,"
バブルソートとは，列をソートするアルゴリズムの 1 つである．長さ n の数列 a を昇順にソートしたいとしよう．バブルソートは，隣り合う 2 つの数で大小関係が崩れているものがあれば，それらの位置を交換する．これを，数列を前から順に走査しながら行う．すなわち，ai &gt; ai+1 となっている場所があれば，その 2 数を交換するということを，i = 1, 2, ... , n − 1 に対してこの順で行うのが 1 回の走査である．この走査を n − 1 回繰り返すことで，数列を昇順にソートできることが知られている．
 
数列 a のバブルソートによる交換回数とは，数列 a に上記のアルゴリズムを適用した時に，整数の交換が行われる回数である．（バブルソートとして知られるアルゴリズム及び実装には，ループの順番や範囲，及び終了条件など，細かな差異がある場合がある．ただし，同じ数列に適用した際の整数の交換回数はそれらの差異により変化しないことが知られている．）
 
例えば，以下のプログラムは長さ n の整数の配列 a をバブルソートによりソートする関数を c 言語で記述したものである．
 


void bubble_sort(int *a, int n) {
  int i, j;
  for (i = 0; i < n - 1; ++i) {
    for (j = 0; j < n - 1; ++j) {
      if (a[j] > a[j + 1]) {
        /* 以下3 行が1 回の整数の交換に相当*/
        int x = a[j];
        a[j] = a[j + 1];
        a[j + 1] = x;
      }
    }
 }
}



"
p00531,Water Rate,"
joi 君が住んでいる地域には水道会社が x 社と y 社の 2 つある．2 つの会社の 1 ヶ月の水道料金は，1 ヶ月の水道の使用量に応じて次のように決まる．
 x 社： 1 リットル あたり a 円かかる． y 社： 基本料金は b 円である．使用量が c リットル以下ならば，料金は基本料金 b 円のみがかかる．使用量が c リットルを超えると基本料金 b 円に加えて追加料金がかかる．追加料金は使用量が c リットルを 1 リットル超えるごとに d 円である． 
joi 君の家では 1 ヶ月の水道の使用量が p リットルである．
 
水道料金ができるだけ安くなるように水道会社を選ぶとき，joi 君の家の 1 ヶ月の水道料金を求めよ．
 

"
p00532,Christmas Party,"
joi 君は友達 1 から友達 n までの n 人の友達を招いてクリスマスパーティーを行った．クリスマスパーティーも盛り上がってきたところで，友達と一緒に次のようなゲームを行うことになった．
 
最初に joi 君は n 人の友達の中から 1 人を選ぶ．以降はその友達をターゲットと呼ぶことにする．
 
joi 君は，ターゲットとして選んだ友達に，その人がターゲットであることをこっそり伝える．ターゲット以外の友達は，誰がターゲットかを知ることはできない．
 
ターゲット以外の友達はそれぞれ，ターゲットが誰かを予想して，その人の名前を紙に記入する．ターゲットは自分自身の名前を紙に記入する．
 
すべての人の記入が終わった後，joi 君はターゲットの名前を発表する．
 
予想が当たった人は 1 点を得る．なお，ターゲットは自分自身の名前を紙に記入しているので，必ず 1 点を得る．予想が外れた人には得点は与えられない．
 
それに加えて，予想が外れた人の人数を x 人としたとき，ターゲットは追加で x 点を得る．
 
joi 君たちはこのゲームを m 回行った．それぞれの友達に対して，m 回のゲームにおける合計得点を求めよ．
 

"
p00533,Weather Forecaster,"
joi 市は南北方向に h キロメートル，東西方向に w キロメートルの長方形の形をしており，h &times; w 個の 1 キロメートル四方の小区画に区切られている．北から i 番目，西から j 番目の小区画を (i, j) と表す．
 
各小区画は上空に雲があるか雲がないかのどちらかである．すべての雲は，1 分経つごとに 1 キロメートル東に移動する．今日は実に天気が良いため，joi 市の外から joi 市内に雲が移動してくることはない．
 
今，各小区画の上空に雲があるかないかがわかっている．気象予報士であるあなたは，各小区画について，今から何分後に初めてその小区画の上空に雲が来るかを予測することになった．
 
各小区画について，今から何分後に初めてその小区画の上空に雲が来るか求めよ．
 

"
p00534,Silk Road,"
現在カザフスタンがある地域には，古くは「シルクロード」と呼ばれる交易路があった．
 
シルクロード上には n + 1 個の都市があり，西から順に都市 0, 都市 1, ... , 都市 n と番号がつけられている．都市 i - 1 と都市 i の間の距離 (1 &le; i &le; n) は di である．
 
貿易商である joi 君は，都市 0 から出発して，都市を順番に経由し，都市 n まで絹を運ぶことになった．都市 0 から都市 n まで m 日以内に移動しなければならない．joi 君は，それぞれの日の行動として，以下の 2 つのうちいずれか 1 つを選ぶ．
 移動： 現在の都市から 1 つ東の都市へ 1 日かけて移動する．現在都市 i - 1 (1 &le; i &le; n) にいる場合は，都市 i に移動する． 待機： 移動を行わず，現在いる都市で 1 日待機する． 
移動は大変であり，移動するたびに疲労度が溜まっていく．シルクロードでは日毎に天候の変動があり，天候が悪い日ほど移動には苦労を要する．
 
joi 君が絹を運ぶのに使える m 日間のうち j 日目 (1 &le; j &le; m) の天候の悪さは cj であることが分かっている．都市 i - 1 から都市 i (1 &le; i &le; n) に j 日目 (1 &le; j &le; m) に移動する場合，疲労度が di &times; cj だけ溜まってしまう．移動を行わず待機している日は疲労度は溜まらない．
 
joi 君は，それぞれの日の行動をうまく選ぶことで，できるだけ疲労度を溜めずに移動したい．joi 君が m 日以内に都市 n に移動するときの，移動を開始してから終了するまでに溜まる疲労度の合計の最小値を求めよ．
 

"
p00535,Sandcastle,"
joi 君は家族とともに海水浴に来た．さんざん泳いで泳ぎ疲れた joi 君は，次は砂浜で砂の城を作って遊んだ．しばらくして砂遊びにも飽きると，joi 君は城を放置してまた海に泳ぎに向かった．
 
joi 君が作った城は，砂浜のうちのある長方形の領域に含まれている．この長方形の領域は，東西南北にマス目状に区切られている．各マスは，joi 君が作った城の一部であるマス (以下，「城マス」と呼ぶ) かそうでないマス (以下，「更地マス」と呼ぶ) のいずれかである．それぞれの城マスには「強度」と呼ばれる 1 以上 9 以下の整数が定まっている．長方形の領域の外縁部，すなわち外側と接しているマスには城マスは存在しない．
 
やがて潮が満ちてきて，長方形の領域にも波が押し寄せてくるようになった．波が 1 つ押し寄せてくるたびに，城マスのうち次の条件を満たすものはすべて一斉に崩壊して，更地マスに変化する．
 条件： 周囲の 8 マス (東西南北および北東，北西，南東，南西方向に隣接するマス) にある更地マスの数が，そのマスの強度の値以上である．
 
波が引くと，まもなく次の波が押し寄せて来る．
 
十分多くの波が押し寄せると，城がすべて崩れてしまうか，丈夫な部分だけが残るかして，波が押し寄せてきても 1 つも城マスが崩壊しないような状態に落ち着く．1 つ以上の城マスを崩壊させるような波が押し寄せてくる回数を求めよ．
 

"
p00536,Treasures,"
盗賊の anna と bruno は大富豪の邸宅に忍び込み，財宝 1 から財宝 n までの n 個の財宝を見つけた．これらの財宝を anna と bruno で分配することになった．財宝のうちのいくつかを anna が取り，残りの財宝のうちのいくつかを bruno が取る．同じ財宝を 2 人が取ることはできない．anna や bruno は財宝を 1 個も取らなくてもよい．また，残った財宝は邸宅に残しておくので，2 人とも取らない財宝があってもよい．
 
それぞれの財宝には「市場価値」と「貴重度」という 2 つの値が定まっている．anna が取った財宝の市場価値の合計と bruno が取った財宝の市場価値の合計の差の絶対値が d 以下なら，anna は公平だと思って満足する．一方，bruno は，anna より貴重度の大きい財宝が欲しいと思っている．
 
anna が満足するように財宝を分配したときの，bruno が取った財宝の貴重度の合計から anna が取った財宝の貴重度の合計を引いた値の最大値を求めよ．
 

"
p00537,Railroad Trip,"
joi 国の鉄道に乗車する方法として，紙の切符で乗車する方法と，ic カードで乗車する方法がある．
  鉄道 i に紙の切符で乗車する場合の運賃は ai 円である．  鉄道 i に ic カードで乗車する場合の運賃は bi 円である．ただし，ic カードで鉄道 i に乗車するには，鉄道 i で使える ic カードを事前に購入しておく必要がある．鉄道 i で使える ic カードを購入するには ci 円かかる．一度購入した ic カードは，何度でも使用することができる． 
ic カードの方が金額の処理が簡単になるため，ic カードで乗車する場合の運賃の方が紙の切符で乗車する場合の運賃よりも安い．すなわち， i = 1, 2, . . . , n − 1 に対して， ai &gt; bi が成り立つ．ic カードの仕様は鉄道ごとにすべて異なるため，どの i に対しても，鉄道 i で使える ic カードを他の鉄道で使用することはできない．
 
あなたは，joi 国じゅうを旅行することにした．都市 p1 から出発し，p2, p3, . . . , pm の順に都市を訪れる予定である．旅行は m − 1 日間の行程からなる．j 日目 (1 &le; j &le; m − 1) に都市 pj から都市 pj+1 に鉄道で移動する．この際，いくつかの鉄道を乗り継いで移動することもある．また，同じ都市を二度以上訪れることがあるかもしれない．joi 国の鉄道は速いので，どの都市からどの都市へも 1 日で移動することができる．
 
あなたは現在，どの鉄道の ic カードも持っていない．あなたは，あらかじめ，いくつかの鉄道の ic カー
ドを購入し，この旅行にかかる金額，すなわち，ic カード購入費用と乗車した鉄道の運賃の和をできるだけ少なくしたい．
 

"
p00538,Cake 2,"
joi くんと ioi ちゃんは双子の兄妹である．joi くんは最近お菓子作りに凝っていて，今日も joi くんはケーキを焼いて食べようとしたのだが，焼きあがったところで匂いをかぎつけた ioi ちゃんが来たので 2人でケーキを分けることになった．
 
ケーキは円形である．ある点から放射状に切り目を入れ，ケーキを n 個のピースに切り分け，ピースに 1 から n まで反時計回りに番号をつけた．つまり，1 &le; i &le; n に対し，i 番目のピースは i − 1 番目と i + 1 番目のピースと隣接している (ただし 0 番目は n 番目，n + 1 番目は 1 番目とみなす) ．i 番目のピースの大きさは ai だったが，切り方がとても下手だったので ai はすべて異なる値になった．
 
この n 個を joi くんと ioi ちゃんで分けることにした．分け方は次のようにすることにした：
  まず joi くんが n 個のうちの好きな 1 つを選んで取る．  その後，ioi ちゃんからはじめて ioi ちゃんと joi くんが交互に残りのピースを 1 つずつ取っていく．ただし，両隣のピースのうち少なくとも一方が既に取られているようなピースしか取ることができず，取れるピースが複数あるときは，ioi ちゃんはそのうち最も大きいものを選んで取り，joi くんはそのうちで好きなものを選んで取ることができる．
 
joi くんは，自分が最終的に取るピースの大きさの合計を最大化したい．
 

"
p00539,JOI Park,"
20xx 年に ioi 国で行われるオリンピックに備え，ioi 国にある joi 公園を整備することになった．joi公園には n 個の広場があり，広場には 1 から n の番号がついている．広場を繋ぐ m 本の道があり，道には 1 から m の番号がついている．道 i (1 &le; i &le; m) は広場 ai と広場 bi を双方向に繋いでおり，長さは di である．どの広場からどの広場へもいくつかの道を辿って行くことができる．
 
整備計画では，まず，0 以上の整数 x を選び，広場 1 からの距離が x 以下であるような広場 (広場 1 を含む) どうしをすべて相互に地下道で結ぶ．ただし，広場 i と広場 j の距離とは，広場 i から広場 j に行くときに通る道の長さの和の最小値である．整備計画では地下道の整備コストに関する整数 c が定まっている．地下道の整備にかかるコストは c &times; x である．
 
次に，地下道で結ばれた広場どうしを結ぶ道をすべて撤去する．道の撤去にコストはかからない．最後に，撤去されずに残った道をすべて補修する．長さ d の道を補修するためにかかるコストは d である．整備計画実施前の joi 公園には地下道はない．joi 公園の整備にかかるコストの和の最小値を求めよ．
 

"
p00540,Ball,"
ioi 王国では，王女である joi 姫の誕生日を祝って舞踏会が開かれることになった．
 
舞踏会には n 人の貴族が参加する予定である．n は奇数である．貴族には 1 から n までの番号が付けられている．それぞれの貴族には踊りのうまさという整数が定められており，貴族 i (1 &le; i &le; n) の踊りのうまさは di である．
 
舞踏会では joi 姫を含む n + 1 人で 2 人ずつ組を作って踊る．ioi 王国では，上級者が初級者を補助できるように，伝統的に以下の方法で踊りの組を決定している．
  最初に，n 人の貴族が 1 列に並ぶ．  列に並んでいる貴族が 1 人になるまで，以下の操作を繰り返す．
- 列の先頭から 3 人の貴族の踊りのうまさを調べる．
- その 3 人の貴族の中で，最も踊りのうまさが大きい貴族を a とおく．ただし，複数いる場合は，最も踊りのうまさが大きい貴族の中で，最も番号の小さい貴族 を a とおく．
- その 3 人の貴族の中で，最も踊りのうまさが小さい貴族を b とおく．ただし，複数いる場合は，最も踊りのうまさが小さい貴族の中で，最も番号の大きい貴族 を b とおく．
- a と b が列から抜けて組になる．
- 残った 1 人は列の最後尾に移動する．  最終的に残った 1 人が joi 姫と組になる． 
貴族 1 から貴族 m (1 &le; m &le; n − 2) の m 人の貴族については，すでに初期状態で列の何番目に並ぶのかが決まっている．残りの n − m 人の貴族の並び方は国王が自由に決めることができる．
 
joi 姫は踊りを学んだばかりなので，国王は joi 姫と組になる貴族の踊りのうまさをできるだけ大きくしたいと考えている．joi 姫と組になる貴族の踊りのうまさとして考えられる最大値を求めよ．
 


"
p00541,Rampart,"
歴史学者である joi 教授は，かつて存在した ioi 王国について研究している．
 
過去の調査によると，ioi 王国は縦 h 行，横 w 列のマスに区切られた長方形の形をしていた．ioi 王国の首都は，防衛のために城壁で囲われていた．
 
ioi 王国の首都を囲う城壁は次のような形をしている．城壁には大きさと呼ばれる値が定まっている．大きさ s (s &ge; 3) の城壁とは，s &times; s の正方形の領域から外周以外の (s − 2) &times; (s − 2) の正方形の領域を除いたものである．
 
調査によると，首都を囲う城壁の大きさは l 以上であった．また，ioi 王国のいくつかのマスには城壁が存在しなかったことがわかっている．
 
joi 教授は，さらなる研究のために，城壁としてありうるものが何通りあるかを知りたい．
 

"
p00542,Selecting Subjects,"
joi 君は物理，化学，生物，地学，歴史，地理の 6 科目のテストを受けた．
それぞれのテストは 100 点満点で採点された．
 
joi 君は物理，化学，生物，地学の 4 科目から 3 科目を選択し，歴史，地理の 2 科目から 1 科目を選択する．
 
テストの合計点が最も高くなるように科目を選ぶとき，
joi 君の選んだ科目のテストの合計点を求めよ．
 

"
p00543,Swapping Bibs,"
joi 高校の n 人の生徒が東西に一列に並んでいる．列の西の端から i 番目の生徒が生徒 i である．それぞれの生徒は整数が 1 つ書かれたゼッケンを付けている．最初，生徒 i のゼッケンには整数 ai が書かれている．
 
バトンが m 個あり，バトンには 1 から m までの番号が付けられている．k = 1, 2, ..., m に対し，以下の操作を行う．バトン k (2 ≦ k ≦ m) に関する操作は，バトン k - 1 に関する操作が終わってから行う．
 
先生がバトン k を生徒 1 に渡す．
  1 ≦ i ≦ n - 1 のとき: 生徒 i のゼッケンの整数を k で割った余りが，生徒 i + 1 のゼッケンの整数を k で割った余りよりも大きいとき，生徒 i と生徒 i + 1 がゼッケンを交換し，生徒 i は生徒 i + 1 にバトンを渡す．そうでないときは，ゼッケンを交換せずに，生徒 i は生徒 i + 1 にバトンを渡す．  i = n のとき: 生徒 n はバトンを先生に渡す． 


 先生が生徒 n からバトン k を受け取ったら，バトン k に関する操作は終わりである．
 
 
生徒のゼッケンに最初に書かれていた整数とバトンの個数 m が与えられたとき，先生が生徒 n からバトン m を受け取った後の，それぞれの生徒のゼッケンの整数を求めるプログラムを作成せよ．
 

"
p00544,Russian Flag,"
k 理事長はロシアで開催される ioi 2016 に合わせて旗を作ることにした．k 理事長はまず倉庫から古い旗を取り出してきた．この旗は n 行 m 列のマス目に分けられていて，それぞれのマスには白・青・赤のいずれかの色が塗られている．
 
k 理事長はこの旗のいくつかのマスを塗り替えてロシアの旗にしようとしている．ただし，この問題でいうロシアの旗とは以下のようなものである．
 上から何行か (1 行以上) のマスが全て白で塗られている． 続く何行か (1 行以上) のマスが全て青で塗られている． それ以外の行 (1 行以上) のマスが全て赤で塗られている． 
k 理事長が古い旗をロシアの旗にするために塗り替える必要のあるマスの個数の最小値を求めよ．
 

"
p00545,Walking in JOI Kingdom,"
joi 国には東西に走る 1 本の十分に長い道路がある．joi 国の王宮が道路沿いにあり，joi 国における道路沿いの位置は整数 a で表される．a = 0 のときは王宮の位置を表す．a > 0 のときは，王宮から東へ a メートル進んだ位置を表す．a < 0 のときは，王宮から西へ -a メートル進んだ位置を表す．
 
joi 国の道路沿いには n 軒の家があり，家には西から順に 1 から n までの番号が付けられている．joi 国には n 人の国民がいて，国民には 1 から n までの番号が付けられている．家 i には国民 i が住んでいる．家 i の位置は 0 でない偶数 ai で表される．a1, ..., an は全て異なる．
 
joi 国では，近年国民の運動不足が問題になっている．国民の健康が気になった joi 国の王様は，国民全員に散歩をする命令を出した．王様が命令を出すと，全ての国民は一斉に東向きまたは西向きに歩き始める．それぞれの国民がどちらの向きに歩き始めるかは，国民ごとに決まっている．全ての国民は，歩くときは 1 秒あたり 1 メートルの速度で歩く．
 
joi 国の国民は皆おしゃべりが大好きである．散歩の途中にほかの国民に出会うと，その場所で立ち止まって世間話を始めてしまう．すでに立ち止まっている国民に出会った場合も同様である．一度立ち止まった国民は，再び歩き出すことはない．
 
joi 国には q 人の重要人物がいる．joi 国の王様は，命令が出されてから t 秒後の，q 人の重要人物の位置を把握しておきたい．命令が出されてから t 秒後の，q 人の重要人物の位置を求めるプログラムを作成せよ．
 


"
p00546,Zombie Island,"
joi 君が住んでいる島がゾンビに侵略されてしまった．joi 君は島で一番安全な避難場所として設定されているシェルターに逃げ込むことにした．
 
joi 君が住んでいる島は町 1 から町 n までの n 個の町からなり，町と町とは道路で結ばれている．島には m 本の道路があり，すべての道路は異なる 2 つの町を結んでいる．joi 君は道路を双方向に自由に移動できるが，道路以外を通って町から別の町に行くことはできない．
 
いくつかの町はゾンビに支配されており，訪れることが出来ない．ゾンビに支配されている町から s 本以下の道路を使って到達できる町を危険な町という．それ以外の町を危険でない町という．
 
joi 君の家は町 1 にあり，避難先のシェルターは町 n にある．町 1，町 n はゾンビに支配されていない．島の道路は移動するのに時間がかかるので，joi 君は町を移動するたびに，移動先の町で一晩宿泊しなければならない．joi 君は，危険でない町で宿泊する場合は宿泊費が p 円の安い宿に泊まるが，危険な町で宿泊する場合はセキュリティのサービスが優良な宿泊費が q 円の高級宿に泊まる．joi 君はできるだけ宿泊費が安くなるように移動して，町 n まで避難したい．町 1 や町 n では宿泊する必要はない．
 
joi 君が 町 1 から町 n まで移動するときに必要な宿泊費の合計の最小値を求めよ．
 


"
p00547,Food stalls,"
joi 君の住む ioi 市は，南北方向に h 区画，東西方向に w 区画の長方形の形をしており，h × w 個の区画に区切られている．北から i 番目，西から j 番目の区画を (i, j) と表す．現在，ioi 市で開催されている国際的なプログラミングコンテストを記念して，大規模なお祭りが開催されている．いくつかの区画には屋台が出ており，それぞれ違う種類のお菓子を販売している．
区画 (1, 1), 区画 (h, w) およびそれらに東西南北に隣接する区画には屋台はない．
 
joi 君は区画 (1, 1) から区画 (h, w) に移動する．移動時間を短くするため，joi 君は東あるいは南のみに移動を行う．joi 君はお菓子が好きなので，区画に入るごとに順に次の行動をとる．
 
現在の区画にまだ買っていないお菓子を販売している屋台が出ている場合，その屋台でお菓子を購入する．
 
現在の区画の東西南北に隣接する区画にまだ買っていないお菓子を販売している屋台が出ている場合，それらの屋台のうち 1 つを除く全ての屋台から販売員を呼んで，お菓子を購入する．
 
joi 君は同じ種類のお菓子を複数回購入することはない．
 
ioi 市の大きさ，屋台の位置と，それぞれの屋台のお菓子の値段が与えられたとき，joi 君が区画 (1, 1) から区画 (h, w) に移動する間に購入するお菓子の総額の最小値を求めよ．
 

"
p00548,Oranges,"
あなたはjuicy orange industry 社を知っているだろうか? この会社の業務は美味しいオレンジを栽培して出荷することである．ここでは略してjoi 社と呼ぶ．
 
joi 社では，収穫された $n$ 個のオレンジを箱詰めして出荷することになった．オレンジは工場にあるベルトコンベアの上に並べられており，ベルトコンベアの前から順番に $1$ から $n$ までの番号が付けられている．オレンジは大小さまざまであり，オレンジ $i$ $(1 \leq i \leq n)$ の大きさは $a_i$ である．
 
これらのオレンジを前から順番にいくつかの箱に分けて詰める．ひとつの箱には連続した番号のオレンジしか詰めることができない．
 
ひとつの箱には最大で $m$ 個までのオレンジを詰めることができる．ある箱にいくつかのオレンジを詰めるためにかかるコストは，箱に詰める最大のオレンジの大きさを $a$，箱に詰める最小のオレンジの大きさを $b$，箱に詰めるオレンジの個数を $s$ としたときに，$k + s \times (a - b)$ で求めることができる．ここで，$k$ は箱にかかるコストであり，すべての箱で共通の値である．
 
適切な個数の箱を用意して，すべてのオレンジを適切に箱詰めすることで，箱詰めにかかるコストの総和をできるだけ小さくしたい．
 

"
p00549,Collecting Stamps 2,"
joi 商店街には大通りに沿って $n$ 個の店があり，joi 商店街の入口から出口に向かってそれぞれ $1, 2, ..., n$ の番号が付けられている．joi 商店街は一方通行で，入口から出口方向へしか移動することはできない．
 
まちおこしのため，joi 商店街でスタンプラリーを行うことになった．このスタンプラリーでは，それぞれの店はj，o，i のいずれかのスタンプを用意し，店で買い物をした人はスタンプカードにスタンプを押してもらう．スタンプラリーに参加する人はちょうど 3 つの店に入る．商店街の入口では 3 つの欄のあるスタンプカードを配り，1 回目に入った店，2 回目に入った店，3 回目に入った店のスタンプを押してもらう．商店街の出口でスタンプカードを回収し，押されたスタンプが先に入った店のものから順にj，o，iになっているとき，出口で商品券がもらえるキャンペーンを実施することになった．押されたスタンプの種類や順番が異なるときは商品券はもらえない．
 
すでに $n$ 個のすべての店はどのスタンプを用意するか決めたが，新たに1 つの店をjoi 商店街に出すことになり，新しく出店する場所と，その店が用意するスタンプを決めることになった．新しい店を出す場所は，店 $i$ と店 $i + 1$ の間 $(1 \leq i \leq n - 1)$，入口と店 $1$ の間，店 $n$ と出口の間のいずれかから決める．また，新しい店のスタンプは j，o，i の 3 通りから決める．
 
商品券をもらえるような店の選び方の数が大きいほど，スタンプラリーが盛り上がると商店街は考えた．そこで，新しく出す店の場所と用意するスタンプを決めたときの，上記の店の選び方の数の最大値を求めたい．
 


"
p00550,Train Fare,"
joi 国には $n$ 個の都市があり，それぞれ $1, 2, ..., n$ の番号が付けられている．都市 1 はjoi 国の首都である．
 
また，joi 国には鉄道会社がひとつだけあり，この会社は $m$ 個の路線を運行している．これらの路線にはそれぞれ $1, 2, ..., m$ の番号が付けられており，$i$ 番目 $(1 \leq i \leq m)$ の路線は都市 $u_i$ と都市 $v_i$ を双方向に結んでいる．都市と都市の間を鉄道以外で移動することはできない．また，どの都市からどの都市へもいくつかの路線を乗り継いで移動することができるようになっている．
 
現在，どの路線の運賃も 1 円である．経営不振に陥った鉄道会社は，今後 $q$ 年間かけていくつかの路線の運賃を値上げする計画を立てた．この計画では，計画開始から $j$ 年目$(1 \leq j \leq q)$ の年初めに路線 $r_j$ の運賃を 1 円から 2 円に値上げする予定である．値上げされた路線の運賃は，その後ずっと2 円のままであり，再び値上げすることはない．
 
ところで，この鉄道会社では，毎年，各都市の住民の満足度調査を行っている．計画開始前は，どの都市の住民もこの鉄道会社に満足しているが，値上げによって不満を持つ住民が現れる可能性がある．
 
それぞれの年の満足度調査は，その年の値上げの実施後に行う．したがって， $j$ 年目$(1 \leq j \leq q)$ の満足度調査は，路線 $r_1, r_2, ... , r_j$ の運賃の値上げは完了し，それ以外の路線の運賃は値上げされていない状態で行われることになる． $j$ 年目$(1 \leq j \leq q)$ の満足度調査では，都市 $k$ $(2 \leq k \leq n)$ の住民は，以下の条件が満たされるとき，そしてそのときに限り鉄道会社に不満を抱く．
  その時の運賃で都市 $k$ から首都である都市 $1$ へ移動するときの費用の最小値が，計画開始前の運賃で都市 $k$ から都市 $1$ へ移動するときの費用の最小値よりも大きい．
 
ただし，いくつかの路線を使って移動するときの費用は，それぞれの路線の運賃の合計である．また，都市 $1$ の住民が鉄道会社に対して不満を抱くことはない．値上げ後の運賃で最小の費用を達成する経路は，計画開始前の運賃で最小の費用を達成する経路と異なる可能性があることに注意せよ．
 
計画の実行に先立って，今後 $q$ 年間の住民の満足度調査それぞれにおいて，鉄道会社に不満を抱く住民がいる都市の数を計算しておきたい．
 

"
p00551,Territory,"
あなたは南北方向にとても長く伸びたたくさんの道路と，東西方向にとても長く伸びたたくさんの道路が交わった形をした街に住んでいる．隣り合う2 つの南北方向の道路の間隔は 1 km である．また，隣り合う 2 つの東西方向の道路の間隔も 1 km である．
 
この街には市役所が 1 つある．市役所のある交差点を $(0,0)$ と表す．この街の交差点は 2 つの整数 $i, j$ を用いて交差点 $(i, j)$ と表される．すなわち，交差点 $(i, j)$ とは，交差点 $(0,0)$ から東に $i$ km ($i < 0$ のときは西に $-i$ km)，北に $j$ km ( $j < 0$ のときは南に $-j$ km) 進んだ位置の交差点を表す．
 
市役所ではジョイ君という名の 1 匹の犬を飼っている．ジョイ君は $k$ 日間の散歩の計画を立てた．散歩の計画は以下の通りである．
  $k$ 日のうち最初の日の朝にはジョイ君は交差点 $(0,0)$ にいる．ジョイ君は交差点 $(0,0)$ に印を付ける．$(0,0)$ 以外にはジョイ君が印を付けた交差点はない．  $k$ 日のそれぞれの日の昼に散歩を行う．1 日の散歩は $n$ 回のステップからなる．各ステップでは交差点から隣の交差点へと移動し，移動先に印を付ける．ジョイ君がそれぞれの日の昼にどう移動するかは日によらず一定である．  昼の移動が終わった後は，現在いる交差点で次の日の朝まで寝る． 
市役所では $k$ 日間の散歩によってできるジョイ君の縄張りについて話題になっている．4 つの交差点 $(a,b),(a + 1,b),(a + 1,b + 1),(a,b + 1)$ のいずれにもジョイ君が 1 回以上印を付けているとき，4 つの交差点で囲まれた区画はジョイ君の縄張りに属する．
 
あなたは，ジョイ君の散歩計画から，ジョイ君の縄張りに属する区画の個数を計算するプログラムを作成することとなった．
 
この街の道路はとても長く，また，南北方向にも東西方向にも十分たくさんの道路があるため，散歩の途中でジョイ君が道路の端や街の端に到達することはない．
 

"
p00552,Geologic Fault,"
遠い昔，ioi 文明という高度な文明が栄えていた．しかし，火山の噴火により，この高度な文明はついに滅んでしまった．ioi 文明は直線状の河川に沿って繁栄しており，ioi 文明が滅んだとき，その地表面は平らであった．ioi 文明の跡地は座標平面のx 軸と見なすことができる．y 軸は高さ方向を表す．すなわち，座標平面において，直線 $y = 0$ は地表を，領域 $y > 0$ は地上を，領域 $y < 0$ は地下を表す．また，ioi 文明が滅んだとき，$a$ 年前$(a \geq 0)$ の地層は，直線 $y = -a$ の位置にあった．
 
ioi 文明が滅んだ後，ioi 文明の跡地では $q$ 回の地殻変動が起きた．$i$ 回目$(1 \leq i \leq q)$ の地殻変動は，位置 $x_i$，方向 $d_i$，変動の量 $l_i$ で表される．$d_i$ は 1 または 2 である．$i$ 回目の地殻変動は以下のように起きる．
  $d_i = 1$ のとき，断層が点$(x_i, 0)$ を通る傾き $1$ の直線に沿って造られ，この直線より上の領域にある地層が，直線に沿って高さ $l_i$ だけ移動する．すなわち，この直線より上の点 $(x, y)$ は，点$(x + l_i, y + l_i)$ に移動する．  $d_i = 2$ のとき，断層が点$(x_i, 0)$ を通る傾き $-1$ の直線に沿って造られ，この直線より上の領域にある地層が，直線に沿って高さ $l_i$ だけ移動する．すなわち，この直線より上の点$(x, y)$ は，点$(x - l_i, y + l_i)$ に移動する． 

  そのすぐ後に，領域 $y > 0$ の地層が風化によってすべて消える． 
時は変わり現代，考古学者のjoi 博士はioi 文明の遺跡を発掘することにした．joi 博士はどの位置の地表の地層が，ioi 文明が滅ぶ何年前の地層であるかを知りたい．どのような地殻変動が起きたかは分かっている．あなたの仕事は，joi 博士にかわって，$1 \leq i \leq n$ を満たす各整数 $i$ について，点$(i-1, 0)$ と点$(i, 0)$の間の地表の地層がioi 文明が滅ぶ何年前の地層であるかを求めることである．
 

"
p00553,Microwave,"
joi 君は食事の準備のため，a ℃の肉を電子レンジで b ℃まで温めようとしている．
肉は温度が 0 ℃未満のとき凍っている．
また，温度が 0 ℃より高いとき凍っていない．
温度がちょうど 0 ℃のときの肉の状態は，凍っている場合と，凍っていない場合の両方があり得る．
 
joi 君は，肉の加熱にかかる時間は以下のようになると仮定して，肉を温めるのにかかる時間を見積もることにした．
 
この見積もりにおいて，肉を b ℃にするのに何秒かかるかを求めよ．
 

"
p00554,Point Card,"
joi 商店街ではポイントカードのサービスを行っている．各ポイントカードには 2n 個のマスがある．商品を購入すると，くじを引くことができ，結果によって「当たり」か「はずれ」の印がマスに押される．同じマスに印が 2 回押されることはない．2n 個のマスのうち n 個以上のマスに当たりの印が書かれたポイントカードは，景品と交換することができる．
また，ポイントカードの印は，1 マスにつき 1 円で書き換えてもらうことができる．
 
joi 君は 2n 個のマスが全て埋まっているポイントカードを m 枚持っている．ポイントカード i (1 ≦ i ≦ m) には，ai 個の当たり印と，bi 個のはずれ印が押されている．joi 君は m - 1 個以上の景品が欲しい．
 
joi 君が m - 1 個以上の景品を得るために必要な費用の最小値を求めよ．
 

"
p00555,Refreshment Area,"
世界的なプログラミングコンテストが日本で開催されることになり，現在会場の設営が行われている．この会場は南北方向に n マス，東西方向に m マスのマス目状に区切られており，いくつかのマスには競技用の機材が置かれている．
 
このコンテストでは，選手が競技中に休憩するために，軽食や飲み物などを置いた休憩スペースを 1 箇所会場内に設けることになった．休憩スペースは南北方向または東西方向に連続した d マスでなければならない．ただし，機材の置かれたマス目に休憩スペースを設けることはできない．
 
会場内に休憩スペースを設ける方法は何通りあるかを求めるプログラムを作成せよ．
 

"
p00556,Plush Toys,"
ある joi 関係者は，おもちゃ屋で働いている．今日は，店内にあるぬいぐるみコーナーの整理をすることになった．
 
ぬいぐるみコーナーの棚には，n 個のぬいぐるみが左から右に一列に並べられている．棚は仕切りにより n 個の区画に区切られており，1 つの区画に 1 個のぬいぐるみを置く．このおもちゃ屋は合計 m 種類のぬいぐるみを売っており，それぞれ 1 から m までの番号が付けられている．棚に並べられた n 個のぬいぐるみは，それぞれこの m 種類のうちのいずれかである．また，それぞれの種類のぬいぐるみは，少なくとも 1 個は存在する．
 
見栄えを良くするため，同じ種類のぬいぐるみが全て連続して棚に置かれるように，ぬいぐるみを並べ替えたい．次のような方法で，ぬいぐるみを並べ替えることにした．
 n 個のぬいぐるみのうちいくつかを選び，棚から取り出す．取り出さなかったぬいぐるみの位置は動かさない． 取り出したぬいぐるみを，好きな順に棚の空いている区画に戻していく． 
並べ替えた後，同じ種類のぬいぐるみが全て連続して棚に置かれていなければならない．
並べ替えるために取り出すぬいぐるみの個数の最小値を求めるプログラムを作成せよ．
 

"
p00557,Ridge,"
joi カルデラは景観の良さが多くの登山家に愛される美しい地形である．
特に，尾根と呼ばれる場所からの景観は絶景である．
 
joi カルデラの土地は南北 h キロメートル，東西 w キロメートルの長方形である．
南北，東西に 1 キロメートルごとに joi カルデラの土地を分け，これら h×w 個の領域を区域と呼ぶ．
すべての区域において，その中では標高は等しい．また，異なる区域の標高は異なる．
 
ある区域に雨が降ると，雨水はその区域に東西南北に隣り合う最大で 4 つの区域のうち，
標高がその区域より低いような区域のすべてに流れる．そのような区域がない場合，雨水はその区域に溜まる．
他の区域から流れてきた雨水についても同様である．
joi カルデラの外側は，外輪山の急峻な崖に囲まれているため，雨水が joi カルデラの外に流れ出すことはない．
 
ある区域について，その区域のみに雨が降った場合，最終的に複数の区域に雨水が溜まるとき，その区域を尾根と呼ぶ．
絶景をこよなく愛する登山家たちのために，尾根の区域がいくつあるかを求めるプログラムを作成せよ．
 

"
p00558,Snake JOI,"
ヘビの joi 君は，ある大きな屋敷に迷い込んでしまった．屋敷の住人に見つかる前に，屋敷を脱出しなければならない．
 
この屋敷には部屋が n 個あり，1, 2, ..., n の番号が付けられている．また，廊下が m 本あり，i 本目の廊下 (1 ≦ i ≦ m) は部屋 ai と部屋 bi を結んでいる．joi 君はこれらの廊下をどちらの向きにも通ることができ，廊下 i を通るのには di 分かかる．部屋と部屋の間を廊下を通る以外の手段で移動する方法はない．
 
この屋敷の部屋の温度はそれぞれ一定に調節されており，joi 君にとって寒すぎるか，快適であるか，暑すぎるかである．joi 君は，急な温度変化に対応できないため，最後に寒すぎる部屋を出てから x 分未満のうちに暑すぎる部屋に入ることはできない．同様に，最後に暑すぎる部屋を出てから x 分未満のうちに寒すぎる部屋に入ることもできない．
 
joi 君は，移動中に部屋に入るとすぐに部屋から出なければならない．また，廊下の途中で引き返したり，廊下 i を di 分より長い時間かけて通ることもできない．ただし，一度訪れた部屋にもう一度入ることや，一度使った廊下をもう一度使うことは許される．
 
joi 君は現在部屋 1 にいる．この部屋は joi 君にとって寒すぎる．joi 君は屋敷の出口のある部屋 n に入ると，屋敷から脱出できる．
 
joi 君が屋敷から脱出するのにかかる最短の時間を求めよ．
 

"
p00559,Foehn Phenomena,"
in the kingdom of ioi, the wind always blows from sea to land. there are $n + 1$ spots numbered from $0$ to $n$. the wind from spot $0$ to spot $n$ in order. mr. joi has a house at spot $n$. the altitude of spot $0$ is $a_0 = 0$, and the altitude of spot $i$ ($1 \leq i \leq n$) is $a_i$.
   
the wind blows on the surface of the ground. the temperature of the wind changes according to the change of the altitude. the temperature of the wind at spot $0$, which is closest to the sea, is $0$ degree. for each $i$ ($0 \leq i \leq n - 1$), the change of the temperature of the wind from spot $i$ to spot $i + 1$ depends only on the values of $a_i$ and $a_{i+1}$ in the following way:
   if $a_i < a_{i+1}$, the temperature of the wind decreases by $s$ degrees per altitude.  if $a_i \geq a_{i+1}$, the temperature of the wind increases by $t$ degrees per altitude.     
the tectonic movement is active in the land of the kingdom of ioi. you have the data of tectonic movements for $q$ days. in the $j$-th ($1 \leq j \leq q$) day, the change of the altitude of spot $k$ for $l_j \leq k \leq r_j$ ($1 \leq l_j \leq r_j \leq n$) is described by $x_j$. if $x_j$ is not negative, the altitude increases by $x_j$. if $x_j$ is negative, the altitude decreases by $|x_j|$.
 
your task is to calculate the temperature of the wind at the house of mr. joi after each tectonic movement.
 


"
p00560,Semiexpress,"
  the joi railways is the only railway company in the kingdom of joi. there are $n$ stations numbered from $1$ to $n$ along a railway. currently, two kinds of trains are operated; one is express and the other one is local.
 
  a local train stops at every station. for each $i$ ($1 \leq i &lt; n$), by a local train, it takes $a$ minutes from the station $i$ to the station ($i + 1$).
								   
  an express train stops only at the stations $s_1, s_2, ..., s_m$ ($1 = s_1 &lt; s_2 &lt; ... &lt; s_m = n$). for each $i$ ($1 \leq i &lt; n$), by an express train, it takes $b$ minutes from the station $i$ to the station ($i + 1$).
 
  the joi railways plans to operate another kind of trains called ""semiexpress."" for each $i$ ($1 \leq i &lt; n$), by a semiexpress train, it takes $c$ minutes from the station $i$ to the station ($i + 1$). the stops of semiexpress trains are not yet determined. but they must satisfy the following conditions:
  semiexpress trains must stop at every station where express trains stop.  semiexpress trains must stop at $k$ stations exactly. 
  the joi railways wants to maximize the number of stations (except for the station 1) to which we can travel from the station 1 within $t$ minutes. the joi railways plans to determine the stops of semiexpress trains so that this number is maximized. we do not count the standing time of trains.
 
  when we travel from the station 1 to another station, we can take trains only to the direction where the numbers of stations increase. if several kinds of trains stop at the station $i$ ($2 \leq i \leq n - 1$), you can transfer between any trains which stop at that station.
 
when the stops of semiexpress trains are determined appropriately, what is the maximum number of stations (except for the station 1) to which we can travel from the station 1 within $t$ minutes?
 

"
p00561,Kingdom of JOIOI,"
  the kingdom of joioi is a rectangular grid of $h \times w$ cells. in the kingdom of joioi, in order to improve efficiency of administrative institutions, the country will be divided into two regions called ""joi"" and ""ioi.""
 
  since we do not want to divide it in a complicated way, the division must satisfy the following conditions:
  each region must contain at least one cell.  each cell must belong to exactly one of two regions.  for every pair of cells in the joi region, we can travel from one to the other by passing through cells belonging to the joi region only. when move from a cell to another cell, the two cells must share an edge. the same is true for the ioi region.  for each row or column, if we take all the cells in that row or column, the cells belonging to each region must be connected. all the cells in a row or column may belong to the same region. 
  each cell has an integer called the altitude. after we divide the country into two regions, it is expected that traveling in each region will be active. but, if the difference of the altitudes of cells are large, traveling between them becomes hard. therefore, we would like to minimize the maximum of the difference of the altitudes between cells belonging to the same region. in other words, we would like to minimize the larger value of
  the difference between the maximum and the minimum altitudes in the joi region, and  the difference between the maximum and the minimum altitudes in the ioi region. 



"
p00562,Soccer,"
  you are a manager of a prestigious soccer team in the joi league.
 
  the team has $n$ players numbered from 1 to $n$. the players are practicing hard in order to win the tournament game. the field is a rectangle whose height is $h$ meters and width is $w$ meters. the vertical line of the field is in the north-south direction, and the horizontal line of the field is in the east-west direction. a point in the field is denoted by ($i, j$) if it is $i$-meters to the south and $j$ meters to the east from the northwest corner of the field.
 
  after the practice finishes, players must clear the ball. in the beginning of the clearance, the player $i$ ($1 \leq i \leq n$) stands at ($s_i, t_i$). there is only one ball in the field, and the player 1 has it. you stand at ($s_n, t_n$) with the player $n$. the clearance is finished if the ball is passed to ($s_n, t_n$), and you catch it. you cannot move during the clearance process.
 
  you can ask players to act. but, if a player acts, his fatigue degree will be increased according to the action. here is a list of possible actions of the players. if a player has the ball, he can act (i),(ii), or (iii). otherwise, he can act (ii) or (iv).
  (i) choose one of the 4 directions (east/west/south/north), and choose a positive integer $p$. kick the ball to that direction. then, the ball moves exactly p meters. the kicker does not move by this action, and he loses the ball. his fatigue degree is increased by $a \times p + b$. (ii) choose one of the 4 directions (east/west/south/north), and move 1 meter to that direction. if he has the ball, he moves with it. his fatigue degree is increased by $c$ regardless of whether he has the ball or not. (iii) place the ball where he stands. he loses the ball. his fatigue degree does not change. (iv) take the ball. his fatigue degree does not change. a player can take this action only if he stands at the same place as the ball, and nobody has the ball. 
  note that it is possible for a player or a ball to leave the field. more than one players can stand at the same place.
 
since the players just finished the practice, their fatigue degrees must not be increased too much. you want to calculate the minimum possible value of the sum of fatigue degrees of the players for the clearance process.
 

"
p00563,Rope,"
  joi is a baby playing with a rope. the rope has length $n$, and it is placed as a straight line from left to right. the rope consists of $n$ cords. the cords are connected as a straight line. each cord has length 1 and thickness 1. in total, $m$ colors are used for the rope. the color of the $i$-th cord from left is $c_i$ ($1 \leq c_i \leq m$).
 
  joi is making the rope shorter. joi repeats the following procedure until the length of the rope becomes 2.
  if $j \leq l/2$, for each $i$ ($1 \leq i \leq j$), combine the $i$-th cord from left with the ($2j - i + 1$)-th cord from left. by this procedure, the rightmost point of the rope becomes the rightmost point. the length of the rope becomes $l - j$.  if $j > l/2$, for each $i$ ($2j - l + 1 \leq i \leq j$), combine the $i$-th cord from left with the ($2j - i + 1$)-th cord from left. by this procedure, the leftmost point of the rope becomes the rightmost point. the length of the rope becomes $j$.
       
    
    if a cord is combined with another cord, the colors of the two cords must be the same. we can change the color of a cord before it is combined with another cord. the cost to change the color of a cord is equal to the thickness of it. after adjusting the colors of two cords, they are combined into a single cord; its thickness is equal to the sum of thicknesses of the two cords.
   
  joi wants to minimize the total cost of procedures to shorten the rope until it becomes length 2. for each color, joi wants to calculate the minimum total cost of procedures to shorten the rope so that the final rope of length 2 contains a cord with that color.
 
your task is to solve this problem instead of joi.
 

"
p00564,Pencils,"
joi 君は鉛筆を n 本買うために近くの文房具店に行くことにした．
 
文房具店では鉛筆が一定の本数ずつのセットで売られている．セット x は a 本で b 円，セット y は c 本で d 円である．
 
joi 君はセット x かセット y の一方を選び，選んだセットをいくつか購入する．両方のセットを購入することはできない．n 本以上の鉛筆を得るために必要な金額の最小値を求めよ．
 

"
p00565,Sugoroku,"
joi 君はおじさんの家で双六を見つけた．双六は直線状に並んだ n+2 個のマスからなり，1 番目のマスはスタート，n+2 番目のマスはゴールである．その他の各マスには 0 または 1 が書かれていて，各 i (1≦i≦n) について，i+1 番目のマスに書かれた数字は a_i である．
 
双六では，最初にスタートのマスにコマを置き，サイコロを振って，出た目の数だけコマを進めることを繰り返す．ただし，1 の書かれたマスに止まった場合は，ゲームオーバーである．ゲームオーバーにならずにゴールのマスに止まるか，ゴールのマスを通り過ぎたら，ゲームクリアである． 
joi 君は双六を遊ぶためのサイコロをおもちゃ屋さんに買いに行くことにした．おもちゃ屋さんには n+1 個のサイコロが売っている．j 番目 (1≦j≦n+1) のサイコロは j 個の面を持ち，1,2,...,j が 1 つずつ書かれている． 
joi 君はゲームクリアできるようなサイコロのうち，最も面の数が少ないサイコロを 1 個買うことにした．joi 君はどのサイコロを買えばよいだろうか． 

"
p00566,Trunk Road,"
joi 市は，東西方向にまっすぐに伸びる h 本の道路と，南北方向にまっすぐに伸びる w 本の道路によって，碁盤の目の形に区分けされている．道路と道路の間隔は 1 である．joi 市では，これら h+w 本の道路から，東西方向に 1 本，南北方向に 1 本，合計 2 本の道路を幹線道路として選ぶことになった． 
北から i 本目 (1≦i≦h) の道路と，西から j 本目 (1≦j≦w) の道路の交差点を，交差点 (i,j) とする．交差点 (i,j) と北から m 本目 (1≦m≦h) の道路の距離は |i-m| であり，交差点 (i,j) と西から n 本目 (1≦n≦w) の道路の距離は |j-n| である．
また，交差点 (i,j) の近くには a_{i,j} 人の住人が住んでいる． 
2 本の幹線道路を選んだときの，joi 市の全ての住人に対する，最寄りの交差点から近い方の幹線道路への距離の総和の最小値を求めよ． 

"
p00567,Mizuyokan,"
水ようかんとは，おもに小豆からなる餡を型に流し込んで寒天で固めることにより作られる和菓子である．いま，joi 君の手元には，横長の直方体の形をした水ようかんがひとつある．joi 君は，今日のおやつとしてこの水ようかんを食べる予定である． 
この水ようかんには，縦方向の切れ目が全部で n-1 箇所に入っている．水ようかんの長さは l_1 + l_2 + ... + l_n であり，i 番目 (1 ≦ i ≦ n-1) の切れ目は，左から l_1 +  l_2 +  ... +  l_i の位置にある． 
この水ようかんは丸ごと食べるには大きすぎるので，joi 君は，水ようかんに入っている切れ目から 1 箇所以上を選び，選んだ切れ目に沿って水ようかんを切って，複数のピースに切り分けることにした．ただし，ピースの大きさが不揃いでは見栄えが悪いので，長さ最大のピースと最小のピースの長さの差ができるだけ小さくなるように切ることにした． 
長さ最大のピースと最小のピースの長さの差の最小値を求めよ． 

"
p00568,Deforestation,"
joi 王国には広大な森林がある．森林は長方形の形をしており，南北に h マス，東西に w マスのマス目状に分けられている．北から i マス目，西から j マス目(1 ≦ i ≦ h, 1 ≦ j ≦ w)の領域には a_{i,j} 本の木が生えている．ただし，北西の端の領域には木材加工工場があり，木が生えていない．すなわち，a_{1,1}=0 である． 
木が生えていない領域には人が立ち入ることが出来る．また人は東西南北に隣接する領域に，その領域に木が生えていなければ，移動することができる．森林の外に出ることはできない．joi 君は joi 王国の公共事業として，木を伐採し，北西の端の領域と南東の端の領域を，相互に行き来可能にしたい． 
木の伐採は以下のようにして行う．はじめ，joi 君は木材加工工場のある北西の端の領域にいる．joi 君は，現在いる領域と東西南北に隣接する木の生えていない領域に 1 分で移動することができる．また，東西南北に隣接する木の生えている領域から，1 分で木を 1 本伐採することができる．ただし，木を 1 本伐採したら，そのたびに北西の端の領域にある木材加工工場まで伐採した木を運ばなければならない．木を運んでいる間も，joi 君の移動速度は変わらない．木を運んでいる間は，他の木を伐採することはできない． 
条件を満たすように木を伐採するのにかかる時間の最小値を求めよ．ただし，伐採にかかる時間とは，最後に伐採した木を，木材加工工場に運ぶまでの時間とする． 

"
p00569,LthKthNumber,"
横一列に並べられた n 枚のカードがある．左から i 枚目(1 ≦ i ≦ n)のカードには，整数 a_i が書かれている． 
joi 君は，これらのカードを用いて次のようなゲームを行う．連続する k 枚以上のカードの列を選び，次の操作を行う． 選んだカードを，書かれている整数が小さい順に左から並べる． 並べたカードのうち，左から k 番目のカードに書かれた整数を紙に書き出す． 選んだカードを，すべて元の位置に戻す． 
この操作を，連続する k 枚以上のカードの列すべてに対して行う．すなわち，1 ≦ l ≦ r ≦ n かつ k ≦ r - l + 1 を満たすすべての (l,r) について，a_l, a_{l+1}, ..., a_r のうち k 番目に小さな整数を書き出す． 
こうして書き出された整数を，左から小さい順に並べる．並べた整数のうち，左から l 番目のものがこのゲームにおける joi 君の得点である．joi 君の得点を求めよ． 

"
p00570,Stove,"
  joi 君の部屋にはストーブがある．joi 君自身は寒さに強いのでひとりで部屋にいるときはストーブをつける必要はないが，来客があるときはストーブをつける必要がある．
 
  この日，joi 君のもとにはn 人の来客がある．i 番目(1 \leq i \leq n) の来客は時刻t_i に到着し，時刻t_i + 1に退出する．同時に複数人の来客があることはない．
 
  joi 君は任意の時刻にストーブをつけたり消したりできる．ただし，ストーブをつける度にマッチを1本消費する．joi 君はマッチをk 本しか持っていないので，k 回までしかストーブをつけることができない．一日のはじめにストーブは消えている．
 
  ストーブをつけているとその分だけ燃料を消費するので，ストーブをつけたり消したりする時刻をうまく定めて，ストーブがついている時間の合計を最小化したい．
 


"
p00571,Art Exhibition,"
  joi 国で美術展が行われることになった．美術展では，国中から集まった様々な美術品が展示される予定である．
 
  展示される美術品の候補として，n 点の美術品が集まった．これらの美術品には1, 2, ..., n の番号が付けられている．それぞれの美術品には大きさと価値と呼ばれる値が定まっている．美術品i (1 \leq i \leq n) の大きさはa_i，価値はb_i である．
 
  美術展では，これらの美術品のうちから1 点以上を選んで展示する．美術展の会場は十分に広く，n 点の美術品すべてを展示することも可能である．しかし，joi 国の人々の美的感覚のため，美術品の間で大きさの差があまり大きくならないように展示する美術品を選びたい．一方，できるだけ価値の大きい美術品を多く展示したい．そのため，次の条件を満たすように展示する美術品を選ぶことにした：
  選んだ美術品の中で，大きさが最大のものの大きさをa_{max}，最小のものの大きさをa_{min} とする．また，選んだ美術品の価値の総和をs とする．  このとき，s - (a_{max} - a_{min}) を最大化する． 


"
p00572,Dango Maker,"
  あなたは団子を作る職人である．今，あなたは団子に串を刺そうとしているところである．
 
  団子は，縦n 行，横m 列に仕切られたマスの中に配置されている．各マスには団子が1 個ずつ入っている．それぞれの団子には，赤(r)，緑(g)， 白(w) のいずれかの色が付いている．あなたは，左から右の方向，または，上から下の方向に連続する3 マスから団子を取り出し，この順に1 本の串にちょうど3個刺すことができる．
 
  今あなたは，赤，緑，白の団子が1 個ずつこの順に刺さった串を可能な限り多く作りたい．串に刺す順番は，マスから取り出した順番と同じでなければならない．また，同じ団子に2 本以上の串を刺すことはできない．
 
  あなたは，団子が刺さった串を最大何本作ることができるだろうか．
 


"
p00573,Commuter Pass,"
  joi 君が住む都市にはn 個の駅があり，それぞれ1, 2, ..., n の番号が付けられている．また，m 本の鉄道路線があり，それぞれ1, 2, ..., m の番号が付けられている．鉄道路線i (1 \leq i \leq m) は駅a_i と駅b_i を双方向に結んでおり，乗車運賃はc_i 円である．
 
  joi 君は駅s の近くに住んでおり，駅t の近くのioi 高校に通っている．そのため，両者を結ぶ定期券を購入することにした．定期券を購入する際には，駅s と駅t の間を最小の運賃で移動する経路を一つ指定しなければならない．この定期券を用いると，指定した経路に含まれる鉄道路線は双方向に自由に乗り降りできる．
 
  joi 君は，駅u および駅v の近くにある書店もよく利用している．そこで，駅u から駅v への移動にかかる運賃ができるだけ小さくなるように定期券を購入したいと考えた．
 
  駅u から駅v への移動の際は，まず駅u から駅v への経路を1 つ選ぶ．この経路に含まれる鉄道路線i において支払うべき運賃は，
  鉄道路線i が定期券を購入する際に指定した経路に含まれる場合，0 円  鉄道路線i が定期券を購入する際に指定した経路に含まれない場合，c_i 円 
  となる．この運賃の合計が，駅u から駅v への移動にかかる運賃である．
 
  定期券を購入する際に指定する経路をうまく選んだときの，駅u から駅v への移動にかかる運賃の最小値を求めたい．
 

"
p00574,Snake Escaping,"
  joi 研究所では2^l 匹の毒蛇を飼っており，それぞれ0, 1, ..., 2^l - 1 の番号が付けられている．すべての毒蛇は頭から順にl 個の部分に分かれており，それぞれの部分は青または赤である．毒蛇i に対し，i を2進表記してi = $\sum_{k=1}^{l}$ c_k2^{l-k} (0 \leq c_k \leq 1) とおいたとき，
  c_k = 0 であれば，毒蛇i の頭から数えてk 番目の部分は青であり，  c_k = 1 であれば，毒蛇i の頭から数えてk 番目の部分は赤である． 
各毒蛇には毒性と呼ばれる0 以上9 以下の整数値が定まっている．0, 1, 2, 3, 4, 5, 6, 7, 8, 9 からなる長さ2^l の文字列s が与えられ，そのi 文字目(1 \leq i \leq 2^l) は毒蛇i - 1 の毒性を表す．
 
  毒蛇たちの動きは素早いので，joi 研究所からは，よく毒蛇たちが脱走してしまう．joi 研究所には脱走した毒蛇を目撃した周辺住民から苦情が寄せられる．
 
  あなたには，q 日間にわたる苦情の情報が与えられる．d 日目(1 \leq d \leq q) に寄せられた苦情は， 0, 1, ?からなる長さl の文字列t_d として表され，
  t_d のj 文字目(1 \leq j \leq l) が0 の場合は，d 日目に脱走したすべての毒蛇の頭から数えてj 番目の部分が青であることを表し，  t_d のj 文字目(1 \leq j \leq l) が1 の場合は，d 日目に脱走したすべての毒蛇の頭から数えてj 番目の部分が赤であることを表し，  t_d のj 文字目(1 \leq j \leq l) が? の場合は，d 日目に脱走した毒蛇の頭から数えてj 番目の部分については，周辺住民からは情報が与えられなかったことを表す． 
  苦情はすべて正確な情報である．脱走した毒蛇はjoi 研究所の職員がその日のうちに捕獲する．捕獲された毒蛇が，翌日以降に再び脱走することはあり得る．
 
  毒蛇の脱走によるリスクを見積もるために，joi 研究所のk 理事長は脱走した可能性のある毒蛇の毒性の合計を知りたい．あなたの仕事は，q 日間にわたる苦情の情報から，それぞれの日ごとに，その日に脱走した可能性のある毒蛇の毒性の合計を求めるプログラムを作成することである．
 


"
p00575,Social Game,"
joi 君は明日から新たにソーシャルゲームを始めることにした．
 
このソーシャルゲームでは，1 日につき 1 回までログインすることができ，ログインするたびに a 枚のコインが得られる．
 
また，月曜日から日曜日まで 7 日連続でログインすると，そのたびに，追加で b 枚のコインが得られる．
 
これ以外にコインがもらえることはない．
 
明日は月曜日である．joi 君が少なくとも c 枚のコインを得るためにログインしなければならない回数の最小値を求めよ．
 


"
p00576,Sugoroku and Pieces,"
joi 君はすごろくを持っている．このすごろくは 2019 個のマスが横一列に並んだ形をしている．これらのマスには，左端のスタートマスから右端のゴールマスへと順に 1 から 2019 までの番号がついている．
 
現在このすごろくの上には，n 個の駒が置かれている．これらの駒には，スタートに近い順に 1 から n までの番号がついている．駒 i (1 ≦ i ≦ n) は，マス x_i に置かれている．すべての駒は異なるマスに置かれている．
 
joi 君はこれから m 回の操作を行う．j 回目 (1 ≦ j ≦ m) の操作では，駒 a_j を 1 マス先へ進める．ただし，移動元のマスがゴールマスであった場合，もしくは移動先のマスに別の駒が置かれている場合，駒 a_j は進まず，位置は変わらない．
 
すべての操作が終了した時点で，各駒が置かれているマスを求めよ．
 

"
p00577,Circle Cross Stamps,"
joi 君はマルスタンプ，バツスタンプ，マルバツスタンプの3種類のスタンプをそれぞれ 0 個以上持っている．これらはマルやバツのマークを紙に印字することができるスタンプである．
 
マルスタンプを使うとマルが 1 つ印字され，バツスタンプを使うとバツが 1 つ印字される．マルバツスタンプを使うとマルとバツが横一列に 1 つずつ印字され，スタンプの向きを変えることで，マルの右にバツが来るようにも，バツの右にマルが来るようにも印字できる．
 
joi 君は，持っているスタンプをそれぞれちょうど 1 回ずつ適当な順番で使い，紙に横一列にマルとバツを印字した．印字されたマルとバツの列は文字列 s で表される．s は o と x から構成された長さ n の文字列であり，s_i =  o ならば joi 君が印字したマークのうち左から i 番目のものがマルであることを表し，s_i = x ならばそれがバツであることを表す (1 ≦ i ≦ n)．
 
あなたは，joi 君が持っているスタンプの個数は分からないが，joi 君が印字したマルとバツの列は知っている．印字されたマルとバツの列から，joi 君が持っているマルバツスタンプの個数としてあり得るもののうち最大値を求めよ．
 

"
p00578,Japan Sinks,"
日本列島は細長い列島である．日本列島は平行な境界線により n 個の区画に分けられている．区画には端から順に 1 から n の番号が付けられている．区画 i (1 ≦ i ≦ n) の高さは a_i である．
 
日本列島は海に囲まれており，海面の高さは場所によらず一定である．高さが海面の高さより高い区画を陸地と呼ぶ．
 
陸地が連続している部分のことを島と呼ぶ．より正確に書くと以下の通りである．整数 l, r (1 ≦ l ≦ r ≦ n) について，日本列島のうち区画 l，区画 l+1，...，区画 r からなる部分を領域 [l, r] という．以下の条件を満たす領域 [l, r] を島という：
 区画 l，区画 l+1，...，区画 r はすべて陸地である． l>1 ならば区画 l-1 は陸地ではない． r&lt;n ならば区画 r+1 は陸地ではない． 
海面の上昇により，日本列島は少しずつ沈没している．現在の海面の高さは 0 であるが，これは時間が経つにつれて徐々に上がり，ついには日本全体が海になってしまう．
 
joi 君は，海面の高さが上昇すると，日本の島の数が増減することに気付いた．現在から，日本に陸地がなくなるまでの間 (現在も含む) における，島の数の最大値を求めたい．
 

"
p00579,Illumination,"
joi 氏は，自宅の敷地に n 本の木を所有している．これらの木は一列に並んでおり，順に 1 から n までの整数で番号が付けられている．
 
この冬，joi 氏はいくつかの木を選んで，イルミネーションを飾り付けることにした．イルミネーションには美しさと呼ばれる値が定まっている．木 i にイルミネーションを飾り付ける場合の美しさは a_i である．
 
joi 氏は，あまりに近い 2 つの木の両方にイルミネーションを飾り付けてしまうと，眩しすぎる場合があることに気がついた．具体的には，j = 1, 2, ..., m に対して，木 l_j, l_j + 1, ..., r_j のうち 2 つ以上にイルミネーションを飾り付けるべきではないということが判明した．
 
この条件に従ってイルミネーションを飾り付けるときの，美しさの合計の最大値を求めよ．
 

"
p00580,Seats,"
2xxx 年，世界の国は直線状に並んでいた．n 個の国があり，1, 2, ..., n の番号が付けられている．i = 1, 2, ..., n - 1 に対し，国 i と国 i + 1 が互いに隣国である．
 
この年の国際情報オリンピックでは，国 i からは a_i 人の選手が参加する．国際情報オリンピックの技術委員のあなたは，競技での座席表を作成する担当である．競技会場が細長いため，一列に並んだ a_1 + a_2 + ... + a_n 個の座席に選手たちを割り当てることになった．不正防止のため，同じ国の選手や隣国の選手を隣り合う席に割り当ててはならない．
 
選手たちを座席に割り当てる方法は何通りあるだろうか．この数は非常に大きくなる可能性があるので，それを 10007 で割った余りを求めたい．
 

"
p00581,Bitaro the Brave,"
  勇者のビ太郎は，魔王と対峙することとなった．
 
  ビ太郎は，縦$h$ 行，横$w$ 列のマス目上に宝石(jewel)，オーブ(orb)，金塊(ingot) を配置し，魔法を発動することによって魔王に攻撃をしようとしている．以下，マス目のうち上から$i$ 行目($1 \leq i \leq h$)，左から$j$ 列目($1 \leq j \leq w$) のマスを，マス($i, j$) と表す．
 
  ビ太郎は今，それぞれのマスにこれら3 種類のうち1 個を配置した．今から魔法を発動しようとしているが，この魔法の威力はマス目上の宝石，オーブ，金塊の配置によって決まる．具体的には，次の条件を満たす整数($i, j, k, l$) ($1 \leq i 
																														       
条件：マス($i, j$) には宝石が，マス($i, l$) にはオーブが，マス($k, j$) には金塊が置かれている．
 
  ビ太郎は，この魔法の威力が気になっている．
 
  マス目上の宝石，オーブ，金塊の配置が与えられたとき，ビ太郎が発動する魔法の威力を求めるプログラムを作成せよ．
 


"
p00582,Exhibition,"
  あなたは，絵の展覧会を開催しようとしている．展覧会では，いくつかの絵を額縁に入れ，左から右に一列に並べて展示する．
 
  展覧会で展示する候補となる絵が$n$ 枚あり，1 から$n$ までの番号が付けられている．絵$i$ ($1 \leq i \leq n$) の大きさは$s_i$，価値は$v_i$ である．
 
  また，これらの絵を入れるための額縁が$m$ 枚あり，1 から$m$ までの番号が付けられている．額縁$j$ ($1 \leq j \leq m$) の大きさは$c_j$ である．額縁$j$ には，大きさが$c_j$ 以下の絵のみを入れることができる．1 枚の額縁には高々1 枚の絵しか入れることができない．
 
  展示する絵はすべて何らかの額縁に入っていなければならない．見栄えを良くするため，展示する絵は以下の条件を満たさなければならない：
 左右に隣り合うどの2 枚の絵についても，右側の絵が入っている額縁の大きさは左側の絵が入っている額縁の大きさ以上である．  左右に隣り合うどの2 枚の絵についても，右側の絵の価値は左側の絵の価値以上である． 
  あなたは，できるだけ多くの絵を展示したい．
 
  展示候補の絵の枚数，額縁の枚数，及びそれらの大きさや価値が与えられたとき，展示する絵の枚数の最大値を求めるプログラムを作成せよ．
 

"
p00583,Growing Vegetables is Fun 3,"
  joi 君は，長年にわたる家庭菜園の経験を生かして，自宅の庭で新たにジョイ草という植物を育てている．庭には東西方向に並んだ$n$ 個のプランターがあり，西側から順に1 から$n$ までの番号がついている．ジョイ草は全部で$n$ 株あり，それぞれのプランターに1 株ずつ植えてある．
 
  春になって様子を見に行ったjoi 君は，ジョイ草が予想に反して色とりどりの葉を付けていることに気がついた．さらに，ジョイ草が思ったほど生育していないことに気がついた．joi 君はこれらのことを不思議に思い，本で調べたところ，次のことがわかった：
  ジョイ草には3 種類あり，それぞれ赤，緑，黄の葉を付ける．  葉の色が同じジョイ草を近くに置くと，その成長が阻害されてしまう． 
  そこで，joi 君は，ジョイ草を並び替えて，葉の色が同じジョイ草が隣り合わないようにすることにした．このとき，joi 君は隣り合う2 つのジョイ草を入れ替えることしかできない．つまり，1 回の操作でjoi 君はプランター$i$ ($1 \leq i \leq n - 1$) を任意に1 つ選び，プランター$i$ のジョイ草とプランター$i + 1$ のジョイ草を入れ替えることができる．joi 君は，できるだけ少ない回数の操作で，葉の色が同じジョイ草が隣り合わないようにしたい．
 
  ジョイ草の数と，それぞれのジョイ草の葉の色が与えられたとき，葉の色が同じジョイ草が隣り合わないように並び替えるために必要な操作回数の最小値を求めるプログラムを作成せよ．
 


"
p00584,Coin Collecting,"
  joi 氏のコレクションルームには非常に大きな机があり，その上には何枚もの貴重なコインがある．机の掃除をするために，joi 氏はコインを整理して並べることにした．
 
  机は2 000 000 001 $\times$ 2 000 000 001 のマス目になっている．列には左から順に-1 000 000 000 から1 000 000 000までの番号がつけられており，行には下から順に-1 000 000 000 から1 000 000 000 までの番号がつけられている．列の番号が$x$，行の番号が$y$ であるマスを($x, y$) で表すことにする．
 
  コインは$2n$ 枚あり，現在，$i$ 番目($1 \leq i \leq 2n$) のコインはマス($x_i, y_i$) に置かれている．joi 氏の目標は，$1 \leq x \leq n$ かつ$1 \leq y \leq 2$ を満たす($x, y$) で表される$2n$ 個のマスに，それぞれコインが1 枚ずつ置かれている状態にすることである．コインを傷つけないようにするため，「コインを1 枚選び，それが置かれているマスと辺で隣り合ったマスのいずれかに，そのコインを移動させる」という操作のみができる．途中，複数のコインが同じマスに置かれていてもよい．joi 氏は，できるだけ少ない回数の操作で目標を達成したい．
 
  コインの枚数と，現在コインが置かれているマスが与えられたとき，目標を達成するために必要な操作回数の最小値を求めるプログラムを作成せよ．
 

"
p00585,Unique Cities,"
  joi 国には$n$ 個の都市があり，1 から$n$ までの番号がついている．これらの都市は$n - 1$ 本の道路で結ばれている．$i$ 番目($1 \leq i \leq n - 1$) の道路は都市$a_i$ と都市$b_i$ を結んでおり，双方向に通行可能である．どの都市からどの都市へも何本かの道路を通行することで移動できる．
 
  joi 国にはいくつかの特産品が存在する．特産品には，種類を表す1 以上$m$ 以下の番号が付けられている(joi 国で生産されている特産品に対応していない番号があるかもしれない)．各都市は1 つの特産品を生産しており，都市$j$ ($1 \leq j \leq n$) では特産品$c_j$ を生産している．複数の都市が同じ種類の特産品を生産することがあるかもしれない．
 
  2 つの都市の間の距離は，その間を移動するために通る道路の本数の最小値である．都市$x$ ($1 \leq x \leq n$)から見て都市$y$ ($1 \leq y \leq n, y \ne x$) が珍しい都市であるとは，すべての都市$z$ ($1 \leq z \leq n, z \ne x, z \ne y) について，都市$x, y$ 間の距離と都市$x, z$ 間の距離が異なることを意味する．
 
  joi 国の大臣であるk 理事長は，すべての$j$ ($1 \leq j \leq n$) について，都市$j$ から見て珍しい都市で生産されている特産品が何種類あるかを知りたい．
 
  joi 国の道路の情報と，各都市で生産されている特産品の番号が与えられたとき，各都市ごとに，その都市から見て珍しい都市で生産されている特産品が何種類あるかを求めるプログラムを作成せよ．
 


"
p00586,A + B Problem,"
compute a + b. 
 

"
p00587,Binary Tree Intersection And Union,"
given two binary trees, we consider the “intersection” and “union” of them.
here, we distinguish the left and right child of a node when it has only one
child. the definitions of them are very simple. first of all, draw a complete
binary tree (a tree whose nodes have either 0 or 2 children and leaves have
the same depth) with sufficiently large depth. then, starting from its root,
write on it a number, say, 1 for each position of first tree, and draw different
number, say, 2 for second tree. the “intersection” of two trees is a tree with
nodes numbered both 1 and 2, and the “union” is a tree with nodes numbered
either 1 or 2, or both. for example, the intersection of trees in figures 1 and
2 is a tree in figure 3, and the union of them is a tree in figure 4.
 
a node of a tree is expressed by a sequence of characters, “(,)“. if a node
has a left child, the expression of the child is inserted between ’(’ and ’,’.
the expression of a right child is inserted between ’,’ and ’)’. for exam-
ple, the expression of trees in figures 1 and 2 are “((,),(,))“ and “((,(,)),)“,
respectively.
 

"
p00588,Extraordinary Girl I,"
    she is an extraordinary girl. she works for a library. since she is young
and cute, she is forced to do a lot of laborious jobs. the most annoying job
for her is to put returned books into shelves, carrying them by a cart. the
cart is large enough to carry many books, but too heavy for her. since she
is delicate, she wants to walk as short as possible when doing this job.
    the library has 4n shelves (1 <= n <= 10000), three main passages, and
n + 1 sub passages. each shelf is numbered between 1 to 4n as shown in
figure 1. horizontal dashed lines correspond to main passages, while vertical
dashed lines correspond to sub passages. she starts to return books from the
position with white circle in the figure and ends at the position with black
circle. for simplicity, assume she can only stop at either the middle of shelves
or the intersection of passages. at the middle of shelves, she put books with
the same id as the shelves. for example, when she stops at the middle of
shelf 2 and 3, she can put books with id 2 and 3.
 
    since she is so lazy that she doesn’t want to memorize a complicated
route, she only walks main passages in forward direction (see an arrow in
figure 1). the walk from an intersection to its adjacent intersections takes 1
cost. it means the walk from the middle of shelves to its adjacent intersection,
and vice versa, takes 0.5 cost. you, as only a programmer amoung her friends,
are to help her compute the minimum possible cost she takes to put all books
in the shelves.

 


"
p00589,Extraordinary Girl II,"
    she loves e-mail so much! she sends e-mails by her cellular phone to
her friends when she has breakfast, she talks with other friends, and even
when she works in the library! her cellular phone has somewhat simple
layout (figure 1). pushing button 1 once displays a character (’), pushing
 
it twice in series displays a character (,), and so on, and pushing it 6 times
displays (’) again. button 2 corresponds to charaters (abcabc), and, for
example, pushing it four times displays (a). button 3-9 have is similar to
button 1. button 0 is a special button: pushing it once make her possible
to input characters in the same button in series. for example, she has to
push “20202” to display “aaa” and “660666” to display “no”. in addition,
pushing button 0 n times in series (n > 1) displays n − 1 spaces. she never
pushes button 0 at the very beginning of her input. here are some examples
of her input and output:
 
    one day, the chief librarian of the library got very angry with her and
hacked her cellular phone when she went to the second floor of the library
to return books in shelves. now her cellular phone can only display button
numbers she pushes. your task is to write a program to convert the sequence
of button numbers into correct characters and help her continue her e-mails!
 

"
p00590,Pair of Primes,"
   we arrange the numbers between 1 and n (1 <= n <= 10000) in increasing
order and decreasing order like this:
 
two numbers faced each other form a pair. your task is to compute the number of pairs p such that both
numbers in the pairs are prime.

 

"
p00591,Advanced Algorithm Class,"
   in the advanced algorithm class, n2 students sit in n rows and
n columns. one day, a professor who teaches this subject comes into the class, asks the shortest student in each row to lift up his left hand, and the tallest student in each column to lift up his right hand.
what is the height of the student whose both hands are up ? the student will
become a target for professor’s questions.
 
   given the size of the class, and the height of the students in the class, you
have to print the height of the student who has both his hands up in the class.
 

"
p00592,Boring Commercials,"
    now it is spring holidays. a lazy student has finally passed all final examination, and he decided to just kick back and just watch tv all day. oh, his
only source of entertainment is watching tv. and tv commercial, as usual, are
a big nuisance for him. he can watch any thing on television, but cannot bear
even a single second of commercial. so to prevent himself from the boredom of
seeing the boring commercial, he keeps shuffling through the tv channels, so
that he can watch programs on different channels without seeing even a single
commercial.

 
given the number of channels, and the duration at which the tv commercials
are showed on each of the channels, you have to write a program which will
print the longest interval for which the lazy student can watch the television by
shuffling between the different channels without ever seeing an tv commercial.
     
for example, consider the simplified situation where there are only three
television channels, and suppose that he is watching tv from 2100 hrs to 2400
hrs. suppose that the commercials are displayed at following time on each of
the channels.
  channel 1: 2100 to 2130, 2200 to 2230 and 2300 to 2330  channel 2: 2130 to 2200, 2330 to 2400  channel 3: 2100 to 2130, 2330 to 2400 
    then in this case, he can watch tv without getting interrupted by commercials for full 3 hours by watching channel 2 from 2100 to 2130, then channel 3
from 2130 to 2330, and then channel 1 from 2330 to 2400.
 

"
p00593,JPEG Compression,"
    the fundamental idea in the jpeg compression algorithm is to sort coeffi-
cient of given image by zigzag path and encode it. in this problem, we don’t
discuss about details of the algorithm, but you are asked to make simple pro-
gram. you are given single integer n , and you must output zigzag path on
a matrix where size is n by n . the zigzag scanning is start at the upper-left
corner (0, 0) and end up at the bottom-right corner. see the following figure
and sample output to make sure rule of the zigzag scanning. for example, if you
are given n = 8, corresponding output should be a matrix shown in right-side
of the figure. this matrix consists of visited time for each element.
 







"
p00594,What Color Is The Universe?,"
on a clear night, a boy, campanella looked up at the sky, there were many stars which have different colors such as red, yellow, green, blue, purple, etc. he was watching the stars and just lost track of time. presently, he wondered,
 
""there are many stars in the space. what color is the universe if i look up it from outside?""
 
until he found the answer to this question, he couldn't sleep. after a moment's thought, he proposed a hypothesis,
 
""when i observe the stars in the sky, if more than half of the stars have the same color, that is the color of the universe.""
 
you are given an array a. let |a| be the number of element in a, and let nm be the number of m in a. for example, if a = {3, 1, 2, 3, 3, 1, 5, 3}, |a| = 8, n3 = 4, n1 = 2, n5 = 1. your program have to find m such that:
  nm &gt; (|a| / 2 ) 
if there is no such m, you also have to report the fact. there is no
such m for the above example, but for a array a = {5, 2, 5, 3, 4, 5, 5}, 5 is the answer.
 

"
p00595,Greatest Common Divisor,"
please find the greatest common divisor of two natural numbers. a clue is: the euclid's algorithm is a way to resolve this task.
 

"
p00596,Dominoes Arrangement,"
consider the standard set of 28 western dominoes as shown in the above figure. given a subset of the standard set dominoes, decide whether this subset can be arranged in a straight row in accordance with the familiar playing rule that touching ends must match. for example, the subset [1, 1], [2, 2], [1, 2] can be arranged in a row (as [1, 1] followed by [1, 2] followed by [2, 2]), while the subset [1, 1], [0, 3], [1, 4] can not be arranged in one row. note that as in usual dominoes playing any pair [i, j] can also be treated as [j, i].
 
your task is to write a program that takes as input any subset of the dominoes and output either yes (if the input subset can be arranged in one row) or no (if the input set can not be arranged in one row).
 

"
p00597,Finding the Largest Carbon Compound Given Its Long,"
an bydrocarbon is an organic compound which contains only carbons and hydrogens. an isomer is a compound that has the same number of carbons but different structures. heptane, for example, is a hydrocarbon with 7 carbons. it has nine isomers. the structural formula of three are shown in figure 1. carbons are represented by the letter c, and bonds between carbons are represented by a straight line. in all figures, hydrogens are not represented for simplicity. each carbon can be connected to a maximum of 4 carbons.
 
let define a chain in an isomer as a sequence of connected carbons without branches. an isomer can have many chains of the same length. figure 2 shows the longest chain of carbons for each of the represented isomer. note that there can be many instances of longest chain in an isomer.
 
your task is to identify the number of carbons of the largest possible carbon compound whose longest carbon chain has n (1 &le; n &le; 30) carbons.
 


"
p00598,Operations with Finite Sets,"
let a, b, c, d, e be sets of integers and let u is a universal set that includes all sets under consideration. all elements in any set are different (no repetitions).
 
u - union of two sets, aub = {x &isin; u : x &isin; a or x &isin; b} is the set of all elements which belong to a or b.
 
i - intersection of two sets, aib = {x &isin; u : x &isin; a and x &isin; b} is the set of all elements which belong to both a and b.
 
d - difference of two sets, adb = {x &isin; u : x &isin; a, x &notin; b} is the set of those elements of a which do not belong to b.
 
s - symmetric difference of two sets, asb = (adb)u(bda) consists of those elements which belong to a or b but not to both.
 
c - complement of a set, ca = {x &isin; u : x &notin; a}, is set of elements which belong to u but do not belong to a. unary operator c has higest precedence.
 
the universal set u is defined as a union of all sets specified in data. 
 
your task is to determine the result of an expression, which includes sets, set operations and parenthesis (any number of parenthesis and any correct enclosure of parenthesis may take place).
 

"
p00599,Combinatorial Topology,"
it was long believed that a 2-dimensional place can not be filled with a finite set of polygons in aperiodic way. british mathematician, sir roger penrose, developed an aperiodic tiling over the years and established a theory of what is known today as quasicrystals.
 
the classic penrose tiles consist of two rhombi with angles 36 and 72 degrees, see figure 1. the edges of the rhombi are all of equal unit length, 1. these can fill the entire place without holes and overlaps (see figure 2). example: the bold line boundary in figure 1 is filled with 20 thin tiles and 20 thick tiles.
 
given a boundary (set of adjacent vertices counter-clock-wise oriented), how many thin tiles (36 degrees) and how many thick tiles (72 degrees) do you need to fill it (without any holes and intersections)?
 





"
p00600,Computation of Minimum Length of Pipeline,"
the aizu wakamatsu city office decided to lay a hot water pipeline covering the whole area of the city to heat houses. the pipeline starts from some hot springs and connects every district in the city. the pipeline can fork at a hot spring or a district, but no cycle is allowed. the city office wants to minimize the length of pipeline in order to build it at the least possible expense.
 
write a program to compute the minimal length of the pipeline. the program reads an input that consists of the following three parts:
 

"
p00601,Dominating Set,"
what you have in your hands is a map of aizu-wakamatsu city. the lines on this map represent streets and the dots are street corners. lion dor company is going to build food stores at some street corners where people can go to buy food. it is unnecessary and expensive to build a food store on every corner. their plan is to build the food stores so that people could get food either right there on the corner where they live, or at the very most, have to walk down only one street to find a corner where there was a food store. now, all they have to do is figure out where to put the food store.
 
the problem can be simplified as follows. let g = (v, e) be unweighted undirected graph. a dominating set d of g is a subset of v such that every vertex in v - d is adjacent to at least one vertex in d. a minimum dominating set is a dominating set of minimum number of vertices for g. in the example graph given below, the black vertices are the members of the minimum dominating sets.
 
design and implement an algorithm for the minimum domminating set problem.
 

"
p00602,Fibonacci Sets,"
fibonacci number f(i) appear in a variety of puzzles in nature and math, including packing problems, family trees or pythagorean triangles. they obey the rule f(i) = f(i - 1) + f(i - 2), where we set f(0) = 1 = f(-1).
 
let v and d be two certain positive integers and be n &equiv; 1001 a constant. consider a set of v nodes, each node i having a fibonacci label (f(i) mod n) assigned for i = 1,..., v &le; n. if |f(i) - f(j)| &lt; d, then the nodes i and j are connected.
 
let v and d be two certain positive integers and be n &equiv; 1001 a constant. consider a set of v nodes, each node i having a fibonacci label f[i] = (f(i) mod n) assigned for i = 1,..., v &le; n. if |f(i) - f(j)| &lt; d, then the nodes i and j are connected.
 
given v and d, how many connected subsets of nodes will you obtain?
 
figure 1: there are 4 connected subsets for v = 20 and d = 100.
 


"
p00603,Riffle Shuffle,"
 there are a number of ways to shuffle a deck of cards.  riffle shuffle is one such example.  the following is how to perform riffle shuffle.
 
  there is a deck of n cards.  first, we divide it into two decks; deck a which consists of the top half of it and deck b of the bottom half.  deck a will have one more card when n is odd. 
 
  next, c cards are pulled from bottom of deck a and are stacked on deck c, which is empty initially.  then c cards are pulled from bottom of deck b and stacked on deck c, likewise.  this operation is repeated until deck a and b become empty.  when the number of cards of deck a(b) is less than c, all cards are pulled.
  finally we obtain shuffled deck c.  see an example below:
 
  this operation, called riffle operation, is repeated several times.
 
  write a program that simulates riffle shuffle and answer which card will be finally placed on the top of the deck.
 


"
p00604,Cheating on ICPC,"
 peter loves any kinds of cheating.  a week before icpc, he broke into doctor's pc and sneaked a look at all the problems that would be given in icpc.  he solved the problems, printed programs out, and brought into icpc.  since electronic preparation is strictly prohibited, he had to type these programs again during the contest.
 

  although he believes that he can solve every problems thanks to carefully debugged programs, he still has to find an optimal strategy to make certain of his victory.
 
  teams are ranked by following rules.
    team that solved more problems is ranked higher.   in case of tie (solved same number of problems), team that received less penalty is ranked higher. 
  here, penalty is calculated by these rules.
    when the team solves a problem, time that the team spent to solve it (i.e. (time of submission) - (time of beginning of the contest)) are added to penalty.   for each submittion that doesn't solve a problem, 20 minutes of penalty are added.  however, if the problem wasn't solved eventually, penalty for it is not added. 
  you must find that order of solving will affect result of contest.  for example, there are three problem named a, b, and c, which takes 10 minutes, 20 minutes, and 30 minutes to solve, respectively.  if you solve a, b, and c in this order, penalty will be 10 + 30 + 60 = 100 minutes.  however, if you do in reverse order, 30 + 50 + 60 = 140 minutes of penalty will be given.
 
  peter can easily estimate time to need to solve each problem (actually it depends only on length of his program.)  you, peter's teammate, are asked to calculate minimal possible penalty when he solve all the problems.
 

"
p00605,Vampirish Night,"
there is a vampire family of n members.  vampires are also known as extreme gourmets.  of course vampires' foods are human blood.  however, not all kinds of blood is acceptable for them.  vampires drink blood that k blood types of ones are mixed, and each vampire has his/her favorite amount for each blood type.
 
you, cook of the family, are looking inside a fridge to prepare dinner.  your first task is to write a program that judges if all family members' dinner can be prepared using blood in the fridge.
 

"
p00606,Cleaning Robot,"
dr. asimov, a robotics researcher, loves to research, but hates houseworks and his house were really dirty. so, he has developed a cleaning robot.
 
as shown in the following figure, his house has 9 rooms, where each room is identified by an alphabet:
 
the robot he developed operates as follows:
 
if the battery runs down, the robot stops.
  if not so, the robot chooses a direction from four cardinal points with the equal probability, and moves to the room in that direction. then, the robot clean the room and consumes 1 point of the battery. 
 
however, if there is no room in that direction, the robot does not move and remains the same room. in addition, there is a junk room in the house where the robot can not enter, and the robot also remains when it tries to enter the junk room. the robot also consumes 1 point of the battery when it remains the same place.
 
a battery charger for the robot is in a room. it would be convenient for dr. asimov if the robot stops at the battery room when its battery run down.
 
your task is to write a program which computes the probability of the robot stopping at the battery room.
 

"
p00607,like Editor,"
emacs is a text editor which is widely used by many programmers.
 
the advantage of emacs is that we can move a cursor without arrow keys and the mice. for example, the cursor can be moved right, left, down, and up by pushing f, b, n, p with the control key respectively. in addition, cut-and-paste can be performed without the mouse.
 
your task is to write a program which simulates key operations in the emacs-like editor. the program should read a text and print the corresponding edited text.
 
the text consists of several lines and each line consists of zero or more alphabets and space characters. a line, which does not have any character, is a blank line.
 
the editor has a cursor which can point out a character or the end-of-line in the corresponding line. the cursor can also point out the end-of-line in a blank line.
 
in addition, the editor has a buffer which can hold either a string (a sequence of characters) or a linefeed.
 
the editor accepts the following set of commands (if the corresponding line is a blank line, the word ""the first character"" should be ""the end-of-line""):
 
a
move the cursor to the first character of the current line.
 
e
move the cursor to the end-of-line of the current line.
 
p
move the cursor to the first character of the next upper line, if it exists.
if there is no line above the current line, move the cursor to the first character of the current line.
 
n
move the cursor to the first character of the next lower line, if it exists.
if there is no line below the current line, move the cursor to the first character of the current line.
 
f
move the cursor by one character to the right, unless the cursor points out the end-of-line.
if the cursor points out the end-of-line and there is a line below the current line, move the cursor to the first character of the next lower line. otherwise, do nothing.
 
b
move the cursor by one character to the left, unless the cursor points out the first character.
if the cursor points out the first character and there is a line above the current line, move the cursor to the end-of-line of the next upper line. otherwise, do nothing.
 
d
if the cursor points out a character, delete the character (characters and end-of-line next to the deleted character are shifted to the left).
if the cursor points out the end-of-line and there is a line below, the next lower line is appended to the end-of-line of the current line (lines below the current line are shifted to the upper). otherwise, do nothing.
 
k
if the cursor points out the end-of-line and there is a line below the current line, perform the command d mentioned above, and record a linefeed on the buffer.
if the cursor does not point out the end-of-line, cut characters between the cursor (inclusive) and the end-of-line, and record them on the buffer.  after this operation, the cursor indicates the end-of-line of the current line.
 
y
if the buffer is empty, do nothing.
if the buffer is holding a linefeed, insert the linefeed at the cursor. the cursor moves to the first character of the new line.
if the buffer is holding characters, insert the characters at the cursor. the cursor moves to the character or end-of-line which is originally pointed by the cursor.
 
the cursor position just after reading the text is the beginning of the first line, and the initial buffer is empty.
 

"
p00608,Indian Puzzle,"
in the indian puzzle, one is intended to fill out blanks with numbers and operators in a n by n grid in order to make equalities in the grid true (see figure 1).
 figure 1 
a blank cell should be filled out with a number (from 0 to 9 inclusive) or an operator (+, -, &times;, &divide;, =), and black cells split equalities. initially, some cells are already filled with numbers or operators.
 
the objective of this puzzle is to fill out all the blank cells with numbers (from 0 to 9 inclusive) and operators (+, -, &times;, &divide;) in a given list. all the numbers and operators in the list must be used to fill out the blank cells.
 
a equality is organized by more than 2 consecutive left-to-right or top-to-bottom white cells. you can assume that a equality contains exactly one cell with '=' which connects two expressions.
 
the expressions conform to the order of operations and semantics of conventional four arithmetic operations. first, do all multiplication and division, starting from the left (top). then, do all addition and subtraction, starting from the left (top). in addition, this puzzle has the following rules:
 division by zero and division leaving a remainder, are not allowed. leading zeros are not allowed. unary operators like 3&times;-8=-24 are not allowed. 
in a formal description, the equality must conform the syntax in the following bnf:
 
of course, puzzle creators must make solvable puzzle.
your task is to write a program which verifies whether given puzzle is solvable or not.
 


"
p00609,Amazing Graze,"
in 2215 a.d., a war between two planets, acm and icpc, is being more and more intense.
 
acm introduced new combat planes.  these planes have a special system that is called graze, and fighting power of a plane increases when it is close to energy bullets that icpc combat planes shoot.
 
both combat planes and energy bullets have a shape of a sphere with a radius of r.  precisely, fighting power of a plane is equivalent to the number of energy bullet where distance from the plane is less than or equals to 2r.
 
you, helper of captain of intelligence units, are asked to analyze a war situation.  the information given to you is coordinates of an combat planes and bn energy bullets.  additionally, you know following things:
  all combat planes and energy bullet has same z-coordinates. in other word, z-coordinate can be ignored.  no two combat planes, no two energy bullets, and no pair of combat plane and energy bullet collide (i.e. have positive common volume) each other. 
your task is to write a program that outputs total fighting power of all combat planes.
 



"
p00610,Cleaning Robot 2,"
dr. asimov, a robotics researcher, released cleaning robots he developed (see problem b).  his robots soon became very popular and he got much income.  now he is pretty rich.  wonderful.
 
first, he renovated his house.  once his house had 9 rooms that were arranged in a square, but now his house has n &times; n rooms arranged in a square likewise.  then he laid either black or white carpet on each room.
 
since still enough money remained, he decided to spend them for development of a new robot.  and finally he completed.
 
the new robot operates as follows:
 the robot is set on any of n &times; n rooms, with directing any of north, east, west and south. figure 1. an example of the room robot that is on room (1,1) and directing north directs east and goes to (1,2). robot that is on room (0,2) and directing north directs west and goes to (0,1). robot that is on room (0,0) and directing west  halts. 

 since the robot powered by contactless battery chargers that are installed in every rooms, unlike the previous robot, it never stops because of running down of its battery.  it keeps working until it halts. 
doctor's house has become larger by the renovation.  therefore, it is not efficient to let only one robot clean.  fortunately, he still has enough budget.  so he decided to make a number of same robots and let them clean simultaneously.
 
the robots interacts as follows:
  no two robots can be set on same room.  it is still possible for a robot to detect a color of carpet of a room even if the room is occupied by another robot.  all robots go ahead simultaneously.  when robots collide (namely, two or more robots are in a single room, or two robots exchange their position after movement), they all halt.  working robots can take such halted robot away. 
on every room dust stacks slowly but constantly.  to keep his house pure, he wants his robots to work so that dust that stacked on any room at any time will eventually be cleaned.
 
after thinking deeply, he realized that there exists a carpet layout such that no matter how initial placements of robots are, this condition never can be satisfied.  your task is to output carpet layout that there exists at least one initial placements of robots that meets above condition.  since there may be two or more such layouts, please output the k-th one lexicographically.
 


"
p00611,Building Water Ways,"
in ancient times, romans constructed numerous water ways to supply water to cities and industrial sites. these water ways were amongst the greatest engineering feats of the ancient world.
 
these water ways contributed to social infrastructures which improved people's quality of life. on the other hand, problems related to the water control and the water facilities are still interesting as a lot of games of water ways construction have been developed.
 
your task is to write a program which reads a map and computes the minimum possible cost of constructing water ways from sources to all the cities.
 
as shown in figure 1, the map is represented by h &times w grid cells, where each cell represents source, city, flatland, or obstacle.
 
you can construct only one water way from a source, but there are no limitations on the length of that water way and it can provide water to any number of cities located on its path. you can not construct water ways on the obstacles.
 
your objective is to bring water to all the city and minimize the number of cells which represent water ways. in the figure 1, water ways are constructed in 14 cells which is the minimum cost.
 
the water ways must satisfy the following conditions:
 a water way cell is adjacent to at most 2 water way cells in four cardinal points. a source cell is adjacent to at most 1 water way cell in four cardinal points. there is no path from a source to other sources through water ways. 



"
p00612,Hedro's Hexahedron,"
dr. hedro is astonished.  according to his theory, we can make sludge that can dissolve almost everything on the earth.  now he's trying to produce the sludge to verify his theory.
 
the sludge is produced in a rectangular solid shaped tank whose size is n &times; n &times; 2.  let coordinate of two corner points of tank be (-n/2, -n/2, -1), (n/2, n/2, 1) as shown in figure 1.
 figure 1 
 doctor pours liquid that is ingredient of the sludge until height of the liquid becomes 1.  next, he get a lid on a tank and rotates slowly, without ruffling, with respect to z axis (figure 2).  after rotating enough long time, sludge is produced.  volume of liquid never changes through this operation.
 figure 2 
needless to say, ordinary materials cannot be the tank.  according to doctor's theory, there is only one material that is not dissolved by the sludge on the earth.  doctor named it finaldefenceproblem (for short, fdp).  to attach fdp tiles inside the tank allows to produce the sludge.
 
since to produce fdp is very difficult, the size of fdp tiles are limited to 1 * 1.  at first, doctor tried to cover entire the entire inside of the tank.  however, it turned out that to make enough number fdp tiles that can cover completely is impossible because it takes too long time.  therefore, he decided to replace fdp tiles where an area the sludge touches is zero with those of ordinary materials.  all tiles are very thin, so never affects height of the sludge.
 
how many number of fdp tiles does doctor need?  he has imposed this tough problem on you, his helper.
 


"
p00613,A Piece of Cake,"
in the city, there are two pastry shops.  one shop was very popular because its cakes are pretty tasty.  
however, there was a man who is displeased at the shop.  he was an owner of another shop.  although cause of his shop's unpopularity is incredibly awful taste of its cakes, he never improved it.  he was just growing hate, ill, envy, and jealousy.
 
finally, he decided to vandalize the rival.
 
his vandalize is to mess up sales record of cakes. the rival shop sells k kinds of cakes and sales quantity is recorded for each kind. he calculates sum of sales quantities for all pairs of cakes. getting k(k-1)/2 numbers, then he rearranges them randomly, and replace an original sales record with them.
 
an owner of the rival shop is bothered.  could you write, at least, a program that finds total sales quantity of all cakes for the pitiful owner?
 

"
p00614,ICPC: Ideal Coin Payment and Change,"
taro, a boy who hates any inefficiencies, pays coins so that the number of coins to be returned as change is minimized in order to do smoothly when he buys something.
 
one day, however, he doubt if this way is really efficient.  when he pays more number of coins, a clerk consumes longer time to find the total value.  maybe he should pay with least possible number of coins.
 
thinking for a while, he has decided to take the middle course.  so he tries to minimize total number of paid coins and returned coins as change.
 
now he is going to buy a product of p yen having several coins.  since he is not good at calculation, please write a program that computes the minimal number of coins.
 
you may assume following things:
 there are 6 kinds of coins, 1 yen, 5 yen, 10 yen, 50 yen, 100 yen and 500 yen. the total value of coins he has is at least p yen. a clerk will return the change with least number of coins. 



"
p00615,Traffic Analysis,"
there are two cameras which observe the up line and the down line respectively on the double lane (please see the following figure). these cameras are located on a line perpendicular to the lane, and we call the line 'monitoring line.' (the red line in the figure)
 
monitoring systems are connected to the cameras respectively.
when a car passes through the monitoring line, the corresponding monitoring system records elapsed time (sec) from the start of monitoring.
 
your task is to write a program which reads records of the two monitoring systems and prints the maximum time interval where cars did not pass through the monitoring line.
 
the two monitoring system start monitoring simultaneously. the end of monitoring is indicated by the latest time in the records.
 

"
p00616,Cubes Without Holes,"
there is a cube which consists of n &times; n &times; n small cubes. small cubes have marks on their surfaces. an example where n = 4 is shown in the following figure.
 
then, 
次に、上図（右）に示すように、印のついた表面から、反対の面まで水平または垂直に貫通する穴をあける。
 
あなたの仕事は、n と 印の位置を読み込み、穴の空いていない小さい立方体の個数を数えるプログラムを作成することである。
 

"
p00617,Simple GUI Application,"
advanced creative mobile 社（acm社）では、新しいポータブルコンピュータに搭載するguiアプリケーションの開発を行うことになった。
 
下図に示すように、guiは１つのメインパネルを持ち、その上にいくつかのパネルが配置され、さらにそれらのパネルの上にもいくつかのパネルが配置されるような入れ子構造になっている。パネルはすべて辺が座標軸に平行・垂直な長方形または正方形である。
 
アプリケーションはパネルの入れ子構造をタグ構造で保持する仕様となっている。パネルを表すタグ構造は、タグ値とそのパネルの上に配置されているパネルのタグ構造のリストを持つ。タグ値はそのパネルの左上の座標 (x1, y1) と 右下の座標 (x2, y2) を示す。
 タグ構造の構文規則を以下に示す。ここで、構文の記述に用いる記号の意味を、以下の表のように定める。""&lt;""、""&gt;"", "","" 及び ""/"" は、字句要素である。
 
タグ名はパネルの名前を示す１文字以上からなる文字列である。
 
タグ値は、カンマで区切られた４つの整数であり、それぞれパネルの座標を示す x1, y1, x2, y2 である。
 
例えば、上図に示したguiは以下のタグ構造で記述される(スペースの関係上２行にまたがっているが、入力は１行で与えられる)：
 
このguiでは、ユーザがある点をタッチすると、その点において最上部にあるパネルが選択される（境界線を含む）。
 
あなたの仕事は、メインパネルのタグ構造と、タッチされた点のリストを読み込み、以下の情報を出力するプログラムを作成することである。
 選択されたパネルの名前 そのパネルの直接上に配置されているパネルの数（以下""子の数""と呼ぶ） 
なお、入力されるタグ構造について以下のことを仮定してよい。
 タグ構造に文法エラーはない。 パネルがそれを含むパネル（以下""親パネル""と呼ぶ）からはみ出すことはなく、境界にも触れない。 同じ親パネルを持つパネル同士は重ならず、触れない。 同じ名前のパネルはない。 



"
p00618,Course Planning for Lazy Students,"
会津大学では2009年度より、授業履修に関する新しい制度を開始した。新制度では必修科目を撤廃し、それぞれの進路を考慮して科目を自由に選択できるようになった。
 
しかし、どの科目も無条件で履修できるわけではなく、特定の科目を履修するためには、先修条件を満たしている必要がある。下図に履修計画表の一部の例を示す：
 
図の長方形が１つの科目を表し科目名と単位数を含んでいる。図の矢印が先修条件を表す。矢印の意味は、矢印の終点で指されている科目を履修するためには、その矢印の始点を示す科目を修得している必要がある。例えば、linear algebra ii (線形代数２)を履修するためには、linear algebra i (線形代数１)を修得している必要がある。また、applied algebra (応用代数)を履修するためには、linear algebra i と discrete systems (離散系論)の両方を修得している必要がある。
 
さて、履修登録計画において卒業に要する最低限の合計単位数 u を満たす履修科目の組み合わせは、怠慢な学生にとって興味深いものである。
 
あなたの仕事は、与えられた履修計画表と u を読み込み、最低限の履修科目数を報告するプログラムを作成することである。これは計画であるため、履修登録した科目は必ず単位を修得できるものと仮定する。
 

"
p00619,Kuru Robot,"
ロボット工学の研究者であるアシモフ博士は、新しいロボットの開発に成功した。このロボットは、床に張り巡らせた特殊なワイヤーに沿って自由に動くことができる。ロボットは常に現在いるワイヤーに平行な方向を向いて前進する。
 
すばらしいことに、このロボットはワイヤー上を移動するためにその距離にかかわらずエネルギーを消費しない。しかし、ワイヤーの端点やワイヤーの交点で向きを変えるためにはその点を中心に回転する必要があり、その回転角度だけエネルギーを消費する。
 
このロボットをスタート地点からゴール地点まで動かしたい。例えば、下図においてロボットを start に東向き（下図 x軸の正の向き）で配置し goal まで動かしてみよう。start から交点 a 交点 b を経由して goal にたどり着く経路と、交点 a 交点 c を経由する経路があるが、前者の方が移動距離が長いものの回転角度が少ないためエネルギー消費量は少ない。
 
あなたの仕事は、床にあるワイヤーの位置、スタート地点、ゴール地点を読み込み、スタート地点からゴール地点へ移動するために必要な回転角度の合計の最小値を報告するプログラムを作成することである。
 
ロボットはスタート地点においてどのような向きに配置してもよく、ゴール地点ではどの方向を向いていてもよい。
 

"
p00620,Line Puzzle,"
プログラミングでパズルを解いてみよう。
 
n &times; n の数字が格子状に並んでいる。数字のいくつかは丸で囲まれており、これらを起点と呼ぶことにする。パズルのルールは以下のとおりである：
 各起点から縦・横に進む１本の線を引く（斜めには引けない）。 通った数字の和が起点の数字と同じになるように線を伸ばす。 線は枝分かれしてはいけない。 線はすでに引かれた数字を通ることはできない（線は交差してはいけない）。 線は２個以上の起点を通ることはできない。 
下図に示すように、パズルのゴールはすべての起点を使い、すべての数字に線を引くことである。
 
あなたの仕事は、パズルを解くプログラムを作成することである。
ただしこの問題では、与えられたパズルが解けるものかどうかを判定するだけでよい。
 

 

"
p00621,Sleeping Cats,"
jackは彼の住む家をとても気に入っていた. 彼の家の塀の上で毎日のように愛くるしいねこたちが昼寝をしているからだ. jackはねこがとても好きだった.
 
jackは, 夏休みの自由研究としてねこたちの観察日記を付けることにした. しばらく観察しているうちに, 彼はねこたちの面白い特徴に気付いた.
 
塀は w[尺] の幅があり, ここにねこたちは並んで昼寝をする. それぞれのねこたちは体の大きさが違うので, 昼寝に必要とする幅もまた異なる. 昼寝をしにきたねこは, 自分が寝られる場所があれば, そこで昼寝をする. ただし, そのような場所が複数ある場合はより左側で昼寝をし, 十分な幅が無ければ諦めて帰ってしまう. しばらく昼寝をしたねこは、起きると塀から飛び降りてどこかへと行ってしまう.
 
jackはねこたちを観察して, その行動をノートに書き留めた. しかし, とても多くのねこが昼寝をしていたので, この記録を集計するのはとても大変である. プログラムを書いて, ねこたちが昼寝をした場所を求めるのを手伝ってほしい.
 


"
p00622,Monster Factory,"
株式会社南天堂は, packet monster というゲームソフトを発売している. このゲームはモンスターを捕まえ, 育て, 戦わせるという趣旨のもので, 世界中で大人気のゲームであった.
 
このゲームには従来のゲームには無い特徴があった. このゲームには red と green という2つのバージョンがあり, それぞれのゲームで捕まえられるモンスターが異なるのだ. red でしか捕まえられないモンスターを green で入手するには, 通信交換というシステムを使う. つまり, 自分のソフト内のモンスターと友達のソフト内のモンスターを交換することができるのだ. このシステムは packet monster の人気に大きく貢献していた.
 
しかし, このゲームのパッケージの製造工程は, 2つのバージョンのために少々複雑になった. パッケージを製造している工場には2つの生産ラインがあり, 片方のラインでは red を, もう一方のラインでは green を製造している. 各ラインで製造されたパッケージは, 工場内で一意な製造番号が割り当てられ, 一箇所に集められる. そして以下のような攪拌（かくはん）装置によって混ぜられ, 出荷されるのだ.
 
red のパッケージは上側から, green のパッケージは左側から, ベルトコンベアによってこの攪拌装置に届けられる. 攪拌装置は十字の形をした2本のベルトコンベアから出来ており, ""push_down"", ""push_right"" という2つの命令を受け付ける. ""push_down""は「上下方向に走るベルトコンベアをパッケージ1個分下方向に動かせ」, ""push_right""は「左右方向に走るベルトコンベアをパッケージ1個分右方向に動かせ」という命令である. 攪拌は, red のパッケージと同じ数の push_down 命令と green のパッケージの数より１つ多い push_right 命令を, ランダムな順番で実行することによって行われる. ただし, 最初に実行される命令と最後に実行される命令は ""push_right"" と決まっている. この制約の元では, red のパッケージの数と攪拌装置の下端に届くパッケージの数が一致し, green のパッケージの数と攪拌装置の右端に届くパッケージの数が一致する.
 
攪拌されたパッケージは最終的にベルトコンベアの下端または右端に届き, 届いた順に包装されて出荷される.
 
以下に, 一連の攪拌の手続きの例を示す.
簡単のため, 1つのパッケージを1文字のアルファベットとして表す.
 
さて, この工場では不良品の追跡などの目的で, ベルトコンベアの下端・右端に届いたパッケージとその順番を記録している.しかしこの記録にはコストが掛かるため, 工場長は下端に届いたパッケージについてのみ記録を取ることを考えた.右端に届いたパッケージは, 上端・左端に送られるパッケージと下端に届いたパッケージの記録から求められるのではないかと思ったのだ.
 
工場長を助けて, 右端に届いたパッケージの記録を作成するプログラムを作ってほしい.
 


"
p00623,Midnight Teatime,"
icpcの国内予選に備えて問題を解いていた僕は, その日3つ目のacceptを貰ったところでキーボードを叩く手を止めた. 時計を見れば, もう日付が変わろうかという時刻だ. 紅茶とお菓子で一服して, 今日はもう寝ることにしよう. そう思って僕はキッチンへと向かった.
 
ダージリンのかぐわしい香りがキッチンを満たした頃, 妹がやってきた. 受験生である彼女は今日もこんな時間まで真面目に勉強していたようだ. 僕は彼女を誘って, 小さな深夜のお茶会を開くことにした.
 
都合の良いことに, キッチンには4つのお菓子があった. これをただ2人で分けるのもつまらないので,  僕はこのお菓子を賭けて簡単なゲームをしないかと提案した. そのゲームの内容を説明しよう.
 
まず最初に, 僕はどのノードも0個または2個の子を持つような二分木を書く. 次に, その木の葉に当たる(つまり, 子を持たない)ノードに, それぞれ s = {a, b, c, d} の任意の部分集合を書き込む. 4つのお菓子は, それぞれ a, b, c, d に対応する.
 
最後に妹は, 木の内部接点(つまり、2つの子を持つ)ノードに 'a', 'o', 'x' のいずれかの文字を書き込む.
 
妹は, 木の根にあたるノードが示すお菓子を得る. ただし, ノードが示すお菓子とは,
  そのノードが内部接点であれば,  そのノードに書かれた文字が a のとき、 sl と sr の積集合  そのノードに書かれた文字が o のとき、 sl と sr の和集合  そのノードに書かれた文字が x のとき、 sl と sr の対称差 
のことである. ここで、sl はそのノードの左の子ノードが示すお菓子, sr はそのノードの右の子ノードが示すお菓子を指す. 2つの集合の対称差は, どちらか一方の集合にのみ含まれるような元から成る集合である.
 
このゲームに妹は乗ってきた. それどころか, お菓子を4つとも巻き上げてやろうと目を輝かせている. 出来れば僕の分も残しておいてくれると嬉しいのだけれども.
 
僕が書いた木に対して, 妹が全てのお菓子を得られるような内部接点の書き込み方は, いったい何通りあるだろうか？
 



"
p00624,Dr. Nakamura's Lab.,"
dr.中村は偉大な発明者である, 今日も常人には発想出来ない新たな発明に取り掛かっている. 今発明しているのは新たな防犯システムとコンテナである. 
 
防犯システムの方は上に乗った者を識別して招かれざる客だった場合, 電流を流して気絶させるパネルである. このパネルは踏まないように上を通過しても無駄で, 空中のものに対し放電する. しかし, まだ完成には程遠く, 電流は強すぎて調節が不可能で, 一度放電すると充電しない限り使えない. また, 人と物体の区別ができず, そもそも人自体区別できない等欠点をあげればキリがない.
 
コンテナの方は謎の力によって常時地面から浮いており, 運ぶのに便利に作ってある. しかし, これも完成には遠く, 一度押すと何かにぶつかるまで止まらない.
 
dr.中村は一日の作業を終え, 帰宅しようとしたが未完成のパネルを設置したままだということに気づいた. これを取り外すのは防犯上非常に困難に作ってある上に, これを通らなければ帰れないような位置に設置してしまったのでdr.中村は途方に暮れた. しかし, 素晴らしい頭脳を持つdr.中村は解決案をすぐに思いついた. パネルは一度放電させれば通れるようになるため, コンテナを通過させればパネルの上を通れるようになる, そう考えた. 実際, パネルの上にコンテナを通過させると, コンテナは電流によって消滅してしまう一方でパネルは放電し, 通れるようになる.
 
しかし, 研究室の中は入り組んでおり, うまくコンテナを動かさないとパネルを通過させられない. dr.中村は助手であるあなたにメールで助けを求めた. あなたの仕事は研究室の情報が与えられた時にdr.中村が出口までたどり着くためのプログラムを作成することである.
 
研究室は二次元グリッドで与えられ, dr.中村は一度の移動で上下左右に隣接するセルに移動することが出来る.ただし, 障害物, コンテナ, 放電していないパネルのセルには移動できない.
 
dr.中村は上下左右に隣接するセルにあるコンテナを押すことができ, コンテナはdr.中村がいる方向と逆の方向に別のコンテナか障害物にぶつかる, あるいは放電されていないパネルの上を通過するまで動く. また, 何かにぶつかり止まった場合, ぶつかる直前のセルで静止する. 
 
出口はコンテナもdr.中村も侵入可能である. コンテナは出口を通っても消滅せず、そのまま通過する.
 
壁にぶつかって出口をふさぐことはある. この場合は出口に進入できない.
 
あなたのプログラムが要求されていることは, dr.中村は最少何回の移動で研究室を脱出できるかを出力することのみである. なぜなら, dr.中村は素晴らしい頭脳の持ち主なのでそれさえわかれば自分で脱出するからである.
 

"
p00625,Frisbee Dogs,"
クレインは, 彼女の愛犬である jack をフリスビードッグ大会に出場させようとしている. しかし, 彼女は jack がよい成績を取れるか自信が無い. 彼女のために, 大会をシミュレートして jack の成績を見積もるプログラムを作成してほしい.
 
この大会は, 2次元平面上にいる n 匹の犬によって行われる. 大会の開始時点において, i 番目の犬は (dix, diy) の位置にいる. i 番目の犬は vi [m/s] で走ることができ, 全ての犬は十分小さいので点とみなせる. ある時刻に, 2 匹以上の犬が同じ位置にいても構わない.
 
1枚目のフリスビーの発射をもって大会は開始し, この瞬間から犬たちは動くことを許される. フリスビーもまた点とみなすことができ, i 枚目のフリスビーは (fpix, fpiy) の位置から (fvix, fviy) [m/s] の速度ベクトルで発射され, 等速直線運動を続ける. ある犬の位置とフリスビーの位置が等しくなったとき, その犬はフリスビーを取得することができる.
 
1枚目のフリスビーがいずれかの犬に取得された瞬間, 2枚目のフリスビーが発射される. 2枚目のフリスビーが取得された瞬間3枚目が発射され, 以下同様にフリスビーが取得された直後に次のフリスビーが発射される. m 枚目のフリスビーが取得されると大会は終了する.
 
言うまでもなく, 犬たちの目標はより多くのフリスビーを取得することである. 犬たちは, 以下のような戦略をとる.
 
フリスビーが発射されたとき, 犬は可能な限り早い時刻にそれを取得できるように移動し, フリスビーを取得する. ただし, フリスビーを取得できないときは現在いる場所に待機する.
 
ある犬がフリスビーを取得できるかどうかの判断は, 他の犬の行動に関係なく行われる. つまり, ある犬がフリスビーを取得するために移動したものの, 他の犬に先に取得されてしまうことも有りえる. いずれかの犬がフリスビーを取得し新たなフリスビーが発射された瞬間, 犬たちは新しいフリスビーに対して上記の戦略をとる.
 
あなたの作成するプログラムは、それぞれの犬が取得したフリスビーの数を出力しなければならない.
 


"
p00626,Chocolate with Heart Marks,"
太郎君はチョコレートが大好きで, 学校から帰るとハートマークが描かれたお気に入りの板チョコを食べます, 最近の楽しみは, すべてのハートマークのブロックを最後まで残すように食べることです. 太郎君は, すべてのハートマークのブロックがつながったまま, できるだけ多くのハートマークのないブロックを食べようとします.
 
しかし太郎君はまだ幼く, 上記のように食べようとしても無駄なブロックが残ってしまいます. そこで太郎君は, すべてのハートマークのブロックをつながったまま残すときに食べられる最大のブロック数を求めるプログラムの作成をあなたに依頼しました.
 
太郎君は, すべてのハートマークのブロックがつながっている限り、どんな食べ方をしてもかまいません. ブロックのいずれか一辺が他のブロックに接していないと分かれていることになります.
 


"
p00627,Kyudo: A Japanese Art of Archery,"
伊藤くんは高校入学後弓道部に入部しました。はじめは的に矢が届かず大苦戦していましたが、高校１年の秋になんとか的まで矢が届くくらいまで上達しました。
 
そんなある日先輩加藤くんから「弓道の近的競技に出場してみないか？」と提案が、、。
伊藤くんは初めての大会にチャレンジする気満々です。
 
近的競技とは、１回に４本行射（矢を射つ）し、そのうち的に当たった数（的中数）を記録します。これを複数回繰り返し、的中数の合計を競います。
 
大会に向けて一生懸命練習している伊藤くんのために、加藤くんは本番を想定して合計的中数を算出できるプログラムを作成してあげることにしました。
 
このプログラムは、合計射数 n と各回の的中数を読み込み、合計的中数を出力します。
 
例えば、合計射数 n が 20 の場合は、1 回に 4 本行射することを 5 回繰り返すので、的中回数を 5 回入力します。
 

"
p00628,Yes,"
博士：　ペーター君「yes, i have a number」って知ってるかい？
 
ぺーター：　このまえテレビでやってましたよ。文章に含まれる各単語の文字数で何かを覚えるというものですよね。
「yes, i have a number」 だから、「3.14という数字」という意味になって円周率を覚えるためのキーワードになっているんですよね。
 
博士：　ペーター君、それは違うんじゃ。
これは、3.1416 と解釈せねばならぬのじゃ。円周率は3.14159...だからのう。
 
ペーター：　それじゃ、あの番組は日本が円周率を3.14と教えているからといって無理矢理省略したんですか！？
 
博士：　、、、。小学校で教える円周率がやっと3から3.14に戻っただけでもよしとしよう。
 
ペーター：　そもそも、これで本当に覚えられるんですか？
 
博士：　日本人には難しいかもしれん。英語圏の人たちは使うようじゃよ、英語でゴロ合わせをするのは難しいからのぉ。
 
ペーター：　それにしても、チェックするのが面倒くさそうですね。
 
博士：　そこでじゃ、文章を単語の文字数の数列に変換するプログラムを作ってほしいのじゃ。
 
ペーター：　了解しました。詳しい仕様を教えてください博士。
 
博士：　1行の文章を入力としよう。簡単のためにアルファベットと空白のみを含む文章でよいぞ。
この文章について、空白・文頭・文末に挟まれた文字列の長さを順番に出力してくれ。
文字列の文字数は9を超えないと過程してよいぞ。


例えば、""yes i have"" の yes は文頭と最初の空白で区切られているから文字数は 3 、 i は 1 つ目と 2 つ目の空白に区切られていて文字数は 1 じゃ。
 
博士：　・・・そうじゃ、空白が連続した場合の、文字数が 0 になる文字列も忘れずにな。
 

"
p00629,Selecting Teams Advanced to Regional,"
日本で毎年開催される国際大学対抗プログラミングコンテストのアジア地区予選に出場するためには、厳しい国内予選を突破しなければなりません。
 
大学対抗とは言っても、１つの学校から複数のチームが参戦します。そこで、できるだけ多くの学校がアジア地区予選に出場できるように、突破チームの選抜には以下の選抜ルールが適用されます：
 
該当チームを a とし、成績の優秀な順番に次のルールを適用します：
 ルール 1：
その時点での選抜チーム数が 10 に満たない場合：
a と同じ所属でその時点で選抜されたチームの数が 3 に満たなければ、a は選抜されます。
 ルール 2：
その時点での選抜チーム数が 20 に満たない場合：
a と同じ所属でその時点で選抜されたチームの数が 2 に満たなければ、a は選抜されます。
 ルール 3：
その時点での選抜チーム数が 26 に満たない場合：
a と同じ所属でその時点で選抜されたチームがなければ、a は選抜さます。
 
また、成績の順番は次のルールで決定されます：
 より多くの問題を解いたチームが上位となります。 解いた問題数が同じ場合は、ペナルティが小さいチームが上位となります。 
各チームのid（整数）、所属（整数）、正解数（整数）、ペナルティ（整数）を入力し、選抜チームのidを選抜順に出力するプログラムを作成して下さい。
チームは成績順に与えられるとは限らないので、順位付けした後、選抜ルールを適用しなければならないことに注意して下さい。
 
この問題では、正解数とペナルティが同じチームがあった場合はidが小さい方を上位とします。
 

"
p00630,CamelCase,"
プログラミングにおける識別子（変数や関数）の命名では、
単語を連結した複合語が使われる。
しかし、そのまま連結すると単語の区切りがわからなくなるため、
一般的に以下の命名規則の中から統一するものを選び適用する：
 upper camelcase　にする
単語を直接連結し複合語とし、各単語の先頭文字のみを大文字にする。
例： getusername
 lower camelcase　にする

単語を直接連結し複合語とし、各単語の先頭文字のみを大文字にする。ただし、複合語の先頭文字は小文字にする。
例： getusername
 アンダースコアで繋ぐ

単語をアンダースコアで連結し複合語とする。単語の文字はすべて小文字にする。
例： get_user_name
 
与えられた識別子を、指定された命名規則を適用して出力するプログラムを作成せよ。
与えられる識別子は、上記の命名規則のいづれかが既に適用されているものとする。
 


"
p00631,Split Up!,"
勇者ポン太とその親友同じく勇者ゴン太は、これから壮大な冒険へと出発するために、それぞれ仲間を求めてルイーダの酒場へやって来ました。酒場には、冒険に出たくてうずうずしている武闘家や僧侶、魔法使いがたくさん居ます。
 
心やさしいゴン太はポン太を気遣い、「先に仲間を選んでいいよ。」と言いました。
 
一方、ポン太もゴン太が心配でなりません。「いや、君が先に選んでいいよ。」と言い返しました。
 
お互い譲り合いが続き、ついにルイーダがこう提案しました。「じゃあ、ここにいる n 人の登録者をそれぞれのパーティの合計戦闘力がなるべく均等になるように、この""パーティ分けマシン""で分けてあげるわ。」
 
あなたに与えられた仕事は、パーティ分けマシンに組み込まれているプログラムを作成することです。
 
このプログラムは　n 個の整数を入力し、それらを２つのグループ a, b に分けたときの、a に含まれる整数の合計値と b に含まれる整数の合計値の差の最小値を出力しなければなりません。
 
このマシンのおかげで、ポン太とゴン太は仲良く仲間を見つけ、壮大な冒険へと出かけて行きました・・。
 


"
p00632,Ghost Buster!,"
一般人には知る由も無いことだが、この街は幽霊で溢れている。そのほとんどは無害なのだが、困ったことに、人を呪う悪霊も少なからずいるのだ。
 
あるところに、そんな悪霊と戦う少女がいた。彼女は昼間は何食わぬ顔で高校に通いながらも、夜になると街中を歩き回り、彷徨える魂を見付けては成仏させるのだ。
 
幽霊を成仏させるためにはまずその幽霊に接近する必要があるのだが、それは簡単なことではない。幽霊は物をすり抜けられるからだ。幽霊は民家に壁から侵入して勝手口から出て行ったり、信号の無い大通りを悠々と横断したりする。人間である彼女にはそんなことはできないので、幽霊を追跡するのはとても難しいのだ。
 
彼女は経験上、幽霊が規則的な動きをすることを知っていた。そこで彼女は、この情報を活用して幽霊を追跡することを考えた。
 
彼女のいる街は、(h &times; w)マスのグリッドとして表される。彼女も幽霊も、1分間に1回、次の5つの行動
 東へ1マス進む 西へ1マス進む 南へ1マス進む 北へ1マス進む その場に留まる 
のうちどれか1つを行うことができる。ただし、彼女は街の周囲に結界を張ったので、彼女も幽霊も街の外に出ることはできない。また、そのような行動をしようとした場合、代わりにその場に留まる。
 
それぞれのマスは '#' または '.' という文字によって表され、前者は幽霊だけが進入できるマスを、後者は両者が進入できるマスを表す。
 
幽霊の行動パターンは、l個の行動の列として与えられる。幽霊はこれらの行動を最初から順番に実行していき、全ての行動を実行し終わるとまた最初の行動に戻り、順に実行し続ける。
 
彼女と幽霊が n 分後に同じマスにいたならば、彼女と幽霊は時刻 n で遭遇したと言うことが出来る。幽霊は放っておくとどんな被害をもたらすか分からないので、彼女は出来るだけ早い時刻に幽霊を捕まえたい。なので、彼女は頼れる先輩であるあなたに、彼女と幽霊が遭遇できる最も早い時刻とその遭遇場所を求めるプログラムを書いてほしいと思っている。
 
さあ、彼女を助けて、彼女のありがたい言葉で彷徨える魂を極楽浄土へと導くのだ！
 

"
p00633,Crop Circle,"
アルゼンチンの広大な農地に突如ミステリーサークルが出没した。ミステリーサークルは重なっているもの、ポツンとあるもの、大きいもの、小さいものと合計 n 個確認された。
 
あるミステリーハンターが空中からミステリーサークルの全体像を撮影しようと試みたところ、各円の輪郭がはっきりしていなかったため、映像にその美しい模様を映し出すことが難しいことが分かった。
 
そこで、そのミステリーハンターは輪郭に沿って特殊素材の紐を設置し、輪郭を強調する提案をした。
 
紐を設置する部分は、あるミステリーサークルの円周上で、他のどのミステリーサークルにも含まれない部分である。
 
撮影隊は必要な紐の長さを計測するために、プログラムの作成をあなたに依頼した。各ミステリーサークルの中心座標と半径を入力し、設置する紐の長さを報告するプログラムを作成せよ。
 
参考として入出力例の１つ目と２つ目のケースをそれぞれ図１、図２に示す。紐の部分が太い線で示されている。
 図１ 図２ 






"
p00634,Provident Housewife,"
主婦の琴子はこの不況のさなか食費を抑えることに闘志を燃やしていました。毎朝新聞広告を必ずチェック。買う物リストと最も安く売られているお店をしっかりリストアップして、お店をはしごしながら、エプロン・サンダルという戦闘スタイルで自転車をこぎこぎ買い物に行きます。
 
そこで夫のあなたは少しでも琴子の役に立とうと、得意のプログラミングで家計簿プログラムを作成することにしました。プログラムは、各スーパーに売っている品物の名前と値段（円）、琴子が必要な品物を入力し、全ての品物を集めるための最小金額を出力します。
 
琴子は家を出て必要な品物を集め、家に戻ってこなければなりません。
そこで、琴子を気遣ったあなたは、最小金額が同じになる買い物ルートが複数ある場合も考慮して、より距離が短くなるルートの距離を報告する機能を追加することにしました。従って、プログラムはスーパー・家間を繋ぐ道の情報も入力します。
 
スーパーの数を n とし、各スーパーにはそれぞれ 1 から n までの番号が割り当てられます。さらに琴子の家を 0 番とします。道の情報はこれらの番号のペアとその距離（整数）で与えられます。
 


"
p00635,Building Houses,"
この秋、割火ハウスは最近開拓が進んでいる松短地区の神暗通り沿いの土地を分譲することにした。

先日募集をかけ、今日は購入者に分譲説明会を開催する。
 
購入者が説明会場に集まりだしたところ、なんだか空気がとても凍り付いていた。不思議に思った担当者は開催前に
 
「皆さん新天地を求めてきたというのに、ちょっと表情が暗いですが大丈夫ですか？」
 
と聞いてみた。そこで思わぬ事実が判明した。実は、購入者全員が現在隣町の集合団地の住人で、あまりにも周辺の人たちと折り合いが合わないため今回引越しをしようと検討していたのだった。
 
購入者たちはすでに費用を支払済みで以前の住まいを引き払っている。従って、今回分譲した松短地区の神暗通りに家を立てる他方法はない。
 
しかしながら、少しでも快適な新居ライフを送ってもらおうと担当者は頭を悩ませた。よくよく話を聞いてみると、仲の悪さにはバラツキがあったので、聞き込みを行い図１のような仲の悪い度チェック表を作成した：
 図１：仲の悪い度チェック表 
購入者の数を n とすると、表は n &times; n の行列となり、要素 ai,j は、購入者 i が自分の家から購入者 j の家を最低でも何 m 離したいかを示す。例えば、図１の表において、購入者 a は自分の家と購入者 b の家の距離が 2 m 以上離れていないと納得しない。さらに、購入者 b は自分の家と購入者 a の家の距離が 4 m 以上離れていないと納得しない。従って a と b の距離は 4 m 以上離す必要がある。
 
担当者はこの表に基づき隣の家との間隔を設け土地のレイアウトを設計することにした。

 
あなたの仕事は、仲の悪い度チェック表を入力し、購入者の家を神暗通り（一直線上）に建てるために最低限必要な通りの長さ（m）を出力するプログラムを作成することである。
なお簡単のために、家は点として扱い、その幅は 0 m と仮定する。
 


"
p00636,The Last Dungeon,"
勇者ポン太はいよいよ最終ダンジョンの目前までやってきた。ここは、悪の帝王ボロモスの砦の前に広がる闇の荒野であり、かなり強者のモンスターが、それぞれの縄張りを守っている。
 図１：荒野 
荒野は図１に示すように、南西を原点(0, 0)とした 4 &times; 4 の正方形の領域で表されている。この領域の中に、図の点で示されているように、モンスターが構えている。勇者ポン太はこの領域を西から東へ（wからeへ）横断しなければならない。つまり、x 座標が 0.0 であり y 座標が 0.0 以上 4.0 以下である点から出発し、x 座標が 4.0 であり y 座標が 0.0 以上 4.0 以下である点へ移動しなければならない。
 
モンスターは、敵が領域に進入すると、自分と敵との距離が他のどのモンスターと敵との距離よりも短い場合、敵に襲いかかってくる。
 
十分なアイテムもない今、ボロモスと戦う前になるべく戦いは避けたいのが本音のポン太だった。そこで、ポン太はあることに気づいた：自分との距離が最も短くなるモンスターが常に２匹以上存在する道を進めばモンスターに襲われることはない。
 
勇者ポン太が無傷でボロモスのもとに辿りつけるかは、あなたのコントロール操作にかかっている。
闇の荒野を抜ける最短距離を求めるプログラムを作成せよ。
 
参考として、図１における最短経路を図２に示す。
 図２：最短経路 





"
p00637,Citation Format,"
to write a research paper, you should definitely follow the structured format. this format, in many cases, is strictly defined, and students who try to write their papers have a hard time with it.
 
one of such formats is related to citations. if you refer several pages of a material, you should enumerate their page numbers in ascending order. however, enumerating many page numbers waste space, so you should use the following abbreviated notation:
 
when you refer all pages between page a and page b (a &lt; b), you must use the notation ""a-b"". for example, when you refer pages 1, 2, 3, 4, you must write ""1-4"" not ""1 2 3 4"". you must not write, for example, ""1-2 3-4"", ""1-3 4"", ""1-3 2-4"" and so on. when you refer one page and do not refer the previous and the next page of that page, you can write just the number of that page, but you must follow the notation when you refer successive pages (more than or equal to 2). typically, commas are used to separate page numbers, in this problem we use space to separate the page numbers.
 
you, a kind senior, decided to write a program which generates the abbreviated notation for your junior who struggle with the citation.
 

"
p00638,Old Bridges,"
long long ago, there was a thief. looking for treasures, he was running about all over the world. one day, he heard a rumor that there were islands that had large amount of treasures, so he decided to head for there.
 
finally he found n islands that had treasures and one island that had nothing. most of islands had seashore and he can land only on an island which had nothing. he walked around the island and found that there was an old bridge between this island and each of all other n islands.
 
he tries to visit all islands one by one and pick all the treasures up. since he is afraid to be stolen, he visits with bringing all treasures that he has picked up. he is a strong man and can bring all the treasures at a time, but the old bridges will break if he cross it with taking certain or more amount of treasures.
 
please write a program that judges if he can collect all the treasures and can be back to the island where he land on by properly selecting an order of his visit.
 


"
p00639,Accelerated Railgun,"
she catched the thrown coin that draws parabolic curve with her sparkling fingers. she is an esper. yes, she is an electro-master who has the third strongest power among more than one million espers in the city. being flicked by her thumb, the coin is accelerated by electromagnetic force and is shot as fleming's right-hand rule. even if she holds back the initial velocity of the coin exceeds three times of the speed of sound. the coin that is shot in such velocity is heated because of air friction and adiabatic compression. as a result coin melts and shines in orange. this is her special ability, called railgun. the strength of railgun can make a hole of two meters in diameter on a concrete wall.
 
she had defeated criminals such as post office robberies and bank robberies in the city with her ability. and today, she decided to destroy a laboratory that is suspected to making some inhumane experiments on human body. only her railgun can shoot it.
 
the railgun with a coin cannot destroy the laboratory because of lack of power. since she have found a powered-suit nearby, so she decided to use it as a projectile. however, in this case it is difficult to take sight properly because the suit is much bigger and heavier than coins. therefore she only can shoot the suit with certain velocity vector from her current position. depending on the position of the laboratory, her railgun may not hit it and become a firework.
 
therefore she asked cooperation to the strongest esper in the city. he can change direction of a moving object as one of uncountable application of his esp. let's consider a 2-dimensional plane where the laboratory is on the origin (0, 0). she shoots a projectile from p = (px, py) with velocity vector v = (vx, vy). his esp makes a virtual wall of radius r (= 1.0) centered on the origin. when projectile collides with the wall, it is reflected so that incident angle will be equal to reflection angle.
 
range of railgun is limited to d, because air friction decreases velocity of projectile and heat may melts projectile completely. under these conditions, please write a program that judges if the railgun hits the laboratory. size of the laboratory and the suit is ignorablly small. after the railgun is shot, it is allowed to pass through p again.
 


"
p00640,Distorted Love,"
saying that it is not surprising that people want to know about their love, she has checked up his address, name, age, phone number, hometown, medical history, political party and even his sleeping position, every piece of his personal information. the word ""privacy"" is not in her dictionary. a person like her is called ""stoker"" or ""yandere"", but it doesn't mean much to her.
 
to know about him, she set up spyware to his pc. this spyware can record his mouse operations while he is browsing websites. after a while, she could successfully obtain the record from the spyware in absolute secrecy.
 
well, we want you to write a program which extracts web pages he visited from the records.
 
all pages have the same size h &times; w where upper-left corner is (0, 0) and lower right corner is (w, h). a page includes several (or many) rectangular buttons (parallel to the page). each button has a link to another page, and when a button is clicked the browser leads you to the corresponding page.
 
his browser manages history and the current page in the following way:
 
the browser has a buffer of 1-dimensional array with enough capacity to store pages, and a pointer to indicate a page in the buffer. a page indicated by the pointer is shown on the browser. at first, a predetermined page is stored and the pointer indicates that page. when the link button is clicked, all pages recorded in the right side from the pointer are removed from the buffer. then, the page indicated by the link button is stored into the right-most position of the buffer, and the pointer moves to right. as a result, the user browse the page indicated by the button.
 
the browser also has special buttons 'back to the previous page' (back button) and 'forward to the next page' (forward button). when the user clicks the back button, the pointer moves to left, and the user clicks the forward button, the pointer moves to right. but in both cases, if there are no such pages in the buffer, nothing happen.
 
the record consists of the following operations:
 
it means to click (x, y). if there is a button on the point (x, y), he moved to the corresponding page. if there is nothing in the point, nothing happen. the button is clicked if x1 &le; x &le; x2 and y1 &le; y &le; y2 where x1, x2 means the leftmost and rightmost coordinate and y1, y2 means the topmost and bottommost coordinate of the corresponding button respectively.
 
it means to click the back button.
 
it means to click the forward button.
 
in addition, there is a special operation show. your program should print the name of current page for each show operation.
 
by the way, setting spyware into computers of others may conflict with the law. do not attempt, or you will be reprimanded by great men.
 


"
p00641,Huge Family,"
mr. dango's family has extremely huge number of members. once it had about 100 members, and now it has as many as population of a city. it is jokingly guessed that the member might fill this planet in near future. they all have warm and gracious personality and are close each other.
 
they usually communicate by a phone. of course, they are all taking a family plan. this family plan is such a thing: when a choose b, and b choose a as a partner, a family plan can be applied between them and then the calling fee per unit time between them discounted to f(a, b), which is cheaper than a default fee. each person can apply a family plan at most 2 times, but no same pair of persons can apply twice. now, choosing their partner appropriately, all members of mr. dango's family applied twice.
 
since there are huge number of people, it is very difficult to send a message to all family members by a phone call. mr. dang have decided to make a phone calling network that is named 'clan' using the family plan. let us present a definition of clan.
  for any two persons (let them be i and j), if i can send a message to j through phone calls that family plan is applied (directly or indirectly), then i can send a message to j through only phone calls in s (directly or indirectly).  meets condition 1 and a sum of the calling fee per unit time in s is minimized. 

 
clan allows to send a message efficiently. for example, we suppose that one have sent a message through all calls related to him in the clan. additionaly we suppose that every people follow a rule, ""when he/she receives a message through a call in clan, he/she relays the message all other neibors in respect to clan."" then, we can prove that this message will surely be derivered to every people that is connected by all discounted calls, and that the message will never be derivered two or more times to same person.
 
by the way, you are given information about application of family plan of mr. dango's family. please write a program that calculates that in how many ways a different clan can be constructed. you should output the answer modulo 10007 because it may be very big.
 


"
p00642,Ben Toh,"
as usual, those who called wolves get together on 8 p.m. at the supermarket. the thing they want is only one, a box lunch that is labeled half price. scrambling for a few discounted box lunch, they fiercely fight every day. and those who are blessed by hunger and appetite the best can acquire the box lunch, while others have to have cup ramen or something with tear in their eyes.
 
a senior high school student, sato, is one of wolves. a dormitry he lives doesn't serve a dinner, and his parents don't send so much money. therefore he absolutely acquire the half-priced box lunch and save his money. otherwise he have to give up comic books and video games, or begin part-time job.
 
since sato is an excellent wolf, he can acquire the discounted box lunch in 100% probability on the first day. but on the next day, many other wolves cooperate to block him and the probability to get a box lunch will be 50%. even though he can get, the probability to get will be 25% on the next day of the day. likewise, if he gets a box lunch on a certain day, the probability to get on the next day will be half. once he failed to get a box lunch, probability to get would be back to 100%.
 
he continue to go to supermaket and try to get the discounted box lunch for n days. please write a program to computes the expected value of the number of the discounted box lunches he can acquire.
 


"
p00643,Rolling Dice,"
the north country is conquered by the great shogun-sama (which means
king). recently many beautiful dice which were made by order of the
great shogun-sama were given to all citizens of the country. all
citizens received the beautiful dice with a tear of delight. now they
are enthusiastically playing a game with the dice.
 
the game is played on grid of h * w cells that each of which has a
number, which is designed by the great shogun-sama's noble philosophy.
a player put his die on a starting cell and move it to a destination
cell with rolling the die. after rolling the die once, he takes a
penalty which is multiple of the number written on current cell and
the number printed on a bottom face of the die, because of malicious
conspiracy of an enemy country. since the great shogun-sama strongly
wishes, it is decided that the beautiful dice are initially put so
that 1 faces top, 2 faces south, and 3 faces east. you will find that
the number initially faces north is 5, as sum of numbers on opposite
faces of a die is always 7. needless to say, idiots those who move his
die outside the grid are punished immediately.
 
the great shogun-sama is pleased if some citizens can move the
beautiful dice with the least penalty when a grid and a starting cell
and a destination cell is given. other citizens should be sent to coal
mine (which may imply labor as slaves). write a program so that
citizens can deal with the great shogun-sama's expectations.
 

"
p00644,Winter Bells,"
the best night ever in the world has come! it's 8 p.m. of december 24th, yes, the night of cristmas eve. santa clause comes to a silent city with ringing bells. overtaking north wind, from a sleigh a reindeer pulls she shoot presents to soxes hanged near windows for children.
 
the sleigh she is on departs from a big christmas tree on the fringe of the city. miracle power that the christmas tree spread over the sky like a web and form a paths that the sleigh can go on. since the paths with thicker miracle power is easier to go, these paths can be expressed as undirected weighted graph.
 
derivering the present is very strict about time. when it begins dawning the miracle power rapidly weakens and santa clause can not continue derivering any more. her pride as a santa clause never excuses such a thing, so she have to finish derivering before dawning.
 
the sleigh a reindeer pulls departs from christmas tree (which corresponds to 0th node), and go across the city to the opposite fringe (n-1 th node) along the shortest path. santa clause create presents from the miracle power and shoot them from the sleigh the reindeer pulls at his full power. if there are two or more shortest paths, the reindeer selects one of all shortest paths with equal probability and go along it.
 
by the way, in this city there are p children that wish to see santa clause and are looking up the starlit sky from their home. above the i-th child's home there is a cross point of the miracle power that corresponds to c[i]-th node of the graph. the child can see santa clause if (and only if) santa clause go through the node.
 
please find the probability that each child can see santa clause.
 


"
p00645,Mysterious Onslaught,"
in 2012, human beings have been exposed to fierce onslaught of unidentified mysterious extra-terrestrial creatures. we have exhaused because of the long war and can't regist against them any longer. only you, an excellent wizard, can save us. yes, it's time to stand up!
 
the enemies are dispatched to the earth with being aligned like an n * n square. appearently some of them have already lost their fighting capabilities for some unexpected reason. you have invented a highest grade magic spell 'myon' to defeat them all. an attack of this magic covers any rectangles (which is parallel to axis). once you cast a spell ""myon,"" then all the enemies which the magic covers will lose their fighting capabilities because of tremendous power of the magic. however, the magic seems to activate enemies' self-repairing circuit. therefore if any enemy which have already lost its fighting capability is exposed to the magic, the enemy repossesses its fighting capability. you will win the war when all the enemies will lose their fighting capabilities.
 
let me show an example. an array of enemies below have dispatched:
 
here, '0' means an enemy that doesn't possess fighting capability, and '1' means an enemy that possesses.
first, you cast a spell ""myon"" with covering all the enemies, which results in;
  
next, cast once again with covering central 3 * 3 enemies.
 
now you can defeat them all by casting a spell covers remaining one. therefore you can cast ""myonmyonmyon,"" which is the shortest spell for this case.
 
you are given the information of the array. please write a program that generates the shortest spell that can defeat them all.
 


"
p00646,No Story,"
since i got tired to write long problem statements, i decided to make this problem statement short. for given positive integer l, how many pairs of positive integers a, b (a &le; b) such that lcm(a, b) = l are there? here, lcm(a, b) stands for the least common multiple of a and b.
 


"
p00647,It's our delight!!,"
you are a student of university of aizu.
and you work part-time at a restaurant.
 
staffs of the restaurant are well trained to be delighted to provide more delicious products faster.
 
the speed providing products particularly depends on skill of the staff.
so, the manager of the restaurant want to know how long it takes to provide products.
 
though some restaurants employ a system which calculates how long it takes to provide products automatically,
the restaurant where you work employs a system which calculates it manually.
 
you, a student of university of aizu, want to write a program to calculate it, and you hope that your program makes the task easier.
you are given the checks in a day.
if the length of time it takes to provide the products of a check is shorter than or equal to 8 minutes, it is ""ok"" check.
write a program to output the ratio of ""ok"" checks to the total in percentage.
 
"
p00648,Watchin' TVA,"
animation is one of methods for making movies and in japan, it is popular to broadcast as a television program or perform as a movie. many people, especially the young, love one. and here is an anime lover called jack. we say he is an mysterious guy with uncertain age. he likes anime which are broadcasted in midnight and early morning especially.
 
in his room, there is a huge piece of paper on the wall. he writes a timetable of tv anime on it. in his house, he can watch all japanese tv anime programs that are broadcasted in japan using a secret and countrywide live system. however he can not watch all anime and must give up to watch some programs because they are ""broadcasted at the same time"" in a season. here, programs are ""broadcasted at the same time"" means that two or more programs have one or more common minutes in broadcasting time. increasing the number of anime programs in recent makes him nervous. actually, some people buy dvds after the program series ends or visit a web site called vhefoo. anyway, he loves to watch programs on his live system. of course, he is not able to watch two or more programs at the same time. however, as described above, he must give up some programs broadcasted at the same time. therefore, he has a set of programs f and he watches programs in a set f absolutely.
 
your task is to write a program that reads a timetable and outputs the maximum number of watchable programs, keeping that jack watches all programs in the set f. of course, there are multiple choices of programs, so we want the number of programs he can watch. if two or more programs in a set f are broadcasted at the same time, you must give jack an unfortunate announcement. in this case, your program outputs -1. in addition, each anime program is a program of 30 minutes.
 
"
p00649,Yanagi's Comic,"
yanagi is a high school student, and she is called ""hime"" by her boyfriend who is a ninja fanboy. she likes picture books very much, so she often writes picture books by herself.
she always asks you to make her picture book as an assistant.
today, you got asked to help her with making a comic.
 
she sometimes reads her picture books for children in kindergartens.
since yanagi wants to let the children read,
she wants to insert numbers to frames in order.
of course, such a task should be done by the assistant, you.
 
you want to do the task easily and fast, so you decide to write a program to output the order of reading frames based on the positions of the frames.
 
write a program to print the number of order for each frame.
 
the comics in this problem satisfy the following rules.
 
the each comic is drawn on a sheet of rectangle paper.
you can assume that the top side of the paper is on the x-axis.
and you can assume that the right-hand side of the paper is on the y-axis.
the positive direction of the x-axis is leftward.
the positive direction of the y-axis is down direction.
the paper is large enough to include all frames of the comic.
in other words, no area in a frame is out of the paper.
 
the area of each frame is at least one.
all sides of each frame are parallel to the x-axis or the y-axis.
the frames can't overlap one another.
however the frames may share the line of side.
 
you must decide the order to read  k , where  k  is a set of frames, with the following steps.
 

step 1:you must choose an unread frame at the right-most position in k.
        if you find such frames multiple, you must choose the frame at the top position among them.
        if you can't find any unread frames, you stop reading k.
        the frame you chose is ""starting frame"".
        in step 1, you assume that the position of a frame is the top-right point of the frame.



step 2:you should draw a line from the right-bottom point of ""starting frame"" to leftward horizontally.
        if the line touch the right-hand side of other frame, you should stop drawing.
        if the line is on the side of other frame, you should not stop drawing.
        if the line touch the edge of paper, you should stop drawing.



step 3:the set of the unread frames which are above the line ( they may be the bottom-side on the line ) drawn at step 2 is l.
        and you should read l.



step 4: go back to step 1.



"
p00650,The House of Huge Family,"
mr. dango's family has an extremely huge number of members.
once it had about 100 members, and now it has as many as population of a city.
it is jokingly guessed that the member might fill this planet in the near future.
 
mr. dango's family, the huge family, is getting their new house.
scale of the house is as large as that of town.
 
they all had warm and gracious personality and were close each other.
however, in this year the two members of them became to hate each other.
since the two members had enormous influence in the family, they were split into two groups.
 
they hope that the two groups don't meet each other in the new house.
though they are in the same building, they can avoid to meet each other by adjusting passageways.
 
now, you have a figure of room layout. your task is written below.
 
you have to decide the two groups each room should belong to.
besides you must make it impossible that they move from any rooms belonging to one group to any rooms belonging to the other group.
all of the rooms need to belong to exactly one group.
and any group has at least one room.
 
to do the task, you can cancel building passageway.
because the house is under construction, to cancel causes some cost.
you'll be given the number of rooms and information of passageway.
you have to do the task by the lowest cost.
 
please answer the lowest cost.
 
by characteristics of mr. dango's family, they move very slowly.
so all passageways are escalators.
because of it, the passageways are one-way.
 

"
p00651,Legend of Storia,"
in storia kingdom, there is an artifact called ""perfect sphere"" made by a great meister es. this is handed down for generations in the royal palace as a treasure. es left a memo and filled mysterious values in it. within achievements of researches, it has been revealed that the values denote coordinate values. however it is still unknown the definition of the coordinate system.
 
by the way, you are a person who lived in age of es lived. the values which meister es left are defined by following. es set an moving object in the artifact sphere. surprisingly, that is rigid body and perpetual organization. the object rotates inside the sphere and it is always touching the inside surface of the sphere. this value is a coordinate of the tangent point by the object and the sphere, but it is not a three dimensional value. the object is a plate and this is a simple polygon. here, ""simple"" means ""non self-intersected"". this rotates while touching a great circle of the sphere. here, assume that the great circle is a circle o centered in the origin in the xy plane. (it is two-dimensional cartesian coordinate system, the direction of positive x-value is right and the direction of positive y-value is up). this plate touches the circle o with a single point at the beginning of the movement. and it rotates in counterclockwise as the current touching point is the rotation fulcrum. when another point x of the plate touches the circle o newly, the plate continue to rotate as described above, but in the next rotation, the rotation fulcrum point is changed.  this will be the point x. if two or more points can be interpreted as the point x, the point x is a most distant point from the currently touching point x'. here, that distance is the length of the arc of the circle o from the point x' to the point x in clockwise.
 
es asked you, an excellent assistant, to write a program that enumerates q tangent points (fulcrum points while the movement) by the plate and the circle o while the movement of the plate described above in the chronological order. of course, one and the previous one must be distinct points. following figures show you examples of the movement of the plate inside the circle o.

1
2
3
4
 
"
p00652,Cutting a Chocolate,"
turtle shi-ta and turtle be-ko decided to divide a chocolate.
the shape of the chocolate is rectangle. the corners of the chocolate are put on (0,0), (w,0), (w,h) and (0,h).
the chocolate has lines for cutting.
they cut the chocolate only along some of these lines.
 
the lines are expressed as follows.
there are  m  points on the line connected between (0,0) and (0,h), and between (w,0)  and (w,h).
each i-th point, ordered by y value (i = 0 then y =0), is connected as cutting line.
these lines do not share any point where 0 &lt; x &lt; w .
they can share points where x = 0 or x = w .
however, (0, li )  =  (0,lj )  and  (w,ri )  =  (w,rj )   implies  i  =  j  .
the following figure shows the example of the chocolate.
 
there are  n  special almonds, so delicious but high in calories on the chocolate.
almonds are circle but their radius is too small. you can ignore radius of almonds.
the position of almond is expressed as  (x,y)  coordinate.
 
two turtles are so selfish. both of them have requirement for cutting.
 
shi-ta's requirement is that the piece for her is continuous.
it is possible for her that she cannot get any chocolate.
assume that the minimum index of the piece is  i  and the maximum is  k .
she must have all pieces between  i  and  k .
for example,  chocolate piece 1,2,3 is continuous but 1,3 or 0,2,4 is not continuous.
 
be-ko requires that the area of her chocolate is at least  s .
she is worry about her weight. so she wants the number of almond on her chocolate is as few as possible.
 
they doesn't want to make remainder of the chocolate because the chocolate is expensive.
 
your task is to compute the minumum number of beko's almonds if both of their requirment are satisfied.
 

"
p00653,School of Killifish,"
jon is the leader of killifish.
jon have a problem in these days.
jon has a plan to built new town in a pond.
of course new towns should have a school for children. but there are some natural enemies in a pond.
jon thinks that the place of a school should be the safest place in a pond for children.
 
jon has asked by some construction companies to make construction plans and jon has  q  construction plans now.
the plan is selected by voting. but for each plan, the safest place for the school should be decided before voting.
 
a pond is expressed by a 2d grid whose size is r*c.
the grid has r rows and c columns. the coordinate of the top-left cell is (0,0). the coordinate of the bottom-right cell is expressed as (r-1,c-1).
each cell has an integer which implies a dangerousness.
the lower value implies safer than the higher value.
q plans are given by four integer r1 ,c1 ,r2 and c2 which represent the subgrid. 
the top-left corner is (r1,c1) and the bottom-right corner is (r2,c2).
 
you have the r*c grid and q plans. your task is to find the safest point for each plan.
you should find the lowest value in the subgrid.
 

"
p00654,Squid Multiplication,"
squid eiko loves mathematics.
especially she loves to think about integer.
one day, eiko found a math problem from a website.
 
""a sequence b ={ai + aj | i &lt j }  is generated from a sequence a ={a0 , ... , an | ai is even if i is 0, otherwise ai is odd}. given the sequence b , find the sequence a .""
 
this problem is easy for eiko and she feels boring. so, she made a new problem by modifying this problem .
 
""a sequence b ={ai *aj | i &lt; j }  is generated from a sequence a ={ a0, ... , an | ai is even if  i  is 0, otherwise ai is odd}. given the sequence b , find the sequence a .""
 
your task is to solve the problem made by eiko.
 

"
p00655,FIMO sequence,"
your task is to simulate the sequence defined in the remaining part of the problem description.
 
this sequence is empty at first.
 i -th element of this sequence is expressed as  ai .
the first element of this sequence is  a1  if the sequence is not empty.
the operation is given by integer from 0 to 9.
the operation is described below.
 
0:
this query is given with some integer x.
if this query is given, the integer x is inserted into the sequence.
if the sequence is empty, a1 = x.
if the sequence has n elements, an+1 = x.
same integer will not appear more than once as x.
 
1:
if this query is given, one element in the sequence is deleted.
the value in the middle of the sequence is deleted.
if the sequence has n elements and  n  is even,  an/2  will be deleted.
if  n  is odd,  a&lceil;n/2&rceil;  will be deleted.
this query is not given when the sequence is empty.

assume that the sequence has  a1 =1, a2 =2, a3 =3, a4 =4 and  a5 =5.
in this case,  a3  will be deleted.
after deletion, the sequence will be  a1 =1,  a2 =2, a3 =4, a4 =5.

assume that the sequence has  a1 =1, a2 =2, a3 =3 and  a4 =4,
in this case,  a2  will be deleted.
after deletion, the sequence will be  a1 =1, a2 =3,  a3 =4.
 
2:
the first half of the sequence is defined by the index from 1 to &lceil;n/2&rceil; .
if this query is given, you should compute the minimum element of the first half of the sequence.
this query is not given when the sequence is empty.
 
let me show an example.
assume that the sequence is {6,2,3,4,5,1,8}.
in this case, the minimum element of the first half of the sequence, {6,2,3,4} is 2.
 
3:
the latter half of the sequence is elements that do not belong to the first half of the sequence.
if this query is given, you should compute the minimum element of the latter half of the sequence.
this query is not given when the sequence is empty.
 
let me show an example.
assume that the sequence is {6,2,3,4,5,1,8}.
in this case the answer for this query is 1 from {5,1,8}.
 
4:
this query is given with an integer i.
assume that deletion is repeated until the sequence is empty.
some elements in the first half of the sequence will become the answer for query 2.
you should compute the  i -th minimum element from the answers.
this query is not given when the sequence is empty.
you can assume that  i -th minimum element exists when this query is given.
 
let me show an example.
 
for the initial state, {6,2,3,4} is the first half of the sequence.
2 and 6 become the minimum element of the first half of the sequence.
in this example, the 1-st minimum element is 2 and the 2-nd is 6.
 
5:
this query is given with an integer  i .
assume that deletion is repeated until the sequence is empty.
some elements in the latter half of the sequence will become the answer for query 3.
you should compute the  i -th minimum element from the answers.
this query is not given when the sequence is empty.
you can assume that  i -th minimum element exists when this query is given.
 
let me show an example.
 
for the initial state, {5,1,8} is the latter half of the sequence.
1 and 8 becomes the minimum element of the latter half ot the sequence.
in this example, the 1-st minimum element is 1 and the 2-nd is 8.
 
6:
if this query is given, you should compute the maximum element of the first half of the sequence.
this query is not given when the sequence is empty.
 
let me show an example.
assume that the sequence is {1,3,2,5,9,6,7}.
in this case, the maximum element of the first half of the sequence,{1,3,2,5}, is 5.
 
7:
if this query is given, you should compute the maximum element of the latter half of the sequence.
this query is not given when the sequence is empty.
 
let me show an example.
assume that the sequence is {1,3,2,5,9,6,7}.
in this case, the maximum element of the latter half of the sequence,{9,6,7}, is 9.
 
8:
this query is given with an integer  i .
assume that deletion is repeated until the sequence is empty.
some elements in the first half of the sequence will become the answer for query 6.
you should compute the  i -th maximum element from the answers.
this query is not given when the sequence is empty.
you can assume that  i -th maximum elements exists when this query is given.
 let me show an example. 
for the initial state, {1,3,2,5} is the first half of the sequence.
1,3 and 5 becomes the maximum element of the first half of the sequence.
in this example, the 1-st maximum element is 5, the 2-nd is 3 and the 3-rd is 1.
 
9:
this query is given with an integer  i .
assume that deletion is repeated until the sequence is empty.
some elements in the latter half of the sequence will become the answer for query 7.
you should compute the  i -th maximum element from the answers.
this query is not given when the sequence is empty.
you can assume that  i -th maximum elements exists when this query is given.
 let me show an example. 
for the initial state, {9,6,7} is the latter half of the sequence.
7 and 9 becomes the maximum element of the latter half of the sequence.
in this example, the 1-st maximum element is 9 and the 2-nd is 7.
 

"
p00656,BD Shelf,"
remember the boy called jack. he likes anime, especially programs broadcasting in midnight or early morning. in his room, there is a big shelf and it is kept organized well. and there are anime bd/dvds which he watched or gave up because of overlapping of broadcasting time with other animes.  his money is tight, but he succeeded to get w hundreds dollars because of an unexpected event. and he came up with enhancing the content of his bd shelf.
 
he is troubled about the usage of the unexpected income. he has a good judge for anime to choose the anime he can enjoy because he is a great anime lover. therefore, first of all, he listed up expectable animes and assigned each anime a value that represents ""a magnitude of expectation"". moreover jack tagged a mysterious string m for each anime. however jack did not tell you the meaning of the string m.
 
your task is to write a program that reads a string x and that maximizes the sum of magnitudes of expectation when jack bought bd/dvd boxes of anime with the budget of w hundreds dollars. here, jack must buy anime's bd/dvd box that have a string x as a sub-string of the string m assigned the anime. if he can not buy any boxes, output -1.
 
a sequence of string x is given in order in the input as query. assume two strings x1 and x2 are given as string x, and x1 is the prefix of x2.  if x1 is given in the input preceding x2, you must not buy an anime which has the minimum magnitude of expectation among animes extracted by x1 in the calculation for x2.  and vice versa (x1 is the prefix of x2 and if x2 is given in the input preceding x1, ...) .
for example, if three strings ""a"", ""abc"" and ""ab"" are given in this order in the input, in the processing for string ""abc"", you must not extract an anime which has the minimum magnitude of expectation among animes extracted by the processing of the string ""a"". in the processing for string ""ab"", you must not extract an anime has minimum magnitude of expectation among animes extracted by the processing of the string ""abc"" and ""a"".
 
"
p00657,Rearranging Seats,"
haruna is a high school student.
she must remember the seating arrangements in her class because she is a class president.
it is too difficult task to remember if there are so many students.
 
that is the reason why seating rearrangement is depress task for her.
but students have a complaint if seating is fixed.
 
one day, she made a rule that all students must move but they don't move so far as the result of seating rearrangement.
 
the following is the rule.
the class room consists of r*c seats.
each r row has c seats.
the coordinate of the front row and most left is (1,1). the last row and right most is (r,c).
after seating rearrangement, all students must move next to their seat.
if a student sit (y,x) before seating arrangement, his/her seat must be (y,x+1) , (y,x-1), (y+1,x) or (y-1,x).
the new seat must be inside of the class room. for example (0,1) or (r+1,c) is not allowed.
 
your task is to check whether it is possible to rearrange seats based on the above rule.
 

"
p00658,The Tower,"
your task is to write a program that reads some lines of command for the following game and simulates operations until the player reaches the game over. we call following 2-dimensional grid of m by n characters tower. the objective of this game is to move blocks in the tower to climb to a goal block. in the following grid, the bottom line is the first row and the top one is the n-th row. the leftmost column is the first column and the rightmost one is the m-th column.
 explanation of cell marks: '#' : normal blocknormal block. 'i' : ice blockblock made of the ice.  this has different features from the normal one. 'g' : goal blockif the player climbs to this, game is over and clear. 'c' : fixed blockthe player can not move this directly. 'b' : different dimensional blockif the player climbs to this, game is over and lose. '.' : spaceempty place. '3' : fragile block(3)a fragile block of count 3. '2' : fragile block(2)a fragile block of count 2. '1' : fragile block(1)a fragile block of count 1.  if the count is zero, this block will be broken and become a space. 's' : playerthe player. explanation of relative positions: 
in the following description, assume that left up is the position of 1, up(over s) is 2, right up is 3, left is 4, right is 5, left down is 6, down(under s) is 7, right down is 8 for s.
 movements of the player
the player must not go out of the tower.  the outside of the tower is considered as space cells.
 the player is in the first row and the target cell is a space. there are blocks under the route connecting the current cell and the target cell (horizontal segment) and the target cell is a space.  it is ok that some blocks in the horizontal segment.  and the case that some of blocks under the segment are different dimensional ones, it is also ok. 

 climb
if the player at the row below the n-th row (from 1st to n-1 th row) and there is a block in the right(left) and both of a cell over the player (up cell) and a right up(left up) cell are space, the player can move to the right up(left up) cell. get down
if the player at the row above the 1st row (from 2nd to n-th row), he can get down to right(left) down.  if the direction for getting down is right(left) and if there is no blocks in the right down (left down) cell and the right (left) cell, the player can move to the right down (left down) cell. push
if there is a block or continuous blocks in the right or left of the player, he can push the blocks to the direction one cell.  here, blocks are ""continuous"" if there are two or more blocks and no space exist between them.  however, if there is a fixed block in pushing blocks, the player can not push them.  pushed blocks will not stop the end of the row of the tower (1st and mth column). if the pushed blocks go out of the tower, this will be vanished.in the result of pushing, a block moved over the ice block continues to move to the pushed direction as long as there is a space in the progress direction, there is an ice block under the block and the pushed block is not vanished.
if the pushed block is an ice block, this continues to move to the pushed direction as long as there is a block under the ice block, there is a space in the progress direction and the pushed ice block is not vanished. however, for an ice block in the first row, the below the block do not have to be a space. and here, if the player pushes continuous blocks, pushing movements begin from the most distant block to a nearest block.  here, the distance is manhattan distance at the gird. pull
if there is a block in the right(left) of the player and the left(right) cell is space, the player can pull the block.  however, if the pulling block is fixed one, he can not pull this.  if the player pulls block, the player will move one cell to the direction of pulling. 
automated operations after the player operation:
automated operations occur in the following order.  this repeats in this order as long as the cells of the tower are changed by this operations.  after this operations, the player can do the next operation.
 countdown of fragile blocks
if the player over a fragile block moved to somewhere else, that fragile block's count will decrease by one.  however, this count does not change if the player over the fragile block is moved to somewhere else by the automated operations. erasing blocksa block over an different dimensional block will be vanished. falling of the playerif there is no block under the player, the player continues to fall as long as satisfying this condition or come to 1st row. falling of blocksif there is no block under a block and left down and right down of a certain block, the block in the row over the 1st row (from 2nd to n-th row) continues to fall as long as satisfying this condition.  falling of blocks begins from lower blocks of the tower and then lefter blocks. conditions for game over:
after the movement of the player or the automated operations, the game is over when the one of next conditions is satisfied.  these conditions are judged in the following order. note that, the condition (e) should not be judged after the movement of the player.
 (a) the player is over the goal block. (b) the player is over the different dimensional block. (c) the player and a block is in the same cell. (d) the goal block is moved from its initial position. (e) there is no next commands. finally, show some examples.
documents of commands will be give in the description of input. 


example table
movement orautomated operationbeforeaftercommand
move.#s###s#.###moveto 1
climb...3s#s..3.#climb left
get downs..3.#...2s#getdown right
push.#s#####..###ii.i.i..#s.####.####ii.i.i.push right
push.#si...###.###.#s....###.###push right
push.#...s####.###.....s.###.###push right
pull..s#####..###.#.#.#..s#.####..###.#.#.#.pull left
falling of the player.#s#.#.#.#.#.#.#.#.#.#.#.#.#.#s#-
falling of blocks.###.#...##...##...#.#.#.#.#.#...##...##.#.#.#.#-


"
p00659,Popularity Estimation,"
あなたはとあるアニメーション制作会社の企画部長である。昨今のアニメーション制作会社が制作するものは、アニメーションそのものにとどまらない。関連商品、例えば登場キャラクターのフィギュアやキャラクターソングcdなども、重要な収益源なのである。この収益をどれだけ伸ばせるかは、ひとえに企画部長のあなたにかかっているのであった。
 
当たり前のことだが、こういった関連商品は闇雲に発売すればいいというものではない。商品の開発には多くの時間と予算が必要なためだ。アニメの登場キャラクターのフィギュアを発売するにしても、多くの売上が見込まれる、人気があるキャラクターのものに限らなければならない。
 
キャラクターの人気度を測る手段の一つが、人気投票である。あなたも今までいくつかの人気投票を企画してきたが、どうやら視聴者はこの企画に不満を抱きつつあるようだ。人気度を測る他の手法の確立が急務である。
 
そこであなたは、ひとつの仮説を立てた。あるキャラクターの人気度は、そのアニメ本編中における登場時間の総和に比例する、というものだ。あなたはこの仮説を検証するため、それぞれのキャラクターの登場時間を集計するプログラムを書くことにした。
 

"
p00660,High and Low Cube,"
僕は近所の小学生たちと一緒に夏祭りに来ていた。有り体に言えば保護者役だが、出店の焼きそばやたこ焼きなんかが焼ける匂い、時折聞こえる打ち上げ花火の音などは、この歳になっても心が踊るものがある。が、好奇心旺盛な子供たちがはぐれないように、今日はしっかり見守っていないと。
 
子供たちはとある出店に興味を持ったようだった。覗き込んでみると、そこでは出店のおじさんとサイコロを使ったゲームをして、勝てば景品が貰えることになっていた。そのゲームは、 high & low と呼ばれる単純なものだ。参加者とおじさんは1個ずつサイコロを振るが、その前に参加者は、自分の出目がおじさんの出目より大きいか小さいかを予想する。予想が当たれば勝利であり、同じ目が出た場合はどちらもサイコロを振り直す。
 
このゲームの少し厄介なところは、参加者のサイコロとおじさんのサイコロが違うものであるかもしれない、という点だ。参加者はあらかじめ両者のサイコロの展開図を見ることができるので、それをヒントに予想することになる。
 
つまり、簡単な確率の計算だ。とはいえ確率は高校数学の範囲で、小学生にはちょっと荷が重いかもしれない。子供たちの中で一番利発そうな子でさえ、三つ編みにした髪を揺らしながら考え込んでいる。もうすぐ僕に助けを求めてくることだろう。さて、たまにはオトナらしいところを見せてあげようではないか。
 

"
p00661,Time Manipulation,"
彼女は見習いの魔法使いだ。
彼女はまず最初に時間を操る魔法を覚えた。
そして彼女は生計を立たせるために酒屋を開くことにした。
彼女の住んでいる国の住人達はみんなお酒が大好き、ということが関係している。
住人達は長い年数をかけて熟成させたお酒が特に好きで、熟成させた年数に応じてその価値も比例して上がる。
50年熟成させたお酒より100年熟成させたお酒のほうが価値が高いのは簡単に想像がつくはずだ。
そして手に入れるのが難しいということも。
彼女は自分の魔法を使って、長い年月熟成させたお酒を一瞬で作って、それを売って収入を得ようとしているのであった。
 
彼女はお酒を熟成させる年数に応じて値段を決めた。
例えば5年の熟成が必要なら5エメル、100年の熟成なら100エメルを払ってもらうことにした。
彼女にとってはどちらを作るのも同じ魔法を使うだけなので差は無い。
長い年数の熟成の注文の方が彼女にとっては得なのである。
 
彼女はまだ未熟なので今使える魔法には制約が2つある。
お酒をn 年より長く熟成させることは今の彼女には出来ない。
またm 個の整数が存在して、それらとその倍数の年数だけお酒を熟成させることも彼女には無理なのだ。
 
彼女は酒屋の経営だけ生活が出来るか不安に思っている。
どのくらいの収入を得ることが出来るか彼女には予想できない。
そこで1日の収入の期待値をもとにして、他の仕事をする必要があるかの判断を行うことにした。
幸い彼女は、野菜の栽培、ペットの世話、料理、裁縫、大工仕事など何でもできるので、酒屋での収入が少なくても困ることは無さそうだ。
 
彼女の1日の収入の期待値を計算するのがあなたの仕事だ。
なお期待値を計算する際に以下の3つを仮定してよい。

1日に引き受ける注文は必ず1つである。
住人は彼女に作れない年数のお酒は注文はしてこない。
住人の注文の年数は一様に分布している。

 
	
"
p00662,The Great Summer Contest,"
現在、人々の娯楽はプログラミングコンテストに限られている。彼女が所属しているとある中学校の娯楽部の活動内容は、プログラミングコンテストを企画し運営することだ。彼女の仕事は問題を作成することではない。多くの人から問題を募り、審判団を組織し、またコンテストの宣伝を行う、いわば裏方のお仕事だ。カリスマ作題者や著名なアルゴリズマーと違い、そういった仕事をする人に光が当たることはほとんどない。存在感はないけれども欠かすことのできないその仕事に、彼女は誇りを持って取り組んでいた。
 
娯楽部は常に問題を募集しているが、それらの問題は以下の 6 種類に分類される。
 math greedy geometry dp graph other 
幸いにも多くの問題が集まったので、彼女はたくさんコンテストを開こうと考えた。コンテストは 3 問の問題からなるが、彼女はコンテストがより教育的になるようにと、以下の 4 種類のコンテストを開くことに決めた。
 数学ゲーコンテスト: math の問題と dp の問題合わせて3問の問題セット アルゴリズムゲーコンテスト: greedy の問題と graph の問題合わせて3問の問題セット 実装ゲーコンテスト: geometry の問題と other の問題合わせて3問の問題セット バランスの良いコンテスト: math または dp から 1 問、greedy または graph から 1 問、geometry または other から 1 問、合わせて3問の問題セット 
もちろん、あるコンテストに出題した問題は他のコンテストに出題することはできない。彼女の望みは、できるだけ多くのコンテストを開くことだ。6 種類の問題のストック数は分かっているが、さて、最大何回コンテストを開けるだろうか。彼女にとってこれは難しい問題だが、カリスマアルゴリズマーであるあなたなら解決できるはずだ。
 



"
p00663,3,"
彼女は悩んでいた。成績が良くないのだ。両親に無理を言って全寮制の学校に入学したものの、彼女の才能は一向に開花することはなかった。あるいは才能など元々なかったのかもしれないが、それはできるだけ考えたくない可能性だった。
 
そこで彼女が頼ったのは、インターネット上で見つけた怪しげな脳力トレーニングの教材だった。sat-en-3 (satisifiability problem for enhancement of neuron: version 3) と銘打つその学習メソッドによると、充足可能性問題のようなもののインスタンスをひたすら手で解くことによって、計算力が向上し、引いては論理的思考力・直感力・想像力も豊かになり、部活動でも活躍できて恋愛もうまくいくのだという。さすがに最後の2つは眉唾ものじゃないかな、と彼女は思ったが、ソロバンや百マス計算のような例もあることだ。暗算が得意になったら儲けものかな、ぐらいの気楽さで、彼女はこの教材に取り組んでみることにした。
 
sat-en-3では、加法標準形で表される論理式の各変数に適切に割り当て、論理式の値を真にすることができるかどうか判定しなければならない。ちなみに、1つ以上の変数 (または、その否定) の論理積を 節 (clause) と呼び、いくつかの節の論理和で表される論理式のみが加法標準形に従っている。一般に充足可能性問題といえば論理式は乗法標準形で表されるが、sat-en-3では加法標準形であることに注意せよ。
 
彼女はしばらく sat-en-3 の問題集に取り組もうとして、ふと思い直した。問題集にお金を払うぐらいなら、プログラミングが得意な親友にパフェでもご馳走して、 sat-en-3 の問題を生成し、解くプログラムを書いてもらおう。そうすれば問題も解答もいくらでも手にはいるじゃないか。
 
こうして彼女の親友であるあなたは、sat-en-3を解くプログラムを書くことになったのである。
 	

"
p00664,Cosmic Market,"
cosmic market(コズミック・マーケット)、通称コズミケ、は全宇宙最大規模の同人即売会だ。
コズミケにはあらゆるジャンルの同人愛好家達が集う。
近年、コズミケへの来場者は増加傾向にある。
最初から全ての人が入場できると大変混雑して危険なので、開場直後は入場規制を行っている。
ある一定人数の人だけが開場と同時に入場することが出来るのだ。
それ以外の人たちはしばらく待ってからの入場となっている。
 
しかし先着順に会場に入ることにすると、徹夜で前日から並ぶ人が出てしまう。
コズミケの参加者には未成年も多く、治安上の問題もあるので先着順という決め方はとても良くない。
そういう理由があって、コズミケでは参加者の中である種のゲームを行い、そのゲームで勝ち残った人が最初に入場する権利を手にできる。
公平を期すために毎年ランダム性の高いゲームを採用している。
 
僕は今回もコズミケに参加する予定だ。
僕は今回のコズミケでどうしても手に入れたい同人誌がある。
とある人気サークルが頒布する同人誌で、今年の春に話題になった魔法少女のアニメを取り扱っている。
しかし、このサークルはとても人気で毎回すぐに頒布が終了してしまう。
開場と同時に入場できなかった場合に手に入れることはほぼ不可能だろう。
もちろん後日同人ショップなどでも手に入るようになるのは間違いない。しかしそれまで我慢することなど僕には出来ない。
僕はどんな手を使ってでもコズミケ当日に手に入れなくてはいけないのだ。
不幸なことに僕は今までのコズミケで最初に入場できたことは一度もない。
 
コズミケのカタログによると、今回は以下のようなゲームで最初に入場できる人を選ぶらしい。
まず参加者のうち先着 r×c 人の人が、r×c　のグリッドのように配置された座席の好きな場所に座る。
先着順で場所を選べるので早く行った方が選択肢が沢山ある。
r×c 人の人が座ったらゲームが始まる。
このゲームはある一定の回数、ある1つの列（行）の座席にいる全ての人に対して、着席、あるいは起立が指示される。
すでに着席している人に着席の指示が出された場合はそのまま待機すれば。起立している人も同様である。
この指示が出される対象の列（行）と指示の内容はランダムにルーレットで決められる。
ある一定の回数の指示が終わった時点で起立している人だけが最初に開場に入れるのだ。
指示の回数は参加者には知らされていないので、いつゲームが終わるか分からない。
なのである時点で立っている人も座っている人も自分が最初に入場できるかは分からない。
だからスリルを味わうことが出来る、とカタログでは強調されている。
 
コズミケ前日の午後1時、僕は今年のゲームに関するデータをすべて手に入れた。
僕が手に入れた情報によると、この指示の回数、q はすでに決まっている。
それどころかq 回の指示内容が全てがすでに決まっている。
ランダム性が高いなどといわれているがそれは嘘だったのだ。
どういう理由があって事前に決まっているのかは分からない。
しかしこの情報は僕にとっては天の恵みのようだ。
 
もしこのデータどおりにゲームが行われれるのであれば、最初に入場することが出来る座席の場所が全て分かる。
最悪の場合、僕以外の参加者全員がこの情報を得ていたとしてみよう。
そんな場合でも遅くとも何番目に開場に到着すれば最初に会場に入ることが出来るかわかるはずだ。
しかしこの指示内容を今から手計算で解析するのは量が多すぎるので無理そうだ。
どんなに頑張ってもコズミケには間に合わない。
 
そこで、僕は君にこの計算を任せることにした。
君はプログラミングコンテストによく参加しており、このようなの計算プログラムを書くのは得意なはずだ。
もちろんただでやってくれとは言わない。
カタログによると、今年のコズミケにはプログラミングコンテストに関する同人誌を出しているサークルが参加する予定のはずだ。
もし僕が開場と同時に入場できたら報酬としてその同人誌を手に入れて君にプレゼントするよ。
さて、僕はこれから5時間ぐらい仮眠をとることにしよう。その間に君ならきっと答えを出してくれると僕は信じている。
 

"
p00665,Everything Starts With Your Vote,"
ヒューリスティクスという言葉がある。確実にうまくいくという保証はないけれども大抵の場合はうまくいく、比較的単純なアプローチのことだ。単純にして強力であるがゆえに、この世の中は多くのヒューリスティクスで満ち溢れている。
 
ヒューリスティクスの一例として、こんなものが挙げられる。アニメ番組において、あるキャラクターの人気度は、そのアニメ本編中における登場時間の総和に比例する。確かにこれは多くの場合に成り立っているようだ。しかし、どうやら僕は少数派に属するらしい。影の薄いキャラ、背景にちらりと映るモブキャラなんかに限って可愛く見えたりするのだ。
 
自分の好きなキャラのことを、他人がどう思っていようがいいじゃないか。とは言ってられない事情が、残念ながらある。関連商品、フィギュアやキャラクターソングcdなどは、人気のあるキャラのものから優先的に発売される傾向にあるのだ。商業的には当然の選択だとはいえ、不人気キャラのファンの肩身は狭い。
 
そこで重要となってくるのが、アニメ番組の制作会社によって行われる人気投票である。実際の人気がどうであれ、ここで多くの票を獲得すれば、関連商品への道が開かれるのだ。どんな手段を使っても票を集めねばなるまい。
 
厳正なる投票のために、ある関連商品を1つ購入するたびに1票の投票権が与えられる。この仕組を厳正と呼ぶべきかどうかは今大きく議論されているが、とにかく僕は l 票の投票権を得た。投票の対象となるキャラは全部で n 人いて、より多くの票を獲得した k 人のキャラ (同票の場合は名前の辞書順) の関連商品が企画されることになる。僕の好きなキャラは全部で m 人いて、その中からできるだけ多くのキャラを上位 k 人に入れたいと思っている。
 
僕はまず、それぞれのキャラがどれだけの票を獲得するかを予測した(難しいことではない。あるキャラクターの人気度は、その登場時間の総和に比例すると仮定しただけだ)。この予測が正しいとして、より多くの僕の好きなキャラの関連商品が発売されるようにするためには、僕はこの l 票を誰にどれだけ投じればいいだろうか。
 
	
"
p00666,World Domination,"
世界征服を企む悪の組織、なんてものは、古今東西フィクションノンフィクションを問わず、いろんな所にいるものだが、一体彼らは何のために世界征服をしようとしたのだろうか。そんなことをふと考えてしまうのは、私もまた、世界征服を企てているからであった。私が世界征服を目論む理由はただ一つ、私がロボット工学の分野で世界一優秀であることを世界に示すためである。征服したあとの世界になど興味はない、そこらへんの犬にでもくれてやっても構わないのだ。
 
誠に遺憾だが、それはつまり、私よりも優秀であるとされている研究者がいる、ということだ。その人物には心当たりがある。誰あろう、私の学生時代の同期 r 博士である。彼の実績は認めるが、しかし私のそれより優れていたとは思わない。ただ彼は、平和のためのロボット利用などという甘っちょろいことを言っていたがために、教授連中の受けが良かったのだ。主席こそ逃したものの、本当は私の方がずっと優秀なのだ。
 
その優秀さを示す端的な例が、この世界征服のために用意した戦闘ロボットである。戦闘ロボットはその特性に応じた専用の武器を持ち、その武器はチップに収められているが、このチップは強力な互換性を持つ。ただ開発者自身の他の戦闘ロボットと互換性をもつだけではない (その程度のことは、他ならぬ r 博士が既に達成している) 。私のチップのすごいところは、その r 博士の家事手伝いロボットとも互換性があるのだ。その家事手伝いロボットは非売品のワンオフモデルなので、私はそのロボットの設計を知らないで互換チップを開発したのだ。我ながら神業と言わざるを得ない。この仕様を敵が利するだけの無駄な仕様と言う人もいるが、それは愚かな考え方だ。私は私の優秀さを示すために戦闘ロボットを開発しているのだ。ただ勝てばいいというものではないのである。
 
世界征服計画に話を戻そう。私は n 機の戦闘ロボットを製作し、それぞれに異なる武器チップを 1 つずつインストールした。これを用いて世界の主要施設を奪取するつもりだが、この計画を阻むために r 博士は彼の家事手伝いロボットを送り込んでくることだろう。家事手伝いロボットは自身の武器で私の戦闘ロボットに戦闘を挑んでくるが、1 回の戦闘には 1 単位時間かかり、戦闘の結果どちらか片方のロボットが敗北し破壊される。
 
戦闘の結果私のロボットが破壊された場合、そのロボットの武器チップは相手に奪われることになる。ある私のロボットの武器チップは他の私のロボットのうちの 1 機の弱点になっていて、またどの私のロボットも弱点となる武器チップをただ 1 つだけ持つ。私は私の各ロボットについて、相手がそのロボットの弱点武器を持っていた場合の敗北確率・持っていなかった場合の敗北確率をそれぞれ見積もることができる。
 
戦闘の結果相手の家事手伝いロボットが破壊された場合、r 博士はスペアボディ転送システムによって同じ家事手伝いロボットを送り込んでくる。このとき、相手のロボットが既に得ていた武器チップは失われることがない。r 博士は無制限にスペアボディ転送システムを使用してくるが、その隙に私は私の戦闘ロボットを修理することができるので、何度戦っても先に説明した敗北確率は変化することはない。また、スペアボディ転送システムは家事手伝いロボットが破壊されたときに破壊された場所でしか使えないので、家事手伝いロボットは敗北した直後に別の私の戦闘ロボットに挑むことはできない。
 
r 博士は無制限にスペアボディ転送システムを使えるのだから、悔しいが n 機の戦闘ロボットが全て破壊されるのは時間の問題だ。そこで私は戦闘ロボットを戦わせている裏で、スペアボディ転送システムごと破壊できるようなさらなるロボットの開発に勤しむつもりだ。しかし、私には一体どれだけの時間が残されているのだろうか。r 博士のロボットが最も早く私の n 機のロボットを撃破するような戦略を取ったとき、どれだけの時間がかかるだろうか。まずはそれを計算しなければなるまい。ついでに、そのようなロボットの撃破順序が何通りあるかも確認しておきたい。
 



"
p00667,11224111122411,"
腕が引っかかって抜けない。
 
机の裏に転がり込んでしまったものを拾おうとして、懐中電灯代わりに携帯の画面で照らしながら腕を挿し込んでみたが、うっかり何かに引っかかって抜けなくなってしまった。無理に動かすと痛い。
 
どうしよう。どうすれば脱出できるのだろう。大声で助けを呼ぶか。恥ずかしいので却下したいが、独力で脱出するのは難しそうだ。いや、声の届く範囲には誰もいなかったはずだ。焦る気持ちを押さえて辺りを見渡す。あのパソコンに手が届けばメールで助けを呼べるのだが、あいにく遠すぎる。やはり偶然誰かが通りかかるのを待つしかないのか。
 
いや待て、メールを送る機械ならあるじゃないか。手の届くところというよりも、既にこの手の中に。深く伸ばした手の先の画面はぼやけてよく見えないが、長年使っている携帯だ。画面が見えなくてもメールぐらいは送れるはずだ。
 
慎重に、頭の中に画面を描きながらボタンを押す。指の感触だけを頼りに、タイプミスだけはしないように、数字キーを何度も押してメッセージを打ち込む。漢字変換はしない、平仮名でもきっと伝わるはずだ。つくづくタッチパネルが主流のスマートフォンに乗り換えていなくてよかったと思う。
 
深呼吸をして、送信ボタンに指をかける。しばらくして、携帯が軽く震えた。送信完了の合図だ。溜息。しばらくすれば友人が助けに来るに違いない。
 
友人は賢いので適切に解釈してくれると思うのだが、今送ったメッセージは、本当に送りたかったメッセージとは違うものになっているかもしれない。この携帯の文字入力メソッドは広く使われているものと同じで、例えば「あ」行の平仮名を入力するのに ""1"" のボタンを使う。 ""1"" は「あ」を、 ""11"" は「い」を、以下同様に ""11111"" が「お」を表す。平仮名はループする、つまり ""111111"" もまた「あ」となる。「か」行は ""2"" 、「さ」行は ""3"" 、 ... を使い、同じボタンを続けて押したときの挙動は ""1"" の例と同様である。
 
ただし、この文字入力メソッドにはちょっと厄介な挙動がある。数字ボタンを押した後しばらく操作しないでいると、平仮名への変換が強制的に行われてしまうのだ。つまり、３回続けて ""1"" を押せば 「う」 になるが、時間を置いて３回 ""1"" を押すと「あああ」になる。別の例をあげると、 ""111111"" と押したとき、その押す間隔によって入力された文字列は「あ」にも「ああああああ」にもなる。""111111111111""は「い」かもしれないし、「ええいああ」かもしれないし、１２個の「あ」になるかもしれない。なお、違う数字ボタンを押したときにも平仮名への変換はおこなわれるので、 ""12345"" は「あかさたな」という文字列にしかなりえない。
 
さて、慎重にタイプしたので間違ったボタンを押したつもりはないのだが、適切な間隔でボタンを押せた自信はない。本当に送りたかったメッセージとは違うものを送ってしまった可能性は大いにあるのだ。さて、送られたかもしれない文字列の数は何通りだろうか。ああ、これは友人が助けに来るまでの暇つぶしにいいかもしれない。遅くても５時間以内に助けに来てくれるだろう。それまでに解けるといいのだけど。
 
	

"
p00668,The Incubator,"
サラリーマンの朝は早い。エリートコースを進み一流企業に入社して新人という肩書きからも卒業する頃、僕に下った辞令は未開の惑星における営業活動だった。辺鄙な土地での不便な生活を強いられているが、一応は左遷でなく栄転であり、その証拠に給料もぐんと上がっている - こんな場所では金なんて使いようもないのだけど。近年僕たちが直面している宇宙規模のエネルギー不足に対応するため、特定の生物種の個体から莫大なエネルギーを生成するテクノロジーが開発された。その特定の生物種というのが、この辺鄙な惑星の固有種なのだ。この生物が絶滅しないように保護しつつ、適度にエネルギーを回収していくのが僕の仕事だ。
 
エネルギーの回収は、いくつかのステップからなる。まずは、エネルギーの回収に使用する個体を選別する。個体によって得られるエネルギーの量は大きく異なるのだ。次に、選別された見込みのある個体に、インキュベーションという特別な処理を行う。インキュベートされた個体は膨大なエネルギーの源となる何かをを絶えず蓄えたり吐き出したりするので、個体にできるだけ多くのエネルギーの源となる何かが蓄えられている瞬間を狙って、円環の理に導く。するとお待ちかねのエネルギーが手に入る、という仕組みだ。
 
エリートサラリーマンに課せられるノルマは厳しい。しかし、僕にとって数十万のインキュベートされた個体を管理するのは朝飯前だ。今日は月末なので本社に月報を提出しなければならないが、今月はとても良い個体に遭遇したこともあって、過去最高の成績になりそうだ。
 
と喜んでいたのも束の間、最後の最後でひどいミスをやらかしてしまった。sql文を打ち間違えて、今月の成果を記録しているデータベースのテーブル 1 つをまるごとふっ飛ばしてしまったのだ。あれがなければ、今月の成果は全く無しということになってしまう。降格、左遷、あるいは解雇もありえるかもしれない。
 
最後の頼みの綱は、作業のたびにこまめにつけていたログファイルだ。僕はいつも、個体をインキュベートするたびに一意な整数の番号を振り、インキュベートされた個体たちの番号を 1 つの配列に保存している。僕の営業活動は、次のような行動からなる。
 個体をインキュベートし、その個体に番号 x を割り当て、その個体の番号を配列の末尾に追加する。 配列の n 番目の番号が示す個体を円環の理に導く。 番号 x の個体を円環の理に導く。 残念ながら僕は最大 lim 体の個体しか管理できない。個体をインキュベートしたとき、もしインキュベート済みの個体が lim を超えたならば、昔にインキュベートした個体から順に lim 以下になるまで円環の理に導く。 
僕はこれら 4 つの営業活動を行うたびに、欠かさずログファイルに記入している。しかし、4 の活動だけはログファイルに一切記入していない。そうしても特に曖昧なところは残らないためだ。
 
いつも僕は、個体の番号の配列の操作を愚直に行なっている。しかし今度ばかりは、愚直に操作しながらログファイルを走査していては間に合いそうにない。月報の提出期限は 5 時間後に迫っている。
 
そこで、君たちにお願いがあるんだ。ログファイルから僕の営業活動を再現するプログラムを書いてほしい。もし書いてくれたら、お礼に君たちの願い事を何でも 1 つ叶えてあげよう。何だって構わない。どんな願いことだって叶えてあげられるよ。
 



"
p00669,K Cards,"
ある日、先生は次のようなゲームを思いついた。
ゲームは 1 から 10 までの数がひとつ書かれたカードを n 枚使用し、以下のように進む。
 先生が n 枚のカードを数が見えるようにして横一列に黒板に貼り付け、ある整数 k (k &ge; 1) を生徒に宣言する。横一列に並べられた n 枚のカードについて、連続した k 枚のカードの積の最大値を ck とする。また、先生が並べた時点での ck を ck' とおく。 生徒は 1. で貼られたカードの列を見て ck を大きくすることを考える。ある 2 枚を入れ替えることで ck をより大きくすることができた場合、生徒の成績は ck - ck' 点上がる。誰かが成績点を得たらゲームを終了する。 
あなたの仕事は先生が並べたカードの列を入力し、生徒が得られる最大の成績点を出力するプログラムを書くことである。ただし、そこからどの 2 枚を選んで交換してもckを下げることしかできない (ck - ck' &lt; 0) 場合、文字列 &quot;no game&quot; (引用符を含まない)を出力せよ。

先生が並べたカードが7, 2, 3, 5の場合。このとき 7 と 3 を交換することで生徒は最大で 35 - 15 = 20 成績点を得る。
 

"
p00670,Spellcasters,"
n 人の魔法使いがいる。彼らには 1 から n までの番号があり、i 番目の魔法使いは魔力 ri ( 1 &le; i &le; n ) を持っている。いま彼らは強力な魔法使いと対峙しており、その敵の魔力は s である。n 人の魔法使いは協力して戦うのが得意で、特に 2 人で協力して戦うことを好む。2 人の魔法使いが協力した場合、魔力は単純にその和となり、強力な魔法などを駆使してある程度強い敵にも勝てるようになる。あなたの仕事は魔力 s を持つ敵に対して勝つことができる魔法使いのペア (i, j) ( i &ne; j かつ 1 &le; i &le; n かつ 1 &le; j &le; n ) の総数を出力することである。ただし (i, j) と (j, i) は同じ組として数える。一方の魔力が他方の魔力よりも大きいとき、大きい魔力を持っている側が勝つ。等しい場合は相打ちで勝ったことにならない。
 
"
p00671,Live Schedule,"
yokari tamuraは全国的に有名なアーティストである。今月yokariは d 日間にわたってライブツアーを行う。ツアーのスケジュールの決定においてこの国を c 種類の地域でわける。yokariがある地域でライブを行うことにより利益を得られ、これは正の整数で表される。yokariは原則として 1 日に最大 1 つまでライブを行う。ただし、ある地域でライブを行った後、隣接する地域でライブを行える場合はその地域で同じ日に再びライブを行うことができる。この条件を満たす限り、地域を移動しながら何度もライブを行うことができる。また、同じ日に同じ地域でライブを 2 度以上行うことはできない。さらに、同じ日に 2 回以上のライブを行う日の数はツアー期間中合計 x 以下でなければならない。
 
あなたはyokariの関係者であり、彼女のライブツアーのスケジュールを仮決めしなくてはならない。どの日にどの地域でライブを行えばもっとも有益だろうか。ただし 1 回のライブごとにyokariには非負の整数で表される負担がかかり、ツアー期間中の合計負担は w 以内でなければならない。あなたの仕事は各ライブでyokariにかかる負担と期待される利益を読み込み、スケジュールを仮決めして、利益合計の最大値を出力することである。
 

"
p00672,Dimensional Analysis,"
量の次元とは、相異なる量の間の関係式から具体的数値を無視して量の種類とそのべき乗だけに着目した概念である。具体的には定数係数を無視した等式として、次元の関係式を表す。すなわち、量 q の次元を[ q ]と表せば、以下のようないくつかの次元の関係式が例示できる。 [面積] = [長さ]2 [体積] = [長さ]3 [速さ] = [長さ][時間]-1 [加速度] = [長さ][時間]-2 [力] = [質量][長さ][時間]-2 [仕事] = [質量][長さ]2[時間]-2 
  量は基本量と組み立て量に分類される。
この問題ではn個の基本量とm個の組立量が与えられる。
与えられたm個の組立量の次元はすべてn個の基本量の次元の積で表すことができる。
また基本量の次元の積で２つの次元を表したとき、各基本量の指数がすべて一致すればその二つの次元は等しいと言える。
 すべての変数は組立量の次元に割り当てられている。 式は四則演算+, -, /, *とカッコ（）と変数のみを含む。 四則演算はよく知られているもので、正しく記述されているものとする。厳密には以下のbnfに従う。 また単項演算子は使用されない。(x * (-a))などは存在しない。 


&lt;formula>::=&lt;term>|&lt;formula>+&lt;term>|&lt;formula>-&lt;term>
&lt;term>::=&lt;factor>|&lt;term>*&lt;factor>|&lt;term>/&lt;factor>
&lt;factor>::=&lt;variable>|(&lt;formula>)
&lt;variable>::=&lt;string>
&lt;string>::=&lt;char>|&lt;string>&lt;char>
&lt;char>::=a~z|a~z
&lt;formula>が式を表し、&lt;variable>が変数名を表す。


"
p00673,School Excursion,"
春、それは修学旅行の時期である。
会津大学附属小学校（会津大小）でも、来年度の修学旅行の計画が建てられていた。
修学旅行は電車で移動することが伝統になっている。
会津若松市内では電車を利用する機会が少ないためだ。
 
しかし、学校に届いたある苦情により教員たちは頭を悩ませていた。
それは、「ある駅で大人数で乗り換えを行っていたので、その駅を利用する他の乗客に迷惑であった」という内容だった。
とくに、電車を降りたあとホームからの通路で大混雑してしまったという。
 
それは近年、会津大小の生徒数が急上昇しているからであった。
その原因は日本において競技プログラミングが大流行し、
小学校から競技プログラマーを養成するための訓練を行っている会津大小に生徒が集まったからである。
 
会津大小競技プログラミング部長であるあなたは、修学旅行を楽しみにしている。
修学旅行を成功させたいあなたは教員たちに提案をした。
「クラスごとに行動して、同じ駅に同時に到着しないようにしましょう！！　競技プログラミングの知識を応用すれば簡単です！！」
 
複数のクラスが同時に同じ駅に到着することがないように移動するとき（同じ駅に複数のクラスが滞在することは可能）、
出発する駅から目的地まで到達できる最大のクラス数を求め、そのときの最小の運賃を求めるプログラムをつくりなさい。
ただし、ある駅で同時に到着する電車と発車する電車が存在する場合、乗り継ぎが可能である。つまり、乗り継ぎに要する時間は無視して良い。
 

"
p00674,Strawberry Cake,"
会津大学附属小学校 (会津大小) に入学したシャ、ネロ、エリ、コーは競技プログラマとして活躍するために ippc というプログラミングコンテストに出場することにした。しかし ippc は 3 人 1 組でチームとしてコンテストに出場する決まりで、4 人でチームを組むことはできない。そこで彼らは 2 人ずつに分かれてチームを組み、2 人 1 組で参加できる ipoch というプログラミングコンテストに出場することにした。
 
チームは分かれてしまったが、実力は拮抗しており互いに良い練習相手になっている。
 
ある日彼らのコーチが差し入れにホールケーキを買ってきた。彼らはそれをシャの家で食べることにした。しかし家に着いて箱を開けてみるとケーキが変形していて、形は上から見ると円形ではなく凸多角形のようになっていた。ネロに運ばせたのが悪かったようだ。
ケーキの上にはイチゴが 1 つ乗っている。とりあえず 2 チームで分けるために、いまこのケーキをイチゴを通る直線にそって半分になるようにナイフで切ることが決定した。ケーキを切る前にイチゴを先にとってしまうのは彼らの美意識に反する。
 
あなたの仕事は 2 次元平面上に与えられる凸多角形 k を原点 (0, 0) を通る直線 l で分割したとき、分割で出来た 2 つの凸多角形の面積が等しくなるように直線 l を定めることである。もし複数あるならいずれかひとつで構わない。

 
"
p00675,Sports Days,"
会津大学附属小学校（会津大小）は日本有数の競技プログラマー養成校として有名である。
もちろん、運動会に参加しているときでさえアルゴリズムの修行を欠かせない。
 
競技プログラミング部部長のあなたはもちろんこの大会でも勝利したい。
今回はある競技に注目する。
 
ある競技とは会津大小で行われている伝統的な競技だ。
校庭にコーンがn個置いてある。
コーンは4色用意されている。
コーンのいくつかのペアは白線で描かれた矢印で結ばれている。
矢印は片側だけについており、整数が併記されている。
 
競技者はk人1チームとして行動する。
あるスタート地点のコーンからゴール地点のコーンまで矢印の上をその向きに移動する。
ただし、k人それぞれがゴール地点までの経路は異なる必要がある。
 
経路1と経路2が異なるというのは、
 条件1　経路1と経路2で経由する矢印の本数が等しい場合、経路1でi番目に経由する矢印と経路2でi番目に経由する矢印が異なるようなiが存在すること。 条件2　経路1と経路2で経由する矢印の本数が異なっていること。 
のいずれかを満たせば経路が異なっていると言える。
 
さらに、コーンの辿り方には禁止された色のパターンがあり、スタート地点からゴール地点までの経路でそのパターンを含んでしまった選手はリタイアとなる。
ただし、それ以外の経路はどのような経路を辿ってもよく、何度も同じコーン（スタート地点やゴール地点のコーンを含む）を通って良い。
また、矢印に併記された数字がスコアとして加算されていく。
この競技はより多くのチームメイトがより小さな合計スコアでゴール地点のコーンに辿りつけたチームが勝利となる。
 
部長のあなたはもちろんプログラミングでこの問題を解決できるはずだ。
ゴールまで移動可能な最大の人数を求めよ。
また、最大人数で辿り着いた時の最小スコアを求めよ。
 
ただし、いくらでもスコアを小さく出来る場合は -1 を出力せよ。
 
"
p00676,KND is So Sexy,"knd君は会津大学に在籍する学生プログラマである。彼の胸元はとてもセクシーなことで知られている。
 
簡単のために胸元から見える肌の部分を図にある二等辺三角形abcで表す。しかし服にはたるみが生じているため、長さが等しい2辺ac,bc(これらの長さをlとする)には実際にはさらに長さx分余裕がある。はだける部分の面積を増やすため、たるんだ分を引っ張ることで新たにふたつの三角形adc,becを作ることにしよう。点d,eは三角形abcの外側に存在する。この新しいふたつの三角形はたるみによって生じるもので、辺beと辺ecの長さの和および辺adと辺dcの長さの和はl+xでなければならない。あなたはこれら3つの三角形の面積の和mが最大になるように点d,eを決める。knd君の隣人であるあなたは彼の胸元がどれ程セクシーなのかを調べるために、a,l,xを入力として服からのぞく肌の最大の面積(m)を計算するプログラムを作成することにした。 

"
p00677,Make KND So Fat,"knd君は会津大学に在籍する学生プログラマである。彼の隣人はとても迷惑なことで知られている。隣人は彼が甘党であることを知り、必要以上に甘味を差し入れて彼を太らせようと画策している。そのために、当の隣人であるあなたは友人からとある甘味処を紹介してもらった。 しかし、その甘味処での商品の販売の仕方は少し変わっている。その販売方法とは、甘味セットと呼ばれる甘味の組を日替わりで販売するというものだ。予算内であればその日に販売されている甘味セットの中から自由に甘味を買うことができる。しかし、甘味セットに含まれる甘味は一種類につき１個しか販売されていない。
また、予算は期間の始めに用意した額から支払い、期間途中での追加予算はないものとする。あなたは友人から教えられた甘味の体重に与える影響の度合いと値段をもとに、ある期間中に一定の予算内で彼の体重を最適に増やす甘味の買い方を計算するプログラムを作成することにした。 

"
p00678,KND Runs for Sweets,"knd君は会津大学に在籍する学生プログラマである。彼は甘党であることで知られている。彼はとある市に1年間滞在することになり、その期間中に市内にある n 箇所の甘味処をすべて回りたいと思っている。なのでこの1年間の住む場所は甘味処を回るのに一番適した場所がいいと考えている。彼の隣人であるあなたは、各甘味処への最悪の移動時間が最小になる場所を探す事になった。この甘味処がある市は簡単のため二次元平面で表すことにする。彼は目的の甘味処へのモチベーションの違いにより、単位時間あたりの移動距離が変化する。また、彼はどんな場所にでも（たとえ甘味処と同じ場所であろうと）住むつもりでいる。knd君は甘味に関しては妥協を許さないのである。 

"
p00679,KND Warp,"knd君は会津大学に在籍する学生プログラマだ。彼はその優秀な頭脳をもってワープ装置を開発したことで有名である。ワープ装置とは便利なもので、ある場所から別の場所まで瞬時に移動することができる。彼はこれから地球上に点在するワープ装置を用いて様々な場所を可能な限り早くめぐる旅を計画している。 彼の隣人であるあなたの仕事は3次元空間 (xyz直交座標系) 上に存在するn個のワープ装置をうまく使用して、1からmまでの番号がふられたm個の点を順に通って、m番目の点まで移動するときの最小の所要時間を求めることだ。はじめは1番目の点にいるものとし、どのワープ装置も任意のワープ装置へ時間0で移動できる。ワープ以外の単位距離の移動は単位時間を要する。経由点のクエリはq個与えられる。 

"
p00680,KND Factory,"
knd君は会津大学に在籍する学生プログラマである。彼の住む町の周辺には n 個の町がある。彼は生クリームが大好きなので毎日生クリームを食べるためにある町に工場を建設した。その工場では毎日 f リットルの生クリームが製造される。生クリームは運ぶたびに、移動元の町の気温と移動先の町の気温の絶対差だけ傷んでしまう。困ったことにこの近辺の町の気温は寒暖計によって計測できない。しかしながら調査によって、それぞれの町の気温を変数とした n 個の一次方程式からなる n 元一次連立方程式を導くことができた。あなたはこれを解くことによって各町の気温を知ることができる。また、ある町から他の町へ生クリームを運搬するにはパイプラインを用いる。パイプラインは一日に送ることのできる生クリームの量が限られている。一日に f リットルの生クリームを工場がある町 s からknd君が住む町 t へ生クリームをなるべく良い状態で送りたい。町には0から始まる番号がつけられているものとする。方程式の各項は高々ひとつの変数からなり定数項がひとつある。 f リットルの生クリームはどのような運び方をしても一日以内で任意の町へ送られる。
 

"
p00681,Wall Breaker KND,"knd君は会津大学に在籍する学生プログラマである。彼はプログラマーであるとともに格闘家でもある。そんな彼は甘党であることで知られてるが、特に生クリームが大好物である。生クリームを食べればコンクリートの壁を数回壊すことができるようになるほどである。そのパワーに興味をもった彼の隣人は、生クリームたっぷりの新商品、「マトクリーム」を用いて実験をすることにした。
 その実験は、まず迷路を用意しknd君をそこに閉じ込める。その迷路には鍵がかかった扉、扉を開けるための鍵、マトクリームがそれぞれ1つずつ別のマスに存在する。彼は落ちている鍵を拾い、扉の鍵を開けることで外に脱出することが可能である。鍵を持っていなくても扉があるマスに移動することは可能である。また、マトクリームを食べることで迷路の壁を n 回だけ壊すことができるようになる。ただし外壁を壊して迷路の外に出ることはできない。さて、彼は最小何回のマス移動で迷路を脱出できるだろうか。 サンプル2つの迷路と最短の脱出経路は次の図で示される。sはknd君の初期位置、mはマトクリーム、kは鍵、dは扉を表す。



 

"
p00682,Area of Polygons,"
polygons are the most fundamental objects in geometric processing.
complex figures are often represented and handled as polygons
with many short sides.
if you are interested in the processing of geometric data,
you'd better try some programming exercises about basic
operations on polygons.
 
your job in this problem is to write a program that computes the area of polygons.
 
a polygon is represented by a sequence of points that are its vertices.
if the vertices p1, p2, ..., pn are given, line segments connecting
pi and pi+1 (1 <= i <= n-1) are sides of the polygon.
the line segment connecting pn and p1 is also a side of the polygon.
 
you can assume that the polygon is not degenerate.
namely, the following facts can be assumed without any input data checking.
 no point will occur as a vertex more than once. two sides can intersect only at a common endpoint (vertex). the polygon has at least 3 vertices. 
note that the polygon is not necessarily convex.
in other words, an inner angle may be larger than 180 degrees.
 

"
p00683,A Simple Offline Text Editor,"a text editor is a useful software tool that can help people in various situations including writing and programming. your job in this problem is to construct an offline text editor, i.e., to write a program that first reads a given text and a sequence of editing commands and finally reports the text obtained by performing successively the commands in the given sequence. the editor has a text buffer and a cursor. the target text is stored in the text buffer and most editing commands are performed around the cursor. the cursor has its position that is either the beginning of the text, the end of the text, or between two consecutive characters in the text. the initial cursor position (i.e., the cursor position just after reading the initial text) is the beginning of the text. a text manipulated by the editor is a single line consisting of a sequence of characters, each of which must be one of the following: 'a' through 'z', 'a' through 'z', '0' through '9', '.' (period), ',' (comma), and ' ' (blank). you can assume that any other characters never occur in the text buffer. you can also assume that the target text consists of at most 1,000 characters at any time. the definition of words in this problem is a little strange: a word is a non-empty character sequence delimited by not only blank characters but also the cursor. for instance, in the following text with a cursor represented as '^',  he^llo, world. the words are the following. he llo, world. notice that punctuation characters may appear in words as shown in this example. the editor accepts the following set of commands. in the command list, ""any-text"" represents any text surrounded by a pair of double quotation marks such as ""abc"" and ""co., ltd."". delete the leftmost word in the right of the cursor. if one or more blank characters occur between the cursor and the word before performing this command, delete these blanks, too.  if no words occur in the right, delete no characters in the text buffer.


 

   
"
p00684,Calculation of Expressions,"write a program to calculate values of arithmetic expressions which may
involve complex numbers. details of the expressions are described below. in this problem, basic elements of expressions are 
non-negative integer numbers and
the special symbol &quot;i&quot;. integer numbers are  sequences
of digits of arbitrary length and are in decimal notation. &quot;i&quot; denotes the
unit imaginary number i, i.e. i 2 = -1. operators appearing in expressions are + (addition), -
(subtraction), and * (multiplication). division is excluded from
the repertoire of the operators. all three operators are only used as binary
operators. unary plus and minus operators (e.g., -100) are also
excluded from the repertoire. note that the multiplication symbol *
may not be omitted in any case. for example, the expression 1+3i
in mathematics should be written as 1+3*i. usual formation rules of arithmetic expressions apply. namely, (1) the
operator * binds its operands stronger than the operators +
and -. (2) the operators + and - have the same
strength in operand binding. (3) two operators of the same strength bind
from left to right. (4) parentheses are used to designate specific order
of binding. the consequence of these rules can easily be understood from the following
examples. (1) 3+4*5 is 3+(4*5), not (3+4)*5
    (2) 5-6+7 is (5-6)+7, not 5-(6+7)
    (3) 1+2+3 is (1+2)+3, not 1+(2+3)
     your program should successively read expressions, calculate them and
 print their results. overflow should be detected. whenever an abnormal value is yielded as a result of applying an operator
appearing in the given expression, 
your program should report that the calculation failed due to overflow. 
by &quot;an abnormal value&quot;, we mean a value 
whose real part or imaginary part is
greater than 10000 or less than -10000. here are examples: 



10000+1+(0-10)
overflow, not 9991

(10*i+100)*(101+20*i)
9900+3010i , not overflow

4000000-4000000
overflow, not 0

 note that the law of associativity does not necessarily hold in this
problem.  for example, in the first example, 
overflow is detected by interpreting
the expression as (10000+1)+(0-10) following the binding rules,
whereas overflow could not be detected 
if you interpreted it as 10000+(1+(0-10)).
moreover, overflow detection should take place for resulting value of each
operation. in the second example, a value which exceeds 10000 appears
in the calculation process of one multiplication 
if you use the mathematical rule (a+b i)(c+d i)=(ac-bd)+(ad+bc)i
  . but the yielded result 9900+3010i does not contain any number
which exceeds 10000 and, therefore, overflow should not be reported.  

"
p00685,Board Arrangements for Concentration Games,"you have to organize a wedding party. the program of the
party will include a concentration game played by the
bride and groom. the arrangement of the concentration game
should be easy since this game will be played to make the
party fun. we have a 4x4 board and 8 pairs of cards (denoted by `a' to `h')
for the concentration game: to start the game, it is necessary to arrange all 16 cards
face down on the board. for example: the purpose of the concentration game is to expose as many
cards as possible by repeatedly performing the following
procedure: (1) expose two cards, (2) keep them open if they
match or replace them face down if they do not. since the arrangements should be simple, every pair of cards
on the board must obey the following condition: the
relative position of one card to the other card of the pair must be
one of 4 given relative positions.
the 4 relative positions are different from one another and
they are selected from the following 24 candidates: your job in this problem is to write a program that
reports the total number of board arrangements which satisfy
the given constraint.  for example, if relative positions
(-2, 1), (-1, 1), (1, 1), (1, 2) are given, the total number
of board arrangements is two, where the following two
arrangements satisfy the given constraint: arrangements of the same pattern should be counted only once.  two
board arrangements are said to have the same pattern if they are
obtained from each other by repeatedly making any two pairs exchange
their positions.  for example, the following two arrangements have the
same pattern:
 

     x0  x1  x2  x3           x0  x1  x2  x3
    +---+---+---+---+        +---+---+---+---+ 
 y0 | h | g | f | e |     y0 | a | b | c | d | 
    +---+---+---+---+        +---+---+---+---+ 
 y1 | g | e | d | f |     y1 | b | d | e | c | 
    +---+---+---+---+        +---+---+---+---+ 
 y2 | c | h | b | a |     y2 | f | a | g | h | 
    +---+---+---+---+        +---+---+---+---+ 
 y3 | b | c | a | d |     y3 | g | f | h | e | 
    +---+---+---+---+        +---+---+---+---+ 

where (1) `a' and `h',
(2) `b' and `g',
(3) `c' and `f', and
(4) `d' and `e'
exchange their positions respectively.

"
p00686,Where's Your Robot?,"
you have full control over a robot that walks around in a rectangular
field paved with square tiles like a chessboard.  there are m
columns of tiles from west to east, and n rows of tiles from
south to north (1 m, n <= 100).  each tile is given a pair
of coordinates, such as (i, j), where 1 i m
and 1 j n.
 
your robot is initially on the center of the tile at (1, 1), that is,
one at the southwest corner of the field, facing straight north.  it
can move either forward or backward, or can change its facing
direction by ninety degrees at a time, according to a command you give
to it, which is one of the following.
 
while executing either a ""forward"" or a
""backward"" command, the robot may bump against the
wall surrounding the field.  if that happens, the robot gives up the
command execution there and stands at the center of the tile right in
front of the wall, without changing its direction. 
after finishing or giving up execution of a given command, your robot
will stand by for your next command. 

"
p00687,Unable Count,"i would, if i could,
  if i couldn't how could i?
  i couldn't, without i could, could i?
  could you, without you could, could ye?
  could ye? could ye?
  could you, without you could, could ye? it is true, as this old rhyme says, that we can only do what
we can do and we cannot do what we cannot do. changing some of
dos with counts, we have another statement that we can only count
what we can do and we cannot count what we cannot do, which looks
rather false. we could count what we could do as well as we could
count what we couldn't do.  couldn't we, if we confine ourselves
to finite issues? surely we can count, in principle, both what we can do and
what we cannot do, if the object space is finite. yet, sometimes
we cannot count in practice what we can do or what we cannot do.
here, you are challenged, in a set of all positive integers up
to (and including) a given bound n, to count
all the integers that cannot be represented by a formula of
the form a*i+b*j, where a and
b are given positive integers and i and j
are variables ranging over non-negative integers. you are requested
to report only the result of the count, i.e. how many integers
are not representable.
for example, given n = 7, a = 2, b = 5,
you should answer 2, since 1 and 3 cannot be represented in a
specified form, and the other five numbers are representable as follows: 


   2 = 2*1 + 5*0,    4 = 2*2 + 5*0,    5 = 2*0 + 5*1,
   6 = 2*3 + 5*0,    7 = 2*1 + 5*1.


"
p00688,Factorization of Quadratic Formula,"as the first step in algebra, students learn quadratic formulas and
their factorization.  often, the factorization is a severe burden
for them.  a large number of students cannot master the factorization;
such students cannot be aware of the elegance of advanced algebra.
it might be the case that the factorization increases the number of people
who hate mathematics. your job here is to write a program which helps students of
an algebra course.  given a quadratic formula, your program should report
how the formula can be factorized into two linear formulas.
all coefficients of quadratic formulas and those of resultant
linear formulas are integers in this problem. the coefficients a, b and c of a quadratic formula
ax2 + bx + c are given.
the values of a, b and c are integers,
and their absolute values do not exceed 10000.
from these values, your program is requested to find four integers
p, q, r and s, such that
ax2 + bx + c =
(px + q)(rx + s). since we are considering integer coefficients only, it is not
always possible to factorize a quadratic formula into linear formulas.
if the factorization of the given formula is impossible,
your program should report that fact. 

"
p00689,Spiral Footrace,"
let us enjoy extraordinary footraces at an athletic field.
before starting the race, small flags representing checkpoints are set up
at random on the field. every runner has to pass all the checkpoints one by
one in the spiral order specified below.
the starting point is the southwest corner of the athletic field.  
at the starting point, runners are facing north.
during the race, they run clockwise in a spiral passing
every checkpoint as illustrated in the following figure.
when moving from one flag to the next, they take a straight path.
this means that the course of a race is always piecewise linear.  

upon arriving at some flag, a runner has to determine the next flag
among those that are not yet visited.
that flag shall be the one at the smallest angle to the right of the direction
that the runner is facing. when more than two flags are on the same straight
line, the runner visits the nearest flag first.
the goal position is the place of the last visited flag. 
your job is to write a program that calculates the length of the course from
the starting point to the goal, supposing that the course consists of
line segments connected by flags.
the position of each flag is given by a coordinate pair
(xi, yi), which is limited
to the first quadrant. the starting point is fixed to the origin (0, 0) where a
flag is always set up. 


"
p00690,A Long Ride on a Railway,"
travelling by train is fun and exciting. but more than that indeed.  young
challenging boys often tried to purchase the longest single tickets and to
single ride the longest routes of various railway systems.  route planning was
like solving puzzles. however, once assisted by computers, and supplied with
machine readable databases, it is not any more than elaborating or hacking
on the depth-first search algorithms. 
map of a railway system is essentially displayed in the form of a graph. (see
the figures below.) the vertices (i.e. points) correspond to stations and the
edges (i.e. lines) correspond to direct routes between stations. the station
names (denoted by positive integers and shown in the upright letters in the
figures) and direct route distances (shown in the slanted letters) are also
given. 
the problem is to find the length of the longest path and to form the
corresponding list of stations on the path for each system.  the longest of
such paths is one that starts from one station and, after travelling many
direct routes as far as possible without passing any direct route more than
once, arrives at a station which may be the starting station or different one
and is longer than any other sequence of direct routes.  any station may be
visited any number of times in travelling the path if you like.
 

"
p00691,Fermat's Last Theorem,"
in the 17th century, fermat wrote that he proved for any integer $n \geq 3$,
there exist no positive integers $x$, $y$, $z$ such that
$x^n + y^n = z^n$.
however he never disclosed the proof.  later, this claim was named
fermat's last theorem or fermat's conjecture.
 
if fermat's last theorem holds in case of $n$, then it also holds
in case of any multiple of $n$.
thus it suffices to prove cases where $n$ is a prime number
and the special case $n$ = 4.
 
a proof for the case $n$ = 4 was found in fermat's own memorandum.
the case $n$ = 3 was proved by euler in the 18th century.
after that, many mathematicians attacked fermat's last theorem.
some of them proved some part of the theorem, which was a
partial success.
many others obtained nothing.
it was a long history.
finally, wiles proved fermat's last theorem in 1994.
 
fermat's last theorem implies that for any integers $n \geq 3$
and $z > 1$, it always holds that

$z^n > $ max { $x^n + y^n | x > 0, y > 0, x^n + y^n \leq z^n$ }.

 
your mission is to write a program that verifies this in the case
$n$ = 3 for a given $z$.  your program should read in
integer numbers greater than 1, and, corresponding to each input
$z$, it should output the following:

$z^3 - $ max { $x^3 + y^3 | x > 0, y > 0, x^3 + y^3 \leq z^3$ }.

 

"
p00692,Patience,"
as the proverb says,
 
writing programs within the limited time may impose 
some patience on you, but you enjoy it and win the contest, we hope.
 
the word ""patience"" has the meaning of perseverance, 
but it has another meaning in card games.
card games for one player are called ""patience"" in the uk
and ""solitaire"" in the us.
 

let's play a patience in this problem.
 
in this card game, you use only twenty cards whose 
face values are positive and less than or equal to 5 (ace's value
is 1 as usual).
just four cards are available for each face value.
 
at the beginning, the twenty cards are laid
in five rows by four columns (see figure 1).
all the cards are dealt face up.
 
an example of the initial layout is shown in figure 2. 

the purpose of the game is to remove as many cards as possible
by repeatedly removing a pair of neighboring cards 
of the same face value.
let us call such a pair a matching pair.
 
the phrase ""a pair of neighboring cards"" means a pair of cards which are
adjacent to each other.
for example, in figure 1, c6 is adjacent to any of
the following eight cards:
 
every time you remove a pair, you must rearrange the remaining cards 
as compact as possible.
to put it concretely, each remaining card ci 
must be examined in turn
in its subscript order to be shifted to the uppermost-leftmost
space.
 
how to play:
 
if you can remove all the twenty cards, you win the game 
and your penalty is 0.
if you leave some cards,
you lose the game and 
your penalty is the number of the remaining cards.
 
whenever you find multiple matching pairs,
you must choose one pair out of them 
as in the step 2 of the above procedure.
the result of the game depends on these choices.
 
your job is to write a program which answers the minimal penalty
for each initial layout.
 

"
p00693,Cyber Guardian,"in the good old days, the internet was free from fears and
terrorism. people did not have to worry about any cyber criminals or mad
computer scientists. today, however, you are facing atrocious crackers 
wherever you are, unless being disconnected. you have to protect
yourselves against their attacks. counting upon your excellent talent for software construction and
strong sense of justice, you are invited to work as a cyber
guardian. your ultimate mission is to create a perfect firewall system
that can completely shut out any intruders invading networks and protect
children from harmful information exposed on the net. however, it is
extremely difficult and none have ever achieved it before. as the first 
step, instead, you are now requested to write a software simulator
under much simpler assumptions. in general, a firewall system works at the entrance of a local network
of an organization (e.g., a company or a university) and enforces its local
administrative policy. it receives both inbound and outbound packets
(note: data transmitted on the net are divided into small segments
called packets) and carefully inspects them one by one whether or not
each of them is legal. the definition of the legality may
vary from site to site or depend upon the local administrative
policy of an organization. your simulator should accept data representing
not only received packets but also the local administrative policy. for simplicity in this problem we assume that each network packet
consists of three fields: its source address, destination address, and
message body. the source address specifies the computer or appliance
that transmits the packet and the destination address specifies the
computer or appliance to which the packet is transmitted. an address
in your simulator is represented as eight digits such as 03214567 or
31415926, instead of using the standard notation of ip addresses
such as 192.168.1.1. administrative policy is described in
filtering rules, each of which specifies some collection of
source-destination address pairs and defines those packets with the
specified address pairs either legal or illegal.  

"
p00694,Strange Key,"
professor tsukuba invented a mysterious jewelry box that can be opened
with a special gold key whose shape is very strange. it is composed
of gold bars joined at their ends.  each gold bar
has the same length and is placed parallel to one of the three
orthogonal axes in a three dimensional space, 
i.e., x-axis, y-axis and z-axis. 
the locking mechanism of the jewelry box
is truly mysterious, but the shape of the key is known.
to identify the key of the jewelry box, he gave a way to describe 
its shape. 
the description 
indicates a list of connected paths that completely defines the shape
of the key: the gold bars of the key are arranged along the paths and 
joined at their ends.
except for the first path, 
each path must start from an end point of a gold bar on a previously
defined path.
each path is represented by a sequence of elements, each of which is one
of six symbols (+x, -x, +y, -y, +z and -z) or a positive integer.
each symbol indicates the direction from an end point to the other end
point of a gold bar along the path.  since each gold bar is
parallel to one of the three orthogonal axes, the 6 symbols are enough to
indicate the direction.  note that a description of a path has
direction but the gold bars themselves have no direction.
 
an end point of a gold bar can have a label, which is a positive integer.
the labeled point may be referred to as the beginnings of other paths.
in a key description, the first occurrence of a positive integer 
defines a label of a point and each subsequent occurrence of the same
positive integer indicates the beginning of a new path at the point.
 
an example of a key composed of 13 gold bars is depicted 
in figure 1.   the following sequence of lines 
is a description of the key in figure 1.
note that newlines have the same role as space characters in the
description, so that ""19 1 +x 1 +y +z 3 +z 3 +y -z +x +y -z -x +z
2 +z 2 +y"" has the same meaning.
 
the meaning of this description is quite simple.
the first integer ""19"" means the number of
the following elements in this description.
each element is one of the 6 symbols or a positive integer.
 
the integer ""1"" at the head of the second line 
is a label attached to the starting point of the first path.
without loss of generality, 
it can be assumed that the starting point of the first path is the
origin, i.e., (0,0,0), and that the length of each gold bar is 1.
the next element ""+x"" indicates that the first gold bar
is parallel to the x-axis, 
so that the other end point of the gold bar is at (1,0,0).
these two elements ""1"" and ""+x"" indicates
the first path consisting of only one gold bar.
the third element of the second line in the description is the positive
integer ""1"", meaning that the point with the label ""1"", i.e., the
origin (0,0,0) is the beginning of a new path.
the following elements ""+y"", ""+z"", ""3"", and ""+z"" indicate the second
path consisting of three gold bars. note that this ""3"" is its first
occurrence so that the point with coordinates (0,1,1) is labeled ""3"". 
the head of the third line ""3"" indicates
the beginning of the third path and so on.
consequently, there are four paths by which the shape of the key in
figure 1 is completely defined.
 
note that there are various descriptions of the same key since there
are various sets of paths that cover the shape of the key.
for example,
the following sequence of lines 
is another description of the key in figure 1, since
the gold bars are placed in the same way.
 
furthermore, the key may be turned 90-degrees around 
x-axis, y-axis or z-axis several times and may be moved parallelly.
since any combinations of rotations and parallel moves don't change
the shape of the key, a description of a rotated and moved key also
represent the same shape of the original key. for example, a
sequence 
is a description of a key in figure 2 that represents the same key 
as in figure 1.
indeed, they are congruent under a rotation around x-axis and 
a parallel move.
 
your job is to write a program to
judge whether or not the given two descriptions define the same key.
 
note that paths may make a cycle.
for example, ""4 +x +y -x -y"" and ""6 1 +x 1 +y +x -y""
are valid descriptions. however, two or more gold bars must not be placed at the same position.
for example, key descriptions
""2 +x -x"" 
and
""7 1 +x 1 +y +x -y -x"" are invalid.
 

"
p00695,Get a Rectangular Field,"
karnaugh is a poor farmer who has a very small field.
he wants to reclaim wasteland in the kingdom to get a new field.
but the king who loves regular shape
made a rule that a settler can only get a rectangular land as his field.
thus, karnaugh should get the largest rectangular land suitable for
reclamation.
 
the map of the wasteland is represented with a 5 x 5 grid as shown
in the following figures, where '1' represents a place suitable for
reclamation and '0' represents a sandy place.
your task is to find the largest rectangle consisting only of 1's in the map,
and to report the size of the rectangle.
the size of a rectangle is defined by the number of 1's in it.
note that there may be two or more largest rectangles of the same size.
 

"
p00696,column List,"ever since mr. ikra became the chief manager of his office,
he has had little time for his favorites, programming and debugging.
so he wants to check programs in trains to and from his office
with program lists.
he has wished for the tool that prints source programs 
as multi-column lists so that each column just fits in
a pocket of his business suit.
 in this problem, you should help him by making a program that prints
the given input text in a multi-column format.  since his business
suits have various sizes of pockets, your program should be flexible
enough and accept four parameters, (1) the number of lines in a
column, (2) the number of columns in a page, (3) the width of each
column, and (4) the width of the column spacing. 
we assume that a fixed-width font is used for printing and so the
column width is given as the maximum number of characters in a line.
the column spacing is also specified as the number of
characters filling it. 
 

"
p00697,Jigsaw Puzzles for Computers,"
 ordinary jigsaw puzzles are solved with visual hints;
players solve a puzzle with the picture which the puzzle shows on finish,
and the diverse patterns of pieces. 
such jigsaw puzzles may be suitable for human players,
because they require abilities of pattern recognition and imagination.
 
 on the other hand,
""jigsaw puzzles"" described below may be just the things for
simple-minded computers.
 
 as shown in figure 1,
 a puzzle is composed of nine square pieces, and each of the four edges
of a piece is labeled with one of the following eight symbols: 

	""r"", ""g"", ""b"", ""w"", ""r"", ""g"", ""b"", and ""w"".
 
 in a completed puzzle, the nine pieces are arranged in a 3 x 3 grid,
and each of the 12 pairs of edges facing each other 
must be labeled with one of the
following four combinations of symbols: 

	""r"" with ""r"", ""g"" with ""g"",
	""b"" with ""b"", and  ""w"" with ""w"".

for example, an edge labeled ""r"" can only face an edge with ""r"".
figure 2 is an example of a completed state of a puzzle.
in the figure, edges under this restriction are indicated by shadowing their labels.
the player can freely move and rotate the pieces, but cannot turn them over.
there are no symbols on the reverse side of a piece !
 
 each piece is represented by a sequence of the four symbols
on the piece, starting with the symbol of the top edge,
followed by the symbols of the right edge, the bottom edge,
and the left edge.
for example, gwgw represents the leftmost piece in figure 1.
note that the same piece can be represented as 
wgwg,
gwgw 
or wgwg
since you can rotate it in 90, 180 or 270 degrees.
 
 the mission for you is to create a program which counts the number
of solutions.
it is needless to say that these numbers must be multiples of four,
because, as shown in figure 3,
a configuration created by rotating a solution in 90, 180 or 270 degrees
is also a solution.
 
 a term ""rotationally equal"" is defined; if two different pieces are
identical when one piece is rotated (in 90, 180 or 270 degrees),
they are rotationally equal. for example,
wgwr and wrwg are rotationally equal.
 
 another term ""rotationally symmetric"" is defined; if a piece is
rotationally equal to itself, it is rotationally symmetric. 
for example, a piece gwgw is rotationally symmetric.
 there is no rotationally symmetric piece in a puzzle.


 


"
p00698,Missing Numbers,"
toshizo is the manager of a convenience store chain in hakodate.
every day, each of the stores in his chain sends him a table of the
products that they have sold.  toshizo's job is to compile these
figures and calculate how much the stores have sold in total.
 
by looking at the table, toshizo can tell at a glance which goods are
selling well or selling badly, and which stores are paying well and
which stores are too empty. sometimes, customers will bring products
back, so numbers in a table can be negative as well as positive.
 
toshizo reports these figures to his boss in tokyo, and together they
sometimes decide to close stores that are not doing well and sometimes
decide to open new stores in places that they think will be profitable.
so, the total number of stores managed by toshizo is not fixed. also,
they often decide to discontinue selling some products that are not
popular, as well as deciding to stock new items that are likely to be
popular. so, the number of products that toshizo has to monitor is also
not fixed.
 
one new year, it is very cold in hakodate. a water pipe bursts in
toshizo's office and floods his desk. when toshizo comes to work, he
finds that the latest sales table is not legible. he can make out some
of the figures, but not all of them. he wants to call his boss in
tokyo to tell him that the figures will be late, but he knows that his
boss will expect him to reconstruct the table if at all possible.
 
waiting until the next day won't help, because it is the new year, and
his shops will be on holiday.  so, toshizo decides either to work out
the values for himself, or to be sure that there really is no unique
solution. only then can he call his boss and tell him what has
happened.
 
then toshizo's program will be able to tell them the correct figures
to replace the question marks.
in some cases, however, even his program will not be able to replace
all the question marks, in general.
for instance, if a table like: 
is given, there are infinitely many possible solutions.
in this sort of case, his program will just say ""no"". 
toshizo's program works for any data where the totals row and column
are still intact.
can you reproduce toshizo's program?
 

 

"
p00699,Nets of Dice,"
in mathematics, some plain words have special meanings.
the word ""net"" is one of such technical terms.
in mathematics, the word ""net"" is sometimes used to
mean a plane shape 
which can be folded into some solid shape.
 
the following are a solid shape (figure 1) and one of its net (figure 2).
 
nets corresponding to a solid shape are not unique.
for example, figure 3 shows three of the nets of a cube.
 
usually, a die is used in pair with another die.
the plural form of the word ""die"" is ""dice"".
 
some examples of proper nets of dice are shown in figure 4,
and those of improper ones are shown in figure 5.
 
the reasons why each example in figure 5 is improper are as follows.

(a) the sum of two numbers on the opposite faces is not always 7.
(b) some faces are marked with the same number.
(c) this is not a net of a cube. some faces overlap each other.
(d) this is not a net of a cube.
some faces overlap each other and one face of a cube is not covered.
(e) this is not a net of a cube. 
the plane shape is cut off into two parts.
the face marked with '2' is isolated.
(f) this is not a net of a cube.
the plane shape is cut off into two parts.
(g) there is an extra face marked with '5'.

 
notice that there are two kinds of dice.
for example, the solid shapes formed from 
the first two examples in figure 4 
are mirror images of each other.
 
any net of a die can be expressed on a sheet of 5x5 mesh like the one in figure 6.
in the figure, gray squares are the parts to be cut off.
when we represent the sheet of mesh by numbers as in figure 7,
squares cut off are marked with zeros.
 
your job is to write a program which tells
the proper nets of a die from the improper ones automatically.
 


"
p00700,Exploring Caves,"there are many caves deep in mountains found in the countryside. in legend, 
each cave has a treasure hidden within the farthest room from the cave's 
entrance. the shogun has ordered his samurais to explore these caves with 
karakuri dolls (robots) and to find all treasures. these robots move in the 
caves and log relative distances and directions between rooms.  each room in a cave is mapped to a point on an integer grid (x, y &gt;= 0). 
for each cave, the robot always starts from its entrance, runs along the grid 
and returns to the entrance (which also serves as the exit). the treasure in 
each cave is hidden in the farthest room from the entrance, using euclid 
distance for measurement, i.e. the distance of the room at point (x, y) from the 
entrance (0, 0) is defined as the square root of (x*x+y*y). if more than one 
room has the same farthest distance from the entrance, the treasure is hidden in 
the room having the greatest value of x. while the robot explores a cave, it 
records how it has moved. each time it takes a new direction at a room, it notes 
the difference (dx, dy) from the last time it changed its direction. for 
example, suppose the robot is currently in the room at point (2, 4). if it moves 
to room (6, 4), the robot records (4, 0), i.e. dx=6-2 and dy=4-4. the first data 
is defined as the difference from the entrance. the following figure shows rooms 
in the first cave of the sample input. in the figure, the farthest room is the 
square root of 61 distant from the entrance.   based on the records that the robots bring back, your job is to determine the 
rooms where treasures are hidden.  
"
p00701,Pile Up!,"there are cubes of the same size and a simple robot named masato. initially, 
all cubes are on the floor. masato can be instructed to pick up a cube and put 
it on another cube, to make piles of cubes. each instruction is of the form 
`pick up cube a and put it on cube b (or on the floor).'  when he is to pick up a cube, he does so after taking off all the cubes on 
and above it in the same pile (if any) onto the floor. in contrast, when he is 
to put a cube on another, he puts the former on top of the pile including the 
latter without taking any cubes off.  when he is instructed to put a cube on another cube and both cubes are 
already in the same pile, there are two cases. if the former cube is stacked 
somewhere below the latter, he put off all the cube above it onto the floor. 
afterwards he puts the former cube on the latter cube. if the former cube is 
stacked somewhere above the latter, he just ignores the instruction.  when he is instructed to put a cube on the floor, there are also two cases. 
if the cube is already on the floor (including the case that the cube is stacked 
in the bottom of some pile), he just ignores the instruction. otherwise, he puts 
off all the cube on and up above the pile (if any) onto the floor before moving 
the cube onto the floor.  he also ignores the instruction when told to put a cube on top of itself 
(this is impossible).  given the number of the cubes and a series of instructions, simulate actions 
of masato and calculate the heights of piles when masato has finished his job. 
 
"
p00702,Kanglish:Analysis on Artificial Language,"the late prof. kanazawa made an artificial language named kanglish, which is 
similar to english, for studying mythology. words and sentences of kanglish are 
written with its own special characters called ""kan-characters"". the size of the 
set of the kan-characters is 38, i.e., there are 38 different kan-characters in 
the set. since kan-characters cannot be directly stored in a computer because of 
the lack of a coded character set, prof. kanazawa devised a way to represent 
each kan-character as an alphabetical letter or an ordered combination of two 
alphabetical letters. thus, each kan-character is represented as one of the 
following 26 letters 
 
in addition, the kan-characters are ordered according to  
the above alphabetical representation. the order is named kan-order in which the  
kan-character represented by ""a"" is the first one, that by ""b"" is the second,  
that by ""z"" is the 26th, that by ""ld"" is the 27th, and that by ""ts"" is the 38th  
(the last).  
  the representations of words in kanglish are separated by spaces. each 
sentence is written in one line, so there are no periods or full stops in 
kanglish. all alphabetical letters are in lower case, i.e., there are no 
capitalizations.  we currently have many documents written in kanglish with the alphabetical 
representation. however, we have lost most of prof. kanazawa's work on how they 
can be translated. to recognize his work, we have decided to first analyze them 
statistically. the first analysis is to check sequences of consecutive 
kan-characters in words.  for example, a substring ""ic"" in a word ""quice"" indicates an ordered pair of 
two adjacent kan-characters that are represented by ""i"" and ""c"". for simplicity, 
we make a rule that, in the alphabetical representation of a word, a 
kan-character is recognized as the longest possible alphabetical representation 
from left to right. thus, a substring ""ncw"" should be considered as a pair of 
""nc"" and ""w"". it does not consist of ""n"" and ""cw"", nor ""n"", ""c"", and ""w"".  for each kan-character, there are 38 possible pairs of that kan-character and 
another kan-character, e.g. ""aa"", ""ab"", ..., ""az"", ""ald"", ..., ""ats"". thus, 
mathematically, there is a total of 1444 (i.e., 38x38) possible pairs, including 
pairs such as ""n"" and ""cw"", which is actually not allowed according to the above 
rule.  your job is to write a program that counts how many times each pair occurs in 
input data. for example, in the sentence   for simplicity, a newline at the end of a line is considered as a space. thus 
in the above example, ""e"" is followed by a space.  
"
p00703,What is the Number in my Mind ?,"let us enjoy a number guess game.  a number containing l digits is in my mind (where 4 &lt;= l &lt;= 10). you 
should guess what number it is. it is composed of any of the following ten 
digits:  no digits appear twice in the number. for example, when l = 4, ""1234"" is a 
legitimate candidate but ""1123"" is not (since ""1"" appears twice).  the number may begin with ""0"", and a number ""05678"" should be distinct from a 
number ""5678"", for example.  if you and your computer cannot see through my mind by telepathy, a group of 
hints will be needed in order for you to identify the number in my mind. 
a hint is a triple of numbers named try, hit, and 
blow.  the try is a number containing l decimal digits. no digits appear 
twice in the try, and this number may also begin with ""0"".  the hit value indicates the count of digits that the try and 
the number in my mind have in common, and that are exactly in the same position. 
 the blow value indicates the count of digits that the try and 
the number in my mind have in common, but that are not in the same position. 
 they are arranged in one line as follows.  for example, if l = 4 and the number in my mind is 9876, then the 
following is an example of hint-set consisting of legitimate hints.  in contrast, the following hint-set is not sufficient to guess the 
number.  your job is to write a program identifying the numbers in my mind using given 
hint-sets.  
"
p00704,Enclosing Circles,"a number of circles are given. a circle may be disjoint from other circles, 
overlapping with some other circles, or even totally surrounding or surrounded 
by another circle.  we want to enclose all these circles by a rope. of course, the length of the 
rope should be minimized. for example, given circles of figure 1, the rope 
should run as shown in figure 2.  your job is to write a program which finds the rope layout, and computes the 
minimum length of the rope. the thickness of the rope is negligible.  
"
p00705,When Can We Meet?,"
the icpc committee would like to have its meeting as soon as
possible to address every little issue of the next contest.  
however, members of the committee are so busy maniacally developing
(possibly useless) programs that it is very difficult to arrange
their schedules for the meeting.
so, in order to settle the meeting date, the chairperson requested every
member to send back a list of convenient dates by e-mail.
your mission is to help the chairperson, who is now dedicated to other
issues of the contest, by writing a program that 
chooses the best date from the submitted lists.
your program should find the date convenient for the most members.
if there is more than one such day, the earliest is the best.
 

"
p00706,Get Many Persimmon Trees,"
seiji hayashi had been a professor of the nisshinkan samurai school
in the domain of aizu for a long time in the 18th century.
in order to reward him for his meritorious career in education,
katanobu matsudaira, the lord of the domain of aizu, had decided to
grant him a rectangular estate within a large field in the aizu basin.
although the size (width and height) of the estate was strictly specified
by the lord, he was allowed to choose any location for the estate
in the field.
inside the field which had also a rectangular shape,
many japanese persimmon trees,
whose fruit was one of the famous products of the aizu region
known as 'mishirazu persimmon', were planted.
since persimmon was hayashi's favorite fruit, he wanted to have
as many persimmon trees as possible in the estate given by the lord.
 
for example, in figure 1, the entire field is a rectangular grid whose
width and height are 10 and 8 respectively.  each asterisk (*)
represents a place of a persimmon tree.  if the specified width and
height of the estate are 4 and 3 respectively, the area surrounded by
the solid line contains the most persimmon trees.  similarly, if the
estate's width is 6 and its height is 4, the area surrounded by the
dashed line has the most, and if the estate's width and height are 3
and 4 respectively, the area surrounded by the dotted line contains
the most persimmon trees.  note that the width and height cannot be
swapped; the sizes 4 by 3 and 3 by 4 are different, as shown in figure
1.
 
your task is to find the estate of a given size (width and height)
that contains the largest number of persimmon trees.
 

"
p00707,The Secret Number,"
your job is to find out the secret number hidden in a matrix,
each of whose element is a digit ('0'-'9') or a letter
('a'-'z').  you can see an example matrix in figure 1.
 
the secret number and other non-secret ones are coded in a
matrix as sequences of digits in a decimal format.  you should
only consider sequences of digits d1
d2 ... dn such that
dk+1 (1 &lt;= k &lt; n)
is either right next to or immediately below
dk in the matrix.  the secret you are
seeking is the largest number coded in this manner.
 
four coded numbers in the matrix in figure 1, i.e., 908820,
23140037, 23900037, and 9930, are depicted in figure 2.  as you
may see, in general, two or more coded numbers may share a
common subsequence.  in this case, the secret number is
23900037, which is the largest among the set of all coded numbers
in the matrix.
 
in contrast, the sequences illustrated in figure 3 should be
excluded: 908a2 includes a letter; the fifth digit of 23149930
is above the fourth; the third digit of 90037 is below right of
the second.
 
write a program to figure out the secret number from a given
matrix.
 

"
p00708,Building a Space Station,"
you are a member of the space station engineering team,
and are assigned a task in the construction process of the station.
you are expected to write a computer program to complete the task.
 
the space station is made up with a number of units, called cells.
all cells are sphere-shaped, but their sizes are not necessarily uniform.
each cell is fixed at its predetermined position
shortly after the station is successfully put into its orbit.
it is quite strange that two cells may be touching each other,
or even may be overlapping.
in an extreme case, a cell may be totally enclosing another one.
i do not know how such arrangements are possible.
 
all the cells must be connected,
since crew members should be able to walk
from any cell to any other cell.
they can walk from a cell a to another cell b, if,
(1) a and b are touching each other or overlapping,
(2) a and b are connected by a `corridor',
or (3) there is a cell c such that walking from a to c, and also from b to c
are both possible.
note that the condition (3) should be interpreted transitively.
 
you are expected to design a configuration,
namely, which pairs of cells are to be connected with corridors.
there is some freedom in the corridor configuration.
for example, if there are three cells a, b and c,
not touching nor overlapping each other,
at least three plans are possible in order to connect all three cells.
the first is to build corridors a-b and a-c,
the second b-c and b-a, the third c-a and c-b.
the cost of building a corridor is proportional to its length.
therefore, you should choose a plan with the shortest
total length of the corridors.
 
you can ignore the width of a corridor.
a corridor is built between points on two cells' surfaces.
it can be made arbitrarily long, but of course the shortest one is chosen.
even if two corridors a-b and c-d intersect in space, they are
not considered to form a connection path between (for example) a and c.
in other words, you may consider that two corridors never intersect.
 

"
p00709,Square Carpets,"
mr. frugal bought a new house.
he feels deeply in love with his new house
because it has a comfortable living room
in which he can put himself completely at ease.
he thinks his new house is a really good buy.
 
but, to his disappointment, 
the floor of its living room has some scratches on it.
 
the floor has a rectangle shape, covered with square panels.
he wants to replace all the scratched panels with flawless panels, 
but he cannot afford to do so.
then, he decides to cover all the scratched panels 
with carpets.
 
the features of the carpets he can use are as follows.
 
the carpets must cover all the scratched panels,
but must not cover any of the flawless ones.
 
for example, 
if the scratched panels are as shown in figure 1, 
at least 6 carpets are needed.
 
as carpets cost the same irrespective of their sizes, 
mr. frugal would like to use as few number of carpets as possible.
 
your job is to write a program which tells the minimum number 
of the carpets to cover all the scratched panels.
 


"
p00710,Hanafuda Shuffle,"
there are a number of ways to shuffle a deck of cards.   hanafuda 
shuffling for japanese card game 'hanafuda' is one such example.
the following is how to perform hanafuda shuffling.

 
there is a deck of n cards. starting from the p-th card 
from the top of the deck, c cards are pulled out
and put on the top of the deck, as shown in figure 1.
this operation, called a cutting operation, is repeated.
 
write a program that simulates hanafuda shuffling and answers which 
card will be finally placed on the top of the deck.
 





  


  figure 1: cutting operation





"
p00711,Red and Black,"
 there is a rectangular room, covered with square tiles. each tile is
colored either red or black. a man is standing on a black tile.
from a tile, he can move to one of four adjacent tiles. but he can't 
move on red tiles, he can move only on black tiles.
 
 write a program to count the number of black tiles which he can reach 
by repeating the moves described above. 
 


"
p00712,Unit Fraction Partition,"

a fraction whose numerator is 1
and whose denominator is a positive integer
is called a unit fraction.
a representation of a positive rational number
p/q
as the sum of finitely many unit fractions is called a partition of
p/q
into unit fractions.
for example,
1/2 + 1/6
is a partition of
2/3
into unit fractions.
the difference in the order of addition is disregarded.
for example, we do not distinguish
1/6 + 1/2
from
1/2 + 1/6.
 
for given four positive integers
p,
q,
a, and
n,
count the number
of partitions of
p/q
into unit fractions satisfying the following two conditions.
 
the partition is the sum of at most
n
many unit fractions.
 
the product of the denominators of the unit fractions in the
partition is less than or equal to
a.
 
for example, if
(p,q,a,n) = (2,3,120,3),
you should report 4 since
 
enumerates all of the valid partitions.
 

"
p00713,Circle and Points,"
you are given n points in the xy-plane. you have a
circle of radius one and move it on the xy-plane, so as to
enclose as many of the points as possible. find how many points can be
simultaneously enclosed at the maximum. a point is considered
enclosed by a circle when it is inside or on the circle.
 fig 1. circle and points 


"
p00714,Water Tank,"
mr. denjiro is a science teacher.

today he has just received a specially ordered water tank that
will certainly be useful for his innovative experiments on water
flow.
 
the size of the tank is 100cm (width) * 50cm (height) * 30cm (depth)
 (see figure 1).

for the experiments, he fits several partition boards inside of
the tank parallel to the sideboards.

the width of each board is equal to the depth of the tank, i.e. 30cm.
the height of each board is less than that of the tank, i.e. 50 cm,
and differs one another.

the boards are so thin that he can neglect the thickness in the experiments.
 
the front view of the tank is shown in figure 2.
 
    there are several faucets above the tank and he turns them on at
    the beginning of his experiment.  the tank is initially empty.
    your mission is to write a
    computer program to simulate water flow in the tank.
 





"
p00715,Name the Crossing,"
the city of kyoto is well-known for its chinese plan: streets are
either north-south or east-west. some streets are numbered, but most
of them have real names.

crossings are named after the two streets crossing there,
e.g. kawaramachi-sanjo is the crossing of kawaramachi street and sanjo
street. but there is a problem: which name should come first?
at first the order seems quite arbitrary: one says kawaramachi-sanjo
(north-south first) but shijo-kawaramachi (east-west first). with some
experience, one realizes that actually there
seems to be an ""order"" on the streets, for instance in the above
shijo is ""stronger"" than kawaramachi, which in turn is ""stronger"" than
sanjo.
one can use this order to deduce the names of other crossings.
 
you are given as input a list of known crossing names x-y.
streets are either north-south or east-west, and only orthogonal streets
may cross.
 
as your list is very incomplete, you start by completing it using
the following rule:
  they both cross the same third street c in the input   there is no street d such that d-a and b-d appear in the input   there is no street e such that a-e and e-b appear in the input  

 
we use this definition to extend our strength relation:
 
  a is stronger than b, when there is a
  sequence a = a1, a2, ..., an = b,
  with n at least 2, 
  where, for any i in 1 .. n-1, either
  ai-ai+1 is an input crossing or
  ai and ai+1 have equal strength.
 
then you are asked whether some other possible crossing names x-y are
valid. you should answer affirmatively if you can infer the validity of a
name, negatively if you cannot. concretely:
 
  yes    if you can infer that the two streets are orthogonal, and x
         is stronger than y
 
  no     otherwise
 



"
p00716,Ohgas' Fortune,"
the ohgas are a prestigious family based on hachioji.  the head of the family,
mr. nemochi ohga, a famous wealthy man, wishes to increase his fortune
by depositing his money to an operation company. you are asked to help
mr. ohga maximize his profit by operating the given money during a specified
period.
 
from a given list of possible operations, 
you choose an operation to deposit the given fund to. 
you commit on the single operation throughout the period and
deposit all the fund to it.

each operation specifies an annual interest rate, whether the interest
is simple or compound, and an annual operation charge.

an annual operation charge is a constant 
not depending on the balance of the fund.

the amount of interest is calculated at the end of every year, by
multiplying the balance of the fund under operation by the annual
interest rate, and then rounding off its fractional part. for compound
interest, it is added to the balance of the fund under operation, and
thus becomes a subject of interest for the following years.  for
simple interest, on the other hand, it is saved somewhere else and
does not enter the balance of the fund under operation (i.e. it is
not a subject of interest in the following years).

an operation charge is then subtracted from the balance of the fund
under operation.  you may assume here that you can always pay the
operation charge (i.e. the balance of the fund under operation is
never less than the operation charge).

the amount of money you obtain after the specified years of operation
is called ``the final amount of fund.''  for simple interest, it is
the sum of the balance of the fund under operation at the end of the
final year, plus the amount of interest accumulated throughout the
period. for compound interest, it is simply the balance of the fund
under operation at the end of the final year.

 
operation companies use c, c++, java, etc., to perform their
calculations, so they pay a special attention to their interest
rates. that is, in these companies, an interest rate is always an
integral multiple of 0.0001220703125 and between 0.0001220703125 and
0.125 (inclusive).  0.0001220703125 is a decimal representation of
1/8192. thus, interest rates' being its multiples means that they can
be represented with no errors under the double-precision binary
representation of floating-point numbers.
 
for example, if you operate 1000000 jpy for five years with an annual,
compound interest rate of 0.03125 (3.125 %) and an annual operation charge of 3000 jpy, the balance changes as
follows.
 
after the five years of operation, the final amount of fund is 1150357 jpy.
 
if the interest is simple with all other parameters being equal, 
it looks like:
 in this case the final amount of fund is the total of the fund under
operation, 985000 jpy, and the cumulative interests, 155311 jpy, which
is 1140311 jpy.
 

"
p00717,Polygonal Line Search,"
multiple polygonal lines are given on the xy-plane.
given a list of polygonal lines and a template,
you must find out polygonal lines
which have the same shape as the template.
 
a polygonal line consists of several line segments parallel to x-axis or
y-axis.  it is defined by a list of xy-coordinates of vertices from the start-point to the end-point in order,
and always turns 90 degrees at each vertex.
a single polygonal line does not pass the same point twice.



two polygonal lines  have the same shape when they
fully overlap each other only with rotation and translation
within xy-plane (i.e. without magnification or a flip).
the vertices given in reverse order from the start-point to the end-point is the
same as that given in order.
 
figure 1 shows examples of polygonal lines.
in this figure, polygonal lines a and b have the same shape.
 
write a program that answers polygonal lines which have the same shape  as
the template.
 






  


  figure 1: polygonal lines 






"
p00718,Numeral System,"
prof. hachioji has devised a new numeral system of
integral numbers with four lowercase letters ""m"", ""c"", ""x"", ""i""
and with eight digits ""2"", ""3"", ""4"", ""5"", ""6"", ""7"", ""8"", ""9"". 
he doesn't use digit ""0"" nor digit ""1"" in this system.
 
the letters ""m"", ""c"", ""x"" and ""i"" correspond to 1000, 100, 10 and 1,
respectively, 
and the digits ""2"", ...,""9"" correspond to 2, ..., 9, respectively.
this system has  nothing to do with the roman numeral system.
 
for example,
character strings
 
correspond to the integral numbers 
5234 (=5*1000+2*100+3*10+4*1),
1204 (=1000+2*100+4*1),
 and 5230 (=5*1000+2*100+3*10), 
respectively.  
the parts of strings in the above example, ""5m"", ""2c"", ""3x"" and ""4i"" 
represent 5000 (=5*1000), 200 (=2*100), 30 (=3*10) and 4 (=4*1),
respectively. 
 
each of the letters ""m"", ""c"", ""x"" and ""i"" may
 be prefixed by one of the digits
""2"", ""3"", ..., ""9"". 
in that case, the prefix digit and the letter are regarded 
as a pair.
a pair that consists of a prefix digit and a letter 
corresponds to an integer that is equal to
the original value of the letter multiplied by 
the value of the prefix digit.
 
for each letter ""m"", ""c"", ""x"" and ""i"", 
the number of its occurrence in a string is at most one.
when it has a prefix digit, it should appear together with the prefix digit.
the letters ""m"", ""c"", ""x"" and ""i"" must appear in this order, from left to right.
moreover, when a digit exists in a string,
it should appear as the prefix digit of the following letter.
each letter may be omitted in a string, but
the whole string must not be empty.
a string made in this manner is called an mcxi-string.
 
an mcxi-string corresponds to a positive integer 
that is the sum of the values of the letters
and those of the pairs contained in it as mentioned above. 
the positive integer corresponding to an mcxi-string is called its
mcxi-value.
moreover, given an integer from 1 to 9999,
there is a unique mcxi-string whose mcxi-value is equal 
to the given integer.
for example,
the mcxi-value of an mcxi-string ""m2c4i"" is 
1204 that is equal to 1000 + 2*100 + 4*1.
there are no mcxi-strings but ""m2c4i"" that correspond to 1204.
note
that strings ""1m2c4i"", ""mcc4i"", ""m2c0x4i"", and ""2cm4i"" are
not valid mcxi-strings. 
the reasons are use of ""1"",
multiple occurrences of ""c"", use of ""0"", and the wrong order of ""c"" and ""m"",
respectively.
 
your job is to write a program for prof. hachioji
that reads two mcxi-strings, 
computes the sum of their mcxi-values, and
prints the mcxi-string corresponding to the result.
 


"
p00719,Traveling by Stagecoach,"
once upon a time, there was a traveler.
 
he plans to travel using stagecoaches (horse wagons).
his starting point and destination are fixed,
but he cannot determine his route.
your job in this problem is to write a program
which determines the route for him.
 
there are several cities in the country,
and a road network connecting them.
if there is a road between two cities, one can travel by a stagecoach
from one of them to the other.
a coach ticket is needed for a coach ride.
the number of horses is specified in each of the tickets.
of course, with more horses, the coach runs faster.
 
at the starting point, the traveler has a number of coach tickets.
by considering these tickets and the information on the road network,
you should find the best possible route that takes him to the destination
in the shortest time.
the usage of coach tickets should be taken into account.
 
the following conditions are assumed.
  a coach ride takes the traveler from one city to another 
directly connected by a road.
in other words, on each arrival to a city, he must change the coach.   only one ticket can be used for a coach ride between two cities
directly connected by a road.   each ticket can be used only once.   the time needed for a coach ride is the distance between two cities
divided by the number of horses.   the time needed for the coach change should be ignored.  

"
p00720,Earth Observation with a Mobile Robot Team,"
a new type of mobile robot has been developed for environmental earth
observation.
it moves around on the ground, acquiring and recording various sorts of
observational data using high precision sensors.
robots of this type have short range wireless communication devices and can
exchange observational data with ones nearby.
they also have large capacity memory units, on which they record data
observed by themselves and those received from others.
 
figure 1 illustrates the current positions of three robots a, b, and c and
the geographic coverage of their wireless devices.
each circle represents the wireless coverage of a robot, with its
center representing the position of the robot.
in this figure, two robots a and b are in the positions where a can
transmit data to b, and vice versa.
in contrast, c cannot communicate with a or b, since it is too remote
from them.
still, however, once b moves towards c as in figure 2, b and c can
start communicating with each other.
in this manner, b can relay observational data from a to c.
figure 3 shows another example, in which data propagate among several robots 
instantaneously.
 
as you may notice from these examples, if a team of robots move
properly, observational data quickly spread over a large number of them.
your mission is to write a program that simulates how information
spreads among robots.
suppose that, regardless of data size, the time necessary for
communication is negligible.
 

"
p00721,Cleaning Robot,"
here, we want to solve path planning for a mobile robot cleaning a
rectangular room floor with furniture.
 
consider the room floor paved with square tiles whose size fits 
the cleaning robot (1 &times; 1).
there are 'clean tiles' and 'dirty tiles', and the robot can change
a 'dirty tile' to a 'clean tile' by visiting the tile.
also there may be some obstacles (furniture) whose size fits a
tile in the room. if there is an obstacle on a tile, the robot cannot visit 
it.
the robot moves to an adjacent tile with one move.
the tile onto which the robot moves must be one of four tiles 
(i.e., east, west, north or south) adjacent to the tile where the 
robot is present. the robot may visit a tile twice or more.
 
your task is to write a program which computes the minimum number of
moves for the robot to change all 'dirty tiles' to 'clean tiles', 
if ever possible.
 

"
p00722,Dirichlet's Theorem on Arithmetic Progressions,"
good evening, contestants.
 
if a and d are relatively prime positive integers,
the arithmetic sequence beginning with a
and increasing by d, i.e.,
a,
a + d,
a + 2d,
a + 3d,
a + 4d,
...,
contains infinitely many prime numbers.
this fact is known as dirichlet's theorem on arithmetic progressions,
which had been conjectured by johann carl friedrich gauss (1777 - 1855)
and was proved by johann peter gustav lejeune dirichlet (1805 - 1859)
in 1837.
 
for example,
the arithmetic sequence beginning with 2 and increasing by 3,
i.e.,
 
contains infinitely many prime numbers
 
your mission, should you decide to accept it,
is to write a program to find
the nth prime number in this arithmetic sequence
for given positive integers a, d, and n.
 
as always, should you or any of your team be tired or confused,
the secretary disavow any knowledge of your actions.
this judge system will self-terminate in three hours.
good luck!
 



"
p00723,Organize Your Train part II,"
rj freight, a japanese railroad company for freight operations
has recently constructed exchange lines at hazawa, yokohama.
the layout of the lines is shown in figure b-1.
 
a freight train consists of 2 to 72 freight cars.  there are 26
types of freight cars, which are denoted by 26 lowercase letters
from ""a"" to ""z"".  the cars of the same type are indistinguishable from
each other, and each car's direction doesn't matter either.
thus, a string of lowercase letters of length 2 to 72 is sufficient
to completely express the configuration of a train.
 
upon arrival at the exchange lines, a train is divided into two
sub-trains at an arbitrary position (prior to entering the
storage lines).  each of the sub-trains may have its direction
reversed (using the reversal line).  finally, the two sub-trains
are connected in either order to form the final configuration.
note that the reversal operation is optional for each of the
sub-trains.
 
for example, if the arrival configuration is ""abcd"", the train
is split into two sub-trains of either 3:1, 2:2 or 1:3 cars.
for each of the splitting, possible final configurations are
as follows (""+"" indicates final concatenation position):
 

excluding duplicates, 12 distinct configurations are possible.
 
given an arrival configuration, answer 
the number of distinct configurations which can be
constructed using the exchange lines described above.
 



"
p00724,Hexerpents of Hexwamp,"
hexwamp is a strange swamp, paved with regular hexagonal dimples.
hexerpents crawling in this area are serpents adapted to the
environment, consisting of a chain of regular hexagonal sections.  each
section fits in one dimple.
 
hexerpents crawl moving some of their sections from the dimples they
are in to adjacent ones.  to avoid breaking their bodies, sections
that are adjacent to each other before the move should also be
adjacent after the move.  when one section moves, sections adjacent to
it support the move, and thus they cannot move at that time.  any
number of sections, as far as no two of them are adjacent to each
other, can move at the same time.
 
you can easily find that a hexerpent can move its sections at its
either end to only up to two dimples, and can move intermediate
sections to only one dimple, if any.
 
for example, without any obstacles, a hexerpent can crawl forward
twisting its body as shown in figure c-1, left to right.  in this
figure, the serpent moves four of its eight sections at a time, and
moves its body forward by one dimple unit after four steps of moves.
actually, they are much better in crawling sideways, like sidewinders.
 
 
their skin is so sticky that if two sections of a serpent that are not
originally adjacent come to adjacent dimples (figure c-2), they will
stick together and the serpent cannot but die.   two sections cannot
fit in one dimple, of course.  this restricts serpents' moves
further.  sometimes, they have to make some efforts to get a food
piece even when it is in the dimple next to their head.
 
 
hexwamp has rocks here and there.  each rock fits in a dimple.
hexerpents' skin does not stick to rocks, but they cannot crawl over
the rocks.  although avoiding dimples with rocks restricts their
moves, they know the geography so well that they can plan the fastest
paths.
 
you are appointed to take the responsibility of the head of the
scientist team to carry out academic research on this swamp and the
serpents.  you are expected to accomplish the research, but never at
the sacrifice of any casualty.  your task now is to estimate how soon
a man-eating hexerpent may move its head (the first section) to the
position of a scientist in the swamp.  their body sections except for
the head are quite harmless and the scientist wearing high-tech
anti-sticking suit can stay in the same dimple with a body section of
the hexerpent.
 




"
p00725,Curling 2,"
on planet mm-21, after their olympic games this year, curling is getting popular.
but the rules are somewhat different from ours.
the game is played on an ice game board on which a square mesh is marked.
they use only a single stone.
the purpose of the game is to lead the stone from the start
to the goal with the minimum number of moves.
 
fig. d-1 shows an example of a game board.
some squares may be occupied with blocks.
there are two special squares namely the start and the goal,
which are not occupied with blocks.
(these two squares are distinct.)
once the stone begins to move, it will proceed until it hits a block.
in order to bring the stone to the goal,
you may have to stop the stone by hitting it against a block,
and throw again.
 
the movement of the stone obeys the following rules:
  at the beginning, the stone stands still at the start square.
  the movements of the stone are restricted to x and y directions.
diagonal moves are prohibited.
  when the stone stands still, you can make it moving by throwing it.
you may throw it to any direction
unless it is blocked immediately(fig. d-2(a)).
  the stone stops at the square next to the block it hit.
        the block disappears.
   
    the game ends in failure.
   
    the stone stops there and the game ends in success.
   
 
  you cannot throw the stone more than 10 times in a game.
if the stone does not reach the goal in 10 moves, the game ends in failure.
  
under the rules, we would like to know whether the stone at the start
can reach the goal and, if yes, the minimum number of moves required.
 
with the initial configuration shown in fig. d-1, 4 moves are required
to bring the stone from the start to the goal.
the route is shown in fig. d-3(a).
notice when the stone reaches the goal, the board configuration has changed
as in fig. d-3(b).
 





fig. d-3: the solution for fig. d-1 and the final board configuration





"
p00726,The Genome Database of All Space Life,"
in 2300, the life science division of federal republic of space starts
a very ambitious project to complete the genome sequencing of all
living creatures in the entire universe and develop the genomic
database of all space life.
thanks to scientific research over many years, it has been known that
the genome of any species consists of at most 26 kinds of
molecules, denoted by english capital letters (i.e. a
to z).
 
what will be stored into the database are plain strings consisting of
english capital letters.
in general, however, the genome sequences of space life include
frequent repetitions and can be awfully long.
so, for efficient utilization of storage, we compress n-times
repetitions of a letter sequence seq into
n(seq), where n is a natural 
number greater than or equal to two and the length of seq is at
least one.
when seq consists of just one letter c, we may omit parentheses and write nc.
 
for example, a fragment of a genome sequence:
 can be compressed into: by replacing the first occurrence of abababab with its compressed form.
similarly, by replacing the following repetitions of xy,
ab, and c, we get: since c is a single letter, parentheses are omitted in this
compressed representation.
finally, we have:  
your mission is to write a program that uncompress compressed genome
sequences.
 



"
p00727,Secrets in Shadows,"
long long ago, there were several identical columns (or cylinders) built vertically in a big open space near yokohama (fig. f-1). in the daytime, the shadows of the columns were moving on the ground as the sun moves in the sky. each column was very tall so that its shadow was very long. the top view of the shadows is shown in fig. f-2.
	 
the directions of the sun that minimizes and maximizes the widths of the shadows of the columns were said to give the important keys to the secrets of ancient treasures.
	 
the width of the shadow of each column is the same as the diameter of the base disk. but the width of the whole shadow (the union of the shadows of all the columns) alters according to the direction of the sun since the shadows of some columns may overlap those of other columns.
       
fig. f-3 shows the direction of the sun that minimizes the width of the whole shadow for the arrangement of columns in fig. f-2. 
       fig. f-4 shows the direction of the sun that maximizes the width of the whole shadow. when the whole shadow is separated into several parts (two parts in this case), the width of the whole shadow is defined as the sum of the widths of the parts. 
a direction of the sun is specified by an angle &theta; defined in fig. f-5. for example, the east is indicated by &theta; = 0, the south by &theta; = &pi;/2, and the west by &theta; = &pi. you may assume that the sun rises in the east (&theta; = 0) and sets in the west (&theta; = &pi;).
 
your job is to write a program that, given an arrangement of columns, computes two directions &theta;min and &theta;max of the sun that give the minimal width and the maximal width of the whole shadow, respectively.
 
the position of the center of the base disk of each column is specified by its (x, y) coordinates. the x-axis and y-axis are parallel to the line between the east and the west and that between the north and the south, respectively. their positive directions indicate the east and the north, respectively.
 
you can assume that the big open space is a plane surface. 
 
there may be more than one &theta;min or &theta;max for some arrangements in general, but here, you may assume that we only consider the arrangements that have unique &theta;min and &theta;max in the range 0 &le; &theta;min &lt; &pi;, 0 &le; &theta;max &lt; &pi;.

 

      "
p00728,ICPC Score Totalizer Software,"
the international clown and pierrot competition (icpc), is one of the
most distinguished and also the most popular events on earth in the
show business.
 
one of the unique features of this contest is the great number of
judges that sometimes counts up to one hundred.  the number of judges
may differ from one contestant to another, because judges with any
relationship whatsoever with a specific contestant are temporarily
excluded for scoring his/her performance.
 
basically, scores given to a contestant's performance by the judges
are averaged to decide his/her score.  to avoid letting judges with
eccentric viewpoints too much influence the score, the highest and the
lowest scores are set aside in this calculation.  if the same highest
score is marked by two or more judges, only one of them is ignored.
the same is with the lowest score.  the average, which may contain
fractions, are truncated down to obtain final score as an integer.
 
you are asked to write a program that computes the scores of
performances, given the scores of all the judges, to speed up the event
to be suited for a tv program.
 





"
p00729,Analyzing Login/Logout Records,"
you have a computer literacy course in your university. in the computer
system, the login/logout records of all pcs in a day are stored in a
file.  although students may use two or more pcs at a time, no one can
log in to a pc which has been logged in by someone who has not
logged out of that pc yet.

 
you are asked to write a program that calculates the total time of a
student that he/she used at least one pc in a given time period
(probably in a laboratory class) based on the records in the file.
 
for a query such as ""give usage of the student 1 between 13:00 and
14:30"", your program should answer ""55 minutes"", that is, the sum of
45 minutes from 13:00 to 13:45 and 10 minutes from 14:20 to 14:30, as
depicted in the following figure.
 




 


"
p00730,Cut the Cake,"
today is the birthday of mr. bon vivant, who is known as one of the greatest p&acirc;tissiers in the world.
those who are invited to his birthday party are gourmets from around the world.
they are eager to see and eat his extremely creative cakes.
now a large box-shaped cake is being carried into the party.
it is not beautifully decorated and looks rather simple, but it must be delicious beyond anyone's imagination.
let us cut it into pieces with a knife and serve them to the guests attending the party.
 
the cake looks rectangular, viewing from above (figure c-1).
as exemplified in figure c-2, the cake will iteratively be cut into pieces, where on each cut exactly a single piece is cut into two smaller pieces.
each cut surface must be orthogonal to the bottom face and must be orthogonal or parallel to a side face.
so, every piece shall be rectangular looking from above and every side face vertical.
 
piece sizes in figure c-2 vary significantly and it may look unfair, but you don't have to worry.
those guests who would like to eat as many sorts of cakes as possible often prefer smaller pieces.
of course, some prefer larger ones.
 your mission of this problem is to write a computer program that simulates the cutting process of the cake and reports the size of each piece.
 



"
p00731,Cliff Climbing,"
at 17:00, special agent jack starts to escape from the enemy camp.
there is a cliff in between the camp and the nearest safety zone.
jack has to climb the almost vertical cliff 
by stepping his feet on the blocks that cover the cliff.
the cliff has slippery blocks where jack has to
spend time to take each step. 
he also has to bypass some blocks that are too loose to support his weight.
your mission is to write a program that calculates the minimum time to complete climbing. 
 
figure d-1 shows an example of cliff data that you will
receive.
the cliff is covered with square blocks.
jack starts cliff climbing from the ground under the cliff,
by stepping his left or right foot on one of the blocks marked with
's' at the bottom row.
the numbers on the blocks are the ""slippery levels"".  it takes
t time units for him to safely put his foot on a
block marked with t, where 1 &le; t &le; 9.
he cannot put his feet on blocks marked with 'x'.
he completes the climbing when he puts 
either of his feet on one of the blocks marked with 't' at the top row.
 
jack's movement must meet the following constraints. 
after putting his left (or right) foot on a block, he can only move
his right (or left, respectively) foot.
his left foot position (lx, ly) and his right foot position
(rx, ry) should satisfy
lx &lt; rx  and | lx - rx | + | ly - ry | &le; 3 .
this implies that, given a position of his left foot in figure d-2 (a), he has to
place his right foot on one of the nine blocks marked with blue color.
similarly, given a position of his right foot in figure d-2 (b),
he has to place his
left foot on one of the nine blocks marked with blue color.
 





figure d-2: possible placements of feet






"
p00732,Twirl Around,"
let's think about a bar rotating clockwise as if it were a
twirling baton moving on a planar surface surrounded by a
polygonal wall (see figure 1).
 figure 1.  a bar rotating in a polygon 
initially, an end of the bar (called ""end a"") is at (0,0), and
the other end (called ""end b"") is at (0,l) where l is the
length of the bar.  initially, the bar is touching the wall only
at the end a.
 
the bar turns fixing a touching point as the center.
the center changes as a new point touches the wall.
 
your task is to calculate the coordinates of the end a when the
bar has fully turned by the given count r.
 figure 2.  examples of turning bars in figure 2, some examples are shown.  in cases (d) and
(e), the bar is stuck prematurely (cannot rotate clockwise anymore 
with any point touching the wall as the center)
before r rotations.  in such cases, you should answer the
coordinates of the end a in that (stuck) position. you can assume the following: 
when the bar's length l changes by &epsilon; (|&epsilon;| &lt;
0.00001), the final (x,y) coordinates
will not change more than 0.0005.
 





"
p00733,Dr. Podboq or: How We Became Asymmetric,"
after long studying how embryos of organisms become asymmetric during
their development, dr. podboq, a famous biologist, has reached his new
hypothesis.  dr. podboq is now preparing a poster for the coming
academic conference, which shows a tree representing the development
process of an embryo through repeated cell divisions starting from one
cell.  your job is to write a program that transforms given trees into
forms satisfying some conditions so that it is easier for the audience
to get the idea.
 
a tree representing the process of cell divisions has a form described
below.
 the starting cell is represented by a circle placed at the top. each cell either terminates the division activity or divides into
two cells.  therefore, from each circle representing a cell, there are
either no branch downward, or two branches down to its
two child cells. 
below is an example of such a tree.
 



figure f-1: a tree representing a process of cell divisions


 
according to dr. podboq's hypothesis, we can determine which cells
have stronger or weaker asymmetricity by looking at the structure of
this tree representation.  first, his hypothesis defines ""left-right
similarity"" of cells as follows:
 the left-right similarity of a cell that did not divide further is
0. for a cell that did divide further, we collect the partial
trees starting from its child or descendant cells, and count how
many kinds of structures they have.  then, the left-right similarity of
the cell is defined to be the ratio of the number of structures
that appear both in
the right child side and the left child side.  we regard two trees
have the same structure if we can make them have exactly the same shape by
interchanging two child cells of arbitrary cells. 
for example, suppose we have a tree shown below:
 



figure f-2: an example tree


 
the left-right similarity of the cell a is computed as follows.
first, within the descendants of the cell b, which is the left child
cell of a, the following three kinds of structures appear.  notice that
the rightmost structure appears three times, but when we count the number
of structures, we count it only once.
 



figure f-3: structures appearing within the descendants of the cell b


 
on the other hand, within the descendants of the cell c, which is the
right child cell of a, the following four kinds of structures appear.
 



figure f-4: structures appearing within the descendants of the cell c


 
among them, the first, second, and third ones within the b side are
regarded as the same structure as the second, third, and fourth ones
within the c side, respectively.  therefore, there are four structures
in total, and three among them are common to the left side and the
right side, which means the left-right similarity of a is 3/4.
 
given the left-right similarity of each cell, dr. podboq's hypothesis
says we can determine which of the cells x and y has
stronger asymmetricity by the following rules.
 otherwise, both x and y must have two child cells. in this case,
we compare the child cell of x with stronger (or equal)
asymmetricity (than the other child cell of x) and the child
cell of y with stronger (or equal) asymmetricity (than the other child cell
of y), and the one having a child with stronger asymmetricity
has stronger asymmetricity. if we still have a tie, we compare the other child cells of x
and y with weaker (or equal) asymmetricity, and the one having a child with
stronger asymmetricity has stronger asymmetricity. if we still have a tie again, x and y have
completely equal asymmetricity. 
when we compare child cells in some rules above, we recursively apply
this rule set.
 
now, your job is to write a program that transforms a given tree
representing a process of cell divisions, by interchanging two child cells
of arbitrary cells, into a tree where the following conditions are
satisfied.
 for every cell x which is the starting cell of the given
tree or a left child cell of some parent cell, if x has two
child cells, the one at left has stronger (or equal) asymmetricity than the one
at right. for every cell x which is a right child cell of some parent
cell, if x has two child cells, the one at right has stronger (or equal)
asymmetricity than the one at left. 
in case two child cells have equal asymmetricity, their order is
arbitrary because either order would results in trees of the same shape.
 
for example, suppose we are given the tree in figure f-2.  first we
compare b and c, and because b has lower left-right similarity, which means stronger asymmetricity, we
keep b at left and c at right.  next, because b is the left child cell
of a, we compare two child cells of b, and the one with stronger
asymmetricity is positioned at left.  on the other hand, because c is
the right child cell of a, we compare two child cells of c, and the one
with stronger asymmetricity is positioned at right.  we examine the
other cells in the same way, and the tree is finally transformed into
the tree shown below.
 



figure f-5: the example tree after the transformation


 
please be warned that the only operation allowed in the transformation
of a tree is to interchange two child cells of some parent cell.  for
example, you are not allowed to transform the tree in figure f-2 into the tree
below.
 



figure f-6: an example of disallowed transformation


 



"
p00734,Equal Total Scores,"
taro and hanako have numbers of cards in their hands.  
each of the cards has a score on it.
taro and hanako wish to make the total scores of their cards equal
by exchanging one card in one's hand with one card in the other's hand.
which of the cards should be exchanged with which?
 
note that they have to exchange their
cards even if they already have cards of the same total score.
 



"
p00735,Saturday Prime Factors,"
chief judge's log, stardate 48642.5.
we have decided to make a problem from elementary number theory.
the problem looks like finding all prime factors of a positive integer,
but it is not.
 
a positive integer whose remainder divided by 7 is either 1 or 6 is called
a 7n+{1,6} number.
but as it is hard to pronounce,
we shall call it a monday-saturday number.
 
for monday-saturday numbers a and b,
we say a is a monday-saturday divisor of b
if there exists a monday-saturday number x
such that ax = b.
it is easy to show that
for any monday-saturday numbers a and b,
it holds that a is
a monday-saturday divisor of b
if and only if
a is a divisor of b in the usual sense.
 
we call a monday-saturday number a monday-saturday prime
if it is greater than 1 and has no monday-saturday divisors
other than itself and 1.
a monday-saturday number which is a prime in the usual sense
is a monday-saturday prime
but the converse does not always hold.
for example, 27 is a monday-saturday prime
although it is not a prime in the usual sense.
we call a monday-saturday prime
which is a monday-saturday divisor of a monday-saturday number a
a monday-saturday prime factor of a.
for example, 27 is one of the monday-saturday prime factors of 216,
since 27 is a monday-saturday prime
and 216 = 27 &times; 8 holds.
 

any monday-saturday number greater than 1
can be expressed as a product of one or more monday-saturday primes.
the expression is not always unique
even if differences in order are ignored.
for example,

216 = 6 &times; 6 &times; 6 = 8 &times; 27

holds.

 
our contestants should write a program that outputs
all monday-saturday prime factors
of each input monday-saturday number.
 



"
p00736,How can I satisfy thee? Let me count the ways...,"
three-valued logic is a logic system that has, in addition to ""true"" and 
""false"", ""unknown"" as a valid value.  

in the following, logical values ""false"", ""unknown"" and ""true"" are 
represented by 0, 1 and 2 respectively. 
 
let ""-"" be a unary operator (i.e. a symbol representing one argument function) 
and let both ""*"" and ""+"" be binary operators (i.e. symbols representing 
two argument functions). 
these operators represent negation (not), conjunction (and) and 
disjunction (or) respectively. 
these operators in three-valued logic can be defined in table c-1.
 
let p, q and r be variables ranging over three-valued logic values. 
for a given formula, you are asked to answer the number of triples (p,q,r) 
that satisfy the formula, that is, those which make the value of the 
given formula 2. 
a formula is one of the following form (x and y represent formulas). 
 
note that conjunctions and disjunctions of two formulas are always 
parenthesized. 
 

for example, when formula (p*q) is given as an input, the value of 
this formula is 2 when and only when (p,q,r) is (2,2,0), (2,2,1) or (2,2,2). 
therefore, you should output 3. 

 


"
p00737,Twirling Robot,"
let's play a game using a robot on a rectangular board 
covered with a square mesh (figure d-1).
the robot is initially set at the start square in the northwest corner
facing the east direction.
the goal of this game is to lead the robot
to the goal square in the southeast corner.
 
the robot can execute the following five types of commands.

 ""straight"":
 keep the current direction of the robot, and move forward to the next square.
 ""right"":
 turn right with 90 degrees from the current direction, and move forward to the next square.
 ""back"":
 turn to the reverse direction, and move forward to the next square.
 ""left"":
 turn left with 90 degrees from the current direction, and move forward to the next square.
 ""halt"":
 stop at the current square to finish the game.

 
each square has one of these commands assigned as shown in figure d-2.
the robot executes the command assigned to the square where it resides,
unless the player gives another command to be executed instead.
each time the player gives an explicit command, 
the player has to pay the cost that depends on the command type.
 
the robot can visit the same square several times during a game.
the player loses the game when the robot goes out of the board
or it executes a ""halt"" command before arriving at the goal square.
 
your task is to write a program that calculates the minimum cost to lead the robot
from the start square to the goal one.
 




"
p00738,Ball,"
acm university holds its sports day in every july. the ""roll-a-big-ball"" 
is the highlight of the day.  in the game, players roll a ball
on a straight course drawn on the ground.  there are 
rectangular parallelepiped blocks on the ground as obstacles, which are fixed on the ground.
during the game, the ball may not collide with any blocks.
the bottom point of the ball may not leave the course. 
 
to have more fun, the university wants to use the largest possible ball
for the game.  you must
write a program that finds the largest radius of the ball that can reach
the goal without colliding any obstacle block.
 
the ball is a perfect sphere, and the ground is a plane.
each block is a rectangular parallelepiped.  the four edges of its bottom rectangle are on the ground, and parallel to either x- or y-axes. 
the course is given as a line segment from a start point to an end point.
the ball starts with its bottom point touching the start point, and goals when
its bottom point touches the end point.
 
the positions of the ball and a block can be like in figure e-1 (a) and (b).
 




figure e-1: possible positions of the ball and a block


 


"
p00739,ICPC: Intelligent Congruent Partition of Chocolate,"
the twins named tatsuya and kazuya love chocolate.
they have found a bar of their favorite chocolate in a very strange shape.
the chocolate bar looks to have been eaten partially by mam.
they, of course, claim to eat it and then 
will cut it into two pieces for their portions. 
since they want to be sure that the chocolate bar is fairly divided, 
they demand that the shapes of the two pieces are congruent
and that each piece is connected.
 
the chocolate bar consists of many square shaped blocks of chocolate
connected to the adjacent square blocks of chocolate at their edges.
the whole chocolate bar is also connected. 
 
cutting the chocolate bar along with some edges of square blocks, 
you should help them to divide it into two congruent and connected pieces of
chocolate.  that is, one piece fits into the other
after it is rotated, turned over and moved properly. 
 
for example, there is a partially eaten chocolate bar
with 18 square blocks of chocolate as depicted in figure f-1.
cutting it along with some edges of square blocks, 
you get two pieces of chocolate
with 9 square blocks each as depicted in figure f-2.
 
you get two congruent and connected pieces as the result. 
one of them consists of 9 square blocks hatched with horizontal lines 
and the other with vertical lines.
rotated clockwise with a right angle and turned over on a horizontal line,
the upper piece exactly fits into the lower piece.
 
two square blocks touching only at their corners
are regarded as they are not connected to each other.
figure f-3 is an example shape that cannot be partitioned into
two congruent and connected pieces.
note that, without the connectivity requirement,
this shape can be partitioned into two congruent pieces
with three squares (figure f-4).
 
your job is to write a program that judges whether a given bar 
of chocolate can be partitioned into such two 
congruent and connected pieces or not.
 




"
p00740,Next Mayor,"
one of the oddest traditions of the town of gameston may be that even
the town mayor of the next term is chosen according to the result of a game.
when the expiration of the term of the mayor approaches, at least
three candidates, including the mayor of the time, play a game of
pebbles, and the winner will be the next mayor.
 
the rule of the game of pebbles is as follows.
in what follows, n is the number of participating candidates.
 


requisites
a round table, a bowl, and plenty of pebbles.
start of the game


a number of pebbles are put into the bowl;
the number is decided by the administration commission using
some secret stochastic process.
all the candidates, numbered from 0 to n-1 sit around the round table, 
in a counterclockwise order.  initially, the bowl is handed to the 
serving mayor at the time, who is numbered 0.
game steps

when a candidate is handed the bowl and if any pebbles are in it,
one pebble is taken out of the bowl and is
kept, together with those already at hand, if any.
if no pebbles are left in the bowl, the candidate puts
all the kept pebbles, if any, into the bowl.  then, in either case, the bowl is
handed to the next candidate to the right.

this step is repeated until the winner is decided.
end of the game

when a candidate takes the last pebble in the bowl, and no other
candidates keep any pebbles, the game ends and that candidate with all
the pebbles is the winner.

 
a math teacher of gameston high, through his analysis, concluded that this game will always end within a finite number of steps, although the number of required steps can be very large.
 


"
p00741,How Many Islands?,"
you are given a marine area map that is a mesh of squares, each
representing either a land or sea area.
figure b-1 is an example of a map.
 



figure b-1: a marine area map 

 
you can walk from a square land area to another if they are horizontally,
vertically, or diagonally adjacent to each other on the map.
two areas are on the same island if and only if you can
walk from one to the other possibly through other land areas.
the marine area on the map is surrounded by the sea and therefore you
cannot go outside of the area on foot.
 
you are requested to write a program that reads the map and counts the
number of islands on it. 
for instance, the map in figure b-1 includes three islands.
 


"
p00742,Verbal Arithmetic,"
let's think about verbal arithmetic.
 
the material of this puzzle is a summation
of non-negative integers represented in a decimal format,
for example, as follows.
 
in verbal arithmetic, every digit appearing in the equation is masked with an alphabetic character.  a problem which has the above equation as one of its answers, for example, is the following.
 
solving this puzzle means finding possible digit assignments
to the alphabetic characters in the verbal equation.
 
the rules of this puzzle are the following.
 
each integer in the equation is expressed in terms of one or more
digits '0'-'9', but all the digits are masked with some alphabetic
characters 'a'-'z'.
 
the same alphabetic character appearing in multiple places 
of the equation masks the same digit.
moreover, all appearances of the same digit are masked with a single
alphabetic character.
that is, different alphabetic characters mean different digits.
 
the most significant digit must not be '0',
except when a zero is expressed as a single digit '0'.
that is, expressing numbers as ""00"" or ""0123"" is not permitted.
 
there are 4 different digit assignments for the verbal equation above
as shown in the following table.
 
your job is to write a program which solves this puzzle.
 



"
p00743,Discrete Speed,"
consider car trips in a country where there is no friction.
cars in this country do not have engines.
once a car started to move at a speed, it keeps moving at the same speed.
there are acceleration devices on some points on the road,
where a car can increase or decrease its speed by 1.
it can also keep its speed there.
your job in this problem is to write a program
which determines the route with the shortest time
to travel from a starting city to a goal city.
 
there are several cities in the country,
and a road network connecting them.
each city has an acceleration device.
as mentioned above, if a car arrives at a city at a speed v ,
it leaves the city at one of v - 1, v , or v + 1.
the first road leaving the starting city must be run at the speed 1.
similarly, the last road arriving at the goal city must be run at the speed 1.

 
the starting city and the goal city are given.
the problem is to find the best route which leads to the goal city
going through several cities on the road network.
when the car arrives at a city, it cannot immediately go back the road
it used to reach the city.  no u-turns are allowed.
except this constraint, one can choose any route on the road network.
it is allowed to visit the same city or use the same road multiple times.
the starting city and the goal city may be visited during the trip.
 
for each road on the network, its distance and speed limit are given.
a car must run a road at a speed less than or equal to its speed limit.
the time needed to run a road is the distance divided by the speed.
the time needed within cities including that for acceleration or deceleration should be ignored.  


"
p00744,Cards,"
there are many blue cards and red cards on the table.
for each card, an integer number greater than 1 is printed on its face.
the same number may be printed on several cards.

 
a blue card and a red card can be paired when both of the numbers
printed on them have a common divisor greater than 1.
there may be more than one red card that can be paired with one blue card.
also, there may be more than one blue card that can be paired with one red card.
when a blue card and a red card are chosen and paired,
these two cards are removed from the whole cards on the table.
 
for example, in figure e-1,
there are four blue cards and three red cards.
numbers 2, 6, 6 and 15 are printed on the faces of the four blue cards, 
and 2, 3 and 35 are printed on those of the three red cards.
here, you can make pairs of blue cards and red cards as follows.
first,
the blue card with number 2 on it and the red card with 2 are paired and removed.
second,
one of the two blue cards with 6 and the red card with 3 are paired and removed.
finally,
the blue card with 15 and the red card with 35 are paired and removed.
thus the number of removed pairs is three.
 
note that the total number of the pairs depends on
the way of choosing cards to be paired.
the blue card with 15 and the red card with 3 might be paired 
and removed at the beginning.
in this case, there are only one more pair that can be removed
and the total number of the removed pairs is two.
 
your job is to find the largest number of pairs that can be removed from the given set of cards on the table.
 


"
p00745,Tighten Up!,"
we have a flat panel with two holes.  pins are nailed on its
surface.  from the back of the panel, a string comes out through one
of the holes to the surface.  the string is then laid on the surface
in a form of a polygonal chain, and goes out to the panel's back through
the other hole.  initially, the string does not touch any pins.
 
figures f-1, f-2, and f-3 show three example layouts of holes, pins and
strings.  in each layout, white squares and circles denote holes and
pins, respectively.  a polygonal chain of solid segments denotes the
string.
 



figure f-1: an example layout of holes, pins and a string


 




figure f-2: an example layout of holes, pins and a string


 



figure f-3: an example layout of holes, pins and a string


 
when we tie a pair of equal weight stones to the both ends of the
string, the stones slowly straighten the string until there is no
loose part.  the string eventually forms a different polygonal chain as it is
obstructed by some of the pins.  (there are also cases when the
string is obstructed by no pins, though.)
 
the string does not hook itself while being straightened. a fully
tightened string thus draws a polygonal chain on the surface of the
panel, whose vertices are the positions of some pins with the end
vertices at the two holes. the layouts in figures f-1, f-2, and f-3 result in the
respective polygonal chains in figures f-4, f-5, and f-6. write a program that
calculates the length of the tightened polygonal chain.
 



figure f-4: tightened polygonal chains from the example in figure f-1.


 



figure f-5: tightened polygonal chains from the example in figure f-2.


 



figure f-6: tightened polygonal chains from the example in figure f-3.


 
note that the strings, pins and holes are thin enough so that you
can ignore their diameters.
 



"
p00746,Pablo Squarson's Headache,"pablo squarson is a well-known cubism artist.  this year's theme for pablo squarson is ""squares"".  today we are visiting his studio to see how his masterpieces are given birth. at the center of his studio, there is a huuuuuge table and beside it are many, many squares of the same size.  pablo squarson puts one of the squares on the table.  then he places some other squares on the table in sequence.  it seems his methodical nature forces him to place each square side by side to the one that he already placed on, with machine-like precision. oh!  the first piece of artwork is done.  pablo squarson seems satisfied with it.  look at his happy face. oh, what's wrong with pablo?  he is tearing his hair!  oh, i see.  he wants to find a box that fits the new piece of work but he has trouble figuring out its size.  let's help him! your mission is to write a program that takes instructions that record how pablo made a piece of his artwork and computes its width and height.  it is known that the size of each square is 1.  you may assume that pablo does not put a square on another. i hear someone murmured ""a smaller box will do"".  no, poor pablo, shaking his head, is grumbling ""my square style does not seem to be understood by illiterates"". 




 


"
p00747,Amazing Mazes,"
you are requested to solve maze problems.  without passing through
these mazes, you might not be able to pass through the domestic 
contest!
 
a maze here is a rectangular area of a number of squares, lined up
both lengthwise and widthwise, the area is surrounded by walls except
for its entry and exit.  the entry to the maze is at the leftmost part
of the upper side of the rectangular area, that is, the upper side of
the uppermost leftmost square of the maze is open.  the exit is
located at the rightmost part of the lower side, likewise.
 
in the maze, you can move from a square to one of the squares
adjoining either horizontally or vertically.  adjoining squares,
however, may be separated by a wall, and when they are, you cannot go
through the wall.
 
your task is to find the length of the shortest path from the entry to
the exit.  note that there may be more than one shortest paths, or
there may be none.
 





"
p00748,Pollock's conjecture,"
the nth triangular number is
defined as
the sum of the first n positive integers.
the nth tetrahedral number is
defined as
the sum of the first n triangular numbers.
it is easy to show that
the nth tetrahedral number is equal to
n(n+1)(n+2)&thinsp;&frasl;&thinsp;6.
for example,
the 5th tetrahedral number is
1+(1+2)+(1+2+3)+(1+2+3+4)+(1+2+3+4+5)
= 5&times;6&times;7&thinsp;&frasl;&thinsp;6
= 35.
 
in 1850,
sir frederick pollock, 1st baronet,
who was not a professional mathematician
but a british lawyer and tory (currently known as conservative) politician,
conjectured
that every positive integer can be represented
as the sum of at most five tetrahedral numbers.
here,
a tetrahedral number may occur in the sum more than once
and,
in such a case, each occurrence is counted separately.
the conjecture has been open for more than one and a half century.
 
your mission is to write a program
to verify pollock's conjecture for individual integers.
your program should make a calculation of
the least number of tetrahedral numbers
to represent each input integer as their sum.
in addition,
for some unknown reason,
your program should make a similar calculation
with only odd tetrahedral numbers available.
 
for example,
one can represent 40 as the sum of 2 tetrahedral numbers,
4&times;5&times;6&thinsp;&frasl;&thinsp;6 + 4&times;5&times;6&thinsp;&frasl;&thinsp;6,
but 40 itself is not a tetrahedral number.
one can represent 40 as the sum of 6 odd tetrahedral numbers,
5&times;6&times;7&thinsp;&frasl;&thinsp;6 + 1&times;2&times;3&thinsp;&frasl;&thinsp;6 + 1&times;2&times;3&thinsp;&frasl;&thinsp;6 + 1&times;2&times;3&thinsp;&frasl;&thinsp;6 + 1&times;2&times;3&thinsp;&frasl;&thinsp;6 + 1&times;2&times;3&thinsp;&frasl;&thinsp;6,
but cannot represent as the sum of fewer odd tetrahedral numbers.
thus, your program should report 2 and 6 if 40 is given.
 




"
p00749,Off Balance,"
you are working for an administration office of the international
center for picassonian cubism (icpc), which plans to build a new art
gallery for young artists.  the center is organizing an architectural
design competition to find the best design for the new building.
 submitted designs will look like a screenshot of a well known
game as shown below. 




 this is because the center specifies that 
the building should be constructed by stacking regular units
called pieces, each of which consists of four cubic blocks.
in addition, the center requires the competitors to submit designs
that satisfy the following restrictions.
 the building has a flat shape.
  this is because the construction site
  is a narrow area located between a
  straight moat and an expressway where 
  no more than one block can be placed 
   between the moat and the
expressway as illustrated below.




 it will take many days to fully check stability of designs as it requires 
complicated structural calculation.
therefore, you are
asked to quickly check obviously unstable designs by focusing on 
centers of masses.  the rules of your quick check are as follows.  assume the center of mass of a block is located at the center of the
block, and all blocks have the same weight.  
we denote a location of a block by xy-coordinates of its
left-bottom corner.  the unit length is the edge length of a block.
  
among the blocks of the piece that touch another piece or the ground on their
bottom faces, let xl be the leftmost x-coordinate of 
the leftmost block, and let xr be the rightmost
x-coordinate of the rightmost block.
let the x-coordinate of its accumulated center of mass of
the piece be m, where the accumulated center of mass of a piece p
is the center of the mass of the pieces that are directly and indirectly 
supported by p, in addition to p itself.  then the piece is
stable, if and only if
xl &lt; m &lt; xr.  otherwise, it is
unstable.  a design of a building is unstable if any of its pieces is unstable.
 
note that the above rules could  judge some designs to be unstable even 
if it would not collapse in reality.  for example, the left one of the
following designs shall be judged to be unstable.
 also note that the rules judge boundary cases to be unstable.  for example, the top piece in the above right design has its center of mass exactly above the right end of the bottom piece.  this shall be judged to be unstable.
 
write a program that judges stability of each design based on the above quick check rules.
 






"
p00750,The Most Powerful Spell,"
long long ago, there lived a wizard who invented a lot of ""magical patterns.""
in a room where one of his magical patterns is drawn on the floor,
anyone can use magic by casting magic spells!
the set of spells usable in the room depends on the drawn magical pattern.
your task is to compute, for each given magical pattern,
the most powerful spell enabled by the pattern.
 
a spell is a string of lowercase letters.
among the spells, lexicographically earlier one is more powerful.
note that a string w is defined to be lexicographically earlier than a string u
when w has smaller letter
in the order a&lt;b&lt;...&lt;z on the first position at which they differ,
or w is a prefix of u.
for instance, ""abcd"" is earlier than ""abe"" because 'c' &lt; 'e',
and ""abe"" is earlier than ""abef"" because the former is a prefix of the latter.
 
a magical pattern is a diagram consisting of uniquely numbered nodes 
and arrows connecting them.
each arrow is associated with its label, a lowercase string.
there are two special nodes in a pattern, called the star node
and the gold node.
a spell becomes usable by a magical pattern if and only if the spell emerges
as a sequential concatenation of the labels of a path from the star to the gold along the arrows.
 
the next figure shows an example of a pattern with four nodes and
seven arrows.
 
the node 0 is the star node and 2 is the gold node.
one example of the spells that become usable by this magical pattern is ""abracadabra"",
because it appears in the path
 
&nbsp;&nbsp;&nbsp;&nbsp;
 0 --""abra""--&gt; 1 --""cada""--&gt; 3 --""bra""--&gt; 2.
 
another example is ""oilcadabraketdadabra"",  obtained from the path
 
&nbsp;&nbsp;&nbsp;&nbsp;
 0 --""oil""--&gt; 1 --""cada""--&gt; 3 --""bra""--&gt; 2 --""ket""--&gt; 3 --""da""--&gt; 3 --""da""--&gt; 3 --""bra""--&gt; 2.
 
the spell ""abracadabra"" is more powerful than ""oilcadabraketdadabra""
because it is lexicographically earlier.
in fact, no other spell enabled by the magical pattern is more powerful than ""abracadabra"".
thus ""abracadabra"" is the answer you have to compute.
 
when you cannot determine the most powerful spell, please answer ""no"".
there are two such cases.
one is the case when no path exists from the star node to the gold node.
the other case is when for every usable spell there always exist more powerful spells.
the situation is exemplified in the following figure:
""ab"" is more powerful than ""b"", and ""aab"" is more powerful than ""ab"", and so on.
for any spell, by prepending ""a"", we obtain a lexicographically earlier
 (hence more powerful) spell.
 







"
p00751,Old Memories,"
in 4272 a.d., master of programming literature, dr. isaac cornell panther-carol,
who has miraculously survived through the three world computer virus wars and reached 90 years old this year,
won a nobel prize for literature.
media reported every detail of his life.
however, there was one thing they could not report &mdash; that is, an essay written by him when he was an elementary school boy.
although he had a copy and was happy to let them see it, 
the biggest problem was that his copy of the essay was infected by a computer virus several times during the world computer virus war iii
and therefore the computer virus could have altered the text.
 
further investigation showed that his copy was altered indeed. why could we know that?
more than 80 years ago his classmates transferred the original essay to their brain before infection.
with the advent of solid state brain, one can now retain a text perfectly over centuries once it is transferred to his or her brain.
no one could remember the entire text due to the limited capacity,
but we managed to retrieve a part of the text from the brain of one of his classmates; sadly, it did not match perfectly to the copy at hand.
it would not have happened without virus infection.
 
at the moment, what we know about the computer virus is that each time the virus infects an essay it does one of the following:
 the virus inserts one random character to a random position in the text. (e.g., ""abcd"" &rarr; ""abczd"") the virus picks up one character in the text randomly, and then changes it into another character. (e.g., ""abcd"" &rarr; ""abxd"") the virus picks up one character in the text randomly, and then removes it from the text. (e.g., ""abcd"" &rarr; ""acd"") 
you also know the maximum number of times the computer virus infected the copy, because you could deduce it from the amount of the intrusion log.
fortunately, most of his classmates seemed to remember at least one part of the essay (we call it a piece hereafter).
considering all evidences together, the original essay might be reconstructed.
you, as a journalist and computer scientist, would like to reconstruct the original essay by writing a computer program to calculate the possible original text(s) that fits to the given pieces and the altered copy at hand.

 




"
p00752,Laser Beam Reflections,"
a laser beam generator, a target object and some mirrors are 
placed on a plane.
the mirrors stand upright on the plane,
and both sides of the mirrors are flat and can reflect beams.
to point the beam at the target,
you may set the beam to several directions because of different reflections.
your job is to find the shortest beam path
from the generator to the target and answer the length of the path.
 
figure g-1 shows examples of possible beam paths,
where the bold line represents the shortest one.
 





figure g-1: examples of possible paths




"
p00753,Chebyshev's Theorem,"
if n is a positive integer,
there exists at least one prime number greater than n and less than or equal to 2n.
this fact is known as chebyshev's theorem or the bertrand-chebyshev theorem,
which had been conjectured by joseph louis fran&ccedil;ois bertrand (1822&ndash;1900)
and was proven by pafnuty lvovich chebyshev (&#x041f;&#x0430;&#x0444;&#x043d;&#x0443;&#x0442&#x0438;&#x0439; &#x041b;&#x044c;&#x0432;&#x043e;&#x0432;&#x0438;&#x0447; &#x0427;&#x0435;&#x0431;&#x044b;&#x0448;&#x0451;&#x0432;, 1821&ndash;1894) in 1850.
srinivasa aiyangar ramanujan (1887&ndash;1920) gave an elementary proof in his paper published in 1919.
paul erd&#337;s (1913&ndash;1996) discovered another elementary proof in 1932.
 
for example, there exist 4 prime numbers greater than 10 and less than or equal to 20, i.e. 11, 13, 17 and 19.
there exist 3 prime numbers greater than 14 and less than or equal to 28, i.e. 17, 19 and 23.
 
your mission is to write a program that counts the prime numbers greater than n and less than or equal to 2n for each given positive integer n.
using such a program, you can verify chebyshev's theorem for individual positive integers.
 




"
p00754,The Balance of the World,"
the world should be finely balanced.  positive vs. negative,
light vs. shadow, and left vs. right brackets.
your mission is to write a program that judges whether a string is balanced
with respect to brackets so that we can observe the balance of the
world.
 for every left round bracket (&ldquo;(&rdquo;), there is a corresponding
    right round bracket (&ldquo;)&rdquo;) in the following part of the string. for every left square bracket (&ldquo;[&rdquo;), there is a corresponding
    right square bracket (&ldquo;]&rdquo;) in the following part of the string. for every right bracket, there is a left bracket corresponding to it. correspondences of brackets have to be one to one, that is, a
    single bracket never corresponds to two or more brackets. for every pair of corresponding left and right brackets,
    the substring between them is balanced. 

 



"
p00755,Identically Colored Panels Connection,"
dr. fukuoka has invented fancy panels.

each panel has a square shape of a unit size and 
has one of the six colors, namely, yellow, pink, red, purple, green and blue.

the panel has two remarkable properties.

one property is that, when two or more panels with the same color
are placed adjacently, their touching edges melt a little
and they are fused each other.
the fused panels are united into a polygonally shaped panel.


the other property is that the color of a panel can be changed 
to one of six colors by giving an electrical shock.
the resulting color can be controlled by its waveform.
the electrical shock to an already united panel changes
the color of the whole to a specified single color.
 
since he wants to investigate the strength with respect to the
color and the size of a united panel compared to unit panels,
he tries to unite panels into a polygonal panel with a specified color.
 
since many panels are simultaneously synthesized and generated on a base plate 
through some complex chemical processes,
the fabricated panels are randomly colored and
they are arranged in a rectangular shape on the base plate  (figure c-1).

note that the two purple (color 4) panels in figure c-1 are
already united at the initial state since they are 
adjacent to each other.
 
installing  electrodes to a panel, and
changing its color several times by giving electrical shocks
according to an appropriate sequence for a specified target color,
he can make a united panel merge the adjacent panels 
to unite them step by step
and can obtain a larger panel with the target color.

unfortunately, panels will be broken when
they are struck by the sixth electrical shock.

that is, he can change the color of a panel or a united panel only 
five times.
 
let us consider a case
where the panel at the upper left corner of the panel configuration
(figure c-1) is attached with the electrodes.
first, changing the color of the panel from yellow to blue,
the two adjacent panels are fused into a united panel (figure c-2).
 






figure c-2: 
change of the color of the panel at the upper left corner,
from yellow (color 1) to blue (color 6).



 
second, changing the color of the upper left united panel from blue
to red, a united red panel that consists of three unit panels is newly formed
(figure c-3).
then, changing the color of the united panel from red to purple,
panels are united again to form a united panel of five unit panels
(figure c-4).
 






figure c-3: 
change of the color of the panel at the upper left corner,
from blue (color 6) to red (color 3).




 






figure c-4: 
change of the color of the panel at the upper left corner,
from red (color 3) to purple (color 4).




 
furthermore, through making a pink united panel in figure c-5 by
changing the color from purple to pink, 
then, the green united panel in figure c-6 is obtained
by changing the color from pink to green.
the green united panel consists of ten unit panels.
 






figure c-5: 
change of the color of the panel at the upper left corner, 
from  purple (color 4) to pink (color 2).



 






figure c-6: 
change of the color of the panel at the upper left corner,
from pink (color 2) to green (color 5).




 
in order to check the strength of united panels with 
various sizes and colors, he needs to unite as many panels
as possible with the target color.

your job is to write a program that finds a sequence to change 
the colors five times 
in order to get the largest united panel with the target color.

note that the electrodes are fixed to the panel at the upper left corner.
 





"
p00756,And Then. How Many Are There?,"
to mr. solitarius, who is a famous solo play game creator, a new idea
occurs like every day.
his new game requires discs of various colors and sizes.
 
to start with, all the discs are randomly scattered around the
center of a table.
during the play, you can remove a pair of discs of the same color if
neither of them has any discs on top of it.
note that a disc is not considered to be on top of another when they
are externally tangent to each other.
 
for example, in figure d-1, you can only remove the two black
discs first and then their removal makes it possible to remove the two
white ones.
in contrast, gray ones never become removable.
 
you are requested to write a computer program that, for given colors,
sizes, and initial placings of discs, calculates the maximum number of discs
that can be removed. 
 





"
p00757,Planning Rolling Blackouts,"faced with seriously tight power supply-demand balance, the
electric power company for which you are working implemented rolling
    blackouts in this spring.  it divided the servicing area into several
groups of towns, and divided a day into several blackout periods.  at
each blackout period of a day, one of the groups, which alternates
from one group to another, is cut off the electricity.  by keeping the total demand of
electricity used by the rest of the towns within the supply
capacity, the company avoided unforeseeable large-scale blackout. working at the customer relations department, you had to listen to
so many complaints from the customers, which made you think that you
could have a better implementation.  most of the complaints are about the
frequent cut-offs.  but you could have divided the area into a larger number of
groups, which resulted in less frequent cut-offs for each group.  the
other complaints are about the complicated grouping (in fact, someone
said that the shapes of the groups are fractals), which makes it
impossible to understand which town belongs to which group without
closely inspecting into the grouping list publicized by the company.
with the rectangular servicing area and towns located in a grid form,
you could have made a simpler grouping.

 
when you talked your analysis directly to the president of the company, you are
appointed to plan rolling blackouts for this summer.  be careful what
you propose.  anyway, you need to divide the servicing area into
as many groups as possible with keeping total demand of electricity
within the supply capacity.  it should also divide the towns into
simple and easy to remember groups.
 
your task is to write a program, given a demand table (a table showing
electricity demand of each town) and the supply capacity, that answers
a grouping of towns that satisfy the following conditions.
 the grouping should be made by horizontally or vertically splitting
    the area in a recursive manner.  in other words, the grouping must
    be a set of areas after applied the following splitting
    procedure to a set containing only the entire area for zero or
    more times:
    (the splitting procedure) remove one area from the set,
      either vertically or horizontally split it into two sub-areas,
      and put the sub-areas into the set.
<!--
      replace one area in the set with two sub-areas that are
      obtained by splitting it either vertically or horizontally.

      pick one area and split it either vertically or horizontally.
-->
    
<!--
    in other words, the groups are formed by repeatedly 
    split an area either vertically or horizontally into two areas.
-->
     the maximum suppressed demand of the grouping, which is the greatest total demand of the
    all but one group, is no more than the supply capacity. the grouping has the largest number of groups among the groupings
    that satisfy the above conditions 1 and 2. the grouping has the greatest amount of reserve power among the
  groupings that satisfy the above conditions 1, 2 and 3, where the
  reserve power of a grouping is the difference between the supply
  capacity and the maximum suppressed demand. note that the condition 1 does not allow such a grouping shown in figure e-1. 



  

figure e-1: a grouping that violates the condition 1






"
p00758,Watchdog Corporation,"
in northern kyushu, you are running a company
which rents watchdogs in response to the customers' order.
the distinguishing point of your service is that you also
install fences to enhance the performance of watchdogs.
 
the dog is put on a leash, which is tied up to a peg.
you are installing fences at the
border of the dog's reach, so that strangers approaching the
fence are taken care of by your dog.
 
there may be a rectangular building near the dog; the dog cannot
enter the building, but can go around it as long as the length of
the leash permits, as in figure f-1.  you do not need fences along the
building's wall.
 figure f-1: example fence layouts (some parts of the fences are omitted.) 
given the length of the leash and the position and the size of the
building, your program should calculate the length of the fence.
 




"
p00759,A Broken Door,"
there is a rectangular maze consisting of a number of square rooms
arranged in grid. the maze is surrounded by
walls except for its entry and exit.  the entry to the maze is at the
leftmost part of the upper side of the rectangular area, that is, the
upper side of the uppermost leftmost room of the maze is open. the
exit is located at the rightmost part of the lower side, likewise.
 
there is a wall between each pair of vertically or horizontally adjacent rooms. such a wall has either
a door with a card key lock, or no door at all. if you insert a card
to a door, the door opens and you can pass the door. the opened door
will close immediately, and the inserted card won't return. you can
open any door with any card. you cannot go
through a wall that has no door.
 
when a maze map is given, you can easily determine how many cards are
needed to pass through the maze from the entry to the exit. in the
maze in figure g-1, you can pass through it with ten cards,
following the path represented by the green arrows () in figure g-2.
  
now, you are informed that one of the doors is broken and can't be
passed. but you don't know which door is broken. if you insert a card
to a broken door, the inserted card immediately returns. however,
you can't tell a broken door from a working door just by its
appearance.
 
if the door marked with a red x () in figure g-3 is broken, you have no way to pass through
the maze from the entry to the exit. however, you can pass the maze in
figure g-1 whichever door is broken. when you intend to follow the
shortest path in figure g-2, and find that the door marked with a red x in figure g-4 is broken, you
might follow the path represented as green arrows. in this case, you
need twenty cards.
 
however, you can pass through the maze with less cards.  you should
follow the path in figure g-5, until you find the broken door.
the path is not the shortest path because it needs twelve
cards at least. after you've found a broken door on the path, you
should follow the shortest path to the exit that doesn't use the broken
door. with this strategy, you can pass the maze with sixteen cards
whichever door is broken.  figure g-6 shows one of the worst cases of
this strategy; it needs sixteen cards.
 
you are requested to write a program that prints the minimum number of
cards to pass the maze whichever door is broken.
 



"
p00760,Millennium,"
a wise king declared a new calendar. ""tomorrow shall be the first day of the calendar, that is, the day 1 of the month 1 of the year 1.  each year consists of 10 months, from month 1 through month 10, and starts from a big month.  a common year shall start with a big month, followed by small months and big months one after another.  therefore the first month is a big month, the second month is a small month, the third a big month, ..., and the 10th and last month a small one.  a big month consists of 20 days and a small month consists of 19 days.  however years which are multiples of three, that are year 3, year 6, year 9, and so on, shall consist of 10 big months and no small month."" many years have passed since the calendar started to be used.  for celebration of the millennium day (the year 1000, month 1, day 1), a royal lottery is going to be organized to send gifts to those who have lived as many days as the number chosen by the lottery.  write a program that helps people calculate the number of days since their birthdate to the millennium day.
 





"
p00761,Recurring Decimals,"
a decimal representation of an integer can be transformed to another integer by rearranging the order of digits.
let us make a sequence using this fact.
  express the integer ai in decimal notation with l digits. leading zeros are added if necessary. for example, the decimal notation with six digits of the number 2012 is 002012.
    rearranging the digits, find the largest possible integer and the smallest possible integer;
    in the example above, the largest possible integer is 221000 and the smallest is 000122 = 122.
    a new integer ai+1 is obtained by subtracting the smallest possible integer from the largest.
    in the example above, we obtain 220878 subtracting 122 from 221000.
   

 
when you repeat this calculation, you will get a sequence of integers 
a0 , 
a1 , 
a2 , ... .
 
for example, starting with the integer 83268 and with the number of digits 6,
you will get the following sequence of integers
a0 , 
a1 , 
a2 , ... .
 
because the number of digits to express integers is fixed, 
you will encounter occurrences of the same integer in the sequence
a0 , 
a1 , 
a2 , ...
eventually.

therefore you can always find a pair of i&nbsp; and j&nbsp; 
that satisfies the condition ai = aj &nbsp;
(i&nbsp; &gt; j&nbsp; ).
in the example above, the pair (i&nbsp;= 8, j&nbsp;= 1) satisfies the condition because a8 = a1 = 862632.
 
write a program that,
given an initial integer a0 and a number of digits l,
finds the smallest i that satisfies the condition ai = aj  &nbsp; (i&nbsp; &gt; j&nbsp; ).

 




"
p00762,Biased Dice,"
professor random, known for his research on randomized algorithms, is now conducting an experiment on biased dice.  his experiment consists of dropping a number of dice onto a plane, one after another from a fixed position above the plane.  the dice fall onto the plane or dice already there, without rotating, and may roll and fall according to their property.  then he observes and records the status of the stack formed on the plane, specifically, how many times each number appears on the faces visible from above. all the dice have the same size and their face numbering is identical, which we show in figure c-1.
 figure c-1: numbering of a die 
the dice have very special properties, as in the following.
 
(1) ordinary dice can roll in four directions, but the dice used in this experiment never roll in the directions of faces 1, 2 and 3; they can only roll in the directions of faces 4, 5 and 6.  in the situation shown in figure c-2, our die can only roll to one of two directions.
 figure c-2: an ordinary die and a biased die 
(2) the die can only roll when it will fall down after rolling, as shown in figure c-3.  when multiple possibilities exist, the die rolls towards the face with the largest number among those directions it can roll to.
 figure c-3: a die can roll only when it can fall 
(3) when a die rolls, it rolls exactly 90 degrees, and then falls straight down until its bottom face touches another die or the plane, as in the case [b] or [c] of figure c-4.
 
(4) after rolling and falling, the die repeatedly does so according to the rules (1) to (3) above.
 figure c-4: example stacking of biased dice 
for example, when we drop four dice all in the same orientation, 6 at the top and 4 at the front, then a stack will be formed as shown in figure c-4.
 figure c-5: example records 
after forming the stack, we count the numbers of faces with 1 through 6 visible from above and record them.  for example, in the left case of figure c-5, the record will be ""0 2 1 0 0 0"", and in the right case, ""0 1 1 0 0 1"".
 



"
p00763,Railway Connection,"
tokyo has a very complex railway system.
for example, there exists a partial map of lines and stations
as shown in figure d-1.
 
suppose you are going to station d from station a.
obviously, the path with the shortest distance is a&rarr;b&rarr;d.
however, the path with the shortest distance does not necessarily
mean the minimum cost.
assume the lines a-b, b-c, and c-d are operated by one railway company,
and the line b-d is operated by another company.
in this case, the path a&rarr;b&rarr;c&rarr;d may cost less than a&rarr;b&rarr;d.
one of the reasons is that the fare is not proportional to the distance.
usually, the longer the distance is, the fare per unit distance is lower.
if one uses lines of more than one railway company,
the fares charged by these companies are simply added together,
and consequently the total cost may become higher although the distance is shorter
than the path using lines of only one company.
 
in this problem, a railway network including multiple railway companies is given.
the fare table (the rule to calculate the fare from the distance) of each company is also given.
your task is, given the starting point and the goal point, to write a program
that computes the path with the least total fare.
 




"
p00764,Confined Path,"
there is a chain consisting of multiple circles on a plane.
the first (last) circle of the chain only intersects with the next (previous) circle,
and each intermediate circle intersects only with the two neighboring circles.
 the path connects the centers of the first circle and the last circle. the path is confined in the chain, that is, all the points on the path are located within or on at least one of the circles. 

figure e-1 shows an example of such a chain and the corresponding shortest path.
 





figure e-1: an  example chain and the corresponding shortest path





"
p00765,Generic Poker,"
you have a deck of n &times; m cards. each card in the deck has a rank. the range of ranks is 1 through m, and the deck includes n cards of each rank.
 
we denote a card with rank m by m here.
 
you can draw a hand of l cards at random from the deck.
if the hand matches the given pattern,
some bonus will be rewarded.
a pattern is described as follows.
 

 hand_pattern
 

a hand matches the hand_pattern if each card_pattern in the hand_pattern matches with a distinct card in the hand.

 card_pattern
 

if the card_pattern is an asterisk ('*'), it matches any card. 
characters 'a', 'b', and 'c' denote variables and all the occurrences of the same variable match cards of the same rank.
a card_pattern with a variable followed by plus ('+')
characters matches a card whose rank is the sum of the rank corresponding to the variable
and the number of plus characters.

you can assume that, when a hand_pattern includes a card_pattern with
a variable followed by some number of plus characters, it also
includes card_patterns with that variable and all smaller numbers (including zero) of plus characters.
for example, if 'a+++' appears in a hand_pattern, card_patterns 'a',
'a+', and 'a++' also appear in the hand_pattern.


 
there is no restriction on which ranks different variables mean.
for example, 'a' and 'b' may or may not match cards of the same rank.
 
we show some example hand_patterns. the pattern

a * b a b 

matches the hand:

3 3 10 10 9

with 'a's and 'b's meaning 3 and 10 (or 10 and 3),
respectively. this pattern also matches the following hand.

3 3 3 3 9

in this case, both 'a's and 'b's mean 3.  the pattern

a a+ a++ a+++ a++++

matches the following hand.

4 5 6 7 8

in this case, 'a' should mean 4. 
 
your mission is to write a program that computes the probability that
a hand randomly drawn from the deck matches the given hand_pattern.
 




"
p00766,Patisserie ACM,"
amber claes maes, a patissier,  opened her own shop last month.
she decided to submit her work to the international chocolate
patissier competition to promote her shop, and she
was pursuing a recipe of sweet chocolate bars.
after thousands of trials, she finally reached the recipe.
however, the recipe required high skill levels to form chocolate to
an orderly rectangular shape.
sadly, she has just made another strange-shaped chocolate bar as shown in
figure g-1.
 figure g-1: a strange-shaped chocolate bar the bar must be cut along grooves. the bar must be cut into rectangular pieces. the bar must be cut into as few pieces as possible. 

following the rules, figure g-2 can be an instance of cutting of
the chocolate bar shown in figure g-1.  figures g-3 and g-4
do not meet the rules; figure g-3 has
a non-rectangular piece, and figure g-4 has more pieces
than figure g-2.
 figure g-2: an instance of cutting that follows the rules figure g-3: an instance of cutting that leaves a non-rectangular piece figure g-4: an instance of cutting that yields more pieces than figure g-2 
your job is to write a program that computes the number of pieces
of chocolate after cutting according to the rules.
 



"
p00767,Integral Rectangles,"
let us consider rectangles whose height, h, and
width, w, are both integers. we call such rectangles 
integral rectangles. in this problem, we consider only wide
integral rectangles, i.e., those with w &gt; h.
 
we define the following ordering of wide integral rectangles. given
two wide integral rectangles,
 
the one shorter in its diagonal line is smaller, and
 
if the two have diagonal lines with the same length, the one shorter
 in its height is smaller.
 
given a wide integral rectangle, find the smallest wide integral
rectangle bigger than the given one.
 


"
p00768,ICPC Ranking,"
your mission in this problem is to write a program
which, given the submission log of an icpc (international collegiate programming contest),
determines team rankings.
 
the log is a sequence of records of program submission
in the order of submission.
a record has four fields: elapsed time, team number,
problem number, and judgment.
the elapsed time is the time elapsed from the beginning of the contest
to the submission.
the judgment field tells whether the submitted program was
correct or incorrect, and when incorrect,
what kind of an error was found.
 
the team ranking is determined according to the following rules.
note that the rule set shown here is one used in the real icpc world finals and regionals,
with some detail rules omitted for simplification.
 
teams that solved more problems are ranked higher.
 
among teams that solve the same number of problems, 
ones with smaller total consumed time are ranked higher.

 
if two or more teams solved the same number of problems, and their
total consumed times are the same, they are ranked the same.
 
the total consumed time is the sum of the consumed time for each problem solved.
the consumed time for a solved problem is the elapsed time 
of the accepted submission plus 20 penalty minutes for every previously rejected submission for that problem.
 
if a team did not solve a problem, the consumed time for the problem is zero, and thus even if there are several incorrect submissions, no penalty is given.
 
you can assume that a team never submits a program for a problem
after the correct submission for the same problem.
 

"
p00769,Hierarchical Democracy,"
the presidential election in republic of democratia is carried out through multiple stages as follows.
 there are exactly two presidential candidates. at the first stage, eligible voters go to the polls of his/her electoral district.
the winner of the district is the candidate who takes a majority of the votes.
voters cast their ballots only at this first stage. a district of the k-th stage (k &gt; 1) consists of multiple districts of the (k &minus; 1)-th stage. in contrast, a district of the (k &minus; 1)-th stage is a sub-district of one and only one district of the k-th stage. the winner of a district of the k-th stage is the candidate who wins in a majority of its sub-districts of the (k &minus; 1)-th stage. the final stage has just one nation-wide district. the winner of the final stage is chosen as the president. 
you can assume the following about the presidential election of this country.
 every eligible voter casts a vote. the number of the eligible voters of each electoral district of the first stage is odd. the number of the sub-districts of the (k &minus; 1)-th stage that constitute a district of the k-th stage (k &gt; 1) is also odd. 
this means that each district of every stage has its winner (there is no tie). 
 
your mission is to write a program that finds a way to win the presidential election with the minimum number of votes.
suppose, for instance, that the district of the final stage has three sub-districts of the first stage and that the numbers of the eligible voters of the sub-districts are 123, 4567, and 89, respectively.
the minimum number of votes required to be the winner is 107, that is, 62 from the first district and 45 from the third.
in this case, even if the other candidate were given all the 4567 votes in the second district, s/he would inevitably be the loser. 
although you might consider this election system unfair, you should accept it as a reality.
 


"
p00770,Prime Caves,"
an international expedition discovered abandoned buddhist cave temples
in a giant cliff standing on the middle of a desert.  there were many
small caves dug into halfway down the vertical cliff, which were
aligned on square grids.  the archaeologists in the expedition were
excited by buddha's statues in those caves.  more excitingly, there
were scrolls of buddhism sutras (holy books) hidden in some of the caves.  those
scrolls, which estimated to be written more than
thousand years ago, were of immeasurable value.
 
the leader of the expedition wanted to collect as many scrolls as
possible.  however, it was not easy to get into the caves as they were
located in the middle of the cliff.  the only way to enter a cave was to
hang you from a helicopter.  once entered and explored a cave, you can
climb down to one of the three caves under your cave; i.e., either the
cave directly below your cave, the caves one left or right to the cave
directly below your cave.  this can be repeated for as many times as
you want, and then you can descent down to the ground by using a long rope.
 
so you can explore several caves in one attempt.  but which caves
you should visit?  by examining the results of the preliminary
attempts, a mathematician member of the expedition discovered
that (1) the caves can be numbered from the central one, spiraling
out as shown in figure d-1; and (2) only those caves with their cave
numbers being prime (let's call such caves prime caves),
which are circled in the figure, store scrolls.  from the next
attempt, you would be able to maximize the number of prime caves to
explore.
 
write a program, given the total number of the caves and the cave visited first, that finds the descending route containing the maximum number of prime caves.
 


"
p00771,Anchored Balloon,"
a balloon placed on the ground is connected to one or more anchors on the ground with ropes.
each rope is long enough to connect the balloon and the anchor.
no two ropes cross each other.
figure e-1 shows such a situation.
 
now the balloon takes off, and your task is to find how high 
the balloon can go up with keeping the rope connections.
the positions of the anchors are fixed.
the lengths of the ropes and the positions of the anchors are given.
you may assume that these ropes have no weight and
thus can be straightened up when pulled to
whichever directions.
figure e-2 shows the highest position of the balloon for
the situation shown in figure e-1.
 




figure e-2: the highest position of the balloon



"
p00772,Rotate and Rewrite,"
two sequences of integers
a: a1 a2 ... an and
b: b1 b2 ... bm and
a set of rewriting rules of the form
""x1 x2 ... xk &rarr; y""
are given.
the following transformations on each of the sequences are allowed
an arbitrary number of times in an arbitrary order independently.
 
rotate:
  moving the first element of a sequence to the last.
  that is, transforming a sequence c1 c2 ... cp
  to c2 ... cp c1.
 
rewrite:
  with a rewriting rule
  ""x1 x2 ... xk &rarr; y"",
  transforming a sequence
  c1 c2 ... ci x1 x2 ... xk d1 d2 ... dj
  to
c1 c2 ... ci y d1 d2 ... dj.
 	
your task is to determine whether it is possible to transform the two sequences a and b into the same sequence.
if possible, compute the length of the longest of the sequences after such a transformation.
 



"
p00773,Tax Rate Changed,"
    vat (value-added tax) is a tax imposed at a certain rate proportional to the sale price.
   
    our store uses the following rules to calculate the after-tax prices.
     
	when the vat rate is x%,
	for an item with the before-tax price of p yen,
	its after-tax price of the item is p&nbsp;(100+x)&nbsp;/&nbsp;100 yen, fractions rounded off.
       
	the total after-tax price of multiple items paid at once is
	the sum of after-tax prices of the items.
       
    the vat rate is changed quite often.
    our accountant has become aware that
    ""different pairs of items that had the same total after-tax price
    may have different total after-tax prices after vat rate changes.""
    for example, when the vat rate rises from 5% to 8%,
    a pair of items that had the total after-tax prices of 105 yen before
    can now have after-tax prices either of 107, 108, or 109 yen, as shown in the table below.
   
    our accountant is examining effects of vat-rate changes on after-tax prices.
    you are asked to write a program that calculates the possible maximum
    total after-tax price of two items with the new vat rate,
    knowing their total after-tax price before the vat rate change.
   


"
p00774,Chain Disappearance Puzzle,"
we are playing a puzzle.
an upright board with h rows by 5 columns of cells, as shown in 
the figure below, is used in this puzzle.
a stone engraved with a digit, one of 1 through 9, is placed in each of 
the cells.
when three or more stones in horizontally adjacent cells are engraved 
with the same digit, the stones will disappear.
if there are stones in the cells above the cell with a disappeared 
stone, the stones in the above cells will drop down, filling the 
vacancy.
 
the puzzle proceeds taking the following steps.
 when three or more stones in horizontally adjacent cells are 
engraved with the same digit, the stones will disappear. disappearances 
of all such groups of stones take place simultaneously. when stones are in the cells above the emptied cells, these stones drop down so that the emptied cells are filled.  after the completion of all stone drops, if one or more groups of 
stones satisfy the disappearance condition, repeat by returning to the 
step 1. 
the score of this puzzle is the sum of the digits on the disappeared stones.
 
write a program that calculates the score of given configurations of stones.
 



	




"
p00775,Vampire,"
mr. c is a vampire. if he is exposed to the sunlight directly, he turns 
into ash.
nevertheless, last night, he attended to the meeting of immortal and 
corpse programmers
circle, and he has to go home in the near dawn.
fortunately, there are many tall buildings around mr. c's home, and 
while the sunlight is blocked by the buildings, he can move around 
safely.
the top end of the sun has just reached the horizon now.
in how many seconds does mr. c have to go into his safe coffin?
 
to simplify the problem, we represent the eastern dawn sky as a 2-dimensional
x-y plane, where the x axis is horizontal and the y axis
is vertical, and approximate building silhouettes by rectangles
and the sun by a circle on this plane.
 
the x axis represents the horizon.
we denote the time by t, and the current time is t=0.
the radius of the sun is r and
its center is at (0, -r) when the time t=0.
the sun moves on the x-y plane in a uniform linear motion at
a constant velocity of (0, 1) per second.
 
the sunlight is blocked if and only if the entire region of the sun 
(including its edge) is included in the union of the silhouettes 
(including their edges) and the region below the horizon (y &#8804; 0).
 
write a program that computes the time of the last moment when the sunlight is blocked.
 
the following figure shows the layout of silhouettes and the position of the sun at
the last moment when the sunlight is blocked, that corresponds to the
first dataset of sample input below. as this figure indicates, there are possibilities
that the last moment when the sunlight is blocked can be the time t=0.
 
the sunlight is blocked even when two silhouettes share parts of their edges.

the following figure shows the layout of silhouettes and the position of the sun at the
last moment when the sunlight is blocked, corresponding to the second
dataset of sample input.
in this dataset the radius of the sun is 2 and there are two silhouettes:
the one with height 4 is in -2 &#8804; x &#8804; 0, and
the other with height 3 is in 0 &#8804; x &#8804; 2.
 








"
p00776,Encryption System,"
a programmer developed a new encryption system.
however, his system has an issue that
two or more distinct strings are `encrypted' to the same string.
 
we have a string encrypted by his system. 
to decode the original string, we want to enumerate all the candidates of the string before the encryption.
your mission is to write a program for this task.
 
the encryption is performed taking the following steps. given a string that consists only of lowercase letters ('a' to 'z').
 change the first 'b' to 'a'. if there is no 'b', do nothing. change the first 'c' to 'b'. if there is no 'c', do nothing. 
...
change the first 'z' to 'y'. if there is no 'z', do nothing. 


"
p00777,Bridge Removal,"
icpc islands once had been a popular tourist destination.
for nature preservation, however, the government decided to prohibit entrance to the islands,
and to remove all the man-made structures there.
the hardest part of the project is to remove all the bridges connecting the islands.
 
there are n islands and n-1 bridges.
the bridges are built so that all the islands are reachable from all the other islands by
crossing one or more bridges.
the bridge removal team can choose any island as the starting point, and can repeat either of the
following steps.
 move to another island by crossing a bridge that is connected to the current island. remove one bridge that is connected to the current island, and stay at the same island after the removal. 
of course, a bridge, once removed, cannot be crossed in either direction.
crossing or removing a bridge both takes time proportional to the length of the bridge.
your task is to compute the shortest time necessary for removing all the bridges.
note that the island where the team starts can differ from where the team finishes the work.
 

"
p00778,A Die Maker,"
the work of die makers starts early in the morning.
 
you are a die maker.
you receive orders from customers, and make various kinds of dice every day.
today, you received an order of a cubic die with six numbers
t1, t2, ..., t6 on whichever faces.
 
for making the ordered die, you use a tool of flat-board shape.
you initially have a die with a zero on each face.
if you rotate the die by 90 degrees on the tool towards one of northward, southward, eastward, and southward,
the number on the face that newly touches the tool is increased by one.
by rotating the die towards appropriate directions repeatedly,
you may obtain the ordered die.
 
the final numbers on the faces of the die
is determined by the sequence of directions towards which you rotate the die.
we call the string that represents the sequence of directions an operation sequence.
formally, we define operation sequences as follows.
an operation sequence consists of n characters, where n is the number of rotations made.
if you rotate the die eastward in the i-th rotation,
the i-th character of the operation sequence is e.
similarly, if you rotate it westward, it is w,
if southward, it is s, otherwise,
if northward, it is n.
for example, the operation sequence nws represents
the sequence of three rotations, northward first, westward next,
and finally southward.
 
given six integers of the customer's order,
compute an operation sequence that makes a die to order.
if there are two or more possibilities, you should compute the earliest operation sequence in dictionary order.
 


"
p00779,Don't Cross the Circles!,"
there are one or more circles on a plane.
any two circles have different center positions and/or different radiuses.
a circle may intersect with another circle,
but no three or more circles have areas nor points shared by all of them.
a circle may completely contain another circle or two circles may intersect at two separate points,
but you can assume that the circumferences of two circles never
touch at a single point.
 
your task is to judge
whether there exists a path that connects the given two points, p and q,
without crossing the circumferences of the circles.
you are given one or more point pairs for each layout of circles.
 
in the case of figure g-1,
we can connect p and q1 without crossing the circumferences of the circles, but we cannot connect p with q2, q3, or q4 without crossing the circumferences of the circles.
 figure g-1: sample layout of circles and points 





"
p00780,Goldbach's Conjecture,"
goldbach's conjecture: for any even number n greater than or equal to 4, there exists at least one pair of prime numbers p1 and p2 such that n = p1 + p2.
 
this conjecture has not been proved nor refused yet. no one is sure whether this conjecture actually holds. however, one can find such a pair of prime numbers, if any, for a given even number. the problem here is to write a program that reports the number of all the pairs of prime numbers satisfying the condition in the conjecture for a given even number.
 
a sequence of even numbers is given as input. corresponding to each number, the program should output the number of pairs mentioned above. notice that we are intereseted in the number of essentially different pairs and therefore you should not count (p1, p2) and (p2, p1) separately as two different pairs.
 

"
p00781,Lattice Practices,"
once upon a time, there was a king who loved beautiful costumes very much. the king had a special cocoon bed to make excellent cloth of silk. the cocoon bed had 16 small square rooms, forming a 4 &times; 4 lattice, for 16 silkworms. the cocoon bed can be depicted as follows:
 
the cocoon bed can be divided into 10 rectangular boards, each of which has 5 slits:
 
note that, except for the slit depth, there is no difference between the left side and the right side of the board (or, between the front and the back); thus, we cannot distinguish a symmetric board from its rotated image as is shown in the following:
 
slits have two kinds of depth, either shallow or deep. the cocoon bed should be constructed by fitting five of the boards vertically and the others horizontally, matching a shallow slit with a deep slit.
 
your job is to write a program that calculates the number of possible configurations to make the lattice. you may assume that there is no pair of identical boards. notice that we are interested in the number of essentially different configurations and therefore you should not count mirror image configurations and rotated configurations separately as different configurations.
 
the following is an example of mirror image and rotated configurations, showing vertical and horizontal boards separately, where shallow and deep slits are denoted by '1' and '0' respectively.
 
notice that a rotation may exchange position of a vertical board and a horizontal board.
 

"
p00782,Mobile Phone Coverage,"
a mobile phone company acmicpc (advanced cellular, mobile, and internet-connected phone corporation) is planning to set up a collection of antennas for mobile phones in a city called maxnorm. the company acmicpc has several collections for locations of antennas as their candidate plans, and now they want to know which collection is the best choice.
 
for this purpose, they want to develop a computer program to find the coverage of a collection of antenna locations. each antenna ai has power ri, corresponding to ""radius"". usually, the coverage region of the antenna may be modeled as a disk centered at the location of the antenna (xi, yi) with radius ri. however, in this city maxnorm such a coverage region becomes the square [xi &minus; ri, xi + ri] &times; [yi &minus; ri, yi + ri]. in other words, the distance between two points (xp, yp) and (xq, yq) is measured by the max norm max{ |xp &minus; xq|, |yp &minus; yq|}, or, the l&infin; norm, in this city maxnorm instead of the ordinary euclidean norm &radic; {(xp &minus; xq)2 + (yp &minus; yq)2}.
 
as an example, consider the following collection of 3 antennas
 depicted in the following figure 
where the i-th row represents xi, yi ri such that (xi, yi) is the position of the i-th antenna and ri is its power. the area of regions of points covered by at least one antenna is 52.00 in this case.
 
write a program that finds the area of coverage by a given collection of antenna locations.
 


"
p00783,Napoleon's Grumble,"
legend has it that, after being defeated in waterloo, napoleon bonaparte, in retrospect of his days of glory, talked to himself ""able was i ere i saw elba."" although, it is quite doubtful that he should have said this in english, this phrase is widely known as a typical palindrome.
 
a palindrome is a symmetric character sequence that looks the same when read backwards, right to left. in the above napoleon's grumble, white spaces appear at the same positions when read backwards. this is not a required condition for a palindrome. the following, ignoring spaces and punctuation marks, are known as the first conversation and the first palindromes by human beings.
 
write a program that finds palindromes in input lines.
 

"
p00784,Pipeline Scheduling,"
an arithmetic pipeline is designed to process more than one task simultaneously in an overlapping manner. it includes function units and data paths among them. tasks are processed by pipelining: at each clock, one or more units are dedicated to a task and the output produced for the task at the clock is cascading to the units that are responsible for the next stage; since each unit may work in parallel with the others at any clock, more than one task may be being processed at a time by a single pipeline.
 
in this problem, a pipeline may have a feedback structure, that is, data paths among function units may have directed loops as shown in the next figure.
 
since an arithmetic pipeline in this problem is designed as special purpose dedicated hardware, we assume that it accepts just a single sort of task. therefore, the timing information of a pipeline is fully described by a simple table called a reservation table, which specifies the function units that are busy at each clock when a task is processed without overlapping execution.
 
in reservation tables, 'x' means ""the function unit is busy at that clock"" and '.' means ""the function unit is not busy at that clock."" in this case, once a task enters the pipeline, it is processed by unit0 at the first clock, by unit1 at the second clock, and so on. it takes seven clock cycles to perform a task.
 
notice that no special hardware is provided to avoid simultaneous use of the same function unit.
 
therefore, a task must not be started if it would conflict with any tasks being processed. for instance, with the above reservation table, if two tasks, say task 0 and task 1, were started at clock 0 and clock 1, respectively, a conflict would occur on unit0 at clock 5. this means that you should not start two tasks with single cycle interval. this invalid schedule is depicted in the following process table, which is obtained by overlapping two copies of the reservation table with one being shifted to the right by 1 clock.
 
('0's and '1's in this table except those in the first row represent tasks 0 and 1, respectively, and 'c' means the conflict.)
 
your job is to write a program that reports the minimum number of clock cycles in which the given pipeline can process 10 tasks.
 

"
p00785,Triangle Partition,"
suppose that a triangle and a number of points inside the triangle are given. your job is to find a partition of the triangle so that the set of the given points are divided into three subsets of equal size.
 
let a, b and c denote the vertices of the triangle. there are n points, p1, p2, ... , pn, given inside &#8710;abc. you are requested to find a point q such that each of the three triangles &#8710;qbc, &#8710qca and &#8710qab contains at least n/3 points. points on the boundary line are counted in both triangles. for example, a point on the line qa is counted in &#8710qca and also in &#8710qab. if q coincides a point, the point is counted in all three triangles.
 
it can be proved that there always exists a point q satisfying the above condition. the problem will be easily understood from the figure below.
 





"
p00786,BUT We Need a Diagram,"
consider a data structure called but (binary and/or unary tree). a but is defined inductively as follows:
 let l be a letter of the english alphabet, either lowercase or uppercase (n the sequel, we say simply ""a letter""). then, the object that consists only of l, designating l as its label, is a but. in this case, it is called a 0-ary but. let l be a letter and c a but. then, the object that consists of l and c, designating l as its label and c as its component, is a but. in this case, it is called a unary but. let l be a letter, l and r buts. then, the object that consists of l, l and r, designating l as its label, l as its left component, and r as its right component, is a but. in this case, it is called a binary but. 
a but can be represented by a expression in the following way.
 when a but b is 0-ary, its representation is the letter of its label. when a but b is unary, its representation is the letter of its label followed by the parenthesized representation of its component. when a but b is binary, its representation is the letter of its label, a left parenthesis, the representation of its left component, a comma, the representation of its right component, and a right parenthesis, arranged in this order. 
here are examples:
 
such an expression is concise, but a diagram is much more appealing to our eyes. we prefer a diagram:
 
to the expression a(b(c(d),e),f(g(h,i)))
 when b is 0-ary, d consists only of a letter of its label. the letter is called the root of d, and also called the leaf of d l is just below s the root of c is just above s 
  
l is called the root of d, and the leaves of c are called the leaves of d.
 s is contiguous, and is in a line. l is just below the central minus symbol of s, where, if the center of s locates on a minus symbol s, s is the central, and if the center of s locates between adjacent minus symbols, the left one of them is the central. the root of l is just above the left most minus symbols of s, and the rot of r is just above the rightmost minus symbol of s in any line of d, l and r do not touch or overlap each other. no minus symbols are just above the leaves of l and r. 
  
l is called the root of d, and the leaves of l and r are called the leaves of d
 


"
p00787,Digital Racing Circuil,"
you have an ideally small racing car on an x-y plane (0 &le; x, y &le; 255, where bigger y denotes upper coordinate). the racing circuit course is figured by two solid walls. each wall is a closed loop of connected line segments. end point coordinates of every line segment are both integers (see figure 1). thus, a wall is represented by a list of end point integer coordinates (x1, y1), (x2, y2), ...,(xn, yn). the start line and the goal line are identical.
 
for the qualification run, you start the car at any integer coordinate position on the start line, say (sx, sy).
 
at any clock t (&ge; 0), according to the acceleration parameter at t, (ax,t, ay,t), the velocity changes instantly to (vx,t-1 + ax,t, vy,t-1 + ay,t), if the velocity at t - 1 is (vx,t-1, vy,t-1). the velocity will be kept constant until the next clock. it is assumed that the velocity at clock -1, (vx,-1, vy,-1) is (0, 0). each of the acceleration components must be either -1, 0, or 1, because your car does not have so fantastic engine and brake. in other words, any successive pair of velocities should not differ more than 1 for either x-component or y-component. note that your trajectory will be piecewise linear as the walls are.
 
your car should not touch nor run over the circuit wall, or your car will be crashed, even at the start line. the referee watches your car's trajectory very carefully, checking whether or not the trajectory touches the wall or attempts to cross the wall.
 
the objective of the qualification run is to finish your run within as few clock units as possible, without suffering from any interference by other racing cars. that is, you run alone the circuit around clockwise and reach, namely touch or go across the goal line without having been crashed. don't be crashed even in the last trajectory segment after you reach the goal line. but we don't care whatever happens after that clock
 
your final lap time is the clock t when you reach the goal line for the first time after you have once left the start line. but it needs a little adjustment at the goal instant. when you cross the goal line, only the necessary fraction of your car's last trajectory segment is counted. for example, if the length of your final trajectory segment is 3 and only its 1/3 fraction is needed to reach the goal line, you have to add only 0.333 instead of 1 clock unit.
 
drivers are requested to control their cars as cleverly as possible to run fast but avoiding crash. alas! the racing committee decided that it is too dangerous to allow novices to run the circuit. in the last year, it was reported that some novices wrenched their fingers by typing too enthusiastically their programs. so, this year, you are invited as a referee assistant in order to accumulate the experience on this dangerous car race.
 
a number of experienced drivers are now running the circuit for the qualification for semi-finals. they submit their driving records to the referee. the referee has to check the records one by one whether it is not a fake.
 
now, you are requested to make a program to check the validity of driving records for any given course configuration. is the start point right on the start line without touching the walls? is every value in the acceleration parameter list either one of -1, 0, and 1? does the length of acceleration parameter list match the reported lap time? that is, aren't there any excess acceleration parameters after the goal, or are these enough to reach the goal? doesn't it involve any crash? does it mean a clockwise running all around? (note that it is not inhibited to run backward temporarily unless crossing the start line again.) is the lap time calculation correct? you should allow a rounding error up to 0.01 clock unit in the lap time.
 

"
p00788,Rational Irrationals,"
rational numbers are numbers represented by ratios of two integers. for a prime number p, one of the elementary theorems in the number theory is that there is no rational number equal to &radic;p. such numbers are called irrational numbers. it is also known that there are rational numbers arbitrarily close to &radic;p
 
now, given a positive integer n, we define a set qn of all rational numbers whose elements are represented by ratios of two positive integers both of which are less than or equal to n. for example, q4 is a set of 11 rational numbers {1/1, 1/2, 1/3, 1/4, 2/1, 2/3, 3/1, 3/2, 3/4, 4/1, 4/3}. 2/2, 2/4, 3/3, 4/2 and 4/4 are not included here because they are equal to 1/1, 1/2, 1/1, 2/1 and 1/1, respectively.
 
your job is to write a program that reads two integers p and n and reports two rational numbers x / y and u / v, where u / v &lt; &radic;p &lt; x / y and there are no other elements of qn between u/v and x/y. when n is greater than &radic;p, such a pair of rational numbers always exists.
 

"
p00789,Square Coins,"
people in silverland use square coins. not only they have square shapes but also their values are square numbers. coins with values of all square numbers up to 289 (= 172), i.e., 1-credit coins, 4-credit coins, 9-credit coins, ..., and 289-credit coins, are available in silverland.
 
there are four combinations of coins to pay ten credits:
 ten 1-credit coins, one 4-credit coin and six 1-credit coins, two 4-credit coins and two 1-credit coins, and one 9-credit coin and one 1-credit coin. 
your mission is to count the number of ways to pay a given amount using coins of silverland.
 


"
p00790,Die Game,"
life is not easy. sometimes it is beyond your control. now, as contestants of acm icpc, you might be just tasting the bitter of life. but don't worry! do not look only on the dark side of life, but look also on the bright side. life may be an enjoyable game of chance, like throwing dice. do or die! then, at last, you might be able to find the route to victory.
 
this problem comes from a game using a die. by the way, do you know a die? it has nothing to do with ""death."" a die is a cubic object with six faces, each of which represents a different number from one to six and is marked with the corresponding number of spots. since it is usually used in pair, ""a die"" is rarely used word. you might have heard a famous phrase ""the die is cast,"" though.
 
when a game starts, a die stands still on a flat table. during the game, the die is tumbled in all directions by the dealer. you will win the game if you can predict the number seen on the top face at the time when the die stops tumbling.
 
now you are requested to write a program that simulates the rolling of a die. for simplicity, we assume that the die neither slip nor jumps but just rolls on the table in four directions, that is, north, east, south, and west. at the beginning of every game, the dealer puts the die at the center of the table and adjusts its direction so that the numbers one, two, and three are seen on the top, north, and west faces, respectively. for the other three faces, we do not explicitly specify anything but tell you the golden rule: the sum of the numbers on any pair of opposite faces is always seven.
 
your program should accept a sequence of commands, each of which is either ""north"", ""east"", ""south"", or ""west"". a ""north"" command tumbles the die down to north, that is, the top face becomes the new north, the north becomes the new bottom, and so on. more precisely, the die is rotated around its north bottom edge to the north direction and the rotation angle is 9 degrees. other commands also tumble the die accordingly to their own directions. your program should calculate the number finally shown on the top after performing the commands in the sequence. note that the table is sufficiently large and the die never falls off during the game.
 
"
p00791,Trapezoids,"
if you are a computer user, you should have seen pictures drawn with ascii characters. such a picture may not look as good as gif or postscript pictures, but is much easier to handle. ascii pictures can easily be drawn using text editors, and can convey graphical information using only text-based media. program s extracting information from such pictures may be useful.
 
we are interested in simple pictures of trapezoids, consisting only of asterisk('*') characters and blank spaces. a trapezoid (trapezium in the queen's english) is a four-side polygon where at least one pair of its sides is parallel. furthermore, the picture in this problem satisfies the following conditions.
 all the asterisks in the picture belong to sides of some trapezoid. two sides of a trapezoid are horizontal and the other two are vertical or incline 45 degrees. every side is more than 2 characters long. two distinct trapezoids do not share any asterisk characters. sides of two trapezoids do not touch. that is, asterisks of one trapezoid do not appear in eight neighbors of asterisks of a different trapezoid. for example, the following arrangements never appear. 
some trapezoids may appear inside others. for example, the following is a valid picture.
 
your task is to recognize trapezoids in the picture and to calculate the area of each trapezoid. the area of a trapezoid is the number of characters on or inside its four sides, including the areas of the trapezoids inside it, if any.
 

"
p00792,Mirror Illusion,"
a rich man has a square room with mirrors for security or just for fun. each side of the room is eight meters wide. the floor, the ceiling and the walls are not special; however, the room can be equipped with a lot of mirrors on the walls or as vertical partitions.
 
every mirror is one meter wide, as tall as the wall, double-side, perfectly reflective, and ultimately thin.
 
poles to fix mirrors are located at the corners of the room, on the walls and inside the room. their locations are the 81 lattice points at intervals of one meter. a mirror can be fixed between two poles which are one meter distant from each other. if we use the sign ""+"" to represent a pole, the overview of the room can be illustrated as follows.
 
let us denote a location on the floor by (x,y) in a rectangular coordinate system. for example, the rectangular coordinates of the four corners of the room are (0,0), (8,0), (0,8) and (8,8), respectively. the location (x,y) is in the room if and only if the conditions 0 &le; x &le; 8 and 0 &le; y &le; 8 are satisfied. if i and j are integers satisfying the conditions 0 &le; i &le; 8 and 0 &le; j &le; 8, we can denote by (i,j) the locations of poles.
 
one day a thief intruded into this room possibly by breaking the ceiling. he stood at (0.75,0.25) and looked almost toward the center of the room. precisely speaking, he looked toward the point (1, 0.5) of the same height as his eyes. so what did he see in the center of his sight? he would have seen one of the walls or himself as follows.
 if there existed no mirror, he saw the wall at (8, 7.5) if there existed one mirror between two poles at (8, 7) and (8, 8), he saw the wall at (7.5, 8). (let us denote the line between these two poles by (8, 7)-(8, 8).) if there were four mirrors on (8, 7)-(8, 8), (7, 8)-(8, 8), (0, 0)-(0, 1) and (0, 0)-(1, 0), he saw himself at (0.75, 0.25). if there were four mirrors on (2, 1)-(2, 2), (1, 2)-(2, 2), (0, 0)-(0, 1) and (0, 0)-(1, 0), he saw himself at (0.75, 0.25) 
your job is to write a program that reports the location at which the thief saw one of the walls or himself with the given mirror arrangements.
 

"
p00793,Heavenly Jewels,"
there is a flat island whose shape is a perfect square. on this island, there are three habitants whose names are ic, pc, and acm every day, one jewel is dropped from the heaven. just as the jewel touches the ground, ic, pc, and acm leave their houses simultaneously, run with the same speed, and then a person who first touched the jewel can get the jewel. hence, the person whose house is nearest to the location of the jewel is the winner of that day.
 
they always have a quarrel with each other, and therefore their houses are located at distinct places. the locations of their houses are fixed. this jewel falls at a random point on the island, that is, all points on the island have even chance.
 
when three are two or more persons whose houses are simultaneously nearest, the last person in the order of
 
ic, pc, acm
 
obtains the jewel.
 
our interest is to know the probability for ic to get the jewel under this situation.
 

"
p00794,Walking Ant,"
ants are quite diligent. they sometimes build their nests beneath flagstones.
 
here, an ant is walking in a rectangular area tiled with square flagstones, seeking the only hole leading to her nest.
 
the ant takes exactly one second to move from one flagstone to another. that is, if the ant is on the flagstone with coordinates (x, y) at time t, she will be on one of the five flagstones with the following coordinates at time t + 1:
 
(x, y), (x + 1, y), (x - 1, y), (x, y + 1), (x, y - 1).
 
the ant cannot go out of the rectangular area. the ant can visit the same flagstone more than once.
 
insects are easy to starve. the ant has to go back to her nest without starving. physical strength of the ant is expressed by the unit ""hp"". initially, the ant has the strength of 6 hp. every second, she loses 1 hp. when the ant arrives at a flagstone with some food on it, she eats a small piece of the food there, and recovers her strength to the maximum value, i.e., 6 hp, without taking any time. the food is plenty enough, and she can eat it as many times as she wants.
 
when the ant's strength gets down to 0 hp, she dies and will not move anymore. if the ant's strength gets down to 0 hp at the moment she moves to a flagstone, she does not effectively reach the flagstone: even if some food is on it, she cannot eat it; even if the hole is on that stone, she has to die at the entrance of her home.
 
if there is a puddle on a flagstone, the ant cannot move there.
 
your job is to write a program which computes the minimum possible time for the ant to reach the hole with positive strength from her start position, if ever possible.
 

"
p00795,occurrence Search,"
a huge amount of information is being heaped on www. albeit it is not well-organized, users can browse www as an unbounded source of up-to-date information, instead of consulting established but a little out-of-date encyclopedia. however, you can further exploit www by learning more about keyword search algorithms.
 
for example, if you want to get information on recent comparison between windows and unix, you may expect to get relevant description out of a big bunch of web texts, by extracting texts that contain both keywords ""windows"" and ""unix"" close together.
 
here we have a simplified version of this co-occurrence keyword search problem, where the text and keywords are replaced by a string and key characters, respectively. a character string s of length n (1 &le; n &le; 1,000,000) and a set k of k distinct key characters a1, ..., ak (1 &le; k &le; 50) are given. find every shortest substring of s that contains all of the key characters a1, ..., ak. 
 

"
p00796,Lost in Space,"
william robinson was completely puzzled in the music room; he could not find his triangle in
his bag. he was sure that he had prepared it the night before. he remembered its clank when
he had stepped on the school bus early that morning. no, not in his dream. his triangle was
quite unique: no two sides had the same length, which made his favorite peculiar jingle. he
insisted to the music teacher, mr. smith, that his triangle had probably been stolen by those
aliens and thrown away into deep space.
 
your mission is to help will find his triangle in space. his triangle has been made invisible by the
aliens, but candidate positions of its vertices are somehow known. you have to tell which three
of them make his triangle. having gone through worm-holes, the triangle may have changed its
size. however, even in that case, all the sides are known to be enlarged or shrunk equally, that
is, the transformed triangle is similar to the original.

 

"
p00797,Family Tree,"
a professor of anthropology was interested in people living in isolated islands and their history.
he collected their family trees to conduct some anthropological experiment. for the experiment,
he needed to process the family trees with a computer. for that purpose he translated them
into text files. the following is an example of a text file representing a family tree.
 
each line contains the given name of a person. the name in the first line is the oldest ancestor
in this family tree. the family tree contains only the descendants of the oldest ancestor. their
husbands and wives are not shown in the family tree. the children of a person are indented
with one more space than the parent. for example, robert and nancy are the children of john,
and frank and andrew are the children of robert. david is indented with one more space than
robert, but he is not a child of robert, but of nancy. to represent a family tree in this way,
the professor excluded some people from the family trees so that no one had both parents in a
family tree.
 
for the experiment, the professor also collected documents of the families and extracted the
set of statements about relations of two persons in each family tree. the following are some
examples of statements about the family above.
 
for the experiment, he needs to check whether each statement is true or not. for example, the
first two statements above are true and the last statement is false. since this task is tedious, he
would like to check it by a computer program.
 

"
p00798,Push!!,"
mr. schwarz was a famous powerful pro wrestler. he starts a part time job as a warehouseman.
his task is to move a cargo to a goal by repeatedly pushing the cargo in the warehouse, of course,
without breaking the walls and the pillars of the warehouse.
 
there may be some pillars in the warehouse. except for the locations of the pillars, the floor of
the warehouse is paved with square tiles whose size fits with the cargo. each pillar occupies the
same area as a tile.
 
initially, the cargo is on the center of a tile. with one push, he can move the cargo onto the
center of an adjacent tile if he is in proper position. the tile onto which he will move the cargo
must be one of (at most) four tiles (i.e., east, west, north or south) adjacent to the tile where
the cargo is present.
 
to push, he must also be on the tile adjacent to the present tile. he can only push the cargo in
the same direction as he faces to it and he cannot pull it. so, when the cargo is on the tile next
to a wall (or a pillar), he can only move it along the wall (or the pillar). furthermore, once he
places it on a corner tile, he cannot move it anymore.
 
he can change his position, if there is a path to the position without obstacles (such as the cargo
and pillars) in the way. the goal is not an obstacle. in addition, he can move only in the four
directions (i.e., east, west, north or south) and change his direction only at the center of a tile.
 
as he is not so young, he wants to save his energy by keeping the number of required pushes
as small as possible. but he does not mind the count of his pedometer, because walking is very
light exercise for him.
 
your job is to write a program that outputs the minimum number of pushes required to move
the cargo to the goal, if ever possible.
 


"
p00799,Pump up Batteries,"
bill is a boss of security guards. he has pride in that his men put on wearable computers on their
duty. at the same time, it is his headache that capacities of commercially available batteries are
far too small to support those computers all day long. his men come back to the office to charge
up their batteries and spend idle time until its completion. bill has only one battery charger in
the office because it is very expensive.
 
bill suspects that his men spend much idle time waiting in a queue for the charger. if it is the
case, bill had better introduce another charger. bill knows that his men are honest in some
sense and blindly follow any given instructions or rules. such a simple-minded way of life may
lead to longer waiting time, but they cannot change their behavioral pattern.
 
each battery has a data sheet attached on it that indicates the best pattern of charging and
consuming cycle. the pattern is given as a sequence of pairs of consuming time and charging
time. the data sheet says the pattern should be followed cyclically to keep the battery in quality.
a guard, trying to follow the suggested cycle strictly, will come back to the office exactly when
the consuming time passes out, stay there until the battery has been charged for the exact time
period indicated, and then go back to his beat.
 
the guards are quite punctual. they spend not a second more in the office than the time
necessary for charging up their batteries. they will wait in a queue, however, if the charger is
occupied by another guard, exactly on first-come-first-served basis. when two or more guards
come back to the office at the same instance of time, they line up in the order of their identifi-
cation numbers, and, each of them, one by one in the order of that line, judges if he can use the
charger and, if not, goes into the queue. they do these actions in an instant.
 
your mission is to write a program that simulates those situations like bill’s and reports how
much time is wasted in waiting for the charger.
 

"
p00800,The Devil of Gravity,"
haven't you ever thought that programs written in java, c++, pascal, or any other modern computer languages look rather sparse? although most editors provide sufficient screen space for at least 80 characters or so in a line, the average number of significant characters occurring in a line is just a fraction. today, people usually prefer readability of programs to efficient use of screen real estate.
 
dr. faust, a radical computer scientist, believes that editors for real programmers shall be more space efficient. he has been doing research on saving space and invented various techniques for many years, but he has reached the point where no more essential improvements will be expected with his own ideas.
 
after long thought, he has finally decided to take the ultimate but forbidden approach. he does not hesitate to sacrifice anything for his ambition, and asks a devil to give him supernatural intellectual powers in exchange with his soul. with the transcendental knowledge and ability, the devil provides new algorithms and data structures for space efficient implementations of editors.
 
the editor implemented with those evil techniques is beyond human imaginations and behaves somehow strange. the mighty devil dr. faust asks happens to be the devil of gravity. the editor under its control saves space with magical magnetic and gravitational forces.
 
your mission is to defeat dr. faust by re-implementing this strange editor without any help of the devil. at first glance, the editor looks like an ordinary text editor. it presents texts in two-dimensional layouts and accepts editing commands including those of cursor movements and character insertions and deletions. a text handled by the devil's editor, however, is partitioned into text segments, each of which is a horizontal block of non-blank characters. in the following figure, for instance, four text segments ""abcdef"", ""ghijkl"", ""mnop"", ""qrstuvw"" are present and the first two are placed in the same row.
 
the editor has the following unique features.
  a text segment without any supporting segments in the row immediately below it falls by the evil gravitational force.  text segments in the same row and contiguous to each other are concatenated by the evil magnetic force. 
for instance, if characters in the segment ""mnop"" in the previous example are deleted, the two segments on top of it fall and we have the following.
 
after that, if ""x"" is added at the tail (i.e., the right next of the rightmost column) of the segment ""qrstuvw"", the two segments in the bottom row are concatenated.
 
now we have two text segments in this figure. by this way, the editor saves screen space but demands the users' extraordinary intellectual power.
 
in general, after a command execution, the following rules are applied, where s is a text segment, left(s) and right(s) are the leftmost and rightmost columns of s, respectively, and row(s) is the row number of s.
  if the columns from left(s) to right(s) in the row numbered row(s)-1 (i.e., the row just below s) are empty (i.e., any characters of any text segments do not exist there), s is pulled down to row(s)-1 vertically, preserving its column position. if the same ranges in row(s)-2, row(s)-3, and so on are also empty, s is further pulled down again and again. this process terminates sooner or later since the editor has the ultimate bottom, the row whose number is zero.  if two text segments s and t are in the same row and right(s)+1 = left(t), that is, t starts at the right next column of the rightmost character of s, s and t are automatically concatenated to form a single text segment, which starts at left(s) and ends at right(t). of course, the new segment is still in the original row. 
note that any text segment has at least one character. note also that the first rule is applied prior to any application of the second rule. this means that no concatenation may occur while falling segments exist. for instance, consider the following case.
 
if the last character of the text segment ""bbbb"" is deleted, the concatenation rule is not applied until the two segments ""cccccccc"" and ""dddddddd"" stop falling. this means that ""bbb"" and ""cccccccc"" are not concatenated.
 
the devil's editor has a cursor and it is always in a single text segment, which we call the current segment. the cursor is at some character position of the current segment or otherwise at its tail. note that the cursor cannot be a support. for instance, in the previous example, even if the cursor is at the last character of ""bbbb"" and it stays at the same position after the deletion, it cannot support ""cccccccc"" and ""dddddddd"" any more by solely itself and thus those two segments shall fall. finally, the cursor is at the leftmost ""d""
 
the editor accepts the following commands, each represented by a single character.
  f: move the cursor forward (i.e., to the right) by one column in the current segment. if the cursor is at the tail of the current segment and thus it cannot move any more within the segment, an error occurs.  b: move the cursor backward (i.e., to the left) by one column in the current segment. if the cursor is at the leftmost position of the current segment, an error occurs.  p: move the cursor upward by one row. the column position of the cursor does not change. if the new position would be out of the legal cursor range of any existing text segment, an error occurs.  n: move the cursor downward by one row. the column position of the cursor does not change. if the cursor is in the bottom row or the new position is out of the legal cursor range of any existing text segment, an error occurs.  d: delete the character at the cursor position. if the cursor is at the tail of the current segment and so no character is there, an error occurs. if the cursor is at some character, it is deleted and the current segment becomes shorter by one character. neither the beginning (i.e., leftmost) column of the current segment nor the column position of the cursor changes. however, if the current segment becomes empty, it is removed and the cursor falls by one row. if the new position would be out of the legal cursor range of any existing text segment, an error occurs.

      note that after executing this command, some text segments may lose their supports and be pulled down toward the hell. if the current segment falls, the cursor also falls with it.  c: create a new segment of length one immediately above the current cursor position. it consists of a copy of the character under the cursor. if the cursor is at the tail, an error occurs. also if the the position of the new segment is already occupied by another segment, an error occurs. after executing the command, the created segment becomes the new current segment and the column position of the cursor advances to the right by one column.  lowercase and numeric characters (`a' to `z' and `0' to `9'): insert the character at the current cursor position. the current segment becomes longer by one character. the cursor moves forward by one column. the beginning column of the current segment does not change. 
once an error occurs, the entire editing session terminates abnormally. 
 

"
p00801,Numoeba,"
a scientist discovered a strange variation of amoeba. the scientist named it numoeba. a numoeba, though it looks like an amoeba, is actually a community of cells, which always forms a tree.
 
the scientist called the cell leader that is at the root position of the tree. for example, in fig. 1, the leader is a. in a numoeba, its leader may change time to time. for example, if e gets new leadership, the tree in fig. 1 becomes one in fig. 2. we will use the terms root, leaf, parent, child and subtree for a numoeba as defined in the graph theory.
 
numoeba changes its physical structure at every biological clock by cell division and cell death. the leader may change depending on this physical change.
 
the most astonishing fact about the numoeba cell is that it contains an organic unit called numbosome, which represents an odd integer within the range from 1 to 12,345,677. at every biological clock, the value of a numbosome changes from n to a new value as follows:
  the maximum odd factor of 3n + 1 is calculated. this value can be obtained from 3n + 1 by repeating division by 2 while even.  if the resulting integer is greater than 12,345,678, then it is subtracted by 12,345,678. 
for example, if the numbosome value of a cell is 13, 13 &times; 3 + 1 = 40 is divided by 23 = 8 and a new numbosome value 5 is obtained. if the numbosome value of a cell is 11,111,111, it changes to 4,320,989, instead of 16,666,667. if 3n + 1 is a power of 2, yielding 1 as the result, it signifies the death of the cell as will be described below.
 
at every biological clock, the next numbosome value of every cell is calculated and the fate of the cell and thereby the fate of numoeba is determined according to the following steps.
  a cell that is a leaf and increases its numbosome value is designated as a candidate leaf.

      a cell dies if its numbosome value becomes 1. if the dying cell is the leader of the numoeba, the numoeba dies as a whole. otherwise, all the cells in the subtree from the dying cell (including itself) die. however, there is an exceptional case where the cells in the subtree do not necessarily die; if there is only one child cell of the dying non-leader cell, the child cell will replace the dying cell. thus, a straight chain simply shrinks if its non-leader constituent dies.

      for example, consider a numoeba with the leader a below. 






if the leader a dies in (1), the numoeba dies.
if the cell d dies in (1), (1) will be as follows. 





and, if the cell e dies in (1), (1) will be as follows.






      note that this procedure is executed sequentially, top-down from the root of the numoeba to leaves. if the cells e and f will die in (1), the death of f is not detected at the time the procedure examines the cell e. the numoeba, therefore, becomes (3). one should not consider in such a way that the death of f makes g the only child of e, and, therefore, g will replace the dying e.  if a candidate leaf survives with the numbosome value of n, it spawns a cell as its child, thereby a new leaf, whose numbosome value is the least odd integer greater than or equal to (n + 1)/2. we call the child leaf bonus.  finally, a new leader of the numoeba is selected, who has a unique maximum numbosome value among all the constituent cells. the tree structure of the numoeba is changed so that the new leader is its root, like what is shown in fig. 1 and fig. 2. note that the parent-child relationship of some cells may be reversed by this leader change. when a new leader of a unique maximum numbosome value, say m, is selected (it may be the same cell as the previous leader), it spawns a cell as its child with the numbosome whose value is the greatest odd integer less than or equal to (m + 1)/2. we call the child leader bonus. if there is more than one cell of the same maximum numbosome value, however, the leader does not change for the next period, and there is no leader bonus.
 
the following illustrates the growth and death of a numoeba starting from a single cell seed with the numbosome value 15, which plays both roles of the leader and a leaf at the start. in the figure, a cell is nicknamed with its numbosome value. note that the order of the children of a parent is irrelevant. 
 
the numoeba continues changing its structure, and at clock 104, it looks as follows.
 
here, two ambitious 2429's could not become the leader. the leader 5 will die without promoting these talented cells at the next clock. this alludes the fragility of a big organization.
 
and, the numoeba dies at clock 105.
 
your job is to write a program that outputs statistics about the life of numoebae that start from a single cell seed at clock zero. 
 

"
p00802,Telescope,"
dr. extreme experimentally made an extremely precise telescope to investigate extremely curi- ous phenomena at an extremely distant place. in order to make the telescope so precise as to investigate phenomena at such an extremely distant place, even quite a small distortion is not allowed. however, he forgot the influence of the internal gas affected by low-frequency vibration of magnetic flux passing through the telescope. the cylinder of the telescope is not affected by the low-frequency vibration, but the internal gas is.
 
the cross section of the telescope forms a perfect circle. if he forms a coil by putting extremely thin wire along the (inner) circumference, he can measure (the average vertical component of) the temporal variation of magnetic flux:such measurement would be useful to estimate the influence. but points on the circumference at which the wire can be fixed are limited; furthermore, the number of special clips to fix the wire is also limited. to obtain the highest sensitivity, he wishes to form a coil of a polygon shape with the largest area by stringing the wire among carefully selected points on the circumference.
 
your job is to write a program which reports the maximum area of all possible m-polygons (polygons with exactly m vertices) each of whose vertices is one of the n points given on a circumference with a radius of 1. an example of the case n = 4 and m = 3 is illustrated below. 
 
in the figure above, the equations such as ""p1 = 0.0"" indicate the locations of the n given points, and the decimals such as ""1.000000"" on m-polygons indicate the areas of m-polygons.
 
parameter pi denotes the location of the i-th given point on the circumference (1 &le; i &le; n). the location p of a point on the circumference is in the range 0 &le; p &lt; 1, corresponding to the range of rotation angles from 0 to 2&pi; radians. that is, the rotation angle of a point at p to the point at 0 equals 2&pi; radians. (&pi; is the circular constant 3.14159265358979323846....)
 
you may rely on the fact that the area of an isosceles triangle abc (ab = ac = 1) with an interior angle bac of &alpha; radians (0 &lt; &alpha; &lt; &pi;) is (1/2)sin&alpha;, and the area of a polygon inside a circle with a radius of 1 is less than &pi;.
 
"
p00803,maru,"
the surveyor starship hakodate-maru is famous for her two fuel containers with unbounded capacities. they hold the same type of atomic fuel balls.
 
there, however, is an inconvenience. the shapes of the fuel containers #1 and #2 are always cubic and regular tetrahedral respectively. both of the fuel containers should be either empty or filled according to their shapes. otherwise, the fuel balls become extremely unstable and may explode in the fuel containers. thus, the number of fuel balls for the container #1 should be a cubic number (n3 for some n = 0, 1, 2, 3,... ) and that for the container #2 should be a tetrahedral number ( n(n + 1)(n + 2)/6 for some n = 0, 1, 2, 3,... ).
 
hakodate-maru is now at the star base goryokaku preparing for the next mission to create a precise and detailed chart of stars and interstellar matters. both of the fuel containers are now empty. commander parus of goryokaku will soon send a message to captain future of hakodate-maru on how many fuel balls goryokaku can supply. captain future should quickly answer to commander parus on how many fuel balls she requests before her ship leaves goryokaku. of course, captain future and her omcers want as many fuel balls as possible.
 
for example, consider the case commander parus offers 151200 fuel balls. if only the fuel container #1 were available (i.e. ifthe fuel container #2 were unavailable), at most 148877 fuel balls could be put into the fuel container since 148877 = 53 &times; 53 &times; 53 &lt; 151200 &lt; 54 &times; 54 &times; 54 . if only the fuel container #2 were available, at most 147440 fuel balls could be put into the fuel container since 147440 = 95 &times; 96 &times; 97/6 &lt; 151200 &lt; 96 &times; 97 &times; 98/6 . using both of the fuel containers #1 and #2, 151200 fuel balls can be put into the fuel containers since 151200 = 39 &times; 39 &times; 39 + 81 &times; 82 &times; 83/6 . in this case, captain future's answer should be ""151200"".
 
commander parus's offer cannot be greater than 151200 because of the capacity of the fuel storages of goryokaku. captain future and her omcers know that well.
 
you are a fuel engineer assigned to hakodate-maru. your duty today is to help captain future with calculating the number of fuel balls she should request. 
 

"
p00804,market,"
the city of hakodate recently established a commodity exchange market. to participate in the market, each dealer transmits through the internet an order consisting of his or her name, the type of the order (buy or sell), the name of the commodity, and the quoted price.
 
in this market a deal can be made only if the price of a sell order is lower than or equal to the price of a buy order. the price of the deal is the mean of the prices of the buy and sell orders, where the mean price is rounded downward to the nearest integer. to exclude dishonest deals, no deal is made between a pair of sell and buy orders from the same dealer. the system of the market maintains the list of orders for which a deal has not been made and processes a new order in the following manner.
  for a new sell order, a deal is made with the buy order with the highest price in the list satisfying the conditions. if there is more than one buy order with the same price, the deal is made with the earliest of them.  for a new buy order, a deal is made with the sell order with the lowest price in the list satisfying the conditions. if there is more than one sell order with the same price, the deal is made with the earliest of them. 
the market opens at 7:00 and closes at 22:00 everyday. when the market closes, all the remaining orders are cancelled. to keep complete record of the market, the system of the market saves all the orders it received everyday.
 
the manager of the market asked the system administrator to make a program which reports the activity of the market. the report must contain two kinds of information. for each commodity the report must contain informationon the lowest, the average and the highest prices of successful deals. for each dealer, the report must contain information on the amounts the dealer paid and received for commodities. 
 

"
p00805,Fishnet,"
a fisherman named etadokah awoke in a very small island. he could see calm, beautiful and blue sea around the island. the previous night he had encountered a terrible storm and had reached this uninhabited island. some wrecks of his ship were spread around him. he found a square wood-frame and a long thread among the wrecks. he had to survive in this island until someone came and saved him.
 
in order to catch fish, he began to make a kind of fishnet by cutting the long thread into short threads and fixing them at pegs on the square wood-frame (figure 1). he wanted to know the sizes of the meshes of the fishnet to see whether he could catch small fish as well as large ones.
 
the wood-frame is perfectly square with four thin edges one meter long.. a bottom edge, a top edge, a left edge, and a right edge. there are n pegs on each edge, and thus there are 4n pegs in total. the positions ofpegs are represented by their (x, y)-coordinates. those of an example case with n = 2 are depicted in figures 2 and 3. the position of the ith peg on the bottom edge is represented by (ai, 0) . that on the top edge, on the left edge and on the right edge are represented by (bi, 1) , (0, ci), and (1, di), respectively. the long thread is cut into 2n threads with appropriate lengths. the threads are strained between (ai, 0) and (bi, 1) , and between (0, ci) and (1, di) (i = 1,..., n) .
 
you should write a program that reports the size of the largest mesh among the (n + 1)2 meshes of the fishnet made by fixing the threads at the pegs. you may assume that the thread he found is long enough to make the fishnet and that the wood-frame is thin enough for neglecting its thickness. 
 figure 1. a wood-frame with 8 pegs. figure 2. positions of pegs (indicated by small black circles) figure 3. a fishnet and the largest mesh (shaded) 


"
p00806,77377,"
at the risk of its future, international cellular phones corporation (icpc) invests its resources in developing new mobile phones, which are planned to be equipped with web browser, mailer, instant messenger, and many other advanced communication tools. unless members of icpc can complete this stiff job, it will eventually lose its market share.
 
you are now requested to help icpc to develop intriguing text input software for small mobile terminals. as you may know, most phones today have twelve buttons, namely, ten number buttons from ""0"" to ""9"" and two special buttons ""*"" and ""#"". although the company is very ambitious, it has decided to follow today's standards and conventions. you should not change the standard button layout, and should also pay attention to the following standard button assignment.
 
this means that you can only use eight buttons for text input.
 
most users of current icpc phones are rushed enough to grudge wasting time on even a single button press. your text input software should be economical of users' time so that a single button press is suffcient for each character input. in consequence, for instance, your program should accept a sequence of button presses ""77377"" and produce the word ""press"". similarly, it should translate ""77377843288866"" into ""press the button"".
 

ummm... it seems impossible to build such text input software since more than one english letter is represented by a digit!. for instance, ""77377"" may represent not only ""press"" but also any one of 768 (= 4 &times; 4 &times; 3 &times; 4 &times; 4) character strings. however, we have the good news that the new model of icpc mobile phones has enough memory to keep a dictionary. you may be able to write a program that filters out false words, i.e., strings not listed in the dictionary. 
 

"
p00807,Beehives,"
taro and hanako, students majoring in biology, have been engaged long in observations of beehives. their interest is in finding any egg patterns laid by queen bees of a specific wild species. a queen bee is said to lay a batch ofeggs in a short time. taro and hanako have never seen queen bees laying eggs. thus, every time they find beehives, they find eggs just laid in hive cells.
 
taro and hanako have a convention to record an egg layout.. they assume the queen bee lays eggs, moving from one cell to an adjacent cell along a path containing no cycles. they record the path of cells with eggs. there is no guarantee in biology for them to find an acyclic path in every case. yet they have never failed to do so in their observations. 
 
there are only six possible movements from a cell to an adjacent one, and they agree to write down those six by letters a, b, c, d, e, and f ounterclockwise as shown in figure 2. thus the layout in figure 1 may be written down as ""faafd"".
 
taro and hanako have investigated beehives in a forest independently. each has his/her own way to approach beehives, protecting oneself from possible bee attacks.
 
they are asked to report on their work jointly at a conference, and share their own observation records to draft a joint report. at this point they find a serious fault in their convention. they have never discussed which direction, in an absolute sense, should be taken as ""a"", and thus figure 2 might be taken as, e.g., figure 3 or figure 4. the layout shown in figure 1 may be recorded differently, depending on the direction looking at the beehive and the path assumed: ""bcbdb"" with combination of figure 3 and figure 5, or ""bccac"" with combination of figure 4 and figure 6.
 
a beehive can be observed only from its front side and never from its back, so a layout cannot be confused with its mirror image.
 
since they may have observed the same layout independently, they have to find duplicated records in their observations (of course, they do not record the exact place and the exact time of each observation). your mission is to help taro and hanako by writing a program that checks whether two observation records are made from the same layout. 
 



"
p00808,Young,"
ken and keiko are young, poor and busy. short explanation: they are students, and ridden with part-time jobs. to make things worse, ken lives in hakodate and keiko in tokyo. they want to meet, but since they have neither time nor money, they have to go back to their respective jobs immediately after, and must be careful about transportation costs. help them find the most economical meeting point.
 
ken starts from hakodate, keiko from tokyo. they know schedules and fares for all trains, and can choose to meet anywhere including their hometowns, but they cannot leave before 8am and must be back by 6pm in their respective towns. train changes take no time (one can leave the same minute he/she arrives), but they want to meet for at least 30 minutes in the same city. 
 
there can be up to 100 cities and 2000 direct connections, so you should devise an algorithm clever enough for the task. 
 

"
p00809,Nim,"
let's play a traditional game nim. you and i are seated across a table and we have a hundred stones on the table (we know the number of stones exactly). we play in turn and at each turn, you or i can remove one to four stones from the heap. you play first and the one who removed the last stone loses.
 
in this game, you have a winning strategy. to see this, you first remove four stones and leave 96 stones. no matter how i play, i will end up with leaving 92-95 stones. then you will in turn leave 91 stones for me (verify this is always possible). this way, you can always leave 5k + 1 stones for me and finally i get the last stone, sigh. if we initially had 101 stones, on the other hand, i have a winning strategy and you are doomed to lose.
 
let's generalize the game a little bit. first, let's make it a team game. each team has n players and the 2n players are seated around the table, with each player having opponents at both sides. turns round the table so the two teams play alternately. second, let's vary the maximum number ofstones each player can take. that is, each player has his/her own maximum number ofstones he/she can take at each turn (the minimum is always one). so the game is asymmetric and may even be unfair.
 
in general, when played between two teams of experts, the outcome of a game is completely determined by the initial number ofstones and the minimum number of stones each player can take at each turn. in other words, either team has a winning strategy.
 
you are the head-coach of a team. in each game, the umpire shows both teams the initial number of stones and the maximum number of stones each player can take at each turn. your team plays first. your job is, given those numbers, to instantaneously judge whether your team has a winning strategy.
 
incidentally, there is a rumor that captain future and her officers of hakodate-maru love this game, and they are killing their time playing it during their missions. you wonder where the stones are?. well, they do not have stones but do have plenty of balls in the fuel containers!. 
 

"
p00810,Super Star,"
during a voyage of the starship hakodate-maru (see problem a), researchers found strange synchronized movements of stars. having heard these observations, dr. extreme proposed a theory of ""super stars"". do not take this term as a description of actors or singers. it is a revolutionary theory in astronomy.
 
according to this theory, stars we are observing are not independent objects, but only small portions of larger objects called super stars. a super star is filled with invisible (or transparent) material, and only a number of points inside or on its surface shine. these points are observed as stars by us.
 
in order to verify this theory, dr. extreme wants to build motion equations of super stars and to compare the solutions of these equations with observed movements of stars. as the first step, he assumes that a super star is sphere-shaped, and has the smallest possible radius such that the sphere contains all given stars in or on it. this assumption makes it possible to estimate the volume of a super star, and thus its mass (the density of the invisible material is known).
 
you are asked to help dr. extreme by writing a program which, given the locations of a number of stars, finds the smallest sphere containing all of them in or on it. in this computation, you should ignore the sizes of stars. in other words, a star should be regarded as a point. you may assume the universe is a euclidean space. 
 

"
p00811,Calling Extraterrestrial Intelligence Again,"
a message from humans to extraterrestrial intelligence was sent through the arecibo radio telescope in puerto rico on the afternoon of saturday november l6, l974. the message consisted of l679 bits and was meant to be translated to a rectangular picture with 23 &times; 73  pixels. since both 23 and 73 are prime numbers, 23 &times; 73  is the unique possible size of the translated rectangular picture each edge of which is longer than l pixel. of course, there was no guarantee that the receivers would try to translate the message to a rectangular picture. even if they would, they might put the pixels into the rectangle incorrectly. the senders of the arecibo message were optimistic.
 
we are planning a similar project. your task in the project is to find the most suitable width and height of the translated rectangular picture. the term ``most suitable'' is defined as follows. an integer m greater than 4 is given. a positive fraction a/b less than or equal to 1 is also given. the area of the picture should not be greater than m. both of the width and the height of the translated picture should be prime numbers. the ratio of the width to the height should not be less than a/b nor greater than 1. you should maximize the area of the picture under these constraints.
 
in other words, you will receive an integer m and a fraction a/b . it holds that m &gt; 4 and 0 &lt; a/b &le; 1 . you should find the pair of prime numbers p, q such that pq &le; m and a/b &le; p/q &le; 1 , and furthermore, the product pq takes the maximum value among such pairs of two prime numbers. you should report p and q as the ""most suitable"" width and height of the translated picture. 
 

"
p00812,Equals are Equals,"
mr. simpson got up with a slight feeling of tiredness. it was the start of another day of hard work. a bunch of papers were waiting for his inspection on his desk in his office. the papers contained his students' answers to questions in his math class, but the answers looked as if they were just stains of ink.
 
his headache came from the ``creativity'' of his students. they provided him a variety of ways to answer each problem. he has his own answer to each problem, which is correct, of course, and the best from his aesthetic point of view.
 
some of his students wrote algebraic expressions equivalent to the expected answer, but many of them look quite different from mr. simpson's answer in terms of their literal forms. some wrote algebraic expressions not equivalent to his answer, but they look quite similar to it. only a few of the students' answers were exactly the same as his.
 
it is his duty to check if each expression is mathematically equivalent to the answer he has prepared. this is to prevent expressions that are equivalent to his from being marked as ``incorrect'', even if they are not acceptable to his aesthetic moral.
 
he had now spent five days checking the expressions. suddenly, he stood up and yelled, ``i've had enough! i must call for help.''
 
your job is to write a program to help mr. simpson to judge if each answer is equivalent to the ``correct'' one. algebraic expressions written on the papers are multi-variable polynomials over variable symbols a, b,..., z with integer coefficients, e.g.,

(a + b2)(a - b2), ax2 +2bx + c and (x2 +5x + 4)(x2 + 5x + 6) + 1.

 
mr. simpson will input every answer expression as it is written on the papers; he promises you that an algebraic expression he inputs is a sequence of terms separated by additive operators `+' and `-', representing the sum of the terms with those operators, if any; a term is a juxtaposition of multiplicands, representing their product; and a multiplicand is either (a) a non-negative integer as a digit sequence in decimal, (b) a variable symbol (one of the lowercase letters `a' to `z'), possibly followed by a symbol `^' and a non-zero digit, which represents the power of that variable, or (c) a parenthesized algebraic expression, recursively. note that the operator `+' or `-' appears only as a binary operator and not as a unary operator to specify the sing of its operand.
 
he says that he will put one or more space characters before an integer if it immediately follows another integer or a digit following the symbol `^'. he also says he may put spaces here and there in an expression as an attempt to make it readable, but he will never put a space between two consecutive digits of an integer. he remarks that the expressions are not so complicated, and that any expression, having its `-'s replaced with `+'s, if any, would have no variable raised to its 10th power, nor coefficient more than a billion, even if it is fully expanded into a form of a sum of products of coefficients and powered variables. 
 

"
p00813,GIGA Universe Cup,"
following fifa world cup, a larger competition called ``giga universe cup'' is taking place somewhere in our universe. both fifa world cup and giga universe cup are two rounds competitions that consist of the first round, also known as ``group league,'' and the second called ``final tournament.'' in the first round, participating teams are divided into groups of four teams each. each team in a group plays a match against each of the other teams in the same group. for example, let's say we have a group of the following four teams, ``engband, swedon, argontina, and nigerua.'' they play the following six matches: engband - swedon, engband - argontina, engband - nigerua, swedon - argontina, swedon - nigerua, and argontina - nigerua.
 
the result of a single match is shown by the number of goals scored by each team, like ``engband 1 - 0 argontina,'' which says engband scored one goal whereas argontina zero. based on the result of a match, points are given to the two teams as follows and used to rank teams. if a team wins a match (i.e., scores more goals than the other), three points are given to it and zero to the other. if a match draws (i.e., the two teams score the same number of goals), one point is given to each.
 
the goal difference of a team in given matches is the total number of goals it scored minus the total number of goals its opponents scored in these matches. for example, if we have three matches ``swedon 1 - 2 engband,'' ``swedon 3 - 4 nigerua,'' and ``swedon 5 - 6 argontina,'' then the goal difference of swedon in these three matches is (1 + 3 + 5) - (2 + 4+ 6) = -3.
 
given the results of all the six matches in a group, teams are ranked by the following criteria, listed in the order of priority (that is, we first apply (a) to determine the ranking, with ties broken by (b), with ties broken by (c), and so on).
 (a) greater number of points in all the group matches;  (b) greater goal difference in all the group matches;  (c) greater number of goals scored in all the group matches.  
if two or more teams are equal on the basis of the above three criteria, their place shall be determined by the following criteria, applied in this order:
 (d) greater number of points obtained in the group matches between the teams concerned;  (e) greater goal difference resulting from the group matches between the teams concerned;  (f) greater number of goals scored in the group matches between the teams concerned;  
if two or more teams are stiil equal, apply (d), (e), and (f) as necessary to each such group. repeat this until those three rules to equal teams do not make any further resolution. finally, teams that still remain equal are ordered by:
 (g) drawing lots by the organizing committee for the giga universe cup.  
the two teams coming first and second in each group qualify for the second round.
 
your job is to write a program which, given the results of matches played so far in a group and one team specified in the group, calculates the probability that the specified team will qualify for the second round. you may assume each team has played exactly two matches and has one match to play. in total, four matches have been played and two matches are to be played.
 
assume the probability that any team scores (exactly) p goals in any match is:
 
for p &le; 8, and zero for p &gt; 8 . assume the lot in the step (g) is fair.
 

"
p00814,Life Line,"
let's play a new board game ``life line''.
 
the number of the players is greater than 1 and less than 10.
 
in this game, the board is a regular triangle in which many small regular triangles are arranged (see figure l). the edges of each small triangle are of the same length. 
 figure 1: the board 
the size of the board is expressed by the number of vertices on the bottom edge of the outer triangle.
for example, the size of the board in figure 1 is 4.
 
at the beginning of the game, each player is assigned his own identification number between 1 and 9, and is given some stones on which his identification number is written.
 
each player puts his stone in turn on one of the ``empty'' vertices. an ``empty vertex'' is a vertex that has no stone on it.
 
when one player puts his stone on one of the vertices during his turn, some stones might be removed from the board. the player gains points which is equal to the number of the removed stones of others, but loses points which is equal to the number of the removed stones of himself. the points of a player for a single turn is the points he gained minus the points he lost in that turn.
 
the conditions for removing stones are as follows:
  the stones on the board are divided into groups. each group contains a set of stones whose numbers are the same and placed adjacently. that is, if the same numbered stones are placed adjacently, they belong to the same group.
  if none of the stones in a group is adjacent to at least one ``empty'' vertex, all the stones in that group are removed from the board.
 figure 2: the groups of stones figure 2 shows an example of the groups of stones. 
suppose that the turn of the player `4' comes now. if he puts his stone on the vertex shown in figure 3a, the conditions will be satisfied to remove some groups of stones (shadowed in figure 3b). the player gains 6 points, because the 6 stones of others are removed from the board (see figure 3c). 
 figure 3a figure 3b figure 3c 
as another example, suppose that the turn of the player `2' comes in figure 2. if the player puts his stone on the vertex shown in figure 4a, the conditions will be satisfied to remove some groups of stones (shadowed in figure 4b). the player gains 4 points, because the 4 stones of others are removed. but, at the same time, he loses 3 points, because his 3 stones are removed. as the result, the player's points of this turn is 4 - 3 = 1 (see figure 4c).
 figure 4a figure 4b figure 4c 
when each player puts all of his stones on the board, the game is over. the total score of a player is the summation of the points of all of his turns.
 
your job is to write a program that tells you the maximum points a player can get (i.e., the points he gains - the points he loses) in his current turn. 
"
p00815,Map of Ninja House,"
an old document says that a ninja house in kanazawa city was in fact a defensive fortress, which was designed like a maze. its rooms were connected by hidden doors in a complicated manner, so that any invader would become lost. each room has at least two doors.
 
the ninja house can be modeled by a graph, as shown in figure l. a circle represents a room. each line connecting two circles represents a door between two rooms. 
 
i decided to draw a map, since no map was available. your mission is to help me draw a map from the record of my exploration.
 
i started exploring by entering a single entrance that was open to the outside. the path i walked is schematically shown in figure 2, by a line with arrows. the rules for moving between rooms are described below.
 
    after entering a room, i first open the rightmost door and move to the next room. however, if the next room has already been visited, i close the door without entering, and open the next rightmost door, and so on. when i have inspected all the doors of a room, i go back through the door i used to enter the room. 
 
i have a counter with me to memorize the distance from the first room. the counter is incremented when i enter a new room, and decremented when i go back from a room. in figure 2, each number in parentheses is the value of the counter when i have entered the room, i.e., the distance from the first room. in contrast, the numbers not in parentheses represent the order of my visit.
 
i take a record of my exploration. every time i open a door, i record a single number, according to the following rules.
  if the opposite side of the door is a new room, i record the number of doors in that room, which is a positive number.  if it is an already visited room, say r, i record ``the distance of r from the first room'' minus ``the distance of the current room from the first room'', which is a negative number. 
in the example shown in figure 2, as the first room has three doors connecting other rooms, i initially record ``3''. then when i move to the second, third, and fourth rooms, which all have three doors, i append ``3 3 3'' to the record. when i skip the entry from the fourth room to the first room, the distance difference ``-3'' (minus three) will be appended, and so on. so, when i finish this exploration, its record is a sequence of numbers ``3 3 3 3 -3 3 2 -5 3 2 -5 -3''.
 
there are several dozens of ninja houses in the city. given a sequence of numbers for each of these houses, you should produce a graph for each house. 
 

"
p00816,Shredding Company,"
you have just been put in charge of developing a new shredder for the shredding company. although a ``normal'' shredder would just shred sheets of paper into little pieces so that the contents would become unreadable, this new shredder needs to have the following unusual basic characteristics.
  the shredder takes as input a target number and a sheet of paper with a number written on it.  it shreds (or cuts) the sheet into pieces each of which has one or more digits on it.  the sum of the numbers written on each piece is the closest possible number to the target number, without going over it. 
for example, suppose that the target number is 50, and the sheet of paper has the number 12346. the shredder would cut the sheet into four pieces, where one piece has 1, another has 2, the third has 34, and the fourth has 6. this is because their sum 43 (= 1 + 2 + 34 + 6) is closest to the target number 50 of all possible combinations without going over 50. for example, a combination where the pieces are 1, 23, 4, and 6 is not valid, because the sum of this combination 34 (= 1 + 23 + 4 + 6) is less than the above combination's 43. the combination of 12, 34, and 6 is not valid either, because the sum 52 (= 12+34+6) is greater than the target number of 50. 
 figure 1. shredding a sheet of paper having the number 12346 when the target number is 50 
there are also three special rules:
  if the target number is the same as the number on the sheet of paper, then the paper is not cut. for example, if the target number is 100 and the number on the sheet of paper is also 100, then the paper is not cut.  if it is not possible to make any combination whose sum is less than or equal to the target number, then error is printed on a display. for example, if the target number is 1 and the number on the sheet of paper is 123, it is not possible to make any valid combination, as the combination with the smallest possible sum is 1, 2, 3. the sum for this combination is 6, which is greater than the target number, and thus error is printed.  if there is more than one possible combination where the sum is closest to the target number without going over it, then rejected is printed on a display. for example, if the target number is 15, and the number on the sheet of paper is 111, then there are two possible combinations with the highest possible sum of 12: (a) 1 and 11 and (b) 11 and 1; thus rejected is printed.
 
in order to develop such a shredder, you have decided to first make a simple program that would simulate the above characteristics and rules. given two numbers, where the first is the target number and the second is the number on the sheet of paper to be shredded, you need to figure out how the shredder should ``cut up'' the second number. 
"
p00817,True Liars,"
after having drifted about in a small boat for a couple of days, akira crusoe maeda was finally cast ashore on a foggy island. though he was exhausted and despaired, he was still fortunate to remember a legend of the foggy island, which he had heard from patriarchs in his childhood. this must be the island in the legend.
 
in the legend, two tribes have inhabited the island, one is divine and the other is devilish; once members of the divine tribe bless you, your future is bright and promising, and your soul will eventually go to heaven; in contrast, once members of the devilish tribe curse you, your future is bleak and hopeless, and your soul will eventually fall down to hell.
 
in order to prevent the worst-case scenario, akira should distinguish the devilish from the divine. but how? they looked exactly alike and he could not distinguish one from the other solely by their appearances. he still had his last hope, however. the members of the divine tribe are truth-tellers, that is, they always tell the truth and those of the devilish tribe are liars, that is, they always tell a lie.
 
he asked some of the whether or not some are divine. they knew one another very much and always responded to him ""faithfully"" according to their individual natures (i.e., they always tell the truth or always a lie). he did not dare to ask any other forms of questions, since the legend says that a devilish member would curse a person forever when he did not like the question. he had another piece of useful information: the legend tells the populations of both tribes. these numbers in the legend are trustworthy since everyone living on this island is immortal and none have ever been born at least these millennia.
 
you are a good computer programmer and so requested to help akira by writing a program that classifies the inhabitants according to their answers to his inquiries. 
 

"
p00818,Viva Confetti,"
do you know confetti? they are small discs of colored paper, and people throw them around during parties or festivals. since people throw lots of confetti, they may end up stacked one on another, so there may be hidden ones underneath. 
a handful of various sized confetti have been dropped on a table. given their positions and sizes, can you tell us how many of them you can see?
 
the following figure represents the disc configuration for the first sample input, where the bottom disc is still visible. 
 






"
p00819,Unreliable Message,"
the king of a little kingdom on a little island in the pacific ocean frequently has childish
ideas. one day he said, “you shall make use of a message relaying game when you inform me
of something.” in response to the king’s statement, six servants were selected as messengers
whose names were mr. j, miss c, mr. e, mr. a, dr. p, and mr. m. they had to relay a message
to the next messenger until the message got to the king.
 
messages addressed to the king consist of digits (‘0’-‘9’) and alphabet characters (‘a’-‘z’, ‘a’-‘z’). capital and small letters are distinguished in messages. for example, “ke3e9aa” is a
message.
 
contrary to king’s expectations, he always received wrong messages, because each messenger
changed messages a bit before passing them to the next messenger. since it irritated the king, he
told you who are the minister of the science and technology agency of the kingdom, “we don’t
want such a wrong message any more. you shall develop software to correct it!” in response to
the king’s new statement, you analyzed the messengers’ mistakes with all technologies in the
kingdom, and acquired the following features of mistakes of each messenger. a surprising point
was that each messenger made the same mistake whenever relaying a message. the following
facts were observed.
 
mr. j rotates all characters of the message to the left by one. for example, he transforms
“ab23d” to “b23da”.
 
miss c rotates all characters of the message to the right by one. for example, she transforms
“ab23d” to “dab23”.
 
mr. e swaps the left half of the message with the right half. if the message has an odd number
of characters, the middle one does not move. for example, he transforms “e3ac” to “ace3”,
and “ab23d” to “3d2ab”.
 
mr. a reverses the message. for example, he transforms “ab23d” to “d32ba”.
 
dr. p increments by one all the digits in the message. if a digit is ‘9’, it becomes ‘0’. the
alphabet characters do not change. for example, he transforms “ab23d” to “ab34d”, and “e9ac”
to “e0ac”.
 
mr. m decrements by one all the digits in the message. if a digit is ‘0’, it becomes ‘9’. the
alphabet characters do not change. for example, he transforms “ab23d” to “ab12d”, and “e0ac”
to “e9ac”.

 
the software you must develop is to infer the original message from the final message, given the
order of the messengers. for example, if the order of the messengers is a -> j -> m -> p and the
message given to the king is “ab23d”, what is the original message? according to the features
of the messengers’ mistakes, the sequence leading to the final message is
 
as a result, the original message should be “32bad”.
 

"
p00820,Square Theorem,"
the fact that any positive integer has a representation as the sum of at most four positive
squares (i.e. squares of positive integers) is known as lagrange’s four-square theorem. the
first published proof of the theorem was given by joseph-louis lagrange in 1770. your mission
however is not to explain the original proof nor to discover a new proof but to show that the
theorem holds for some specific numbers by counting how many such possible representations
there are.
 
for a given positive integer n, you should report the number of all representations of n as the
sum of at most four positive squares. the order of addition does not matter, e.g. you should
consider 42 + 32 and 32 + 42 are the same representation.
 
for example, let’s check the case of 25. this integer has just three representations 12 +22 +22 +42 ,
32 + 42 , and 52 . thus you should report 3 in this case. be careful not to count 42 + 32 and
32 + 42 separately.

 

"
p00821,Area of Polygons,"
yoko’s math homework today was to calculate areas of polygons in the xy-plane. vertices are
all aligned to grid points (i.e. they have integer coordinates).
 
your job is to help yoko, not good either at math or at computer programming, get her home-
work done. a polygon is given by listing the coordinates of its vertices. your program should
approximate its area by counting the number of unit squares (whose vertices are also grid points)
intersecting the polygon. precisely, a unit square “intersects the polygon” if and only if the in-
tersection of the two has non-zero area. in the figure below, dashed horizontal and vertical lines
are grid lines, and solid lines are edges of the polygon. shaded unit squares are considered inter-
secting the polygon. your program should output 55 for this polygon (as you see, the number
of shaded unit squares is 55).
 figure 1: a polygon and unit squares intersecting it 


"
p00822,Weather Forecast,"
you are the god of wind.
 
by moving a big cloud around, you can decide the weather: it invariably rains under the cloud,
and the sun shines everywhere else.
 
but you are a benign god: your goal is to give enough rain to every field in the countryside,
and sun to markets and festivals. small humans, in their poor vocabulary, only describe this as
“weather forecast”.
 
you are in charge of a small country, called paccimc. this country is constituted of 4 &times; 4 square
areas, denoted by their numbers.
 
your cloud is of size 2 &times; 2, and may not cross the borders of the country.
 
you are given the schedule of markets and festivals in each area for a period of time.
 
on the first day of the period, it is raining in the central areas (6-7-10-11), independently of the
schedule.
 
on each of the following days, you may move your cloud by 1 or 2 squares in one of the four
cardinal directions (north, west, south, and east), or leave it in the same position. diagonal
moves are not allowed. all moves occur at the beginning of the day.
 
you should not leave an area without rain for a full week (that is, you are allowed at most 6
consecutive days without rain). you don’t have to care about rain on days outside the period
you were given: i.e. you can assume it rains on the whole country the day before the period,
and the day after it finishes.
 

"
p00823,Molecular Formula,"
your mission in this problem is to write a computer program that manipulates molecular for-
mulae in virtual chemistry. as in real chemistry, each molecular formula represents a molecule
consisting of one or more atoms. however, it may not have chemical reality.
 
the following are the definitions of atomic symbols and molecular formulae you should consider.
   an atom in a molecule is represented by an atomic symbol, which is either a single capital
  letter or a capital letter followed by a small letter. for instance h and he are atomic
  symbols.
 
 a molecular formula is a non-empty sequence of atomic symbols. for instance, hhhehhhe
  is a molecular formula, and represents a molecule consisting of four h’s and two he’s.
 
 for convenience, a repetition of the same sub-formula  where n is an integer
  between 2 and 99 inclusive, can be abbreviated to (x)n. parentheses can be omitted if
  x is an atomic symbol. for instance, hhhehhhe is also written as h2heh2he, (hhhe)2,
  (h2he)2, or even ((h)2he)2. 
the set of all molecular formulae can be viewed as a formal language. summarizing the above
description, the syntax of molecular formulae is defined as follows.
 
each atom in our virtual chemistry has its own atomic weight. given the weights of atoms,
your program should calculate the weight of a molecule represented by a molecular formula.
the molecular weight is defined by the sum of the weights of the constituent atoms. for
instance, assuming that the atomic weights of the atoms whose symbols are h and he are 1 and
4, respectively, the total weight of a molecule represented by (h2he)2 is 12.
 


"
p00824,Gap,"
let’s play a card game called gap.
 
you have 28 cards labeled with two-digit numbers. the first digit (from 1 to 4) represents the
suit of the card, and the second digit (from 1 to 7) represents the value of the card.
 
first, you shuffle the cards and lay them face up on the table in four rows of seven cards, leaving
a space of one card at the extreme left of each row. the following shows an example of initial
layout.
 
next, you remove all cards of value 1, and put them in the open space at the left end of the
rows: “11” to the top row, “21” to the next, and so on.
 
now you have 28 cards and four spaces, called gaps, in four rows and eight columns. you start
moving cards from this layout.
 
at each move, you choose one of the four gaps and fill it with the successor of the left neighbor
of the gap. the successor of a card is the next card in the same suit, when it exists. for instance
the successor of “42” is “43”, and “27” has no successor.
 
in the above layout, you can move “43” to the gap at the right of “42”, or “36” to the gap at
the right of “35”. if you move “43”, a new gap is generated to the right of “16”. you cannot
move any card to the right of a card of value 7, nor to the right of a gap.
 
the goal of the game is, by choosing clever moves, to make four ascending sequences of the same
suit, as follows.
 
your task is to find the minimum number of moves to reach the goal layout.
 

"
p00825,Concert Hall Scheduling,"
you are appointed director of a famous concert hall, to save it from bankruptcy. the hall is very
popular, and receives many requests to use its two fine rooms, but unfortunately the previous
director was not very efficient, and it has been losing money for many years. the two rooms are
of the same size and arrangement. therefore, each applicant wishing to hold a concert asks for
a room without specifying which. each room can be used for only one concert per day.
 
in order to make more money, you have decided to abandon the previous fixed price policy, and
rather let applicants specify the price they are ready to pay. each application shall specify a
period [i, j] and an asking price w, where i and j are respectively the first and last days of the
period (1 &le; i &le; j &le; 365), and w is a positive integer in yen, indicating the amount the applicant
is willing to pay to use a room for the whole period.
 
you have received applications for the next year, and you should now choose the applications
you will accept. each application should be either accepted for its whole period or completely
rejected. each concert should use the same room during the whole applied period.
 
considering the dire economic situation of the concert hall, artistic quality is to be ignored,
and you should just try to maximize the total income for the whole year by accepting the most
profitable applications.

 

"
p00826,Monster Trap,"
once upon a time when people still believed in magic, there was a great wizard aranyaka
gondlir. after twenty years of hard training in a deep forest, he had finally mastered ultimate
magic, and decided to leave the forest for his home.
 
arriving at his home village, aranyaka was very surprised at the extraordinary desolation. a
gloom had settled over the village. even the whisper of the wind could scare villagers. it was a
mere shadow of what it had been.
 
what had happened? soon he recognized a sure sign of an evil monster that is immortal. even
the great wizard could not kill it, and so he resolved to seal it with magic. aranyaka could cast
a spell to create a monster trap: once he had drawn a line on the ground with his magic rod,
the line would function as a barrier wall that any monster could not get over. since he could
only draw straight lines, he had to draw several lines to complete a monster trap, i.e., magic
barrier walls enclosing the monster. if there was a gap between barrier walls, the monster could
easily run away through the gap.
 
for instance, a complete monster trap without any gaps is built by the barrier walls in the left
figure, where “m” indicates the position of the monster. in contrast, the barrier walls in the
right figure have a loophole, even though it is almost complete.
 
your mission is to write a program to tell whether or not the wizard has successfully sealed the
monster.
 

"
p00827,The Balance,"
ms. iyo kiffa-australis has a balance and only two kinds of weights to measure a dose of medicine.
 
for example, to measure 200mg of aspirin using 300mg weights and 700mg weights, she can put
one 700mg weight on the side of the medicine and three 300mg weights on the opposite side
(figure 1). although she could put four 300mg weights on the medicine side and two 700mg
weights on the other (figure 2), she would not choose this solution because it is less convenient
to use more weights.
 
you are asked to help her by calculating how many weights are required.
 figure 1: to measure 200mg of aspirin using three 300mg weights and one 700mg weight figure 2: to measure 200mg of aspirin using four 300mg weights and two 700mg weights 



"
p00828,Make a Sequence,"
your company’s next product will be a new game, which is a three-dimensional variant of the
classic game “tic-tac-toe”. two players place balls in a three-dimensional space (board), and
try to make a sequence of a certain length.
 
people believe that it is fun to play the game, but they still cannot fix the values of some
parameters of the game. for example, what size of the board makes the game most exciting?
parameters currently under discussion are the board size (we call it n in the following) and the
length of the sequence (m). in order to determine these parameter values, you are requested to
write a computer simulator of the game.
 
you can see several snapshots of the game in figures 1-3. these figures correspond to the three
datasets given in the sample input.
 figure 1: a game with n = m = 3 
here are the precise rules of the game.
  two players, black and white, play alternately. black plays first.  there are n &times; n vertical pegs. each peg can accommodate up to n balls. a peg can be
     specified by its x- and y-coordinates (1 &le; x, y &le; n). a ball on a peg can be specified by
     its z-coordinate (1 &le; z &le; n). at the beginning of a game, there are no balls on any of the
     pegs. figure 2: a game with n = m = 3 (white made a 3-sequence before black)    on his turn, a player chooses one of n &times; n pegs, and puts a ball of his color onto the peg.
   the ball follows the law of gravity. that is, the ball stays just above the top-most ball
   on the same peg or on the floor (if there are no balls on the peg). speaking differently, a
   player can choose x- and y-coordinates of the ball, but he cannot choose its z-coordinate.  the objective of the game is to make an m-sequence. if a player makes an m-sequence or
   longer of his color, he wins. an m-sequence is a row of m consecutive balls of the same
   color. for example, black balls in positions (5, 1, 2), (5, 2, 2) and (5, 3, 2) form a 3-sequence.
   a sequence can be horizontal, vertical, or diagonal. precisely speaking, there are 13
   possible directions to make a sequence, categorized as follows. figure 3: a game with n = 4, m = 3 (black made two 4-sequences) 
(a) one-dimensional axes. for example, (3, 1, 2), (4, 1, 2) and (5, 1, 2) is a 3-sequence.
  there are three directions in this category.
(b) two-dimensional diagonals. for example, (2, 3, 1), (3, 3, 2) and (4, 3, 3) is a 3-sequence.
    there are six directions in this category.
(c) three-dimensional diagonals. for example, (5, 1, 3), (4, 2, 4) and (3, 3, 5) is a 3-
    sequence. there are four directions in this category.
 note that we do not distinguish between opposite directions. 
as the evaluation process of the game, people have been playing the game several times changing
the parameter values. you are given the records of these games. it is your job to write a computer
program which determines the winner of each recorded game.
 
since it is difficult for a human to find three-dimensional sequences, players often do not notice
the end of the game, and continue to play uselessly. in these cases, moves after the end of the
game, i.e. after the winner is determined, should be ignored. for example, after a player won
making an m-sequence, players may make additional m-sequences. in this case, all m-sequences
but the first should be ignored, and the winner of the game is unchanged.
 
a game does not necessarily end with the victory of one of the players. if there are no pegs left
to put a ball on, the game ends with a draw. moreover, people may quit a game before making
any m-sequence. in such cases also, the game ends with a draw.
 



"
p00829,Leaky Cryptography,"
the acm icpc judges are very careful about not leaking their problems, and all communications are encrypted. however, one does sometimes make mistakes, like using too weak an
encryption scheme. here is an example of that.
 
the encryption chosen was very simple: encrypt each chunk of the input by flipping some bits
according to a shared key. to provide reasonable security, the size of both chunk and key is 32
bits.
 
that is, suppose the input was a sequence of m 32-bit integers.
 
                   n1      n2    n3 ... nm
 
after encoding with the key k it becomes the following sequence of m 32-bit integers.
 

(n1 &and; k) (n2 &and; k) (n3 &and; k) ... (nm &and; k)
 
where (a &and; b) is the bitwise exclusive or of a and b.
 
exclusive or is the logical operator which is 1 when only one of its operands is 1, and 0 otherwise.
here is its definition for 1-bit integers.
 
as you can see, it is identical to addition modulo 2. for two 32-bit integers a and b, their bitwise
exclusive or a &and; b is defined as follows, using their binary representations, composed of 0's and 1's.
 
 a &and; b = a31 ... a1a0 &and; b31 ... b1b0 = c31 ... c1c0
 
where
 
   ci = ai &oplus; bi (i = 0, 1, ... , 31).
 
for instance, using binary notation, 11010110 &and; 01010101 = 10100011, or using hexadecimal, 
 
since this kind of encryption is notoriously weak to statistical attacks, the message has to be
compressed in advance, so that it has no statistical regularity. we suppose that n1 n2 ... nm
is already in compressed form.
 
however, the trouble is that the compression algorithm itself introduces some form of regularity:
after every 8 integers of compressed data, it inserts a checksum, the sum of these integers. that
is, in the above input, n9 = &sum;8i=1 ni = n1 + ... + n8, where additions are modulo 232.

 
luckily, you could intercept a communication between the judges. maybe it contains a problem for the finals!
 
as you are very clever, you have certainly seen that you can easily find the lowest bit of the key,
denoted by k0. on the one hand, if k0 = 1, then after encoding, the lowest bit of &sum;8i=1 ni &and; k is unchanged, as k0 is added an even number of times, but the lowest bit of n9 &and; k is changed,
so they shall differ. on the other hand, if k0 = 0, then after encoding, the lowest bit of &sum;8i=1 ni &and; k shall still be identical to the lowest bit of n9 &and; k, as they do not change. for instance, if the lowest bits after encoding are 1 1 1 1 1 1 1 1 1 then k0 must be 1, but if
they are 1 1 1 1 1 1 1 0 1 then k0 must be 0.
 
so far, so good. can you do better?
 
you should find the key used for encoding.
 

"
p00830,Pathological Paths,"
professor pathfinder is a distinguished authority on the structure of hyperlinks in the world
wide web. for establishing his hypotheses, he has been developing software agents, which
automatically traverse hyperlinks and analyze the structure of the web. today, he has gotten
an intriguing idea to improve his software agents. however, he is very busy and requires help
from good programmers. you are now being asked to be involved in his development team and
to create a small but critical software module of his new type of software agents.
 
upon traversal of hyperlinks, pathfinder’s software agents incrementally generate a map of
visited portions of the web. so the agents should maintain the list of traversed hyperlinks
and visited web pages. one problem in keeping track of such information is that two or more
different urls can point to the same web page. for instance, by typing any one of the following
five urls, your favorite browsers probably bring you to the same web page, which as you may
have visited is the home page of the acm icpc ehime contest.
 
your program should reveal such aliases for pathfinder’s experiments.
 
well, . . . but it were a real challenge and to be perfect you might have to embed rather compli-
cated logic into your program. we are afraid that even excellent programmers like you could
not complete it in five hours. so, we make the problem a little simpler and subtly unrealis-
tic. you should focus on the path parts (i.e. /icpc/, /icpc, /icpc/../icpc/, /icpc/./, and
/icpc/index.html in the above example) of urls and ignore the scheme parts (e.g. http://),
the server parts (e.g. www.ehime-u.ac.jp), and other optional parts. you should carefully read
the rules described in the sequel since some of them may not be based on the reality of today’s
web and urls.
 
each path part in this problem is an absolute pathname, which specifies a path from the root
directory to some web page in a hierarchical (tree-shaped) directory structure. a pathname
always starts with a slash (/), representing the root directory, followed by path segments delim-
ited by a slash. for instance, /icpc/index.html is a pathname with two path segments icpc and index.html.
 
all those path segments but the last should be directory names and the last one the name of an
ordinary file where a web page is stored. however, we have one exceptional rule: an ordinary
file name index.html at the end of a pathname may be omitted. for instance, a pathname
/icpc/index.html can be shortened to /icpc/, if index.html is an existing ordinary file name.
more precisely, if icpc is the name of an existing directory just under the root and index.html
is the name of an existing ordinary file just under the /icpc directory, /icpc/index.html and
/icpc/ refer to the same web page. furthermore, the last slash following the last path segment
can also be omitted. that is, for instance, /icpc/ can be further shortened to /icpc. however,
/index.html can only be abbreviated to / (a single slash).
 
you should pay special attention to path segments consisting of a single period (.) or a double
period (..), both of which are always regarded as directory names. the former represents the
directory itself and the latter represents its parent directory. therefore, if /icpc/ refers to some
web page, both /icpc/./ and /icpc/../icpc/ refer to the same page. also /icpc2/../icpc/
refers to the same page if icpc2 is the name of an existing directory just under the root;
otherwise it does not refer to any web page. note that the root directory does not have any
parent directory and thus such pathnames as /../ and /icpc/../../index.html cannot point
to any web page.
 
your job in this problem is to write a program that checks whether two given pathnames refer
to existing web pages and, if so, examines whether they are the same.
 

"
p00831,Confusing Login Names,"
meikyokan university is very famous for its research and education in the area of computer
science. this university has a computer center that has advanced and secure computing facilities
including supercomputers and many personal computers connected to the internet.
 
one of the policies of the computer center is to let the students select their own login names.
unfortunately, students are apt to select similar login names, and troubles caused by mistakes
in entering or specifying login names are relatively common. these troubles are a burden on
the staff of the computer center.
 
to avoid such troubles, dr. choei takano, the chief manager of the computer center, decided
to stamp out similar and confusing login names. to this end, takano has to develop a program
that detects confusing login names.
 
based on the following four operations on strings, the distance between two login names is
determined as the minimum number of operations that transforms one login name to the other.
  deleting a character at an arbitrary position.  inserting a character into an arbitrary position.  replacing a character at an arbitrary position with another character.  swapping two adjacent characters at an arbitrary position. 
for example, the distance between “omura” and “murai” is two, because the following sequence
of operations transforms “omura” to “murai”.
 
another example is that the distance between “akasan” and “kaason” is also two.
 
takano decided that two login names with a small distance are confusing and thus must be
avoided.
 
your job is to write a program that enumerates all the confusing pairs of login names.
 
beware that the rules may combine in subtle ways. for instance, the distance between “ant”
and “neat” is two.
 

       swap ‘a’ and ‘n’      insert ‘e’
  ant         -->         nat      -->      neat


"
p00832,Dice Puzzle,"
let’s try a dice puzzle. the rules of this puzzle are as follows.
 figure 1: faces of a die 

 figure 2: 3 &times; 3 &times; 3 cube 

 figure 3: a pair of faces placed against each other 


 figure 4: top and front views of the cube 

 
the goal of the puzzle is to find all the plausible dice arrangements that are consistent
with the given top and front view information.
 
your job is to write a program that solves this puzzle.
 


"
p00833,Color the Map,"
you were lucky enough to get a map just before entering the legendary magical mystery world.
the map shows the whole area of your planned exploration, including several countries with
complicated borders. the map is clearly drawn, but in sepia ink only; it is hard to recognize at
a glance which region belongs to which country, and this might bring you into severe danger. you
have decided to color the map before entering the area. “a good deal depends on preparation,”
you talked to yourself.
 
each country has one or more territories, each of which has a polygonal shape. territories
belonging to one country may or may not “touch” each other, i.e. there may be disconnected
territories. all the territories belonging to the same country must be assigned the same color.
you can assign the same color to more than one country, but, to avoid confusion, two countries
“adjacent” to each other should be assigned different colors. two countries are considered to be
“adjacent” if any of their territories share a border of non-zero length.
 
write a program that finds the least number of colors required to color the map.
 

"
p00834,Inherit the Spheres,"
in the year 2xxx, an expedition team landing on a planet found strange objects made by an
ancient species living on that planet. they are transparent boxes containing opaque solid spheres
(figure 1). there are also many lithographs which seem to contain positions and radiuses of
spheres.
 figure 1: a strange object 
initially their objective was unknown, but professor zambendorf found the cross section formed
by a horizontal plane plays an important role. for example, the cross section of an object
changes as in figure 2 by sliding the plane from bottom to top.
 figure 2: cross sections at different positions 
he eventually found that some information is expressed by the transition of the number of
connected figures in the cross section, where each connected figure is a union of discs intersecting
or touching each other, and each disc is a cross section of the corresponding solid sphere. for
instance, in figure 2, whose geometry is described in the first sample dataset later, the number
of connected figures changes as 0, 1, 2, 1, 2, 3, 2, 1, and 0, at z = 0.0000, 162.0000, 167.0000,
173.0004, 185.0000, 191.9996, 198.0000, 203.0000, and 205.0000, respectively. by assigning 1 for
increment and 0 for decrement, the transitions of this sequence can be expressed by an 8-bit
binary number 11011000.
 
for helping further analysis, write a program to determine the transitions when sliding the
horizontal plane from bottom (z = 0) to top (z = 36000).
 

"
p00835,Crossing Prisms,"
prof. bocchan is a mathematician and a sculptor. he likes to create sculptures with mathematics.
 
his style to make sculptures is very unique. he uses two identical prisms. crossing them at right
angles, he makes a polyhedron that is their intersection as a new work. since he finishes it up
with painting, he needs to know the surface area of the polyhedron for estimating the amount
of pigment needed.
 
for example, let us consider the two identical prisms in figure 1. the definition of their cross
section is given in figure 2. the prisms are put at right angles with each other and their
intersection is the polyhedron depicted in figure 3. an approximate value of its surface area
is 194.8255.
 figure 1: two identical prisms at right angles 
given the shape of the cross section of the two identical prisms, your job is to calculate the
surface area of his sculpture.

 




"
p00836,Sum of Consecutive prime Numbers,"
some positive integers can be represented by a sum of one or more consecutive prime numbers.
how many such representations does a given positive integer have? for example, the integer 53
has two representations 5 + 7 + 11 + 13 + 17 and 53. the integer 41 has three representations
2 + 3 + 5 + 7 + 11 + 13, 11 + 13 + 17, and 41. the integer 3 has only one representation, which is
3. the integer 20 has no such representations. note that summands must be consecutive prime
numbers, so neither 7 + 13 nor 3 + 5 + 5 + 7 is a valid representation for the integer 20.
 
your mission is to write a program that reports the number of representations for the given
positive integer.
 

"
p00837,Book Replacement,"
the deadline of prof. hachioji’s assignment is tomorrow. to complete the task, students have
to copy pages of many reference books in the library.
 
all the reference books are in a storeroom and only the librarian is allowed to enter it. to obtain
a copy of a reference book’s page, a student should ask the librarian to make it. the librarian
brings books out of the storeroom and makes page copies according to the requests. the overall
situation is shown in figure 1.
 
students queue up in front of the counter. only a single book can be requested at a time. if a
student has more requests, the student goes to the end of the queue after the request has been
served.
 
in the storeroom, there are m desks d1, ... , dm, and a shelf. they are placed in a line in this
order, from the door to the back of the room. up to c books can be put on each of the desks. if
a student requests a book, the librarian enters the storeroom and looks for it on d1, ... , dm in
this order, and then on the shelf. after finding the book, the librarian takes it and gives a copy
of a page to the student.
 
then the librarian returns to the storeroom with the requested book, to put it on d1 according to the following procedure.
 if d1 is not full (in other words, the number of books on d1 &lt; c), the librarian puts the requested book there.  temporarily puts the requested book on the non-full desk closest to the entrance or,
     in case all the desks are full, on the shelf,  finds the book on d1 that has not been requested for the longest time (i.e. the least recently used book) and takes it,  puts it on the non-full desk (except d1 ) closest to the entrance or, in case all the desks except d1 are full, on the shelf,  takes the requested book from the temporary place,  and finally puts it on d1 . 
your task is to write a program which simulates the behaviors of the students and the librarian,
and evaluates the total cost of the overall process. costs are associated with accessing a desk
or the shelf, that is, putting/taking a book on/from it in the description above. the cost of an
access is i for desk di and m + 1 for the shelf. that is, an access to d1, ... , dm , and the shelf
costs 1, ... , m, and m + 1, respectively. costs of other actions are ignored.
 
initially, no books are put on desks. no new students appear after opening the library.
 


"
p00838,Colored Cubes,"
there are several colored cubes. all of them are of the same size but they may be colored
differently. each face of these cubes has a single color. colors of distinct faces of a cube may or
may not be the same.
 
two cubes are said to be identically colored if some suitable rotations of one of the cubes give
identical looks to both of the cubes. for example, two cubes shown in figure 2 are identically
colored. a set of cubes is said to be identically colored if every pair of them are identically
colored.
 
a cube and its mirror image are not necessarily identically colored. for example, two cubes
shown in figure 3 are not identically colored.
 
you can make a given set of cubes identically colored by repainting some of the faces, whatever
colors the faces may have. in figure 4, repainting four faces makes the three cubes identically
colored and repainting fewer faces will never do.
 
your task is to write a program to calculate the minimum number of faces that needs to be
repainted for a given set of cubes to become identically colored.

 

"
p00839,Organize Your Train,"
in the good old hachioji railroad station located in the west of tokyo, there are several parking
lines, and lots of freight trains come and go every day.
 
all freight trains travel at night, so these trains containing various types of cars are settled in
your parking lines early in the morning. then, during the daytime, you must reorganize cars
in these trains according to the request of the railroad clients, so that every line contains the
“right” train, i.e. the right number of cars of the right types, in the right order.
 
as shown in figure 7, all parking lines run in the east-west direction. there are exchange
lines connecting them through which you can move cars. an exchange line connects two ends
of different parking lines. note that an end of a parking line can be connected to many ends of
other lines. also note that an exchange line may connect the east-end of a parking line and the
west-end of another.
 
cars of the same type are not discriminated between each other. the cars are symmetric, so
directions of cars don’t matter either.
 
you can divide a train at an arbitrary position to make two sub-trains and move one of them
through an exchange line connected to the end of its side. alternatively, you may move a whole
train as is without dividing it. anyway, when a (sub-) train arrives at the destination parking
line and the line already has another train in it, they are coupled to form a longer train.
 
your superautomatic train organization system can do these without any help of locomotive
engines. due to the limitation of the system, trains cannot stay on exchange lines; when you
start moving a (sub-) train, it must arrive at the destination parking line before moving another
train.
 
in what follows, a letter represents a car type and a train is expressed as a sequence of letters.
for example in figure 8, from an initial state having a train ""aabbccdee"" 
on line 0 and no trains
on other lines, you can make ""bbaadeecc"" on line 2 with the four moves shown in the figure.
 
to cut the cost out, your boss wants to minimize the number of (sub-) train movements. for
example, in the case of figure 8, the number of movements is 4 and this is the minimum.
 
given the configurations of the train cars in the morning (arrival state) and evening (departure
state), your job is to write a program to find the optimal train reconfiguration plan.
 

"
p00840,Mobile Computing,"
there is a mysterious planet called yaen, whose space is 2-dimensional. there are many beautiful
stones on the planet, and the yaen people love to collect them. they bring the stones back home
and make nice mobile arts of them to decorate their 2-dimensional living rooms.
 
in their 2-dimensional world, a mobile is defined recursively as follows:
   a stone hung by a string, or  a rod of length 1 with two sub-mobiles at both ends; the rod
  is hung by a string at the center of gravity of sub-mobiles.
  when the weights of the sub-mobiles are n and m, and their
  distances from the center of gravity are a and b respectively,
  the equation n &times; a = m &times; b holds. 
for example, if you got three stones with weights 1, 1, and 2, here are some possible mobiles
and their widths:
 
given the weights of stones and the width of the room, your task is to design the widest possible
mobile satisfying both of the following conditions.
  it uses all the stones.  its width is less than the width of the room. 
you should ignore the widths of stones.

 
in some cases two sub-mobiles hung from both ends of a rod might
overlap (see the figure on the below). such mobiles are acceptable.
the width of the example is (1/3) + 1 + (1/4).
 


  
  

"
p00841,Atomic Car Race,"
in the year 2020, a race of atomically energized cars will be held. unlike today’s car races, fueling
is not a concern of racing teams. cars can run throughout the course without any refueling.
instead, the critical factor is tire (tyre). teams should carefully plan where to change tires of
their cars.
 
the race is a road race having n checkpoints in the course. their distances from the start are a1, a2, ... , and an (in kilometers). the n-th checkpoint is the goal. at the i-th checkpoint (i &lt; n),
tires of a car can be changed. of course, a team can choose whether to change or not to change
tires at each checkpoint. it takes b seconds to change tires (including overhead for braking and
accelerating). there is no time loss at a checkpoint if a team chooses not to change tires.
 
a car cannot run fast for a while after a tire change, because the temperature of tires is lower
than the designed optimum. after running long without any tire changes, on the other hand,
a car cannot run fast because worn tires cannot grip the road surface well. the time to run
an interval of one kilometer from x to x + 1 is given by the following expression (in seconds).
here x is a nonnegative integer denoting the distance (in kilometers) from the latest checkpoint
where tires are changed (or the start). r, v, e and f are given constants.
 
your mission is to write a program to determine the best strategy of tire changes which minimizes
the total time to the goal.

 

"
p00842,Network Mess,"
gilbert is the network admin of ginkgo company. his boss is mad about the messy network
cables on the floor. he finally walked up to gilbert and asked the lazy network admin to illustrate
how computers and switches are connected. since he is a programmer, he is very reluctant to
move throughout the office and examine cables and switches with his eyes. he instead opted
to get this job done by measurement and a little bit of mathematical thinking, sitting down in
front of his computer all the time. your job is to help him by writing a program to reconstruct
the network topology from measurements.
 
there are a known number of computers and an unknown number of switches. each computer
is connected to one of the switches via a cable and to nothing else. specifically, a computer
is never connected to another computer directly, or never connected to two or more switches.
switches are connected via cables to form a tree (a connected undirected graph with no cycles).
no switches are ‘useless.’ in other words, each switch is on the path between at least one pair
of computers.
 
all in all, computers and switches together form a tree whose leaves are computers and whose
internal nodes switches (see figure 9).
 
gilbert measures the distances between all pairs of computers. the distance between two com-
puters is simply the number of switches on the path between the two, plus one. or equivalently,
it is the number of cables used to connect them. you may wonder how gilbert can actually
obtain these distances solely based on measurement. well, he can do so by a very sophisticated
statistical processing technique he invented. please do not ask the details.
 
you are therefore given a matrix describing distances between leaves of a tree. your job is to
construct the tree from it.
 

"
p00843,Bingo,"
a bingo game is played by one gamemaster and several players. at the beginning of a game,
each player is given a card with m &times; m numbers in a matrix (see figure 10).
 
as the game proceeds, the gamemaster announces a series of numbers one by one. each player
punches a hole in his card on the announced number, if any.
 
when at least one 'bingo' is made on the card, the player wins and leaves the game. the 'bingo'
means that all the m numbers in a line are punched vertically, horizontally or diagonally (see
figure 11).
 
the gamemaster continues announcing numbers until all the players make a bingo.
 
in the ordinary bingo games, the gamemaster chooses numbers by a random process and has no
control on them. but in this problem the gamemaster knows all the cards at the beginning of
the game and controls the game by choosing the number sequence to be announced at his will.
 
specifically, he controls the game to satisfy the following condition.
 
cardi makes a bingo no later than cardj, for i &lt; j. (*)
 
figure 12 shows an example of how a game proceeds. the gamemaster cannot announce '5'
before '16', because card4 makes a bingo before card2 and card3, violating the condition (*).
 
your job is to write a program which finds the minimum length of such sequence of numbers for
the given cards.
 


"
p00844,Shy Polygons,"
you are given two solid polygons and their positions on the xy-plane. you can move one
of the two along the x-axis (they can overlap during the move). you cannot move it in other
directions. the goal is to place them as compactly as possible, subject to the following condition:
the distance between any point in one polygon and any point in the other must not be smaller
than a given minimum distance l.
 
we define the width of a placement as the difference between the maximum and the minimum
x-coordinates of all points in the two polygons.
 
your job is to write a program to calculate the minimum width of placements satisfying the
above condition.
 
let's see an example. if the polygons in figure 13 are placed with l = 10.0, the result will be 100. figure 14 shows one of the optimal placements.
 






"
p00845,How I Wonder What You Are!,"
one of the questions children often ask is ""how many stars are there in the sky?"" under ideal conditions, even with the naked eye, nearly eight thousands are observable in the northern hemisphere. with a decent telescope, you may find many more, but, as the sight field will be
limited, you may find much less at a time.
 
children may ask the same questions to their parents on a planet of some solar system billions
of light-years away from the earth. their telescopes are similar to ours with circular sight fields,
but alien kids have many eyes and can look into different directions at a time through many
telescopes.
 
given a set of positions of stars, a set of telescopes and the directions they are looking to, your
task is to count up how many stars can be seen through these telescopes.
 

"
p00846,How I Mathematician Wonder What You Are!,"
after counting so many stars in the sky in his childhood, isaac, now an astronomer and a
mathematician, uses a big astronomical telescope and lets his image processing program count
stars. the hardest part of the program is to judge if a shining object in the sky is really a star.
as a mathematician, the only way he knows is to apply a mathematical definition of stars.
 
the mathematical defiition of a star shape is as follows: a planar shape f is star-shaped if and
only if there is a point c &isin; f such that, for any point p &isin; f, the line segment cp is contained
in f. such a point c is called a center of f. to get accustomed to the definition, let's see some
examples below.
 
figure 2: star shapes (the first row) and non-star shapes (the second row)
 
the firrst two are what you would normally call stars. according to the above definition, however,
all shapes in the first row are star-shaped. the two in the second row are not. for each star
shape, a center is indicated with a dot. note that a star shape in general has infinitely many
centers. for example, for the third quadrangular shape, all points in it are centers.
 
your job is to write a program that tells whether a given polygonal shape is star-shaped or not.
 


"
p00847,Puzzle,"
let's play a puzzle using eight cubes placed on a 3 &times; 3 board leaving one empty square.
 
faces of cubes are painted with three colors. as a puzzle step, you can roll one of the cubes to
the adjacent empty square. your goal is to make the specified color pattern visible from above
by a number of such steps.
 
the rules of this puzzle are as follows.
 figure 3: coloring of a cube 



 figure 4: initial board state 


 figure 5: rolling a cube 


 
goal: the goal of this puzzle is to arrange the cubes so that their top faces form the
specified color pattern by a number of cube rolling steps described above.

 
your task is to write a program that finds the minimum number of steps required to make the
specified color pattern from the given initial state.
 



"
p00848,Sum of Different Primes,"
a positive integer may be expressed as a sum of different prime numbers (primes), in one way or
another. given two positive integers n and k, you should count the number of ways to express
n as a sum of k different primes. here, two ways are considered to be the same if they sum up
the same set of the primes. for example, 8 can be expressed as 3 + 5 and 5+ 3 but they are not
distinguished.
 
when n and k are 24 and 3 respectively, the answer is two because there are two sets {2, 3, 19} and {2, 5, 17} whose sums are equal to 24. there are no other sets of three primes that sum up
to 24. for n = 24 and k = 2, the answer is three, because there are three sets {5, 19}, {7,17} and {11, 13}. for n = 2 and k = 1, the answer is one, because there is only one set {2} whose
sum is 2. for n = 1 and k = 1, the answer is zero. as 1 is not a prime, you shouldn't count
{1}. for n = 4 and k = 2, the answer is zero, because there are no sets of two diffrent primes
whose sums are 4.
 
your job is to write a program that reports the number of such ways for the given n and k.
 

"
p00849,Manhattan Wiring,"
there is a rectangular area containing n &times; m cells. two cells are marked with ""2"", and another two with ""3"". some cells are occupied by obstacles. you should connect the two ""2""s and also the two ""3""s with non-intersecting lines. lines can run only vertically or horizontally connecting
centers of cells without obstacles.
 
lines cannot run on a cell with an obstacle. only one line can run on a cell at most once. hence,
a line cannot intersect with the other line, nor with itself. under these constraints, the total
length of the two lines should be minimized. the length of a line is defined as the number of
cell borders it passes. in particular, a line connecting cells sharing their border has length 1.
 
fig. 6(a) shows an example setting. fig. 6(b) shows two lines satisfying the constraints above
with minimum total length 18.
 
figure 6: an example setting and its solution
 



"
p00850,Power Calculus,"
starting with x and repeatedly multiplying by x, we can compute x31 with thirty multiplications:
 
      x2 = x &times; x, x3 = x2 &times;  x, x4 = x3 &times; x, ... , x31 = x30 &times;  x.
 
the operation of squaring can appreciably shorten the sequence of multiplications. the following is a way to compute x31 with eight multiplications:
 
      x2 = x &times; x, x3 = x2 &times; x, x6 = x3 &times; x3, x7 = x6 &times; x, x14 = x7 &times; x7,
      x15 = x14 &times; x, x30 = x15 &times; x15, x31 = x30 &times; x.
 
this is not the shortest sequence of multiplications to compute x31. there are many ways with only seven multiplications. the following is one of them:
 
      x2 = x &times; x, x4 = x2 &times; x2, x8 = x4 &times; x4, x10 = x8 &times; x2,
      x20 = x10 &times; x10, x30 = x20 &times; x10, x31 = x30 &times; x.
 
there however is no way to compute x31 with fewer multiplications. thus this is one of the
most eficient ways to compute x31 only by multiplications.
 
if division is also available, we can find a shorter sequence of operations. it is possible to
compute x31 with six operations (five multiplications and one division):
 
      x2 = x &times; x, x4 = x2 &times; x2, x8 = x4 &times; x4, x16 = x8 &times; x8, x32  = x16 &times; x16,
      x31 = x32 &divide; x.
 
this is one of the most eficient ways to compute x31 if a division is as fast as a multiplication.
 
your mission is to write a program to find the least number of operations to compute xn
by multiplication and division starting with x for the given positive integer n. products and
quotients appearing in the sequence of operations should be x to a positive integer's power. in
other words, x-3, for example, should never appear.

 

"
p00851,Polygons on the Grid,"
the ultimate tantra is said to have been kept in the most distinguished temple deep in the
sacred forest somewhere in japan. paleographers finally identified its location, surprisingly a
small temple in hiyoshi, after years of eager research. the temple has an underground secret
room built with huge stones. this underground megalith is suspected to be where the tantra
is enshrined.
 
the room door is, however, securely locked. legends tell that the key of the door lock was an
integer, that only highest priests knew. as the sect that built the temple decayed down, it is
impossible to know the integer now, and the agency for cultural affairs bans breaking up the
door. fortunately, a figure of a number of rods that might be used as a clue to guess that secret
number is engraved on the door.
 
many distinguished scholars have challenged the riddle, but no one could have ever succeeded
in solving it, until recently a brilliant young computer scientist finally deciphered the puzzle.
lengths of the rods are multiples of a certain unit length. he found that, to find the secret
number, all the rods should be placed on a grid of the unit length to make one convex polygon.
both ends of each rod must be set on grid points. elementary mathematics tells that the
polygon's area ought to be an integer multiple of the square of the unit length. the area size of
the polygon with the largest area is the secret number which is needed to unlock the door.
 
for example, if you have five rods whose lengths are 1, 2, 5, 5, and 5, respectively, you can make
essentially only three kinds of polygons, shown in figure 7. then, you know that the maximum
area is 19.
 
figure 7: convex polygons consisting of five rods of lengths 1, 2, 5, 5, and 5
 
your task is to write a program to find the maximum area of convex polygons using all the given
rods whose ends are on grid points.

 

"
p00852,The Best Name for Your Baby,"
in the year 29xx, the government of a small country somewhere on the earth introduced a law restricting first names of the people only to traditional names in their culture, in order to preserve their cultural uniqueness. the linguists of the country specifies a set of rules once every year, and only names conforming to the rules are allowed in that year. in addition, the law also requires each person to use a name of a specific length calculated from one's birth date because
otherwise too many people would use the same very popular names. since the legislation of that law, the common task of the parents of new babies is to find the name that comes first in the alphabetical order among the legitimate names of the given length because names earlier in the alphabetical order have various benefits in their culture.
 
legitimate names are the strings consisting of only lowercase letters that can be obtained by
repeatedly applying the rule set to the initial string ""s"", a string consisting only of a single uppercase s.
 
applying the rule set to a string is to choose one of the rules and apply it to the string. each
of the rules has the form a -&gt; &alpha;, where a is an uppercase letter and &alpha; is a string of lowercase and/or uppercase letters. applying such a rule to a string is to replace an occurrence of the
letter a in the string to the string &alpha;. that is, when the string has the form ""&beta;a&gamma;"", where &beta; and
&gamma; are arbitrary (possibly empty) strings of letters, applying the rule rewrites it into the string ""&beta;&alpha;&gamma;"". if there are two or more occurrences of a in the original string, an arbitrary one of them
can be chosen for the replacement.
 
below is an example set of rules.
 
applying the rule (1) to ""s"", ""aab"" is obtained. applying (2) to it results in ""ab"", as a is replaced by an empty string. then, the rule (4) can be used to make it ""aabba"". applying (3) to the first occurrence of a makes it ""aaabba"". applying the rule (2) to the a at the end results in ""aaabb"". finally, applying the rule (2) again to the remaining a results in ""aabb"". as no uppercase letter remains in this string, ""aabb"" is a legitimate name. 
 
we denote such a rewriting process as follows.
 
linguists of the country may sometimes define a ridiculous rule set such as follows.
 
the only possible rewriting sequence with this rule set is:
 
which will never terminate. no legitimate names exist in this case. also, the rule (3) can never be used, as its left hand side, b, does not appear anywhere else.
 
it may happen that no rules are supplied for some uppercase letters appearing in the rewriting steps. in its extreme case, even s might have no rules for it in the set, in which case there are no legitimate names, of course. poor nameless babies, sigh!
 
now your job is to write a program that finds the name earliest in the alphabetical order among the legitimate names of the given length conforming to the given set of rules.
 



"
p00853,Enjoyable Commutation,"
isaac is tired of his daily trip to his ofice, using the same shortest route everyday. although this saves his time, he must see the same scenery again and again. he cannot stand such a boring commutation any more.
 
one day, he decided to improve the situation. he would change his route everyday at least slightly. his new scheme is as follows. on the first day, he uses the shortest route. on the second day, he uses the second shortest route, namely the shortest except one used on the first day. in general, on the k-th day, the k-th shortest route is chosen. visiting the same place twice on a route should be avoided, of course.
 
you are invited to help isaac, by writing a program which finds his route on the k-th day. the problem is easily modeled using terms in the graph theory. your program should find the k-th shortest path in the given directed graph.
 

"
p00854,And Then There Was One,"
let’s play a stone removing game.
 
initially, n stones are arranged on a circle and numbered 1, ... , n clockwise (figure 1). you are also given two numbers k and m. from this state, remove stones one by one following the rules explained below, until only one remains. in step 1, remove stone m. in step 2, locate the k-th next stone clockwise from m and remove it. in subsequent steps, start from the slot of the stone removed in the last step, make k hops clockwise on the remaining stones and remove the one you reach. in other words, skip (k - 1) remaining stones clockwise and remove the next one. repeat this until only one stone is left and answer its number.
 
for example, the answer for the case n = 8, k = 5, m = 3 is 1, as shown in figure 1.
 
figure 1: an example game
 
initial state: eight stones are arranged on a circle.
 
step 1: stone 3 is removed since m = 3.
 
step 2: you start from the slot that was occupied by stone 3. you skip four stones 4, 5, 6 and 7 (since k = 5), and remove the next one, which is 8.
 
step 3: you skip stones 1, 2, 4 and 5, and thus remove 6. note that you only count stones that are still on the circle and ignore those already removed. stone 3 is ignored in this case.
 
steps 4-7: you continue until only one stone is left. notice that in later steps when only a few stones remain, the same stone may be skipped multiple times. for example, stones 1 and 4 are skipped twice in step 7.
 
final state: finally, only one stone, 1, is on the circle. this is the final state, so the answer is 1.
 



"
p00855,Prime Gap,"
the sequence of n - 1 consecutive composite numbers (positive integers that are not prime and
not equal to 1) lying between two successive prime numbers p and p + n is called a prime gap of length n. for example, (24, 25, 26, 27, 28) between 23 and 29 is a prime gap of length 6.
 
your mission is to write a program to calculate, for a given positive integer k, the length of the prime gap that contains k. for convenience, the length is considered 0 in case no prime gap
contains k.
 

"
p00856,Minimal Backgammon,"
here is a very simple variation of the game backgammon, named “minimal backgammon”. the game is played by only one player, using only one of the dice and only one checker (the token used by the player).
 
the game board is a line of (n + 1) squares labeled as 0 (the start) to n (the goal). at the beginning, the checker is placed on the start (square 0). the aim of the game is to bring the checker to the goal (square n). the checker proceeds as many squares as the roll of the dice. the dice generates six integers from 1 to 6 with equal probability.
 
the checker should not go beyond the goal. if the roll of the dice would bring the checker beyond the goal, the checker retreats from the goal as many squares as the excess. for example, if the checker is placed at the square (n - 3), the roll ""5"" brings the checker to the square (n - 2), because the excess beyond the goal is 2. at the next turn, the checker proceeds toward the goal
as usual.
 
each square, except the start and the goal, may be given one of the following two special instructions.
 lose one turn (labeled ""l"" in figure 2) if the checker stops here, you cannot move the checker in the next turn. 
go back to the start (labeled ""b"" in figure 2) if the checker stops here, the checker is brought back to the start. 
given a game board configuration (the size n, and the placement of the special instructions), you are requested to compute the probability with which the game succeeds within a given number of turns.
 








"
p00857,Lowest Pyramid,"
you are constructing a triangular pyramid with a sheet of craft paper with grid lines. its base
and sides are all of triangular shape. you draw the base triangle and the three sides connected
to the base on the paper, cut along the outer six edges, fold the edges of the base, and assemble
them up as a pyramid.
 
you are given the coordinates of the base's three vertices, and are to determine the coordinates
of the other three. all the vertices must have integral x- and y-coordinate values between -100 and +100 inclusive. your goal is to minimize the height of the pyramid satisfying these
conditions. figure 3 shows some examples.
 
figure 3: some craft paper drawings and side views of the assembled pyramids
 


"
p00858,Geometric Map,"
your task in this problem is to create a program that finds the shortest path between two given
locations on a given street map, which is represented as a collection of line segments on a plane.
 
figure 4 is an example of a street map, where some line segments represent streets and the
others are signs indicating the directions in which cars cannot move. more concretely, ae, am, mq, eq, cp and hj represent the streets and the others are signs in this map. in general, an end point of a sign touches one and only one line segment representing a street and the other end point is open. each end point of every street touches one or more streets, but no signs.
 
the sign bf, for instance, indicates that at b cars may move left to right but may not in the
reverse direction. in general, cars may not move from the obtuse angle side to the acute angle
side at a point where a sign touches a street (note that the angle cbf is obtuse and the angle abf is acute). cars may directly move neither from p to m nor from m to p since cars moving left
to right may not go through n and those moving right to left may not go through o. in a special
case where the angle between a sign and a street is rectangular, cars may not move in either
directions at the point. for instance, cars may directly move neither from h to j nor from j to h.
 
you should write a program that finds the shortest path obeying these traffic rules. the length of a line segment between (x1, y1) and (x2, y2) is &radic;{(x2 − x1)2 + (y2 − y1 )2} .

 

"
p00859,Slim Span,"
given an undirected weighted graph g, you should find one of spanning trees specified as follows.
 
the graph g is an ordered pair (v, e), where v is a set of vertices {v1, v2, ... , vn} and e is a set of undirected edges {e1, e2, ... , em}. each edge e &isin; e has its weight w(e).
 
a spanning tree t is a tree (a connected subgraph without cycles) which connects all the n
vertices with n - 1 edges. the slimness of a spanning tree t is defined as the difference between
the largest weight and the smallest weight among the n - 1 edges of t.
 
figure 5: a graph g and the weights of the edges
 
for example, a graph g in figure 5(a) has four vertices {v1, v2, v3, v4} and five undirected edges {e1, e2, e3, e4, e5}. the weights of the edges are w(e1) = 3, w(e2) = 5, w(e3) = 6, w(e4) = 6, w(e5) = 7 as shown in figure 5(b).
 
figure 6: examples of the spanning trees of g
 
there are several spanning trees for g. four of them are depicted in figure 6(a)-(d). the spanning tree ta in figure 6(a) has three edges whose weights are 3, 6 and 7. the largest weight
is 7 and the smallest weight is 3 so that the slimness of the tree ta is 4. the slimnesses of
spanning trees tb , tc and td shown in figure 6(b), (c) and (d) are 3, 2 and 1, respectively. you
can easily see the slimness of any other spanning tree is greater than or equal to 1, thus the
spanning tree td in figure 6(d) is one of the slimmest spanning trees whose slimness is 1.
 
your job is to write a program that computes the smallest slimness.
 



"
p00860,The Morning after Halloween,"
you are working for an amusement park as an operator of an obakeyashiki, or a haunted house,
in which guests walk through narrow and dark corridors. the house is proud of their lively
ghosts, which are actually robots remotely controlled by the operator, hiding here and there in
the corridors. one morning, you found that the ghosts are not in the positions where they are
supposed to be. ah, yesterday was halloween. believe or not, paranormal spirits have moved
them around the corridors in the night. you have to move them into their right positions before
guests come. your manager is eager to know how long it takes to restore the ghosts.
 
in this problem, you are asked to write a program that, given a floor map of a house, finds the
smallest number of steps to move all ghosts to the positions where they are supposed to be.
 
a floor consists of a matrix of square cells. a cell is either a wall cell where ghosts cannot move
into or a corridor cell where they can.
 
at each step, you can move any number of ghosts simultaneously. every ghost can either stay
in the current cell, or move to one of the corridor cells in its 4-neighborhood (i.e. immediately
left, right, up or down), if the ghosts satisfy the following conditions:
  no more than one ghost occupies one position at the end of the step.  no pair of ghosts exchange their positions one another in the step. 
for example, suppose ghosts are located as shown in the following (partial) map, where a sharp sign ('#) represents a wall cell and 'a', 'b', and 'c' ghosts.
 
the following four maps show the only possible positions of the ghosts after one step.
 


                                   ####      ####     ####     ####
                                    ab#      a b#     acb#     ab #
                                   #c##      #c##     # ##     #c##
                                   ####      ####     ####     ####





"
p00861,Bug Hunt,"
in this problem, we consider a simple programming language that has only declarations of one-
dimensional integer arrays and assignment statements. the problem is to find a bug in the given
program.
 
the syntax of this language is given in bnf as follows:
 
where &lt;new line&gt; denotes a new line character (lf).
 
characters used in a program are alphabetical letters, decimal digits, =, [, ] and new line characters. no other characters appear in a program.
 
a declaration declares an array and specifies its length. valid indices of an array of length n are integers between 0 and n - 1, inclusive. note that the array names are case sensitive, i.e.
array a and array a are different arrays. the initial value of each element in the declared array is undefined.
 
for example, array a of length 10 and array b of length 5 are declared respectively as follows.
 
an expression evaluates to a non-negative integer. a &lt;number&gt; is interpreted as a decimal
integer. an &lt;array_name&gt; [&lt;expression&gt;] evaluates to the value of the &lt;expression&gt; -th element of
the array. an assignment assigns the value denoted by the right hand side to the array element
specified by the left hand side.
 
examples of assignments are as follows.
 
a program is executed from the first line, line by line. you can assume that an array is declared once and only once before any of its element is assigned or referred to.
 
given a program, you are requested to find the following bugs.
  an index of an array is invalid.  an array element that has not been assigned before is referred to in an assignment as an index of array or as the value to be assigned. 
you can assume that other bugs, such as syntax errors, do not appear. you can also assume
that integers represented by &lt;number&gt;s are between 0 and 231 - 1 (= 2147483647), inclusive.
 

"
p00862,Most Distant Point from the Sea,"
the main land of japan called honshu is an island surrounded by the sea. in such an island, it
is natural to ask a question: ""where is the most distant point from the sea?"" the answer to
this question for honshu was found in 1996. the most distant point is located in former usuda
town, nagano prefecture, whose distance from the sea is 114.86 km.
 
in this problem, you are asked to write a program which, given a map of an island, finds the
most distant point from the sea in the island, and reports its distance from the sea. in order to
simplify the problem, we only consider maps representable by convex polygons.
 

"
p00863,The Teacher's Side of Math,"
one of the tasks students routinely carry out in their mathematics classes is to solve a polynomial equation. it is, given a polynomial, say x2 - 4x + 1, to find its roots (2 &plusmn; &radic;3).
 
if the students’ task is to find the roots of a given polynomial, the teacher’s task is then to find a polynomial that has a given root. ms. galsone is an enthusiastic mathematics teacher who is bored with finding solutions of quadratic equations that are as simple as a + b&radic;c. she wanted to make higher-degree equations whose solutions are a little more complicated. as usual in problems in mathematics classes, she wants to maintain all coefficients to be integers and keep the degree of the polynomial as small as possible (provided it has the specified root). please help her by writing a program that carries out the task of the teacher’s side.
 
you are given a number t of the form:
 
    t = m&radic;a+n&radic;b
 
where a and b are distinct prime numbers, and m and n are integers greater than 1.
 
in this problem, you are asked to find t's minimal polynomial on integers, which is the polynomial f(x) = adxd + ad-1xd-1 + ... + a1x + a0 satisfying the following conditions.
  coefficients a0, ... , ad are integers and ad &gt; 0.  f(t) = 0.  the degree d is minimum among polynomials satisfying the above two conditions.  f(x) is primitive. that is, coefficients a0, ... , ad have no common divisors greater than one. 
for example, the minimal polynomial of &radic;3+ &radic;2 on integers is f(x) = x4 - 10x2 + 1. verifying f(t) = 0 is as simple as the following (&alpha; = 3, &beta; = 2).
 
f(t) = (&alpha; + &beta;)4 - 10(&alpha; + &beta;)2 + 1
 
= (&alpha;4 + 4&alpha3&beta; + 6&alpha;2&beta;2 + 4&alpha;&beta;3 + &beta;4 ) - 10(&alpha;2 + 2&alpha;&beta; + &beta;2) + 1
 
= 9 + 12&alpha;&beta; + 36 + 8&alpha;&beta; + 4 - 10(3 + 2&alpha;&beta; + 2) + 1
 
= (9 + 36 + 4 - 50 + 1) + (12 + 8 - 20)&alpha;&beta;
 
                     = 0
 
verifying that the degree of f(t) is in fact minimum is a bit more difficult. fortunately, under
the condition given in this problem, which is that a and b are distinct prime numbers and m and n greater than one, the degree of the minimal polynomial is always mn. moreover, it is
always monic. that is, the coefficient of its highest-order term (ad) is one.
 

"
p00864,Grey Area,"
dr. grey is a data analyst, who visualizes various aspects of data received from all over the
world everyday. he is extremely good at sophisticated visualization tools, but yet his favorite is
a simple self-made histogram generator.
 
figure 1 is an example of histogram automatically produced by his histogram.
 
a histogram is a visual display of frequencies of value occurrences as bars. in this example, values
in the interval 0-9 occur five times, those in the interval 10-19 occur three times, and 20-29
and 30-39 once each.
 
dr. grey’s histogram generator is a simple tool. first, the height of the histogram is fixed, that
is, the height of the highest bar is always the same and those of the others are automatically
adjusted proportionately. second, the widths of bars are also fixed. it can only produce a
histogram of uniform intervals, that is, each interval of a histogram should have the same width
(10 in the above example). finally, the bar for each interval is painted in a grey color, where
the colors of the leftmost and the rightmost intervals are black and white, respectively, and the
darkness of bars monotonically decreases at the same rate from left to right. for instance, in
figure 1, the darkness levels of the four bars are 1, 2/3, 1/3, and 0, respectively.

 
in this problem, you are requested to estimate ink consumption when printing a histogram on paper. the amount of ink necessary to draw a bar is proportional to both its area and darkness.

"
p00865,Expected Allowance,"
hideyuki is allowed by his father ujisato some 1000 yen bills every month for his pocket money.
in the first day of every month, the number of bills is decided as follows. ujisato prepares n
pieces of m-sided dice and declares the cutback k. hideyuki rolls these dice. the number of
bills given is the sum of the spots of the rolled dice decreased by the cutback. fortunately to
hideyuki, ujisato promises him to give at least one bill, even if the sum of the spots does not
exceed the cutback. each of the dice has spots of 1 through m inclusive on each side, and the
probability of each side is the same.
 
in this problem, you are asked to write a program that finds the expected value of the number
of given bills.
 
for example, when n = 2, m = 6 and k = 3, the probabilities of the number of bills being 1, 2, 3, 4, 5, 6, 7, 8 and 9 are 1/36 + 2/36 + 3/36, 4/36, 5/36, 6/36, 5/36, 4/36, 3/36, 2/36 and 1/36, respectively.
 
therefore, the expected value is
 
(1/36 + 2/36 + 3/36) &times; 1 + 4/36 &times; 2 + 5/36 &times; 3 + 6/36 &times; 4 + 5/36 &times; 5 + 4/36 &times 6 + 3/36 &times 7 + 2/36 &times 8 + 1/36 &times 9, which is approximately 4.11111111.
 

"
p00866,Stopped Watches,"
in the middle of tyrrhenian sea, there is a small volcanic island called chronus. the island
is now uninhabited but it used to be a civilized island. some historical records imply that the
island was annihilated by an eruption of a volcano about 800 years ago and that most of the
people in the island were killed by pyroclastic flows caused by the volcanic activity. in 2003, a
european team of archaeologists launched an excavation project in chronus island. since then,
the project has provided many significant historic insights. in particular the discovery made
in the summer of 2008 astonished the world: the project team excavated several mechanical
watches worn by the victims of the disaster. this indicates that people in chronus island had
such a highly advanced manufacturing technology.
 
shortly after the excavation of the watches, archaeologists in the team tried to identify what
time of the day the disaster happened, but it was not successful due to several difficulties. first,
the extraordinary heat of pyroclastic flows severely damaged the watches and took away the
letters and numbers printed on them. second, every watch has a perfect round form and one
cannot tell where the top of the watch is. lastly, though every watch has three hands, they
have a completely identical look and therefore one cannot tell which is the hour, the minute,
or the second (it is a mystery how the people in chronus island were distinguishing the three hands. some archaeologists
guess that the hands might be painted with different colors, but this is only a hypothesis, as the paint was lost
by the heat.
). this means that we cannot decide the time indicated by a watch uniquely;
there can be a number of candidates. we have to consider different rotations of the watch.
furthermore, since there are several possible interpretations of hands, we have also to consider
all the permutations of hands.
 
you are an information archaeologist invited to the project team and are asked to induce the
most plausible time interval within which the disaster happened, from the set of excavated
watches.
 
in what follows, we express a time modulo 12 hours. we write a time by the notation hh:mm:ss,
where hh, mm, and ss stand for the hour (hh = 00, 01, 02, . . . , 11), the minute (mm = 00,
01, 02, . . . , 59), and the second (ss = 00, 01, 02, . . . , 59), respectively. the time starts from
00:00:00 and counts up every second 00:00:00, 00:00:01, 00:00:02, . . ., but it reverts to 00:00:00
every 12 hours.
 
the watches in chronus island obey the following conventions of modern analog watches.
 a watch has three hands, i.e. the hour hand, the minute hand, and the second hand,
though they look identical as mentioned above. every hand ticks 6 degrees clockwise in a discrete manner. that is, no hand stays between
ticks, and each hand returns to the same position every 60 ticks. the second hand ticks every second. the minute hand ticks every 60 seconds. the hour hand ticks every 12 minutes. 
at the time 00:00:00, all the three hands are located at the same position.
 
because people in chronus island were reasonably keen to keep their watches correct and pyroclastic flows spread over the island quite rapidly, it can be assumed that all the watches were
stopped in a short interval of time. therefore it is highly expected that the time the disaster
happened is in the shortest time interval within which all the excavated watches have at least
one candidate time.
 
you must calculate the shortest time interval and report it to the project team.
 


"
p00867,Digits on the Floor,"
taro attempts to tell digits to hanako by putting straight bars on the floor. taro wants to
express each digit by making one of the forms shown in figure 1.
 
since taro may not have bars of desired lengths, taro cannot always make forms exactly as
shown in figure 1. fortunately, hanako can recognize a form as a digit if the connection
relation between bars in the form is kept. neither the lengths of bars nor the directions of forms
affect hanako’s perception as long as the connection relation remains the same. for example,
hanako can recognize all the awkward forms in figure 2 as digits. on the other hand, hanako
cannot recognize the forms in figure 3 as digits. for clarity, touching bars are slightly separated
in figures 1, 2 and 3. actually, touching bars overlap exactly at one single point.
 
in the forms, when a bar touches another, the touching point is an end of at least one of them.
that is, bars never cross. in addition, the angle of such two bars is always a right angle.
 
to enable taro to represent forms with his limited set of bars, positions and lengths of bars can
be changed as far as the connection relations are kept. also, forms can be rotated.
 
keeping the connection relations means the following.
 separated bars are not made to touch. touching bars are not made separate. when one end of a bar touches another bar, that end still touches the same bar. when it
touches a midpoint of the other bar, it remains to touch a midpoint of the same bar on
the same side.
 the angle of touching two bars is kept to be the same right angle (90 degrees and -90
degrees are considered different, and forms for 2 and 5 are kept distinguished).
 
your task is to find how many times each digit appears on the floor.
 
the forms of some digits always contain the forms of other digits. for example, a form for
9 always contains four forms for 1, one form for 4, and two overlapping forms for 7. in this
problem, ignore the forms contained in another form and count only the digit of the “largest”
form composed of all mutually connecting bars. if there is one form for 9, it should be interpreted
as one appearance of 9 and no appearance of 1, 4, or 7.

 

"
p00868,Spherical Mirrors,"

a long time ago in a galaxy, far, far away, there were n spheres with various radii.
spheres were mirrors, that is, they had reflective surfaces . . . .

 
you are standing at the origin of the galaxy (0, 0, 0), and emit a laser ray to the direction
(u,v, w). the ray travels in a straight line.
 
when the laser ray from i hits the surface of a sphere at q, let n be a point outside of the
sphere on the line connecting the sphere center and q. the reflected ray goes to the direction
towards r that satisfies the following conditions: (1) r is on the plane formed by the three
points i, q and n , (2) &ang; iqn = &ang; nqr, as shown in figure 1.
 
after it is reflected several times, finally it goes beyond our observation. your mission is to write
a program that identifies the last reflection point.
 

"
p00869,Traveling Cube,"
on a small planet named bandai, a landing party of the starship tadamigawa discovered colorful
cubes traveling on flat areas of the planet surface, which the landing party named beds. a cube
appears at a certain position on a bed, travels on the bed for a while, and then disappears. after
a longtime observation, a science officer lt. alyssa ogawa of tadamigawa found the rule how a
cube travels on a bed.
 
a bed is a rectangular area tiled with squares of the same size.

  one of the squares is colored red,   one colored green,   one colored blue,   one colored cyan,   one colored magenta,   one colored yellow,   one or more colored white, and   all others, if any, colored black. 
initially, a cube appears on one of the white squares. the cube’s faces are colored as follows.
 
the cube can roll around a side of the current square at a step and thus rolls on to an adjacent
square. when the cube rolls on to a chromatically colored (red, green, blue, cyan, magenta or
yellow) square, the top face of the cube after the roll should be colored the same. when the
cube rolls on to a white square, there is no such restriction. the cube should never roll on to a
black square.
 
throughout the travel, the cube can visit each of the chromatically colored squares only once,
and any of the white squares arbitrarily many times. as already mentioned, the cube can never
visit any of the black squares. on visit to the final chromatically colored square, the cube
disappears. somehow the order of visits to the chromatically colored squares is known to us
before the travel starts.
 
your mission is to find the least number of steps for the cube to visit all the chromatically
colored squares in the given order.

 

"
p00870,Search of Concatenated Strings,"
the amount of information on the world wide web is growing quite rapidly. in this information
explosion age, we must survive by accessing only the web pages containing information relevant
to our own needs. one of the key technologies for this purpose is keyword search. by using
well-known search engines, we can easily access those pages containing useful information about
the topic we want to know.
 
there are many variations in keyword search problems. if a single string is searched in a given
text, the problem is quite easy. if the pattern to be searched consists of multiple strings, or
is given by some powerful notation such as regular expressions, the task requires elaborate
algorithms to accomplish efficiently.
 
in our problem, a number of strings (element strings) are given, but they are not directly
searched for. concatenations of all the element strings in any order are the targets of the search
here.
 
for example, consider three element strings aa, b and ccc are given. in this case, the following
six concatenated strings are the targets of the search, i.e. they should be searched in the text.
 
the text may contain several occurrences of these strings. you are requested to count the
number of occurrences of these strings, or speaking more precisely, the number of positions of
occurrences in the text.
 
two or more concatenated strings may be identical. in such cases, it is necessary to consider
subtle aspects of the above problem statement. for example, if two element strings are x and
xx, the string xxx is an occurrence of both the concatenation of x and xx and that of xx and x.
since the number of positions of occurrences should be counted, this case is counted as one, not
two.
 
two occurrences may overlap. for example, the string xxxx has occurrences of the concatenation
xxx in two different positions. this case is counted as two.
 

"
p00871,Top Spinning,"
spinning tops are one of the most popular and the most traditional toys. not only spinning
them, but also making one’s own is a popular enjoyment.
 
one of the easiest way to make a top is to cut out a certain shape from a cardboard and pierce
an axis stick through its center of mass. professionally made tops usually have three dimensional
shapes, but in this problem we consider only two dimensional ones.
 
usually, tops have rotationally symmetric shapes, such as a circle, a rectangle (with 2-fold
rotational symmetry) or a regular triangle (with 3-fold symmetry). although such symmetries
are useful in determining their centers of mass, they are not definitely required; an asymmetric
top also spins quite well if its axis is properly pierced at the center of mass.
 
when a shape of a top is given as a path to cut it out from a cardboard of uniform thickness,
your task is to find its center of mass to make it spin well. also, you have to determine whether
the center of mass is on the part of the cardboard cut out. if not, you cannot pierce the axis
stick, of course.
 
<!--
java specific: submitted java programs may not use classes implementing the interface
“java.awt.shape”. you may use them for your debugging purposes.
-->


"
p00872,Common Polynomial,"
math teacher mr. matsudaira is teaching expansion and factoring of polynomials to his students.
last week he instructed the students to write two polynomials (with a single variable x), and
to report gcm (greatest common measure) of them as a homework, but he found it boring to
check their answers manually. so you are asked to write a program to check the answers.
 
hereinafter, only those polynomials with integral coefficients, called integral polynomials, are
considered.
 
when two integral polynomials a and b are given, an integral polynomial c is a common factor
of a and b if there are some integral polynomials x and y such that a = cx and b = cy.
 
gcm of two integral polynomials is a common factor which has the highest degree (for x, here);
you have to write a program which calculates the gcm of two polynomials.
 
it is known that gcm of given two polynomials is unique when constant multiplication factor is
ignored. that is, when c and d are both gcm of some two polynomials a and b, p &times c = q &times; d
for some nonzero integers p and q.
 

"
p00873,Zigzag,"
given several points on a plane, let’s try to solve a puzzle connecting them with a zigzag line.
the puzzle is to find the zigzag line that passes through all the given points with the minimum
number of turns. moreover, when there are several zigzag lines with the minimum number of
turns, the shortest one among them should be found.
 
for example, consider nine points given in figure 1.
 figure 1: given nine points 
a zigzag line is composed of several straight line segments. here, the rule requests that each
line segment should pass through two or more given points.
 
a zigzag line may turn at some of the given points or anywhere else. there may be some given
points passed more than once.
 figure 2: zigzag lines with three turning points. 
two zigzag lines with three turning points are depicted in figure 2 (a) and (b) for the same
set of given points shown in figure 1. the length of the zigzag line in figure 2 (a) is shorter than that in figure 2 (b). in fact, the length of the zigzag line in figure 2 (a) is the shortest
so that it is the solution for the nine points given in figure 1.
 
another zigzag line with four turning points is depicted in figure 3. its length is shorter than
those in figure 2, however, the number of turning points is greater than those in figure 2,
and thus, it is not the solution.
 figure 3: zigzag line with four turning points. 
there are two zigzag lines that passes another set of given points depicted in figure 4 (a) and
(b).
 
both have the same number of turning points, and the line in (a) is longer than that in (b).
however, the solution is (a), because one of the segments of the zigzag line in (b) passes only
one given point, violating the rule.
 figure 4: zigzag line with two turning points (a), and not a zigzag line concerned (b). 
your job is to write a program that solves this puzzle.
 

"
p00874,Cubist Artwork,"
international center for picassonian cubism is a spanish national museum of cubist artworks,
dedicated to pablo picasso. the center held a competition for an artwork that will be displayed
in front of the facade of the museum building. the artwork is a collection of cubes that are
piled up on the ground and is intended to amuse visitors, who will be curious how the shape of
the collection of cubes changes when it is seen from the front and the sides.
 
the artwork is a collection of cubes with edges of one foot long and is built on a flat ground
that is divided into a grid of one foot by one foot squares. due to some technical reasons, cubes
of the artwork must be either put on the ground, fitting into a unit square in the grid, or put
on another cube in the way that the bottom face of the upper cube exactly meets the top face
of the lower cube. no other way of putting cubes is possible.
 
you are a member of the judging committee responsible for selecting one out of a plenty of
artwork proposals submitted to the competition. the decision is made primarily based on
artistic quality but the cost for installing the artwork is another important factor. your task is
to investigate the installation cost for each proposal. the cost is proportional to the number of
cubes, so you have to figure out the minimum number of cubes needed for installation.
 
each design proposal of an artwork consists of the front view and the side view (the view seen
from the right-hand side), as shown in figure 1.
 figure 1: an example of an artwork proposal 
the front view (resp., the side view) indicates the maximum heights of piles of cubes for each
column line (resp., row line) of the grid.
 
there are several ways to install this proposal of artwork, such as the following figures.
 
in these figures, the dotted lines on the ground indicate the grid lines. the left figure makes use
of 16 cubes, which is not optimal. that is, the artwork can be installed with a fewer number
of cubes. actually, the right one is optimal and only uses 13 cubes. note that, a single pile of
height three in the right figure plays the roles of two such piles in the left one.
 
notice that swapping columns of cubes does not change the side view. similarly, swapping
rows does not change the front view. thus, such swaps do not change the costs of building the
artworks.
 
for example, consider the artwork proposal given in figure 2.
 figure 2: another example of artwork proposal 
an optimal installation of this proposal of artwork can be achieved with 13 cubes, as shown
in the following figure, which can be obtained by exchanging the rightmost two columns of the
optimal installation of the artwork of figure 1.
 








"
p00875,Repeated Substitution with Sed,"
do you know ""sed,"" a tool provided with unix? its most popular use is to substitute every
occurrence of a string  contained in the input string (actually each input line) with another
string &beta;. more precisely, it proceeds as follows.
  within the input string, every non-overlapping (but possibly adjacent) occurrences of &alpha; are
      marked. if there is more than one possibility for non-overlapping matching, the leftmost
      one is chosen.  each of the marked occurrences is substituted with &beta; to obtain the output string; other
      parts of the input string remain intact. 
for example, when &alpha; is ""aa"" and &beta; is ""bca"", an input string ""aaxaaa"" will produce ""bcaxbcaa"",
but not ""aaxbcaa"" nor ""bcaxabca"". further application of the same substitution to the string
""bcaxbcaa"" will result in ""bcaxbcbca"", but this is another substitution, which is counted as the
second one.
 
in this problem, a set of substitution pairs (&alpha;i, &beta;i) (i = 1, 2, ... , n), an initial string &gamma;, and a
final string &delta; are given, and you must investigate how to produce &delta; from &gamma; with a minimum
number of substitutions. a single substitution (&alpha;i, &beta;i) here means simultaneously substituting
all the non-overlapping occurrences of &alpha;i, in the sense described above, with &beta;i.
 
you may use a specific substitution (&alpha;i, &beta;i ) multiple times, including zero times.
 

"
p00876,Swimming Jam,"
despite urging requests of the townspeople, the municipal office cannot afford to improve many
of the apparently deficient city amenities under this recession. the city swimming pool is one
of the typical examples. it has only two swimming lanes. the municipal fitness agency, under
this circumstances, settled usage rules so that the limited facilities can be utilized fully.
 
two lanes are to be used for one-way swimming of different directions. swimmers are requested
to start swimming in one of the lanes, from its one end to the other, and then change the lane to
swim his/her way back. when he or she reaches the original starting end, he/she should return
to his/her initial lane and starts swimming again.
 
each swimmer has his/her own natural constant pace. swimmers, however, are not permitted
to pass other swimmers except at the ends of the pool; as the lanes are not wide enough, that
might cause accidents. if a swimmer is blocked by a slower swimmer, he/she has to follow the
slower swimmer at the slower pace until the end of the lane is reached. note that the blocking
swimmer’s natural pace may be faster than the blocked swimmer; the blocking swimmer might
also be blocked by another swimmer ahead, whose natural pace is slower than the blocked
swimmer. blocking would have taken place whether or not a faster swimmer was between them.
 
swimmers can change their order if they reach the end of the lane simultaneously. they change
their order so that ones with faster natural pace swim in front. when a group of two or more
swimmers formed by a congestion reaches the end of the lane, they are considered to reach there
simultaneously, and thus change their order there.
 
the number of swimmers, their natural paces in times to swim from one end to the other, and
the numbers of laps they plan to swim are given. note that here one ""lap"" means swimming
from one end to the other and then swimming back to the original end. your task is to calculate
the time required for all the swimmers to finish their plans. all the swimmers start from the
same end of the pool at the same time, the faster swimmers in front.
 
in solving this problem, you can ignore the sizes of swimmers' bodies, and also ignore the time
required to change the lanes and the order in a group of swimmers at an end of the lanes.
 

"
p00877,Separate Points,"
numbers of black and white points are placed on a plane. let's imagine that a straight line
of infinite length is drawn on the plane. when the line does not meet any of the points, the
line divides these points into two groups. if the division by such a line results in one group
consisting only of black points and the other consisting only of white points, we say that the
line ""separates black and white points"".
 
let's see examples in figure 3. in the leftmost example, you can easily find that the black and
white points can be perfectly separated by the dashed line according to their colors. in the
remaining three examples, there exists no such straight line that gives such a separation.
 figure 3: example planes 
in this problem, given a set of points with their colors and positions, you are requested to decide
whether there exists a straight line that separates black and white points.
 


"
p00878,Hole,"
origami is the traditional japanese art of paper folding. one day, professor egami found the
message board decorated with some pieces of origami works pinned on it, and became interested
in the pinholes on the origami paper. your mission is to simulate paper folding and pin punching
on the folded sheet, and calculate the number of pinholes on the original sheet when unfolded.
 
a sequence of folding instructions for a flat and square piece of paper and a single pinhole
position are specified. as a folding instruction, two points p and q are given. the paper should
be folded so that p touches q from above (figure 4). to make a fold, we first divide the sheet
into two segments by creasing the sheet along the folding line, i.e., the perpendicular bisector
of the line segment pq, and then turn over the segment containing p onto the other. you can
ignore the thickness of the paper.
 figure 4: simple case of paper folding 
the original flat square piece of paper is folded into a structure consisting of layered paper
segments, which are connected by linear hinges. for each instruction, we fold one or more paper
segments along the specified folding line, dividing the original segments into new smaller ones.
the folding operation turns over some of the paper segments (not only the new smaller segments
but also some other segments that have no intersection with the folding line) to the reflective
position against the folding line. that is, for a paper segment that intersects with the folding
line, one of the two new segments made by dividing the original is turned over; for a paper
segment that does not intersect with the folding line, the whole segment is simply turned over.
 
the folding operation is carried out repeatedly applying the following rules, until we have no
segment to turn over.
   rule 1: the uppermost segment that contains p must be turned over.  rule 2: if a hinge of a segment is moved to the other side of the folding line by the
  operation, any segment that shares the same hinge must be turned over. rule 3: if two paper segments overlap and the lower segment is turned over, the upper
segment must be turned over too. 
in the examples shown in figure 5, (a) and (c) show cases where only rule 1 is applied. (b)
shows a case where rule 1 and 2 are applied to turn over two paper segments connected by a
hinge, and (d) shows a case where rule 1, 3 and 2 are applied to turn over three paper segments.
 figure 5: different cases of folding 
after processing all the folding instructions, the pinhole goes through all the layered segments
of paper at that position. in the case of figure 6, there are three pinholes on the unfolded sheet
of paper.
 figure 6: number of pinholes on the unfolded sheet 


"
p00879,Chemist's Math,"
you have probably learnt chemical equations (chemical reaction formulae) in your high-school
days. the following are some well-known equations.
 
while equations (1)–(3) all have balanced left-hand sides and right-hand sides, the following
ones do not.
 

the equations must follow the law of conservation of mass; the quantity of each chemical element
(such as h, o, ca, al) should not change with chemical reactions. so we should ""adjust"" the
numbers of molecules on the left-hand side and right-hand side:
 
the coefficients of equation (6) are (4, 3, 2) from left to right, and those of equation (7) are
(1, 5, 3, 4) from left to right. note that the coefficient 1 may be omitted from chemical equations.
 
the coefficients of a correct equation must satisfy the following conditions.
  the coefficients are all positive integers.  the coefficients are relatively prime, that is, their greatest common divisor (g.c.d.) is 1.  the quantities of each chemical element on the left-hand side and the right-hand side are
   equal. 
conversely, if a chemical equation satisfies the above three conditions, we regard it as a correct
equation, no matter whether the reaction or its constituent molecules can be chemically realized
in the real world, and no matter whether it can be called a reaction (e.g., h2 &rarr; h2 is considered
correct). a chemical equation satisfying conditions 1 and 3 (but not necessarily condition 2)
is called a balanced equation.
 
your goal is to read in chemical equations with missing coefficients like equation (4) and (5),
line by line, and output the sequences of coefficients that make the equations correct.
 
note that the above three conditions do not guarantee that a correct equation is uniquely
determined. for example, if we ""mix"" the reactions generating h2o and nh3 , we would get
 
but (x, y, z, u, v, w) = (2, 1, 1, 3, 2, 2) does not represent a unique correct equation; for instance,
(4, 2, 1, 3, 4, 2) and (4, 2, 3, 9, 4, 6) are also ""correct"" according to the above definition! however,
we guarantee that every chemical equation we give you will lead to a unique correct equation by
adjusting their coefficients. in other words, we guarantee that (i) every chemical equation can be
balanced with positive coefficients, and that (ii) all balanced equations of the original equation
can be obtained by multiplying the coefficients of a unique correct equation by a positive integer.

 

"
p00880,Malfatti Circles,"
the configuration of three circles packed inside a triangle such that each circle is tangent to the
other two circles and to two of the edges of the triangle has been studied by many mathematicians
for more than two centuries. existence and uniqueness of such circles for an arbitrary triangle
are easy to prove. many methods of numerical calculation or geometric construction of such
circles from an arbitrarily given triangle have been discovered. today, such circles are called the
malfatti circles.
 
figure 7 illustrates an example. the malfatti circles of the triangle with the vertices (20, 80),
(-40, -20) and (120, -20) are approximately
  the circle with the center (24.281677, 45.219486) and the radius 21.565935,  the circle with the center (3.110950, 4.409005) and the radius 24.409005, and  the circle with the center (54.556724, 7.107493) and the radius 27.107493. 
figure 8 illustrates another example. the malfatti circles of the triangle with the vertices
(20, -20), (120, -20) and (-40, 80) are approximately
  the circle with the center (25.629089, −10.057956) and the radius 9.942044,  the circle with the center (53.225883, −0.849435) and the radius 19.150565, and  the circle with the center (19.701191, 19.203466) and the radius 19.913790. 
your mission is to write a program to calculate the radii of the malfatti circles of the given
triangles.
 







"
p00881,Twenty Questions,"
consider a closed world and a set of features that are defined for all the objects in the world.
each feature can be answered with ""yes"" or ""no"". using those features, we can identify any
object from the rest of the objects in the world. in other words, each object can be represented
as a fixed-length sequence of booleans. any object is different from other objects by at least
one feature.
 
you would like to identify an object from others. for this purpose, you can ask a series of
questions to someone who knows what the object is. every question you can ask is about one
of the features. he/she immediately answers each question with ""yes"" or ""no"" correctly. you
can choose the next question after you get the answer to the previous question.
 
you kindly pay the answerer 100 yen as a tip for each question. because you don' t have surplus
money, it is necessary to minimize the number of questions in the worst case. you don’t know
what is the correct answer, but fortunately know all the objects in the world. therefore, you
can plan an optimal strategy before you start questioning.
 
the problem you have to solve is: given a set of boolean-encoded objects, minimize the maximum
number of questions by which every object in the set is identifiable.
 

"
p00882,Hobby on Rails,"
icpc (international connecting points company) starts to sell a new railway toy. it consists
of a toy tramcar and many rail units on square frames of the same size. there are four types
of rail units, namely, straight (s), curve (c), left-switch (l) and right-switch (r) as shown in
figure 9. a switch has three ends, namely, branch/merge-end (b/m-end), straight-end (s-end)
and curve-end (c-end).
 
a switch is either in ""through"" or ""branching"" state. when the tramcar comes from b/m-end,
and if the switch is in the through-state, the tramcar goes through to s-end and the state changes
to branching; if the switch is in the branching-state, it branches toward c-end and the state
changes to through. when the tramcar comes from s-end or c-end, it goes out from b/m-end
regardless of the state. the state does not change in this case.
 
kids are given rail units of various types that fill a rectangle area of w &times; h, as shown in fig-
ure 10(a). rail units meeting at an edge of adjacent two frames are automatically connected.
each rail unit may be independently rotated around the center of its frame by multiples of 90
degrees in order to change the connection of rail units, but its position cannot be changed.
 
kids should make ""valid"" layouts by rotating each rail unit, such as getting figure 10(b) from
figure 10(a). a layout is valid when all rails at three ends of every switch are directly or
indirectly connected to an end of another switch or itself. a layout in figure 10(c) is invalid as
well as figure 10(a). invalid layouts are frowned upon.
 
when a tramcar runs in a valid layout, it will eventually begin to repeat the same route forever.
that is, we will eventually find the tramcar periodically comes to the same running condition,
which is a triple of the tramcar position in the rectangle area, its direction, and the set of the
states of all the switches.
 
a periodical route is a sequence of rail units on which the tramcar starts from a rail unit with
a running condition and returns to the same rail unit with the same running condition for the first time. a periodical route through a switch or switches is called the ""fun route"", since kids
like the rattling sound the tramcar makes when it passes through a switch. the tramcar takes
the same unit time to go through a rail unit, not depending on the types of the unit or the
tramcar directions. after the tramcar starts on a rail unit on a “fun route”, it will come back to
the same unit with the same running condition, sooner or later. the fun time t of a fun route
is the number of time units that the tramcar takes for going around the route.
 
of course, kids better enjoy layouts with longer fun time. given a variety of rail units placed
on a rectangular area, your job is to rotate the given rail units appropriately and to find the fun
route with the longest fun time in the valid layouts.
 
for example, there is a fun route in figure 10(b). its fun time is 24. let the toy tramcar start
from b/m-end at (1, 2) toward (1, 3) and the states of all the switches are the through-states. it
goes through (1, 3), (1, 4), (1, 5), (2, 5), (2, 4), (1, 4), (1, 3), (1, 2), (1, 1), (2, 1), (2, 2) and (1, 2).
here, the tramcar goes through (1, 2) with the same position and the same direction, but with
the different states of the switches. then the tramcar goes through (1, 3), (1, 4), (2, 4), (2, 5),
(1, 5), (1, 4), (1, 3), (1, 2), (2, 2), (2, 1), (1, 1) and (1, 2). here, the tramcar goes through (1, 2)
again, but with the same switch states as the initial ones. counting the rail units the tramcar
visited, the tramcar should have run 24 units of time after its start, and thus the fun time is 24.
 
there may be many valid layouts with the given rail units. for example, a valid layout containing
a fun route with the fun time 120 is shown in figure 11(a). another valid layout containing a
fun route with the fun time 148 derived from that in figure 11(a) is shown in figure 11(b). the
four rail units whose rotations are changed from figure 11(a) are indicated by the thick lines.
 
a valid layout depicted in figure 12(a) contains two fun routes, where one consists of the rail
units (1, 1), (2, 1), (3, 1), (4, 1), (4, 2), (3, 2), (2, 2), (1, 2) with t = 8, and the other consists of
all the remaining rail units with t = 18.
 
another valid layout depicted in figure 12(b) has two fun routes whose fun times are t = 12
and t = 20. the layout in figure 12(a) is different from that in figure 12(b) at the eight rail
units rotated by multiples of 90 degrees. there are other valid layouts with some rotations of
rail units but there is no fun route with the fun time longer than 20, so that the longest fun
time for this example (figure 12) is 20.
 

note that there may be simple cyclic routes that do not go through any switches in a valid
layout, which are not counted as the fun routes. in figure 13, there are two fun routes and one
simple cyclic route. their fun times are 12 and 14, respectively. the required time for going
around the simple cyclic route is 20 that is greater than fun times of the fun routes. however,
the longest fun time is still 14.
 







"
p00883,Infected Land,"
the earth is under an attack of a deadly virus. luckily, prompt actions of the ministry of
health against this emergency successfully confined the spread of the infection within a square
grid of areas. recently, public health specialists found an interesting pattern with regard to the
transition of infected areas. at each step in time, every area in the grid changes its infection
state according to infection states of its directly (horizontally, vertically, and diagonally) adjacent
areas.
  an infected area continues to be infected if it has two or three adjacent infected areas.  an uninfected area becomes infected if it has exactly three adjacent infected areas.  an area becomes free of the virus, otherwise. 
your mission is to fight against the virus and disinfect all the areas. the ministry of health
lets an anti-virus vehicle prototype under your command. the functionality of the vehicle is
summarized as follows.
  at the beginning of each time step, you move the vehicle to one of the eight adjacent areas.
      the vehicle is not allowed to move to an infected area (to protect its operators from the
      virus). it is not allowed to stay in the same area.  following vehicle motion, all the areas, except for the area where the vehicle is in, change
      their infection states according to the transition rules described above.
      special functionality of the vehicle protects its area from virus infection even if the area
      is adjacent to exactly three infected areas. unfortunately, this virus-protection capability
      of the vehicle does not last. once the vehicle leaves the area, depending on the infection
      states of the adjacent areas, the area can be infected.
      the area where the vehicle is in, which is uninfected, has the same effect to its adjacent
      areas as an infected area as far as the transition rules are concerned. 
the following series of figures illustrate a sample scenario that successfully achieves the goal.
 
initially, your vehicle denoted by @ is found at (1, 5) in a 5 &times; 5-grid of areas, and you see some
infected areas which are denoted by #'s.
 
firstly, at the beginning of time step 1, you move your vehicle diagonally to the southwest,
that is, to the area (2, 4). note that this vehicle motion was possible because this area was not
infected at the start of time step 1.
 
following this vehicle motion, infection state of each area changes according to the transition
rules. the column ""1-end"" of the figure illustrates the result of such changes at the end of time
step 1. note that the area (3, 3) becomes infected because there were two adjacent infected areas
and the vehicle was also in an adjacent area, three areas in total.
 
in time step 2, you move your vehicle to the west and position it at (2, 3).
 
then infection states of other areas change. note that even if your vehicle had exactly three
infected adjacent areas (west, southwest, and south), the area that is being visited by the vehicle
is not infected. the result of such changes at the end of time step 2 is as depicted in ""2-end"".
 
finally, in time step 3, you move your vehicle to the east. after the change of the infection
states, you see that all the areas have become virus free! this completely disinfected situation
is the goal. in the scenario we have seen, you have successfully disinfected all the areas in three
time steps by commanding the vehicle to move (1) southwest, (2) west, and (3) east.
 
your mission is to find the length of the shortest sequence(s) of vehicle motion commands that
can successfully disinfect all the areas.
 

"
p00884,Membership Management,"
peter is a senior manager of agile change management (acm) inc., where each employee is a member of one or more task groups. since acm is agile, task groups are often reorganized and their members frequently change, so membership management is his constant headache.
 
peter updates the membership information whenever any changes occur: for instance, the following line written by him means that carol and alice are the members of the design group.
 
the name preceding the colon is the group name and the names following it specify its members.
 
a smaller task group may be included in a larger one. so, a group name can appear as a member of another group, for instance, as follows. 
 
simply unfolding the design above gives the following membership specification, which is equivalent to the original.
 
in this case, however, alice occurs twice. after removing one of the duplicates, we have the following more concise specification.
 
your mission in this problem is to write a program that, given group specifications, identifies group members.
 
note that peter's specifications can include deeply nested groups. in the following, for instance, the group one contains a single member dave.
 


one:another.
another:yetanother.
yetanother:dave.



"
p00885,Balloon Collecting,"
""balloons should be captured efficiently"", the game designer says. he is designing an oldfashioned game with two dimensional graphics. in the game, balloons fall onto the ground one after another, and the player manipulates a robot vehicle on the ground to capture the balloons. the player can control the vehicle to move left or right, or simply stay. when one of the balloons reaches the ground, the vehicle and the balloon must reside at the same position, otherwise the balloon will burst and the game ends.
 
figure b.1: robot vehicle and falling balloons
 
the goal of the game is to store all the balloons into the house at the left end on the game field. the vehicle can carry at most three balloons at a time, but its speed changes according to the number of the carrying balloons. when the vehicle carries k balloons (k = 0, 1, 2, 3), it takes k+1 units of time to move one unit distance. the player will get higher score when the total moving distance of the vehicle is shorter.
 
your mission is to help the game designer check game data consisting of a set of balloons. given a landing position (as the distance from the house) and a landing time of each balloon, you must judge whether a player can capture all the balloons, and answer the minimum moving distance needed to capture and store all the balloons. the vehicle starts from the house. if the player cannot capture all the balloons, you must identify the first balloon that the player cannot capture.
 


"
p00886,Towns along a Highway,"
there are several towns on a highway. the highway has no forks. given the distances between the neighboring towns, we can calculate all distances from any town to others. for example, given five towns (a, b, c, d and e) and the distances between neighboring towns like in figure c.1, we can calculate the distance matrix as an upper triangular matrix containing the distances between all pairs of the towns, as shown in figure c.2.
 figure c.1: an example of towns figure c.2: the distance matrix for figure c.1 
in this problem, you must solve the inverse problem. you know only the distances between all pairs of the towns, that is, n(n - 1)/2 numbers in the above matrix. then, you should recover the order of the towns and the distances from each town to the next.
 

"
p00887,Awkward Lights,"
you are working as a night watchman in an office building. your task is to check whether all the lights in the building are turned off after all the office workers in the building have left the office. if there are lights that are turned on, you must turn off those lights. this task is not as easy as it sounds to be because of the strange behavior of the lighting system of the building as described below. although an electrical engineer checked the lighting system carefully, he could not determine the cause of this behavior. so you have no option but to continue to rely on this system for the time being.
 
each floor in the building consists of a grid of square rooms. every room is equipped with one light and one toggle switch. a toggle switch has two positions but they do not mean fixed on/off. when the position of the toggle switch of a room is changed to the other position, in addition to that room, the on/off states of the lights of the rooms at a certain manhattan distance from that room are reversed. the manhattan distance between the room at (x1, y1) of a grid of rooms and the room at (x2, y2) is given by |x1 - x2| + |y1 - y2|. for example, if the position of the toggle switch of the room at (2, 2) of a 4 &times; 4 grid of rooms is changed and the given manhattan distance is two, the on/off states of the lights of the rooms at (1, 1), (1, 3), (2, 4), (3, 1), (3, 3), and (4, 2) as well as at (2, 2) are reversed as shown in figure d.1, where black and white squares represent the on/off states of the lights.
 
figure d.1: an example behavior of the lighting system
 
your mission is to write a program that answer whether all the lights on a floor can be turned off.
 

"
p00888,The Two Men of the Japanese Alps,"
two experienced climbers are planning a first-ever attempt: they start at two points of the equal altitudes on a mountain range, move back and forth on a single route keeping their altitudes equal, and finally meet with each other at a point on the route. a wise man told them that if a route has no point lower than the start points (of the equal altitudes) there is at least a way to achieve the attempt. this is the reason why the two climbers dare to start planning this fancy attempt.
 
the two climbers already obtained altimeters (devices that indicate altitude) and communication devices that are needed for keeping their altitudes equal. they also picked up a candidate route for the attempt: the route consists of consequent line segments without branches; the two starting points are at the two ends of the route; there is no point lower than the two starting points of the equal altitudes. an illustration of the route is given in figure e.1 (this figure corresponds to the first dataset of the sample input).
 
figure e.1: an illustration of a route
 
the attempt should be possible for the route as the wise man said. the two climbers, however, could not find a pair of move sequences to achieve the attempt, because they cannot keep their altitudes equal without a complex combination of both forward and backward moves. for example, for the route illustrated above: a climber starting at p1 (say a) moves to s, and the other climber (say b) moves from p6 to p5; then a moves back to t while b moves to p4; finally a arrives at p3 and at the same time b also arrives at p3. things can be much more complicated and thus they asked you to write a program to find a pair of move sequences for them.
 
there may exist more than one possible pair of move sequences, and thus you are requested to find the pair of move sequences with the shortest length sum. here, we measure the length along the route surface, i.e., an uphill path from (0, 0) to (3, 4) has the length of 5.
 


"
p00889,Find the Multiples,"
you are given a sequence a0a1...an-1 digits and a prime number q. for each i &le; j with ai &ne; 0, the subsequence aiai+1...aj can be read as a decimal representation of a positive integer. subsequences with leading zeros are not considered. your task is to count the number of pairs (i, j) such that the corresponding subsequence is a multiple of q.
 

"
p00890,Test Case Tweaking,"
you are a judge of a programming contest. you are preparing a dataset for a graph problem to seek for the cost of the minimum cost path. you've generated some random cases, but they are not interesting. you want to produce a dataset whose answer is a desired value such as the number representing this year 2010. so you will tweak (which means 'adjust') the cost of the minimum cost path to a given value by changing the costs of some edges. the number of changes should be made as few as possible.
 
a non-negative integer c and a directed graph g are given. each edge of g is associated with a cost of a non-negative integer. given a path from one node of g to another, we can define the cost of the path as the sum of the costs of edges constituting the path. given a pair of nodes in g, we can associate it with a non-negative cost which is the minimum of the costs of paths connecting them.
 
given a graph and a pair of nodes in it, you are asked to adjust the costs of edges so that the minimum cost path from one node to the other will be the given target cost c. you can assume that c is smaller than the cost of the minimum cost path between the given nodes in the original graph.
 
for example, in figure g.1, the minimum cost of the path from node 1 to node 3 in the given graph is 6. in order to adjust this minimum cost to 2, we can change the cost of the edge from node 1 to node 3 to 2. this direct edge becomes the minimum cost path after the change. 
 
for another example, in figure g.2, the minimum cost of the path from node 1 to node 12 in the given graph is 4022. in order to adjust this minimum cost to 2010, we can change the cost of the edge from node 6 to node 12 and one of the six edges in the right half of the graph. there are many possibilities of edge modification, but the minimum number of modified edges is 2.
 

"
p00891,Where's Wally,"
do you know the famous series of children's books named ""where's wally""? each of the books contains a variety of pictures of hundreds of people. readers are challenged to find a person called wally in the crowd.
 
we can consider ""where's wally"" as a kind of pattern matching of two-dimensional graphical images. wally's figure is to be looked for in the picture. it would be interesting to write a computer program to solve ""where's wally"", but this is not an easy task since wally in the pictures may be slightly different in his appearances. we give up the idea, and make the problem much easier to solve. you are requested to solve an easier version of the graphical pattern matching problem.
 
an image and a pattern are given. both are rectangular matrices of bits (in fact, the pattern is always square-shaped). 0 means white, and 1 black. the problem here is to count the number of occurrences of the pattern in the image, i.e. the number of squares in the image exactly matching the pattern. patterns appearing rotated by any multiples of 90 degrees and/or turned over forming a mirror image should also be taken into account.
 


"
p00892,Intersection of Two Prisms,"
suppose that p1 is an infinite-height prism whose axis is parallel to the z-axis, and p2 is also an infinite-height prism whose axis is parallel to the y-axis. p1 is defined by the polygon c1 which is the cross section of p1 and the xy-plane, and p2 is also defined by the polygon c2 which is the cross section of p2 and the xz-plane.
 
figure i.1 shows two cross sections which appear as the first dataset in the sample input, and
figure i.2 shows the relationship between the prisms and their cross sections.
 figure i.1: cross sections of prisms figure i.2: prisms and their cross sections figure i.3: intersection of two prisms 
figure i.3 shows the intersection of two prisms in figure i.2, namely, p1 and p2.
 
write a program which calculates the volume of the intersection of two prisms.
 


"
p00893,Matrix Calculator,"
dr. jimbo, an applied mathematician, needs to calculate matrices all day for solving his own problems. in his laboratory, he uses an excellent application program for manipulating matrix expressions, however, he cannot use it outside his laboratory because the software consumes much of resources. he wants to manipulate matrices outside, so he needs a small program similar to the excellent application for his handheld computer. 
 
your job is to provide him a program that computes expressions of matrices.
 
expressions of matrices are described in a simple language. its syntax is shown in table j.1. note that even a space and a newline have meaningful roles in the syntax.
 
the start symbol of this syntax is program that is defined as a sequence of assignments in table j.1. each assignment has a variable on the left hand side of an equal symbol (""="") and an expression of matrices on the right hand side followed by a period and a newline (nl). it denotes an assignment of the value of the expression to the variable. the variable (var in table j.1) is indicated by an uppercase roman letter. the value of the expression (expr) is a matrix or a scalar, whose elements are integers. here, a scalar integer and a 1 &times; 1 matrix whose only element is the same integer can be used interchangeably.
 
an expression is one or more terms connected by ""+"" or ""-"" symbols. a term is one or more factors connected by ""*"" symbol. these operators (""+"", ""-"", ""*"") are left associative.
 
a factor is either a primary expression (primary) or a ""-"" symbol followed by a factor. this unary operator ""-"" is right associative.
 
the meaning of operators are the same as those in the ordinary arithmetic on matrices: denoting matrices by a and b, a + b, a - b, a * b, and -a are defined as the matrix sum, difference, product, and negation. the sizes of a and b should be the same for addition and subtraction. the number of columns of a and the number of rows of b should be the same for multiplication.
 
note that all the operators +, -, * and unary - represent computations of addition, subtraction, multiplication and negation modulo m = 215 = 32768, respectively. thus all the values are nonnegative integers between 0 and 32767, inclusive. for example, the result of an expression 2 - 3 should be 32767, instead of -1.
 
inum is a non-negative decimal integer less than m.
 
var represents the matrix that is assigned to the variable var in the most recent preceding assignment statement of the same variable.
 
matrix represents a mathematical matrix similar to a 2-dimensional array whose elements are integers. it is denoted by a row-seq with a pair of enclosing square brackets. row-seq represents a sequence of rows, adjacent two of which are separated by a semicolon. row represents a sequence of expressions, adjacent two of which are separated by a space character.
 
for example, [1 2 3;4 5 6] represents a matrix . the first row has three integers separated by two space characters, i.e. ""1 2 3"". the second row has three integers, i.e. ""4 5 6"". here, the row-seq consists of the two rows separated by a semicolon. the matrix is denoted by the row-seq with a pair of square brackets.
 
note that elements of a row may be matrices again. thus the nested representation of a matrix may appear. the number of rows of the value of each expression of a row should be the same, and the number of columns of the value of each row of a row-seq should be the same.
 
for example, a matrix represented by
 
is  the sizes of matrices should be consistent, as mentioned above, in order to form a well-formed matrix as the result. for example, [[1 2;3 4] [5;6;7];6 7 8] is not consistent since the first row ""[1 2;3 4] [5;6;7]"" has two matrices (2 &times; 2 and 3 &times; 1) whose numbers of rows are different. [1 2;3 4 5] is not consistent since the number of columns of two rows are different.
 
the multiplication of 1 &times; 1 matrix and m &times; n matrix is well-defined for arbitrary m &gt; 0 and n &gt; 0, since a 1 &times; 1 matrices can be regarded as a scalar integer. for example, 2*[1 2;3 4] and [1 2;3 4]*3 represent the products of a scalar and a matrix  and . [2]*[1 2;3 4] and [1 2;3 4]*[3] are also well-defined similarly.
 
an indexed-primary is a primary expression followed by two expressions as indices. the first index is 1 &times; k integer matrix denoted by (i1 i2 ... ik), and the second index is 1 &times; l integer matrix denoted by (j1 j2 ... jl). the two indices specify the submatrix extracted from the matrix which is the value of the preceding primary expression. the size of the submatrix is k &times; l and whose (a, b)-element is the (ia, jb)-element of the value of the preceding primary expression. the way of indexing is one-origin, i.e., the first element is indexed by 1.
 
for example, the value of ([1 2;3 4]+[3 0;0 2])([1],[2]) is equal to 2, since the value of its primary expression is a matrix [4 2;3 6], and the first index [1] and the second [2] indicate the (1, 2)-element of the matrix. the same integer may appear twice or more in an index matrix, e.g., the first index matrix of an expression [1 2;3 4]([2 1 1],[2 1]) is [2 1 1], which has two 1's. its value is .
 
a transposed-primary is a primary expression followed by a single quote symbol (""'""), which indicates the transpose operation. the transposed matrix of an m &times; n matrix a = (aij) (i = 1, ..., m and j = 1, ... , n) is the n &times; m matrix b = (bij) (i = 1, ... , n and j = 1, ... , m), where bij = aji. for example, the value of [1 2;3 4]' is .
 



"
p00894,Gift from the Goddess of Programming,"
the goddess of programming is reviewing a thick logbook, which is a yearly record of visitors
to her holy altar of programming. the logbook also records her visits at the altar.
 
the altar attracts programmers from all over the world because one visitor is chosen every
year and endowed with a gift of miracle programming power by the goddess. the endowed
programmer is chosen from those programmers who spent the longest time at the altar during
the goddess's presence. there have been enthusiastic visitors who spent very long time at the
altar but failed to receive the gift because the goddess was absent during their visits.
 
now, your mission is to write a program that finds how long the programmer to be endowed
stayed at the altar during the goddess's presence.
 


"
p00895,The Sorcerer's Donut,"
your master went to the town for a day. you could have a relaxed day without hearing his
scolding. but he ordered you to make donuts dough by the evening. loving donuts so much, he
can't live without eating tens of donuts everyday. what a chore for such a beautiful day.
 
but last week, you overheard a magic spell that your master was using. it was the time to
try. you casted the spell on a broomstick sitting on a corner of the kitchen. with a flash of
lights, the broom sprouted two arms and two legs, and became alive. you ordered him, then he
brought flour from the storage, and started kneading dough. the spell worked, and how fast he
kneaded it!
 
a few minutes later, there was a tall pile of dough on the kitchen table. that was enough for
the next week. \ok, stop now."" you ordered. but he didn't stop. help! you didn't know the
spell to stop him! soon the kitchen table was filled with hundreds of pieces of dough, and he
still worked as fast as he could. if you could not stop him now, you would be choked in the
kitchen filled with pieces of dough.
 
wait, didn't your master write his spells on his notebooks? you went to his den, and found the
notebook that recorded the spell of cessation.
 
but it was not the end of the story. the spell written in the notebook is not easily read by
others. he used a plastic model of a donut as a notebook for recording the spell. he split the
surface of the donut-shaped model into square mesh (figure b.1), and filled with the letters
(figure b.2). he hid the spell so carefully that the pattern on the surface looked meaningless.
but you knew that he wrote the pattern so that the spell ""appears"" more than once (see the next
paragraph for the precise conditions). the spell was not necessarily written in the left-to-right
direction, but any of the 8 directions, namely left-to-right, right-to-left, top-down, bottom-up,
and the 4 diagonal directions.
 each square sequence does not overlap itself. (two square sequences can share some squares.) the square sequences start from different squares, and/or go to different directions. 

 
note that a palindrome (i.e., a string that is the same whether you read it backwards or forwards)
that satisfies the first condition ""appears"" twice.
 
the pattern on the donut is given as a matrix of letters as follows.
 
note that the surface of the donut has no ends; the top and bottom sides, and the left and right
sides of the pattern are respectively connected. there can be square sequences longer than both
the vertical and horizontal lengths of the pattern. for example, from the letter f in the above
pattern, the strings in the longest non-self-overlapping sequences towards the 8 directions are
as follows.
 
please write a program that finds the magic spell before you will be choked with pieces of donuts
dough.
 

"
p00896,Weaker than Planned,"
the committee members of the kitoshima programming contest had decided to use crypto-graphic software for their secret communication. they had asked a company, kodai software,
to develop cryptographic software that employed a cipher based on highly sophisticated mathematics.
 
according to reports on it projects, many projects are not delivered on time, on budget, with
required features and functions. this applied to this case. kodai software failed to implement
the cipher by the appointed date of delivery, and asked to use a simpler version that employed
a type of substitution cipher for the moment. the committee members got angry and strongly
requested to deliver the full specification product, but they unwillingly decided to use this inferior
product for the moment.
 
in what follows, we call the text before encryption, plaintext, and the text after encryption,
ciphertext.
 
this simple cipher substitutes letters in the plaintext, and its substitution rule is specified with
a set of pairs. a pair consists of two letters and is unordered, that is, the order of the letters
in the pair does not matter. a pair (a, b) and a pair (b, a) have the same meaning. in one
substitution rule, one letter can appear in at most one single pair. when a letter in a pair
appears in the plaintext, the letter is replaced with the other letter in the pair. letters not
specified in any pairs are left as they are.
 
for example, by substituting the plaintext
 
with the substitution rule {(a, z), (b, y)} results in the following ciphertext.
 
this may be a big chance for us, because the substitution rule seems weak against cracking.
we may be able to know communications between committee members. the mission here is to
develop a deciphering program that finds the plaintext messages from given ciphertext messages.
 
a ciphertext message is composed of one or more ciphertext words. a ciphertext word is
generated from a plaintext word with a substitution rule. you have a list of candidate words 
containing the words that can appear in the plaintext; no other words may appear. some words
in the list may not actually be used in the plaintext.
 
there always exists at least one sequence of candidate words from which the given ciphertext
is obtained by some substitution rule. there may be cases where it is impossible to uniquely
identify the plaintext from a given ciphertext and the list of candidate words.
 


"
p00897,Long Distance Taxi,"
a taxi driver, nakamura, was so delighted because he got a passenger who wanted to go to a
city thousands of kilometers away. however, he had a problem. as you may know, most taxis in
japan run on liquefied petroleum gas (lpg) because it is cheaper than gasoline. there are more
than 50,000 gas stations in the country, but less than one percent of them sell lpg. although
the lpg tank of his car was full, the tank capacity is limited and his car runs 10 kilometer per
liter, so he may not be able to get to the destination without filling the tank on the way. he
knew all the locations of lpg stations.
your task is to write a program that finds the best way from the current location to the destination without running out of gas.
 

"
p00898,Driving an Icosahedral Rover,"
after decades of fruitless efforts, one of the expedition teams of ito (intersolar tourism organization) finally found a planet that would surely provide one of the best tourist attractions
within a ten light-year radius from our solar system. the most attractive feature of the planet,
besides its comfortable gravity and calm weather, is the area called mare triangularis. despite
the name, the area is not covered with water but is a great plane. its unique feature is that it is
divided into equilateral triangular sections of the same size, called trigons. the trigons provide
a unique impressive landscape, a must for tourism. it is no wonder the board of ito decided
to invest a vast amount on the planet.
 
despite the expected secrecy of the staff, the society of astrogeology caught this information
in no time, as always. they immediately sent their president's letter to the institute of science
and education of the commonwealth galactica claiming that authoritative academic inspections
were to be completed before any commercial exploitation might damage the nature.
 
fortunately, astrogeologists do not plan to practice all the possible inspections on all of the
trigons; there are far too many of them. inspections are planned only on some characteristic
trigons and, for each of them, in one of twenty different scientific aspects.
 
to accelerate building this new tourist resort, ito's construction machinery team has already succeeded in putting their brand-new
invention in practical use. it is a rover vehicle of the shape of an icosahedron, a regular polyhedron with twenty faces of equilateral triangles. 
the machine is customized
so that each of the twenty faces exactly fits each of the trigons. 
controlling the high-tech gyromotor installed inside its body, the rover can roll onto one of the three trigons neighboring the one its bottom is
on.
 
each of the twenty faces has its own function. the set of equipments installed on the bottom
face touching the ground can be applied to the trigon it is on. of course, the rover was meant to accelerate construction of the luxury hotels to host rich interstellar travelers, but, changing
the installed equipment sets, it can also be used to accelerate academic inspections.
 
you are the driver of this rover and are asked to move the vehicle onto the trigon specified by
the leader of the scientific commission with the smallest possible steps. what makes your task
more difficult is that the designated face installed with the appropriate set of equipments has to
be the bottom. the direction of the rover does not matter.
 
the trigons of mare triangularis are given two-dimensional coordinates as shown in figure e.2.
like maps used for the earth, the x axis is from the west to the east, and the y axis is from the
south to the north. note that all the trigons with its coordinates (x , y) has neighboring trigons
with coordinates (x - 1 , y) and (x + 1 , y). in addition to these, when x + y is even, it has a
neighbor (x , y + 1); otherwise, that is, when x + y is odd, it has a neighbor (x , y - 1).
 
figure e.3 shows a development of the skin of the rover. the top face of the development
makes the exterior. that is, if the numbers on faces of the development were actually marked
on the faces of the rover, they should been readable from its outside. these numbers are used
to identify the faces.
 
when you start the rover, it is on the trigon (0,0) and the face 0 is touching the ground. the
rover is placed so that rolling towards north onto the trigon (0,1) makes the face numbered 5
to be at the bottom.
 
as your first step, you can choose one of the three adjacent trigons, namely those with coordinates (-1,0), (1,0), 
and (0,1), to visit. the bottom will be the face numbered 4, 1, and 5,
respectively. if you choose to go to (1,0) in the first rolling step, the second step can bring
the rover to either of (0,0), (2,0), or (1,-1). the bottom face will be either of 0, 6, or 2,
correspondingly. the rover may visit any of the trigons twice or more, including the start and the goal trigons, when appropriate.
 
the theoretical design section of ito showed that the rover can reach any goal trigon on the
specified bottom face within a finite number of steps.
 

"
p00899,City Merger,"
recent improvements in information and communication technology have made it possible to provide municipal service to a wider area more quickly and with less costs. stimulated by this, and probably for saving their not sufficient funds, mayors of many cities started to discuss on mergers of their cities.
 
there are, of course, many obstacles to actually put the planned mergers in practice. each city has its own culture of which citizens are proud. one of the largest sources of friction is with the name of the new city. all citizens would insist that the name of the new city should have the original name of their own city at least as a part of it. simply concatenating all the original names would, however, make the name too long for everyday use.
 
you are asked by a group of mayors to write a program that finds the shortest possible name for the new city that includes all the original names of the merged cities. if two or more cities have common parts, they can be overlapped. for example, if &quot;fukuoka&quot;, &quot;okayama&quot;, and &quot;yamaguchi&quot; cities are to be merged, &quot;fukuokayamaguchi&quot; is such a name that include all three of the original city names. although this includes all the characters of the city name &quot;fukuyama&quot; in this order, it does not appear as a consecutive substring, and thus &quot;fukuyama&quot; is not considered to be included in the name.
 

"
p00900,Captain Q's Treasure,"
you got an old map, which turned out to be drawn by the infamous pirate &ldquo;captain q&rdquo;. it shows the locations of a lot of treasure chests buried in an island.
 
the map is divided into square sections, each of which has a digit on it or has no digit. the digit represents the number of chests in its 9 neighboring sections (the section itself and its 8 neighbors). you may assume that there is at most one chest in each section.
 
although you have the map, you can't determine the sections where the chests are buried. even the total number of chests buried in the island is unknown. however, it is possible to calculate the minimum number of chests buried in the island. your mission in this problem is to write a program that calculates it.
 

"
p00901,ASCII Expression,"
mathematical expressions appearing in old papers and old technical articles are printed with typewriter in several lines, where a fixed-width or monospaced font is required to print characters (digits, symbols and spaces). let us consider the following mathematical expression.
 
it is printed in the following four lines:
 
where &ldquo;- 5&rdquo; indicates unary minus followed by 5. we call such an expression of lines &ldquo;ascii expression&rdquo;.
 
for helping those who want to evaluate ascii expressions obtained through optical character recognition (ocr) from old papers, your job is to write a program that recognizes the structure of ascii expressions and computes their values.
 
for the sake of simplicity, you may assume that ascii expressions are constructed by the following rules. its syntax is shown in table h.1.
 
for example, the negative fraction is represented in three lines:
 where the left-most hyphen means a unary minus operator. one space character is required between the unary minus and the vinculum of the fraction. the fraction  is represented in four lines: 
where the widths of the cells of the dividend and divisor are 11 and 8 respectively. hence the number of hyphens of the vinculum is 2 + max(11, 8) = 13. the divisor is centered by &lceil;(13&minus;8)/2&rceil; = 3 space characters (hyphens) to the left and &lfloor;(13&minus;8)/2&rfloor; = 2 to the right.
 
the powexpr (42)3 is represented in two lines:
 
where the cell for 2 is placed one line above the base-line of the cell for 4, and the cell for 3 is placed one line above the base-line of the cell for a primary (42).
 

"
p00902,Encircling Circles,"
you are given a set of circles c of a variety of radii (radiuses) placed at a variety of positions, possibly overlapping one another. given a circle with radius r, that circle may be placed so that it encircles all of the circles in the set c if r is large enough.
 
there may be more than one possible position of the circle of radius r to encircle all the member circles of c. we define the region u as the union of the areas of encircling circles at all such positions. in other words, for each point in u, there exists a circle of radius r that encircles that point and all the members of c. your task is to calculate the length of the periphery of that region u.
 
figure i.1 shows an example of the set of circles c and the region u. in the figure, three circles contained in c are expressed by circles of solid circumference, some possible positions of the encircling circles are expressed by circles of dashed circumference, and the area u is expressed by a thick dashed closed curve.
 




"
p00903,Round Trip,"
jim is planning to visit one of his best friends in a town in the mountain area. first, he leaves his hometown and goes to the destination town. this is called the go phase. then, he comes back to his hometown. this is called the return phase. you are expected to write a program to find the minimum total cost of this trip, which is the sum of the costs of the go phase and the return phase.
 
there is a network of towns including these two towns. every road in this network is one-way, i.e., can only be used towards the specified direction. each road requires a certain cost to travel.
 
in addition to the cost of roads, it is necessary to pay a specified fee to go through each town on the way. however, since this is the visa fee for the town, it is not necessary to pay the fee on the second or later visit to the same town.
 
the altitude (height) of each town is given. on the go phase, the use of descending roads is inhibited. that is, when going from town a to b, the altitude of a should not be greater than that of b. on the return phase, the use of ascending roads is inhibited in a similar manner. if the altitudes of a and b are equal, the road from a to b can be used on both phases.
 

"
p00904,Ginkgo Numbers,"
we will define ginkgo numbers and multiplication on ginkgo numbers.
 
a ginkgo number is a pair &lt;m, n&gt; where m and n are integers. for example, &lt;1, 1&gt;, &lt;-2, 1&gt; and &lt;-3,-1&gt; are ginkgo numbers.
 
the multiplication on ginkgo numbers is defined by &lt;m, n&gt; &middot; &lt;x, y&gt; = &lt;mx &minus; ny, my + nx&gt;. for example, &lt;1, 1&gt; &middot; &lt;-2, 1&gt; = &lt;-3,-1&gt;.
 
a ginkgo number &lt;m, n&gt; is called a divisor of a ginkgo number &lt;p, q&gt; if there exists a ginkgo number &lt;x, y&gt; such that &lt;m, n&gt; &middot; &lt;x, y&gt; = &lt;p, q&gt;.
 
for any ginkgo number &lt;m, n&gt;, ginkgo numbers &lt;1, 0&gt;, &lt;0, 1&gt;, &lt;-1, 0&gt;, &lt;0,-1&gt;, &lt;m, n&gt;, &lt;-n,m&gt;, &lt;-m,-n&gt; and &lt;n,-m&gt; are divisors of &lt;m, n&gt;. if m2+n2 &gt; 1, these ginkgo numbers are distinct. in other words, any ginkgo number such that m2 + n2 &gt; 1 has at least eight divisors.
 
a ginkgo number &lt;m, n&gt; is called a prime if m2+n2 &gt; 1 and it has exactly eight divisors. your mission is to check whether a given ginkgo number is a prime or not.
 
the following two facts might be useful to check whether a ginkgo number is a divisor of another ginkgo number.
  suppose m2 + n2 &gt; 0. then, &lt;m, n&gt; is a divisor of &lt;p, q&gt; if and only if the integer m2 + n2 is a common divisor of mp + nq and mq &minus; np.  if &lt;m, n&gt; &middot; &lt;x, y&gt; = &lt;p, q&gt;, then (m2 + n2)(x2 + y2) = p2 + q2. 



"
p00905,Stylish,"
stylish is a programming language whose syntax comprises names, that are sequences of latin alphabet letters, three types of grouping symbols, periods ('.'), and newlines. grouping symbols, namely round brackets ('(' and ')'), curly brackets ('{' and '}'), and square brackets ('[' and ']'), must match and be nested properly. unlike most other programming languages, stylish uses periods instead of whitespaces for the purpose of term separation. the following is an example of a stylish program.
 
as you see in the example, a stylish program is indented by periods. the amount of indentation of a line is the number of leading periods of it.
 
your mission is to visit stylish masters, learn their indentation styles, and become the youngest stylish master. an indentation style for well-indented stylish programs is defined by a triple of integers, (r, c, s), satisfying 1 &le; r, c, s &le; 20. r, c and s are amounts of indentation introduced by an open round bracket, an open curly bracket, and an open square bracket, respectively.
 
in a well-indented program, the amount of indentation of a line is given by r(ro &minus; rc) + c(co &minus; cc) + s(so &minus; sc), where ro, co, and so are the numbers of occurrences of open round, curly, and square brackets in all preceding lines, respectively, and rc, cc, and sc are those of close brackets. the first line has no indentation in any well-indented program.
 
the above example is formatted in the indentation style (r, c, s) = (9, 5, 2). the only grouping symbol occurring in the first line of the above program is an open round bracket. therefore the amount of indentation for the second line is 9 &middot; (1 &minus; 0) + 5 &middot; (0 &minus; 0) + 2 &middot;(0 &minus; 0) = 9. the first four lines contain two open round brackets, one open curly bracket, one open square bracket, two close round brackets, but no close curly nor square bracket. therefore the amount of indentation for the fifth line is 9 &middot; (2 &minus; 2) + 5 &middot; (1 &minus; 0) + 2 &middot; (1 &minus; 0) = 7.
 
stylish masters write only well-indented stylish programs. every master has his/her own indentation style.
 
write a program that imitates indentation styles of stylish masters.
 

"
p00906,Dimensional Cellular Automaton,"
there is a one-dimensional cellular automaton consisting of n cells. cells are numbered from 0 to n &minus; 1.
 
each cell has a state represented as a non-negative integer less than m. the states of cells evolve through discrete time steps. we denote the state of the i-th cell at time t as s(i, t). the state at time t + 1 is defined by the equation 
 


s(i, t + 1) = (a &times; s(i &minus; 1, t) + b &times; s(i, t) + c &times; s(i + 1, t)) mod m,  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(1)
 
where a, b and c are non-negative integer constants. for i &lt; 0 or n &le; i, we define s(i, t) = 0.
 
given an automaton definition and initial states of cells, your mission is to write a program that computes the states of the cells at a specified time t.
 



"
p00907,Find the Outlier,"
professor abacus has just built a new computing engine for making numerical tables. it was designed to calculate the values of a polynomial function in one variable at several points at a time. with the polynomial function f(x) = x2 + 2x + 1, for instance, a possible expected calculation result is 1 (= f(0)), 4 (= f(1)), 9 (= f(2)), 16 (= f(3)), and 25 (= f(4)).
 
it is a pity, however, the engine seemingly has faulty components and exactly one value among those calculated simultaneously is always wrong. with the same polynomial function as above, it can, for instance, output 1, 4, 12, 16, and 25 instead of 1, 4, 9, 16, and 25.
 
you are requested to help the professor identify the faulty components. as the first step, you should write a program that scans calculation results of the engine and finds the wrong values.
 


"
p00908,Sliding Block Puzzle,"
in sliding block puzzles, we repeatedly slide pieces (blocks) to open spaces within a frame to establish a goal placement of pieces.
 
a puzzle creator has designed a new puzzle by combining the ideas of sliding block puzzles and mazes. the puzzle is played in a rectangular frame segmented into unit squares. some squares are pre-occupied by obstacles. there are a number of pieces placed in the frame, one 2 &times; 2 king piece and some number of 1 &times; 1 pawn pieces. exactly two 1 &times; 1 squares are left open. if a pawn piece is adjacent to an open square, we can slide the piece there. if a whole edge of the king piece is adjacent to two open squares, we can slide the king piece. we cannot move the obstacles. starting from a given initial placement, the objective of the puzzle is to move the king piece to the upper-left corner of the frame. 
 
the following figure illustrates the initial placement of the fourth dataset of the sample input.
 
figure e.1: the fourth dataset of the sample input.
 
your task is to write a program that computes the minimum number of moves to solve the puzzle from a given placement of pieces. here, one move means sliding either king or pawn piece to an adjacent position.
 


"
p00909,Never Wait for Weights,"
in a laboratory, an assistant, nathan wada, is measuring weight differences between sample pieces pair by pair. he is using a balance because it can more precisely measure the weight difference between two samples than a spring scale when the samples have nearly the same weight.
 
he is occasionally asked the weight differences between pairs of samples. he can or cannot answer based on measurement results already obtained.
 
since he is accumulating a massive amount of measurement data, it is now not easy for him to promptly tell the weight differences. nathan asks you to develop a program that records measurement results and automatically tells the weight differences.
 


"
p00910,Let There Be Light,"
suppose that there are some light sources and many spherical balloons. all light sources have sizes small enough to be modeled as point light sources, and they emit light in all directions. the surfaces of the balloons absorb light and do not reflect light. surprisingly in this world, balloons may overlap.
 
you want the total illumination intensity at an objective point as high as possible. for this purpose, some of the balloons obstructing lights can be removed. because of the removal costs, however, there is a certain limit on the number of balloons to be removed. thus, you would like to remove an appropriate set of balloons so as to maximize the illumination intensity at the objective point.
 
the following figure illustrates the configuration specified in the first dataset of the sample input given below. the figure shows the xy-plane, which is enough because, in this dataset, the z-coordinates of all the light sources, balloon centers, and the objective point are zero. in the figure, light sources are shown as stars and balloons as circles. the objective point is at the origin, and you may remove up to 4 balloons. in this case, the dashed circles in the figure correspond to the balloons to be removed.
 
figure g.1: first dataset of the sample input.
 


"
p00911,Company Organization,"
you started a company a few years ago and fortunately it has been highly successful. as the growth of the company, you noticed that you need to manage employees in a more organized way, and decided to form several groups and assign employees to them.
 
now, you are planning to form n groups, each of which corresponds to a project in the company. sometimes you have constraints on members in groups. for example, a group must be a subset of another group because the former group will consist of senior members of the latter group, the members in two groups must be the same because current activities of the two projects are closely related, the members in two groups must not be exactly the same to avoid corruption, two groups cannot have a common employee because of a security reason, and two groups must have a common employee to facilitate collaboration.
 
in summary, by letting xi (i = 1, ... , n) be the set of employees assigned to the i-th group, we have five types of constraints as follows.
  xi &sube; xj  xi = xj  xi &ne; xj  xi &cap; xj = &empty;  xi &cap; xj &ne; &empty; 
since you have listed up constraints without considering consistency, it might be the case that you cannot satisfy all the constraints. constraints are thus ordered according to their priorities, and you now want to know how many constraints of the highest priority can be satisfied.
 
you do not have to take ability of employees into consideration. that is, you can assign anyone to any group. also, you can form groups with no employee. furthermore, you can hire or fire as many employees as you want if you can satisfy more constraints by doing so.
 
for example, suppose that we have the following five constraints on three groups in the order of their priorities, corresponding to the first dataset in the sample input.
 x2 &sube; x1 x3 &sube; x2 x1 &sube; x3 x1 &ne; x3 x3 &sube; x1 
by assigning the same set of employees to x1, x2, and x3, we can satisfy the first three constraints. however, no matter how we assign employees to x1, x2, and x3, we cannot satisfy the first four highest priority constraints at the same time. though we can satisfy the first three constraints and the fifth constraint at the same time, the answer should be three.
 

"
p00912,Beautiful Spacing,"
text is a sequence of words, and a word consists of characters. your task is to put words into a grid with w columns and sufficiently many lines. for the beauty of the layout, the following conditions have to be satisfied.
 figure i.1: a good layout. figure i.2: bad | do not reorder words. 



 
figure i.3: bad | words must be separated by spaces.
 


 
figure i.4: bad | characters in a single word must be contiguous.
 


 
figure i.5: bad | lines must be justied to both the left and the right sides.
 

 
the text is the most beautifully laid out when there is no unnecessarily long spaces. for instance, the layout in figure i.6 has at most 2 contiguous spaces, which is more beautiful than that in figure i.1, having 3 contiguous spaces. given an input text and the number of columns, please find a layout such that the length of the longest contiguous spaces between words is minimum.
 
figure i.6: a good and the most beautiful layout.
 



"
p00913,Cubic Colonies,"
in ad 3456, the earth is too small for hundreds of billions of people to live in peace. interstellar colonization project with cubes (icpc) is a project that tries to move people on the earth to space colonies to ameliorate the problem. icpc obtained funding from governments and manufactured space colonies very quickly and at low cost using prefabricated cubic blocks.
 
the largest colony looks like a rubik's cube. it consists of 3 &times; 3 &times; 3 cubic blocks (figure j.1a). smaller colonies miss some of the blocks in the largest colony.
 
when we manufacture a colony with multiple cubic blocks, we begin with a single block. then we iteratively glue a next block to existing blocks in a way that faces of them match exactly. every pair of touched faces is glued.
 
figure j.1: example of the largest colony and a smaller colony
 
however, just before the first launch, we found a design flaw with the colonies. we need to add a cable to connect two points on the surface of each colony, but we cannot change the inside of the prefabricated blocks in a short time. therefore we decided to attach a cable on the surface of each colony. if a part of the cable is not on the surface, it would be sheared off during the launch, so we have to put the whole cable on the surface. we would like to minimize the lengths of the cables due to budget constraints. the dashed line in figure j.1b is such an example.
 
write a program that, given the shape of a colony and a pair of points on its surface, calculates the length of the shortest possible cable for that colony.
 


"
p00914,Equal Sum Sets,"
let us consider sets of positive integers less than or equal to n. note that all elements of a set are different. also note that the order of elements doesn't matter, that is, both {3, 5, 9} and {5, 9, 3} mean the same set.
 
specifying the number of set elements and their sum to be k and s, respectively, sets satisfying the conditions are limited. when n = 9, k = 3 and s = 23, {6, 8, 9} is the only such set. there may be more than one such set, in general, however. when n = 9, k = 3 and s = 22, both {5, 8, 9} and {6, 7, 9} are possible.
 
you have to write a program that calculates the number of the sets that satisfy the given conditions.
 

"
p00915,The Last Ant,"
a straight tunnel without branches is crowded with busy ants coming and going. some ants walk left to right and others right to left. all ants walk at a constant speed of 1 cm/s. when two ants meet, they try to pass each other. however, some sections of the tunnel are narrow and two ants cannot pass each other. when two ants meet at a narrow section, they turn around and start walking in the opposite directions. when an ant reaches either end of the tunnel, it leaves the tunnel.
 
the tunnel has an integer length in centimeters. every narrow section of the tunnel is integer centimeters distant from the both ends. except for these sections, the tunnel is wide enough for ants to pass each other. all ants start walking at distinct narrow sections. no ants will newly enter the tunnel. consequently, all the ants in the tunnel will eventually leave it. your task is to write a program that tells which is the last ant to leave the tunnel and when it will.
 
figure b.1 shows the movements of the ants during the first two seconds in a tunnel 6 centimeters long. initially, three ants, numbered 1, 2, and 3, start walking at narrow sections, 1, 2, and 5 centimeters distant from the left end, respectively. after 0.5 seconds, the ants 1 and 2 meet at a wide section, and they pass each other. two seconds after the start, the ants 1 and 3 meet at a narrow section, and they turn around.
 
figure b.1 corresponds to the first dataset of the sample input.
 



figure b.1. movements of ants




"
p00916,Count the Regions,"
there are a number of rectangles on the x-y plane. the four sides of the rectangles are parallel to either the x-axis or the y-axis, and all of the rectangles reside within a range specified later. there are no other constraints on the coordinates of the rectangles.
 
the plane is partitioned into regions surrounded by the sides of one or more rectangles. in an example shown in figure c.1, three rectangles overlap one another, and the plane is partitioned into eight regions.
 
rectangles may overlap in more complex ways. for example, two rectangles may have overlapped sides, they may share their corner points, and/or they may be nested. figure c.2 illustrates such cases.
 
your job is to write a program that counts the number of the regions on the plane partitioned
by the rectangles.
 






"
p00917,Clock Hands,"
we have an analog clock whose three hands (the second hand, the minute hand and the hour hand) rotate quite smoothly. you can measure two angles between the second hand and two other hands.
 
write a program to find the time at which ""no two hands overlap each other"" and ""two angles between the second hand and two other hands are equal"" for the first time on or after a given time.
 
clocks are not limited to 12-hour clocks. the hour hand of an h-hour clock goes around once in h hours. the minute hand still goes around once every hour, and the second hand goes around once every minute. at 0:0:0 (midnight), all the hands are at the upright position.
 


"
p00918,Dragon's Cruller,"
dragon's cruller is a sliding puzzle on a torus. the torus surface is partitioned into nine squares as shown in its development in figure e.1. here, two squares with one of the sides on the development labeled with the same letter are adjacent to each other, actually sharing the side. figure e.2 shows which squares are adjacent to which and in which way. pieces numbered from 1 through 8 are placed on eight out of the nine squares, leaving the remaining one empty.
 
figure e.1. a 3 × 3 dragon’s cruller torus
 
a piece can be slid to an empty square from one of its adjacent squares. the goal of the puzzle is, by sliding pieces a number of times, to reposition the pieces from the given starting arrangement into the given goal arrangement. figure e.3 illustrates arrangements directly reached from the arrangement shown in the center after four possible slides. the cost to slide a piece depends on the direction but is independent of the position nor the piece.
 
your mission is to find the minimum cost required to reposition the pieces from the given starting
arrangement into the given goal arrangement.
 
figure e.2. adjacency
 
figure e.3. examples of sliding steps
 
unlike some sliding puzzles on a flat square, it is known that any goal arrangement can be reached from any starting arrangements on this torus.
 


"
p00919,Directional Resemblance,"
vectors have their directions and two vectors make an angle between them. given a set of three-dimensional vectors, your task is to find the pair among them that makes the smallest angle.
 

"
p00920,Longest Chain,"
your mission is to find, in the given set of triples, the longest ascending series a1 &ang; a2 &ang; ...  &ang; ak.
 

"
p00921,Don't Burst the Balloon,"
an open-top box having a square bottom is placed on the floor. you see a number of needles vertically planted on its bottom.
 
you want to place a largest possible spheric balloon touching the box bottom, interfering with none of the side walls nor the needles.
 
java specific: submitted java programs may not use ""java.awt.geom.area"". you may use it for your debugging purposes.
 
figure h.1 shows an example of a box with needles and the corresponding largest spheric balloon. it corresponds to the first dataset of the sample input below.
 





figure h.1. the upper shows an example layout and the lower shows the largest spheric balloon that can be placed.





"
p00922,Hidden Tree,"
consider a binary tree whose leaves are assigned integer weights. such a tree is called balanced if, for every non-leaf node, the sum of the weights in its left subtree is equal to that in the right subtree. for instance, the tree in the following figure is balanced.
 
a balanced tree is said to be hidden in a sequence a, if the integers obtained by listing the weights of all leaves of the tree from left to right form a subsequence of a. here, a subsequence is a sequence that can be derived by deleting zero or more elements from the original sequence without changing the order of the remaining elements.
 
for instance, the balanced tree in the figure above is hidden in the sequence 3 4 1 3 1 2 4 4 6, because 4 1 1 2 4 4 is a subsequence of it.
 
now, your task is to find, in a given sequence of integers, the balanced tree with the largest number of leaves hidden in it. in fact, the tree shown in figure i.1 has the largest number of leaves among the balanced trees hidden in the sequence mentioned above.
 



"
p00923,|C(O||W||A*RD*||S)* CROSSWORD Puzzle|,"
the first crossword puzzle was published on december 21, 1913 by arthur wynne. to celebrate the centennial of his great-great-grandfather's invention, john ""coward"" wynne1 was struggling to make crossword puzzles. he was such a coward that whenever he thought of a tricky clue for a word, he couldn’t stop worrying if people would blame him for choosing a bad clue that could never mean that word. at the end of the day, he cowardly chose boring clues, which made his puzzles less interesting.
 
one day, he came up with a brilliant idea: puzzles in which word meanings do not matter, and yet interesting. he told his idea to his colleagues, who admitted that the idea was intriguing. they even named his puzzles ""coward's crossword puzzles"" after his nickname. 
 
however, making a coward's crossword puzzle was not easy. even though he did not have to think about word meanings, it was not easy to check if a puzzle has one and only one set of answers. as the day of the centennial anniversary was approaching, john started worrying if he would not be able to make interesting ones in time. let's help john by writing a program that solves coward's crossword puzzles.
 
each puzzle consists of h &times; w cells along with h across clues and w down clues. the clues are regular expressions written in a pattern language whose bnf syntax is given as in the table below.
 
the clues (as denoted by p and q below) match words (as denoted by s below) according to the
following rules.
 ^p$ matches s if p matches s. p|q matches a string s if p and/or q matches s. pq matches a string s if there exist s1 and s2 such that s1s2 = s, p matches s1, and q matches s2. p* matches a string s if s is empty, or there exist s1 and s2 such that s1s2 = s, p matches s1, and p* matches s2. each of a, b, . . . , z matches the respective letter itself. (p) matches s if p matches s. . is the shorthand of (a|b|c|d|e|f|g|h|i|j|k|l|m|n|o|p|q|r|s|t|u|v|w|x|y|z). 
below is an example of a coward’s crossword puzzle with the answers filled in the cells.
 
java specific: submitted java programs may not use classes in the java.util.regex package.
c++ specific: submitted c++ programs may not use the std::regex class.
 



"
p00924,Bit String Reordering,"
  you have to reorder a given bit string as specified. the only operation allowed is swapping adjacent bit pairs. please write a program that calculates the minimum number of swaps required.
 
  the initial bit string is simply represented by a sequence of bits, while the target is specified by a run-length code. the run-length code of a bit string is a sequence of the lengths of maximal consecutive sequences of zeros or ones in the bit string. for example, the run-length code of ""011100"" is ""1 3 2"". note that there are two different bit strings with the same run-length code, one starting with zero and the other starting with one. the target is either of these two.
 
  in sample input 1, bit string ""100101"" should be reordered so that its run-length code is ""1 3 2"", which means either ""100011"" or ""011100"". at least four swaps are required to obtain ""011100"". on the other hand, only one swap is required to make ""100011"". thus, in this example, 1 is the answer.
 

"
p00925,Miscalculation,"
  bob is an elementary schoolboy, not so good at mathematics. he found father's calculator and tried cheating on his homework using it. his homework was calculating given expressions containing multiplications and additions. multiplications should be done prior to additions, of course, but the calculator evaluates the expression from left to right, neglecting the operator precedence. so his answers may be the result of either of the following two calculation rules.
  doing multiplication before addition  doing calculation from left to right neglecting the operator precedence 
  write a program that tells which of the rules is applied from an expression and his answer.
 
  an expression consists of integers and operators. all the integers have only one digit, from 0 to 9. there are two kinds of operators + and *, which represent addition and multiplication, respectively.
 
  the following is an example expression.
 
  calculating this expression with the multiplication-first rule, the answer is 11, as in sample input 1. with the left-to-right rule, however, the answer will be 13 as shown in sample input 2.
 
  there may be cases in which both rules lead to the same result and you cannot tell which of the rules is applied. moreover, bob sometimes commits miscalculations. when neither rules would result in bob’s answer, it is clear that he actually did.
   

"
p00926,Shopping,"
  your friend will enjoy shopping. she will walk through a mall along a straight street, where $n$ individual shops (numbered from 1 to $n$) are aligned at regular intervals. each shop has one door and is located at the one side of the street. the distances between the doors of the adjacent shops are the same length, i.e. a unit length. starting shopping at the entrance of the mall, she visits shops in order to purchase goods. she has to go to the exit of the mall after shopping.
 
  she requires some restrictions on visiting order of shops. each of the restrictions indicates that she shall visit a shop before visiting another shop. for example, when she wants to buy a nice dress before choosing heels, she shall visit a boutique before visiting a shoe store. when the boutique is farther than the shoe store, she must pass the shoe store before visiting the boutique, and go back to the shoe store after visiting the boutique.
 
  if only the order of the visiting shops satisfies all the restrictions, she can visit other shops in any order she likes.
 
  write a program to determine the minimum required walking length for her to move from the entrance to the exit.
 
  assume that the position of the door of the shop numbered $k$ is $k$ units far from the entrance, where the position of the exit is $n + 1$ units far from the entrance.
 

"
p00927,Space Golf,"
you surely have never heard of this new planet surface exploration scheme, as it is being carried out in a project with utmost secrecy. the scheme is expected to cut costs of conventional rovertype mobile explorers considerably, using projected-type equipment nicknamed ""observation bullets"".
 
  bullets do not have any active mobile abilities of their own, which is the main reason of their cost-efficiency. each of the bullets, after being shot out on a launcher given its initial velocity, makes a parabolic trajectory until it touches down. it bounces on the surface and makes another parabolic trajectory. this will be repeated virtually infinitely.
 
  we want each of the bullets to bounce precisely at the respective spot of interest on the planet surface, adjusting its initial velocity. a variety of sensors in the bullet can gather valuable data at this instant of bounce, and send them to the observation base. although this may sound like a conventional target shooting practice, there are several issues that make the problem more difficult.
  there may be some obstacles between the launcher and the target spot. the obstacles stand upright and are very thin that we can ignore their widths. once the bullet touches any of the obstacles, we cannot be sure of its trajectory thereafter. so we have to plan launches to avoid these obstacles.  launching the bullet almost vertically in a speed high enough, we can easily make it hit the target without touching any of the obstacles, but giving a high initial speed is energyconsuming. energy is extremely precious in space exploration, and the initial speed of the bullet should be minimized. making the bullet bounce a number of times may make the bullet reach the target with lower initial speed.  the bullet should bounce, however, no more than a given number of times. although the body of the bullet is made strong enough, some of the sensors inside may not stand repetitive shocks. the allowed numbers of bounces vary on the type of the observation bullets. 
  you are summoned engineering assistance to this project to author a smart program that tells the minimum required initial speed of the bullet to accomplish the mission.
 
figure d.1 gives a sketch of a situation, roughly corresponding to the situation of the sample
input 4 given below.
 figure d.1. a sample situation 
  you can assume the following.
  the atmosphere of the planet is so thin that atmospheric resistance can be ignored.  the planet is large enough so that its surface can be approximated to be a completely flat plane.  the gravity acceleration can be approximated to be constant up to the highest points a bullet can reach. 
  these mean that the bullets fly along a perfect parabolic trajectory.
 
  you can also assume the following.
  the surface of the planet and the bullets are made so hard that bounces can be approximated as elastic collisions. in other words, loss of kinetic energy on bounces can be ignored. as we can also ignore the atmospheric resistance, the velocity of a bullet immediately after a bounce is equal to the velocity immediately after its launch.  the bullets are made compact enough to ignore their sizes.  the launcher is also built compact enough to ignore its height. 
  you, a programming genius, may not be an expert in physics. let us review basics of rigid-body dynamics.
 
we will describe here the velocity of the bullet $v$ with its horizontal and vertical components $v_x$ and $v_y$ (positive meaning upward). the initial velocity has the components $v_{ix}$ and $v_{iy}$, that is, immediately after the launch of the bullet, $v_x = v_{ix}$ and $v_y = v_{iy}$ hold. we denote the horizontal distance of the bullet from the launcher as $x$ and its altitude as $y$ at time $t$.
 
    the horizontal velocity component of the bullet is kept constant during its flight when atmospheric resistance is ignored. thus the horizontal distance from the launcher is proportional to the time elapsed.
    
    \[
    x = v_{ix}t
\tag{1}
    \]
     
    the vertical velocity component $v_y$ is gradually decelerated by the gravity. with the gravity acceleration of $g$, the following differential equation holds during the flight.

    \[
    \frac{dv_y}{dt} = −g
    \tag{2}
\]
    
solving this with the initial conditions of $v_y = v_{iy}$ and $y = 0$ when $t = 0$, we obtain the
    following.
    \[
    y = −\frac{1}{2} gt^2 + v_{iy}t
    \tag{3}
    \]
    \[
= −(\frac{1}{2}gt − v_{iy})t
    \tag{4}
    \]
    
    the equation (4) tells that the bullet reaches the ground again when $t = 2v_{iy}/g$. thus, the distance of the point of the bounce from the launcher is $2v_{ix}v_{iy}/g$. in other words, to make the bullet fly the distance of $l$, the two components of the initial velocity should satisfy $2v_{ix}v_{iy} = lg$.
   
    eliminating the parameter $t$ from the simultaneous equations above, we obtain the following equation that describes the parabolic trajectory of the bullet.
    \[
    y = −(\frac{g}{2v^2_{ix}})x^2 + (\frac{v_{iy}}{v_{ix}})x
    \tag{5}
    \]
   
for ease of computation, a special unit system is used in this project, according to which the gravity acceleration $g$ of the planet is exactly 1.0.
 


"
p00928,Automotive Navigation,"
  the international commission for perfect cars (icpc) has constructed a city scale test course for advanced driver assistance systems. your company, namely the automotive control machines (acm), is appointed by icpc to make test runs on the course.
 
  the test course consists of streets, each running straight either east-west or north-south. no streets of the test course have dead ends, that is, at each end of a street, it meets another one. there are no grade separated streets either, and so if a pair of orthogonal streets run through the same geographical location, they always meet at a crossing or a junction, where a car can turn from one to the other. no u-turns are allowed on the test course and a car never moves outside of the streets.
 
  oops! you have just received an error report telling that the gps (global positioning system) unit of a car running on the test course was broken and the driver got lost. fortunately, however, the odometer and the electronic compass of the car are still alive.
 
  you are requested to write a program to estimate the current location of the car from available information. you have the car's location just before its gps unit was broken. also, you can remotely measure the running distance and the direction of the car once every time unit. the measured direction of the car is one of north, east, south, and west. if you measure the direction of the car while it is making a turn, the measurement result can be the direction either before or after the turn. you can assume that the width of each street is zero.
 
  the car's direction when the gps unit was broken is not known. you should consider every possible direction consistent with the street on which the car was running at that time.
 


"
p00929,There is No Alternative,"
  icpc (isles of coral park city) consist of several beautiful islands.
 
  the citizens requested construction of bridges between islands to resolve inconveniences of using boats between islands, and they demand that all the islands should be reachable from any other islands via one or more bridges.
 
  the city mayor selected a number of pairs of islands, and ordered a building company to estimate the costs to build bridges between the pairs. with this estimate, the mayor has to decide the set of bridges to build, minimizing the total construction cost.
 
  however, it is difficult for him to select the most cost-efficient set of bridges among those connecting all the islands. for example, three sets of bridges connect all the islands for the sample input 1. the bridges in each set are expressed by bold edges in figure f.1.
 figure f.1. three sets of bridges connecting all the islands for sample input 1 
  as the first step, he decided to build only those bridges which are contained in all the sets of bridges to connect all the islands and minimize the cost. we refer to such bridges as no alternative bridges. in figure f.2, no alternative bridges are drawn as thick edges for the sample input 1, 2 and 3.
 figure f.2. no alternative bridges for sample input 1, 2 and 3 
write a program that advises the mayor which bridges are no alternative bridges for the given input.
 


"
p00930,Flipping Parentheses,"
  a string consisting only of parentheses '(' and ')' is called balanced if it is one of the following.
  a string ""()"" is balanced.  concatenation of two balanced strings are balanced.  when a string $s$ is balanced, so is the concatenation of three strings ""("", $s$, and "")"" in this order. 
  note that the condition is stronger than merely the numbers of '(' and ')' are equal. for instance, ""())(()"" is not balanced.
 
  your task is to keep a string in a balanced state, under a severe condition in which a cosmic ray may flip the direction of parentheses.
 
  you are initially given a balanced string. each time the direction of a single parenthesis is flipped, your program is notified the position of the changed character in the string. then, calculate and output the leftmost position that, if the parenthesis there is flipped, the whole string gets back to the balanced state. after the string is balanced by changing the parenthesis indicated by your program, next cosmic ray flips another parenthesis, and the steps are repeated several times.
 

"
p00931,Cornering at Poles,"
  you are invited to a robot contest. in the contest, you are given a disc-shaped robot that is placed on a flat field. a set of poles are standing on the ground. the robot can move in all directions, but must avoid the poles. however, the robot can make turns around the poles touching them.
 
  your mission is to find the shortest path of the robot to reach the given goal position. the length of the path is defined by the moving distance of the center of the robot. figure h.1 shows the shortest path for a sample layout. in this figure, a red line connecting a pole pair means that the distance between the poles is shorter than the diameter of the robot and the robot cannot go through between them.
 figure h.1. the shortest path for a sample layout 


"
p00932,Sweet War,"
  there are two countries, imperial cacao and principality of cocoa. two girls, alice (the empress of cacao) and brianna (the princess of cocoa) are friends and both of them love chocolate very much.
 
one day, alice found a transparent tube filled with chocolate balls (figure i.1). the tube has only one opening at its top end. the tube is narrow, and the chocolate balls are put in a line. chocolate balls are identified by integers 1, 2, . . ., $n$ where $n$ is the number of chocolate balls. chocolate ball 1 is at the top and is next to the opening of the tube. chocolate ball 2 is next to chocolate ball 1, . . ., and chocolate ball $n$ is at the bottom end of the tube. the chocolate balls can be only taken out from the opening, and therefore the chocolate balls must be taken out in the increasing order of their numbers.
 figure i.1. transparent tube filled with chocolate balls 
alice visited brianna to share the tube and eat the chocolate balls together. they looked at the chocolate balls carefully, and estimated that the $nutrition value$ and the $deliciousness$ of chocolate ball $i$ are $r_i$ and $s_i$, respectively. here, each of the girls wants to maximize the sum of the deliciousness of chocolate balls that she would eat. they are sufficiently wise to resolve this
conflict peacefully, so they have decided to play a game, and eat the chocolate balls according to the rule of the game as follows:
  alice and brianna have initial energy levels, denoted by nonnegative integers $a$ and $b$, respectively.  pass: she does not eat any chocolate balls. she gets a little hungry $-$ specifically, her energy level is decreased by 1. she cannot pass when her energy level is 0. eat: she eats the topmost chocolate ball $-$ let this chocolate ball $i$ (that is, the chocolate ball with the smallest number at that time). her energy level is increased by $r_i$, the nutrition value of chocolate ball $i$ (and not decreased by 1). of course, chocolate ball $i$ is removed from the tube.
      alice takes her turn first.  the game ends when all chocolate balls are eaten. 
  you are a member of the staff serving for empress alice. your task is to calculate the sums of deliciousness that each of alice and brianna can gain, when both of them play optimally.
 


"
p00933,Exhibition,"
  the city government is planning an exhibition and collecting industrial products. there are $n$ candidates of industrial products for the exhibition, and the city government decided to choose $k$ of them. they want to minimize the total price of the $k$ products. however, other criteria such as their sizes and weights should be also taken into account. to address this issue, the city government decided to use the following strategy: the $i$-th product has three parameters, price, size, and weight, denoted by $x_i$, $y_i$, and $z_i$, respectively. then, the city government chooses $k$ items $i_1, . . . , i_k$ ($1 \leq i_j \leq n$) that minimizes the evaluation measure

  \[
e = (\sum^k_{j=1}x_{ij}) (\sum^k_{j=1}y_{ij}) (\sum^k_{j=1}z_{ij}),
  \]

  which incorporates the prices, the sizes, and the weights of products. if there are two or more choices that minimize $e$, the government chooses one of them uniformly at random.
 
you are working for the company that makes the product 1. the company has decided to cut the price, reduce the size, and/or reduce the weight of the product so that the city government may choose the product of your company, that is, to make the probability of choosing the product positive. we have three parameters $a$, $b$, and $c$. if we want to reduce the price, size, and weight to $(1 − \alpha)x_1$, $(1 − \beta)y_1$, and $(1 − \gamma)z_1$ ($0 \leq \alpha, \beta, \gamma \leq 1$), respectively, then we have to invest $\alpha a + \beta b + \gamma c$ million yen. we note that the resulting price, size, and weight do not have to be integers. your task is to compute the minimum investment required to make the city government possibly choose the product of your company. you may assume that employees of all the other companies are too lazy to make such an effort.
   

"
p00934,L Jumps,"
  given two points $(p, q)$ and $(p', q')$ in the xy-plane, the $l_{\infty}$ distance between them is defined as $max(|p − p'|, |q − q'|)$. in this problem, you are given four integers $n$, $d$, $s$, $t$. suppose that you are initially standing at point $(0, 0)$ and you need to move to point $(s, t)$. for this purpose, you perform jumps exactly $n$ times. in each jump, you must move exactly $d$ in the $l_{\infty}$ distance measure. in addition, the point you reach by a jump must be a lattice point in the xy-plane. that is, when you are standing at point $(p, q)$, you can move to a new point $(p', q')$ by a single jump if $p'$ and $q'$ are integers and $max(|p − p'|, |q − q'|) = d$ holds.
 
  note that you cannot stop jumping even if you reach the destination point $(s, t)$ before you perform the jumps $n$ times.
 
  to make the problem more interesting, suppose that some cost occurs for each jump. you are given $2n$ additional integers $x_1$, $y_1$, $x_2$, $y_2$, . . . , $x_n$, $y_n$ such that $max(|x_i|, |y_i|) = d$ holds for each $1 \leq i \leq n$. the cost of the $i$-th (1-indexed) jump is defined as follows: let $(p, q)$ be a point at which you are standing before the $i$-th jump. consider a set of lattice points that you can jump to. note that this set consists of all the lattice points on the edge of a certain square. we assign integer 1 to point $(p + x_i, q + y_i)$. then, we assign integers $2, 3, . . . , 8d$ to the remaining points in the set in the counter-clockwise order. (here, assume that the right direction is positive in the $x$-axis and the upper direction is positive in the $y$-axis.) these integers represent the costs when you perform a jump to these points.
 
  for example, figure k.1 illustrates the points reachable by your $i$-th jump when $d = 2$ and you are at $(3, 1)$. the numbers represent the costs for $x_i = −1$ and $y_i = −2$.
 figure k.1. reachable points and their costs 
  compute and output the minimum required sum of the costs for the objective.
 

"
p00935,Decimal Sequences,"
hanako learned the conjecture that all the non-negative integers appear in the infinite digit sequence of the decimal representation of $\pi$ = 3.14159265..., the ratio of a circle's circumference to its diameter. after that, whenever she watches a sequence of digits, she tries to count up non-negative integers whose decimal representations appear as its subsequences.
 
for example, given a sequence ""3 0 1"", she finds representations of five non-negative integers 3, 0, 1, 30 and 301 that appear as its subsequences.
 
your job is to write a program that, given a finite sequence of digits, outputs the smallest non-negative integer not appearing in the sequence. in the above example, 0 and 1 appear, but 2 does not. so, 2 should be the answer.
 


"
p00936,Squeeze the Cylinders,"
laid on the flat ground in the stockyard are a number of heavy metal cylinders with (possibly) different diameters but with the same length. their ends are aligned and their axes are oriented to exactly the same direction.
 
we'd like to minimize the area occupied. the cylinders are too heavy to lift up, although rolling them is not too difficult. so, we decided to push the cylinders with two high walls from both sides.
 
your task is to compute the minimum possible distance between the two walls when cylinders are squeezed as much as possible. cylinders and walls may touch one another. they cannot be lifted up from the ground, and thus their order cannot be altered.
 
figure b.1. cylinders between two walls
 






"
p00937,Sibling Rivalry,"
you are playing a game with your elder brother.
 
first, a number of circles and arrows connecting some pairs of the circles are drawn on the ground. two of the circles are marked as the start circle and the goal circle.
 
at the start of the game, you are on the start circle. in each turn of the game, your brother tells you a number, and you have to take that number of steps. at each step, you choose one of the arrows outgoing from the circle you are on, and move to the circle the arrow is heading to. you can visit the same circle or use the same arrow any number of times.
 
your aim is to stop on the goal circle after the fewest possible turns, while your brother's aim is to prevent it as long as possible. note that, in each single turn, you must take the exact number of steps your brother tells you. even when you visit the goal circle during a turn, you have to leave it if more steps are to be taken.
 
if you reach a circle with no outgoing arrows before completing all the steps, then you lose the game. you also have to note that, your brother may be able to repeat turns forever, not allowing you to stop after any of them.
 
your brother, mean but not too selfish, thought that being allowed to choose arbitrary numbers is not fair. so, he decided to declare three numbers at the start of the game and to use only those numbers.
 
your task now is, given the configuration of circles and arrows, and the three numbers declared, to compute the smallest possible number of turns within which you can always nish the game, no matter how your brother chooses the numbers.
 


"
p00938,Wall Clocks,"
you are the manager of a chocolate sales team. your team customarily takes tea breaks every two hours, during which varieties of new chocolate products of your company are served. everyone looks forward to the tea breaks so much that they frequently give a glance at a wall clock.
 
recently, your team has moved to a new office. you have just arranged desks in the office. one team member asked you to hang a clock on the wall in front of her desk so that she will not be late for tea breaks. naturally, everyone seconded her.
 
you decided to provide an enough number of clocks to be hung in the field of view of everyone. your team members will be satisfied if they have at least one clock (regardless of the orientation of the clock) in their view, or, more precisely, within 45 degrees left and 45 degrees right (both ends inclusive) from the facing directions of their seats. in order to buy as few clocks as possible, you should write a program that calculates the minimum number of clocks needed to
meet everyone's demand.
 
the office room is rectangular aligned to north-south and east-west directions. as the walls are tall enough, you can hang clocks even above the door and can assume one's eyesight is not blocked by other members or furniture. you can also assume that each clock is a point (of size zero), and so you can hang a clock even on a corner of the room.
 
for example, assume that there are two members. if they are sitting facing each other at positions shown in figure d.1(a), you need to provide two clocks as they see distinct sections of the wall. if their seats are arranged as shown in figure d.1(b), their fields of view have a common point on the wall. thus, you can meet their demands by hanging a single clock at the point. in figure d.1(c), their fields of view have a common wall section. you can meet their demands with a single clock by hanging it anywhere in the section. arrangements (a), (b), and (c) in figure d.1 correspond to sample input 1, 2, and 3, respectively.
 


"
p00939,Bringing Order to Disorder,"
a sequence of digits usually represents a number, but we may define an alternative interpretation. in this problem we define a new interpretation with the order relation $\prec$ among the digit sequences of the same length defined below.
 
let $s$ be a sequence of $n$ digits, $d_1d_2 ... d_n$, where each $d_i$ $(1 \leq i \leq n)$ is one of 0, 1, ... , and 9. let sum($s$), prod($s$), and int($s$) be as follows:

sum($s$) = $d_1 + d_2 + ... + d_n$
prod($s$) = $(d_1 + 1) \times (d_2 + 1) \times  ... \times (d_n + 1)$
int($s$) = $d_1 \times 10^{n-1} + d_2 \times 10^{n-2} + ... + d_n \times 10^0$


int($s$) is the integer the digit sequence $s$ represents with normal decimal interpretation.
 
let $s_1$ and $s_2$ be sequences of the same number of digits. then $s_1 \prec s_2$ ($s_1$ is less than $s_2$) is satisfied if and only if one of the following conditions is satisfied.
  sum($s_1$) $<$ sum($s_2$)  sum($s_1$) $=$ sum($s_2$) and prod($s_1$) $<$ prod($s_2$)  sum($s_1$) $=$ sum($s_2$), prod($s_1$) $=$ prod($s_2$), and int($s_1$) $<$ int($s_2$) 
for 2-digit sequences, for instance, the following relations are satisfied.


$00 \prec 01 \prec 10 \prec 02 \prec 20 \prec 11 \prec 03 \prec 30 \prec 12 \prec 21 \prec ... \prec 89 \prec 98 \prec 99$
 
your task is, given an $n$-digit sequence $s$, to count up the number of $n$-digit sequences that are less than $s$ in the order $\prec$ defined above.
 


"
p00940,Deadlock Detection,"
you are working on an analysis of a system with multiple processes and some kinds of resource (such as memory pages, dma channels, and i/o ports). each kind of resource has a certain number of instances. a process has to acquire resource instances for its execution. the number of required instances of a resource kind depends on a process. a process finishes its execution and terminates eventually after all the resource in need are acquired. these resource instances are released then so that other processes can use them. no process releases instances before its termination. processes keep trying to acquire resource instances in need, one by one, without taking account of behavior of other processes. since processes run independently of others, they may sometimes become unable to finish their execution because of deadlock.
 
a process has to wait when no more resource instances in need are available until some other processes release ones on their termination. deadlock is a situation in which two or more processes wait for termination of each other, and, regrettably, forever. this happens with the following scenario: one process a acquires the sole instance of resource x, and another process b acquires the sole instance of another resource y; after that, a tries to acquire an instance of y, and b tries to acquire an instance of x. as there are no instances of y other than one acquired by b, a will never acquire y before b finishes its execution, while b will never acquire x before a finishes. there may be more complicated deadlock situations involving three or more processes.
 
your task is, receiving the system's resource allocation time log (from the system's start to a certain time), to determine when the system fell into a deadlock-unavoidable state. deadlock may usually be avoided by an appropriate allocation order, but deadlock-unavoidable states are those in which some resource allocation has already been made and no allocation order from then on can ever avoid deadlock.
 
  let us consider an example corresponding to sample input 1 below. the system has two kinds of resource $r_1$ and $r_2$, and two processes $p_1$ and $p_2$. the system has three instances of $r_1$ and four instances of $r_2$. process $p_1$ needs three instances of $r_1$ and two instances of $r_2$ to finish its execution, while process $p_2$ needs a single instance of $r_1$ and three instances of $r_2$. the resource allocation time log is given as follows.
 
at time 4, $p_2$ acquired $r_1$ and the number of available instances of $r_1$ became less than $p_1$'s need of $r_1$. therefore, it became necessary for $p_1$ to wait $p_2$ to terminate and release the instance. however, at time 5, $p_1$ acquired $r_2$ necessary for $p_2$ to finish its execution, and thus it became necessary also for $p_2$ to wait $p_1$; the deadlock became unavoidable at this time.
 
note that the deadlock was still avoidable at time 4 by finishing $p_2$ first (sample input 2).
 


"
p00941,Do Geese See God?,"
a palindrome is a sequence of characters which reads the same backward or forward. famous ones include ""dogeeseseegod"" (""do geese see god?""), ""amoreroma"" (""amore, roma."") and ""risetovotesir"" (""rise to vote, sir."").
 
an ancient sutra has been handed down through generations at a temple on tsukuba foothills. they say the sutra was a palindrome, but some of the characters have been dropped through transcription.
 
a famous scholar in the field of religious studies was asked to recover the original. after long repeated deliberations, he concluded that no information to recover the original has been lost, and that the original can be reconstructed as the shortest palindrome including all the characters of the current sutra in the same order. that is to say, the original sutra is obtained by adding some characters before, between, and/or behind the characters of the current.
 
given a character sequence, your program should output one of the shortest palindromes containing the characters of the current sutra preserving their order. one of the shortest? yes, more than one shortest palindromes may exist. which of them to output is also specified as its rank among the candidates in the lexicographical order.
 
for example, if the current sutra is cdba and 7th is specified, your program should output cdabadc among the 8 candidates, abcdcba, abdcdba, acbdbca, acdbdca, cabdbac, cadbdac, cdabadc and cdbabdc.
 


"
p00942,Rotating Cutter Bits,"
the machine tool technology never stops its development. one of the recent proposals is more flexible lathes in which not only the workpiece but also the cutter bit rotate around parallel axles in synchronization. when the lathe is switched on, the workpiece and the cutter bit start rotating at the same angular velocity, that is, to the same direction and at the same rotational speed. on collision with the cutter bit, parts of the workpiece that intersect with the cutter bit are cut out.
 
to show the usefulness of the mechanism, you are asked to simulate the cutting process by such a lathe.
 
although the workpiece and the cutter bit may have complex shapes, focusing on cross sections of them on a plane perpendicular to the spinning axles would suffice. we introduce an $xy$-coordinate system on a plane perpendicular to the two axles, in which the center of rotation of the workpiece is at the origin $(0, 0)$, while that of the cutter bit is at $(l, 0)$. you can assume both the workpiece and the cutter bit have polygonal cross sections, not necessarily convex.
 
note that, even when this cross section of the workpiece is divided into two or more parts, the workpiece remain undivided on other cross sections. 
 
we refer to the lattice points (points with both $x$ and $y$ coordinates being integers) strictly inside, that is, inside and not on an edge, of the workpiece before the rotation as points of interest, or poi in short.
 
our interest is in how many poi will remain after one full rotation of 360 degrees of both the workpiece and the cutter bit. poi are said to remain if they are strictly inside the resultant workpiece. write a program that counts them for the given workpiece and cutter bit configuration.
 
figure h.1(a) illustrates the workpiece (in black line) and the cutter bit (in blue line) given in sample input 1. two circles indicate positions of the rotation centers of the workpiece and the cutter bit. the red cross-shaped marks indicate the poi.
 
figure h.1(b) illustrates the workpiece and the cutter bit in progress in case that the rotation direction is clockwise. the light blue area indicates the area cut-off.
 
figure h.1(c) illustrates the result of this sample. note that one of poi is on the edge of the resulting shape. you should not count this point. there are eight poi remained.
 
figure h.1. the workpiece and the cutter bit in sample 1
 




"
p00943,Routing a Marathon Race,"
as a member of the icpc (ibaraki committee of physical competitions), you are responsible for planning the route of a marathon event held in the city of tsukuba. a great number of runners, from beginners to experts, are expected to take part.
 
you have at hand a city map that lists all the street segments suited for the event and all the junctions on them. the race is to start at the junction in front of tsukuba high, and the goal is at the junction in front of city hall, both of which are marked on the map.
 
to avoid congestion and confusion of runners of divergent skills, the route should not visit the same junction twice. consequently, although the street segments can be used in either direction, they can be included at most once in the route. as the main objective of the event is in recreation and health promotion of citizens, time records are not important and the route distance can be arbitrarily decided.
 
a number of personnel have to be stationed at every junction on the route. junctions adjacent to them, i.e., junctions connected directly by a street segment to the junctions on the route, also need personnel staffing to keep casual traffic from interfering the race. the same number of personnel is required when a junction is on the route and when it is adjacent to one, but different junctions require different numbers of personnel depending on their sizes and shapes, which are also indicated on the map.
 
the municipal authorities are eager in reducing the costs including the personnel expense for
events of this kind. your task is to write a program that plans a route with the minimum
possible number of personnel required and outputs that number.
 


"
p00944,Post Office Investigation,"
in this country, all international mails from abroad are first gathered to the central post office, and then delivered to each destination post office relaying some post offices on the way. the delivery routes between post offices are described by a directed graph $g = (v,e)$, where $v$ is the set of post offices and $e$ is the set of possible mail forwarding steps. due to the inefficient operations, you cannot expect that the mails are delivered along the shortest route.
 
the set of post offices can be divided into a certain number of groups. here, a group is defined as a set of post offices where mails can be forwarded from any member of the group to any other member, directly or indirectly. the number of post offices in such a group does not exceed 10.
 
the post offices frequently receive complaints from customers that some mails are not delivered yet. such a problem is usually due to system trouble in a single post office, but identifying which is not easy. thus, when such complaints are received, the customer support sends staff to check the system of each candidate post office. here, the investigation cost to check the system of the post office $u$ is given by $c_u$, which depends on the scale of the post office.
 
since there are many post offices in the country, and such complaints are frequently received, reducing the investigation cost is an important issue. to reduce the cost, the post service administration determined to use the following scheduling rule: when complaints on undelivered mails are received by the post offices $w_1, ..., w_k$ one day, staff is sent on the next day to investigate a single post office $v$ with the lowest investigation cost among candidates. here, the post office $v$ is a candidate if all mails from the central post office to the post offices $w_1, ... , w_k$ must go through $v$. if no problem is found in the post office $v$, we have to decide the order of investigating other post offices, but the problem is left to some future days.
 
your job is to write a program that finds the cost of the lowest-cost candidate when the list of complained post offices in a day, described by $w_1, ... , w_k$, is given as a query.
 



"
p00945,Max Distance Game,"
alice and bob are playing the following game. initially, $n$ stones are placed in a straight line on a table. alice and bob take turns alternately. in each turn, the player picks one of the stones and removes it. the game continues until the number of stones on the straight line becomes two. the two stones are called result stones. alice's objective is to make the result stones as distant as possible, while bob's is to make them closer.
 
you are given the coordinates of the stones and the player's name who takes the first turn. assuming that both alice and bob do their best, compute and output the distance between the result stones at the end of the game.
 




"
p00946,Rearranging a Sequence,"
you are given an ordered sequence of integers, ($1, 2, 3, ..., n$). then, a number of requests will be given. each request specifies an integer in the sequence. you need to move the specified integer to the head of the sequence, leaving the order of the rest untouched. your task is to find the order of the elements in the sequence after following all the requests successively.
 

"
p00947,Quality of Check Digits,"
the small city where you live plans to introduce a new social security number (ssn) system. each citizen will be identified by a five-digit ssn. its first four digits indicate the basic id number (0000 - 9999) and the last one digit is a check digit for detecting errors.
 
for computing check digits, the city has decided to use an operation table. an operation table is a 10 $\times$ 10 table of decimal digits whose diagonal elements are all 0. below are two example operation tables.
 
using an operation table, the check digit $e$ for a four-digit basic id number $abcd$ is computed by using the following formula. here, $i \otimes
 j$ denotes the table element at row $i$ and column $j$.


$e = (((0 \otimes a) \otimes  b) \otimes c) \otimes d$



for example, by using operation table 1 the check digit $e$ for a basic id number $abcd = $ 2016 is computed in the following way.


$e = (((0 \otimes 2) \otimes 0) \otimes 1) \otimes 6$
$\;\;\;  = (( \;\;\;\;\;\;\;\;\;  1 \otimes 0) \otimes 1) \otimes 6$
$\;\;\;  = ( \;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\; 7 \otimes 1) \otimes 6$
$\;\;\;  =  \;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\; 9 \otimes 6$
$\;\;\;  =  \;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;\;  6$


thus, the ssn is 20166.
 
note that the check digit depends on the operation table used. with operation table 2, we have $e = $ 3 for the same basic id number 2016, and the whole ssn will be 20163.
 
the purpose of adding the check digit is to detect human errors in writing/typing ssns. the following check function can detect certain human errors. for a five-digit number $abcde$, the check function is defined as follows.
 
this function returns 0 for a correct ssn. this is because every diagonal element in an operation table is 0 and for a correct ssn we have $e = (((0 \otimes a) \otimes b) \otimes c) \otimes d$:
 
on the other hand, a non-zero value returned by check indicates that the given number cannot be a correct ssn. note that, depending on the operation table used, check function may return 0 for an incorrect ssn. kinds of errors detected depends on the operation table used; the table decides the quality of error detection.
 
the city authority wants to detect two kinds of common human errors on digit sequences: altering one single digit and transposing two adjacent digits, as shown in figure b.1. 
 
an operation table is good if it can detect all the common errors of the two kinds on all ssns made from four-digit basic id numbers 0000{9999. note that errors with the check digit, as well as with four basic id digits, should be detected. for example, operation table 1 is good. operation table 2 is not good because, for 20613, which is a number obtained by transposing the 3rd and the 4th digits of a correct ssn 20163, check(20613) is 0. actually, among 10000 basic id numbers, operation table 2 cannot detect one or more common errors for as many as 3439 basic id numbers.
 
given an operation table, decide how good it is by counting the number of basic id numbers for which the given table cannot detect one or more common errors.
 








"
p00948,Distribution Center,"
the factory of the impractically complicated products corporation has many manufacturing lines and the same number of corresponding storage rooms. the same number of conveyor lanes are laid out in parallel to transfer goods from manufacturing lines directly to the corresponding storage rooms. now, they plan to install a number of robot arms here and there between pairs of adjacent conveyor lanes so that goods in one of the lanes can be picked up and released down on the other, and also in the opposite way. this should allow mixing up goods from different manufacturing lines to the storage rooms.
 
depending on the positions of robot arms, the goods from each of the manufacturing lines can only be delivered to some of the storage rooms. your task is to find the number of manufacturing lines from which goods can be transferred to each of the storage rooms, given the number of conveyor lanes and positions of robot arms.
 


"
p00949,Hidden Anagrams,"
an anagram is a word or a phrase that is formed by rearranging the letters of another. for instance, by rearranging the letters of ""william shakespeare,"" we can have its anagrams ""i am a weakish speller,"" ""i'll make a wise phrase,"" and so on. note that when $a$ is an anagram of $b$, $b$ is an anagram of $a$.
 
in the above examples, differences in letter cases are ignored, and word spaces and punctuation symbols are freely inserted and/or removed. these rules are common but not applied here; only exact matching of the letters is considered.
 
for two strings $s_1$ and $s_2$ of letters, if a substring $s'_1$ of $s_1$ is an anagram of a substring $s'_2$ of $s_2$, we call $s'_1$ a hidden anagram of the two strings, $s_1$ and $s_2$. of course, $s'_2$ is also a hidden anagram of them.
 
your task is to write a program that, for given two strings, computes the length of the longest hidden anagrams of them.
 
suppose, for instance, that ""anagram"" and ""grandmother"" are given. their substrings ""nagr"" and ""gran"" are hidden anagrams since by moving letters you can have one from the other. they are the longest since any substrings of ""grandmother"" of lengths five or more must contain ""d"" or ""o"" that ""anagram"" does not. in this case, therefore, the length of the longest hidden anagrams is four. note that a substring must be a sequence of letters occurring consecutively in the original string and so ""nagrm"" and ""granm"" are not hidden anagrams.
 


"
p00950,Infallibly Crack Perplexing Cryptarithm,"
  you are asked to crack an encrypted equation over binary numbers.
 
  the original equation consists only of binary digits (""0"" and ""1""), operator symbols (""+"", ""-"", and ""*""), parentheses (""("" and "")""), and an equal sign (""=""). the encryption replaces some occurrences of characters in an original arithmetic equation by letters. occurrences of one character are replaced, if ever, by the same letter. occurrences of two different characters are never replaced by the same letter. note that the encryption does not always replace all the occurrences of the same character; some of its occurrences may be replaced while others may be left as they are. some characters may be left unreplaced. any character in the roman alphabet, in either lowercase or uppercase, may be used as a replacement letter. note that cases are significant, that is, ""a"" and ""a"" are different letters. note that not only digits but also operator symbols, parentheses and even the equal sign are possibly replaced.
 
  the arithmetic equation is derived from the start symbol of $q$ of the following context-free grammar.
  

  $q ::= e=e$
  $e ::= t | e+t | e-t$
  $t ::= f | t*f $
  $f ::= n | -f | (e) $
  $n ::= 0 | 1b $
  $b ::= \epsilon | 0b | 1b$
  
here, $\epsilon$ means empty.
 
  as shown in this grammar, the arithmetic equation should have one equal sign. each side of the equation is an expression consisting of numbers, additions, subtractions, multiplications, and negations. multiplication has precedence over both addition and subtraction, while negation precedes multiplication. multiplication, addition and subtraction are left associative. for example, x-y+z means (x-y)+z, not x-(y+z). numbers are in binary notation, represented by a sequence of binary digits, 0 and 1. multi-digit numbers always start with 1. parentheses and negations may appear redundantly in the equation, as in ((--x+y))+z.
 
write a program that, for a given encrypted equation, counts the number of different possible original correct equations. here, an equation should conform to the grammar and it is correct when the computed values of the both sides are equal.
 
  for sample input 1, c must be = because any equation has one = between two expressions. then, because a and m should be different, although there are equations conforming to the grammar, none of them can be correct.
 
  for sample input 2, the only possible correct equation is -0=0.
 
for sample input 3 (b-a-y-l-zero-r), there are three different correct equations, 0=-(0), 0=(-0), and -0=(0). note that one of the two occurrences of zero is not replaced with a letter in the encrypted equation.
 


"
p00951,Three Kingdoms of Bourdelot,"
  you are an archaeologist at the institute for cryptic pedigree charts, specialized in the study of the ancient three kingdoms of bourdelot. one day, you found a number of documents on the dynasties of the three kingdoms of bourdelot during excavation of an ancient ruin. since the early days of the kingdoms of bourdelot are veiled in mystery and even the names of many kings and queens are lost in history, the documents are expected to reveal the blood relationship of the ancient dynasties.
 
  the documents have lines, each of which consists of a pair of names, presumably of ancient royal family members. an example of a document with two lines follows.
 
  lines should have been complete sentences, but the documents are heavily damaged and therefore you can read only two names per line. at first, you thought that all of those lines described the true ancestor relations, but you found that would lead to contradiction. later, you found that some documents should be interpreted negatively in order to understand the ancestor relations without contradiction. formally, a document should be interpreted either as a positive document or as a negative document.
  in a positive document, the person on the left in each line is an ancestor of the person on the right in the line. if the document above is a positive document, it should be interpreted as ""alice is an ancestor of bob, and bob is an ancestor of clare"".
    in a negative document, the person on the left in each line is not an ancestor of the person on the right in the line. if the document above is a negative document, it should be interpreted as ""alice is not an ancestor of bob, and bob is not an ancestor of clare"".
   
  a single document can never be a mixture of positive and negative parts. the document above can never read ""alice is an ancestor of bob, and bob is not an ancestor of clare"".
 
  you also found that there can be ancestor-descendant pairs that didn't directly appear in the documents but can be inferred by the following rule: for any persons $x$, $y$ and $z$, if $x$ is an ancestor of $y$ and $y$ is an ancestor of $z$, then $x$ is an ancestor of $z$. for example, if the document above is a positive document, then the ancestor-descendant pair of ""alice clare"" is inferred.
 
  you are interested in the ancestry relationship of two royal family members. unfortunately, the interpretation of the documents, that is, which are positive and which are negative, is unknown. given a set of documents and two distinct names $p$ and $q$, your task is to find an interpretation of the documents that does not contradict with the hypothesis that $p$ is an ancestor of $q$. an interpretation of the documents contradicts with the hypothesis if and only if there exist persons $x$ and $y$ such that we can infer from the interpretation of the documents and the hypothesis that
  $x$ is an ancestor of $y$ and $y$ is an ancestor of $x$, or  $x$ is an ancestor of $y$ and $x$ is not an ancestor of $y$. 
  we are sure that every person mentioned in the documents had a unique single name, i.e., no two persons have the same name and one person is never mentioned with different names.
 
  when a person a is an ancestor of another person b, the person a can be a parent, a grandparent, a great-grandparent, or so on, of the person b. also, there can be persons or ancestor-descendant pairs that do not appear in the documents. for example, for a family tree shown in figure f.1, there can be a positive document:
 
  where persons c and g do not appear, and the ancestor-descendant pairs such as ""a e"", ""d f"", and ""c i"" do not appear.
 




figure f.1. a family tree






"
p00952,Placing Medals on a Binary Tree,"
  you have drawn a chart of a perfect binary tree, like one shown in figure g.1. the figure shows a finite tree, but, if needed, you can add more nodes beneath the leaves, making the tree arbitrarily deeper.
 
  tree nodes are associated with their depths, defined recursively. the root has the depth of zero, and the child nodes of a node of depth d have their depths $d + 1$.
 you also have a pile of a certain number of medals, each engraved with some number. you want to know whether the medals can be placed on the tree chart satisfying the following conditions.
  a medal engraved with $d$ should be on a node of depth $d$.  one tree node can accommodate at most one medal.  the path to the root from a node with a medal should not pass through another node with a medal. 
  you have to place medals satisfying the above conditions, one by one, starting from the top of the pile down to its bottom. if there exists no placement of a medal satisfying the conditions, you have to throw it away and simply proceed to the next medal.
 
  you may have choices to place medals on different nodes. you want to find the best placement. when there are two or more placements satisfying the rule, one that places a medal upper in the pile is better. for example, when there are two placements of four medal, one that places only the top and the 2nd medal, and the other that places the top, the 3rd, and the 4th medal, the former is better.
 
in sample input 1, you have a pile of six medals engraved with 2, 3, 1, 1, 4, and 2 again respectively, from top to bottom.
  the first medal engraved with 2 can be placed, as shown in figure g.2 (a).  then the second medal engraved with 3 may be placed , as shown in figure g.2 (b).  the third medal engraved with 1 cannot be placed if the second medal were placed as stated above, because both of the two nodes of depth 1 are along the path to the root from nodes already with a medal. replacing the second medal satisfying the placement conditions, however, enables a placement shown in figure g.2 (c).  the fourth medal, again engraved with 1, cannot be placed with any replacements of the three medals already placed satisfying the conditions. this medal is thus thrown away.  the fifth medal engraved with 4 can be placed as shown in of figure g.2 (d).   the last medal engraved with 2 cannot be placed on any of the nodes with whatever replacements. 



  
figure g.2. medal placements


"
p00953,Animal Companion in Maze,"
  george, your pet monkey, has escaped, slipping the leash!
 
  george is hopping around in a maze-like building with many rooms. the doors of the rooms, if any, lead directly to an adjacent room, not through corridors. some of the doors, however, are one-way: they can be opened only from one of their two sides.
 
  he repeats randomly picking a door he can open and moving to the room through it. you are chasing him but he is so quick that you cannot catch him easily. he never returns immediately to the room he just has come from through the same door, believing that you are behind him. if any other doors lead to the room he has just left, however, he may pick that door and go back.
 
  if he cannot open any doors except one through which he came from, voila, you can catch him there eventually.
 
  you know how rooms of the building are connected with doors, but you don't know in which room george currently is.
 
it takes one unit of time for george to move to an adjacent room through a door.
 
write a program that computes how long it may take before george will be confined in a room. you have to find the longest time, considering all the possibilities of the room george is in initially, and all the possibilities of his choices of doors to go through.
 
  note that, depending on the room organization, george may have possibilities to continue hopping around forever without being caught.
 
doors may be on the ceilings or the floors of rooms; the connection of the rooms may not be drawn as a planar graph.
 



"
p00954,Skinny Polygon,"
you are asked to find a polygon that satisfies all the following conditions, given two integers, $x_{bb}$ and $y_{bb}$.
  the number of vertices is either 3 or 4.  edges of the polygon do not intersect nor overlap with other edges, i.e., they do not share any points with other edges except for their endpoints.  the $x$- and $y$-coordinates of each vertex are integers.   the $x$-coordinate of each vertex is between 0 and $x_{bb}$, inclusive. similarly, the $y$-coordinate is between 0 and $y_{bb}$, inclusive.  at least one vertex has its $x$-coordinate 0.  at least one vertex has its $x$-coordinate $x_{bb}$.  at least one vertex has its $y$-coordinate 0.  at least one vertex has its $y$-coordinate $y_{bb}$.  the area of the polygon does not exceed 25000. 
  the polygon may be non-convex.
   


"
p00955,Cover the Polygon with Your Disk,"
a convex polygon is drawn on a flat paper sheet. you are trying to place a disk in your hands to cover as large area of the polygon as possible. in other words, the intersection area of the polygon and the disk should be maximized.
 


"
p00956,Black and White Boxes,"
alice and bob play the following game.
  there are a number of straight piles of boxes. the boxes have the same size and are painted either black or white.
  two players, namely alice and bob, take their turns alternately. who to play first is decided by a fair random draw.
  in alice's turn, she selects a black box in one of the piles, and removes the box together with all the boxes above it, if any. if no black box to remove is left, she loses the game.
  in bob's turn, he selects a white box in one of the piles, and removes the box together with all the boxes above it, if any. if no white box to remove is left, he loses the game. 
 
given an initial configuration of piles and who plays first, the game is a definite perfect information game. in such a game, one of the players has sure win provided he or she plays best. the draw for the first player, thus, essentially decides the winner.
 
in fact, this seemingly boring property is common with many popular games, such as chess. the chess game, however, is complicated enough to prevent thorough analyses, even by supercomputers, which leaves us rooms to enjoy playing.
 
this game of box piles, however, is not as complicated. the best plays may be more easily found. thus, initial configurations should be fair, that is, giving both players chances to win. a configuration in which one player can always win, regardless of who plays first, is undesirable.
 
you are asked to arrange an initial configuration for this game by picking a number of piles from the given candidate set. as more complicated configuration makes the game more enjoyable, you are expected to find the configuration with the maximum number of boxes among fair ones.
 


"
p00957,Secret of Chocolate Poles,"
  wendy, the master of a chocolate shop, is thinking of displaying poles of chocolate disks in the showcase. she can use three kinds of chocolate disks: white thin disks, dark thin disks, and dark thick disks. the thin disks are $1$ cm thick, and the thick disks are $k$ cm thick. disks will be piled in glass cylinders.
 
  each pole should satisfy the following conditions for her secret mission, which we cannot tell.
  a pole should consist of at least one disk.  the total thickness of disks in a pole should be less than or equal to $l$ cm.  the top disk and the bottom disk of a pole should be dark.  a disk directly upon a white disk should be dark and vice versa. 
  as examples, six side views of poles are drawn in figure a.1. these are the only possible side views she can make when $l = 5$ and $k = 3$.
 
    figure a.1. six chocolate poles corresponding to sample input 1
   
  your task is to count the number of distinct side views she can make for given $l$ and $k$ to help her accomplish her secret mission.
 


"
p00958,Parallel Lines,"
  given an even number of distinct planar points, consider coupling all of the points into pairs. all the possible couplings are to be considered as long as all the given points are coupled to one and only one other point.
 
  when lines are drawn connecting the two points of all the coupled point pairs, some of the drawn lines can be parallel to some others. your task is to find the maximum number of parallel line pairs considering all the possible couplings of the points.
 
  for the case given in the first sample input with four points, there are three patterns of point couplings as shown in figure b.1. the numbers of parallel line pairs are 0, 0, and 1, from the left. so the maximum is 1.
 figure b.1. all three possible couplings for sample input 1 
  for the case given in the second sample input with eight points, the points can be coupled as shown in figure b.2. with such a point pairing, all four lines are parallel to one another. in other words, the six line pairs $(l_1, l_2)$, $(l_1, l_3)$, $(l_1, l_4)$, $(l_2, l_3)$, $(l_2, l_4)$ and $(l_3, l_4)$ are parallel. so the maximum number of parallel line pairs, in this case, is 6.
 


"
p00959,Medical Checkup,"
  students of the university have to go for a medical checkup, consisting of lots of checkup items, numbered 1, 2, 3, and so on.
 
  students are now forming a long queue, waiting for the checkup to start. students are also numbered 1, 2, 3, and so on, from the top of the queue. they have to undergo checkup items in the order of the item numbers, not skipping any of them nor changing the order. the order of students should not be changed either.
 
  multiple checkup items can be carried out in parallel, but each item can be carried out for only one student at a time. students have to wait in queues of their next checkup items until all the others before them finish.
 
  each of the students is associated with an integer value called health condition. for a student with the health condition $h$, it takes $h$ minutes to finish each of the checkup items. you may assume that no interval is needed between two students on the same checkup item or two checkup items for a single student.
 
  your task is to find the items students are being checked up or waiting for at a specified time $t$.
 


"
p00960,Making Perimeter of the Convex Hull Shortest,"
  the convex hull of a set of three or more planar points is, when not all of them are on one line, the convex polygon with the smallest area that has all the points of the set on its boundary or in its inside. your task is, given positions of the points of a set, to find how much shorter the perimeter of the convex hull can be made by excluding two points from the set.
 
  the figures below correspond to the three cases given as sample input 1 to 3. encircled points are excluded to make the shortest convex hull depicted as thick dashed lines.
 

  
    
    
    
  
  
    sample input 1
    sample input 2
    sample input 3

  


"
p00961,Black or White,"
  here lies a row of a number of bricks each painted either black or white. with a single stroke of your brush, you can overpaint a part of the row of bricks at once with either black or white paint. using white paint, all the black bricks in the painted part become white while originally white bricks remain white; with black paint, white bricks become black and black ones remain black. the number of bricks painted in one stroke, however, is limited because your brush cannot hold too much paint at a time. for each brush stroke, you can paint any part of the row with any number of bricks up to the limit.
 
  in the first case of the sample input, the initial colors of four bricks are black, white, white, and black. you can repaint them to white, black, black, and white with two strokes: the first stroke paints all four bricks white and the second stroke paints two bricks in the middle black.
 
  your task is to calculate the minimum number of brush strokes needed to change the brick colors as specified. never mind the cost of the paints.
 

"
p00962,Pizza Delivery,"
  alyssa is a college student, living in new tsukuba city. all the streets in the city are one-way. a new social experiment starting tomorrow is on alternative traffic regulation reversing the one-way directions of street sections. reversals will be on one single street section between two adjacent intersections for each day; the directions of all the other sections will not change, and the reversal will be canceled on the next day.
 
alyssa orders a piece of pizza everyday from the same pizzeria. the pizza is delivered along the shortest route from the intersection with the pizzeria to the intersection with alyssa's house.
 
  altering the traffic regulation may change the shortest route. please tell alyssa how the social experiment will affect the pizza delivery route.
 

"
p00963,Rendezvous on a Tetrahedron,"
  one day, you found two worms $p$ and $q$ crawling on the surface of a regular tetrahedron with four vertices $a$, $b$, $c$ and $d$. both worms started from the vertex $a$, went straight ahead, and stopped crawling after a while.
 
  when a worm reached one of the edges of the tetrahedron, it moved on to the adjacent face and kept going without changing the angle to the crossed edge (figure g.1).
 
  write a program which tells whether or not $p$ and $q$ were on the same face of the tetrahedron when they stopped crawling.
 
  you may assume that each of the worms is a point without length, area, or volume.
   figure g.1. crossing an edge 
  incidentally, lengths of the two trails the worms left on the tetrahedron were exact integral multiples of the unit length. here, the unit length is the edge length of the tetrahedron. each trail is more than 0:001 unit distant from any vertices, except for its start point and its neighborhood.
  this means that worms have crossed at least one edge. both worms stopped at positions more than 0:001 unit distant from any of the edges.
 
  the initial crawling direction of a worm is specified by two items: the edge $xy$ which is the first edge the worm encountered after its start, and the angle $d$ between the edge $ax$ and the direction of the worm, in degrees.
 figure g.2. trails of the worms corresponding to sample input 1 
  figure g.2 shows the case of sample input 1. in this case, $p$ went over the edge $cd$ and stopped on the face opposite to the vertex $a$, while $q$ went over the edge $db$ and also stopped on the same face.
 


"
p00964,Homework,"
  taro is a student of ibaraki college of prominent computing. in this semester, he takes two courses, mathematics and informatics. after each class, the teacher may assign homework. taro may be given multiple assignments in a single class, and each assignment may have a different deadline. each assignment has a unique id number.
 
  everyday after school, taro completes at most one assignment as follows. first, he decides which course's homework to do at random by ipping a coin. let $s$ be the set of all the unfinished assignments of the chosen course whose deadline has not yet passed. if $s$ is empty, he plays a video game without doing any homework on that day even if there are unfinished assignments of the other course. otherwise, with $t \subseteq s$ being the set of assignments with the nearest deadline among $s$, he completes the one with the smallest assignment id among $t$.
 
  the number of assignments taro will complete until the end of the semester depends on the result of coin ips. given the schedule of homework assignments, your task is to compute the maximum and the minimum numbers of assignments taro will complete.
 


"
p00965,Starting a Scenic Railroad Service,"
  jim, working for a railroad company, is responsible for planning a new tourist train service. he is sure that the train route along a scenic valley will arise a big boom, but not quite sure how big the boom will be.
 
  a market survey was ordered and jim has just received an estimated list of passengers' travel sections. based on the list, he'd like to estimate the minimum number of train seats that meets the demand.
 
  providing as many seats as all of the passengers may cost unreasonably high. assigning the same seat to more than one passenger without overlapping travel sections may lead to a great cost cutback.
 
  two different policies are considered on seat assignments. as the views from the train windows depend on the seat positions, it would be better if passengers can choose a seat. one possible policy (named `policy-1') is to allow the passengers to choose an arbitrary seat among all the remaining seats when they make their reservations. as the order of reservations is unknown, all the possible orders must be considered on counting the required number of seats.
 
  the other policy (named `policy-2') does not allow the passengers to choose their seats; the seat assignments are decided by the railroad operator, not by the passengers, after all the reservations are completed. this policy may reduce the number of the required seats considerably.
 
  your task is to let jim know how dierent these two policies are by providing him a program that computes the numbers of seats required under the two seat reservation policies. let us consider a case where there are four stations, s1, s2, s3, and s4, and four expected passengers $p_1$, $p_2$, $p_3$, and $p_4$ with the travel list below.
 
  the travel sections of $p_1$ and $p_2$ do not overlap, that of $p_3$ overlaps those of $p_1$ and $p_2$, and that of $p_4$ does not overlap those of any others.
 
  let's check if two seats would suffice under the policy-1. if $p_1$ books a seat first, either of the two seats can be chosen. if $p_2$ books second, as the travel section does not overlap that of $p_1$, the same seat can be booked, but the other seat may look more attractive to $p_2$. if $p_2$ reserves a seat different from that of $p_1$, there will remain no available seats for $p_3$ between s1 and s3 (figure i.1).
 figure i.1. with two seats 
  with three seats, $p_3$ can find a seat with any seat reservation combinations by $p_1$ and $p_2$. $p_4$ can also book a seat for there are no other passengers between s3 and s4 (figure i.2).
 figure i.2. with three seats 
  for this travel list, only three seats suffice considering all the possible reservation orders and seat preferences under the policy-1.
 
  on the other hand, deciding the seat assignments after all the reservations are completed enables a tight assignment with only two seats under the policy-2 (figure i.3).
 figure i.3. tight assignment to two seats 


"
p00966,String Puzzle,"
  amazing coding magazine is popular among young programmers for its puzzle solving contests offering catchy digital gadgets as the prizes. the magazine for programmers naturally encourages the readers to solve the puzzles by writing programs. let's give it a try!
 
  the puzzle in the latest issue is on deciding some of the letters in a string (the secret string, in what follows) based on a variety of hints. the figure below depicts an example of the given hints.
   
  the first hint is the number of letters in the secret string. in the example of the figure above, it is nine, and the nine boxes correspond to nine letters. the letter positions (boxes) are numbered starting from 1, from the left to the right.
 
  the hints of the next kind simply tell the letters in the secret string at some specic positions. in the example, the hints tell that the letters in the 3rd, 4th, 7th, and 9th boxes are c, i, c, and p</span., respectively.
 
  the hints of the final kind are on duplicated substrings in the secret string. the bar immediately
  below the boxes in the figure is partitioned into some sections corresponding to substrings of the secret string. each of the sections may be connected by a line running to the left with another bar also showing an extent of a substring. each of the connected pairs indicates that substrings of the two extents are identical. one of this kind of hints in the example tells that the letters in boxes 8 and 9 are identical to those in boxes 4 and 5, respectively. from this, you can easily deduce that the substring is ip.
 
  note that, not necessarily all of the identical substring pairs in the secret string are given in the hints; some identical substring pairs may not be mentioned.
 
  note also that two extents of a pair may overlap each other. in the example, the two-letter substring in boxes 2 and 3 is told to be identical to one in boxes 1 and 2, and these two extents share the box 2.
 
  in this example, you can decide letters at all the positions of the secret string, which are ""cccipccip"". in general, the hints may not be enough to decide all the letters in the secret string.
 
  the answer of the puzzle should be letters at the specified positions of the secret string. when the letter at the position specified cannot be decided with the given hints, the symbol ? should be answered.
 

"
p00967,Counting Cycles,"
  given an undirected graph, count the number of simple cycles in the graph. here, a simple cycle is a connected subgraph all of whose vertices have degree exactly two.
 

"
p00968,Digits Are Not Just Characters,"
  mr. manuel majorana minore made a number of files with numbers in their names. he wants to have a list of the files, but the file listing command commonly used lists them in an order different from what he prefers, interpreting digit sequences in them as ascii code sequences, not as numbers. for example, the files file10, file20 and file3 are listed in this order.
 
write a program which decides the orders of file names interpreting digit sequences as numeric
values.
 
  each file name consists of uppercase letters (from 'a' to 'z'), lowercase letters (from 'a' to 'z'), and digits (from '0' to '9').
 
a file name is looked upon as a sequence of items, each being either a letter or a number. each
single uppercase or lowercase letter forms a letter item. each consecutive sequence of digits forms a number item.
 
  two item are ordered as follows.
  number items come before letter items.  two letter items are ordered by their ascii codes.  two number items are ordered by their values when interpreted as decimal numbers. 
  two file names are compared item by item, starting from the top, and the order of the first different corresponding items decides the order of the file names. if one of them, say $a$, has more items than the other, $b$, and all the items of $b$ are the same as the corresponding items of $a$, $b$ should come before.
 
  for example, three file names in sample input 1, file10, file20, and file3 all start with the same sequence of four letter items f, i, l, and e, followed by a number item, 10, 20, and 3, respectively. comparing numeric values of these number items, they are ordered as file3 $file10 $file20.
 


"
p00969,Arithmetic Progressions,"
  an arithmetic progression is a sequence of numbers $a_1, a_2, ..., a_k$ where the difference of consecutive members $a_{i+1} - a_i$ is a constant ($1 \leq i \leq k-1$). for example, the sequence 5, 8, 11, 14, 17 is an arithmetic progression of length 5 with the common difference 3.
 
in this problem, you are requested to find the longest arithmetic progression which can be formed selecting some numbers from a given set of numbers. for example, if the given set of numbers is {0, 1, 3, 5, 6, 9}, you can form arithmetic progressions such as 0, 3, 6, 9 with the common difference 3, or 9, 5, 1 with the common difference -4. in this case, the progressions 0, 3, 6, 9
and 9, 6, 3, 0 are the longest.
 


"
p00970,Emergency Evacuation,"
  the japanese government plans to increase the number of inbound tourists to forty million in the year 2020, and sixty million in 2030. not only increasing touristic appeal but also developing tourism infrastructure further is indispensable to accomplish such numbers.
 
  one possible enhancement on transport is providing cars extremely long and/or wide, carrying many passengers at a time. too large a car, however, may require too long to evacuate all passengers in an emergency. you are requested to help estimating the time required.
 
  the car is assumed to have the following seat arrangement.
  a center aisle goes straight through the car, directly connecting to the emergency exit door at the rear center of the car.  the rows of the same number of passenger seats are on both sides of the aisle. 
  a rough estimation requested is based on a simple step-wise model. all passengers are initially on a distinct seat, and they can make one of the following moves in each step.
  passengers on a seat can move to an adjacent seat toward the aisle. passengers on a seat adjacent to the aisle can move sideways directly to the aisle.  passengers on the aisle can move backward by one row of seats. if the passenger is in front of the emergency exit, that is, by the rear-most seat rows, he/she can get off the car. 
  the seat or the aisle position to move to must be empty; either no other passenger is there before the step, or the passenger there empties the seat by moving to another position in the same step. when two or more passengers satisfy the condition for the same position, only one of them can move, keeping the others wait in their original positions.
 
  the leftmost figure of figure c.1 depicts the seat arrangement of a small car given in sample input 1. the car have five rows of seats, two seats each on both sides of the aisle, totaling twenty. the initial positions of seven passengers on board are also shown.
 
  the two other figures of figure c.1 show possible positions of passengers after the first and the second steps. passenger movements are indicated by fat arrows. note that, two of the passengers in the front seat had to wait for a vacancy in the first step, and one in the second row had to wait in the next step.
 
  your task is to write a program that gives the smallest possible number of steps for all the passengers to get off the car, given the seat arrangement and passengers' initial positions.
 


  
  figure c.1
  
     
"
p00971,Subsequence,"
a subsequence of a sequence $p$ is a sequence that can be derived from the original sequence $p$ by picking up some or no elements of $p$ preserving the order. for example, ""icpc"" is a subsequence of ""microprocessor"".
 
  a common subsequence of two sequences is a subsequence of both sequences. the famous longest common subsequence problem is finding the longest of common subsequences of two given sequences.
 
  in this problem, conversely, we consider the shortest common non-subsequence problem: given two sequences consisting of 0 and 1, your task is to find the shortest sequence also consisting of 0 and 1 that is a subsequence of neither of the two sequences.
 

"
p00972,Eulerian Flight Tour,"
  you have an airline route map of a certain region. all the airports in the region and all the non-stop routes between them are on the map. here, a non-stop route is a flight route that provides non-stop flights in both ways.
 
  named after the great mathematician leonhard euler, an eulerian tour is an itinerary visiting all the airports in the region taking a single flight of every non-stop route available in the region. to be precise, it is a list of airports, satisfying all of the following.
  the list begins and ends with the same airport.  there are non-stop routes between pairs of airports adjacent in the list.  all the airports in the region appear at least once in the list. note that it is allowed to have some airports appearing multiple times.  for all the airport pairs with non-stop routes in between, there should be one and only one adjacent appearance of two airports of the pair in the list in either order. 
  it may not always be possible to find an eulerian tour only with the non-stop routes listed in the map. adding more routes, however, may enable eulerian tours. your task is to find a set of additional routes that enables eulerian tours.
 


"
p00973,Cutting,"
  you are given a flat piece of chocolate of convex polygon shape. you are to cut it into two pieces of precisely the same amount with a straight knife.
 
  write a program that computes, for a given convex polygon, the maximum and minimum lengths of the line segments that divide the polygon into two equal areas.
 
  the figures below correspond to first two sample inputs. two dashed lines in each of them correspond to the equal-area cuts of minimum and maximum lengths.
 


  
  figure f.1. sample chocolate pieces and cut lines



"
p00974,What Goes Up Must Come Down,"
  several cards with numbers printed on them are lined up on the table.
 
  we'd like to change their order so that first some are in non-decreasing order of the numbers on them, and the rest are in non-increasing order. for example, (1, 2, 3, 2, 1), (1, 1, 3, 4, 5, 9, 2), and (5, 3, 1) are acceptable orders, but (8, 7, 9) and (5, 3, 5, 3) are not.
 
  to put it formally, with $n$ the number of cards and $b_i$ the number printed on the card at the $i$-th position ($1 \leq i \leq n$) after reordering, there should exist $k \in \{1, ... n\}$ such that ($b_i \leq b_{i+1} \forall _i \in \{1, ... k - 1\}$) and ($b_i \geq b_{i+1} \forall _i \in \{k, ..., n - 1\}$) hold.
 
  for reordering, the only operation allowed at a time is to swap the positions of an adjacent card pair. we want to know the minimum number of swaps required to complete the reorder.
 

"
p00975,Coloring,"
you are given a planar embedding of a connected graph. each vertex of the graph corresponds to a distinct point with integer coordinates. each edge between two vertices corresponds to a straight line segment connecting the two points corresponding to the vertices. as the given embedding is planar, the line segments corresponding to edges do not share any points other than their common endpoints. the given embedding is organized so that inclinations of all the line segments are multiples of 45 degrees. in other words, for two points with coordinates ($x_u, y_u$) and ($x_v, y_v$) corresponding to vertices $u$ and $v$ with an edge between them, one of $x_u = x_v$, $y_u = y_v$, or $|x_u - x_v| = |y_u - y_v|$ holds.
 
  your task is to color each vertex in one of the four colors, {1, 2, 3, 4}, so that no two vertices connected by an edge are of the same color. according to the famous four color theorem, such a coloring is always possible. please find one.
 

"
p00976,Ranks,"
  a finite field f2 consists of two elements: 0 and 1. addition and multiplication on f2 are those on integers modulo two, as defined below.
 
  a set of vectors $v_1, ... , v_k$ over f2 with the same dimension is said to be linearly independent when, for $c_1, ... , c_k \in $ f2, $c_1v_1 + ... + c_kv_k = 0$ is equivalent to $c_1 = ... = c_k = 0$, where $0$ is the zero vector, the vector with all its elements being zero.
 
  the rank of a matrix is the maximum cardinality of its linearly independent sets of column vectors. for example, the rank of the matrix

$
  \left[
    \begin{array}{rrr}
      0 & 0 & 1 \\
      1 & 0 & 1
    \end{array}
  \right]
$
  
  is two; the column vectors

 $
  \left[
    \begin{array}{rrr}
      0 \\
      1 
    \end{array}
  \right]
$ 
  
and

   $
  \left[
    \begin{array}{rrr}
      1 \\
      1 
    \end{array}
  \right]
$ 

  
  (the first and the third columns) are linearly independent while the set of all three column vectors is not linearly independent. note that the rank is zero for the zero matrix.
 
  given the above definition of the rank of matrices, the following may be an intriguing question. how does a modification of an entry in a matrix change the rank of the matrix? to investigate this question, let us suppose that we are given a matrix $a$ over f2. for any indices $i$ and $j$, let $a^{(ij)}$ be a matrix equivalent to $a$ except that the $(i, j)$ entry is flipped.
 
    in this problem, we are interested in the rank of the matrix $a^{(ij)}$. let us denote the rank of $a$ by $r$, and that of $a^{(ij)}$ by $r^{(ij)}$. your task is to determine, for all $(i, j)$ entries, the relation of ranks before and after flipping the entry out of the following possibilities: $(i) r^{(ij)}  r$.
   
  
  "
p00977,Colorful Tree,"
  a tree structure with some colors associated with its vertices and a sequence of commands on it are given. a command is either an update operation or a query on the tree. each of the update operations changes the color of a specified vertex, without changing the tree structure. each of the queries asks the number of edges in the minimum connected subgraph of the tree that contains all the vertices of the specified color.
   
  your task is to find answers of each of the queries, assuming that the commands are performed in the given order.
   

"
p00978,Sixth Sense,"
  ms. future is gifted with precognition. naturally, she is excellent at some card games since she can correctly foresee every player's actions, except her own. today, she accepted a challenge from a reckless gambler mr. past. they agreed to play a simple two-player trick-taking card game.
 
  cards for the game have a number printed on one side, leaving the other side blank making indistinguishable from other cards.
 
  a game starts with the same number, say $n$, of cards being handed out to both players, without revealing the printed number to the opponent.
 
  a game consists of $n$ tricks. in each trick, both players pull one card out of her/his hand. the player pulling out the card with the larger number takes this trick. because ms. future is extremely good at this game, they have agreed to give tricks to mr. past when both pull out cards with the same number. once a card is used, it can never be used later in the same game. the game continues until all the cards in the hands are used up. the objective of the game is to take as many tricks as possible.
 
  your mission of this problem is to help ms. future by providing a computer program to determine the best playing order of the cards in her hand. since she has the sixth sense, your program can utilize information that is not available to ordinary people before the game.
 

"
p00979,Fast Forwarding,"
  mr. anderson frequently rents video tapes of his favorite classic films. watching the films so many times, he has learned the precise start times of his favorite scenes in all such films. he now wants to find how to wind the tape to watch his favorite scene as quickly as possible on his video player.
 
  when the [play] button is pressed, the film starts at the normal playback speed. the video player has two buttons to control the playback speed: the [3x] button triples the speed, while the [1/3x] button reduces the speed to one third. these speed control buttons, however, do not take effect on the instance they are pressed. exactly one second after playback starts and every second thereafter, the states of these speed control buttons are checked. if the [3x] button is pressed on the timing of the check, the playback speed becomes three times the current speed. if the [1/3x] button is pressed, the playback speed becomes one third of the current speed, unless it is already the normal speed.
 
  for instance, assume that his favorite scene starts at 19 seconds from the start of the film. when the [3x] button is on at one second and at two seconds after the playback starts, and the [1/3x] button is on at three seconds and at five seconds after the start, the desired scene can be watched in the normal speed five seconds after starting the playback, as depicted in the following chart.
 
  your task is to compute the shortest possible time period after the playback starts until the desired scene starts. the playback of the scene, of course, should be in the normal speed.
 

"
p00980,Estimating the Flood Risk,"
  mr. boat is the owner of a vast extent of land. as many typhoons have struck japan this year, he became concerned of flood risk of his estate and he wants to know the average altitude of his land. the land is too vast to measure the altitude at many spots. as no steep slopes are in the estate, he thought that it would be enough to measure the altitudes at only a limited number of sites and then approximate the altitudes of the rest based on them.
 
  multiple approximations might be possible based on the same measurement results, in which case he wants to know the worst case, that is, one giving the lowest average altitude.
 
  mr. boat’s estate, which has a rectangular shape, is divided into grid-aligned rectangular areas of the same size. altitude measurements have been carried out in some of these areas, and the measurement results are now at hand. the altitudes of the remaining areas are to be approximated on the assumption that altitudes of two adjoining areas sharing an edge differ at most 1.
 
  in the first sample given below, the land is divided into 5 &times; 4 areas. the altitudes of the areas at (1, 1) and (5, 4) are measured 10 and 3, respectively. in this case, the altitudes of all the areas are uniquely determined on the assumption that altitudes of adjoining areas differ at most 1.
 
  in the second sample, there are multiple possibilities, among which one that gives the lowest average altitude should be considered.
 
in the third sample, no altitude assignments satisfy the assumption on altitude differences.
 
  your job is to write a program that approximates the average altitude of his estate. to be precise, the program should compute the total of approximated and measured altitudes of all the mesh-divided areas. if two or more different approximations are possible, the program should compute the total with the severest approximation, that is, one giving the lowest total of the altitudes.
 

"
p00981,Wall Painting,"
  here stands a wall made of a number of vertical panels. the panels are not painted yet.
 
  you have a number of robots each of which can paint panels in a single color, either red, green, or blue. each of the robots, when activated, paints panels between a certain position and another certain position in a certain color. the panels painted and the color to paint them are fixed for each of the robots, but which of them are to be activated and the order of their activation can be arbitrarily decided.
 
  you’d like to have the wall painted to have a high aesthetic value. here, the aesthetic value of the wall is defined simply as the sum of aesthetic values of the panels of the wall, and the aesthetic value of a panel is defined to be:
  0, if the panel is left unpainted.  the bonus value specified, if it is painted only in a single color, no matter how many times it is painted.  the penalty value specified, if it is once painted in a color and then overpainted in one or more different colors. 


"
p00982,Twin Trees Bros.,"
  to meet the demand of icpc (international cacao plantation consortium), you have to check whether two given trees are twins or not.
 
the term tree in the graph theory means a connected graph where the number of edges is one less than the number of nodes. icpc, in addition, gives three-dimensional grid points as the locations of the tree nodes. their definition of two trees being twins is that, there exists a geometric transformation function which gives a one-to-one mapping of all the nodes of one tree to the nodes of the other such that for each edge of one tree, there exists an edge in the other tree connecting the corresponding nodes. the geometric transformation should be a combination of the following transformations:
  translations, in which coordinate values are added with some constants,  uniform scaling with positive scale factors, in which all three coordinate values are multiplied by the same positive constant, and   rotations of any amounts around either $x$-, $y$-, and $z$-axes. 
  note that two trees can be twins in more than one way, that is, with different correspondences of nodes.
 
  write a program that decides whether two trees are twins or not and outputs the number of different node correspondences.
 
  hereinafter, transformations will be described in the right-handed $xyz$-coordinate system.
 
  trees in the sample inputs 1 through 4 are shown in the following figures. the numbers in the figures are the node numbers defined below.
 
  for the sample input 1, each node of the red tree is mapped to the corresponding node of the blue tree by the transformation that translates $(-3, 0, 0)$, rotates $-\pi / 2$ around the $z$-axis, rotates $\pi / 4$ around the $x$-axis, and finally scales by $\sqrt{2}$. by this mapping, nodes #1, #2, and #3 of the red tree at $(0, 0, 0)$, $(1, 0, 0)$, and $(3, 0, 0)$ correspond to nodes #6, #5, and #4 of the blue tree at $(0, 3, 3)$, $(0, 2, 2)$, and $(0, 0, 0)$, respectively. this is the only possible correspondence of the twin trees.
 
  for the sample input 2, red nodes #1, #2, #3, and #4 can be mapped to blue nodes #6, #5, #7, and #8. another node correspondence exists that maps nodes #1, #2, #3, and #4 to #6, #5, #8, and #7.
 
  for the sample input 3, the two trees are not twins. there exist transformations that map nodes of one tree to distinct nodes of the other, but the edge connections do not agree.
 
  for the sample input 4, there is no transformation that maps nodes of one tree to those of the other.
   

"
p00983,Reordering the Documents,"
  susan is good at arranging her dining table for convenience, but not her office desk.
 
  susan has just finished the paperwork on a set of documents, which are still piled on her desk. they have serial numbers and were stacked in order when her boss brought them in. the ordering, however, is not perfect now, as she has been too lazy to put the documents slid out of the pile back to their proper positions. hearing that she has finished, the boss wants her to return the documents immediately in the document box he is sending her. the documents should be stowed in the box, of course, in the order of their serial numbers.
 
  the desk has room just enough for two more document piles where susan plans to make two temporary piles. all the documents in the current pile are to be moved one by one from the top to either of the two temporary piles. as making these piles too tall in haste would make them tumble, not too many documents should be placed on them. after moving all the documents to the temporary piles and receiving the document box, documents in the two piles will be moved from their tops, one by one, into the box. documents should be in reverse order of their serial numbers in the two piles to allow moving them to the box in order.
 
  for example, assume that the pile has six documents #1, #3, #4, #2, #6, and #5, in this order from the top, and that the temporary piles can have no more than three documents. then, she can form two temporary piles, one with documents #6, #4, and #3, from the top, and the other with #5, #2, and #1 (figure e.1). both of the temporary piles are reversely ordered. then, comparing the serial numbers of documents on top of the two temporary piles, one with the larger number (#6, in this case) is to be removed and stowed into the document box first. repeating this, all the documents will be perfectly ordered in the document box.
 
  susan is wondering whether the plan is actually feasible with the documents in the current pile and, if so, how many different ways of stacking them to two temporary piles would do. you are asked to help susan by writing a program to compute the number of different ways, which should be zero if the plan is not feasible.
 
  as each of the documents in the pile can be moved to either of the two temporary piles, for $n$ documents, there are $2^n$ different choice combinations in total, but some of them may disturb the reverse order of the temporary piles and are thus inappropriate.
 
  the example described above corresponds to the first case of the sample input. in this case, the last two documents, #5 and #6, can be swapped their destinations. also, exchanging the roles of two temporary piles totally will be ok. as any other move sequences would make one of the piles higher than three and/or make them out of order, the total number of different ways of stacking documents to temporary piles in this example is $2 \times 2 = 4$.
 


"
p00984,Halting Problem,"
  a unique law is enforced in the republic of finite loop. under the law, programs that never halt are regarded as viruses. releasing such a program is a cybercrime. so, you want to make sure that your software products always halt under their normal use.
 
  it is widely known that there exists no algorithm that can determine whether an arbitrary given program halts or not for a given arbitrary input. fortunately, your products are based on a simple computation model given below. so, you can write a program that can tell whether a given program based on the model will eventually halt for a given input.
 
  the computation model for the products has only one variable $x$ and $n + 1$ states, numbered $1$ through $n + 1$. the variable $x$ can store any integer value. the state $n + 1$ means that the program has terminated. for each integer $i$ ($1 \leq i \leq n$), the behavior of the program in the state $i$ is described by five integers $a_i$, $b_i$, $c_i$, $d_i$ and $e_i$ ($c_i$ and $e_i$ are indices of states).
 
  on start of a program, its state is initialized to $1$, and the value of $x$ is initialized by $x_0$, the input to the program. when the program is in the state $i$ ($1 \leq i \leq n$), either of the following takes place in one execution step:
  if $x$ is equal to $a_i$, the value of $x$ changes to $x + b_i$ and the program state becomes $c_i$;  otherwise, the value of $x$ changes to $x + d_i$ and the program state becomes $e_i$. 
  the program terminates when the program state becomes $n + 1$.
 
  your task is to write a program to determine whether a given program eventually halts or not for a given input, and, if it halts, to compute how many steps are executed. the initialization is not counted as a step.
 


"
p00985,Ambiguous Encoding,"
  a friend of yours is designing an encoding scheme of a set of characters into a set of variable length bit sequences. you are asked to check whether the encoding is ambiguous or not. in an encoding scheme, characters are given distinct bit sequences of possibly different lengths as their codes. a character sequence is encoded into a bit sequence which is the concatenation of the codes of the characters in the string in the order of their appearances. an encoding scheme is said to be ambiguous if there exist two different character sequences encoded into exactly the same bit sequence. such a bit sequence is called an “ambiguous binary sequence”.
 
  for example, encoding characters “a”, “b”, and “c” to 0, 01 and 10, respectively, is ambiguous. this scheme encodes two different character strings “ac” and “ba” into the same bit sequence 010.
 

"
p00986,Parentheses Editor,"
  you are working with a strange text editor for texts consisting only of open and close parentheses. the editor accepts the following three keys as editing commands to modify the text kept in it.
  ‘(’ appends an open parenthesis (‘(’) to the end of the text.  ‘)’ appends a close parenthesis (‘)’) to the end of the text.  ‘-’ removes the last character of the text. 
  a balanced string is one of the following.
  “()”  “($x$)” where $x$ is a balanced string  “$xy$” where both $x$ and $y$ are balanced strings 
  initially, the editor keeps an empty text. you are interested in the number of balanced substrings in the text kept in the editor after each of your key command inputs. note that, for the same balanced substring occurring twice or more, their occurrences should be counted separately.  also note that, when some balanced substrings are inside a balanced substring, both the inner and outer balanced substrings should be counted.
 


"
p00987,Way Conveyors,"
  you are working at a factory manufacturing many different products. products have to be processed on a number of different machine tools. machine shops with these machines are connected with conveyor lines to exchange unfinished products. each unfinished product is transferred from a machine shop to another through one or more of these conveyors.
 
  as the orders of the processes required are not the same for different types of products, the conveyor lines are currently operated in two-way. this may induce inefficiency as conveyors have to be completely emptied before switching their directions. kaizen (efficiency improvements) may be found here!
 
  adding more conveyors is too costly. if all the required transfers are possible with currently installed conveyors operating in fixed directions, no additional costs are required. all the required transfers, from which machine shop to which, are listed at hand. you want to know whether all the required transfers can be enabled with all the conveyors operated in one-way, and if yes, directions of the conveyor lines enabling it.
 


"
p00988,Fun Region,"
  dr. ciel lives in a planar island with a polygonal coastline. she loves strolling on the island along spiral paths. here, a path is called spiral if both of the following are satisfied.
  the path is a simple planar polyline with no self-intersections.  at all of its vertices, the line segment directions turn clockwise. 
  four paths are depicted below. circle markers represent the departure points, and arrow heads represent the destinations of paths. among the paths, only the leftmost is spiral.
 
  dr. ciel finds a point fun if, for all of the vertices of the island’s coastline, there exists a spiral path that starts from the point, ends at the vertex, and does not cross the coastline. here, the spiral path may touch or overlap the coastline.
 
in the following figure, the outer polygon represents a coastline. the point &#9733; is fun, while the point &#10006; is not fun. dotted polylines starting from &#9733; are valid spiral paths that end at coastline vertices.
 
  we can prove that the set of all the fun points forms a (possibly empty) connected region, which we call the fun region. given the coastline, your task is to write a program that computes the area size of the fun region.
 
  figure j.1 visualizes the three samples given below. the outer polygons correspond to the island’s coastlines. the fun regions are shown as the gray areas.
 

"
p00989,Draw in Straight Lines,"
you plan to draw a black-and-white painting on a rectangular canvas. the painting will be a grid array of pixels, either black or white. you can paint black or white lines or dots on the initially white canvas.
 
  you can apply a sequence of the following two operations in any order.
  painting pixels on a horizontal or vertical line segment, single pixel wide and two or more pixel long, either black or white. this operation has a cost proportional to the length (the number of pixels) of the line segment multiplied by a specified coefficient in addition to a specified constant cost.
      painting a single pixel, either black or white. this operation has a specified constant cost.
   
  you can overpaint already painted pixels as long as the following conditions are satisfied.
  the pixel has been painted at most once before. overpainting a pixel too many times results in too thick layers of inks, making the picture look ugly. note that painting a pixel with the same color is also counted as overpainting. for instance, if you have painted a pixel with black twice, you can paint it neither black nor white anymore.
  the pixel once painted white should not be overpainted with the black ink. as the white ink takes very long to dry, overpainting the same pixel black would make the pixel gray, rather than black. the reverse, that is, painting white over a pixel already painted black, has no problem.
   
  your task is to compute the minimum total cost to draw the specified image.
 

"
p00990,ID,"
a大学ではidの入力ミスが多発していた。
そこで、a大学は入力ミス防止のため新しいidを発行することにした。
新しいidには入力ミス防止のためにidが正しいかどうかチェックする方法がある。
 

・全ての桁の数字の総和を求める。
・ただし、右端の桁を１番目として、偶数番目の桁の数字を２倍にする。
・２倍することによって数字が１０以上になった時、１の位の数字と１０の位の数字を加算した数字をその桁の数字とする。
・総和が１０で割り切れれば正しいid、そうでなければ間違いとする。

 
例として、53579というidをチェックする。
全ての桁の数字の総和を求めるので、
5 + 3 + 5 + 7 + 9
 
ただし、偶数番目の桁の数字を２倍にするので、
5 + 6 + 5 + 14 + 9
 
２倍することによって数字が１０以上になった時、１の位の数字と１０の位の数字を加算した数字をその桁の数字とするので、
5 + 6 + 5 + (1 + 4) + 9
 
以上より、総和は30となる。30は10で割り切れるので、53579は正しいidである。
 
b君はa大学の大学生であり、新しいidを発行してもらったが、idの一部の桁を忘れてしまった。
しかし、忘れてしまった部分にどんな数字が入るか、いくつか候補を絞ることに成功した。
あなたの仕事は、b君のidの正しい組み合わせが何通りあるかを求めることである。
 

"
p00991,Grid,"
r × c の2次元グリッド上の２つの座標 (a1,a2) と (b1,b2) が与えられる。
あるマス (e,f) から (e+1,f)、(e-1,f)、(e,f+1)、(e,f-1) のどれかのマスに移動するコストを１とする。
また、(e,c-1) と (e,0)、(r-1,f) と (0,f) の間もコスト１で移動することができる。
この時に１つ目の座標から２つ目の座標へ最短コストで移動できる経路の数を求めよ。
 


"
p00992,War,"
a国とb国という２つの国が戦争をしている。a国の軍人であるあなたはn人の兵士を率いて、b国の領土を占領する事になった。
 
b国の領土は２次元グリッドで表されている。あなたが最初に占領する場所は二次元グリッド上のある１マスである。
あなたが率いている兵士たちは、それぞれh_iの体力を持っている。
それぞれの兵士は体力を1を消費して移動することができる。
現在いるマスを(a,b)とすると、(a+1,b),(a-1,b),(a,b+1),(a,b-1)の4方向を移動先として選ぶことが可能である。
兵士は体力が0になったらそこから動くことができなくなる。
一人以上の兵士が通過したマスはすべて占領することができる。
 
あなたの仕事は、最大でいくつのマスを占領することができるかを求めることである。
ただし、この２次元グリッドのサイズは無限に広いとすること。
 

"
p00993,Numbers,"
n が与えられるので、n 個の連続した正の整数を求めよ。
ただしすべての数が、１とその数自身以外の約数をもたなくてはならない。
 

"
p00994,Connect,"
r × c のグリッドが与えられる。
グリッドのいくつかのマスには1から8までの数字が書かれている。
 

 
数字が書かれているマスと他の数字が書かれているマスを線で結ぶ必要がある。
数字が書かれているマスについて、そのマスに書かれている本数だけ、他のマスとの間に線を結ぶ必要がある。
ただし、線を結べるのは上下左右方向だけで、一つの方向について、最大２本までである。




他の数字を跨いで線で結ぶことはできない。


また、次のように交差してしまう結び方をすることはできない。

 
グリッドが入力として与えられるので、数字が書かれているマス全てを正しく結ぶ方法が、何通りあるのかを数えて欲しい。
 

"
p00995,Dungeon,"
あなたはとあるゲームの開発に携わっている。
そのゲームはランダムに生成されたダンジョンをプレイヤーが探索するというものである。
 
このゲームで生成されるダンジョンにはn 個の部屋が存在しており、0から n-1 までの番号が割り振られている。
部屋と部屋は通路で結ばれている。部屋と部屋を結ぶ通路は、m 本ある。
通路はどちらの方向へも進むことができる。
また、部屋と部屋の間には距離が設定されている。
生成されたダンジョンではいくつかの通路を経由して、ある部屋から他のすべての部屋へ行くことが可能である。
そして、プレイヤーがゲームを行う際に、0番の部屋がスタート地点、n-1 番の部屋がゴール地点として選ばれる。
 
ユーザーがダンジョンを探索する際に、手助けになるようなアイテムが入った宝箱を、どこかの部屋に設置したい。
その時に、スタート地点から遠すぎたり、ゴール地点から近すぎると意味がない。
そこで、スタートから距離 fs 以内で辿りつけて、ゴールに辿り着くために最短経路を通った場合に、少なくとも fg かかる部屋を宝箱を設置する候補としたい。
 
生成されたダンジョンと、q が与えられる。q 個のクエリーについて、宝箱を設置する場所の候補の数を数えて欲しい。
 

"
p00996,Dice,"
サイコロ３兄弟は三つ子であり一心同体、３つでひとつとも言ってもよい。三つ子であるため見分けがつかないほど似ている。そんなサイコロ３兄弟はa君のお気に入りのおもちゃだ。a君はいつも３つ１セットでサイコロを転がして遊んでいる。このようにa君が楽しく遊ぶおもちゃだが、実は大きな秘密があった。彼らは実は生きていて、話したり自由に動いたりできるのだ。子ども部屋は r ×  c  の大きさのグリッドで表すことができ、とても大きいものが散乱している。
 
サイコロ３兄弟は室内を東西南北の４方向へ進行方向に向かって転がりながら移動する。その形ゆえに斜め移動ができないのが、少し気の毒である。進行方向にとても大きいものがある場合、サイコロは進行方向に進むことができない。
サイコロ３兄弟は３つで１セットであるため、一度にひとつのサイコロしか移動することができない。また、サイコロたちはその場で回転するなどという器用な能力は持っていない。
 
彼らが話したり動いたりしている事実は人間には知られてはいけないというのが「おもちゃのルール」である。このルールを破ったおもちゃはこの世から消滅してしまう。a君が出かけているときに動いたり話したりしているおもちゃたちだが、a君が帰宅して子ども部屋に入ってきたときにもとの位置に戻っていなければならない。a君が帰宅した直後は緊急事態であり、a君が子ども部屋にたどり着く前にあらゆるおもちゃは即座にもとの場所へ戻らなければならない。
a君は床を見下ろすかたちになるため、サイコロの場所と上を向いている数字が正しければ、移動したことに気づくことはない。また、サイコロたちは見分けがつかないほど似ているので、どの収納場所にどのサイコロが向かっても支障はない。
 
そんなある日、a君のおもちゃ箱の中で最も優秀なプログラマーであるあなたに、与えられたサイコロの位置情報と収納場所から最短何手でサイコロ達が収納場所に戻れるかを計算する任務が与えられた。
サイコロ３兄弟を溺愛しているa君の手からサイコロ３兄弟が消えてしまったら、a君は泣いてしまうので、とても重要な任務である。
 


"
p00997,Dungeon (II),"
あなたはとあるゲームの開発に携わっている。
そのゲームはランダムに生成されたダンジョンをプレイヤーが探索するというものである。
ゲームの仕様として、プレイヤーに予めダンジョンの危険度を提示し、生成されたダンジョンを探索するのか、それとも新しくダンジョンを生成しなおすかを、選択できるようにしたい。
 
このゲームで生成されるダンジョンにはn 個の部屋が存在しており、0から n-1 までの番号が割り振られている。
部屋と部屋は通路で結ばれている。部屋と部屋を結ぶ通路は、合計で n-1 本存在している。
通路はどちらの方向へも進むことができる。
また、部屋と部屋の間には距離が設定されている。
生成されたダンジョンではいくつかの通路を経由して、ある部屋から他のすべての部屋へ行くことが可能である。
そして、プレイヤーがゲームを行う際に、２つの異なる部屋がスタート地点とゴール地点として選ばれる。
 
あなたはダンジョンの評価を行うために、危険度の評価方法を決めることにした。
まず、ある部屋から別の部屋までに移動する際の危険度を、部屋間を最短で移動するために使う通路の中で、最もコスト高い通路の値とする。
そして、ダンジョンの危険度を、i &lt; j となる部屋のペアの間を移動する際の危険度の総和とすることにした。
 
ランダムに生成されたダンジョンのが入力として与えられる。
まず、i &lt; j となるすべての部屋のペアについて、移動する際の危険度を計算して欲しい。
そして、その総和を問題の答えとして出力せよ。
 

"
p00998,RMQ,"
n 個の数字a0 ,a1 , ... ,an-1 とq が与えられる。
q 個のクエリーに対して適切な処理を行なって欲しい。
クエリーは以下の3種類の操作が存在する。
 値のシフトを行う 最小値を求める 値の更新 
pos と val のペアが与えられる。
apos の値を val に更新する。




"
p00999,Rental DVD Shop NEO,"
僕はレンタルdvdショップ、「neo」でアルバイトを始めた。まずはこの店の料金システムを勉強することになった。
 
レンタルdvdは旧作、準新作、新作の3種類存在し、1本のレンタル料金がそれぞれ a 円、 b 円、 c 円である。
会計の際に以下に示すセットレンタルを複数回適用することができる。
 まだセットレンタルを適用していないdvdを数本選ぶ。 選んだdvdの本数が d 本以上の場合、選んだdvdの合計金額が、 (選んだdvdの本数) * e 円を超える場合は、それらを (選んだdvdの本数) * e 円でレンタル出来る。 選んだdvdの本数が d 本未満の場合、選んだdvdの合計金額が d * e 円を超える場合は、それらを d * e 円でレンタル出来る。 上記に当てはまらない場合、選んだdvdは通常料金でレンタルとなる。 
ここで僕はある問題に気づいた。セットレンタルはレジに通した時に自動的に適用されるのではなく、手動で適用しているのだ。これでは最適ではない（もっと安くなる余地がある）セットレンタルの適用をしてしまう可能性がある。これではクレームが発生しかねない。僕はクレーム対応が嫌いなので、セットレンタルを最適に適用した時の料金を計算するプログラムを作成することにした。
 

"
p01000,Independent Research,"
長期休暇の課題とは、長期休暇を使ってこれまでの勉強の復習をさせることを建て前に、計画倒れがいかにして発生するかを生徒に体験させるため、長期休暇に課される試練のことである。
その中でも、自由研究とは、長期休暇の課題の中でも最も過酷な課題である。
「自由研究」と言う名に反して強制である場合が多く、研究しないという選択肢は存在しない。
絵、工作、生き物観察など、様々な分野の課題があり、とりあえず僕は、生き物観察を自由研究のテーマとした。
 
僕は夏休みの自由研究のテーマとして、生き物観察を選択し、生き物観察キットを購入した。
 
この生き物は3次元グリッド状の空間を好んで生息する。
各セルには最大1匹までしか入れない。
周囲の環境に合わせ1日が経過するごとに誕生と死滅を繰り返す。

誕生と死滅の条件は、セルに隣接する生き物の数に依存する。
ここで、あるセルに生き物が隣接するとは、あるセルと生き物が生息しているもう一つのセルが面、辺、または点を共有していることを言う。
誕生と死滅のルールは次のようになる。
 
生き物が生息していないセルにおいて、隣接する生き物の数が
 ai (1 &le; i &le; m1 ) 匹であるような
 i がある場合、そのセルに生き物が誕生する。
 
生き物が生息しているセルにおいて、隣接する生き物の数が
 bj (1 &le; j &le; m2 ) 匹であるような
 j がない場合、そのセルの生き物は死滅する。
 
今回購入した飼育箱はセルの数が5*5*5である立方体の飼育箱だ。
この飼育箱ではこの生き物はどのような振る舞いをするのだろうか…？　とても楽しみである。
 
〜数日後〜
 
とりあえず、飼育してみたが…　

毎日観察するなんて時間がかかるし、僕にはめんどくさくてやる気がおきない。

そうだ、コンピューターとプログラムを使ってシミュレートしよう。
 

"
p01001,General of Taiko,"
とあるゲームセンターには、曲に合わせて流れてくる譜面通りに和太鼓を叩くゲームがあります。
譜面は長さ l のセルからなり、各セルには何もない、またはノートと呼ばれるプレイヤーがとるべき行動を表した記号があります。
ノートは2種類ありそれぞれ、和太鼓の面を叩く「トン」、和太鼓の縁を叩く「コツ」があります。
これらのノートに合わせて和太鼓を叩くと得点を得ることができます。
この得点の合計が10000点以上であればクリアとなります。
 
このとき、プレイヤーが曲をクリアできる確率を求めなさい。ただし、プレイヤーは常に最適な行動をとることにします。
 
プレイヤーが譜面通りに和太鼓を叩く精度は11段階あり、それぞれ、
0%, 10%, 20%, ..., 90%, 100%の確率で譜面通りに和太鼓を叩くことができます。
 
上記の二種類の動作は右腕と左腕どちらででも行うことができます。
プレイヤーの情報として、それぞれの腕で行った場合の精度の安定率を表す値が16種類、下記のように与えられます。
 
ただし、 lt  は左腕でトン,  rt  は右腕でトン,  lk  は左腕でコツ,  rk  は右腕でコツの動作を表します。
例えば、 lt_rk は左腕でトンのあとに右腕でコツを行った時の精度の安定の度合いを表し、この値によって左腕でトンのあとに右腕でコツを行うときの精度が、下記のように変化します。
 
曲の情報は以下のとおりです。
曲の長さを表す l 、譜面を表す l 個の数字 si (0 &le; i &lt;  l )で示される。譜面の先頭は s0 である。
 si の値は以下の3つです。
 
プレイヤーが最初に和太鼓を叩くときの精度は100%です。
また、プレイヤーは譜面を無視することができます。
ノートがなかったり、ノートを無視した場合、プレイヤーの精度は100%になります。
 
各ノートに合わせて和太鼓を叩いたときの得点は下記のようになります。
 
この問題におけるコンボ数とは、連続してノートに合わせて和太鼓を叩けた数です。
プレイヤーがノートに合わせて叩いた場合、上記の式を元に得点が入り、その後にコンボ数が1増えます。
ノートに合わせて和太鼓を叩けなかった場合、コンボが途切れ、コンボ数が0になります。
 
"
p01002,Smartphone Game,"
人気のスマフォゲームの一機能を実装してみよう。ゲームは以下の仕様に基づく。
 5*5のマスに、5種類のブロックが設置されている。 それぞれの種類のブロックには得点が設定されている。 得点には、ブロックの得点の他に、ボーナス得点が設定されている。最初のボーナス得点は1である。 ブロックを任意に1つだけ決めて、最大で n 回まで上下左右に移動できる。移動先のブロックは移動元のブロックのあった場所に移動する。つまり、隣接したブロックを交換する事になる。 移動した後、同じ種類のブロックが縦3個以上又は横3個以上に並んだ場合、並んだブロックは全て消える。 消えるべきブロックが全て消えた後、あるブロックの下に別のブロックが存在しない場合、そのブロックは落下する。落下とは、あるブロックの１つ上に辿り着くまで下に移動する事をいう。ブロックが下に存在しない場合は一番下に移動する。 全てのブロックの落下後にボーナス得点が1だけ加算される。 その後にブロックが並んだ場合、さらに消え、落下する。 ブロックが消える時に、ブロック１つにつき「ブロックの得点*ボーナス得点」が自分の得点に加算される。 １回のプレイで得られる最大の点数を求めよ。 


"
p01003,Doragoso Ball,"
 l 個集めるとドラゴソが現れどんな願いでも一つだけ叶えてくれるというドラゴソボールがとある迷宮に散らばっている。入口からスタートし、途中で立ち止まることなくすべてのボールを回収し、それらを迷宮内にある祭壇に奉納し、そのまま呪文を唱えるとドラゴソが現れ願いを叶えてくれるという。ただし、呪文を唱え始める時間は入口からボールを奉納するまでのルートのうち、移動時間が k 番目に短いルートで移動したときの時間でなければならない。
 
この迷宮は部屋とわたり通路からなり、部屋と部屋はわたり通路を通る事によって行き来できる。ドラゴソボールはそれらの数ある部屋のどこかに落ちている。なお、迷宮は入り口から祭壇へたどりつく道が存在しない可能性もあるようだ。また、移動時間はわたり通路の移動だけを考慮し、部屋の中を移動する時間、ボールを拾うときにかかる時間、祭壇に奉納する時間は考慮しなくてよい。また、同じ通路や同じ部屋に何度も訪れてもよいが、ドラゴソボールがある部屋に初めて入った場合は、そのボールを拾うことにする。祭壇に到達したとき、必ずしもボールを納めなければならないわけではない。
 
迷宮の内部構造の情報と迷宮の入り口、祭壇の場所とボールの数 l とボールの配置場所と求められている最短な経路の順位 k が与えられるので、呪文を唱え始めるべき時間を求めよ。
 

このようなとき、ルートb,c,d,eは2位かつ3位かつ4位かつ5位として扱う。ルートfは6位として扱う。
 

"
p01004,Balloon Contest,"空の様子がいつもと違う。色とりどりの多彩な熱気球が空を覆っていた。今日は熱気球の大会だ。熱気球から落とされた得点付きボールを参加者全員で取り合うらしい。せっかくなので優勝者を予想してみることにした。 レクリエーションにはn人参加する。  n 人の参加者はそれぞれ自分の位置が与えられる。複数の参加者に同じ位置が与えられる事はない。 上空の熱気球からm個のボールが１個ずつ落下する。 参加者は全員同じタイミングで走り始め、ボールに向かって同じ速度で一直線に走る。 ボールの落下位置に一番早く辿り着けた人がボールを取得できる。同時に複数人辿り着いた場合は、一様な確率で取得できる人が決まる。 参加者がボールを取得すると参加者全員が元の位置に戻る。 参加者が走り始めてから参加者の全員が元の位置に戻るまでに別のボールが落下する事はない。 各ボールには得点と落下する位置が与えられ、ボールを取得すると得点を得られる。 ボールは落下中に空気抵抗を受けるため、実際に落下する地点にはズレが発生する。落下予定の位置より最大でx軸方向に&plusmn;dx 、y軸方向に&plusmn;dy だけ一様な確率でズレる。 得られる得点の期待値を求め、期待値の最も大きい参加者の期待値を出力せよ。 

"
p01005,The Humans Braving the Invaders,"
現在、地球は宇宙からの侵略者であるインベーダーの攻撃を受け、人類で生き残った者は基地にいる我々だけとなった。
奴らに対抗できる戦力もほとんど残されていない。
だが、ここで我々は諦めるということはしない。
インベーダを全滅させることが、我々人類が生き残る最後の手段である。

今から最後になるであろう作戦の内容を説明する。
 
まず、インベーダーの戦力に比べ我々の戦力はあまりにも少ないので、この基地に立てこもり、籠城戦を行う。
この基地は高い山に囲まれていて、インベーダーが侵攻するには基地正面にある真っ直ぐな道を通る他無い。
この道をフィールドと呼ぶことにする。この特徴により、前方に集中してインベーダーを攻撃することが可能である。
基地にいる我々はインベーダーに対し2種類の武器で攻撃を行う。
1つはインベーダー1体を狙撃するスナイパーライフルである。もう1つは広範囲に攻撃ができるグレネードランチャーである。
 
人類でたった1人のプログラマーである君の仕事は、インベーダーと我々の行動記録を元に戦闘をシミュレーションすることだ。
行動記録はクエリー形式で与えられる。各クエリーは1つまたは複数の整数からなり、次のように与えられる。
 
作戦の説明は以上だ。総員、作戦開始！・・・幸運を祈る。
 

"
p01006,Nasty Boys,"
太郎君は学校のロッカーに大事な本を隠しているので他の人よりとても厳重に管理していて、学校で支給された鍵に加えて以下のようなボタン認証式の鍵を設置しています。 

 
ただパスワードを忘れやすい太郎くんはパスワードを一筆書きで書けるものにしてしまう癖があります。更に詰めの甘い太郎君は自分のパスワードを考えるときに候補を紙に書いていました。その紙をたまたま拾ったは次郎君は、性格が悪いので捨てずにロッカーを開けることに挑戦しました。
 
しかし紙にはなんと1000個ものパスワードの案が書かれており、全ての入力を試すと日が暮れてしまいそうです。
そこで太郎君の癖を知っている次郎君は、調べる回数を減らすために1000個のパスワードの中から一筆書きできるものだけを取り上げることにして、その作業をプログラマーの貴方に頼むことにしました。
 
1つのデータセットにつき必ず候補は一つ以上存在します。一筆書きのルールを以下に示します。
 同じ文字は連続しない。例えばaaaは許されない。 上下左右4方向に一筆書きが可能。斜め方向に移動しない。 ボタン配列の枠外に出て連続することはない。例えばabcaのような移動は許されない。 一度通った文字の上も何度も通過可能。 ボタン1文字のみの入力も一筆書きとみなす。 


"
p01007,Matrix Operations,"
      要素が1と0からなるn×nの行列に対して、以下の種類の操作を行うプログラムを作成せよ。
 
      祖父から1と0だけが書かれたn×nの行列とm個の操作が書かれている紙が送られてきた。
     
      紙の裏を見てみると、「この紙に書いてある行列に操作を加えて新しくできた行列をわしのとこに送ってくるのじゃ！
      一流のプログラマになりたいならこれくらいできなきゃ話にならんぞ！」と書かれている。どうやら私への挑戦状らしい。
      しかし私はプログラマではなくパティシエになりたいため、プログラムを書いたことがない。祖父にそのことを何度も言っているが一向に聞く耳を持ってくれない。 そこで、私の友達であるあなたにこの問題を解決するプログラムを組んでもらいたい。以下に操作の種類を示す。
     
       
      部分行列と角度(0,90,180,270,360)が与えられるのでその分だけ時計回りに回転させる。 
       
      部分行列が与えられるので値を反転させる。
       
      行が与えられるので左に1個シフトし、はみ出た分は右端に移動する。 
       
      行が与えられるので右に１個シフトし、はみ出た分は左端に移動する。 
       
      行(r),列(c)が与えられる。
      step1：現在のセルを(r,c)にする。 
      step2：現在のセルの値を反転する。 
      step3：隣接するセルのうち、値が現在のセルの反転前の値と等しいセルに対し、step2とstep3の処理を行う。
      ここで、セル(i,j)に隣接するセルとは、(i-1,j),
      (i+1,j),(i,j-1),(i,j+1)の４つである。 

 
    "
p01008,Last One,"
  あなたは、集合好きな友人aと一風変わったゲームをしてみる事にした。
 
  n個の要素からなる重複が許される非負の整数の集合sが与えられる。集合sに含まれる各要素は非負のpi進数である。集合sに対して
  以下のstep1~3を1つのターンとして、あなたと相手の二人が交互にターンを繰り返す。各ターンではこの番号の順に操作を行う。
 
    step 1: 集合sに含まれる全ての要素を一度取り除き、その取り除いた各要素を2進数に変換して、0を消して1が1つ以上連続する部分に分割し、その分割された部分を全て集合sに加える。
    step 2: このとき集合sが空になっていたならば、現在このターンをプレイしているプレイヤーは負ける。
    step 3: 集合sに含まれる要素aを1つ選び、そのaから 1 &le; x &le; a を満たす任意の整数xを引く。
  
 
下の図は次の入力が与えられたときの最初の1ターンの進行の仕方のうちの1つの例である。
 
  最初はあなたのターンだ。与えられた入力に対して両者が最善を尽くすとき、果たしてあなたに勝ち目はあるのだろうか。
 


"
p01009,Room of Time and Spirit,"
　20xx年、とある科学者がバイオテクノロジーによって強力な人造人間を開発してしまった。この人造人間はコンピュータにより、戦闘の達人たちの細胞を組み合わせて作られているため非常に強力である。



　このままでは地球は人造人間に支配されてしまうので、 n 人の戦士たちは人造人間と戦うことにした。しかし今の戦士たちでは到底人造人間に敵わないため、修行をしなければならない。また、n 人の戦士たちはそれぞれ 1 ~ n の番号が付いている。




　この時代、天空都市aizuには srlu室と呼ばれる修行のための特殊な部屋が存在した。この部屋での1年は外界の時間の1日と同じであるため、短期間で戦闘力を大幅に上昇することが出来る。同時に部屋に入れる人数の上限は2人である。また、その2人が部屋に入った時、それぞれ戦闘力が上昇する。




　戦士たちは残された時間でどのように部屋に入るか検討するため、あなたに以下のクエリを処理するプログラムの作成を依頼した。




　与えられるクエリは以下の通りである。

　また以下の説明で出てくる a, b はそれぞれ戦士の番号を表す。a と b が等しい事は無い。


	
in a b c


　a と b が部屋に入り、それぞれ c だけ戦闘力が上昇する。この時、(部屋に入る直前の b の戦闘力) - (部屋に入る直前の a の戦闘力) = c が成り立つ。また、この時 b の戦闘力は a の戦闘力より高い事が保証される。




compare a b


　a と b の戦闘力の差 (現在の b の戦闘力) - (現在の a の戦闘力)を出力する。もしその差が特定出来なければ、warning と出力せよ。




"
p01010,Light Source,"
n個の円状の光源がある。ある光源が光を受けた場合、その光源の中心点から扇状に光が放出される。光源が光を受けるとは、光となる扇形が光源となる円を完全に覆うことをいう。また、光源を覆う事によって光は遮られず、扇形に覆われていない円の部分が存在する場合、光を受けたと見なされない。光を受けた光源から放出される光の強さは、受けた光の強さと同じになる。円を全て囲うように受けた光が複数存在する場合、放出される光の強さはそれらの合計となる。ただし、放出される光の強さには上限があり、上限を超えた場合、光の強さは上限と同値になる。
 
二次元平面上にn個の円状の光源が配置されている。ある光源が光を受けると、下図のようにその光源の中心点から扇状に光が放出される。



光源の中心点は(x,y)、半径はrで表される。
光となる扇形は角&beta;を中心に-&theta;/2, +&theta;/2の方向へ対称に広がり、その半径は&alpha;である。
 
光源の円が扇型の光に完全に覆われるとき、光源はその光を受けたとみなされる。光源から放出される光の強さは、受けた光の強さの合計となる。ただし、放出される光の強さには上限があり、上限を超えた場合、光の強さは上限値と同じになる。なお、ある光や光源によって光が遮られることはない。
 
ある地点に存在する光源を目的光源とする。目的光源では光が放出されず、受ける光の強さに制限はない。
あなたは座標(0,0)から、ある強さの扇形の光を、任意の方向に１度だけ放出することができる。目的光源が受ける光の強さの合計の最大値を求めるプログラムを作成せよ。ただし、全ての光源において、放出された光が元の光源に戻るような入力データは与えられないと仮定してよい。また、この問題では、領域の境界からの距離が0.000001以内の場合、領域上とみなすことにする。
 

"
p01011,Prize Game,"
新しいゲームセンターが開店することになった。たくさんのお客さんを取り入れるために、全く新しいプライズゲームを設置することになった。
 
このプライズゲームはr&times;cのグリッドから構成される。各マスは空白か、1〜18のいずれかの数字が書かれている。プレイヤーはひとつの空白のマスを選択し、そのマスの景品を獲得できる。ただし、マスにある景品はプレイヤーから見ることができない。
 
スタッフはこのプライズゲームに景品を設置しなければならない。スタッフは以下のルールが守られていれば、どのように景品を配置してもよい。数字が書かれているマスについて、その数字をxとすると、その数字を中心とする凸型の範囲の中に景品がちょうどx個置かれている必要がある（下の図を参照）。この凸型の出っ張っている部分は上を向いている。また、景品は空白のマスのみに置くことができ、1つのマスに3個まで置くことが出来る。1個も置かないことも可能である。
 

中央の数字が5だった場合の景品の置き方の例。オレンジ色の部分にちょうど計5個の景品が置かれている必要がある。
 
お客さんに景品の場所が簡単に推測されては大損である。そこで、オープニングスタッフであるあなたに、上記ルールに則った景品の置き方の場合の数を数えてもらいたい。ただし、景品は互いに区別できないものとする。答えは大きくなる場合があるので答えの場合の数を1000000007で割った余りを答えなさい。
 

"
p01012,Planarian Regeneration,"
皆さん、「プラナリア」って知っていますか？
プラナリアとは、日本では川の上流の石や枯葉などの裏に張り付いて生息している水生生物です。
プラナリアの最も優れた能力はその「再生能力」です。プラナリアの再生能力は著しく、例えば、三等分するとそれぞれが再生し、数週間後には元の完全な状態のプラナリアが3匹できあがります。
 
この度、会津の山奥の上流にて発見された新種のプラナリアの姿は長方形をしていて、プラナリアはある法則により再生します。
このとき、プラナリアは下の図のように配置し、２つの手段でプラナリアの切断実験を行います。
 
まず１つ目の手段として、垂直方向に切ることを考えます。一度の切断では、すべての断片を水平方向の長さが(断片の頭に近い部分):(断片の頭に遠い部分)=m :n になるように切断します。この動作をx 回繰り返します。
 
次に２つ目の手段として、水平方向に切ることを考えます。一度の切断では、すべての断片を垂直方向の長さが(断片の右端に近い部分):(断片の左端に近い部分)=k :l に切断します。この動作をy 回繰り返します。これらの切断によって断片が移動することはありません。
 
数週間後に、各断片が元の完全なプラナリアの状態に再生している確率は以下の式により求まります。



上の図は、垂直方向に1:2で2回、水平方向に1:1で1回切断した状態です。
 
以上の操作で切断した時の、数週間後に元の姿に再生しているプラナリアの数の期待値を求めてください。元のプラナリアの垂直方向の長さと水平方向の長さはともに1とします。
 

"
p01013,Cone Cut,"
    この問題では3次元空間上のある点x とある点y を通るような直線を直線xy と書く。
   
    3次元空間上に円錐とその円錐内部の点p が与えられる。点p を通り円錐の底面に垂直な直線と円錐の底面との交点を点q とする。この時、円錐の底面の中心をo とし、直線oq と円錐の底面の円周との交点を、点q に近い方から点a 、点b とする(ただし、点o と点q が同一点のときは、点o を通る任意の直線と円錐の底面の円周との交点を点a 、点b とする。)。また、円錐の底面を含むような平面において、点o を通り、直線ab と垂直に交わる直線と円錐の底面の円周との交点を点c 、点d とする(ただし、点c と点d は入れ替えても問題ない)。
   
    以下の図は、円錐の頂点方向から見た円錐の底面の図である。
   
    
   
    直線ap と直線bp の円錐との交点（直線ap の場合、点a でない方の交点を指す。直線bp も同様。）を点a' 、点b' とし、点a' と点b' を通り直線cd と平行な平面s で円錐を切断する。この時、切断後の頂点を含む図形の体積ともう一方の図形の体積を空白区切りで出力せよ。
   
  "
p01014,Rolling Block,"
rolling blockは直方体の金属体を回転させつつ移動させ、ゴールの穴に落とすゲームである。
このゲームのクリア条件は金属体をゴールに落とすことである。


 
ブロックについて
下の図の(1)より、ブロックは1&times;1&times;lの直方体である。
ブロックは東西南北のどれかの方向に回転しながら移動することができる。
しかし、ブロックはステージからはみ出るような動きをとることは出来ない。
下の図の(2)より、ブロックが横に倒れている場合は移動方向に対してこのような回転をしつつ移動する。
下の図の(3)より、ブロックが直立している場合は移動方向に対してこのような回転をしつつ移動する。
(2) 、(3) については灰色のブロックが移動前、白色のブロックが移動後のブロックとする。
黒い矢印はその方向に対してブロックが移動したことを示す。
また、白の矢印は移動する際にブロックがその方向へ回転したことを示す。
ブロックに点線が引かれているが、これは回転を分かりやすくするために引いたものである。
（実際にゲームで扱うブロックにはこのような点線は書かれていない）



以下の図はブロックの回転を補足するための図である。
サイコロのように対面の和が7になるようなブロックがあるとする。
直立している場合と倒れているブロックについて、このブロックを東西南北の4方向へ回転しつつ移動させたときの上面の数字の変化を以下の図に示す。
（実際にゲームで扱うブロックにはこのような数字は書かれていない。）


 
ステージについて
ステージはh&times;wの二次元グリッドで与えられる(1 &le; h,w &le; 25) 。
二次元グリッドはそれぞれ以下の種類のセルから成る。
 ""."" 床
      床の上にブロックが乗ることができる。
     
   ""#"" 壁
      壁には進行不可能であり、ブロックの一部が壁の上に乗るような移動はできない。
     
   ""s"" ブロックの初期位置
      ブロックは１文字だけ与えられる。初期状態では直立している状態しか存在しない。
     
   ""g"" ゴール地点
      ゴールはステージ中に１つしか出現しない。
      また、ブロックが直立している状態でしかゴールすることは不可能である。
     
   特殊壁とスイッチ
      アルファベット小文字 特殊壁
      アルファベット大文字 特殊壁に対応するスイッチ
      
      特殊壁は出現時には進行不可能であり、ブロックの一部が特殊壁の上に乗るような移動はできない。
      ブロックが回転を行い直立したときにブロックの真下にスイッチがあるとき、そのスイッチは押される。
      スイッチを押したとき、同じアルファベットの特殊壁が出現しているときは消滅し、逆に消滅しているときは出現する。
      ステージ開始直後ではすべての特殊壁が出現しているとする。
      ひとつのステージで現れる特殊壁とスイッチは最大５種類とする。
      スイッチを表すアルファベットは{'a','b','c','d','e'}である。
      特殊壁を表すアルファベットは{'a','b','c','d','e'}である。
      スイッチと特殊壁の数はh&times;w個以下である。
      特殊壁と同じアルファベットのスイッチがステージの中に必ず出現するとは限らない。
      また、スイッチと同じアルファベットの特殊壁がステージの中に必ず出現するとは限らない。
     
   ""^"" トラップ
      トラップのマスの上には直方体が直立した状態で乗ってはいけない。
     
   
ステージの情報と金属体の初期位置が与えられるので、このパズルを解く最短手数を求めよ。
解が存在しない場合は-1を出力しなさい。
 

"
p01015,J's Final Problem,"
不思議なダンジョンとは構造の変化を伴うダンジョンである。不思議なダンジョンは階層が深いものから浅いものまで様々なものがあり、深い階層には凶悪なモンスターが生息していたり、財宝が眠っていたりする。ジェイは不思議なダンジョンを研究している研究者である。ある日、新しいダンジョンを掘っていたところ、とても大きく深いダンジョンに繋がってしまった。ジェイはこのダンジョンを「ジェイの最終問題」と名付けた。このダンジョンの調査が、優秀な冒険者であるあなたに依頼されることになった。冒険者の目的はできるだけ深い層のフロアに到達することである。このダンジョンの特徴を以下に述べる。
 地上からダンジョンの地下1階の部屋への下りの階段は1つしか存在しない。 各部屋は1つの上りの階段と2つの下りの階段が存在する。 2つの下りの階段のうち片方を右の階段、もう片方を左の階段とする。 冒険者が階段を降りた際に、ダンジョンの構造が変化することがある。 階段を降りるとは、地下i階のある部屋から地下i+1階のある部屋へ降りることを示す。 階段を上った場合はダンジョンに対して何も変化を及ぼさない。 地下n階目には階段は存在しない。 
最近、ジェイの最終問題に関する石碑が発見された。
どうやら、各階の階段を降りたときの変化がメモとして記されているようだ。

メモの形式は、
 
という形である。

地下num1階のすべての部屋について、direction1の階段を降りている途中で、地下num2階のすべての部屋について、 direction2の階段を降りた先の部屋が消滅し、さらにそこから階段を降りることによって到達できる部屋や階段がすべて消滅する。部屋や階段の消滅に冒険者が巻き込まれた場合、冒険は失敗する。地下i階から地下i+1階へ向かう階段の途中で冒険者が失敗した場合は地下i階まで到達したものとして扱う。

石碑において言及されていない階段は、その階段を降りてもダンジョンの構造に変化を及ぼさないことを示す。



冒険者はこの石碑をヒントにして探索を行うことにした。
 
ダンジョンの深さnとメモの情報がm個与えられるので、最大地下何階まで到達できるかを答えなさい。
 

"
p01016,Password,"
太郎君は、自分のパソコンを持っていて、ログイン時のパスワードを設定していた。しかし、不注意にも太郎君はそのパスワードを忘れてしまった。そこで、パスワードをメモした紙があることを思い出し、紙を見つけた太郎君はそれを見て驚いた。なんと紙は切れていて断片しか存在せず、ところどころに汚れがあり、読めなくなっていたのだ。太郎君はそのメモを参考にパスワードを推測することにした。
 

"
p01017,kun Likes Rectangles,"
会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらい長方形が大好きだ。そんなゆう君は３つの長方形を使って得点を得る新たな遊びを考え、得られる最大の得点を計算するためのプログラムを書くことにした。
 

"
p01018,Warping Girl,"
会津魔法学校は, 魔法を使える者が集まる学校である. その学校の生徒の一人であるハルカは, 魔法陣の上でワープの魔法を使う事ができる.
 
彼女の家から学校には, 長さ l の一直線状の道がある. また, この道には所々魔法陣が描かれている.
彼女は毎日この道を使って学校に通っているため, できるだけ短い時間で学校に辿り着きたいと思っている.
 
そこでプログラマーであるあなたは, 彼女に学校まで行くときにかかる最小の時間を教えてあげることにした.
 
ハルカは, 1 分で距離 1 だけ歩いて先に進むことができる ( ＊戻ることはできない)．また, ワープの魔法陣が書いてある位置 pi で魔法を唱えることで, pi からちょうど di だけ進んだ場所に ti 分で移動することができる.  移動先に魔法陣がある場合も, 連続してワープ魔法を使用することができる.
 
彼女の家の位置は 0、学校の位置は l である.
 

"
p01019,Cheat Case,"
算数のテストを受けることになった俺達は、今から勉強しても赤点を取ってしまうことを確信し、カンニングで乗り切ることを決意した。
 
算数のテスト問題を作成するa先生はテスト用紙を手書きで作ることで知られている。彼がテスト問題を作成している時の筆跡情報を、近所の博士に作ってもらった筆跡盗聴鉛筆で盗み取る作戦だ。だが肝心の筆跡情報から問題を復元するプログラムは博士の技術では作ることができなかった。しかも、たとえ問題が復元できたとしても、俺達の頭脳では問題を解くことができない。どうすることもできなくなった俺達は、プログラマーであるあなたに、筆跡情報から問題を復元し、それを解くプログラムの作成を依頼することにした。
 
今回のテストでは、数式を解く問題が出題される。数式中の演算記号は＋（加算）,-（減算）,・（乗算）の3つのみで、乗算は加算、減算よりも優先して計算される。数式は必ず構文が正しいものが与えられる。また、0以外の数で、先頭が0であるものは与えられない。
 
問題が書かれる紙はグリッドで表される。筆跡情報は線分の集合で与えられ、各線分はx軸に水平または垂直、もしくは始点、終点が同じ（点）である。この線分は、始点から終点までにあるマスを黒く塗りつぶすことを表す。座標(0, 0)が紙の左上である。数式の各文字（0,1,2,3,4,5,6,7,8,9,＋,-,・）は以下で表される。
 
a先生は印刷したかのような字を書くことで知られており、各文字は上記以外の書かれ方はしない。また、上記以外の文字が書かれることはない。2つ以上の文字がマスの辺を共有することはない。各文字の位置は、文字を構成するマス（黒いマス）の中で、最も左側にあるもののx座標で表される。数式の文字は、位置が小さい順に（左から右へ）解釈される。2つ以上の文字の位置が等しくなることはない。
 


"
p01020,Lonely Adventurer,"
  13歳の誕生日の祝いに少年gは父親と一緒に船旅に出ていた。しかし航海の途中、不運にも船が嵐に見舞われて船が転覆してしまう。彼が目を覚ますと、そこは無人島だった。冒険家の父親の影響もあり、彼はこの状況にひるむ事なく、無人島でサバイバル生活をすることを決意した。動物を倒して肉を焼いたり、木の実を採取することで食いつなぎ、大木の下で野宿をすることでなんとか生き延びることができた。しかし、どうやら最近島の様子がおかしいようだ。動物たちは皆奇妙な行動を取るし、これは何か悪い事の予兆なのかもしれない。早くこの島から脱出せねば。
 
  とはいえ、島からどう離れればよいのか。海の向こうには別の島が見えるが、そこまで行く方法が見当たらない。途方に暮れ、海岸沿いを歩いていたとき、ふと彼は n 隻のボートを発見した。調べてみたところ、これらはどれもうまく動くようだ。よし、このボートを使って向こうの島まで脱出しよう。ただ次の島でもまた同じようなサバイバル生活が始まるかもしれない。そのとき困らないためにも、予備として全てのボートを運んでおこう。この島で何かが起こる前に早い事済ませないと。
 

"
p01021,Remainder Zero,"
  整数の集合a,bについて,次の条件を満たす整数 xがいくつ存在するか答えよ。
 
ai mod x = 0 かつ x mod bj = 0 がすべての i (1 &le; i &le; n), j (1 &le; j &le; m) について成り立つ。
 
(a mod b はaをbで割ったときの余りを意味する)
 

"
p01022,kun Likes Building Block,"
会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君はプログラミングと同じくらい長方形の積み木が大好きだ。
そんなゆう君は、最近積み木で山を作る遊びに熱中している。
 
今日もゆう君は山を作って遊んでいたのだが、持っている積み木で沢山の山を作る事は簡単なので、今日は全ての積み木を使って出来る山の数を最小化しようと考えた。
そこでゆう君は、実際に全ての積み木を使って山を作った後、本当にその山の数が最小になっているのかどうかを確かめるために、プログラムを書く事にした。
 

"
p01023,Caterpillar,"
とある天空都市に住む大学生のgは、芋虫のいも太郎を飼っている。  彼は、いも太郎に最短歩数で全てのえさを順番に食べるように躾けをした。彼の友人であるあなたは、彼からいも太郎が本当に躾けられているかどうかを調べて欲しいと依頼されたので、プログラムを書くことにした。
 
"
p01024,Sum of Last Digits,"
3つの整数 n, m, k が与えられるので


n1%10 &nbsp;+ &nbsp;n1+m%10 &nbsp;+ &nbsp;n1+2m%10 &nbsp;+ ... + &nbsp;n1+(k-1)m%10



を計算せよ。 a % b は a を b で割ったときの余りを表す。
 

"
p01025,Hanimon,"
  ハニカムモンスターはハニカム模様の六角形状の不思議な生き物である。
 
  ハニカムモンスターには様々なサイズのものがあり、一辺がn個の正六角形のマスから成るハニカムモンスターをサイズnのハニカムモンスターとする。
 
  一方、聖なる模様はハニカムモンスターと同じく、六角形として定義され1辺がp個の正六角形のマスから成る聖なる模様をサイズpの聖なる模様とする。
 
ハニカムモンスターと聖なる模様の形の例を以下に示す。サイズは1辺の正六角形のマスの数に対応する。
 
  ハニカムモンスターと聖なる模様の各マスには色が着いており0と1によって表される。
   
サイズnのハニカムモンスターとその模様、q個のサイズpの聖なる模様が与えられるので、
そのハニカムモンスターが伝説のハニモンであるかどうかを判定するプログラムを作成せよ。
 



  "
p01026,Witch Craft Moves,"
会津魔法学校は、魔法を使える者が集る学校である。
会津魔法学校には1~nまでの番号がついた教室と教室同士をつなぐ廊下がある。教室や廊下は何度でも通ることができる。また、会津魔法学校には任意の教室u,v間を0個以上の教室と廊下を一度ずつ通って移動することができるような経路がただ1つある。
各教室には魔法陣が設置してある。この魔方陣によって、教室に入る度に入った者の魔力が増減させられてしまうのだ。生徒の移動を助けるために以下の二つの質問に応えてほしい。
 
質問1
0 a b
教室aからbへ移動したときの魔力の残量を出力してほしい。教室aとbでの増減も含む。また、この質問開始時点での魔力の量は毎回0である。
 
質問2
1 a c
教室aの魔力の増減量がcだけ変動させる。
 


"
p01027,WW,"
19xx年、nつの国で連合国軍が結成された。連合国軍に属する各国では、敵軍の侵略から自国を守るために国内に１つ以上の拠点を作り、周囲を警戒している。図１は連合国の例を示し、長方形が各国を、その中にある円がその国の拠点を表す。
 
敵軍が侵略してきた場合、それを一番最初に発見した拠点からその情報を連合国軍に属する他国または自国の拠点に発信することになっている。
情報を他の拠点に伝えるには正の整数のコストがかかる。
 
また、各国では自国の拠点のうち、連合国軍翻訳通信部(atis : allied translator and interpreter section)に属する兵士が配属されている拠点をちょうど１つだけ持っている。
この兵士だけが連合国軍に属する全ての国の言語を話すことができ、その他の兵士は自分の国の言語しか話せない。
その為、情報を受け取った拠点が他国に情報を伝えようとした際にその拠点がatisに属する兵士をもたない場合、そこから自国のatisに属する兵士をもつ拠点に情報を伝え他国に情報を発信してもらう必要がある。
 
国毎で各拠点に０から順に[その国がもつ拠点の数-1]までの番号が割り振られており、０番目の拠点にatisに属する兵士がいる。
つまり、他国の拠点に情報を伝達できるのは０番目の拠点だけであり、その他の拠点から他国へは通信できない。
また、その国の０番目の拠点に情報が伝わればその国全体に情報が伝わったものとする。
 
様々な理由から、全ての拠点の間で通信ができるとは限らない。
ある拠点から別の拠点に情報を伝える事ができたとしても、その逆が成り立つとは限らない。
また、ある拠点から別の拠点に情報を伝えた際のコストとその逆でかかるコストが同じとも限らない。
 
これらのことを踏まえて、ある拠点が敵軍を発見した際に、連合国軍全体に情報が行き渡るコストの総和が最も少ない伝達方法を知りたい。
連合国軍に属する全ての国の０番目の拠点に対して最初に敵軍を見つけた拠点から情報が伝達された時、連合国軍全体に情報が行き渡ったものとする。
 
敵軍を発見した拠点が質問として与えられるので、最も少ないコストでその情報が連合国軍全体に行き渡る伝達方法とそのコストを出力せよ。
 
例えば、以下のケースについて考える ( sample input 4、１つめの質問 )
 
国neepalの1番目の拠点が敵軍を発見したとする。
この場合、１番目の拠点から他国へは通信できないため、まず自国の０番目の拠点へ情報を伝える。
 
次に、０番目の拠点から国luxenbourg,nowayに情報を伝える。
neepalからluxenbourgの０番目の拠点へ直接通信することはできるが、３番目の拠点に情報を伝え、そこから０番目の拠点へ伝えたほうがコストが少なく済む。
この場合、全ての国の０番目の国へ情報を伝えるためにかかる最小のコストは１２となる。
コストが１２で済む伝達方法は複数存在するが、そのうちのどれか一つを答えとして出力すれば良い。
 
以下の図２の赤い矢印はその答えのうちの１つである。
 




図2



"
p01028,kun Likes an Integer,"
会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらい数字が大好きだ。そんなゆう君は最近、表に0から9までのいずれかの数字の書かかれたプレートをn枚購入してn桁の数を作る遊びに熱中している。
今月もゆう君は貰ったお小遣いでn枚のプレートを買いに行こうと考えていた。
 

"
p01029,kun Likes Letters in the English Alphabet,"
会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらい英小文字が大好きだ。
そんなゆう君は紙と丸と線、そして英小文字を使う新しい遊びを考え、その採点用プログラムを書くことにした。
 

"
p01030,Changing Grids,"
  a君とb君は、『changing grids』というゲームに熱中している。このゲームは2人用で、プレイヤー1がステージを構成し、プレイヤー2がそのステージに挑戦しゴールを目指すというものである。
 
  今、a君とb君はこのゲームを何度かプレイしているが、a君の連勝でb君は1度も勝つことができていない。そこであなたは、b君にこのゲームを攻略するためのヒントを教えてあげることにした。
 

"
p01031,Smell Searcher,"
廃津大学では強烈な香りを放つn個の廃材が一列に並んでいます。
廃材には1からnの番号が順番にふられていて、i番目の廃材は強さaiの香りを放っています。
 
リヒト君は仕事で、すべての廃材の放つ香りの総和を求めるよう依頼されました。
香りの総和がm以上になると「大変きつい仕事」とみなされ特別支給金がもらえます。
 
  この仕事を行うために、リヒト君は精度rの香り検出器を使います。
  精度rの香り検出器を使うとi番目の廃材の香りを測ろうとすると同時にi&minus;r,i&minus;r+1,...,i&minus;1,i,i+1,...,i+r&minus;1,i+r番目の廃材の香りも検出されます。言い換えると、閉区間[ max(i&minus;r,1), min(i+r,n) ] の廃材の香りを検出します。ここで、max(a,b)はaとbの最大値、min(a,b)はaとbの最小値を表します。

  ただし、測った廃材の1つ隣の廃材の香りの強さは本来の香りの強さよりc減らされ、2つ隣の廃材の強さ香りは本来の香りの強さより2*c減らされて検出されます。つまり、j(0&le;j&le;r)個隣にある廃材の香りの強さは ai &minus; j * c として検出されます。結果的に、i番目の廃材に精度rの検出器を使うことで検出された香りの強さの最大値がi番目の廃材の香りの強さとして認識されます。
 
  精度の高い検出器を使うとその分費用がかかるため、リヒト君は検出器が認識した1からn番目の廃材の香りの総和がm以上になる最低の精度rの値を知りたいと思っています。
 

"
p01032,Rooted Tree Game,"
初期状態として複数の根付き木が与えられる。これに対しaliceとbobはゲームを行う。ゲームは2人交互に行い、先手がaliceで後手がbobである。ターンが回ってきたプレイヤーは以下の行動を取る。
 根(親を持たない頂点)を1つ選択する。この頂点をsとする。 sを根とする根付き木に含まれる頂点を選択する(ここではsも選択可能)。この頂点をtとする。 sからtへの経路上にある頂点を、sとtも含めすべて削除する。また、削除された頂点が端点であるような辺もすべて削除する。 
ターンが回ってきた時点で頂点がすべて削除されていた場合、そのプレイヤーの負けとなる。
 
aliceとbobが常に最適な行動を取る時、与えられた初期状態に対し、勝利するプレイヤーを判定せよ。
 
以下の図は、プレイヤーの行動の例を示す。

 

"
p01033,Coupling,"
愛津大学では毎年大規模な合コンが行われています。
今年はn人の男性とm人の女性が参加します。
それぞれ男性は0から順にn&minus;1までidが割り振られおり、女性は0から順にm&minus;1までidが割り振られています。
 
この合コンでは自分の「大好きな人」と「そこそこ好きな人」のidを提示します。
男性はそれぞれ女性のidを、女性はそれぞれ男性のidを提示します。
 
その後、以下のルールに従ってカップルが成立します。
 男性は複数の女性、女性は複数の男性とカップルになってはいけない。 互いに「大好きな人」と提示した男性と女性でペアができる。そこから、任意のペアを選びカップルを作ることができる。 片方が「大好きな人」、もう片方が「そこそこ好きな人」と提示した男性と女性でペアができる。 そこから、任意のペアを選びカップルを作ることができる。 互いに「そこそこ好きな人」と提示した男性と女性でペアができる。 そこから、任意のペアを選びカップルを作ることができる。 ルール2で出来たカップル、ルール3で出来たカップル、ルール4で出来たカップルの順にカップルの数が最大になるようにカップルが成立する。 
サジ君はこの合コンの主催者です。
近年では参加者の数が多くなり手動でカップルの数を把握するのが大変になってきました。そこでプログラマーであるあなたは、サジ君の手伝いをすることにしました。上記のルールに従ってカップルを作った時の「大好きな人」同士のカップルの数と「大好きな人」と「そこそこ好きな人」によるカップルの数と「そこそこ好きな人」同士のカップルの数を出力するプログラムを作成してください。
 

"
p01034,kun Likes a Directed Graph,"
会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらいお絵描きが大好きだ。
これまでゆう君は、丸と矢印で沢山絵を書いてきた。矢印は必ず丸と丸を結ぶようにして描いてある。ある日ゆう君はこれらの絵がグラフであることを知る。
 
丸は頂点と呼ばれ、矢印は辺と呼ばれているらしい。更にゆう君は、矢印を描く際に、必ずその上に１つ正の整数を書いていた。このように、辺に重みがあり有向な辺からなるグラフは重み付き有向グラフと呼ばれる。
 
  今日ゆう君は、新たに閉路という言葉を知った。閉路とは、連結した辺の列であり、それに含まれるどの頂点も高々1度しか現れないもので、最初の頂点と最後の頂点が同じであるようなものをいう。閉路の辺の重みの総和が負になる場合、そのような閉路は負の閉路と呼ばれる。
 
新たな言葉を沢山知ったゆう君は一つの問題を思いついた。
 

"
p01035,Hard Beans,"
大津大学では豆が盛んです。
n個の豆が一直線上に並んでいます。
それぞれ0から順にn&minus;1まで番号がふられており、i番目の豆の硬さをaiとします。
 
シアン君は理想の豆の硬さをdだと考えています。しかし、シアン君は面倒くさがりなのであまり遠くにある豆を取りに行きたくありません。したがって、シアン君はl番目の豆からr番目の豆の中で硬さがdに最も近い豆を知りたいと思っています。
 
シアン君はq個の質問をしてくるので、それぞれの質問に対し閉区間[l,r]番目にある　| 豆の硬さ &minus; d |　の最小値を求めるプログラムを作成してください。(ただし、| a | は aの絶対値を表します。)
 

"
p01036,kun Likes To Play Darts,"
会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらいダーツが大好きだ。
そんなゆう君は最近ダーツにはまっていたが、普通のダーツに飽きてしまったため独自のダーツボードを作ることにした。
 
ダーツについてはダーツを参照。
 


"
p01037,A White Wall,"
  とある都市に住むａ氏の家の敷地は、真っ白な壁に囲まれている。壁に物足りなさを感じたａ氏は、近所の子供たちを呼んで、壁を自由に塗ってもらうことにした。子供達にはそれぞれ壁の好きな区間を選んで色を塗ってもらう。 さて、壁はどのように塗られただろうか。
 

"
p01038,Mountain Climbing,"
なりよし君は山登りの計画を立てています。計画はとても大切です。高原・盆地が多いのか、峰・窪地が多いのか、山腹があるのか、状況によって用意する荷物も変わってきます。
 
なりよし君が持っている登山ガイドブックには、今回登山に利用する道の一定の距離毎の標高がスタート地点からゴール地点まで順に書かれています。
 
ガイドブックに書かれている標高をスタート地点からゴール地点まで順に
a1, a2, a3, ..., anとし、高原、盆地、山腹、峰、窪地を次のように定義します:
 高原
    ai-1 &lt; ai = ai+1 = ... = aj &gt; aj+1 (1 &lt; i &lt; j &lt; n)
   盆地
    ai-1 &gt; ai = ai+1 = ... = aj &lt; aj+1 (1 &lt; i &lt; j &lt; n)
   山腹
    ai-1 &lt; ai = ai+1 = ... = aj &lt; aj+1 (1 &lt; i &lt; j &lt; n)
もしくは
    ai-1 &gt; ai = ai+1 = ... = aj &gt; aj+1 (1 &lt; i &lt; j &lt; n)
   峰
    ai-1 &lt; ai &gt; ai+1 (1 &lt; i &lt; n)
   窪地
    ai-1 &gt; ai &lt; ai+1 (1 &lt; i &lt; n)
   
あなたは、なりよし君の為に、高原・盆地・山腹・峰・窪地、それぞれの数を計算するプログラムを書くことにしました。
 
"
p01039,Manhattan Warp Machine 1,"
とある宇宙では、1次元の整数座標点上に星が存在し、宇宙人達はマンハッタンワープ装置を使い、星間を移動している。
このワープ装置には、n個のボタンが付いており、ボタンiを押すと、現在いる星からのマンハッタン距離がdiである任意の星にコストciでワープすることができる。
今、点0の星にいるある宇宙人が点xの星に行きたいと考えている。
点xの星に辿り着くまでの最小のコストを答えよ。
辿り着けない場合は-1を出力せよ。
1次元上の整数座標点には必ず星が存在する。
点x1と点x2間のマンハッタン距離は| x1 - x2 |で表される。
 

"
p01040,Friday the 13th,"
今年も「立命館大学競技プログラミング合宿」が開催されることとなった。僕は毎年開催されるこの合宿をとても楽しみにしている。しかし、欲望に耐え切れず合宿前に散財してしまい、お金に余裕が無くなってしまった。そこで僕は、立命館大学の最寄り駅である南草津まで移動するのに最も安く済む青春18きっぷを使うことにした。この切符は安く済む代わりに乗り換えが多く発生し、移動に丸1日使わなければならないのでとても疲れる。そんな移動をする日が13日の金曜日であることに気づいたのは会津若松駅を出発した後だった。僕は12時間、不安を感じながら電車に揺られるはめになった。
 
今日は合宿2日目、2015年3月15日、日曜日である。13日は特に何事もなく南草津に到着したが、僕はもうこのような不安を味わいたくないと思った。そこで2日目のジャッジである僕は、指定された期間内に存在する13日の金曜日の数を求める問題を出題し、プログラムを作成してもらうことにした。
 
閏(うるう)年の定義は以下の通りである。
 西暦年が4で割り切れる年は閏年である。 ただし、100で割り切れる年は閏年でない。 ただし、400で割り切れる年は閏年である。 


"
p01041,Distinct Dictionary,"
辞書をこよなく愛する者がいた。彼らは自分だけの辞書を作ることが大好きである。
そこであなたは彼らの辞書に、自由にカスタマイズする機能を付け加えてあげることにした。
 
"
p01042,Sum of Numbers,"
a以上b以下の整数が書かれたカードがそれぞれc枚ずつあります。
これらc(b-a+1)枚のカードの中からd枚のカードを選択したとき、それらのカードに書かれている整数の合計がeになる場合の数を1,000,000,007で割った余りを求めてください。
 

"
p01043,kun Likes a Treasure,"
会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらい財宝が大好きだ。ゆう君は今日も財宝を探すため洞窟を探索する予定だ。そこでゆう君は洞窟の地図から、洞窟を全て見て回る際に歩く距離を求めるプログラムを書くことにした。
 

"
p01044,Puzzle and Hexagons,"
超大人気ゲーム「パズル&amp;ヘキサゴンズ」がついにリリースされた。このゲームは超面白すぎてドハマりする人が続出。あまりの熱中度に医師から中毒認定を受ける者も続出した。世界各国の有志達はこのゲームの中毒者達を助けるために「パズル&amp;ヘキサゴンズ」のシミュレータを作り、危険な実機でのプレイを避けるよう促そうとした。あなたにはシミュレータ作りに協力して欲しい。
 

"
p01045,Hopping Mind,"
チエノとカカオは同じ喫茶店で働く姉妹である。2人はとても仲が良く、ある日、とあるテーブルゲームで遊ぶことになった。
 
ゲームはrマス&times;cマスの盤面と、駒としてうさぎのtpを用いる。盤面の各マスは白か黒の色が塗られている。最初にtpを盤面の右下(r,c)におき、2人で次の行動を交互に行う。tpの現在の位置を(a,b)とすると、そこからジャンプ可能な位置(i,j)を1つ選び、tpをそこにジャンプさせる。tpがジャンプ可能な位置(i,j)は以下をすべて満たす。
 
1 &le; i &le; r かつ 1 &le; j &le; c かつ i &le; a かつ j &le; b かつ 1 &le; (a-i) + (b-j) &le; k
 
(i,j)は白いマスである
 
自分のターンにtpをジャンプさせることができなくなった場合、負けとなる。
 
チエノが先手、カカオが後手でこのゲームを行う。カカオは頭の中でゲームを最後まで先読みすることができ、常に最適な行動をとる。この時、チエノが勝つ方法が存在するかどうかを判定せよ。
 

"
p01046,kun Likes a lot of Money,"
会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。園児の一人であるゆう君は、プログラミングと同じくらいお金が大好きだ。ゆう君は、今日もお金を稼ぐために財宝の眠る島を訪れた。ゆう君は事前に財宝のありかの描かれた地図を手に入れている。その地図をもとに出来るだけ多くのお金を稼ぎたい。ゆう君は最大でどのくらいお金を手に入れることができるだろうか？
 

"
p01047,Manhattan Warp Machine 2,"
とある宇宙では、3次元の格子点上に星が存在し、宇宙人達はマンハッタンワープ装置という装置を使い、星間を移動している。
このワープ装置には、n個のボタンが付いており、ボタンiを押すと、現在いる星からのマンハッタン距離がdiである任意の星にワープすることができる。
ワープ装置は改良され、コストがかからずに移動出来る。
今、(0, 0, 0)の星にいるある宇宙人があるm個の星を訪れたいと考えている。
m個の星を全て訪れるのに最短で何回ワープをする必要があるか答えよ。
もし、1つでも訪れることが不可能な星がある場合は-1を出力せよ。
m個の星は好きな順番に訪れることが出来、全て訪れた後に(0, 0, 0)に戻って来る必要は無い。
3次元上の全ての格子点には必ず星が存在する。
点(x1, y1, z1)と点(x2, y2, z2)間のマンハッタン距離は| x1 - x2 | + | y1 - y2 | + | z1 - z2 |で表される。
 

"
p01048,Divisor,"
12以下の自然数 n が与えられるので、約数の個数がちょうど n 個であるような最小の自然数を求めよ。
 

"
p01049,Array Update,"
項数 n、初項 a、公差 d の等差数列 a がある。以下の形式で数列を更新する命令文が m 個与えられるので、与えられた順序で数列 a を m 回更新したときの k 項目の値を求めよ。
   
i 番目の命令文は3つの整数  xi , yi , zi で表される(1 &le; i &le; m)。
 
xiが0だった場合、yi項目の値と
zi項目の値を入れ替える。
 
xiが1だった場合、yi項目の値を
zi項目の値に書き換える。 
 




"
p01050,String Compression,"
アルファベットの小文字と数字からなる文字列 s が与えられる。次の手順で文字列 s の長さを圧縮する。
 文字列内の文字の順番を任意の順番に入れ替える。
例: ""0ig3he12fz99"" &rarr; ""efghiz012399"" 次の操作を任意の回数行う。 文字列内にある、""abcdefghijklmnopqrstuvwxyz""の連続した部分文字列を選び、(先頭の文字)'-'(末尾の文字)に置き換える。
例: ""efghiz012399"" &rarr; ""e-iz012399"" 文字列内にある、公差が1であるような数字列(""0123456789""の連続した部分文字列)を選び、(先頭の数字)'-'(末尾の数字)に置き換える。
例: ""e-iz012399"" &rarr; ""e-iz0-399"" 
文字列 s を圧縮して得られる文字列の長さの最小値を求めよ。
 

"
p01051,Squid Ink,"
近年、イカたちの間では縄張り争いが頻繁に起きている。複数のイカたちがチームを組み、自らのイカスミを武器に戦うのが近年のイカの戦闘スタイルである。
 
現在も縄張り争いが起こっており、その戦場は r&times;c のグリッドで表される。縄張り争いに参加しているイカのゲソ太はこのグリッド上のある場所にいる。この争いでは、重要な場所を敵よりも早く占拠することで戦況を有利にすることができる。そのため、ゲソ太は重要そうな場所を1つ決め、そこになるべく早く移動したいと考えている。
 
ゲソ太は隣接する上下左右のマスに移動することができる。グリッドの各マスには味方、または敵のイカスミが塗られている場合がある。なにも塗られていないマスに移動する場合、2秒かかるが、味方のイカスミが塗られているマスに移動する場合、その半分の時間(1秒)で済む。敵のイカスミが塗られているマスには移動することができない。壁があるマスや戦場の外へは当然移動することができない。
 
また、ゲソ太は上下左右のいずれかの方向を向き、イカスミを吐くことができる。すると、前方の3マスが味方のイカスミで上書きされる。ただし途中に壁がある場合はその手前までしかイカスミは届かない。この動作には2秒かかる。
 
戦場の情報とゲソ太の位置と目的の位置が与えられるので、最短で何秒で移動できるか求めてほしい。
 

"
p01052,Movie,"
太郎君は夏休みの間、毎日１つの映画を近所の映画館で見ることにしました。
（太郎君の夏休みは8月1日から8月31日までの31日間あります。）
 
その映画館では、夏休みの間にn つの映画が上映されることになっています。
それぞれの映画には 1 から n までの番号が割り当てられており、i 番目の映画は8月 ai 日から8月 bi 日の間だけ上映されます。
 
太郎君は映画を見た時、それが初めて見る映画だった場合は 100 の幸福度を得ることができます。
しかし、過去に 1 度でも見たことのある映画だった場合は 50 の幸福度を得ます。
 
太郎君は上映される映画の予定表をもとに、夏休みの計画を立てることにしました。
太郎君が得られる幸福度の合計値が最大になるように映画を見たときの合計値を求めてください。
 
どの日も必ず1つ以上の映画が上映されていることが保証されます。
 
  


"
p01053,Lucky Number,"
0 から n-1 までの数字があります。 m+1日間のラッキーナンバーを以下の方法で選びたいと思います。 最初の日にラッキーナンバーをランダムに決めます。 i日後のラッキーナンバーを a 、（i+1）日後のラッキーナンバーを b とすると、
 
例えば 0,1,2,3 と数字があり、 k = 1 のとき
 0 の次のラッキーナンバーは 0 or 2 1 の次のラッキーナンバーは 1 or 3 2 の次のラッキーナンバーは 0 or 2 3 の次のラッキーナンバーは 1 or 3 
となります。
 
次にq個の質問が与えられます。 各質問の内容は以下のとおりです。
 
最初の日のラッキーナンバーが a のとき b 日後のラッキーナンバーが c になるような b 日後までのラッキーナンバーの選び方は何通りでしょうか？
選び方は膨大な数になると思われるので 1,000,000,007 で割った余りを求めてください。
 
例えば、n=4 k=1 で、最初のラッキーナンバーが 0 で　3 日後のラッキーナンバーが 2 になるような組み合わせは
 0 &rarr; 0 &rarr; 0 &rarr; 2 0 &rarr; 0 &rarr; 2 &rarr; 2 0 &rarr; 2 &rarr; 0 &rarr; 2 0 &rarr; 2 &rarr; 2 &rarr; 2 
の４通りです。
 

"
p01054,String Conversion,"
ジェニファーとマリアンはカーラに文字列sをプレゼントしました。
しかし、カーラは文字列sをもらっても嬉しくありません。
文字列tが欲しかったのです。
3人は協力して文字列sを文字列tに変えることにしました。
 
最初にジェニファーが文字を任意の順番に並び替えます。
 
次にマリアンが２種類のアルファベットの小文字を交換することを任意の回数行います。
この操作では、例えば以下のように、文字列中の同じ文字が全て交換されます。
 aab &rarr; aとbを交換 &rarr; bba aab &rarr; aとcを交換 &rarr; ccb 
最後にカーラがある1文字を別の1文字に置換することをtになるまで繰り返します。
ジェニファーとマリアンはカーラの置換回数が少なくなるようにしてあげることにしました。
カーラが行う置換の回数の最小値を求めてください。
 

"
p01055,Bomb Removal,"
縦h&times;横wのグリッド上にn個の点火された導火線とそれぞれに対する1つの爆弾が配置されている。それぞれの導火線と爆弾は、li個のマスからなるpathi上に配置され、pathiのj番目のマスを(pxij, pyij)とする。各爆弾はpathiの最後のマス(pxili, pyili)に存在する。導火線の火は初期状態(0秒時点)でマス(pxi1, pyi1)にあり、1秒間に1マス進む((pxi1, pyi1),(pxi2, pyi2),...,(pxili, pyili)の順に進む)。
 
最初、ロボットがマス(sx, sy) にいる。このロボットは今いるマスの隣接する8方向のマスに1進む、または、そのマスに留まるのに1秒かかる。ただし、グリッドの外や爆弾のあるマスには移動することができない。ロボットは導火線の火があるマス上にいるとき消火することができる(同じマスに2つ以上の導火線の火がある場合はそれら全てを消すことができる)。
 
爆弾は導火線の火がマス(pxili, pyili)に到達したときに爆発する(pathiの途中で導火線の火がマス(pxili, pyili)を通過したときは爆弾は爆発しない)。
全ての爆弾を爆発させずに全ての導火線の火を消火させるための最短の時間を出力せよ。ただし、どのように移動しても爆弾を爆発させてしまう場合は-1を出力せよ。なお、初期状態(0秒時点)でロボットが導火線の火の上にいる場合、消火することができる。
 

"
p01056,Lights of Apartment,"
エーちゃんとリカちゃんとハルトくんはマンションに遊びに来た。
3人は全ての部屋の電気を管理できる部屋に忍び込みいたずらをすることにした。
このマンションはn個の立方体が1列に並んでいる形をしている。
各立方体は西から順に1辺の長さが1ずつ増えていて(1,2,3,...,n)、i番目の立方体はi階あり、各階に縦i×横i個の部屋がある。
2番目以降の立方体の西側は1つ西の立方体の東側と接していて、全ての立方体の南側は真っ直ぐな道路に面している。
 
初め全ての部屋に電気がついている。
3人はそれぞれ次の行動をした。
 エーちゃんは西からk番目の全ての部屋の電気を消した。 リカちゃんは南からk番目の全ての部屋の電気を消した。 ハルトくんはk階の全ての部屋の電気を消した。 
このようないたずらが m 回行われた後に電気がついている部屋の数を求めよ。
 

"
p01057,String Crossing,"
n個の文字列{ s1, s2, ..., sn } が与えられる。
続いてq個のクエリが与えられる。
クエリの種類は以下の2つである。
 
a,b,c,dが入力されsa の b文字目からの substring を sc の d-1文字までの substring の後に繋げる。これを新しいscとする。
元のsc の d文字目からの substring を sa の b-1文字までの substring の後に繋げる。これを新しいsaとする。
 
a,b,cが入力され sa の b文字目を c に変更する。
 
 
例えばs1=""abcd"",s2=""efgh""があり
クエリの種類が1でa=1,b=2,c=2,d=3のとき
 
s1=""agh"",s2=""efbcd""となる。
 
全てのクエリを処理した後の文字列s1からsnを全て出力せよ。
 


"
p01058,Point in The Triangle,"
点(0,0),(n-1,0),(0,m-1),(n-1,m-1)に囲まれた長方形の閉区間内から格子点を3点選び、三角形を作る。
このとき、点(x1,y1)を含むが点(x2,y2)を含まない三角形の数と点(x2,y2)を含むが点(x1,y1)を含まない三角形の数の差の絶対値を求めよ。
点が境界線上にあるものは三角形に含まれているとみなす。
ただし、3点が一直線上に並んでいるものは三角形とはみなさない。
 

"
p01059,Gossip,"
12プロこと会津プロダクションは有名芸能プロダクションである。12プロには多くのアイドルが在籍している。
 
-->

"
p01060,Product Sale Lines,"
ウニクロ卯月さんと目黒凛さんはsearight live fesの物販に来ている。下図のように、物販列は二列からなり、横にw人、縦にh人並べる大きさでコの字の形をしている。列の先頭の人は買い物をした後に列からはけ、同じ列の後ろの人々はそれぞれ一人分ずつ列を詰める。
 
二人は最初に物販列の最後尾に隣同士で、それぞれ違う列に（下図オレンジと濃い青色の位置）並んでいる。二人はとても仲がよいため、常にできるだけ近くにいたい。しかし、人のはけ方は列によって違うため、違う列に並んでいる二人の位置は離れてしまう可能性がある。
 
あなたの仕事は、列のはけ方が与えられたとき、二人が隣同士になる回数を求めることである。
ただし、二人ともコの字の角にいる（上図の黒色の状態の）ときは、隣同士とみなさない。また、並んだ直後は隣同士に並んでいるが、これは数えない。
 

"
p01061,Community Integration,"安倍拾菜々「えぇっ！生まれ故郷のあの村、○○市に合併されてたんですか！？ 20年前に！？」 
-->

"
p01062,Courage Test,"
p「今日は肝試し企画の番組の収録だ。」

o型智絵里「き、きもだめし……」

四村かな子「智絵里ちゃん大丈夫？」

月野茜「さすがpさん！一行で状況が明晰判明にわかる素晴らしい解説です！さあ！火の玉に向かって走りましょう！」

p「ルールは簡単、みんなで協力してこのエリアのすべての神社にお参りしてくるだけだ。」

茜「オーソドックスですね！早速神社に向かって走りましょう！」

かな子「でもここ、日本有数の神社密度で行かなくちゃいけない神社がたくさんあるんじゃなかったっけ……」

かな子「でも茜ちゃんがいれば心強いよ！」

p「ちなみにスタートは全員違う神社からスタート、合流も禁止だ。それじゃあ智絵里とかな子は初期位置についてくれ」

智絵里「うぅ……」

かな子「お、お菓子を持っていけば大丈夫！」

智絵里「頑張る……」

茜「プロデューサー！私はどうすれば！」

p「お前は賑やかしだ」

茜「えっ」

p「座ってろ」

茜「」
 

"
p01063,Rubik Dungeon,"
あなたはn × n × nの立方体のルービックキューブ型のダンジョンにやってきた。
あなたは現在(x1,y1,z1)の部屋にいる。
目標の宝は(x2,y2,z2)の部屋にある。
あなたは隣接している前後左右上下の部屋に単位時間で移動することができる。
 
各部屋には6つのボタンがあり、それぞれのボタンを押すことにより、単位時間で、ルービックキューブのように以下の操作を行うことができる：
 現在いる部屋とx座標の値が同じ全ての部屋を時計または反時計周りに90度回転することができる 現在いる部屋とy座標の値が同じ全ての部屋を時計または反時計周りに90度回転することができる 現在いる部屋とz座標の値が同じ全ての部屋を時計または反時計周りに90度回転することができる 
回転している途中で他の部屋に移動することはできない。
宝のある部屋まで最短で移動した場合の時間を求めよ。
 

"
p01064,Array Update 2,"
  項数 n 、初項 a 、公差dの等差数列 a がある。
  以下の形式で、数列を書き換える m 個の命令文が与えられるので、与えられた順序で m 回
  数列 a を書き換えたときの数列 a の k項目の値を求めなさい。
   
    i 番目の命令文は3つの整数 xi , yi , zi で与えられる。(1 &le; i &le; m)
   
    xiが0だった場合、yi項目から
    zi項目までの区間において、値の順序を反転する。
   
    xiが1だった場合、yi項目から
    zi項目までの区間において、それぞれの値を1増加させる。 
   
    xiが2だった場合、yi項目から
    zi項目までの区間において、それぞれの値を半分にする（小数点以下は切り捨てる）。
   


"
p01065,Barter,"
私の名前は五月雨ほたる。父のお菓子会社に駄菓子屋を経営する馬田ヨウさんを引っこ抜くためにこの村にやってきたわ。そこで出会ったヨウさんの息子のナナツくんが駄菓子センスバツグン！…なのだけれど、自身は漫画を書きたがっていて、ヨウさんの駄菓子屋を継ぐ気がないみたい……せっかく才能があるのだから、どうにか説得して駄菓子屋を継がせたいのだけれど……
 
そうだわ！駄菓子交換会を開催しましょう！少ないお小遣いでやりくりする子どもたちにとって、交換会は普段買わないような駄菓子を試し、また買いすぎたお菓子を処分する千載一遇のチャンス……駄菓子センスバツグンなナナツ君なら、きっとこれで少年の心を取り戻し、ヨウさんの駄菓子屋を継いでくれるはずよ！
 
-->

"
p01066,Reflection Warp Machine,"
とある宇宙では、2次元の格子点上にn個の星が存在し、宇宙人達はreflection warp machineを使い、星間を移動している。
この装置は、任意の位置、角度で直線を引くことができる。
この直線を対称軸として、現在いる座標から線対称の座標に移動することができる。
ただし、星が存在しない座標に移動することはできない。
一度引いた直線は何度でも利用できる。
現在、(x0,y0)の星にいるある宇宙人はすべての星を訪れたいと考えている。
星は好きな順番に訪れることができる。
すべての星を訪れるのに最小で何本の直線を引く必要があるか求めよ。
 

"
p01067,Circles and Ray,"
2次元平面上にそれぞれ互いに共通部分をもたない n 個の円が与えられる。
また、円にはそれぞれ1から n までの番号が割り振られている。
 
あなたは、端点が1番目の円の円周上にあるような半直線を任意の数だけ設置することができる。
どの円も1本以上の半直線との共通部分を持っているようにするためには、最低何本の半直線を設置しなければならないかを求めなさい。
 

"
p01068,Equivalent Vertices,"
会津大学付属幼稚園はプログラミングが大好きな子供が集まる幼稚園である。
園児の一人であるゆう君は,プログラミングと同じくらいお絵描きが大好きだ。 
これまでゆう君は丸と六角形と矢印で沢山絵を書いてきた。 
ある日ゆう君はこれらの絵がグラフであることを知る。
丸と六角形は頂点と呼ばれ,矢印は辺と呼ばれているらしい。
ゆう君は2つの頂点間を結ぶようにして矢印を描き、更にその上に0か1を書く。
このように,辺に重み(0または1)があり有向な辺からなるグラフは重み付き有向グラフと呼ばれる。
また,頂点と数字x(0または1)が与えられた時,その頂点から出ている矢印のうち,xと同じ重みを持つ矢印に従って別の頂点に移動することをxに従って遷移すると言う。
今日ゆう君は0と1からなるどのような数列に従って遷移しても最終的に到達する頂点の種類(丸または六角形)が一緒であるような頂点の対が存在することに気がついた。 
これについてゆう君は一つの問題を思いついた。
 

"
p01069,Sum of Sequences,"
n個の要素を持つ数列a、m個の要素を持つ数列b、
それぞれが整数cからなるq個のクエリが与えられる。



各クエリについて、
数列aの[la,ra]を全て足した数と数列bの[lb,rb]を全て足した数の差の絶対値がcになるla,ra,lb,rb (0 &le; la &le; ra &le; n&minus;1, 0 &le; lb &le; rb &le; m&minus;1, 配列の番号は0番から始まる) の組み合わせの数を求めよ。
 

"
p01070,String in String,"
文字列sとq個のクエリが与えられる。
i番目のクエリ(0 &le; i &le; q-1)には閉区間[li,ri]と文字列miが与えられる。
sのli文字目からri文字目までの部分文字列の中に文字列miはいくつ存在するか出力せよ。
 
"
p01071,Monochrome Tile,"
  白い正方形のタイルが横方向に w 個、縦方向に h 個、合計 w &times h 個敷き詰められている。
 
  太郎君は、 i 日目の朝に、左から axi 番目で上から ayi 番目のタイルを左上、
  左から bxi 番目で上から byi 番目のタイルを右下にした長方形領域に存在しているタイルがすべて白いかどうかを確認する。
  もしすべてのタイルが白かった場合、それらのタイルをすべて黒く塗りつぶす。それ以外のときは何もしない。
 
  n 日間のそれぞれの日において、その日の作業が終了した時点で黒く塗りつぶされたタイルが何枚あるかを出力せよ。
 


"
p01072,Plants,"がっちょ君は横w個&times;縦h個のマスで区切られた畑を所有している。x列目y行目のマスをマス (x, y) と呼ぶことにする。いくつかのマスの土地には高さ0cmの植物が1本だけ植えてあり、その他のマスの土地には何も植えられていない。
 
がっちょ君はある時刻に畑に肥料をまく。肥料がまかれたマスに植物が植えられているとき、その植物の高さが1cm伸びる。植物が植えられていないときは、何もおこらない。植物が伸びるのにかかる時間はとても短いので無視できる。がっちょ君は同じ時刻に複数のマスに肥料をまくことができる。ただし、同じ時刻に同じマスに2度以上肥料をまくことはない。
 
がっちょ君が肥料をまいた記録が与えられたとき、時刻t時点での畑の植物の高さの和を計算せよ。
 

"
p01073,Potatoes,"
がっちょ君はn面の畑とm個の芋を所有している。各畑にはそれぞれ1からnまでの番号が付けられている。がっちょ君は畑に芋を植え収穫することで、芋の数を増やしたいと考えている。
 
がっちょ君は一人暮らしであり、1人ではk面までの畑しか管理することができない。また、各畑の土の状態や面積は様々で、芋の収穫数や植えることのできる芋の数も様々である。芋を畑iに植えた場合、1年後には畑iに植えた芋1つにつきai個の芋を収穫することができる。ただし、畑iには最大でもbi個の芋しか植えることができない。
 
がっちょ君がk面以内の畑にm個以内の芋を植えた時、1年後に所有することができる芋の数の最大値を求めてほしい。
 

"
p01074,Unhappy Class,"
  山之御船学園の1年g組は、不幸を背負った女子生徒たちが集まるクラスである。  彼女たちは、幸福になることを目標に、日々様々な試練に立ち向かう。
   
  彼女たちのクラスでは、幸福になるための試練の一環として、幸福実技科目を受講することができる。
  月曜から金曜のそれぞれ1限からn限までに授業科目の枠があり、m個の受講可能な科目がある。
   
  科目iは、曜日di(di = 0, 1, 2, 3, 4がそれぞれ、月曜、火曜、水曜、木曜、金曜に対応する)のai限目から始まり、連続するkiコマで行われ、それを受講したときに得られる幸福度はtiである。
   
  各生徒は、最大l個の科目を互いに重ならないように自由に選ぶことができる。どのように科目を選べば、最も高い幸福度を得られるだろうか。与えられた科目の情報から、得られる幸福度の最大値を求めてほしい。
 

"
p01075,Time Path,"
n個の島とm本の橋がある。
n個の島にはそれぞれ1からnまでの番号が割り振られている。
m本の橋にもそれぞれ1からmまでの番号が割り振られている。
 
がっちょ君は現在(時刻0の時点で)、1番目の島にいる。
がっちょ君はi番目の橋を利用することにより、ai番目の島からbi番目の島へと単方向に移動することができる。
 
しかし、時刻0の時点では、すべての橋は潮が満ちていて海の中に沈んでしまっている。
i番目の橋は、時刻ciになると潮が引いて渡れるようになる。
そして、時刻ciを過ぎると、すぐにまた潮が満ちてi番目の橋は再び沈んでしまう。
再び沈んでしまうと、またいつ潮が引いて渡れるようになるかはわからない。
そこで、がっちょ君はそうなった橋は永遠に渡れなくなると考えるようにした。
 
がっちょ君は、できるだけ長い間、1からn-1番目の島の景色を眺めていたいのだが、n番目の島に船を泊めてあるので、最終的にはn番目の島に到着していなければならない。また、船の中で両親を待たせているため、がっちょ君はn番目の島についたらすぐに船で出発して家へと帰らなければならない。
 
がっちょ君が橋を渡ったり島の中を移動する時間はとても短いので、0と仮定してよい。がっちょ君が1からn-1番目のいずれかの島にいることのできる時間の最大値を求めよ。ただし、どのように移動してもがっちょ君がn番目の島へと移動できない場合は代わりに-1を出力せよ。
 


"
p01076,Graph Making,"
どの頂点とも連結でないn個の頂点がある。
各頂点間に無向辺を張っていく。
直径がdになるようにしたとき、最大何本の辺を張ることができるか求めよ。
<!--
直径とは各頂点と連結の頂点との最短距離のうち最大を表す。
-->
直径とは、2つの頂点間の最短距離のうち最大のものを表す。
ここで、最短距離は頂点間を移動するために必要な辺の数の最小値である。
多重辺、自己ループは認めない。
 

"
p01077,Curling Puzzle,"
カーリングのストーンを移動させて、ゴールのマスにストーンをぴったり重ねるパズルゲームがある。詳しいルールは次のとおりである。
 
フィールドはh&times;wのマスからなり、はじめにいくつかのマスにストーンが置かれている。
ゴールのマスは1つだけ存在して、はじめからゴールのマスにストーンが置かれていることはない。
また、フィールドは外壁で囲まれており、途中でストーンがフィールドの外へ飛び出してしまうことはない。
 
プレイヤーは1手ごとにストーンを1つ選び、上下左右のいずれかの方向に打ち出して滑らせることができる。
滑っているストーンは別のストーンかフィールドの外壁にぶつかるまで滑り続ける。別のストーンにぶつかった場合は、
ぶつけられた側のストーンが反動を受け、最初に打ち出した方向と同じ方向へ連鎖的に滑り出してしまう。
 例えば、図1の状態でストーンaを右方向に打ち出した場合、最終的に図2のような状態になる。 
このパズルのクリア条件は、フィールドに存在するストーンのいずれか1つをゴールのマスにぴったり重ねることである。ゴールのマスを通り過ぎた場合にはクリアにならない。
 
あなたの仕事はフィールドの初期状態を入力として受け取り、そのパズルがクリア可能かどうかを出力するプログラムを作成することである。
 
"
p01078,Star,"
半径1の円に内接する正n/k角形の面積を求めよ。
 
  ただし、正n/k角形を
「円周上に等間隔にn個の点を取り、
    k-1個おきにそれぞれの点を結んだ一番外側の図形」
と定義する。
 
例えば、5/2角形は次のように描くことができる。
まず、半径1の円周上に等間隔に5つの点を取る。

 
次に、それぞれの点を2-1=1つおきに結ぶ。

 
一番外側の図形が正5/2角形になる。

 

"
p01079,Hogemon Get,"
がっちょ君は人気のゲームhogemon getに熱中している。がっちょ君が住んでいる会津国はそれぞれ1からnの番号がついているn個の町からなる。また、会津国にはm本の道があり、すべての道は異なる2つの町を結んでいる。がっちょ君は道を双方向に移動することができるが、道以外を通って、ある町から別の町に行くことはできない。 
hogemon getでは、町iでボールをdi個入手することができる。ただし、ある町で再びボールを入手するためには、最後にその町でボールを入手してから15分以上経過している必要がある。なお、がっちょ君は町1、町nを含むすべての町を何度でも訪れることができる。
 
がっちょ君は最初、町1にいて、町nにr分以内で移動しなければならない。つまり、r分後に町nにいる必要がある。がっちょ君は移動の際に、最大でいくつのボールを入手することができるだろうか。
 

"
p01080,Traffic Tree,"
  それぞれ1からnまでの番号が付いたn個の頂点が、n-1本の無向辺によって繋がれたグラフが与えられる。各頂点について、その頂点からスタートしてすべての頂点を訪れるための最短のステップ数を出力せよ。
 
  ただし、ある頂点から1本の辺をたどって別の頂点に移動することを1ステップとする。
 


"
p01081,Char Swap,"
  長さが偶数の文字列sが与えられる。
  あなたは、文字列sの隣り合った2つの文字を入れ替える操作を何回でも行うことができる。
  文字列sを回文にするためには、最小で何回の操作を行う必要があるだろうか?
  回文にすることが不可能な場合は-1を出力せよ。
 

"
p01082,Escape of Lappin the Phantom Thief,"
怪盗ラッパンは宝石を盗みにやってきた。簡単に宝石を手にすることができたが、宝石にはセンサーが仕込まれており、警備ロボットに囲まれてしまった。
 
警備ロボットは宝石に向かって移動するように仕組まれている。センサーは簡単に外せそうになかったので、宝石を置いて逃走することにした。宝石をできるだけ警備ロボットから遠くに置いて、逃げるための時間稼ぎをすることにした。
 
敷地はn &times; mのマスからなる長方形の形をしていて、障害物はない。
k体の警備ロボットは、それぞれマス(xi, yi)(0 &le; xi &le; n&minus;1, 0 &le; yi &le; m&minus;1)に配置されており、上下左右のマスに単位時間で移動できる。
警備ロボットは宝石があるマスに最短経路で移動する。
 
敷地内に自由に宝石を置けるとき、1台以上の警備ロボットが宝石のあるマスに到達するまでにかかる移動時間の最大値を求めよ。
 

"
p01083,RedBlue,"
天空都市aizuのuzia高校では、競技プログラミングの部活動がとても盛んである。
この部活には、n人のred coderとn人のblue coderが所属している。
 
ある日の部活の時間に、red coderとblue coderでペアを組み、この部活からn組、kcpというコンテストに参加することとなった。この高校では、ペアを組む学生同士は握手するという習わしがあるので、部員たちは今すぐ自分のパートナーを見つけることにした。
 
部員たちは全速力で走るため、まっすぐにしか進めない。また、部員たちは、それぞれの部員が移動する距離の総和をできるだけ小さくしたいと思っている。
 
なお、部室には2つの円形のテーブルが置いてある。
 

"
p01084,Dial,"
ダイヤル式の南京錠がある。この南京錠には、5つのダイヤルと、決定ボタンが用意されている。
 
5つあるダイヤルを回転させて16進数で5ケタの整数を作り、決定ボタンを押して入力すると、入力した値とパスワードが一致していれば開く仕組みになっている。5つのダイヤルそれぞれには
 0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f,0,1,2, ...
の順で文字が現れるように書かれている。
 
持ち主はパスワードを忘れてしまった。しかし、パスワードの5ケタのうち、1つのケタだけが偶数で残り4つは奇数であったことは覚えている。
ただし、偶数とは0,2,4,6,8,a,c,eであり、奇数とは1,3,5,7,9,b,d,fである。
 
またこの鍵は不良品で、以下の条件でパスワードと異なる数字を入力しても開いてしまうことが分かっている。本来、入力した整数とパスワードが5つのケタすべてについて一致していなければ鍵は開かない。しかし、パスワードの偶数となっているケタがiケタ目だった場合、iケタ目の一致判定を行うとき、その偶数の前後にある奇数が入力されていた場合でもiケタ目は一致していると誤判定されてしまうのだ。
 
例えば、パスワードが""57677""の南京錠ならば、'6'の前後には'5'と'7'の奇数があるため""57677""のほかに、""57577""や""57777""を入力したときでも開いてしまう。
同様に、パスワードが""130bd""の南京錠ならば、'0'の前後には'1'と'f'の奇数があるため""130bd""のほかに、""13fbd""や""131bd""を入力したときでも開いてしまう。
 
今、パスワードの候補がn個あり、それらのうちどれか1つが正解のパスワードであることが分かっている。しかたがないので持ち主は、鍵が開くまで何度も整数を入力して試し続けることにした。持ち主はできるだけ決定ボタンを押す回数を少なくしたい。
 
持ち主が最適な戦略をとったとき、最大で何回決定ボタンを押さなければならないだろうか? 
その回数を出力せよ。
また、実際に最大となるときに入力する整数の集合を昇順に出力せよ。
答えが一意に定まらない場合は、辞書順で最小となるものを出力せよ。
 

"
p01085,Entrance Examination,"
the international competitive programming college (icpc) is famous
for its research on competitive programming.
applicants to the college are required to take its entrance examination.
 
the successful applicants of the examination are chosen as follows.
 the score of any successful applicant is higher than that of any unsuccessful applicant. the number of successful applicants n must be between nmin and nmax, inclusive.
we choose n within the specified range that maximizes the gap.
here, the gap means the difference between the lowest score of
successful applicants and the highest score of unsuccessful applicants.
  when two or more candidates for n make exactly the same gap,
use the greatest n among them. 
let's see the first couple of examples given in sample input below.
in the first example, nmin and nmax are two and four, respectively, and there are five applicants whose scores are 100, 90, 82, 70, and 65.
for n of two, three and four, the gaps will be 8, 12, and 5, respectively.
we must choose three as n, because it maximizes the gap.
 
in the second example, nmin and nmax are two and four, respectively, and there are five applicants whose scores are 100, 90, 80, 75, and 65.
for n of two, three and four, the gap will be 10, 5, and 10, 
respectively. both two and four maximize the gap, and we must choose the
 greatest number, four.
 
you are requested to write a program that computes the number of successful applicants that satisfies the conditions.
 

"
p01086,Short Phrase,"
a short phrase (aka. tanku) is a fixed verse, inspired by japanese poetry tanka and haiku.
it is a sequence of words, each consisting of lowercase letters 'a' to 'z', and must satisfy the following condition:
 
the following is an example of a short phrase.
 
in this example, the sequence of the nine words can be divided into five
 sections (1) ""do"" and ""the"", (2) ""best"" and ""and"", (3) ""enjoy"", (4) 
""today"" and ""at"", and (5) ""acm"" and ""icpc"" such that they have 5, 7, 5, 
7, and 7 letters in this order, respectively.
this surely satisfies the condition of a short phrase.
 
now, short phrase parnassus published by your company has 
received a lot of contributions.
by an unfortunate accident, however, some irrelevant texts seem to be 
added at beginnings and ends of contributed short phrases.
your mission is to write a program that finds the short phrase from a 
sequence of words that may have an irrelevant prefix and/or a suffix.
 


"
p01087,ICPC Calculator,"
in mathematics, we usually specify the order of operations by using
parentheses.
for example, 7 × (3 + 2) always means multiplying 7 by the result of 3 + 2 and never means adding 2 to the result of 7 × 3.

however, there are people who do not like parentheses.
international counter of parentheses council (icpc) is attempting
to make a notation without parentheses the world standard.
they are always making studies of such no-parentheses notations.
 
dr. tsukuba, a member of icpc, invented a new parenthesis-free notation.
in his notation, a single expression is represented by multiple
lines, each of which contains an addition operator (+), a
multiplication operator (*) or an integer.
an expression is either a single integer or an operator application to operands.
integers are denoted in decimal notation in one line.
an operator application is denoted by a line of its operator immediately
followed by lines denoting its two or more operands,
each of which is an expression, recursively.
note that when an operand is an operator application,
it comprises multiple lines.
 
as expressions may be arbitrarily nested,
we have to make it clear which operator is applied to which operands.
for that purpose, each of the expressions is given its nesting level.
the top level expression has the nesting level of 0.
when an expression of level n is an operator application,
its operands are expressions of level n + 1.
the first line of an expression starts with a sequence of periods (.),
the number of which indicates the level of the expression.
 
for example, 2 + 3 in the regular mathematics is denoted as in figure 1.
an operator can be applied to two or more operands.
operators + and * represent operations
of summation of all operands and multiplication of all operands,
respectively.  for example, figure 2 shows an expression multiplying
2, 3, and 4.
for a more complicated example, an expression (2 + 3 + 4) × 5 in
the regular mathematics can be expressed as in figure 3 while (2 + 3) × 4 × 5
can be expressed as in figure 4.
 
  your job is to write a program that computes the value of expressions
  written in dr. tsukuba's notation to help him.
 



"
p01088,yen Saving,"
""500-yen saving"" is one of japanese famous methods to save money. the
method is quite simple; whenever you receive a 500-yen coin in your
change of shopping, put the coin to your 500-yen saving box.
typically, you will find more than one million yen in your saving box
in ten years.

 
some japanese people are addicted to the 500-yen saving. they try
their best to collect 500-yen coins efficiently by using 1000-yen bills
and some coins effectively in their purchasing. for example, you will give
1320 yen (one 1000-yen bill, three 100-yen coins and two 10-yen coins)
to pay 817 yen, to receive one 500-yen coin (and three 1-yen coins)
in the change.
 
a friend of yours is one of these 500-yen saving addicts.  he is
planning a sightseeing trip and wants to visit a number of souvenir
shops along his way.  he will visit souvenir shops one by one
according to the trip plan. every souvenir shop sells only one kind of
souvenir goods, and he has the complete list of their prices.  he
wants to collect as many 500-yen coins as possible through buying
at most one souvenir from a shop.  on his departure,
he will start with sufficiently many 1000-yen bills and no coins at
all.  the order of shops to visit cannot be changed.  as far as he can
collect the same number of 500-yen coins, he wants to cut his expenses
as much as possible.
 
let's say that he is visiting shops with their souvenir prices of 800
yen, 700 yen, 1600 yen, and 600 yen, in this order.  he can collect at
most two 500-yen coins spending 2900 yen, the least expenses to collect
two 500-yen coins, in this case.  after skipping the first shop, the
way of spending 700-yen at the second shop is by handing over a
1000-yen bill and receiving three 100-yen coins.  in the next shop,
handing over one of these 100-yen coins and two 1000-yen bills for
buying a 1600-yen souvenir will make him receive one 500-yen coin. in
almost the same way, he can obtain another 500-yen coin at the last
shop.  he can also collect two 500-yen coins buying at the first shop,
but his total expenditure will be at least 3000 yen because he needs
to buy both the 1600-yen and 600-yen souvenirs in this case.
 
you are asked to make a program to help his collecting 500-yen coins
during the trip.  receiving souvenirs' prices listed in the order
of visiting the shops, your program is to find the maximum number of
500-yen coins that he can collect during his trip, and the minimum
expenses needed for that number of 500-yen coins.
 
for shopping, he can use an arbitrary number of 1-yen, 5-yen, 10-yen,
50-yen, and 100-yen coins he has, and arbitrarily many 1000-yen bills.
the shop always returns the exact change, i.e., the difference between
the amount he hands over and the price of the souvenir.  the shop has
sufficient stock of coins and the change is always composed of the
smallest possible number of 1-yen, 5-yen, 10-yen, 50-yen, 100-yen, and
500-yen coins and 1000-yen bills.  he may use more money than the
price of the souvenir, even if he can put the exact money, to obtain
desired coins as change; buying a souvenir of 1000 yen, he can hand
over one 1000-yen bill and five 100-yen coins and receive a 500-yen
coin.  note that using too many coins does no good; handing over ten
100-yen coins and a 1000-yen bill for a souvenir of 1000 yen, he will
receive a 1000-yen bill as the change, not two 500-yen coins.
 


"
p01089,Deadlock Detection,"
in concurrent processing environments, a deadlock is an undesirable
situation where two or more threads are mutually waiting for others to
finish using some resources and cannot proceed further.

your task is to detect whether there is any possibility of deadlocks
when multiple threads try to execute a given instruction sequence concurrently.
 
the instruction sequence consists of characters 'u' or digits from
'0' to '9', and each of them represents one instruction.
10 threads are trying to execute the same single instruction sequence.
each thread starts its execution from the beginning of the sequence and
continues in the given order, until all the instructions are
executed.
 
there are 10 shared resources called locks from l0 to l9.
a digit k is the instruction for acquiring the lock lk.
after one of the threads acquires a lock lk,
it is kept by the thread until it is released by the instruction 'u'.
while a lock is kept, none of the threads, including one already acquired it,
cannot newly acquire the same lock lk.
 
precisely speaking, the following steps are repeated until all threads
finish.
 one thread that has not finished yet is chosen arbitrarily. the chosen thread tries to execute the next instruction that is not executed yet. if the next instruction is a digit k and
		the lock lk is not kept by any thread,
		the thread executes the instruction k and acquires lk. if the next instruction is a digit k and
		the lock lk is already kept by some thread,
		the instruction k is not executed. if the next instruction is 'u',
		the instruction is executed and all the locks currently kept by the thread
		are released. 
after executing several steps, sometimes, it falls into the situation 
that the next instructions
of all unfinished threads are for acquiring already kept locks.
once such a situation happens, no instruction will ever be executed no 
matter which thread is chosen. this situation is called a deadlock.
 
there are instruction sequences for which threads can never reach a
deadlock regardless of the execution order.
such instruction sequences are called safe.
otherwise, in other words, if there exists one or more execution orders
that lead to a deadlock, the execution sequence is called unsafe.

your task is to write a program that tells whether the given instruction sequence is safe or unsafe.
 


"
p01090,Bridge Construction Planning,"
there is a city consisting of many small islands, and the citizens live in these islands.
citizens feel inconvenience in requiring ferry rides between these islands.
the city mayor decided to build bridges connecting all the islands.
 
the city has two construction companies, a and b.
the mayor requested these companies for proposals, and obtained proposals in the form:
""company a (or b) can build a bridge between islands u and v in w hundred million yen.""
 
the mayor wants to accept some of these proposals to make a plan with the lowest budget.
however, if the mayor accepts too many proposals of one company,
the other may go bankrupt, which is not desirable for the city with only two construction companies.
however, on the other hand, to avoid criticism on wasteful construction,
the mayor can only accept the minimum number (i.e., n &#8722; 1) of bridges for connecting all the islands.
thus, the mayor made a decision that exactly k proposals by the company a
and exactly n &#8722; 1 &#8722; k proposals by the company b should be accepted.
 
your task is to write a program that computes the cost of the plan with the lowest budget that satisfies the constraints.
here, the cost of a plan means the sum of all the costs mentioned in the accepted proposals.
 

"
p01091,Complex Paper Folding,"
dr. g, an authority in paper folding and one of the directors of
intercultural consortium on paper crafts,
believes complexity gives figures beauty.
as one of his assistants, your job is to find the way to fold a paper
to obtain the most complex figure.
dr. g defines the complexity of a figure by the number of vertices.
with the same number of vertices, one with longer perimeter is more
complex.
to simplify the problem, we consider papers with convex polygon in
their shapes and folding them only once.
each paper should be folded so that one of its vertices exactly lies
on top of another vertex.
 
write a program that, for each given convex polygon, outputs the
perimeter of the most complex polygon obtained by folding it once.
 
figure 1 (left) illustrates the polygon given in the first dataset of
sample input. this happens to be a rectangle.

folding this rectangle can yield three different polygons illustrated in the figures 1-a to c by solid
lines.
for this dataset, you should answer the perimeter of the pentagon
shown in figure 1-a.  though the rectangle in figure 1-b has longer
perimeter, the number of vertices takes priority.
 
figure 2 (left) illustrates the polygon given in the second
dataset of sample input, which is a triangle.  whichever pair of its vertices are
chosen, quadrangles are obtained as shown in figures 2-a to c.  among
these, you should answer the longest perimeter, which is that of the
quadrangle shown in figure 2-a.
 
although we start with a convex polygon, folding it may result a
concave polygon.
figure 3 (left) illustrates the polygon given in the third dataset in sample input.
a concave hexagon shown in figure 3 (right) can be obtained
by folding it, which has the largest number of vertices.
 
figure 4 (left) illustrates the polygon given in the fifth dataset in 
sample
input.
although the perimeter of the polygon in figure 4-b is longer than that 
of the polygon in figure 4-a, because the polygon in figure 4-b is a 
quadrangle, the answer should be the perimeter of the pentagon in figure
 4-a.
 





    
    

    (a)
    (b)



figure 4: the case of the fifth sample input



"
p01092,Development of Small Flying Robots,"
you are developing small flying robots in your laboratory.
 
the laboratory is a box-shaped building with k levels, each numbered 1 through k from bottom to top.
the floors of all levels are square-shaped with their edges precisely aligned east-west and north-south.
each floor is divided into r × r cells.
we denote the cell on the z-th level in the x-th column from the west and the y-th row from the south as (x, y, z).
(here, x and y are one-based.)
for each x, y, and z (z &gt; 1),
the cell (x, y, z) is located immediately above the cell (x, y, z &#8722; 1).
 
there are n robots flying in the laboratory,
each numbered from 1 through n.
initially, the i-th robot is located at the cell (xi, yi, zi).
 
by your effort so far,
you successfully implemented the feature to move each flying robot to any place that you planned.
as the next step, you want to implement a new feature that gathers all
the robots in some single cell with the lowest energy consumption,
based on their current locations and the surrounding environment.
 
floors of the level two and above have several holes.
holes are rectangular and their edges align with edges of the
cells on the floors.
there are m holes in the laboratory building, each numbered 1 through m.
the j-th hole can be described by five integers
u1j, v1j, u2j, v2j, and wj.
the j-th hole extends over the cells (x, y, wj)
where
    u1j &#8804; x &#8804; u2j and
    v1j &#8804; y &#8804; v2j.
 
possible movements of robots and energy consumption involved are as follows.
 you can move a robot from one cell to an adjacent cell, toward one of north, south, east, or west.
  the robot consumes its energy by 1 for this move.  if there is a hole to go through immediately above,
  you can move the robot upward by a single level.
  the robot consumes its energy by 100 for this move. 
the robots never fall down even if there is a hole below.
note that you can move two or more robots to the same cell.
 
now, you want to gather all the flying robots at a single cell in the
k-th level where there is no hole on the floor, with the least energy consumption.
compute and output the minimum total energy required by the robots.
 


"
p01093,Selection of Participants of an Experiment,"
dr. tsukuba has devised a new method of programming training.
in order to evaluate the effectiveness of this method,
he plans to carry out a control experiment.
having two students as the participants of the experiment,
one of them will be trained under the conventional method
and the other under his new method.
comparing the final scores of these two,
he will be able to judge the effectiveness of his method.
 
it is important to select two students having the closest possible scores,
for making the comparison fair.
he has a list of the scores of all students
who can participate in the experiment.
you are asked to write a program which selects two of them
having the smallest difference in their scores.
 


"
p01094,Look for the Winner!,"
the citizens of tkb city are famous for their deep love in elections and vote counting.
today they hold an election for the next chairperson of the electoral commission.
now the voting has just been closed and the counting is going to start.
the tkb citizens have strong desire to know the winner as early as possible during vote counting.
 
the election candidate receiving the most votes shall be the next chairperson.
suppose for instance that we have three candidates a, b, and c and ten votes.
suppose also that we have already counted six of the ten votes and the vote counts of a, b, and c are four, one, and one, respectively.
at this moment, every candidate has a chance to receive four more votes and so everyone can still be the winner.
however, if the next vote counted is cast for a, a is ensured to be the winner since a already has five votes and b or c can have at most four votes at the end.
in this example, therefore, the tkb citizens can know the winner just when the seventh vote is counted. 
 
your mission is to write a program that receives every vote counted, one by one, identifies the winner, and determines when the winner gets ensured.
 



"
p01095,Bamboo Blossoms,"
  the bamboos live for decades, and at the end of their lives,
  they flower to make their seeds.  dr. acm, a biologist, was fascinated
  by the bamboos in blossom in his travel to tsukuba.  he liked
  the flower so much that he was tempted to make a garden where
  the bamboos bloom annually.  dr. acm started research of
  improving breed of the bamboos, and finally, he established
  a method to develop bamboo breeds with controlled lifetimes.
  with this method, he can develop bamboo breeds that flower
  after arbitrarily specified years.
 
  let us call bamboos that flower k years after sowing
  ""k-year-bamboos.""
  k years after being sowed, k-year-bamboos make
  their seeds and then die,
  hence their next generation flowers after another k years.
  in this way, if he sows seeds of k-year-bamboos, he can
  see bamboo blossoms every k years.  for example,
  assuming that he sows seeds of 15-year-bamboos,
  he can see bamboo blossoms every 15 years;
  15 years, 30 years, 45 years, and so on, after sowing.
 
  dr. acm asked you for designing his garden.  his garden is partitioned
  into blocks, in each of which only a single breed of bamboo can grow.
  dr. acm requested you to decide which breeds of bamboos
  should he sow in the blocks in order to see bamboo blossoms
  in at least one block for as many years as possible.
 
  you immediately suggested to sow seeds of one-year-bamboos in all blocks.
  dr. acm, however, said that it was difficult to develop a bamboo breed
  with short lifetime, and would like a plan using only those breeds with
  long lifetimes.  he also said that, although he could wait for some years
  until he would see the first bloom, he would like to see it in
  every following year.
  then, you suggested a plan
  to sow seeds of 10-year-bamboos, for example, in different blocks each year,
  that is, to sow in a block this year and in another block next year, and so on,
  for 10 years.  following this plan, he could see
  bamboo blossoms in one block every year except for the first 10 years.
  dr. acm objected again saying he had determined to sow in all
  blocks this year.
 dr. acm should sow the seeds in all the blocks only this year.
  
 

"
p01096,Daruma Otoshi,"
you are playing a variant of a game called ""daruma otoshi (dharma block striking)"".
 
at the start of a game, several wooden blocks of the same size but with varying weights
are stacked on top of each other, forming a tower.
another block symbolizing dharma is placed atop.
you have a wooden hammer with its head thicker than the height of a block,
but not twice that.
 
you can choose any two adjacent blocks, except dharma on the top,
differing at most 1 in their weight,
and push both of them out of the stack with a single blow of your hammer.
the blocks above the removed ones then fall straight down,
without collapsing the tower.

you cannot hit a block pair with weight difference of 2 or more,
for that makes too hard to push out blocks while keeping the balance of the tower.
there is no chance in hitting three blocks out at a time,
for that would require superhuman accuracy.
 
the goal of the game is to remove as many blocks as you can.
your task is to decide the number of blocks that can be removed
by repeating the blows in an optimal order.
 
figure d1. striking out two blocks at a time
 
in the above figure, with a stack of four blocks weighing 1, 2, 3, and
1, in this order from the bottom, you can hit middle
two blocks, weighing 2 and 3, out from the stack.  the blocks above will
then fall down, and two blocks weighing 1 and the dharma block will remain.
you can then push out the remaining pair of weight-1 blocks after that.
 



"
p01097,3D Printing,"
we are designing an installation art piece consisting of 
a number of cubes with 3d printing technology for submitting one to
installation art contest with printed cubes (icpc).
at this time, we are trying to model a piece consisting of exactly k cubes 
of the same size facing the same direction.
 two non-overlapping cubes do not touch at their surfaces, edges or corners.

 
second, choosing appropriate k different positions from n candidates
and placing cubes there, 
we obtain a connected polyhedron as a union of the k cubes. 

when we use a 3d printer,
we usually print only the thin surface of a 3d object.

in order to save the amount of filament material for the 3d printer, 
we want to find the polyhedron with the minimal surface area.
 
your job is to find the polyhedron with the minimal surface area
consisting of k connected
cubes placed at k selected positions among n given ones. 
 
figure e1. a polyhedron formed with connected identical cubes.
 




"
p01098,Deciphering Characters,"
image data which are left by a mysterious syndicate were discovered. 
you are requested to analyze the data.
the syndicate members used characters invented independently. 
a binary image corresponds to one character written in black ink on white paper.
  white connected component : a set of white pixels connected to each other horizontally or vertically (see below).  black connected component : a set of black pixels connected to each other horizontally, vertically, or diagonally (see below).  connected component : a white or a black connected component.  background component : the connected component including pixels outside of the image. any white pixels on the periphery of the image are thus included in the background component. 

 











connected
disconnected
connected
connected


connectedness of white pixels &nbsp;&nbsp;&nbsp;&nbsp;
connectedness of black pixels




 
let c1 be a connected component in an image and c2 be another connected component in the same image with the opposite color.
let's think of a modified image in which colors of all pixels not included in c1 nor c2 are changed to that of c2. if neither c1 nor c2 is the background component, the color of the background component is changed to that of c2. we say that c1 surrounds c2 in the original image when pixels in c2 are not included in the background component in the modified image. (see below)
 




  the two images have the same number of connected components.  let  s and s' be the sets of connected components of the two images.   a bijective function f  :  s &rarr; s' satisfying the following conditions exists.  for each connected component c that belongs to s, f (c) has the same color as c.   for each of c1 and c2 belonging to s, f (c1) surrounds f (c2) if and only if c1 surrounds c2. 


  c1 surrounds c2.  c2 surrounds c3.  c2 surrounds c4.  c'1 surrounds c'2.  c'2 surrounds c'3.  c'2 surrounds c'4. 

a bijective function defined as f (ci) = c'i for each connected component satisfies the conditions stated above.  therefore, we can conclude that the two images represent the same character.
 









 
make a program judging whether given two images represent the same character.
 


"
p01099,Warp Drive,"
the warp drive technology is reforming air travel, making the travel times drastically shorter.
aircraft reaching above the warp fields built on the ground surface can be transferred to any desired destination in a twinkling.
 
with the current immature technology, however, building warp fields is quite expensive.
our budget allows building only two of them.
fortunately, the cost does not depend on the locations of the warp fields,
and we can build them anywhere on the ground surface, even at an airport.
 
your task is, given locations of airports and a list of one way flights among them, find the best locations to build the two warp fields that give the minimal average cost.
the average cost is the root mean square of travel times of all the flights, defined as follows.
 
here, m is the number of flights and tj is the shortest possible travel time of the j-th flight.
note that the value of tj depends on the locations of the warp fields.
 
for simplicity, we approximate the surface of the ground by a flat two dimensional plane, and approximate airports, aircraft, and warp fields by points on the plane.
different flights use different aircraft with possibly different cruising speeds.
times required for climb, acceleration, deceleration and descent are negligible.
further, when an aircraft reaches above a warp field, time required after that to its destination is zero.
as is explained below, the airports have integral coordinates. note, however, that the warp fields can have non-integer coordinates.
 

"
p01100,Gift Exchange Party,"
a gift exchange party will be held at a school in tkb city.
 
for every pair of students who are close friends, one gift must be given from one to the other at this party, but not the other way around.
it is decided in advance the gift directions, that is, which student of each pair receives a gift.
no other gift exchanges are made.
 
if each pair randomly decided the gift direction,
some might receive countless gifts, while some might receive only few or even none.
 
you'd like to decide the gift directions for all the friend pairs
that minimize the difference between the smallest and the largest numbers of gifts received by a student.
find the smallest and the largest numbers of gifts received
when the difference between them is minimized.
when there is more than one way to realize that, 
find the way that maximizes the smallest number of received gifts.
 

"
p01101,Taro's Shopping,"
mammy decided to give taro his first shopping experience.
mammy tells him to choose any two items he wants from those
listed in the shopping catalogue,
but taro cannot decide which two, as all the items look attractive.
thus he plans to buy the pair of two items with
the highest price sum, not exceeding the amount mammy allows.
as getting two of the same item is boring, he wants two different items.
 
you are asked to help taro select the two items.
the price list for all of the items is given.
among pairs of two items in the list,
find the pair with the highest price sum
not exceeding the allowed amount,
and report the sum.
taro is buying two items, not one, nor three, nor more.
note that, two or more items in the list may be priced equally.
 


"
p01102,Almost Identical Programs,"
the programming contest named
concours de programmation comtemporaine interuniversitaire (cpci)
has a judging system similar to that of icpc;
contestants have to submit correct outputs for two different inputs
to be accepted as a correct solution.

each of the submissions should include the program that generated
the output.  a pair of submissions is judged to be a correct
solution when, in addition to the correctness of the outputs, they
include an identical program.
 
many contestants, however, do not stop including a different version
of their programs in their second submissions, after modifying a
single string literal in their programs representing 
the input file name, attempting to process different input.

the organizers of cpci are exploring the possibility of showing a
special error message for such close submissions, 
indicating contestants what's wrong with such submissions.

your task is to detect such close submissions.
 


"
p01103,A Garden with Ponds,"
  mr. gardiner is a modern garden designer who is excellent at utilizing the terrain features.
  his design method is unique: he first decides the location of ponds and design them with the terrain features intact.
 
  according to his unique design procedure, all of his ponds are rectangular with simple aspect ratios.
  first, mr. gardiner draws a regular grid on the map of the garden site so that the land is divided into cells of unit square, and annotates every cell with its elevation.
  in his design method, a pond occupies a rectangular area consisting of a number of cells.
  each of its outermost cells has to be higher than all of its inner cells.
  for instance, in the following grid map, in which numbers are elevations of cells, a pond can occupy the shaded area, where the outermost cells are shaded darker and the inner cells are shaded lighter.
  you can easily see that the elevations of the outermost cells are at least three and those of the inner ones are at most two.
 
  a rectangular area on which a pond is built must have at least one inner cell.
  therefore, both its width and depth are at least three.
 
  when you pour water at an inner cell of a pond, the water can be kept in the pond until its level reaches that of the lowest outermost cells.
  if you continue pouring, the water inevitably spills over.  
  mr. gardiner considers the larger capacity the pond has, the better it is.
  here, the capacity of a pond is the maximum amount of water it can keep.
  for instance, when a pond is built on the shaded area in the above map, its capacity is (3 &#8722; 1) + (3 &#8722; 0) + (3 &#8722; 2) = 6, where 3 is the lowest elevation of the outermost cells and 1, 0, 2 are the elevations of the inner cells.
  your mission is to write a computer program that, given a grid map describing the elevation of each unit square cell, calculates the largest possible capacity of a pond built in the site.
 
  note that neither of the following rectangular areas can be a pond.
  in the left one, the cell at the bottom right corner is not higher than the inner cell.
  in the right one, the central cell is as high as the outermost cells.
 



  




"
p01104,Making Lunch Boxes,"
taro has been hooked on making lunch boxes recently.
taro has obtained a new lunch box recipe book today, and wants to try as many of the recipes listed in the book as possible.
 
enough of the ingredients for all the recipes are at hand, but they all are in vacuum packs of two.
if only one of them is used leaving the other, the leftover will be rotten easily, but making two of the same recipe is not interesting.
thus he decided to make a set of lunch boxes, each with different recipe, that wouldn't leave any unused ingredients.
 
note that the book may include recipes for different lunch boxes made of the same set of ingredients.
 
how many lunch box recipes can taro try today at most following his dogma?
 


"
p01105,Boolean Expression Compressor,"
you are asked to build a compressor for boolean expressions
that transforms expressions to the shortest form keeping their meaning. 
 
the grammar of the boolean expressions has terminals 
0&nbsp;1&nbsp;a&nbsp;b&nbsp;c&nbsp;d&nbsp;-&nbsp;^&nbsp;*&nbsp;(&nbsp;), start symbol &lt;e&gt; and the following production rule: 
 
letters a, b, c and d represent boolean
variables that have values of either  0 or 1.
operators are evaluated as shown in the table below.
in other words, - means negation (not),
^ means exclusive disjunction (xor), and 
* means logical conjunction (and). 
 
write a program that calculates the length of the shortest expression that
evaluates equal to the given expression with whatever values of the four variables.
 
for example, 0, that is the first expression in the sample input,
cannot be shortened further.
therefore the shortest length for this expression is 1.
 
for another example, (a*(1*b)), the second in the sample input,
always evaluates equal to (a*b) and (b*a),
which are the shortest.   the output for this expression, thus, should be 5. 
 


"
p01106,Folding a Ribbon,"
  think of repetitively folding a very long and thin ribbon.  first,
  the ribbon is spread out from left to right, then it is creased at
  its center, and one half of the ribbon is laid over the other.  you
  can either fold it from the left to the right, picking up the left
  end of the ribbon and laying it over the right end, or from the
  right to the left, doing the same in the reverse direction.  to fold
  the already folded ribbon, the whole layers of the ribbon are
  treated as one thicker ribbon, again from the left to the right or
  the reverse.
 
  after folding the ribbon a number of times, one of the layers of the
  ribbon is marked, and then the ribbon is completely unfolded
  restoring the original state.  many creases remain on the
  unfolded ribbon, and one certain part of the ribbon between two
  creases or a ribbon end should be found marked.  knowing which
  layer is marked and the position of the marked part when the ribbon
  is spread out, can you tell all the directions of the repeated
  folding, from the left or from the right?
 
  the figure below depicts the case of the first dataset of the sample input.
    


"
p01107,Go around the Labyrinth,"
explorer taro got a floor plan of a labyrinth.
the floor of this labyrinth is in the form of a two-dimensional grid.
each of the cells on the floor plan corresponds to a room and is indicated whether it can be entered or not.
the labyrinth has only one entrance located at the northwest corner, which is upper left on the floor plan.
there is a treasure chest in each of the rooms at other three corners, southwest, southeast, and northeast.
to get a treasure chest, taro must move onto the room where the treasure chest is placed.
 
taro starts from the entrance room and repeats moving to one of the enterable adjacent rooms in the four directions, north, south, east, or west.
he wants to collect all the three treasure chests and come back to the entrance room.
a bad news for taro is that, the labyrinth is quite dilapidated and even for its enterable rooms except for the entrance room, floors are so fragile that, once passed over, it will collapse and the room becomes not enterable.
determine whether it is possible to collect all the treasure chests and return to the entrance.
 


"
p01108,Equivalent Deformation,"
two triangles t1 and t2 with the same area are on a plane.
your task is to perform the following operation to t1 several times so that it is exactly superposed on t2.
here, vertices of t1 can be on any of the vertices of t2.
compute the minimum number of operations required to superpose t1 on t2.
 
(operation): choose one vertex of the triangle and move it to an arbitrary point on a line passing through the vertex and parallel to the opposite side.
 
the following figure shows a possible sequence of the operations for the first dataset of the sample input.
 






"
p01109,Income Inequality,"
we often compute the average as the first step
in processing statistical data.
yes, the average is a good tendency measure of data,
but it is not always the best.
in some cases, the average may hinder the understanding
of the data.
 
for example, consider the national income of a country.
as the term income inequality suggests,
a small number of people earn a good portion of the gross national income
in many countries.
in such cases, the average income computes much higher than the
income of the vast majority.
it is not appropriate to regard the average as the income of typical people.
 
let us observe the above-mentioned phenomenon in some concrete data.
incomes of n people, a1, ... ,
an, are given.
you are asked to write a program that reports the number of people
whose incomes are less than or equal to the average
(a1 + ... + an) / n.
 





"
p01110,Origami,"
master grus is a famous origami (paper folding) artist, who is
enthusiastic about exploring the possibility of origami art.
for future creation, he is now planning fundamental
experiments to establish the general theory of origami.
 
one rectangular piece of paper is used in each of his experiments.
he folds it horizontally and/or vertically several times and then
punches through holes in the folded paper.
 
the following figure illustrates the folding process of a simple experiment,
which corresponds to the third dataset of the sample input below.
folding the 10 &times; 8 rectangular piece of paper shown at top left
three times results in the 6 &times; 6 square shape shown at
bottom left.
in the figure, dashed lines indicate the locations to fold the paper
and round arrows indicate the directions of folding.
grid lines are shown as solid lines to tell the sizes of rectangular
shapes and the exact locations of folding.
color densities represent the numbers of overlapping layers.
punching through holes at a and b in the folded paper makes
nine holes in the paper, eight at a and another at b.
 
    
   
your mission in this problem is to write a computer program to count
the number of holes in the paper, given the information on a rectangular
piece of paper and folding and punching instructions.
 




"
p01111,Skyscraper MinatoHarukas,"
mr.&nbsp;port plans to start a new business renting one or more floors
of the new skyscraper with one giga floors, minatoharukas.
 
he wants to rent as many vertically adjacent floors as possible, 
because he wants to show advertisement on as many vertically
adjacent windows as possible.

the rent for one floor is proportional to the floor number,
that is, the rent per month for the n-th floor is n times
that of the first floor.
here, the ground floor is called the first floor in the american style,
and basement floors are out of consideration for the renting.

in order to help mr.&nbsp;port, you should write a program that computes
the vertically adjacent floors satisfying his requirement and
whose total rental cost per month is 
exactly equal to his budget.
 
for example, when his budget is 15 units, 
with one unit being the rent of the first floor,
there are four possible rent plans,
1+2+3+4+5, 4+5+6, 7+8, and 15. 
for all of them, the sums are equal to 15.
of course in this example the rent of maximal number of the floors 
is that of 1+2+3+4+5, that is, the rent from the first floor to the fifth floor.
 






"
p01112,Playoff by all the teams,"
the minato mirai football association hosts its annual championship
as a single round-robin tournament,
in which each team plays a single match against all the others.


unlike many other round-robin tournaments of football,
matches never result in a draw in this tournament.
when the regular time match is a tie,
overtime is played, and, when it is a tie again,
a penalty shootout is played to decide the winner.
 
if two or more teams won the most number of matches in the round-robin,
a playoff is conducted among them to decide the champion.


however, if the number of teams is an odd number,
it is possible that all the teams may have
the same number of wins and losses,
in which case all the teams participate in the playoff,
called a ""full playoff"" here.
 
now, some of the tournament matches have already been played and we know
their results.
whether or not a full playoff will be required may
depend on the results of the remaining matches.



write a program that computes the number of win/loss combination patterns
of the remaining matches that lead to a full playoff.
 
the first datatset of the sample input represents the results of the
first three matches in a round-robin tournament of five teams, shown
in the following table.


in the table, gray cells indicate the matches not played yet.
 
in this case,
all the teams win the same number of matches
with only two win/loss combination patterns
of the remaining matches,
which lead to a full playoff,
as shown below.

in the two tables, the differences are indicated in light yellow.
 



team1team2team3team4team5
team1wonwonlostlost
team2lostlostwonwon
team3lostwonwonlost
team4wonlostlostwon
team5wonlostwonlost



team1team2team3team4team5
team1wonwonlostlost
team2lostlostwonwon
team3lostwonlostwon
team4wonlostwonlost
team5wonlostlostwon




"
p01113,Point Numbers,"
in this problem, we consider floating-point number formats, data representation formats to approximate real numbers on computers.
 
scientific notation is a method to express a number, frequently used for
numbers too large or too small to be written tersely in usual decimal form.
in scientific notation, all numbers are written in the form
m &times; 10e.
here, m (called significand) is a number
greater than or equal to 1 and less than 10,
and e (called exponent) is an integer.
for example, a number 13.5 is equal to 1.35 &times; 101,
so we can express it in scientific notation with significand 1.35 and exponent 1.
 
as binary number representation is convenient on computers,
let's consider binary scientific notation with base two, instead of ten.
in binary scientific notation, all numbers are written in the form
m &times; 2e.
since the base is two, m is limited to be less than 2.
for example, 13.5 is equal to 1.6875 &times; 23,
so we can express it in binary scientific notation
with significand 1.6875 and exponent 3.
the significand 1.6875 is equal to 1 + 1/2 + 1/8 + 1/16,
which is 1.10112 in binary notation.
similarly, the exponent 3 can be expressed as 112 in binary notation.
 
a floating-point number expresses a number in binary scientific notation in finite number of bits.
although the accuracy of the significand and the range of the exponent are limited by the number of bits, we can express numbers in a wide range with reasonably high accuracy.
 
in this problem, we consider a 64-bit floating-point number format,
simplified from one actually used widely,
in which only those numbers greater than or equal to 1 can be expressed.
here, the first 12 bits are used for the exponent and the remaining 52 bits for the significand.

let's denote the 64 bits of a floating-point number by
b64...b1.
with e an unsigned binary integer
(b64...b53)2,
and with m a binary fraction represented by the remaining 52 bits
plus one (1.b52...b1)2,
the floating-point number represents the number
m &times; 2e.
 
we show below the bit string of the representation of 13.5 in the format described above.
 



 
in floating-point addition operations, the results have to be approximated by numbers representable in floating-point format.
here, we assume that the approximation is by truncation.
when the sum of two floating-point numbers a and b is expressed in binary scientific notation as
a + b = m &times; 2e (1 &#8804; m &lt; 2, 0 &#8804; e &lt; 212),
the result of addition operation on them will be a floating-point number with its first 12 bits representing e as an unsigned integer
and the remaining 52 bits representing the first 52 bits of the binary fraction of m.
 
a disadvantage of this approximation method is that the approximation error accumulates easily.
to verify this, let's make an experiment of adding a floating-point number many times, as in the pseudocode shown below.
here, s and a are floating-point numbers, and the results of individual addition are approximated as described above.
 
for a given floating-point number a and a number of repetitions n,
compute the bits of the floating-point number s when the above pseudocode finishes.
 




"
p01114,Equilateral Triangular Fence,"
ms. misumi owns an orchard along a straight road.
recently, wild boars have been witnessed strolling around the orchard aiming at pears, and she plans to construct a fence around many of the pear trees.
 the orchard contains n pear trees, whose locations are given by the two-dimensional euclidean coordinates (x1, y1),..., (xn, yn). for simplicity, we neglect the thickness of pear trees.
ms. misumi's aesthetic tells that the fence has to form a equilateral triangle with one of its edges parallel to the road.
its opposite apex, of course,  should be apart from the road.
the coordinate system for the positions of the pear trees is chosen so that the road is expressed as y = 0, and the pear trees are located at y &#8805; 1.
 
due to budget constraints, ms. misumi decided to allow at most k trees to be left outside of the fence.
you are to find the shortest possible perimeter of the fence on this condition.
 
the following figure shows the first dataset of the sample input.
there are four pear trees at (&#8722;1,2), (0,1), (1,2), and (2,1). 
by excluding (&#8722;1,2) from the fence, we obtain the equilateral triangle with perimeter 6.
 


   




"
p01115,Expression Mining,"
consider an arithmetic expression built by combining single-digit positive integers
with addition symbols +, multiplication symbols *,
and parentheses ( ),
defined by the following grammar rules with the start symbol e.
 
when such an arithmetic expression is viewed as a string,
its substring, that is, a contiguous sequence of characters within the string,
may again form an arithmetic expression.

given an integer n and a string s representing an arithmetic expression,
let us count the number of its substrings that can be read as arithmetic expressions
with values computed equal to n.
 




"
p01116,For Programming Excellence,"
  a countless number of skills are required to be an excellent programmer.
  different skills have different importance degrees,
  and the total programming competence is measured by
  the sum of products of levels and importance degrees of his/her skills.
 
  in this summer season,
  you are planning to attend a summer programming school.
  the school offers courses for many of such skills.
  attending a course for a skill,
  your level of the skill will be improved in proportion to the tuition paid,
  one level per one yen of tuition, however,
  each skill has its upper limit of the level
  and spending more money will never improve the skill level further.
  skills are not independent: for taking a course for a skill,
  except for the most basic course,
  you have to have at least a certain level of its prerequisite skill.
 
  you want to realize the highest possible programming competence measure
  within your limited budget for tuition fees.
 

    


"
p01117,Scores of Final Examination,"
i am a junior high school teacher.
the final examination has just finished, and i have
all the students' scores of all the subjects.
i want to know the highest total score among the students,
but it is not an easy task as the student scores are
listed separately for each subject.
i would like to ask you, an excellent programmer, to help me
by writing a program that finds the total score of a student
with the highest total score.
 



"
p01118,Screen Keyboard,"-->

"
p01119,Balance Scale,"-->

"
p01120,Tally Counters,"-->

"
p01121,Cube Surface Puzzle,"-->

"
p01122,Flipping Colors,"-->

"
p01123,Let's Move Tiles!,"-->

"
p01124,Addition on Convex Polygons,"-->

"
p01125,Misterious Gems,"
宇宙暦 1603〜1867 年，人々はその時代のことを edo 時代と呼ぶ．edo とは当時最先端の宇宙航行技術，enhanced driving operation のことであり、1603 年に dr.izy によって開発された．
 
あなたは宇宙冒険家であり，宇宙を飛び回って様々な惑星を冒険していた．その冒険の途中で，あなたはとても不思議な惑星を発見した．その惑星には，至るところに七色に輝く不思議な宝石が落ちていた．あなたはその惑星への降下を試みようと考えたが，重大な問題のためにそれは不可能であることがわかった．その惑星の空気には，人間が触れただけで即死してしまうような猛毒の成分が含まれていたのだ．
 
そこで，あなたはロボットを使って宝石を回収することを考えついた．あなたはその惑星の周回軌道にて待機する．そして，降下させたロボットを遠隔操作することによって宝石を回収するのだ．あなたは，ロボットに「移動する方向」と「移動する距離」の組からなる命令の列によってロボットを遠隔操作する．ロボットは移動経路上（到達点を含む）に宝石を見つけると，それらを全て回収する．
 
あなたの仕事は，ロボットが与えられた全ての命令の実行を終えたときに，全ての宝石を回収することができたかどうかを判定するプログラムを書くことである．
 
なお，ロボットが不思議な宝石を回収する範囲はそれほど広くない．そのため，ロボットが移動する範囲は全て 2 次元の平面で表すことができる．そして，ロボットが移動する範囲は (0,0) および (20,20) をそれぞれ左下隅および右上隅とする正方形の内部（境界線を含む）である．ロボットは常に範囲の中央，すなわち (10,10) の座標に降下する．また，全ての宝石は中央以外の格子点上にあることが保証されている．
 


"
p01126,Amida,"
奇跡の都市アミダ（amida, the city of miracle）の市長は他の市のように選挙で選ぶのではない．かつて長い政権闘争と天変地異により疲弊したこの都市は，候補者全員を公平に選び，かつ幸運の星の下に生まれた者を市長にするために，候補者全員の運命をくじにゆだねることにしたのである．後にあみだくじと呼ばれるくじである．
 
選挙は以下のように行われる．候補者数と同数の長い縦線が引かれ，さらにいくつかの横線がそこに引かれる．横線は隣接した縦線の途中同士を結ぶように引かれる．いずれかの縦線の下には「当選」と書かれている．どの縦線が当選であるかは候補者からわからないように隠される．それぞれの候補者は縦線を 1 つ選択する．全ての候補者の選択が終わると，各候補者は線を上から下に向かってたどる．ただし，移動途中に横線が見つかったときは，横線の接続された反対側の縦線に移り，また下に向かってたどる．縦線の一番下までたどり着いたときに，そこに「当選」と書かれていた者が当選して，次期市長となる．
 
この方法はうまくいった．幸運な市長の下に，争いも災害も少ない平和な時代が続いた．しかし近年，人口増加のためにこの手法に限界が見えてきた．候補者が増えたため，あみだくじが大規模になり，手作業による集計では非常に時間がかかるようになったのである．そこで市では，市役所のプログラマーであるあなたにあみだくじの電算化を依頼した．
 
あなたの仕事は，あみだくじの構造と，選択された縦線の位置が与えられたときに，最終的にどの縦線にたどり着くかを求めるプログラムを書くことである．
 
以下の図は，サンプルとして与えた入力および出力の内容を示したものである．
 



"
p01127,Ray Screening System,"
これは 20xx 年の話である．再生発電網による安定したエネルギー供給，および液化合成燃料の発明によって航空旅客数は鰻登りに増加した．しかし，航空機によるテロリズムの脅威は依然として存在するため，高速でかつ高い信頼性をもつ自動手荷物検査システムの重要性が高まっている．検査官が全部の荷物を調べることは実際問題として困難であることから，自動検査において疑わしいと判断された手荷物だけを検査官で改めて調べるという仕組みを整えたいわけである．
 手荷物は 1 辺だけが短い直方体のような形状をしている． 一般の乗客が手荷物に詰めて航空機に持ち込む品物としてはノートパソコン，音楽プレイヤー，携帯ゲーム機，トランプなどがあり，これらはいずれも長方形である． 個々の品物は，その長方形の辺が手荷物の辺と平行になるように詰めこまれる． 一方，テロリズムに用いられるような武器は，長方形とは非常に異なる形状をもつ． 
上記の調査結果をふまえて，以下のような手荷物検査のためのモデルを考案した．それぞれの手荷物は x 線に対して透明である直方体の容器だとみなす．その中には x 線に対して不透明である複数の品物が入っている．ここで，直方体の 3 辺を x 軸，y 軸，z 軸とする座標系を考え，x 軸と平行な方向に x 線を照射して，y-z 平面に投影された画像を撮影する．撮影された画像は適当な大きさの格子に分割され，画像解析によって，それぞれの格子領域に映っている品物の材質が推定される．この会社には非常に高度の解析技術があり，材質の詳細な違いすらも解析することが可能であることから，品物の材質は互いに異なると考えることができる．なお，複数の品物が x 軸方向に関して重なっているときは，それぞれの格子領域について最も手前にある，すなわち x 座標が最小である品物の材質が得られる．また，2 つ以上の品物の x 座標が等しいことはないと仮定する．
 
あなたの仕事は，画像解析の結果が与えられたときに，長方形ではない（武器であるかもしれない）品物が入っていることが断言できるか，あるいはその手荷物には長方形の品物以外のものは入っていないと推測されるかを判定するプログラムを作成することである．
 


"
p01128,Railroad Conflict,"
nate u. smith は大都市圏の鉄道会社を経営している．この大都市圏には，彼の鉄道会社以外にライバルの鉄道会社がある．2 社は互いに競合関係にある．
 
この大都市圏では，列車の運行を容易にするため，全ての路線は両端の駅を結んだ線分を経路としている．また，踏切等の設置をさけるため，全ての路線は高架または地下に敷設されている．既存路線は，全線にわたって高架を走るか，または全線にわたって地下を走るかのいずれかである．
 
ところで，最近，この大都市圏にある 2 つの街区 a，b がさかんに開発されていることから，nate の会社ではこれらの街区の間に新しい路線を設けることを決断した．この新路線は，従来の路線と同様に a，b を両端とする線分を経路としたいが，経路の途中には別の路線があることから，高架あるいは地下のいずれかに全線を敷設することは不可能である．そこで，路線の一部を高架に，残りの部分を地下に敷設することにした．このとき，新路線が自社の既存路線と交わるところでは，新路線と既存路線との間の乗り継ぎを便利にするため，既存路線が高架ならば新路線も高架に，既存路線が地下ならば新路線も地下を走るようにする．また，新路線が他社の既存路線と交わるところでは，他社による妨害をさけるため，既存路線が高架ならば新路線は地下に，既存路線が地下ならば新路線は高架を走るようにする．a 駅および b 駅をそれぞれ高架あるいは地下のいずれに設けるかは特に問わない．
 
当然のことながら，新路線が高架から地下に，あるいは地下から高架に移るところには出入口を設けなければならない．ところが，出入口を設けるためには費用がかかるため，新路線に設ける出入口の個数は最小限に抑えたい．それには，プログラマであるあなたの助けを要すると考えた nate は，あなたを彼の会社に呼び出した．
 
あなたの仕事は，a 駅，b 駅の位置，そして既存路線に関する情報が与えられたときに，新路線において最低限設けなければならない出入口の個数を求めるプログラムを作成することである．
 
以下の図は，サンプルとして与えた入力および出力の内容を示したものである．
 


 


"
p01129,Data Center on Fire,"
今から少し未来の話である．高密度記憶および長期保存可能である記録デバイスが開発されてきたが，コンテンツが生み出される速度が異常なほどに速かったため，データセンターを設立した．データセンターを設立した当初は小さな建物だったが，増え続けるデータにあわせて何度も拡張工事をしたため，性能の異なるエレベータを何基も持つこととなった．
 
ところが，データセンターで火災が発生した．火は一定時間だけ経過すると上の階ないし下の階に燃え広がる．また，火がついてから一定時間だけ経過するとその階は焼失してしまう．そこでエレベータを使ってデバイスを運び出すこととした．このエレベータは耐火性能が完璧であるため，階の焼失に関わらず任意の階へ移動できる．また，非常に強力な加速減速装置を持つことから，加速および減速にかかる時間は無視できるほど小さいため，一瞬にして定常速度に加速すること，あるいは停止することができる．また，緊急時においてはいわゆる「開」ボタンが機能しないようにプログラムされているため，エレベータの停止時間は運び出す（あるいは降ろす）デバイスの個数にかかわらず一定である．また，階の焼失前に到着したエレベータによって運び出されるデバイスについては，たとえエレベータの出発前に階が焼失したとしても，焼失の影響を受けない．ただし，エレベータに乗せることができなかったデバイスは当然ながら焼失する．
 
エレベータはどの階から回収してよいか分からないため，デバイスのある最上階を目指すようにプログラムされている．ただし，エレベータ同士は通信可能であり，別のエレベータが目的階に到着した瞬間に情報が通信される．到着したエレベータに全てのデバイスが積みこめることがわかったときは，目的階よりも下にあり，回収可能なデバイスが残っている階のうちで最上階に目的階を変更する．また，焼失のために目的階に向かう必要性が失われたときも，同様にして目的階を変更する．目的階を変更するときに，移動方向を変更する必要があるときは，即座に移動方向を変更する．また，エレベータが満杯になってそれ以上のデバイスを積みこむことができないとき，あるいは回収可能なデバイスが残っていないときは 1 階を目指す．
 
あなたの仕事は，上記の条件のもとで，退避させることのできたデバイスの個数および到着時刻を求めるプログラムを作成することである．
 


"
p01130,Water Pipe Construction,"
21xx 年，ついに人類は火星への移住計画を開始させた．火星への移住第一陣に選抜されたあなたは，火星行政中央局（the administrative center of mars）に配属され，火星で起こる様々な問題に対処している．行政中央局の目下の最大の問題は自立した需要供給サイクルの確保である．月からの援助物資が届くまでには数ヶ月単位の時間がかかるため，基本的には火星内の需要は火星内で解決する必要がある．それに加えて，循環システムを確立するまでは資源を極力節約することが求められる．
 
行政中央局は極地にある氷の採掘を開始した．太陽光でこれを溶かし，水として個々の基地に供給することが最終目標である．最初の段階として，水源のある基地から2つの主要基地までの導水管を敷設することにした．また，現時点ではいくつかの基地とそれらを結ぶ道路以外には開拓されておらず，未開拓のところに導水管を敷設するには多大なるコストと燃料を要するため，道路に沿って導水管を敷設することにした．さらに，技術上の制約のため，彼らの導水管は常に一方向だけに水が流れる．
 
あなたの仕事は，これらの条件のもとで，導水管の敷設にかかるコストを最小にするプログラムを作成することである．
 


"
p01131,Keitai Message,"
			alice さんは miku さんに携帯電話でメールを送ろうとしている。
		 
			携帯電話には入力に使えるボタンは数字のボタンしかない。 そこで、文字の入力をするために数字ボタンを何度か押して文字の入力を行う。携帯電話の数字ボタンには、次の文字が割り当てられており、ボタン 0 は確定ボタンが割り当てられている。この携帯電話では 1 文字の入力が終わったら必ず確定ボタンを押すことになっている。
		 
			例えば、ボタン 2、ボタン 2、ボタン 0 と押すと、文字が 'a' → 'b' と変化し、ここで確定ボタンが押されるので、文字 b が出力される。
			同じ数字を続けて入力すると変化する文字はループする。すなわち、ボタン 2 を 5 回押して、次にボタン 0 を押すと、文字が 'a' → 'b' → 'c' → 'a' → 'b' と変化し、ここで確定ボタンを押されるから 'b' が出力される。
		 
			何もボタンが押されていないときに確定ボタンを押すことはできるが、その場合には何も文字は出力されない。
		 
			あなたの仕事は、alice さんが押したボタンの列から、alice さんが作ったメッセージを再現することである。
		 
		"
p01132,Make Purse Light,"
			mr. bill は店で買い物をしている。 彼の財布にはいくらかの硬貨（10 円玉、50 円玉、100 円玉、500 円玉）が入っているが、彼は今この小銭をできるだけ消費しようとしている。 つまり、適切な枚数の硬貨によって品物の代金を払うことで、釣り銭を受け取った後における硬貨の合計枚数を最小にしようとしている。
		 
			幸いなことに、この店の店員はとても律儀かつ親切であるため、釣り銭は常に最適な方法で渡される。 したがって、例えば 1 枚の 500 円玉の代わりに 5 枚の 100 円玉が渡されるようなことはない。 また、例えば 10 円玉を 5 枚出して、50 円玉を釣り銭として受け取ることもできる。 ただし、出した硬貨と同じ種類の硬貨が釣り銭として戻ってくるような払いかたをしてはいけない。 例えば、10 円玉を支払いの際に出したにも関わらず、別の 10 円玉が釣り銭として戻されるようでは、完全に意味のないやりとりが発生してしまうからである。
		 
			ところが mr. bill は計算が苦手なため、実際に何枚の硬貨を使用すればよいかを彼自身で求めることができなかった。 そこで、彼はあなたに助けを求めてきた。 あなたの仕事は、彼の財布の中にある硬貨の枚数と支払い代金をもとに、使用すべき硬貨の種類と枚数を求めるプログラムを書くことである。なお、店員はお釣りに紙幣を使用することはない。
		"
p01133,Dragon Fantasy,"
			永遠に続くと思われていた平和は突然終わりを告げた。 はるか昔に封印されていた魔王がついに復活を遂げたのである。 だが、今まさに世界が闇に覆われようとしているとき、1 人の勇者が現れた。 そしてその勇者は、世界各地に散らばっている伝説のクリスタルを集める旅に出た。 伝説によると、全てのクリスタルを集めることができたならば、どのような願いでもかなえられるという伝説の龍神を呼び出すことができると伝えられている。 その龍神の力を借りれば魔王を倒すことも可能なはずだ。
		 
			クリスタルは世界各地に散らばっている。 勇者はそれらを 1 つずつ、自らの手で集めていく必要がある。 なぜなら、勇者以外の者がクリスタルを手に入れたならば、魔王の手先によって奪われてしまうかもしれないからである。 勇者は、1 日あたりユークリッド距離で 1 だけ移動することができる。
		 
			しかし、ここで 1 つの重大な問題がある。 魔王は、常に闇の瘴気をまき散らしており、その瘴気に汚染された場所は人が立ち入ることのできない死の大地と化してしまう。 たとえ勇者であってもその場所に立ち入ることはできない。 さらに、その瘴気は時間とともに同心円状に広まっていくため、 時間の経過とともに勇者の移動できる領域は減少していってしまう。 瘴気は 1 日あたりユークリッド距離 1 だけ広がることが確認されている。 そして、その境界線上にあるクリスタルを勇者は取ることはできない。また、復活したばかりの魔王は力を蓄えるために動かないことも分かっている。
		 
			勇者は一刻も早くクリスタルを手に入れなければならない。 しかし、もし全てのクリスタルを手に入れることが不可能であるならば、別の手段を考えなければならないだろう。 そこで、あなたには勇者の初期位置と魔王の復活した場所、そしてクリスタルの存在する位置から、全てのクリスタルを手に入れることができるかどうかを調べるプログラムを作っていただきたい。
		 
			ちなみに、勇者は疲れない。 そして眠らない。 全てのクリスタルを集めて世界を救うまでは絶えず動き続け、クリスタルを集めるのだ！！
		 
		"
p01134,Area Separation,"
			mr. yamada springfield tanaka は、国家区画整理事業局局長補佐代理という大任を任されていた。
			現在、彼の国は大規模な区画整理の最中であり、この区画整理をスムーズに終わらせることができたならば彼の昇進は間違いなしであるとされている。
		 
			ところが、そんな彼の出世を快く思わない者も多くいるのだ。 そんな人間の 1 人に、mr.sato seabreeze suzuki がいた。
			彼は、ことあるごとに mr. yamada の足を引っ張ろうと画策してきた。 今回も mr. sato は足を引っ張るために、実際の区画整理を担当している組織に圧力をかけて、区画整理の結果を非常に分かりにくいものにしてしまった。
		 
			そのため、mr. yamada に渡された結果は、 ある正方形の土地をどの直線で分割したかという情報のみになっていた。
			最低限、その正方形の土地がいくつに分割されたかだけでも分からなければ、mr. yamada は昇進どころか解雇されること間違いなしである。
		 
			あなたの仕事は、(-100,-100)、(100,-100)、(100,100)、(-100,100) を頂点とする正方形領域が、与えられた n 本の直線によっていくつに分割されているかを調べるプログラムを書いて、mr. yamada を解雇の危機から救うことである。
		 
		"
p01135,Poor Mail Forwarding,"
			masa 君が住んでいる地域の郵便システムは少々変わっている。
			この地域では、各々の郵便局に対して 1 から順に連続した異なる番号がつけられており、ある郵便局に届けられた郵便物は、その郵便局からいくつかの郵便局を経由して目的の郵便局に届けられる。
			郵便物の「転送」は、特定の郵便局の間でしか行われない。 ただし、転送が行われる郵便局同士の間では、転送は双方向に行われる。
		 
			ある郵便局から宛先まで郵便物を転送するための経路が複数存在する場合は、 宛先までの距離が最短となるような経路を使用する。
			したがって、転送先はそのような最短経路における次の郵便局となる。 もし、総距離が最短となる経路が複数存在する場合は、直接の転送先となる郵便局の番号が若いほうに転送する。
		 
			ところで、この地域では深刻な労働力不足に悩まされており、郵便局間の転送を行う転送員が各郵便局に 1 人ずつしかいない。
			彼らががんばって往復しているのである。 当然、ある郵便局に郵便物が届いた時点でその郵便局に所属する転送員が出払っていた場合は、その郵便局からの転送は一時的にストップする。
		 
			彼らは自分の所属する郵便局にいるときに、その郵便局から転送されていない郵便物が存在すれば即座に出発し、転送先に届けた後は即座に戻ってくる。
			彼が転送先の郵便局から帰ってくるとき、彼の郵便局に転送される郵便物がその郵便局にあったとしても、それを運んでくることはしない (その郵便物の転送はその郵便局の転送員の仕事である)。
		 
			転送する際に、複数の郵便物が溜まっていた場合は、その郵便局に最も早く届けられた郵便物から転送を行う。 ここで、同じ時刻に届いた郵便物が複数あったときは、直接の転送先となる郵便局の番号が若いほうから転送する。 なお、同じ転送先となる郵便物があればそれも一緒に転送する。
			また、転送員の出発時刻と同じ時刻に、同じ郵便局に転送されるべき郵便物が到着した場合は、それも一緒に転送される。
			なお、彼らは全員、距離 1 の移動に時間 1 を要する。
		 
			あなたには、郵便局間の転送に関わる情報と、各郵便局に郵便物が届いた時刻のリストが与えられる。
			このとき、郵便物の動きをシミュレートし、各郵便物が宛先の郵便局に届いた時刻を報告せよ。 問題のシミュレーション中で必要となる時刻はすべて 0 以上 231 未満の範囲におさまると仮定してよい。
		 
		"
p01136,Gather the Maps!,"
			はるか昔、八尾氏が残したとされる伝説の秘宝が八王子のどこかに眠っているという。 その在処を示すとされる宝の地図は、いくつかの断片に分割された状態で、八尾氏の n 人の子孫達によって受け継がれている。
		 
			今、八尾氏の子孫達は協力してその秘宝を手に入れようとしていた。 ところが、秘宝の在処を指し示す宝の地図の一部分だけでは秘宝を見つけることができない。 そこで、八尾氏の子孫達は全員で集まって地図を 1 ヶ所に集めようとした。
			ところが、いざ実行に移そうとしてもなかなか予定が合わずに集まることができない。 しかしこの秘宝に関する情報は、一族において秘密裏に伝えられてきた貴重な情報である。 漏洩の危険性を考慮すると、公共の通信手段を用いて地図をやりとりすることなど問題外である。
		 
			そこで、子孫同士が直接会って地図を手渡すということを繰り返すことで、ある 1 人の子孫のところに地図を集めることにした。
			なお、1 人が 1 日に会える人数に制限はないが、互いにスケジュールが空いていることが必要である。
		 
			あなたの仕事は、それぞれの子孫に対するスケジュールの空いている日のリストから、地図を集めるには最低で何日必要かを求めるプログラムを書くことである。
		 
			ちなみに、八尾氏一族の結束は非常に固い。 最終的に地図全体を手にした子孫が、他の子孫を裏切って秘宝を持ち逃げすれば、一族から制裁を受けることになる。その制裁はきわめて恐ろしいものであるため、実際にその子孫が秘宝を持ち逃げすることは事実上不可能である。
		 
		"
p01137,Space Coconut Grab,"
english text is not available in this practice contest.
 
ケン・マリンブルーは，宇宙ヤシガニを求めて全銀河を旅するスペースハンターである．宇宙ヤシガニは，宇宙最大とされる甲殻類であり，成長後の体長は 400 メートル以上，足を広げれば 1,000 メートル以上にもなると言われている．既に多数の人々が宇宙ヤシガニを目撃しているが，誰一人として捕らえることに成功していない．
 
ケンは，長期間の調査によって，宇宙ヤシガニの生態に関する重要な事実を解明した．宇宙ヤシガニは，驚くべきことに，相転移航法と呼ばれる最新のワープ技術と同等のことを行い，通常空間と超空間の間を往来しながら生きていた．さらに，宇宙ヤシガニが超空間から通常空間にワープアウトするまでには長い時間がかかり，またワープアウトしてからしばらくは超空間に移動できないことも突き止めた．
 
そこで，ケンはついに宇宙ヤシガニの捕獲に乗り出すことにした．戦略は次のとおりである．はじめに，宇宙ヤシガニが通常空間から超空間に突入する際のエネルギーを観測する．このエネルギーを e とするとき，宇宙ヤシガニが超空間からワープアウトする座標 (x, y, z) は以下の条件を満たすことがわかっている．
 x, y, z はいずれも非負の整数である． x + y2 + z3 = e である． 上記の条件の下で x + y + z の値を最小にする． 
これらの条件だけでは座標が一意に決まるとは限らないが，x + y + z の最小値を m としたときに，ワープアウトする座標が平面 x + y + z = m 上にあることは確かである．そこで，この平面上に十分な大きさのバリアを張る．すると，宇宙ヤシガニはバリアの張られたところにワープアウトすることになる．バリアの影響を受けた宇宙ヤシガニは身動きがとれなくなる．そこをケンの操作する最新鋭宇宙船であるウェポン・ブレーカー号で捕獲しようという段取りである．
 
バリアは一度しか張ることができないため，失敗するわけにはいかない．そこでケンは，任務の遂行にあたって計算機の助けを借りることにした．あなたの仕事は，宇宙ヤシガニが超空間に突入する際のエネルギーが与えられたときに，バリアを張るべき平面 x + y + z = m を求めるプログラムを書くことである．用意されたテストケースの全てに対して正しい結果を出力したとき，あなたのプログラムは受け入れられるであろう．
 



"
p01138,Osaki,"
english text is not available in this practice contest.
 
山手線は東京 23 区内に敷設されている環状鉄道路線である．総路線距離は 34.5km であり，1 周にはおよそ 1 時間を要する．駅は全部で 29 駅存在する．ラインカラーはウグイス色である．ピーク時の混雑率は 200% を超え，日本の鉄道路線の中で最も混雑している路線の 1 つである．最も混雑する時間帯では 3 分に 1 本の列車が走っており，東京に初めて来た人々はその光景に驚くものである．
 
鉄子さんは山手線を愛してやまない生粋の鉄道好きである．ある日，彼女は愛読書である jr 時刻表を読みながら次の疑問に至った．「山手線では一日に何台の車両が使われているのだろう？」
 
彼女は時刻表から運行に最低限必要な車両の台数を割り出そうとした．しかし，列車の本数が非常に多かったので，彼女一人の力では到底数え切れそうにない．そこで彼女は優秀なプログラマーであるあなたに助けを求めた．
 
あなたの仕事は与えられた時刻表から山手線の運行に要する車両の最低台数を求めるプログラムを書くことである．山手線は環状路線であることから，その時刻表は便宜上「大崎駅」を始発駅および終着駅として表記されることが多い．そのため，彼女から渡された時刻表にも各列車の大崎駅における発時刻および着時刻のみが記されている．
 
なお，実際の山手線では起こりえないが，状況設定を簡単にするため，ここでは大崎駅の到着直後に列車が大崎駅を出発可能であると考えることにする．また，鉄子さんが写した時刻に誤りがあったり，鉄子さんの妄想によって勝手に加えられた列車が時刻表に紛れ込んだりしている場合もあるが，あなたはそれらを見抜くことができないので，あくまでも書かれたとおりの時刻に対して台数を求めなければならない．
 
きちんと動作するプログラムを書けば，彼女が列車内デートに誘ってくれるかもしれない．もっとも，誘いに乗るか断るかはあなた次第であるが．
 



"
p01139,Surrounding Area,"
english text is not available in this practice contest.
 
ある 2 人の不動産屋が，客船に乗って南の島に向かっていた．青い空，さわやかな風…．2 人は他の乗客とともに船旅を楽しんでいた．ところが，ある日突然発生した竜巻によって客船が沈んでしまった．他の乗客は救助隊によって救助されたが，どういうわけかこの 2 人だけ見落とされてしまった．数日の漂流の後，彼らはある無人島に流れ着いた．この無人島は長方形であり，以下の図のように格子に区切られていた．
 
彼らはとても欲深かったので，助けを呼ぶことではなく，この無人島の土地を売ることを考えていた．そして，彼らは土地を折半するということはせず，土地の奪い合いを始めた．彼らはそれぞれ自分の土地にしたいところを，一方は黒い杭で，もう一方は白い杭で囲み始めた．全ての杭は格子の中央に打たれ，また 1 つの格子に複数の杭が打たれることはなかった．しばらくすると双方とも疲れ果てて，杭を打つことを止めた．
 
あなたの仕事は，黒い杭および白い杭で囲まれた土地の面積を求めるプログラムを書くことである．ただし，格子 (i, j) が黒い杭に囲まれているとは，直感的には「格子 (i, j) から上下左右に任意に移動したとき，最初に当たる杭は常に黒い杭である」ことを意味する．正確には以下のように定義される．
 
黒い杭に「拡大隣接した」格子を次のとおりに定める．白い杭についても同様とする．
 格子 (i, j) に杭が存在せず，さらに格子 (i, j) に隣接する格子のいずれかに黒い杭が存在するならば，格子 (i, j) は黒い杭に拡大隣接している．  格子 (i, j) に杭が存在せず，さらに格子 (i, j) に隣接する格子のいずれかが黒い杭に拡大隣接しているならば，格子 (i, j) は黒い杭に拡大隣接している．このルールは再帰的に適用される．  

 
このとき，格子 (i, j) が黒い杭に拡大隣接していて，さらに白い杭に隣接していないとき，またそのときに限って，格子 (i, j) が黒い杭に囲まれているという．また逆に，格子 (i, j) が白い杭に拡大隣接していて，さらに黒い杭に隣接していないとき，またそのときに限って，格子 (i, j) が白い杭に囲まれているという．
 




"
p01140,Square Route,"
english text is not available in this practice contest.
 
このたび新しい豪邸を建てることを決めた大富豪の品田氏は，どの街に新邸を建てようかと悩んでいる．実は，品田氏は正方形がとても好きという変わった人物であり，そのため少しでも正方形の多い街に住みたいと思っている．
 
品田氏は，碁盤目状に道路の整備された街の一覧を手に入れて，それぞれの街について，道路により形作られる正方形の個数を数えることにした．ところが，道と道の間隔は一定とは限らないため，手作業で正方形を数えるのは大変である．そこであなたには，碁盤目状の道路の情報が与えられたときに，正方形の個数を数えるプログラムを書いて欲しい．
 



"
p01141,Lifeguard in the Pool,"
english text is not available in this practice contest.
 
horton moore はプールの監視員として働いている．彼が見回りのためにプールの縁を歩いていたところ，プールの中で一人の少女がおぼれていることに気づいた．もちろん，彼は直ちに救助に向かわなければならない．しかも，少女の身に何かあっては大変であるから，少しでも早く少女のもとにたどり着きたい．
 
あなたの仕事は，プールの形状（頂点数が 3〜10 の凸多角形），地上および水中における監視員の単位距離あたりの移動時間，そして監視員と少女の初期位置が与えられたときに，監視員が少女のところに到着するまでにかかる最短の時間を求めるプログラムを書くことである．
 



"
p01142,Karakuri Doll,"
english text is not available in this practice contest.
 
からくり人形師の jag 氏は，長年の研究の果てに，伝統技術と最新技術を融合させたすばらしいお茶汲み人形の開発に成功した．このお茶汲み人形は，下の図のように格子に区切られた家の中で，台所（k）でお茶の入った湯飲みを乗せるとそれを主人（m）の居場所まで持っていき，主人が飲み終わった湯飲みを乗せると台所まで戻っていくという仕事をする．ただし，この人形は台所と主人の間の往復経路を自分で見つけられるほど賢くはない．使用者はこの人形にプログラムをあらかじめ入力して，人形がきちんと往復できるようにする必要がある．
 
人形が受理する命令は「左に曲がる」と「右に曲がる」の 2 つであり，人形に入力可能なプログラムは命令の有限な列である．人形は台所を出発した後，壁（図中「#」で表されたマス）にぶつかるまで前進し，壁にぶつかると最初の命令に従って左または右に方向転換する．以降，再び壁にぶつかるまで前進し，ぶつかったら次の命令を実行し，以下同様に物事が進む．方向転換してもなお壁にぶつかって前進できないときは，その場所から移動しないまま次の命令を実行する．壁にぶつかったとき，実行する命令が残っていなければ人形は停止する．これをプログラムの順実行と呼ぶ．
 
主人の居場所から台所に戻るときは，プログラムの命令列を逆順に実行し，さらに左右反対に方向転換する．これをプログラムの逆実行と呼ぶ．命令の実行順序および方向転換以外の挙動は順実行と同じである．
 
たとえば，上の図の家で，この人形に「右，右，左」というプログラムを与えると，往路では地点 a で右，地点 b で右，地点 c で左にそれぞれ方向転換して主人の居場所に到着する．また，復路では地点 c で右，地点 b で左，地点 a で左にそれぞれ方向転換して台所に帰還する．一方，「左，左」というプログラムを与えると，人形はまず地点 a で左に方向転換する．直進しようとするが，そのまま左側の壁にぶつかるため，地点 a にとどまったまま 2 番目の命令にしたがって左に方向転換する．そして直進して台所まで戻ってきたところで壁にぶつかり，命令が残っていないので停止する．
 
ところで，jag 氏は大きな過ちを犯していた．実は，どのようなプログラムを与えても主人の居場所までたどり着けない場合が存在するのである．また，主人の居場所に着いたとしても，湯飲みを台所まで持って帰れない場合もある．
 
あなたの仕事は，ある家の中でこの人形を使ったときに，この人形が主人の居場所に到着できるか，そして台所に帰還できるかを判断するプログラムを書くことである．



"
p01143,Princess's Gamble,"
english text is not available in this practice contest.
 
ある貧乏な国のおてんばで勇敢なお姫様は，ある日部屋の壁を壊してお城を抜け出し，競馬などのギャンブルが行われている賭博場に入っていった．ところが，ギャンブルなどやったことのないお姫様は，非常に負けが込んでしまった．この状況をおもしろくないと思ったお姫様は，一体どのような仕組みでギャンブルが行われているかを調べてみた．すると，このようなギャンブルではパリミュチュエル方式と呼ばれる方式で配当が決定されていることを突き止めた．
 
パリミュチュエル方式とは，競走を対象としたギャンブルにおいて配当を決定するために使用する計算方法である．この方式では，全ての掛け金をプールし，一定の割合を控除した上で，当選者に掛け金に比例した金額を分配する．
 
現在お姫様が熱中しているギャンブルは，参加者は競技前にどの競技者が優勝するかを予想する 1枚100ゴールドの投票券を購入し，競技の結果が予想と一致すれば当選金を受け取る権利を得るというものである．なお，ゴールドはこの国の通貨単位である．あなたの仕事は入力として与えられる競技の情報をもとに，投票券一枚あたりの配当を計算するプログラムを書くことである．
 
先述の方法で計算される配当額が整数にならない場合は，切り捨てによって整数にすること．
 




"
p01144,Princess's Marriage,"
english text is not available in this practice contest.
 
ある貧乏な国のおてんばで勇敢なお姫様は，ギャンブルの配当がパリミュチュエル方式で決定される事を知ることにより，ギャンブルについて詳しくなった気がしてギャンブルでの勝利を確信した．その結果，今までよりも更に多額のお金をつぎ込み，国民が納めた税金をすべて失うほどの負けを喫してしまった．この事態を重く受け止めた王様は，お姫様を隣の国へ嫁がせることにした．こうすることにより，お姫様を日頃の行いを反省させ，同時に隣国との交友を深めて財政援助をしてもらおうと考えたからである．
 
お姫様と隣国の王子様はお互いの事が気に入り，また両国の王様間でも政略結婚に関する同意がなされた．お姫様はなけなしのお金を手に意気揚々と隣の国へ出かけた．一方で，お姫様が嫁ぐ動機は王様の一方的な利益追及のためであり，快くないと考える隣国の王子様の側近は，お姫様を亡き者にするために道の途中に無数の刺客達を放った．
 
お姫様が通る道はすでに決められている．お姫様の通る道には合計 l 個の宿場がある．便宜上，出発地点および到着地点も宿場とし，各宿場を s1, s2, ... sl と呼ぶことにする．お姫様は最初に s1 におり，昇順に (s2, s3 ... という順番で) 宿場を訪れて，最終的に sl へ行くものとする．宿場では金銭を払って護衛を雇うことができ，お金がある限り好きな距離だけ契約してお姫様を守らせることができる．護衛を雇う費用は，距離1につき金1である．お姫様は通る区間内を部分的に守ってもらうことも出来ることに注意せよ．siとsi+1間の距離はdi，siとsi+1間で距離1につき刺客に襲われる回数の期待値はpiで与えられている．
 
お姫様が予算mを持っていて，刺客に襲われる回数の期待値が最小になるように護衛を雇ったときの，目的地までに刺客に襲われる回数の期待値を求めよ．
 




"
p01145,Princess's Japanese,"
english text is not available in this practice contest.
 
ある貧乏な国のおてんばで勇敢なお姫様は，日本語の勉強をしている．負けず嫌いな性格も手伝って，お姫様は日本語を流暢に話せるようになったが，発音に少しばかり不自然なところが残っている．どうやら，母音の無声化という日本語固有の発音法が関係しているらしい．お姫様は完璧な日本語話者を目指しているため，何としても自分の不自然な発音を矯正したいと思っている．そこでお姫様は，従者であるあなたに対して，発音を矯正するためのプログラムを作成するように命じた．あなたの仕事は，入力で与えられた日本語の語句に対して，無声化の生じる様子を示すプログラムを作成することである．
 
お姫様はひらがな，カタカナ，日常的に使用される漢字など，日本語の表記体系について十分に習得しているため，読み書きに困ることはめったにない．ところが，お姫様の国にあるコンピュータでは日本語の入力に困難があるため，プログラムにおいては，「ローマ字」と呼ばれる英文字による表記を用いることに決めた．
 
まず，日本語の発音体系について大まかに説明する必要があるだろう．日本語では拍（モーラ）を単位として発音がなされる．拍は以下のいずれかの形をしている．
 （母音） （子音）+（母音） （「y」「w」以外の子音）+「y」+（母音） 促音（「っ」） 撥音（「ん」） 長音（「ー」） 
ここで，母音は「a」「i」「u」「e」「o」のいずれか，子音は「k」「s」「t」「n」「h」「m」「y」「r」「w」「g」「z」「d」「b」「p」のいずれかである．ただし，「y」の直後に現れる母音は「a」「u」「o」に限られる．また，「w」の直後に現れる母音は「a」に限られる．
 
促音は直後の拍の子音を重ねて表記される．たとえば，「sekki」（石器）は促音を含む語句のひとつである．促音は母音あるいは「n」「y」「w」の前には現れない．まれに促音が文節末に現れることはあるが，ここではそのような例は考えない．
 
撥音は単独の「n」によって表記される．ただし，母音または「y」の直前に現れるときは，上記の2.または3.との区別がつかなくなるため，「n」の直後にアポストロフィーをつける．以下にいくつかの例をしめす．
 
特に，以下の違いには注意されたい．
 
長音は単独で音節を構成するわけではないが，常に1拍を余分に使って（すなわち2拍で）発音される．日本語では長音と短音の対立があり，しかも長音と短音の違いによって語句が区別されるため，長音と短音の違いは重要である．ここでは長音は母音（「a」「i」「u」のいずれか）を重ねて表記することとする．以下にいくつかの例をしめす．
 
撥音，促音，長音は先頭に現れず，また連続して現れない．また撥音と促音が互いに隣り合って現れることもない．
 
さて，日本語では特定の条件下において母音がきちんと発音されないことがある．これが母音の無声化と呼ばれる現象である．母音が無声化される条件に関しては諸説あるが，ここでは比較的簡単でかつ機械的適用が可能である以下のような場合について考えることにする．ただし，無声子音とは「k」「s」「t」「h」「p」のことである．また，これらに「y」が続いたもの（「ky」など）も便宜的に無声子音とみなす．
 母音「i」「u」の短音について，その母音が無声子音にはさまれたとき，または無声子音の直後でしかも語句の末尾にあるとき．この規則は，母音「i」「u」の直後の拍が促音であっても適用される．以下にいくつかの例を示す． 母音「a」「o」について，同一の母音が無声子音とともに連続する2つ以上の拍で現れたとき．ただし，その連続する拍のうちで最後のものについては除外される．以下にいくつかの例を示す．促音および長音はひとつの拍を構成することから，連続部分の先頭または途中に，促音または長音があってはならないという点には注意すること．  
ただし，上記に該当する全部の母音が無声化されるわけではない．これは，複数の母音が続けて無声化されることはないことによる．母音が無声化されるのは，最初の母音である場合，または直近の母音が無声化されなかった場合であり，またそれらの場合にかぎる．たとえば，「hakata」については，最初の「a」は無声化されるが，2番目の「a」は無声化されない．同様にして，「kippu」については，語中の「i」は無声化されるが，語尾の「u」は無声化されずに発音される．
 
「hottokouhii」（ホットコーヒー）はわかりにくい例のひとつである．これを拍に分解すると「ho-（促音）-to-ko-（長音）-hi-（長音）」のようになる．最初の「o」は，直後の拍が促音であるため，上記の注意書きにあるように「無声子音 + o」が連続しているとはみなされない．すなわち，最初（1拍目）の「o」は無声化されない．ところが，次の「o」については，直後に長音があるものの「to」「ko」というように「無声子音 + o」が連続して現れている．したがって，2番目（3拍目）の「o」は無声化される．また，語尾付近に無声子音「h」の後に現れる「i」が存在するが，これは長音であるため無声化されない．
 




"
p01146,Princess in Danger,"
english text is not available in this practice contest.
 
ある貧乏な国のおてんばで勇敢なお姫様が，政略結婚のため別の国に嫁ぐことになった．ところが，お姫様を亡き者としようとしている悪漢に嫁ぎ先への道中で襲われお姫様が大けがをしてしまい，近くの病院に搬送された．ところが，悪漢はお姫様は確実に亡き者とするため特殊な毒を使っていた．そのため，お姫様を助けるには本国から特別な薬と冷凍された肉親の血液を大急ぎで運ばなければならなくなった．
 
この血液は冷凍状態で輸送されるのだが，鮮度を保つため，前回の冷凍から最大 m 分以内に血液冷凍施設で再冷凍しなければならない．しかし，冷凍施設が設置されている場所は数カ所しかない．
 
血液は，十分に冷凍した状態から，再冷凍なしで m 分の間無事である．再冷凍しなくてすむ残り時間が s 分のときに，t 分間冷凍しないで輸送した場合，再冷凍しなくてすむ残り時間は s - t 分となる．再冷凍しなくてすむ残り時間は，再冷凍することにより，最大 m 分まで回復する．血液の再冷凍にかかる時間は，どれだけ冷凍するかに依存する．血液を冷凍施設で，1分冷凍するごとに再冷凍しなくてすむ残り時間は1分回復する．
 
本国の首都を出発する時点の，血液を再冷凍しなくてすむ残り時間はm分である．
 
お姫様の従者であるあなたは，大切な主君の命を救うため，本国の首都からお姫様が搬送された病院まで血液の鮮度を保ったまま輸送するための経路を計算しなければならない．そう，あなたの使命は，本国の首都からその病院への最短経路を割り出し，その最短時間を求めることである．
 



"
p01147,Princess,"
english text is not available in this practice contest.
 
ある貧乏な国のおてんばで勇敢なお姫様は，お忍びで出かけた町である日本語で書かれた古文書を手に入れた．お姫様は日本語ができるため，さっそくこの古文書を読んでみた．すると，驚くべき事が分かった．この古文書は，古の秘宝の在処を示していたのである．ところが，秘宝の在処は暗号になっており，容易には分からないようになっていた．そこでお姫様は，従者であるあなたに暗号の解読を手伝うように命令を下した．
 
あなたはお姫様を助けるため昼夜を問わず調査を行った．その結果，shortest secret string (sss) と呼ばれる文字列が解読に重要な役割を果たすことがわかった．ここで sss とは，n 個の単語全部を部分文字列として含み，なおかつその長さが最小であるような文字列である．
 
あなたの仕事は，n 個の単語から sss を見つけ出す事である．
 




"
p01148,Princess,"
english text is not available in this practice contest.
 
ある貧乏な国の勇敢なお姫様は，お城を抜け出して古の秘宝を手に入れる冒険に出かける算段をしている．ところが，古の秘宝の周囲は複数のガーディアンによって守られており，普通の方法では辿り着くことができない．そこで，お姫様は従者であるあなたを囮にし，ガーディアン達の注意を惹きつけている間に秘宝を取って来るという作戦を考えた．そのような事をされては命がいくつあっても足りない，しかしお姫様の命令に従わないわけにもいかない．そこで，まずあなたはあらかじめ偵察をし，どのように動けばガーディアンの攻撃をかわしつつ，注意を引きつけられるのかを念入りに調査した．あなたの仕事は，これらの調査結果をもとに囮であるあなたとガーディアンの発射する弾丸の衝突がいつ，そして何回起こったのか計算するプログラムを書くことである．
 
まず，簡単のため，フィールドとして十分に高い場所から見下ろした二次元平面を考える．そして，あなたはガーディアンの攻撃から身を守るために鎧を装備している．そのため，あなたの形は多角形でであるものと考えて良い．なお，この多角形の各線分は一切交差したり重なったりしない．また，あなたの移動については以下のことを仮定して良い．
 加速，減速，方向転換は全て一瞬で行われる．  回転しないため向きは初期状態から一切変わらない． 
    
   多角形の全ての部分は常に y 座標が正の位置にある． 
また，ガーディアンの発射する弾丸については，以下のことを仮定して良い．
 ガーディアンが発射する弾丸の太さは無視できる  ガーディアンが発射する弾丸は有限の長さをもつ   たとえば，(4, 0) の地点から速度ベクトル (3, 4) の長さ 10 の弾丸が発射されるケースでは弾丸の末尾は(-2, -8) にある 
     
    敵キャラクターが発射する弾丸同士の衝突は全て無視される  
  あなたとガーディアンの発射した弾丸の衝突の定義を以下に述べる．あなたを構成する多角形とガーディアンの発射する線分の共有点が初めて発生した時刻を弾丸の衝突時刻とする．ガーディアンの発射した弾丸にあなたが衝突したとしても，あなたはダメージを受けるだけで移動には何の支障もきたさないものとし，あなたに衝突した弾丸は衝突した瞬間に消滅するものとする．なお，あなたが初期位置から任意の方向に 10-6 の範囲で平行移動したとしても，衝突時間は高々 10-5 しか変化しないことが保証されている．
 




"
p01149,Blackjack,"
brian jones is an undergraduate student at advanced college of metropolitan. recently he was
given an assignment in his class of computer science to write a program that plays a dealer of
blackjack.
 
blackjack is a game played with one or more decks of playing cards. the objective of each player
is to have the score of the hand close to 21 without going over 21. the score is the total points
of the cards in the hand. cards from 2 to 10 are worth their face value. face cards (jack, queen
and king) are worth 10 points. an ace counts as 11 or 1 such a way the score gets closer to
but does not exceed 21. a hand of more than 21 points is called bust, which makes a player
automatically lose. a hand of 21 points with exactly two cards, that is, a pair of an ace and a
ten-point card (a face card or a ten) is called a blackjack and treated as a special hand.
 
the game is played as follows. the dealer first deals two cards each to all players and the dealer
himself. in case the dealer gets a blackjack, the dealer wins and the game ends immediately. in
other cases, players that have blackjacks win automatically. the remaining players make their
turns one by one. each player decides to take another card (hit) or to stop taking (stand) in
his turn. he may repeatedly hit until he chooses to stand or he busts, in which case his turn
is over and the next player begins his play. after all players finish their plays, the dealer plays
according to the following rules:
 hits if the score of the hand is 16 or less. also hits if the score of the hand is 17 and one of aces is counted as 11. stands otherwise. 
players that have unbusted hands of higher points than that of the dealer win. all players that
do not bust win in case the dealer busts. it does not matter, however, whether players win or
lose, since the subject of the assignment is just to simulate a dealer.
 
by the way, brian is not good at programming, thus the assignment is a very hard task for him.
 
so he calls you for help, as you are a good programmer.
your task is to write a program that counts the score of the dealer’s hand after his play for each
given sequence of cards.
 

"
p01150,Eight Princes,"
once upon a time in a kingdom far, far away, there lived eight princes. sadly they were on very
bad terms so they began to quarrel every time they met.
 
one day, the princes needed to seat at the same round table as a party was held. since they
were always in bad mood, a quarrel would begin whenever:
 a prince took the seat next to another prince. a prince took the seat opposite to that of another prince (this happens only when the
      table has an even number of seats), since they would give malignant looks each other.
 
therefore the seat each prince would seat was needed to be carefully determined in order to
avoid their quarrels. you are required to, given the number of the seats, count the number of
ways to have all eight princes seat in peace.
 

"
p01151,Divisor is the Conqueror,"
divisor is the conquerer is a solitaire card game. although this simple game itself is a great
way to pass one’s time, you, a programmer, always kill your time by programming. your task
is to write a computer program that automatically solves divisor is the conquerer games. here
is the rule of this game:
 
first, you randomly draw n cards (1 &le; n &le; 52) from your deck of playing cards. the game is
played only with those cards; the other cards will not be used.
 
then you repeatedly pick one card to play among those in your hand. you are allowed to choose
any card in the initial turn. after that, you are only allowed to pick a card that conquers the
cards you have already played. a card is said to conquer a set of cards when the rank of the card
divides the sum of the ranks in the set. for example, the card 7 conquers the set {5, 11, 12},
while the card 11 does not conquer the set {5, 7, 12}.
 
you win the game if you successfully play all n cards you have drawn. you lose if you fails,
that is, you faces a situation in which no card in your hand conquers the set of cards you have
played.
 

"
p01152,Reading a Chord,"
in this problem, you are required to write a program that enumerates all chord names for given
tones.
 
we suppose an ordinary scale that consists of the following 12 tones:
 
c, c# , d, d# , e, f, f# , g, g# , a, a# , b
 
two adjacent tones are different by a half step; the right one is higher. hence, for example, the
tone g is higher than the tone e by three half steps. in addition, the tone c is higher than the
tone b by a half step. strictly speaking, the tone c of the next octave follows the tone b, but
octaves do not matter in this problem.
 
a chord consists of two or more different tones, and is called by its chord name. a chord may be
represented by multiple chord names, but each chord name represents exactly one set of tones.
 
in general, a chord is represented by a basic chord pattern (base chord) and additional tones
(tension) as needed. in this problem, we consider five basic patterns as listed below, and up to
one additional tone.
 figure 1: base chords (only shown those built on c) 
the chords listed above are built on the tone c, and thus their names begin with c. the tone
that a chord is built on (the tone c for these chords) is called the root of the chord.
 
a chord specifies its root by an absolute tone, and its other components by tones relative to its
root. thus we can obtain another chord by shifting all components of a chord. for example, the
chord name d represents a chord consisting of the tones d, f# and a, which are the shifted-up
tones of c, e and g (which are components of the chord c) by two half steps.
 
an additional tone, a tension, is represented by a number that may be preceding a plus or
minus sign, and designated parentheses after the basic pattern. the figure below denotes which
number is used to indicate each tone.

 figure 2: tensions for c chords 
for example, c(9) represents the chord c with the additional tone d, that is, a chord that
consists of c, d, e and g. similarly, c(+11) represents the chord c plus the tone f#.
 
the numbers that specify tensions denote relative tones to the roots of chords like the compo-
nents of the chords. thus change of the root also changes the tones specified by the number, as
illustrated below.
 figure 3: tensions for e chords 
+5 and -5 are the special tensions. they do not indicate to add another tone to the chords,
but to sharp (shift half-step up) or flat (shift half-step down) the fifth tone (the tone seven half
steps higher than the root). therefore, for example, c(+5) represents a chord that consists of
c, e and g# , not c, e, g and g#.
 
figure 4 describes the syntax of chords in backus-naur form.
 
now suppose we find chord names for the tones c, e and g. first, we easily find the chord c
consists of the tones c, e and g by looking up the base chord table shown above. therefore
‘c’ should be printed. we have one more chord name for those tones. the chord em obviously
represents the set of tones e, g and b. here, if you sharp the tone b, we have the set of tones
e, g and c. such modification can be specified by a tension, +5 in this case. thus ‘em(+5)’
should also be printed.
 figure 4: syntax of chords in bnf 




"
p01153,Gather on the Clock,"
there is a self-playing game called gather on the clock.
 
at the beginning of a game, a number of cards are placed on a ring. each card is labeled by a
value.
 
in each step of a game, you pick up any one of the cards on the ring and put it on the next one
in clockwise order. you will gain the score by the difference of the two values. you should deal
with the two cards as one card in the later steps. you repeat this step until only one card is left
on the ring, and the score of the game is the sum of the gained scores.
 
your task is to write a program that calculates the maximum score for the given initial state,
which specifies the values of cards and their placements on the ring.
 
the figure shown below is an example, in which the initial state is illustrated on the left, and
the subsequent states to the right. the picked cards are 1, 3 and 3, respectively, and the score
of this game is 6.
 figure 6: an illustrative play of gather on the clock 


"
p01154,Light The Room,"
you are given plans of rooms of polygonal shapes. the walls of the rooms on the plans are
placed parallel to either x-axis or y-axis. in addition, the walls are made of special materials so
they reflect light from sources as mirrors do, but only once. in other words, the walls do not
reflect light already reflected at another point of the walls.
 
now we have each room furnished with one lamp. walls will be illuminated by the lamp directly
or indirectly. however, since the walls reflect the light only once, some part of the walls may
not be illuminated.
 
you are requested to write a program that calculates the total length of unilluminated part of
the walls.
 figure 10: the room given as the second case in sample input 


"
p01155,Ruins,"
in 1936, a dictator hiedler who aimed at world domination had a deep obsession with the lost ark. a
person with this ark would gain mystic power according to legend. to break the ambition of the dictator,
acm (the alliance of crusaders against mazis) entrusted a secret task to an archeologist indiana johns.
indiana stepped into a vast and harsh desert to find the ark.
 
indiana finally found an underground treasure house at a ruin in the desert. the treasure house seems
storing the ark. however, the door to the treasure house has a special lock, and it is not easy to open
the door.
 
to open the door, he should solve a problem raised by two positive integers a and b inscribed on the door.
the problem requires him to find the minimum sum of squares of differences for all pairs of two integers
adjacent in a sorted sequence that contains four positive integers a1, a2 , b1 and b2 such that a = a1a2
and b = b1b2. note that these four integers does not need to be different. for instance, suppose 33 and
40 are inscribed on the door, he would have a sequence 3, 5, 8, 11 as 33 and 40 can be decomposed into
3 &times; 11 and 5 &times 8 respectively. this sequence gives the sum (5 - 3)2 + (8 - 5)2 + (11 - 8)2 = 22, which is
the smallest sum among all possible sorted sequences. this example is included as the first data set in
the sample input.
 
once indiana fails to give the correct solution, he will suffer a calamity by a curse. on the other hand,
he needs to solve the problem as soon as possible, since many pawns under hiedler are also searching
for the ark, and they might find the same treasure house. he will be immediately killed if this situation
happens. so he decided to solve the problem by your computer program.
 
your task is to write a program to solve the problem presented above.
 

"
p01156,Paper,"
rock-scissors-paper is a game played with hands and often used for random choice of a person for some
purpose. today, we have got an extended version, namely, hyper rock-scissors-paper (or hyper rsp
for short).
 
in a game of hyper rsp, the players simultaneously presents their hands forming any one of the following
15 gestures: rock, fire, scissors, snake, human, tree, wolf, sponge, paper, air, water, dragon, devil,
lightning, and gun.
 figure 1: hyper rock-scissors-paper 
the arrows in the figure above show the defeating relation. for example, rock defeats fire, scissors,
snake, human, tree, wolf, and sponge. fire defeats scissors, snake, human, tree, wolf, sponge, and
paper. generally speaking, each hand defeats other seven hands located after in anti-clockwise order in
the figure. a player is said to win the game if the player’s hand defeats at least one of the other hands,
and is not defeated by any of the other hands.
 
your task is to determine the winning hand, given multiple hands presented by the players.
 

"
p01157,Online Quiz System,"
icpc (internet contents providing company) is working on a killer game named quiz millionaire attack.
it is a quiz system played over the internet. you are joining icpc as an engineer, and you are responsible
for designing a protocol between clients and the game server for this system. as bandwidth assigned for
the server is quite limited, data size exchanged between clients and the server should be reduced as much
as possible. in addition, all clients should be well synchronized during the quiz session for a simultaneous
play. in particular, much attention should be paid to the delay on receiving packets.
 
to verify that your protocol meets the above demands, you have decided to simulate the communication
between clients and the server and calculate the data size exchanged during one game.
 
a game has the following process. first, players participating and problems to be used are fixed. all
players are using the same client program and already have the problem statements downloaded, so you
don’t need to simulate this part. then the game begins. the first problem is presented to the players,
and the players answer it within a fixed amount of time. after that, the second problem is presented,
and so forth. when all problems have been completed, the game ends. during each problem phase,
the players are notified of what other players have done. before you submit your answer, you can know
who have already submitted their answers. after you have submitted your answer, you can know what
answers are submitted by other players.
 
when each problem phase starts, the server sends a synchronization packet for problem-start to all the
players, and begins a polling process. every 1,000 milliseconds after the beginning of polling, the server
checks whether it received new answers from the players strictly before that moment, and if there are
any, sends a notification to all the players:
  if a player hasn’t submitted an answer yet, the server sends it a notification packet type a describing
  others’ answers about the newly received answers.  if a player is one of those who submitted the newly received answers, the server sends it a notification
  packet type b describing others’ answers about all the answers submitted by other players (i.e.
  excluding the player him/herself’s answer) strictly before that moment.  if a player has already submitted an answer, the server sends it a notification packet type b describing
  others’ answers about the newly received answers.  note that, in all above cases, notification packets (both types a and b) must contain information
  about at least one player, and otherwise a notification packet will not be sent.
 
when 20,000 milliseconds have passed after sending the synchronization packet for problem-start, the
server sends notification packets of type a or b if needed, and then sends a synchronization packet for
problem-end to all the players, to terminate the problem.
 
on the other hand, players will be able to answer the problem after receiving the synchronization packet
for problem-start and before receiving the synchronization packet for problem-end. answers will be sent
using an answer packet.
 
the packets referred above have the formats shown by the following tables.
 





"
p01158,Rock Man,"
you were the master craftsman in the stone age, and you devoted your life to carving many varieties of
tools out of natural stones. your works have ever been displayed respectfully in many museums, even in
2006 a.d. however, most people visiting the museums do not spend so much time to look at your works.
seeing the situation from the heaven, you brought back memories of those days you had frantically lived.
 
one day in your busiest days, you got a number of orders for making tools. each order requested one
tool which was different from the other orders. it often took some days to fill one order without special
tools. but you could use tools which you had already made completely, in order to carve new tools more
quickly. for each tool in the list of the orders, there was exactly one tool which could support carving it.
 
in those days, your schedule to fill the orders was not so efficient. you are now thinking of making the
most efficient schedule, i.e. the schedule for all orders being filled in the shortest days, using the program
you are going to write.
 

"
p01159,Autocorrelation Function,"
nathan o. davis is taking a class of signal processing as a student in engineering. today’s topic of the
class was autocorrelation. it is a mathematical tool for analysis of signals represented by functions or
series of values. autocorrelation gives correlation of a signal with itself. for a continuous real function
f(x), the autocorrelation function rf (r) is given by
 
where r is a real number.
 
the professor teaching in the class presented an assignment today. this assignment requires students
to make plots of the autocorrelation functions for given functions. each function is piecewise linear and
continuous for all real numbers. the figure below depicts one of those functions.
 
figure 1: an example of given functions
 
the professor suggested use of computer programs, but unfortunately nathan hates programming. so he
calls you for help, as he knows you are a great programmer. you are requested to write a program that
computes the value of the autocorrelation function where a function f(x) and a parameter r are given as
the input. since he is good at utilization of existing software, he could finish his assignment with your
program.
 

"
p01160,It Prefokery Pio,"
you are a member of a secret society named japanese abekobe group, which is called j. a. g. for short.
those who belong to this society often exchange encrypted messages. you received lots of encrypted
messages this morning, and you tried to decrypt them as usual. however, because you received so many
and long messages today, you had to give up decrypting them by yourself. so you decided to decrypt
them with the help of a computer program that you are going to write.
 
the encryption scheme in j. a. g. utilizes palindromes. a palindrome is a word or phrase that reads
the same in either direction. for example, “madam”, “reviver” and “succus” are palindromes,
while “adam”, “revenge” and “soccer” are not.
 
specifically to this scheme, words and phrases made of only one or two letters are not regarded as
palindromes. for example, “a” and “mm” are not regarded as palindromes.
 
the encryption scheme is quite simple: each message is encrypted by inserting extra letters in such a
way that the longest one among all subsequences forming palindromes gives the original message. in
other words, you can decrypt the message by extracting the longest palindrome subsequence. here, a
subsequence means a new string obtained by picking up some letters from a string without altering the
relative positions of the remaining letters. for example, the longest palindrome subsequence of a string
“ymaokdoamimhaadamma” is “madamimadam” as indicated below by underline.
 
now you are ready for writing a program.
 

"
p01161,Traffic,"
you are a resident of kyoot (oh, well, it’s not a misspelling!) city. all streets there are neatly built on a
grid; some streets run in a meridional (north-south) direction and others in a zonal (east-west) direction.
the streets that run from north to south are called avenues, whereas those which run from east to west
are called drives.
 
every avenue and drive in the city is numbered to distinguish one from another. the westernmost avenue
is called the 1st avenue. the avenue which lies next to the 1st avenue is the 2nd avenue, and so forth.
similarly, drives are numbered from south to north. the figure below illustrates this situation.
 
there is an intersection with traffic signals to regulate traffic on each crossing point of an avenue and a
drive. each traffic signal in this city has two lights. one of these lights is colored green, and means “you
may go”. the other is red, and means “you must stop here”. if you reached an intersection during the
red light (including the case where the light turns to red on your arrival), you must stop and wait there
until the light turns to green again. however, you do not have to wait in the case where the light has
just turned to green when you arrived there.
 
traffic signals are controlled by a computer so that the lights for two different directions always show
different colors. thus if the light for an avenue is green, then the light for a drive must be red, and vice
versa. in order to avoid car crashes, they will never be green together. nor will they be red together, for efficiency. so all the signals at one intersection turn simultaneously; no sooner does one signal turn to
red than the other turns to green. each signal has a prescribed time interval and permanently repeats
the cycle.
 figure 2: signal and intersection 
by the way, you are planning to visit your friend by car tomorrow. you want to see her as early as
possible, so you are going to drive through the shortest route. however, due to existence of the traffic
signals, you cannot easily figure out which way to take (the city also has a very sophisticated camera
network to prevent crime or violation: the police would surely arrest you if you didn’t stop on the red
light!). so you decided to write a program to calculate the shortest possible time to her house, given the
town map and the configuration of all traffic signals.
 
your car runs one unit distance in one unit time. time needed to turn left or right, to begin moving,
and to stop your car is negligible. you do not need to take other cars into consideration.

 

"
p01162,The Extreme Slalom,"
automobile company moving has developed a new ride for switchbacks. the most impressive feature of
this machine is its mobility that we can move and turn to any direction at the same speed.
 
as the promotion of the ride, the company started a new competition named the extreme slalom. a
course of the extreme slalom consists of some gates numbered from 1. each gate is represented by a line
segment. a rider starts at the first gate and runs to the last gate by going through or touching the gates
in the order of their numbers. going through or touching gates other than the target one is allowed but
not counted.
 
your team is going to participate at the next competition. to win the competition, it is quite important
to run on the shortest path. your task is to write a program that computes the shortest length to support
your colleagues.
 figure 1: an example course for the extreme slalom 


"
p01163,Space Coconut Crab II,"
a space hunter, ken marineblue traveled the universe, looking for the space coconut crab. the
space coconut crab was a crustacean known to be the largest in the universe. it was said that
the space coconut crab had a body of more than 400 meters long and a leg span of no shorter
than 1000 meters long. although there were numerous reports by people who saw the space
coconut crab, nobody have yet succeeded in capturing it.
 
after years of his intensive research, ken discovered an interesting habit of the space coconut
crab. surprisingly, the space coconut crab went back and forth between the space and the
hyperspace by phase drive, which was the latest warp technology. as we, human beings, was
not able to move to the hyperspace, he had to work out an elaborate plan to capture them.
fortunately, he found that the coconut crab took a long time to move between the hyperspace
and the space because it had to keep still in order to charge a sufficient amount of energy for
phase drive. he thought that he could capture them immediately after the warp-out, as they
moved so slowly in the space.
 
he decided to predict from the amount of the charged energy the coordinates in the space
where the space coconut crab would appear, as he could only observe the amount of the charged
energy by measuring the time spent for charging in the hyperspace. his recent spaceship,
weapon breaker, was installed with an artificial intelligence system, canel. she analyzed the
accumulated data and found another surprising fact; the space coconut crab always warped out
near to the center of a triangle that satisfied the following conditions:
 each vertex of the triangle was one of the planets in the universe; the length of every side of the triangle was a prime number; and the total length of the three sides of the triangle was equal to t, the time duration the
  space coconut crab had spent in charging energy in the hyperspace before moving to the
  space. 
canel also devised the method to determine the three planets comprising the triangle from
the amount of energy that the space coconut crab charged and the lengths of the triangle sides.
however, the number of the candidate triangles might be more than one.
 
ken decided to begin with calculating how many different triangles were possible, analyzing
the data he had obtained in the past research. your job is to calculate the number of different
triangles which satisfies the conditions mentioned above, for each given t.
 


"
p01164,Sort the Panels,"
there was an explorer henry nelson traveling all over the world. one day he reached an ancient
building. he decided to enter this building for his interest, but its entrance seemed to be locked
by a strange security system.
 
there were some black and white panels placed on a line at equal intervals in front of the
entrance, and a strange machine with a cryptogram attached. after a while, he managed to
read this cryptogram: this entrance would be unlocked when the panels were rearranged in a
certain order, and he needed to use this special machine to change the order of panels.
 
all he could do with this machine was to swap arbitrary pairs of panels. each swap could be
performed by the following steps:
 move the machine to one panel and mark it; move the machine to another panel and again mark it; then turn on a special switch of the machine to have the two marked panels swapped. 
it was impossible to have more than two panels marked simultaneously. the marks would be
erased every time the panels are swapped.
 
he had to change the order of panels by a number of swaps to enter the building. unfortunately,
however, the machine was so heavy that he didn’t want to move it more than needed. then
which steps could be the best?
 
your task is to write a program that finds the minimum cost needed to rearrange the panels,
where moving the machine between adjacent panels is defined to require the cost of one. you
can arbitrarily choose the initial position of the machine, and don’t have to count the cost for
moving the machine to that position.
 

"
p01165,Disarmament of the Units,"
this is a story in a country far away. in this country, two armed groups, acm and icpc, have
fought in the civil war for many years. however, today october 21, reconciliation was approved
between them; they have marked a turning point in their histories.
 
in this country, there are a number of roads either horizontal or vertical, and a town is built on
every endpoint and every intersection of those roads (although only one town is built at each
place). some towns have units of either acm or icpc. these units have become unneeded
by the reconciliation. so, we should make them disarm in a verifiable way simultaneously. all
disarmament must be carried out at the towns designated for each group, and only one unit can
be disarmed at each town. therefore, we need to move the units.
 
the command of this mission is entrusted to you. you can have only one unit moved by a
single order, where the unit must move to another town directly connected by a single road.
you cannot make the next order to any unit until movement of the unit is completed. the unit
cannot pass nor stay at any town another unit stays at. in addition, even though reconciliation
was approved, members of those units are still irritable enough to start battles. for these
reasons, two units belonging to different groups may not stay at towns on the same road. you
further have to order to the two groups alternatively, because ordering only to one group may
cause their dissatisfaction. in spite of this restriction, you can order to either group first.
 
your job is to write a program to find the minimum number of orders required to complete the
mission of disarmament.
 

"
p01166,So Sleepy,"
you have an appointment to meet a friend of yours today, but you are so sleepy because you
didn’t sleep well last night.
 
as you will go by trains to the station for the rendezvous, you can have a sleep on a train. you
can start to sleep as soon as you get on a train and keep asleep just until you get off. however,
because of your habitude, you can sleep only on one train on your way to the destination.
 
given the time schedule of trains as well as your departure time and your appointed time, your
task is to write a program which outputs the longest possible time duration of your sleep in a
train, under the condition that you can reach the destination by the appointed time.

 

"
p01167,Alice in Foxland,"

- the world is made of foxes; people with watchful eyes will find foxes in every
fragment of the world.

 
defoxyrenardnucleic acids (or dnas for short) and renardnucleic acids (or rnas) are similar
organic molecules contained in organisms. each of those molecules consists of a sequence of 26
kinds of nucleobases. we can represent such sequences as strings by having each lowercase letter
from ‘a’ to ‘z’ denote one kind of nucleobase. the only difference between dnas and rnas is
the way of those nucleobases being bonded.
 
in the year of 2323, prof. fuchs discovered that dnas including particular substrings act as
catalysts, that is, accelerate some chemical reactions. he further discovered that the reactions
are accelerated as the dnas have longer sequences. for example, dnas including the sequence
“fox” act as catalysts that accelerate dissolution of nitrogen oxides (nox ). the dnas “redfox”
and “cutefoxes” are two of the instances, and the latter provides more acceleration than the
former. on the other hand, the dna “foooox” will not be such a catalyst, since it does not
include “fox” as a substring.
 
dnas can be easily obtained by extraction from some plants such as glory lilies. however,
almost all of extracted molecules have different sequences each other, and we can obtain very
few molecules that act as catalysts. from this background, many scientists have worked for
finding a way to obtain the demanded molecules.
 
in the year of 2369, prof. hu finally discovered the following process:
    prepare two dnas x and y .  generate rnas x' and y' with their sequences copied from the dnas x and y respectively.  delete zero or more bases from x' using some chemicals to obtain an rna x''.  also delete zero or more bases from y' to obtain an rna y'' , which has the same sequence
   as x'' .  obtain a resulting dna z from the two rnas x'' and y''
   same sequence as x'' and y''. figure 1: new method for generation of dnas 
the point is use of rnas. it is difficult to delete specific bases on dnas but relatively easy on
rnas. on the other hand, since rnas are less stable than dnas, there is no known way to
obtain rnas directly from some organisms. this is why we obtain rnas from dnas.
 
alice is a researcher in tail environmental natural catalyst organization. she is now requested
to generate dnas with particular substrings, applying hu’s method to some pairs of dnas.
since longer dnas are preferred, she wants a means of knowing the longest possible dnas. so
she asked you for help.
 
your task is to write a program that outputs the sequence of the longest possible dna which
can be generated from the given pair of dnas x and y and contains the given substring c.
 


"
p01168,Lying about Your Age,"
you have moved to a new town. as starting a new life, you have made up your mind to do
one thing: lying about your age. since no person in this town knows your history, you don’t
have to worry about immediate exposure. also, in order to ease your conscience somewhat,
you have decided to claim ages that represent your real ages when interpreted as the base-m
numbers (2 &le; m &le; 16). people will misunderstand your age as they interpret the claimed age
as a decimal number (i.e. of the base 10).
 
needless to say, you don’t want to have your real age revealed to the people in the future. so
you should claim only one age each year, it should contain digits of decimal numbers (i.e. ‘0’
through ‘9’), and it should always be equal to or greater than that of the previous year (when
interpreted as decimal).
 
how old can you claim you are, after some years?
 

"
p01169,Turn Polygons,"
hcii, the health committee for interstellar intelligence, aims to take care of the health of every
interstellar intelligence.
 
staff of hcii uses a special equipment for health checks of patients. this equipment looks like a
polygon-shaped room with plenty of instruments. the staff puts a patient into the equipment,
then the equipment rotates clockwise to diagnose the patient from various angles. it fits many
species without considering the variety of shapes, but not suitable for big patients. furthermore,
even if it fits the patient, it can hit the patient during rotation.
 figure 1: the equipment used by hcii 
the interior shape of the equipment is a polygon with m vertices, and the shape of patients
is a convex polygon with n vertices. your job is to calculate how much you can rotate the
equipment clockwise without touching the patient, and output the angle in degrees.
 


"
p01170,Robots' Crash,"
prof. jenifer a. gibson is carrying out experiments with many robots. since those robots are
expensive, she wants to avoid their crashes during her experiments at her all effort. so she asked
you, her assistant, as follows.
 
“suppose that we have n (2 &le; n &le; 100000) robots of the circular shape with the radius of r,
and that they are placed on the xy-plane without overlaps. each robot starts to move straight
with a velocity of either v or -v simultaneously, say, at the time of zero. the robots keep their
moving infinitely unless i stop them. i’d like to know in advance if some robots will crash each
other. the robots crash when their centers get closer than the distance of 2r. i’d also like to
know the time of the first crash, if any, so i can stop the robots before the crash. well, could
you please write a program for this purpose?”
 

"
p01171,Everlasting...?,"
everlasting sa-ga, a new, hot and very popular role-playing game, is out on october 19, 2008.
fans have been looking forward to a new title of everlasting sa-ga.
 
little jimmy is in trouble. he is a seven-year-old boy, and he obtained the everlasting sa-ga
and is attempting to reach the end of the game before his friends. however, he is facing difficulty
solving the riddle of the first maze in this game -- everlasting sa-ga is notorious in extremely
hard riddles like neverending fantasy and forever quest.
 
the riddle is as follows. there are two doors on the last floor of the maze: the door to the
treasure repository and the gate to the hell. if he wrongly opens the door to the hell, the game
is over and his save data will be deleted. therefore, he should never open the wrong door.
 
so now, how can he find the door to the next stage? there is a positive integer given for each
door -- it is a great hint to this riddle. the door to the treasure repository has the integer that
gives the larger key number. the key number of a positive integer n is the largest prime factor
minus the total sum of any other prime factors, where the prime factors are the prime numbers
that divide into n without leaving a remainder. note that each prime factor should be counted
only once.
 
as an example, suppose there are doors with integers 30 and 20 respectively. since 30 has three
prime factors 2, 3 and 5, its key number is 5 - (2 + 3) = 0. similarly, since 20 has two prime
factors 2 and 5, its key number 20 is 5 - 2 = 3. jimmy therefore should open the door with 20.
 
your job is to write a program to help jimmy by solving this riddle.
 

"
p01172,Headstrong Student,"
you are a teacher at a cram school for elementary school pupils.
 
one day, you showed your students how to calculate division of fraction in a class of mathematics.
your lesson was kind and fluent, and it seemed everything was going so well - except for one
thing. after some experiences, a student max got so curious about how precise he could compute
the quotient. he tried many divisions asking you for a help, and finally found a case where
the answer became an infinite fraction. he was fascinated with such a case, so he continued
computing the answer. but it was clear for you the answer was an infinite fraction - no matter
how many digits he computed, he wouldn’t reach the end.
 
since you have many other things to tell in today’s class, you can’t leave this as it is. so you
decided to use a computer to calculate the answer in turn of him. actually you succeeded to
persuade him that he was going into a loop, so it was enough for him to know how long he could
compute before entering a loop.
 
your task now is to write a program which computes where the recurring part starts and the
length of the recurring part, for given dividend/divisor pairs. all computation should be done
in decimal numbers. if the specified dividend/divisor pair gives a finite fraction, your program
should treat the length of the recurring part as 0.
 

"
p01173,Dig or Climb,"
benjamin forest viii is a king of a country. one of his best friends nod lives in a village far from
his castle. nod gets seriously sick and is on the verge of death. benjamin orders his subordinate
red to bring good medicine for him as soon as possible. however, there is no road from the
castle to the village. therefore, red needs to climb over mountains and across canyons to reach
the village. he has decided to get to the village on the shortest path on a map, that is, he will
move on the straight line between the castle and the village. then his way can be considered as
polyline with n points (x1, y1) . . . (xn , yn ) as illustlated in the following figure.
 figure 1: an example route from the castle to the village 
here, xi indicates the distance between the castle and the point i, as the crow flies, and yi
indicates the height of the point i. the castle is located on the point (x1 , y1 ), and the village is
located on the point (xn , yn).
 
red can walk in speed vw . also, since he has a skill to cut a tunnel through a mountain
horizontally, he can move inside the mountain in speed vc.
 
your job is to write a program to the minimum time to get to the village.
 

"
p01174,Rotation Estimation,"
mr. nod is an astrologist and has defined a new constellation. he took two photos of the
constellation to foretell a future of his friend. the constellation consists of n stars. the shape
of the constellation in these photos are the same, but the angle of them are different because
these photos were taken on a different day. he foretells a future by the difference of the angle
of them.
 
your job is to write a program to calculate the difference of the angle of two constellation.
 

"
p01175,Optimal Rest,"
music macro language (mml) is a language for textual representation of musical scores. although there are various dialects of mml, all of them provide a set of commands to describe
scores, such as commands for notes, rests, octaves, volumes, and so forth.
 
in this problem, we focus on rests, i.e. intervals of silence. each rest command consists of a
command specifier ‘r’ followed by a duration specifier. each duration specifier is basically one
of the following numbers: ‘1’, ‘2’, ‘4’, ‘8’, ‘16’, ‘32’, and ‘64’, where ‘1’ denotes a whole (1), ‘2’
a half (1/2), ‘4’ a quarter (1/4), ‘8’ an eighth (1/8), and so on. this number is called the base
duration, and optionally followed by one or more dots. the first dot adds the duration by the
half of the base duration. for example, ‘4.’ denotes the duration of ‘4’ (a quarter) plus ‘8’ (an
eighth, i.e. the half of a quarter), or simply 1.5 times as long as ‘4’. in other words, ‘r4.’ is
equivalent to ‘r4r8’. in case with two or more dots, each extra dot extends the duration by the
half of the previous one. thus ‘4..’ denotes the duration of ‘4’ plus ‘8’ plus ‘16’, ‘4...’ denotes
the duration of ‘4’ plus ‘8’ plus ‘16’ plus ‘32’, and so on. the duration extended by dots cannot
be shorter than ‘64’. for exapmle, neither ‘64.’ nor ‘16...’ will be accepted since both of the
last dots indicate the half of ‘64’ (i.e. the duration of 1/128).
 
in this problem, you are required to write a program that finds the shortest expressions equivalent
to given sequences of rest commands.
 

"
p01176,Controlled Tournament,"
national association of tennis is planning to hold a tennis competition among professional
players. the competition is going to be a knockout tournament, and you are assigned the task
to make the arrangement of players in the tournament.
 
you are given the detailed report about all participants of the competition. the report contains
the results of recent matches between all pairs of the participants. examining the data, you’ve
noticed that it is only up to the opponent whether one player wins or not.
 
since one of your special friends are attending the competition, you want him to get the best
prize. so you want to know the possibility where he wins the gold medal. however it is not so
easy to figure out because there are many participants. you have decided to write a program
which calculates the number of possible arrangements of tournament in which your friend wins
the gold medal.
 
in order to make your trick hidden from everyone, you need to avoid making a factitive tourna-
ment tree. so you have to minimize the height of your tournament tree.
 

"
p01177,Entangled Tree,"
the electronics division in ishimatsu company consists of various development departments
for electronic devices including disks and storages, network devices, mobile phones, and many
others. each department covers a wide range of products. for example, the department of disks
and storages develops internal and external hard disk drives, usb thumb drives, solid-state
drives, and so on. this situation brings staff in the product management division difficulty
categorizing these numerous products because of their poor understanding of computer devices.
 
one day, a staff member suggested a tree-based diagram named a category diagram in order to
make their tasks easier. a category diagram is depicted as follows. firstly, they prepare one
large sheet of paper. secondly, they write down the names of the development departments
on the upper side of the sheet. these names represent the start nodes of the diagram. each
start node is connected to either a single split node or a single end node (these nodes will be
mentioned soon later). then they write down a number of questions that distinguish features
of products in the middle, and these questions represent the split nodes of the diagram. each
split node is connected with other split nodes and end nodes, and each line from a split node
is labeled with the answer to the question. finally, they write down all category names on the
lower side, which represents the end nodes.
 
the classification of each product is done like the following. they begin with the start node that
corresponds to the department developing the product. visiting some split nodes, they traces
the lines down until they reach one of the end nodes labeled with a category name. then they
find the product classified into the resultant category.
 
the visual appearance of a category diagram makes the diagram quite understandable even for
non-geek persons. however, product managers are not good at drawing the figures by hand, so
most of the diagrams were often messy due to many line crossings. for this reason, they hired
you, a talented programmer, to obtain the clean diagrams equivalent to their diagrams. here,
we mean the clean diagrams as those with no line crossings.
 
your task is to write a program that finds the clean diagrams. for simplicity, we simply ignore
the questions of the split nodes, and use integers from 1 to n instead of the category names.

 

"
p01178,Ramen Shop,"
ron is a master of a ramen shop.
 
recently, he has noticed some customers wait for a long time. this has been caused by lack of
seats during lunch time. customers loses their satisfaction if they waits for a long time, and
even some of them will give up waiting and go away. for this reason, he has decided to increase
seats in his shop. to determine how many seats are appropriate, he has asked you, an excellent
programmer, to write a simulator of customer behavior.
 
customers come to his shop in groups, each of which is associated with the following four
parameters:
  ti : when the group comes to the shop  pi : number of customers  wi : how long the group can wait for their seats  ei : how long the group takes for eating 
the i-th group comes to the shop with pi customers together at the time ti . if pi successive
seats are available at that time, the group takes their seats immediately. otherwise, they waits
for such seats being available. when the group fails to take their seats within the time wi
(inclusive) from their coming and strictly before the closing time, they give up waiting and go
away. in addition, if there are other groups waiting, the new group cannot take their seats until
the earlier groups are taking seats or going away.
 
the shop has n counters numbered uniquely from 1 to n. the i-th counter has ci seats. the
group prefers “seats with a greater distance to the nearest group.” precisely, the group takes
their seats according to the criteria listed below. here, sl denotes the number of successive
empty seats on the left side of the group after their seating, and sr the number on the right
side. sl and sr are considered to be infinity if there are no other customers on the left side
and on the right side respectively.
  prefers seats maximizing min{sl, sr}.  if there are multiple alternatives meeting the first criterion, prefers seats maximizing
   max{sl, sr}.  if there are still multiple alternatives, prefers the counter of the smallest number.  if there are still multiple alternatives, prefers the leftmost seats. 
when multiple groups are leaving the shop at the same time and some other group is waiting
for available seats, seat assignment for the waiting group should be made after all the finished
groups leave the shop.
 
your task is to calculate the average satisfaction over customers. the satisfaction of a customer
in the i-th group is given as follows:
   if the group goes away without eating, -1.  otherwise, (wi - ti )/wi where ti is the actual waiting time for the i-th group (the value ranges between 0 to 1 inclusive). 



"
p01179,Cousin's Aunt,"
sarah is a girl who likes reading books.
 
one day, she wondered about the relationship of a family in a mystery novel. the story said,
 b is a’s father’s brother’s son, and c is b’s aunt. 
then she asked herself, “so how many degrees of kinship are there between a and c?”
 
there are two possible relationships between b and c, that is, c is either b’s father’s sister or
b’s mother’s sister in the story. if c is b’s father’s sister, c is in the third degree of kinship to
a (a’s father’s sister). on the other hand, if c is b’s mother’s sister, c is in the fifth degree of
kinship to a (a’s father’s brother’s wife’s sister).
 
you are a friend of sarah’s and good at programming. you can help her by writing a general
program to calculate the maximum and minimum degrees of kinship between a and c under
given relationship.
 
the relationship of a and c is represented by a sequence of the following basic relations: father,
mother, son, daughter, husband, wife, brother, sister, grandfather, grandmother, grandson,
granddaughter, uncle, aunt, nephew, and niece. here are some descriptions about these relations:
 x’s brother is equivalent to x’s father’s or mother’s son not identical to x. x’s grandfather is equivalent to x’s father’s or mother’s father. x’s grandson is equivalent to x’s son’s or daughter’s son. x’s uncle is equivalent to x’s father’s or mother’s brother. x’s nephew is equivalent to x’s brother’s or sister’s son. similar rules apply to sister, grandmother, granddaughter, aunt and niece. 
in this problem, you can assume there are none of the following relations in the family: adoptions,
marriages between relatives (i.e. the family tree has no cycles), divorces, remarriages, bigamous
marriages and same-sex marriages.
 
the degree of kinship is defined as follows:
  the distance from x to x’s father, x’s mother, x’s son or x’s daughter is one.  the distance from x to x’s husband or x’s wife is zero.  the degree of kinship between x and y is equal to the shortest distance from x to y
  deduced from the above rules. 


"
p01180,The Closest Circle,"
you are given n non-overlapping circles in xy-plane. the radius of each circle varies, but the radius of
the largest circle is not double longer than that of the smallest.
 figure 1: the sample input 
the distance between two circles c1 and c2 is given by the usual formula
 
where (xi, yi ) is the coordinates of the center of the circle ci, and ri is the radius of ci, for i = 1, 2.
 
your task is to write a program that finds the closest pair of circles and print their distance.
 


"
p01181,Moduic Squares,"
have you ever heard of moduic squares? they are like 3 &times; 3 magic squares, but each of them has one
extra cell called a moduic cell. hence a moduic square has the following form.
 figure 1: a moduic square 
each of cells labeled from a to j contains one number from 1 to 10, where no two cells contain the same
number. the sums of three numbers in the same rows, in the same columns, and in the diagonals in the
3 &times 3 cells must be congruent modulo the number in the moduic cell. here is an example moduic square:
 figure 2: an example moduic square 
you can easily see that all the sums are congruent to 0 modulo 5.
 
now, we can consider interesting puzzles in which we complete moduic squares with partially filled cells.
for example, we can complete the following square by filling 4 into the empty cell on the left and 9 on
the right. alternatively, we can also complete the square by filling 9 on the left and 4 on the right. so
this puzzle has two possible solutions.

 figure 3: a moduic square as a puzzle 
your task is to write a program that determines the number of solutions for each given puzzle.
 

"
p01182,Restaurant,"
steve runs a small restaurant in a city. also, as he is the only cook in his restaurant, he cooks everything
ordered by customers.
 
basically he attends to orders by first-come-first-served principle. he takes some prescribed time to
prepare each dish. as a customer can order more than one dish at a time, steve starts his cooking with
the dish that takes the longest time to prepare. in case that there are two or more dishes that take
the same amount of time to prepare, he makes these dishes in the sequence as listed in the menu card
of his restaurant. note that he does not care in which order these dishes have been ordered. when he
completes all dishes ordered by a customer, he immediately passes these dishes to the waitress and has
them served to the customer. time for serving is negligible.
 
on the other hand, during his cooking for someone’s order, another customer may come and order dishes.
for his efficiency, he decided to prepare together multiple dishes of the same if possible. when he starts
cooking for new dishes, he looks over the orders accepted by that time (including the order accepted
exactly at that time if any), and counts the number of the same dishes he is going to cook next. time
required for cooking is the same no matter how many dishes he prepare at once. unfortunately, he has
only limited capacity in the kitchen, and hence it is sometimes impossible that the requested number of
dishes are prepared at once. in such cases, he just prepares as many dishes as possible.
 
your task is to write a program that simulates the restaurant. given a list of dishes in the menu card
and orders from customers with their accepted times, your program should output a list of times when
each customer is served.
 

"
p01183,Tetrahedra,"
peter p. pepper is facing a difficulty.
 
after fierce battles with the principality of croode, the aaronbarc kingdom, for which he serves, had
the last laugh in the end. peter had done great service in the war, and the king decided to give him a
big reward. but alas, the mean king gave him a hard question to try his intelligence. peter is given a
number of sticks, and he is requested to form a tetrahedral vessel with these sticks. then he will be, said
the king, given as much patas (currency in this kingdom) as the volume of the vessel. in the situation,
he has only to form a frame of a vessel.
 figure 1: an example tetrahedron vessel 
the king posed two rules to him in forming a vessel: (1) he need not use all of the given sticks, and (2)
he must not glue two or more sticks together in order to make a longer stick.
 
needless to say, he wants to obtain as much patas as possible. thus he wants to know the maximum
patas he can be given. so he called you, a friend of him, and asked to write a program to solve the
problem.
 


"
p01184,International Party,"
isaac h. ives is attending an international student party (maybe for girl-hunting). students there enjoy
talking in groups with excellent foods and drinks. however, since students come to the party from all
over the world, groups may not have a language spoken by all students of the group. in such groups,
some student(s) need to work as interpreters, but intervals caused by interpretation make their talking
less exciting.
 
needless to say, students want exciting talks. to have talking exciting as much as possible, isaac proposed
the following rule: the number of languages used in talking should be as little as possible, and not exceed
five. many students agreed with his proposal, but it is not easy for them to find languages each student
should speak. so he calls you for help.
 
your task is to write a program that shows the minimum set of languages to make talking possible, given
lists of languages each student speaks.
 

"
p01185,seek,"
hide-and-seek is a children’s game. players hide here and there, and one player called it tries to find all
the other players.
 
now you played it and found all the players, so it’s turn to hide from it. since you have got tired of
running around for finding players, you don’t want to play it again. so you are going to hide yourself at
the place as far as possible from it. but where is that?
 
your task is to find the place and calculate the maximum possible distance from it to the place to hide.
 

"
p01186,TV Watching,"
you are addicted to watching tv, and you watch so many tv programs every day. you have been in
trouble recently: the airtimes of your favorite tv programs overlap.
 
fortunately, you have both a tv and a video recorder at your home. you can therefore watch a program
on air while another program (on a different channel) is recorded to a video at the same time. however,
it is not easy to decide which programs should be watched on air or recorded to a video. as you are a
talented computer programmer, you have decided to write a program to find the way of watching tv
programs which gives you the greatest possible satisfaction.
 
your program (for a computer) will be given tv listing of a day along with your score for each tv
program. each score represents how much you will be satisfied if you watch the corresponding tv
program on air or with a video. your program should compute the maximum possible sum of the scores
of the tv programs that you can watch.
 

"
p01187,Make Friendships,"
isaac h. ives attended an international student party and made a lot of girl friends (as many other persons
expected). to strike up a good friendship with them, he decided to have dates with them. however, it
is hard for him to schedule dates because he made so many friends. thus he decided to find the best
schedule using a computer program. the most important criterion in scheduling is how many different
girl friends he will date. of course, the more friends he will date, the better the schedule is. however,
though he has the ability to write a program finding the best schedule, he doesn’t have enough time to
write it.
 
your task is to write a program to find the best schedule instead of him.
 

"
p01188,Slippy Floors,"
the princess of the fancy kingdom has been loved by many people for her lovely face. however the
witch of the snow world has been jealous of the princess being loved. for her jealousy, the witch has
shut the princess into the ice tower built by the witch’s extreme magical power.
 
as the ice tower is made of cubic ice blocks that stick hardly, the tower can be regarded to be composed
of levels each of which is represented by a 2d grid map. the only way for the princess to escape from the
tower is to reach downward stairs on every level. however, many magical traps set by the witch obstruct
her moving ways. in addition, because of being made of ice, the floor is so slippy that movement of the
princess is very restricted. to be precise, the princess can only press on one adjacent wall to move against
the wall as the reaction. she is only allowed to move in the vertical or horizontal direction, not in the
diagonal direction. moreover, she is forced to keep moving without changing the direction until she is
prevented from further moving by the wall, or she reaches a stairway or a magical trap. she must avoid
the traps by any means because her being caught by any of these traps implies her immediate death by
its magic. these restriction on her movement makes her escape from the tower impossible, so she would
be frozen to death without any help.
 
you are a servant of the witch of the snow world, but unlike the witch you love the princess as many other
people do. so you decided to help her with her escape. however, if you would go help her directly in the
ice tower, the witch would notice your act to cause your immediate death along with her. considering
this matter and your ability, all you can do for her is to generate snowmans at arbitrary places (grid
cells) neither occupied by the traps nor specified as the cell where the princess is initially placed. these
snowmans are equivalent to walls, thus the princess may utilize them for her escape. on the other hand,
your magical power is limited, so you should generate the least number of snowmans needed for her
escape.
 
you are required to write a program that solves placement of snowmans for given a map on each level,
such that the number of generated snowmans are minimized.
 

"
p01189,Roads in a City,"
roads in a city play important roles in development of the city. once a road is built, people start their
living around the road. a broader road has a bigger capacity, that is, people can live on a wider area
around the road.
 
interstellar conglomerate of plantation and colonization (icpc) is now planning to develop roads on
a new territory. the new territory is a square and is completely clear. icpc has already made several
plans, but there are some difficulties in judging which plan is the best.
 
therefore, icpc has collected several great programmers including you, and asked them to write programs
that compute several metrics for each plan. fortunately your task is a rather simple one. you are asked to
compute the area where people can live from the given information about the locations and the capacities
of the roads.
 
the following figure shows the first plan given as the sample input.
 figure 1: the first plan given as the sample input 


"
p01190,Reading Brackets in English,"
shun and his professor are studying lisp and s-expressions. shun is in tokyo in order to make a presen-
tation of their research. his professor cannot go with him because of another work today.
 
he was making final checks for his slides an hour ago. then, unfortunately, he found some serious
mistakes! he called his professor immediately since he did not have enough data in his hand to fix the
mistakes.
 
their discussion is still going on now. the discussion looks proceeding with difficulty. most of their data
are written in s-expressions, so they have to exchange s-expressions via telephone.
 
your task is to write a program that outputs s-expressions represented by a given english phrase.
 

"
p01191,Grated Radish,"
grated radish (daikon-oroshi) is one of the essential spices in japanese cuisine. as the name shows, it’s
made by grating white radish.
 
you are developing an automated robot for grating radish. you have finally finished developing mechan-
ical modules that grates radish according to given instructions from the microcomputer. so you need to
develop the software in the microcomputer that controls the mechanical modules. as the first step, you
have decided to write a program that simulates the given instructions and predicts the resulting shape of
the radish.
 

"
p01192,Greedy,"
once upon a time, there lived a dumb king. he always messes things up based on his whimsical ideas.
this time, he decided to renew the kingdom’s coin system. currently the kingdom has three types of
coins of values 1, 5, and 25. he is thinking of replacing these with another set of coins.
 
yesterday, he suggested a coin set of values 7, 77, and 777. “they look so fortunate, don’t they?” said
he. but obviously you can’t pay, for example, 10, using this coin set. thus his suggestion was rejected.
 
today, he suggested a coin set of values 1, 8, 27, and 64. “they are all cubic numbers. how beautiful!”
but another problem arises: using this coin set, you have to be quite careful in order to make changes
efficiently. suppose you are to make changes for a value of 40. if you use a greedy algorithm, i.e.
continuously take the coin with the largest value until you reach an end, you will end up with seven
coins: one coin of value 27, one coin of value 8, and five coins of value 1. however, you can make
changes for 40 using five coins of value 8, which is fewer. this kind of inefficiency is undesirable, and
thus his suggestion was rejected again.
 
tomorrow, he would probably make another suggestion. it’s quite a waste of time dealing with him, so
let’s write a program that automatically examines whether the above two conditions are satisfied.
 

"
p01193,First Experience,"
after spending long long time, you had gotten tired of computer programming. instead you were inter-
ested in electronic construction. as your first work, you built a simple calculator. it can handle positive
integers of up to four decimal digits, and perform addition, subtraction and multiplication of numbers.
you didn’t implement division just because it was so complicated. although the calculator almost worked
well, you noticed that it displays unexpected results in several cases. so, you decided to try its simulation
by a computer program in order to figure out the cause of unexpected behaviors.
 
the specification of the calculator you built is as follows. there are three registers on the calculator. the
register r1 stores the value of the operation result of the latest operation; the register r2 stores the new
input value; and the register r3 stores the input operator. at the beginning, both r1 and r2 hold zero,
and r3 holds a null operator. the calculator has keys for decimal digits from ‘0’ to ‘9’ and operators
‘+’, ‘-’, ‘&times;’ and ‘=’. the four operators indicate addition, subtraction, multiplication and conclusion,
respectively. when a digit key is pressed, r2 is multiplied by ten, and then added by the pressed digit
(as a number). when ‘+’, ‘-’ or ‘&times;’ is pressed, the calculator first applies the binary operator held in r3
to the values in r1 and r2 and updates r1 with the result of the operation. suppose r1 has 10, r2 has
3, and r3 has ‘-’ (subtraction operator), r1 is updated with 7 ( = 10 - 3). if r3 holds a null operator,
the result will be equal to the value of r2. after r1 is updated, r2 is cleared to zero and r3 is set to the
operator which the user entered. ‘=’ indicates termination of a computation. so, when ‘=’ is pressed,
the calculator applies the operator held in r3 in the same manner as the other operators, and displays the
final result to the user. after the final result is displayed, r3 is reinitialized with a null operator.
 
the calculator cannot handle numbers with five or more decimal digits. because of that, if the intermediate computation produces a value less than 0 (i.e., a negative number) or greater than 9999, the calculator
displays “e” that stands for error, and ignores the rest of the user input until ‘=’ is pressed.
 
your task is to write a program to simulate the simple calculator.
 

"
p01194,Web 0.5,"
in a forest, there lived a spider named tim. tim was so smart that he created a huge, well-structured web.
surprisingly, his web forms a set of equilateral and concentric n-sided polygons whose edge lengths
form an arithmetic sequence.
 figure 1: an example web of tim 
corresponding vertices of the n-sided polygons lie on a straight line, each apart from neighboring ver-
tices by distance 1. neighboring vertices are connected by a thread (shown in the figure as solid lines),
on which tim can walk (you may regard tim as a point). radial axes are numbered from 1 to n in a
rotational order, so you can denote by (r, i) the vertex on axis i and apart from the center of the web by
distance r. you may consider the web as infinitely large, i.e. consisting of infinite number of n-sided
polygons, since the web is so gigantic.
 
tim’s web is thus marvelous, but currently has one problem: due to rainstorms, some of the threads are
damaged and tim can’t walk on those parts.
 
now, a bug has been caught on the web. thanks to the web having so organized a structure, tim accu-
rately figures out where the bug is, and heads out for that position. you, as a biologist, are interested in
whether tim is smart enough to move through the shortest possible route. to judge that, however, you
need to know the length of the shortest route yourself, and thereby decided to write a program which
calculates that length.
 


"
p01195,Philosopher's Stone,"
in search for wisdom and wealth, alchemy, the art of transmutation, has long been pursued by people.
the crucial point of alchemy was considered to find the recipe for philosopher’s stone, which will be a
catalyst to produce gold and silver from common metals, and even medicine giving eternal life.
 
alchemists owned alchemical reactors, symbols of their profession. each recipe of alchemy went like
this: gather appropriate materials; melt then mix them in your reactor for an appropriate period; then
you will get the desired material along with some waste.
 
a long experience presented two natural laws, which are widely accepted among alchemists. one is the
law of conservation of mass, that is, no reaction can change the total mass of things taking part. because
of this law, in any alchemical reaction, mass of product is not greater than the sum of mass of materials.
the other is the law of the directionality in alchemical reactions. this law implies, if the matter a
produces the matter b, then the matter a can never be produced using the matter b.
 
one night, demiurge, the master of alchemists, revealed the recipe of philosopher’s stone to have every
alchemist’s dream realized. since this night, this ultimate recipe, which had been sought for centuries,
has been an open secret.
 
alice and betty were also alchemists who had been seeking the philosopher’s stone and who were told
the ultimate recipe in that night. in addition, they deeply had wanted to complete the philosopher’s stone
earlier than any other alchemists, so they began to solve the way to complete the recipe in the shortest
time.
 
your task is write a program that computes the smallest number of days needed to complete the philoso-
pher’s stone, given the recipe of philosopher’s stone and materials in their hands.
 

"
p01196,The Phantom,"
mr. hoge is in trouble. he just bought a new mansion, but it’s haunted by a phantom. he asked a famous conjurer
dr. huga to get rid of the phantom. dr. huga went to see the mansion, and found that the phantom is scared by
its own mirror images. dr. huga set two flat mirrors in order to get rid of the phantom.
 
as you may know, you can make many mirror images even with only two mirrors. you are to count up the
number of the images as his assistant. given the coordinates of the mirrors and the phantom, show the number
of images of the phantom which can be seen through the mirrors.

 

"
p01197,Rakunarok,"
you are deeply disappointed with the real world, so you have decided to live the rest of your life in the world of
mmorpg (massively multi-player online role playing game). you are no more concerned about the time you
spend in the game: all you need is efficiency.
 
one day, you have to move from one town to another. in this game, some pairs of towns are connected by roads
where players can travel. various monsters will raid players on roads. however, since you are a high-level player,
they are nothing but the source of experience points. every road is bi-directional. a path is represented by a
sequence of towns, where consecutive towns are connected by roads.
 
you are now planning to move to the destination town through the most efficient path. here, the efficiency of a
path is measured by the total experience points you will earn in the path divided by the time needed to travel the
path.
 
since your object is moving, not training, you choose only a straightforward path. a path is said straightforward
if, for any two consecutive towns in the path, the latter is closer to the destination than the former. the distance
of two towns is measured by the shortest time needed to move from one town to another.
 
write a program to find a path that gives the highest efficiency.
 

"
p01198,Dock to the Future,"
you had long wanted a spaceship, and finally you bought a used one yesterday! you have heard that the most
difficult thing on spaceship driving is to stop your ship at the right position in the dock. of course you are no
exception. after a dozen of failures, you gave up doing all the docking process manually. you began to write a
simple program that helps you to stop a spaceship.
 
first, you somehow put the spaceship on the straight course to the dock manually. let the distance to the limit
line be x[m], and the speed against the dock be v[m/s]. now you turn on the decelerating rocket. then, your
program will control the rocket to stop the spaceship at the best position.
 
your spaceship is equipped with a decelerating rocket with n modes. when the spaceship is in mode-i (0 &le; i &lt; n),
the deceleration rate is ai[m/s2]. you cannot re-accelerate the spaceship. the accelerating rocket is too powerful
to be used during docking. also, you cannot turn off-and-on the decelerating rocket, because your spaceship is a
used and old one, once you stopped the rocket, it is less certain whether you can turn it on again. in other words,
the time you turn off the rocket is the time you stop your spaceship at the right position.
 
after turning on the deceleration rocket, your program can change the mode or stop the rocket at every sec-
ond, starting at the very moment the deceleration began. given x and v, your program have to make a plan of
deceleration. the purpose and the priority of your program is as follows:
  stop the spaceship exactly at the limit line. if this is possible, print “perfect”.  if it is impossible, then stop the spaceship at the position nearest possible to the limit line, but before the
   line. in this case, print “good d”, where d is the distance between the limit line and the stopped position.
   print three digits after the decimal point.  if it is impossible again, decelerate the spaceship to have negative speed, and print “try again”.  if all of these three cases are impossible, then the spaceship cannot avoid overrunning the limit line. in this
   case, print “crash”. 


"
p01199,Flame of Nucleus,"
year 20xx — a nuclear explosion has burned the world. half the people on the planet have died. fearful.
 
one city, fortunately, was not directly damaged by the explosion. this city consists of n domes (numbered 1
through n inclusive) and m bidirectional transportation pipelines connecting the domes. in dome i, pi citizens
reside currently and there is a nuclear shelter capable of protecting ki citizens. also, it takes di days to travel
from one end to the other end of pipeline i.
 
it has been turned out that this city will be polluted by nuclear radiation in l days after today. so each citizen
should take refuge in some shelter, possibly traveling through the pipelines. citizens will be dead if they reach
their shelters in exactly or more than l days.
 
how many citizens can survive at most in this situation?
 

"
p01200,Resource,"
dr. keith miller is a researcher who studies the history of island of constitutional people’s country (icpc).
many studies by him and his colleagues have revealed various facts about icpc. although it is a single large
island today, it was divided in several smaller islands in some ancient period, and each island was ruled by a
king. in addition to the islands, there were several resource regions on the sea, and people living in the islands
used energy resource obtained in those regions.
 
recently dr. miller discovered some ancient documents that described the agreements made among the kings.
some of them focused on resource regions, and can be summarized as follows: each island was allowed to mine
resource only in its exclusive resource zone (erz). the erz of each island was defined as a sea area within an
agreed distance d from the boundary of the island. in case areas occur where more than one erz overwrapped,
such areas were divided by equidistant curves, and each divided area belonged to the erz of the nearest island.
 
now dr. miller wants to know how much resource allocated to each island, which will help him to grasp the
power balance among the islands. for that purpose, he called you as a talented programmer. your task is to write
a program that makes rough estimation about the amount of resource available for each island. for simplicity,
the world map is represented on a two-dimensional plane, where each of the islands and the resource regions
is represented as a convex polygon. because of the difference in the resource deposit among the regions, the
amount of resource per unit area is also given for each region. in this settings, the amount of resource available
in a (partial) area of a region is given by &lt;the amount per unit area&gt; &times &lt;the area size&gt;. the total amount of resource
for each island is given by the sum of the amount of resource available in all (partial) areas of the regions included
in the erz.

 

"
p01201,Exact Arithmetic,"
                                                                 
let x be a set of all rational numbers and all numbers of form q&radic;r, where q is a non-zero rational number and r
is an integer greater than 1. here r must not have a quadratic number except for 1 as its divisor. also, let x* be a
set of all numbers which can be expressed as a sum of one or more elements in x.
 
a machine y is a stack-based calculator which operates on the values in x* and has the instructions shown in the table below.
 push n pushes an integer specified in the operand onto the stack. add pops two values x1 and x2 from the top of the stack in this order, then pushes (x2 + x1). sub pops two values x1 and x2 from the top of the stack in this order, then pushes (x2 - x1 ). mul pops two values x1 and x2 from the top of the stack in this order, then pushes (x2 &times x1 ).
 div pops two values x1 and x2 from the top of the stack in this order, then pushes (x2 &divide; x1).
x1 must be a non-zero value in x (not x*).
 sqrt pops one value x from the stack and pushes the square root of x. x must be a non-negative rational number.
 disp pops one value x from the stack, and outputs the string representation of the value x to the display. the representation rules are stated later.
 stop terminates calculation. the stack must be empty when this instruction is called.
 table 1: instruction set for the machine y 
a sufficient number of values must exist in the stack on execution of every instruction. in addition, due to the
limitation of the machine y, no more values can be pushed when the stack already stores as many as 256 values.
also, there exist several restrictions on values to be pushed onto the stack:
  for rational numbers, neither numerator nor denominator in the irreducible form may exceed 32,768 in its absolute value.  for any element in x of the form q&radic;r = (a/b)&radic;r, |a&radic;r| &le; 32,768 and |b| &le; 32,768. 
the rules for the string representations of the values (on the machine y) are as follows:
  a rational number is represented as either an integer or an irreducible fraction with a denominator greater
  than 1. a fraction is represented as ""&lt;numerator&gt;/&lt;denominator&gt;"". a sign symbol - precedes in case of a negative number.  a number of the form q&radic;r is represented as ""&lt;string representation of q&gt;*sqrt(r)"" except for the case
  with q = &plusmn;1, in which the number is represented as ""sqrt(r)"" (q = 1) or ""-sqrt(r)"" (q = -1).  for the sum of two or more elements of x, string representations of all the (non-zero) elements are con-
  nected using the binary operator +. in this case, all terms with the same rooted number are merged into a
  single term, and the terms must be shown in the ascending order of its root component. for the purpose of
  this rule, all rational numbers are regarded to accompany &radic;1.  there is exactly one space character before and after each of the binary operator +. no space character appears at any other place. 
the followings are a few examples of valid string representations:
 
your task is to write a program that simulates the machine y.
 

"
p01202,Dance Dance Revolution,"
dance dance revolution is one of the most popular arcade games in japan. the rule of this game is very
simple. a series of four arrow symbols, up, down, left and right, flows downwards on the screen in time
to music. the machine has four panels under your foot, each of which corresponds to one of the four
arrows, and you have to make steps on these panels according to the arrows displayed on the screen. the
more accurate in timing, the higher score you will mark.
 figure 1: layout of arrow panels and screen 
each series of arrows is commonly called a score. difficult scores usually have hundreds of arrows, and
newbies will often be scared when seeing those arrows fill up the monitor screen. conversely, scores
with fewer arrows are considered to be easy ones.
 
one day, a friend of yours, who is an enthusiast of this game, asked you a favor. what he wanted is an
automated method to see if given scores are natural. a score is considered as natural when there is a
sequence of steps that meets all the following conditions:
  left-foot steps and right-foot steps appear in turn;  the same panel is not stepped on any two consecutive arrows;  his or her legs never cross each other. 
your task is to write a program that determines whether scores are natural ones.
 

"
p01203,Compress Files,"
your computer is a little old-fashioned. its cpu is slow, its memory is not enough, and its hard drive is
near to running out of space. it is natural for you to hunger for a new computer, but sadly you are not so
rich. you have to live with the aged computer for a while.
 
at present, you have a trouble that requires a temporary measure immediately. you downloaded a new
software from the internet, but failed to install due to the lack of space. for this reason, you have decided
to compress all the existing files into archives and remove all the original uncompressed files, so more
space becomes available in your hard drive.
 
it is a little complicated task to do this within the limited space of your hard drive. you are planning to
make free space by repeating the following three-step procedure:
  choose a set of files that have not been compressed yet.  compress the chosen files into one new archive and save it in your hard drive. note that this step
        needs space enough to store both of the original files and the archive in your hard drive.  remove all the files that have been compressed. 
for simplicity, you don’t take into account extraction of any archives, but you would like to reduce the
number of archives as much as possible under this condition. your task is to write a program to find the
minimum number of archives for each given set of uncompressed files.
 

"
p01204,Save the Energy,"
you were caught in a magical trap and transferred to a strange field due to its cause. this field is three-
dimensional and has many straight paths of infinite length. with your special ability, you found where
you can exit the field, but moving there is not so easy. you can move along the paths easily without your
energy, but you need to spend your energy when moving outside the paths. one unit of energy is required
per distance unit. as you want to save your energy, you have decided to find the best route to the exit
with the assistance of your computer.
 
your task is to write a program that computes the minimum amount of energy required to move between
the given source and destination. the width of each path is small enough to be negligible, and so is your
size.
 

"
p01205,Goofy Converter,"
nathan o. davis is a student at the department of integrated systems. he is now taking a class in in-
tegrated curcuits. he is an idiot. one day, he got an assignment as follows: design a logic circuit that
takes a sequence of positive integers as input, and that outputs a sequence of 1-bit integers from which
the original input sequence can be restored uniquely.
 
nathan has no idea. so he searched for hints on the internet, and found several pages that describe the
1-bit dac. this is a type of digital-analog converter which takes a sequence of positive integers as input,
and outputs a sequence of 1-bit integers.
 
seeing how 1-bit dac works on these pages, nathan came up with a new idea for the desired converter.
his converter takes a sequence l of positive integers, and a positive integer m aside from the sequence,
and outputs a sequence k of 1-bit integers such that:
 
he is not so smart, however. it is clear that his converter does not work for some sequences. your task is
to write a program in order to show the new converter cannot satisfy the requirements of his assignment,
even though it would make nathan in despair.

 

"
p01206,Black Force,"
a dam construction project was designed around an area called black force. the area is surrounded by
mountains and its rugged terrain is said to be very suitable for constructing a dam.
 
however, the project is now almost pushed into cancellation by a strong protest campaign started by the
local residents. your task is to plan out a compromise proposal. in other words, you must find a way to
build a dam with sufficient capacity, without destroying the inhabited area of the residents.
 
the map of black force is given as h &times; w cells (0 &lt; h, w &le; 20). each cell hi, j is a positive integer
representing the height of the place. the dam can be constructed at a connected region surrounded
by higher cells, as long as the region contains neither the outermost cells nor the inhabited area of the
residents. here, a region is said to be connected if one can go between any pair of cells in the region
by following a sequence of left-, right-, top-, or bottom-adjacent cells without leaving the region. the
constructed dam can store water up to the height of the lowest surrounding cell. the capacity of the dam
is the maximum volume of water it can store. water of the depth of 1 poured to a single cell has the
volume of 1.
 
the important thing is that, in the case it is difficult to build a sufficient large dam, it is allowed to
choose (at most) one cell and do groundwork to increase the height of the cell by 1 unit. unfortunately,
considering the protest campaign, groundwork of larger scale is impossible. needless to say, you cannot
do the groundwork at the inhabited cell.
 
given the map, the required capacity, and the list of cells inhabited, please determine whether it is possible
to construct a dam.
 

"
p01207,Hit and Blow,"
hit and blow is a popular code-breaking game played by two people, one codemaker and one
codebreaker. the objective of this game is that the codebreaker guesses correctly a secret
number the codemaker makes in his or her mind.
 
the game is played as follows. the codemaker first chooses a secret number that consists of
four different digits, which may contain a leading zero. next, the codebreaker makes the first
attempt to guess the secret number. the guessed number needs to be legal (i.e. consist of four
different digits). the codemaker then tells the numbers of hits and blows to the codebreaker.
hits are the matching digits on their right positions, and blows are those on different positions.
for example, if the secret number is 4321 and the guessed is 2401, there is one hit and two blows
where 1 is a hit and 2 and 4 are blows. after being told, the codebreaker makes the second
attempt, then the codemaker tells the numbers of hits and blows, then the codebreaker makes
the third attempt, and so forth. the game ends when the codebreaker gives the correct number.
 
your task in this problem is to write a program that determines, given the situation, whether
the codebreaker can logically guess the secret number within the next two attempts. your
program will be given the four-digit numbers the codebreaker has guessed, and the responses
the codemaker has made to those numbers, and then should make output according to the
following rules:
  if only one secret number is possible, print the secret number;  if more than one secret number is possible, but there are one or more critical numbers,
      print the smallest one;  otherwise, print “????” (four question symbols). 
here, critical numbers mean those such that, after being given the number of hits and blows for
them on the next attempt, the codebreaker can determine the secret number uniquely.

 

"
p01208,Turn Left,"
taro got a driver’s license with a great effort in his campus days, but unfortunately there had
been no opportunities for him to drive. he ended up obtaining a gold license.
 
one day, he and his friends made a plan to go on a trip to kyoto with you. at the end of their
meeting, they agreed to go around by car, but there was a big problem; none of his friends was
able to drive a car. thus he had no choice but to become the driver.
 
the day of our departure has come. he is going to drive but would never turn to the right for
fear of crossing an opposite lane (note that cars keep left in japan). furthermore, he cannot
u-turn for the lack of his technique. the car is equipped with a car navigation system, but the
system cannot search for a route without right turns. so he asked to you: “i hate right turns,
so, could you write a program to find the shortest left-turn-only route to the destination, using
the road map taken from this navigation system?”
 

"
p01209,!,"
you are one of icpc participants and in charge of developing a library for multiprecision numbers
and radix conversion. you have just finished writing the code, so next you have to test if it
works correctly. you decided to write a simple, well-known factorial function for this purpose:
 
your task is to write a program that shows the number of trailing zeros when you compute m!
in base n, given n and m.
 

"
p01210,Speed,"
do you know speed? it is one of popular card games, in which two players compete how quick
they can move their cards to tables.
 
to play speed, two players sit face-to-face first. each player has a deck and a tableau assigned
for him, and between them are two tables to make a pile on, one in left and one in right. a
tableau can afford up to only four cards.
 
there are some simple rules to carry on the game:
  a player is allowed to move a card from his own tableau onto a pile, only when the rank
   of the moved card is a neighbor of that of the card on top of the pile. for example a and
   2, 4 and 3 are neighbors. a and k are also neighbors in this game.  he is also allowed to draw a card from the deck and put it on a vacant area of the tableau.  if both players attempt to move cards on the same table at the same time, only the faster
   player can put a card on the table. the other player cannot move his card to the pile (as
   it is no longer a neighbor of the top card), and has to bring it back to his tableau. 
first each player draws four cards from his deck, and places them face on top on the tableau.
in case he does not have enough cards to fill out the tableau, simply draw as many as possible.
the game starts by drawing one more card from the deck and placing it on the tables on their
right simultaneously. if the deck is already empty, he can move an arbitrary card on his tableau
to the table.
 
then they continue performing their actions according to the rule described above until both
of them come to a deadend, that is, have no way to move cards. every time a deadend occurs,
they start over from each drawing a card (or taking a card from his or her tableau) and placing
on his or her right table, regardless of its face. the player who has run out of his card first is
the winner of the game.
 
mr. james a. games is so addicted in this simple game, and decided to develop robots that
plays it. he has just completed designing the robots and their program, but is not sure if they
work well, as the design is so complicated. so he asked you, a friend of his, to write a program
that simulates the robots.
 
the algorithm for the robots is designed as follows:
  each robot is always given one or more cards.  in the real game of speed, the players first classify cards by their colors to enable
        them to easily figure out which player put the card. but this step is skipped in this
        simulation.  the game uses only one card set split into two. in other words, there appears at most
        one card with the same face in the two decks given to the robots. 
    
  if there are not enough cards in its deck, draw all cards in the deck. 
    
  if there remains one or more cards in the deck, a robot draws the top one and puts it
        onto the right table. otherwise, the robot takes the rightmost card from its tableau. 
    
  when a robot took a card from its tableau, it draws a card (if possible) from the deck
        to fill the vacant position after the card taken is put onto a table.  it takes some amount of time to move cards. when a robot completes putting a card
        onto a table while another robot is moving to put a card onto the same table, the
        robot in motion has to give up the action immediately and returns the card to its
        original position.  a robot can start moving to put a card on a pile at the same time when the neighbor
        is placed on the top of the pile.  if two robots try to put cards onto the same table at the same moment, only the
        robot moving a card to the left can successfully put the card, due to the position
        settings.  when a robot has multiple candidates in its tableau, it prefers the cards which can
        be placed on the right table to those which cannot. in case there still remain multiple
        choices, the robot prefers the weaker card. 
    
 
 when it comes to a deadend situation, the robots start over from each putting a card to
  the table, then continue moving again according to the algorithm above.
  the robot which has run out the cards wins the game.  when both robots run out the cards at the same moment, the robot which moved
        the stronger card in the last move wins. 
    
 
the strength among the cards is determined by their ranks, then by the suits. the ranks are
strong in the following order: a &gt; k &gt; q &gt; j &gt; x (10) &gt; 9 &gt; . . . &gt; 3 &gt; 2. the suits are strong
in the following order: s (spades) &gt; h (hearts) &gt; d (diamonds) &gt; c (cloves). in other words,
sa is the strongest and c2 is the weakest.
 
the robots require the following amount of time to complete each action:
  300 milliseconds to draw a card to the tableau,  500 milliseconds to move a card to the right table,  700 milliseconds to move a card to the left table, and  500 milliseconds to return a card to its original position. 
cancelling an action always takes the constant time of 500ms, regardless of the progress of
the action being cancelled. this time is counted from the exact moment when the action is
interrupted, not the beginning time of the action.
 
you may assume that these robots are well-synchronized, i.e., there is no clock skew between
them.
 
for example, suppose robot a is given the deck “s3 s5 s8 s9 s2” and robot b is given the deck
“h7 h3 h4”, then the playing will be like the description below. note that, in the description,
“the table a” (resp. “the table b”) denotes the right table for robot a (resp. robot b).
  robot a draws four cards s3, s5, s8, and s9 to its tableau from right to left. robot b
  draws all the three cards h7, h3, and h4.  then the two robots synchronize for the game start. let this moment be 0ms.  at the same moment, robot a starts moving s2 to the table a from the deck, and robot
  b starts moving h7 to the table b from the tableau.  at 500ms, the both robots complete their moving cards. then robot a starts moving s3
  to the table a 1(which requires 500ms), and robot b starts moving h3 also to the table
  a (which requires 700ms).  at 1000ms, robot a completes putting s3 on the table a. robot b is interrupted its move
  and starts returning h3 to the tableau (which requires 500ms). at the same time robot
  a starts moving s8 to the table b (which requires 700ms).  at 1500ms, robot b completes returning h3 and starts moving h4 to the table a (which
  requires 700ms).  at 1700ms, robot a completes putting s8 and starts moving s9 to the table b.  at 2200ms, robot b completes putting h4 and starts moving h3 to the table a.  at 2400ms, robot a completes putting s9 and starts moving s5 to the table a.  at 2900ms, the both robots are to complete putting the cards on the table a. since robot
  b is moving the card to the table left to it, robot b completes putting h3. robot a is
  interrupted.  now robot b has finished moving all the dealt cards, so robot b wins this game. 


"
p01211,Spirograph,"
some of you might have seen instruments like the figure below.
 figure 1: spirograph 
there are a fixed circle (indicated by a in the figure) and a smaller interior circle with some
pinholes (indicated by b). by putting a pen point through one of the pinholes and then rolling
the circle b without slipping around the inside of the circle a, we can draw curves as illustrated
below. such curves are called hypotrochoids.
 figure 2: an example hypotrochoid 
your task is to write a program that calculates the length of hypotrochoid, given the radius of
the fixed circle a, the radius of the interior circle b, and the distance between the b’s centroid and the used pinhole.
 

"
p01212,Mysterious Dungeons,"
the kingdom of aqua canora mystica is a very affluent and peaceful country, but around the
kingdom, there are many evil monsters that kill people. so the king gave an order to you to kill
the master monster.
 
you came to the dungeon where the monster lived. the dungeon consists of a grid of square
cells. you explored the dungeon moving up, down, left and right. you finally found, fought
against, and killed the monster.
 
now, you are going to get out of the dungeon and return home. however, you found strange
carpets and big rocks are placed in the dungeon, which were not there until you killed the
monster. they are caused by the final magic the monster cast just before its death! every rock
occupies one whole cell, and you cannot go through that cell. also, each carpet covers exactly
one cell. each rock is labeled by an uppercase letter and each carpet by a lowercase. some of
the rocks and carpets may have the same label.
 
while going around in the dungeon, you observed the following behaviors. when you enter
into the cell covered by a carpet, all the rocks labeled with the corresponding letter (e.g., the
rocks with ‘a’ for the carpets with ‘a’) disappear. after the disappearance, you can enter the
cells where the rocks disappeared, but if you enter the same carpet cell again or another carpet
cell with the same label, the rocks revive and prevent your entrance again. after the revival,
you have to move on the corresponding carpet cell again in order to have those rocks disappear
again.
 
can you exit from the dungeon? if you can, how quickly can you exit? your task is to write
a program that determines whether you can exit the dungeon, and computes the minimum
required time.
 

"
p01213,Repeated Subsequences,"
you are a treasure hunter traveling around the world. finally, you’ve got an ancient text
indicating the place where the treasure was hidden. the ancient text looks like a meaningless
string of characters at first glance. actually, the secret place is embedded as the longest repeated
subsequence of the text.
 
well, then, what is the longest repeated subsequence of a string? first, you split the given string
s into two parts f and r. then, you take the longest common subsequence l of f and r
(longest string l that is a subsequence of both f and r). since there are many possible ways
to split s into two parts, there are many possible l's. the longest repeated subsequence is the
longest one among them. for example, the longest repeated subsequence of “abcabcabab”
is “abab”, which is obtained when you split “abcabcabab” into “abcabc” and “abab”.
 
now your task is clear. please find the longest repeated subsequence and get the hidden treasure!
 

"
p01214,Petoris,"
you are playing a puzzle game named petoris. it is played with a board divided into square
grids and square tiles each of which fits to a single grid.
 
in each step of the game, you have a board partially filled with tiles. you also have a block
consisting of several tiles. you are to place this block somewhere on the board or to discard it,
under the following restrictions on placement:
  the block can be rotated, but cannot be divided nor flipped;  no tiles of the block can collide with any tiles existing on the board; and  all the tiles of the block need to be placed inside the board. 
your task is to write a program to find the maximum score you can earn in this step. here, the
score is the number of the horizontal lines fully filled with tiles after the block is placed, or -1
in case of discard.
 

"
p01215,Pythagoraslope,"
alice, your girlfriend, is a student at an art school. she is in the final year, and now working
hard to build a facture for fulfilling the requirement to graduate. her work is a large pinball
with many straight slopes. before starting to build, she has made several plans, but is unsure if
they work as expected. so she asked you, a professional programmer, for help.
 
you have modeled this situation by a two dimensional plane with some line segments on it. in
this model, there is gravitation downward, i.e., in the decreasing direction of y-coordinate. your
task is to write a program that simulates the pinball, and compute the last position where the
ball crosses the x-axis.
 
you may assume coefficient of restitution between the slopes and the ball is 0, i.e., when the ball
collides a slope, it instantly loses the velocity component orthogonal to the slope. and since her
pinball is so large, you may also assume that the volume of the ball is negligible.

 

"
p01216,Election,"
giselle has just made a vote for a national election. in her country, members of the legislature are elected
by a system called mixed member proportional representation (mmp). basically, half the members are
elected from constituencies, and the other half are elected from party lists by proportional representation.
each voter has two votes, one for a constituency representative and one for a party.
 
in each constituency, the representative is chosen by a single-winner voting system called the first-past-
the-post. this system is very simple: the candidate who earns the highest number of votes wins the seat.
there are constituencies equal to half the number of seats, and they are determined in accordance with
geographical areas.
 
each party is allocated the seats according to the percentage of votes cast for that party. only parties that
have either at least five percent of the total party votes or at least three constituency seats are eligible for
the seats; the parties that satisfy neither of these prerequisites are excluded on the following procedure.
the number of seats for each eligible party is determined based on the value given by:
 
note that the multiplier in the above formula is the number of overall seats, not party-list seats (i.e. not
half the members). each party receives the seats equal to the integer part of this value. there usually
remain some seats, and they are allocated to the parties in decreasing order of the fraction parts, where
each party receive at most one extra seat. if two or more parties have the same fraction parts, the party
that gained a greater number of votes gets higher preference.
 
the number of seats allocated by the above procedure counts both the constituency seats and the party-
list seats. each party is therefore entitled to add members from the list just as many as the number of
its allocated seats minus the number of its constituency seats. those members are chosen in the order
predetermined by the party. if some candidates in the party list already have the seats for constituency
representatives (this happens because each constituency candidate is allowed to also be included in the
list), they are not counted and the next candidates down are added instead.
 
now, let us take an example. suppose three parties a, b, and c are competing for eight seats, where the
party a has earned one constituency seat and 9,000 party votes, the party b one and 8,000, and the party
c two and 3,000. the total number of party votes is 9000 + 8000 + 3000 = 20000, thus the five-percent
threshold is 20000 × (5/100) = 1000. from this threshold, all parties are eligible to be allocated the seats.
the formula gives (8 &times; 9000)/20000 = 3.6, (8 &times; 8000)/20000 = 3.2, and (8 &times; 3000)/20000 = 1.2, so
the parties a, b, and c receive three seats, three, and one respectively. there is one remaining seat, and
it goes to the party a for the largest fraction part 0.6 ( = 3.6 − 3). in conclusion, the party a gains four
seats in total, and since this party won one constituency seat, there are three more members to be chosen
from the party a’s list. similarly, there are two more members from the party b’s list. on the other hand,
the party c receives only one seat despite winning in two constituencies. so no members will be chosen
from the party c’s list and one overhang seat occurs. the total number of elected members therefore will
be nine. this example corresponds to the first case of the sample input and output.
 
you are required to write a program that determines which candidates win the seats.
 

"
p01217,Jaggie Spheres,"
let j(n) be a three-dimensional body that
  is a union of unit cubes whose all vertices lie on integer coordinates,  contains all points that are closer than the distance of &radic;n to the origin, and  is the smallest of all such bodies. 
the figure below shows how j(1), j(2), and j(3) look.
 figure 1: jaggie spheres for n = 1, 2, 3 
your task is to calculate how many faces j(n) have. here, we define two square belong to the same face
if they are parallel and share an edge, but don’t if they share just a vertex.

 

"
p01218,Nagashi Soumen,"
mr. natsume, the captain of a baseball club, decided to hold a nagashi-soumen party. he first planned
to put a flume at the arena, and let members stand by the side of the flume to eat soumen. but they are
so weird that they adhere to each special position, and refused to move to the side of the flume. they
requested mr. natsume to have the flumes go through their special positions. as they never changed their
minds easily, mr. natsume tried to rearrange flumes in order to fulfill their requests.
 
as a caretaker of the baseball club, you are to help mr. natsume arrange the flumes. here are the rules
on the arrangement:
  each flume can begin and end at arbitrary points. also it can be curved at any point in any direction,
       but cannot have any branches nor merge with another flume;  each flume needs to be placed so that its height strictly decreases as it goes, otherwise soumen does
       not flow;  mr. natsume cannot make more than k flumes since he has only k machines for water-sliders; and  needless to say, flumes must go through all the special positions so that every member can eat
       soumen. 
in addition, to save the cost, you want to arrange flumes so that the total length is as small as possible.
what is the minimum total length of all flumes?
 

"
p01219,Private Teacher,"
you are working as a private teacher. since you are giving lessons to many pupils, you are very busy,
especially during examination seasons. this season is no exception in that regard.
 
you know days of the week convenient for each pupil, and also know how many lessons you have to give
to him or her. you can give just one lesson only to one pupil on each day. now, there are only a limited
number of weeks left until the end of the examination. can you finish all needed lessons?
 

"
p01220,Triangles,"
there is a group that paints an emblem on the ground to invite aliens every year. you are a member of
this group and you have to paint the emblem this year.
 
the shape of the emblem is described as follows. it is made of n regular triangles whose sides are
equally one unit length long. these triangles are placed so that their centroids coincide, and each of them
is rotated counterclockwise by 360/n degrees with respect to the one over it around its centroid. the
direction of the top triangle is not taken into account.
 
it is believed that emblems have more impact as their n are taken larger. so you want to paint the emblem
of n as large as possible, but you don’t have so much chemicals to paint. your task is to write a program
which outputs the area of the emblem for given n so that you can estimate the amount of the needed
chemicals.
 figure 1: the emblem for n = 2 


"
p01221,finger Programming,"
franklin jenkins is a programmer, but he isn’t good at typing keyboards. so he always uses only ‘f’
and ‘j’ (keys on the home positions of index fingers) for variable names. he insists two characters are
enough to write programs, but naturally his friends don’t agree with him: they say it makes programs too
long.
 
he asked you to show any program can be converted into not so long one with the f-j names. your task
is to answer the shortest length of the program after all variables are renamed into the f-j names, for each
given program.
 
given programs are written in the language specified below.
 
a block (a region enclosed by curly braces: ‘{’ and ‘}’) forms a scope for variables. each scope can have
zero or more scopes inside. the whole program also forms the global scope, which contains all scopes
on the top level (i.e., out of any blocks).
 
each variable belongs to the innermost scope which includes its declaration, and is valid from the decla-
ration to the end of the scope. variables are never redeclared while they are valid, but may be declared
again once they have become invalid. the variables that belong to different scopes are regarded as differ-
ent even if they have the same name. undeclared or other invalid names never appear in expressions.
 
the tokens are defined by the rules shown below. all whitespace characters (spaces, tabs, linefeeds, and
carrige-returns) before, between, and after tokens are ignored.
 
the syntax of the language is defined as follows.
 


program:
     statement-list
statement-list:
     statement
     statement-list statement
statement:
     variable-declaration
     if-statement
     while-statement
     expression-statement
     block-statement
variable-declaration:
      “var” identifier ‘;’
if-statement:
      “if” ‘(’ expression ‘)’ block-statement
while-statement:
      “while” ‘(’ expression ‘)’ block-statement
expression-statement:
      expression ‘;’
block-statement:
      ‘{’ statement-listoptional ‘}’
expression:
      identifier
      number
      expression operator expression


"
p01222,Walk under a Scorching Sun,"
edward r. nelson is visiting a strange town for some task today. this city is built on a two-dimensional
flat ground with several vertical buildings each of which forms a convex polygon when seen from above
on it (that is to say, the buidlings are convex polygon columns). edward needs to move from the point s
to the point t by walking along the roads on the ground. since today the sun is scorching and it is very
hot, he wants to walk in the sunshine as less as possible.
 
your task is to write program that outputs the route whose length in the sunshine is the shortest, given
the information of buildings, roads and the direction of the sun.
 

"
p01223,Saizo,"
    ある国で「サイゾウ」というテレビ番組が流行している．
    この番組は参加者がフィールドアスレチックに挑戦し，
    見事攻略すれば賞金をもらえるというものである．
   
    フィールドアスレチックは高さが異なるブロックを一列に並べて作られていて，
    攻略のためにはいかにして段差を登り降りするかが重要になる
    （図1）．
    この番組に参加することになったあなたの友人は，
    フィールドアスレチックの構造が与えられたときに，
    登らなければならない最大の段差と降りなければならない最大の段差を
    計算するプログラムを書いてほしいと，
    凄腕プログラマーであるあなたに依頼してきた．
   

  
    
	
	  
	    <img src=""https://judgeapi.u-aizu.ac.jp/resources/images/image2_athletic""
		 alt=""アスレチックの構造の例（入力例の最初のデータセット）．"">
	  
	
	
	  図1: アスレチックの構造の例（入力例の最初のデータセット）．
	
    


  "
p01224,Perfect Number,"
    ある整数 n に対し，その数自身を除く約数の和を s
    とする．
    n = s のとき
    n は完全数 (perfect number)，
    n &gt; s のとき
    n は不足数 (deficient number)，
    n &lt; s のとき
    n は過剰数 (abundant number) と呼ばれる．
    与えられた整数が，完全数・不足数・過剰数のどれであるかを
    判定するプログラムを作成せよ．
   
    プログラムの実行時間が制限時間を越えないように注意すること．
   

  "
p01225,Rummy,"
    あなたの友達は最近 ut-rummy というカードゲームを思いついた．
   
    このゲームで使うカードには赤・緑・青のいずれかの色と1から9までのいずれかの番号が
    つけられている．
    このゲームのプレイヤーはそれぞれ9枚の手札を持ち，
    自分のターンに手札から1枚選んで捨てて，
    代わりに山札から1枚引いてくるということを繰り返す．
    このように順番にターンを進めていき，
    最初に手持ちのカードに3枚ずつ3つの「セット」を作ったプレイヤーが勝ちとなる．
    セットとは，同じ色の3枚のカードからなる組で，すべて同じ数を持っているか
    連番をなしているもののことを言う．
    連番に関しては，番号の巡回は認められない．
    例えば，7, 8, 9は連番であるが 9, 1, 2は連番ではない．
   
    あなたの友達はこのゲームをコンピュータゲームとして売り出すという計画を立てて，
    その一環としてあなたに勝利条件の判定部分を作成して欲しいと頼んできた．
    あなたの仕事は，手札が勝利条件を満たしているかどうかを判定する
    プログラムを書くことである．
   

  "
p01226,Battle Town,"
    あなたは友人たちとゲームを開発することにした．
    ゲームのタイトルは「バトルタウン」．
    戦車による市街戦をテーマにしたゲームだ．
    ゲーム開発の第一歩として，次のようなプロトタイプを開発することにした．
   
    このプロトタイプでは，登場する戦車はプレイヤーの戦車のみであり，
    敵の戦車は登場しない．
    プレイヤーの戦車はプレイヤーの入力に従ってマップ上で様々な動作をする．
    以下に，戦車の動作に関する仕様を述べる．
   
    マップの構成要素は表1の通りである．
    戦車が移動できるのはマップ内の平地の上だけである．
   
    プレイヤーの入力は文字の列で与えられる．
    各文字に対応する動作は表2の通りである．
   
    砲弾はレンガの壁あるいは鉄の壁にぶつかるか，マップの外に出るまで直進する．
    レンガの壁にぶつかった場合は，砲弾は消滅し，レンガの壁は平地に変化する．
    鉄の壁にぶつかった場合は，砲弾は消滅するが，鉄の壁は変化しない．
    マップの外に出たときは砲弾はそのまま消滅する．
   
    あなたの仕事は，初期マップとプレイヤーの入力操作列が与えられたときに，
    最終的なマップの状態を出力するプログラムを作成することである．
   

  "
p01227,Country Road,"
    ある過疎地域での話である．
    この地域ではカントリーロードと呼ばれるまっすぐな道に沿って，
    家がまばらに建っている．
    今までこの地域には電気が通っていなかったのだが，
    今回政府からいくつかの発電機が与えられることになった．
    発電機は好きなところに設置できるが，
    家に電気が供給されるにはどれかの発電機に電線を介してつながっていなければならず，
    電線には長さに比例するコストが発生する．
    地域で唯一の技術系公務員であるあなたの仕事は，
    すべての家に電気が供給されるという条件の下で，
    できるだけ電線の長さの総計が短くなるような発電機
    および電線の配置を求めることである．
    なお，発電機の容量は十分に大きいので，
    いくらでも多くの家に電気を供給することができるものとする．
   
    サンプル入力の1番目のデータセットを図2に示す．
    この問題に対する最適な配置を与えるには，
    図のように x = 20 と x = 80 の位置に発電機を配置し，
    それぞれ図中のグレーで示した位置に電線を引けばよい．
   


    
	
	  
	    <img src=""https://judgeapi.u-aizu.ac.jp/resources/images/image2_road""
		 alt=""発電機と電線の配置の例（入力例の最初のデータセット）．"">
	  
	
	
	  図2: 発電機と電線の配置の例（入力例の最初のデータセット）．
	
    


  "
p01228,Rhythm Machine,"
    advanced computer music社（acm社）は，
    あらかじめプログラムされたリズム通りに音楽を演奏する
    リズムマシーンを販売していた．
    ある時，acm社は新しいリズムマシーンを開発して売り出そうとしていた．
    acm社の旧製品は同時に1つの音しか鳴らすことができなかったのに対し，
    新製品では最大で8つの音を同時に鳴らせるようになるというのが
    一番の目玉機能であった．
    今まで複数の旧製品を利用して演奏する必要のあった曲が
    新製品1台で済むようになるので，
    acm社は新製品への移行を推進させるために，
    複数の旧製品向けのリズムパターンを1つの新製品向けのリズムパターンに
    変換するプログラムを作ることにした．
   
    acm社のリズムマシーンでは，同時にどの音を鳴らすかを2桁の16進数で表現する．
    acm社のリズムマシーンは8つの異なる音を鳴らすことが可能で，
    それぞれの音には0から7の番号が割り当てられている．
    あるタイミングにおいて，音 i (0 &le; i &lt; 8)
    を鳴らす場合を si = 1，
    鳴らさない場合を si = 0 とする．
    このとき，それぞれの音を同時に鳴らしたような和音を
    
    という値で表し，
    この値を2桁の16進数表記で表した「和音表現」
    がリズムパターンの中で用いられる（16進数の英字は大文字を用いる）．
    例えば，音0, 6, 7 を同時に鳴らすような和音は
    s = 20 + 26 + 27
    = c1(16)
    となるから &ldquo;c1&rdquo; と表現され，
    また何も鳴らさないような「和音」は 
    &ldquo;00&rdquo; と表現される．
   
    リズムパターンは，上記のような和音表現を1つ以上並べたものとして与えられる．
    あるリズムパターン文字列は，1小節内の演奏パターンを示している．
    それぞれの和音を鳴らすタイミングを小節内の相対位置
    t (0 &le; t &lt; 1)
    で表現することにする．
    k 個の和音表現からなるリズムパターン文字列は，
    小節を k 等分しそれぞれの和音を順に
    t = 0/k, 1/k, ...,
    (k−1)/k のタイミングで演奏するような
    リズムパターンを表している．
    例えば，リズムパターン &ldquo;01000003&rdquo; は，
    t = 0/4 のタイミングで音0を演奏し，
    t = 3/4 のタイミングで音0, 1を演奏することを表す．
    また，リズムパターン &ldquo;00&rdquo;
    は小節内で何も音を鳴らさないことを表す
    （リズムパターンには和音表現が1つ以上必要であることに注意せよ）．
   
    旧製品は同時に1つの音しか鳴らせないため，
    旧製品向けのリズムパターン文字列内には
    &ldquo;00&rdquo;,
    &ldquo;01&rdquo;,
    &ldquo;02&rdquo;,
    &ldquo;04&rdquo;,
    &ldquo;08&rdquo;,
    &ldquo;10&rdquo;,
    &ldquo;20&rdquo;,
    &ldquo;40&rdquo;,
    &ldquo;80&rdquo;
    のいずれかの和音表現しか現れない．
    旧製品向けのリズムパターンを n 個
    (1 &le; n &le; 8) 受け取り，
    それらのリズムパターンを同時に演奏するような
    新製品向けのリズムパターンを出力するプログラムを書いて欲しい．
   
    与えられる n 個のリズムパターンにおいて，
    まったく同じタイミングで同じ音が演奏されることはないと仮定してよい．
   

  "
p01229,Enegy Transporter,"
    とある研究所で，
    エネルギー伝達用の媒体の開発をしていた．
    この媒体は図3に示すような特殊な物質からなる
    ポリマー構造をなしている．
   
    図の ea で示した部分がこの媒体のもっとも特徴的な部位の
    エナジーアキュムレータ (energy accumulator) である．
    このea基は 1 kj 幅で離散化された多様なエネルギー状態を取ることができる．
    あるea基を励起させると，
    そのea基の&alpha;側に結合している隣接したea基に蓄積されている全エネルギーを
    &beta;側に結合している隣接したea基に移動させるような効果を持つ
    発熱反応が引き起こされる（図4）．
    この反応の際，励起されるea基のエネルギーが 1 kj 消費される．
    なお，ポリマーの両端に位置するea基やエネルギー状態が 0 kj になっている
    ea基に対しては励起反応は発生しないこと，
    およびea基は十分に大きなエネルギーを蓄えることが可能であることが知られている．
   
    この性質を利用することでエネルギーの伝達を可能にしようと考えていたのだが，
    エネルギーを効率よく伝達するには各ea基を励起させる順番が重要であることに
    研究者たちは気がついたのである．
   
    幸い，励起させる順番や回数は任意に制御できるのだが，
    彼らには最適な励起手順がわからない．
    そこで彼らの発想の足がかりとして，
    初期状態のエネルギー分布に対して
    最右ea基（&beta;末端からもっとも近いea基）
    に蓄えられうる最大のエネルギー量を計算してもらいたい．
   

  "
p01230,Can I go there?,"
    あるところに，日本各地をまわりながら商売をする社長がいた．
    彼はある日，不思議な切符を手に入れた．
    その切符を使うと，なんと目的地までの距離によらず電車の運賃が無料になるという．
    ただし，
    現在の駅から隣接する駅へ移動するのを1ステップと数えたときに，
    移動するステップ数がちょうど切符に書かれた数と等しくならないと
    追加料金を取られてしまう．
    ある区間をただちに折り返すような移動は禁止されているが，
    既に訪れた駅や区間を複数回通ること自体は許される．
    たとえば，駅1・駅2・駅1と移動することはできないが，
    駅1・駅2・駅3・駅1・駅2のような移動は問題ない．
    また，最終的に目的地に到着するならば，出発地や目的地も何度でも通ってよい．
   
    社長はさっそくこの切符を次の目的地に行くために使ってみようと考えた．
    しかし路線図は入り組んでいるため，簡単には経路が定まらない．
    あなたの仕事は，社長に代わって目的地に無料で到達できるかどうかを
    判定するプログラムを書くことである．
   
    駅は 1 から n までの番号が振られており，
    出発地の駅は 1，目的地の駅は n と決まっている．
    路線図は2つの駅を結ぶ区間の列によって与えられる．
    区間はどちらの方向にも通行することができる．
    同じ駅同士を結ぶような区間は存在しないことと，
    ある駅の対を結ぶ区間はたかだか1つであることが保証されている．
   

  "
p01231,Aaron and Bruce,"
    aaron は凶悪な犯罪者である．
    彼は幾度も犯罪を繰り返しながら
    （万引き2回，のぞき16回，下着泥棒256回，食い逃げ65,536回）
    も，その人並み外れた身体能力を用いて
    警察の手から逃れ続けてきた．
    bruce は警察官である．
    彼は突出した運動能力は持っていないが，
    写真撮影が趣味であり，
    彼の撮った写真が雑誌に載るほどの腕前を持っている．
   
    ある日，bruce は山奥に写真撮影をしに来た．
    すると偶然 aaron のアジトを突き止めてしまった．
    bruce が逃げる aaron を追っていくと，
    彼らは落とし穴に落ちて古代遺跡の中に迷い込んでしまった．
   
    古代遺跡の中はいくつかの部屋と，部屋どうしを結ぶ通路で構成されている．
    古代遺跡に m 個の部屋があるとき，
    遺跡内の部屋にはそれぞれ 0 から m−1 までの番号がつけられている．
   
    aaron は逃げている間に時効を迎えるかもしれないと考えたので，
    bruce が最適に移動したときに一番長い間逃げ続けられるように
    遺跡の中を移動する．
    bruce は早く aaron を写真に収めたいので，
    aaron が最適に移動したときに一番早く bruce を写真に収められるように
    遺跡の中を移動する．
   
    aaron と bruce は順番に行動する．
    最初は aaron の番とする．
    それぞれの順番のとき，隣接している部屋のどれか1つに移動，
    もしくはその場にとどまることができる．
    aaron と bruce が同じ部屋に入ったとき，
    bruce は aaron を撮影するものとする．
   
    bruce が aaron を撮影するのにどれくらいの時間がかかるかを求めて欲しい．
    時間はターン数で表すこととし，
    aaron と bruce がともに1回行動し終わったら1ターンと数える．
   
    例えば，図5のような状況のとき，
    aaron は部屋5に逃げ込めば bruce は4ターンでたどり着くが，
    aaron が部屋7に逃げ込めば bruce はたどり着くのに5ターンかかる．
    aaron にとっては部屋7に逃げ込むことで一番長く逃げ続けられるので
    答えは5ターンとなる．
   
    また，図6のような状況のとき，
    aaron が bruce から遠ざかるように部屋を移動することで
    いつまでも逃げ回ることができる．
   

  
    
	
	  
	    <img src=""https://judgeapi.u-aizu.ac.jp/resources/images/image2_chase_2""
		 alt=""aaron がいつまでも逃げ続けられる例．"">
	  
	
	
	  図6: aaron がいつまでも逃げ続けられる例．
	
    
  

  "
p01232,Ancient Expression,"
    あなたの友人の考古学者が遺跡を発掘していた．
    ある日，彼は怪しげな記号の羅列が刻まれている石盤を大量に発見した．
    彼はこの大発見に大喜びし，すぐさま石盤に刻まれている記号の解読を始めた．
    何週間にもわたる彼の解読の努力の結果，
    どうやらこれらの石盤には変数・演算子・カッコの組み合わせで成り立っている
    数式のようなものが刻まれていることがわかった．
    発掘した石盤と遺跡に関わる文献を調べていくうちに彼はさらに，
    それぞれの石盤で演算子の結合規則が異なっており，
    それぞれの石盤の先頭に演算子の結合規則が記されているらしいことを突きとめた．
    しかし，彼は数学が苦手であるため，演算子の結合規則を見ても
    すぐには数式がどのように結合しているかがわからなかった．
    そこで彼は，優れたコンピュータサイエンティストであるあなたに
    「石盤に書かれている数式がどのように結合しているかを調べてほしい」
    と依頼してきた．
    あなたは，彼を手助けすることができるだろうか？
   
    数式中に現れる演算子には優先順位が定められており，
    優先順位の高い演算子から順に結合していく．
    同一優先順位をもつ演算子にはそれぞれ結合方向が定められており，
    左から右に結合する場合は左にある演算子から順に，
    右から左に結合する場合は右にある演算子から順に結合していく．
    例えば， + より * の方が優先順位が高く，
    * が左から右に結合する場合，
    式 a+b*c*d は (a+((b*c)*d)) のように結合する．
    サンプル入力にも他の例がいくつか挙げられているので参照のこと．
   

  "
p01233,Radio Base,"
    20xx年，長年の研究が実を結び，
    無線によるエネルギー送受信の技術が実用化された．
    この技術を利用することで，
    コストが見合わず今まで電力線を引くことができなかった過疎地にも
    電力を供給することが可能となった．
    この技術には少しくせがあって，
    どこまでも遠くにエネルギーを送ることができるのだが，
    特定の位置でしか電波の受信ができないという制約が存在する．
    つまり，世界を2次元平面で表し，y軸正の方向を北，
    x軸正の方向を東とすると，
    x座標・y座標がともに整数の地点でしか
    電波を受信することができない（位相の問題である）．
    また，基地（電波の送受信が可能な設備）
    から見て8方位（東・西・南・北・北東・北西・南東・南西）
    の方向にしか電波を送信することができない．
   
    この制約のために，目標の場所に電波を直接供給できない場合があるが，
    これは中継基地を置くことで解決可能である．
    例えば，座標 (0, 0) から (3, 7) へは直接エネルギーを送ることができないが，
    (3, 3) に中継基地を置くことで解決できる．
   
    あなたは電力会社のエンジニアで，
    顧客からある場所に基地を用意してほしいと言われている．
    ただし，ある箇所が故障しただけで電力が止まってしまうという問題を避けるため，
    新たに基地を敷設する際には，既に建っている2箇所以上の基地から
    エネルギーを受け取れなくてはいけない．
    また，基地は同時には1つしか建てることができず，
    同じ場所に基地を2つ置くことはできない．
    既存の基地の位置が2つ与えられるので，
    顧客の要望を満たすためには最低でもあと何件の基地を建てる必要があるかを
    求めて欲しい．
   

  "
p01234,Defend the Nation,"
two nations drone and moonlamb have been engaged in a war. you have been called up for service as a talented
programmer in drone.
 
recently, the army of moonlamb has set up a new cannon on the field. the army of drone knows exactly where
it has been placed, but not how it can be destroyed; direct attacks would not be successful because the army
of moonlamb has also set up a special barrier around the cannon. fortunately, it seems that no projectiles have
reached the troops yet. nevertheless, the army of drone immediately requires an effective means to intercept pro-
jectiles fired from the cannon. otherwise they would definitely take severe damage once the army of moonlamb
started attacks with the cannon.
 
the generals of drone have decided to build a new interception system that consists of a radar system, a control
program, and an auto-operated cannon. as neither of the cannons of moonlamb and drone can change the firing
directions except the elevation angles, the auto-operated cannon will be placed so the two barrels face each other.
this way the army of drone will have a better possibility of successful interception. the figure below depicts
this situation.
 
the interception system works as follows. when the radar system detects projectiles fired from the barriered
cannon, it immediately sends their initial velocities and elevation angles to the control program. then the control
program determines the elevation angles at which the interceptors should be fired in order to destroy the targeted
projectiles on the fly, and sends firing commands to the auto-operated cannon. finally, the auto-operated cannon
fires interceptors according to the received commands.
 
for the maximum safety of the auto-operated cannon and other installations behind, the army of drone wants
to destroy the projectiles at the earliest possible time. on the other hand, the interceptors can be fired only with
their fixed initial velocities. the control program thus can only control the elevation angles and the firing times.
in addition, the interceptors cannot be fired in less than &gamma seconds from when the targeted projectiles are fired,
because of delay in detecting those projectiles.
 
the trajectories of the projectiles and the interceptors shape parabolas, both affected only by the gravity with the
acceleration of 9.8 [m/s2]. the sizes of the projectiles, the interceptors, and the cannons are all negligible.
 
your task is to write the control program and defend the nation drone!
 


"
p01235,Electrophoretic,"
scientist frank, majoring in electrochemistry, has developed line-shaped strange electrodes called f-electrodes.
during being activated, each f-electrode causes a special potential on and between the two lines touching the
f-electrode’s endpoints at a right angle. then electrically-charged particles located inside the potential area get
to move in the direction parallel to the potential boundary (i.e. perpendicular to the f-electrode), either toward or
against f-electrode. the moving direction can be easily controlled between the two possibles; it is also possible
to get particles to pass through f-electrodes. in addition, unlike ordinary electrodes, f-electrodes can affect
particles even infinitely far away, as long as those particles are located inside the potential area. on the other
hand, two different f-electrodes cannot be activated at a time, since their potentials conflict strongly.
 
we can move particles on our will by controlling f-electrodes. however, in some cases, we cannot lead them to
the desired positions due to the potential areas being limited. to evaluate usefulness of f-electrodes from some
aspect, frank has asked you the following task: to write a program that finds the shortest distances from the
particles’ initial positions to their destinations with the given sets of f-electrodes.
 





"
p01236,Median Filter,"
the median filter is a nonlinear digital filter used to reduce noise in images, sounds, and other kinds of signals.
it examines each sample of the input through a window and then emits the median of the samples in the win-
dow. roughly speaking, a window is an interval that contains a target sample and its preceding and succeeding
samples; the median of a series of values is given by the middle value of the series arranged in ascending (or
descending) order.
 
let us focus on a typical median filter for black-and-white raster images. the typical filter uses a 3 &times; 3 window,
which contains a target pixel and the eight adjacent pixels. the filter examines each pixel in turn through this
3 &times; 3 window, and outputs the median of the nine pixel values, i.e. the fifth lowest (or highest) pixel value, to the
corresponding pixel. we should note that the output is just given by the pixel value in majority for black-and-
white images, since there are only two possible pixel values (i.e. black and white). the figure below illustrates
how the filter works.
 note: the colors of lightly-shaded pixels depend on outside of the region. 
the edges of images need to be specially processed due to lack of the adjacent pixels. in this problem, we extends
the original images by repeating pixels on the edges as shown in the figure below. in other words, the lacked
pixels take the same values as the nearest available pixels in the original images.
 note: the letters ‘a’ through ‘f’ indicate pixel values. 
you are requested to write a program that reads images to which the filter is applied, then finds the original
images containing the greatest and smallest number of black pixels among all possible ones, and reports the
difference in the numbers of black pixels.
 

"
p01237,Life Game,"
you are working at a production plant of biological weapons. you are a maintainer of a terrible virus weapon
with very high reproductive power. the virus has a tendency to build up regular hexagonal colonies. so as a
whole, the virus weapon forms a hexagonal grid, each hexagon being a colony of the virus. the grid itself is in
the regular hexagonal form with n colonies on each edge.
 
the virus self-propagates at a constant speed. self-propagation is performed simultaneously at all colonies.
when it is done, for each colony, the same number of viruses are born at every neighboring colony. note that,
after the self-propagation, if the number of viruses in one colony is more than or equal to the limit density m,
then the viruses in the colony start self-attacking, and the number reduces modulo m.
 
your task is to calculate the total number of viruses after l periods, given the size n of the hexagonal grid and
the initial number of viruses in each of the colonies.
 





"
p01238,Subdividing a Land,"
indigo real-estate company is now planning to develop a new housing complex. the entire complex is a square,
all of whose edges are equally a meters. the complex contains n subdivided blocks, each of which is a b-meter
square. here both a and b are positive integers.
 
however the project is facing a big problem. in this country, a percentage limit applies to the subdivision of a
land, under the pretext of environmental protection. when developing a complex, the total area of the subdivided
blocks must not exceed 50% of the area of the complex; in other words, more than or equal to 50% of the newly
developed housing complex must be kept for green space. as a business, a green space exceeding 50% of the
total area is a dead space. the primary concern of the project is to minimize it.
 
of course purchasing and developing a land costs in proportion to its area, so the company also wants to minimize
the land area to develop as the secondary concern. you, a member of the project, were assigned this task, but can
no longer stand struggling against the problem with your pencil and paper. so you decided to write a program to
find the pair of minimum a and b among those which produce the minimum dead space for given n.
 

"
p01239,Connect Line Segments,"
your dear son arnie is addicted to a puzzle named connect line segments.
 
in this puzzle, you are given several line segments placed on a two-dimensional area. you are allowed to add
some new line segments each connecting the end points of two existing line segments. the objective is to form a
single polyline, by connecting all given line segments, as short as possible. the resulting polyline is allowed to
intersect itself.
 
arnie has solved many instances by his own way, but he is wondering if his solutions are the best one. he knows
you are a good programmer, so he asked you to write a computer program with which he can verify his solutions.
 
please respond to your dear arnie’s request.
 

"
p01240,Oil Company,"
irving & cohen petroleum corporation has decided to develop a new oil field in an area. a preliminary survey
has been done and they created a detailed grid map of the area which indicates the reserve of oil.
 
they are now planning to construct mining plants on several grid blocks according this map, but they decided
not to place any two plants on adjacent positions to avoid spreading of fire in case of blaze. two blocks are
considered to be adjacent when they have a common edge. you are one of the programmers working for the
company and your task is to write a program which calculates the maximum amount of oil they can mine, given
the map of the reserve.

 

"
p01241,Finding the Top RPS Player,"
a company “acm foods” is preparing for opening its chain shop in a certain area, but another company “icpc
pizza” is also planning to set up its branch shop in the same area. in general, two competitive shops gain less
incomes if they are located so close to each other. thus, if both “acm foods” and “icpc pizza” went on
opening, they would be damaged financially. so, they had a discussion on this matter and made the following
agreement: only one of them can branch its shop in the area. it is determined by rock-paper-scissors (rps)
which to branch the shop.
 
acm foods is facing financial difficulties and strongly desires to open their new shop in that area. the executives
have decided to make every effort for finding out a very strong rps player. they believes that players who win
consecutive victories must be strong players. in order to find such a player for sure, they have decided their
simple strategy.
 
in this strategy, many players play games of rps repeatedly, but the games are only played between players with
the same number of consecutive wins. at the beginning, all the players have no wins, so any pair of players
can play a game. the games can be played by an arbitrary number of pairs simultaneously. let us call a set of
simultaneous games as a turn. after the first turn, some players will have one win, and the other players will
remain with no wins. in the second turn, some games will be played among players with one win, and some
other games among players with no wins. for the former games, the winners will have two consecutive wins,
and the losers will lose their first wins and have no consecutive wins. for the latter games, the winners will have
one win, and the losers will remain with no wins. therefore, after the second turn, the players will be divided
into three groups: players with two consecutive wins, players with one win, and players with no wins. again,
in the third turn, games will be played among players with two wins, among with one win, and among with no
wins. the following turns will be conducted so forth. after a sufficient number of turns, there should be a player
with the desired number of consecutive wins.
 
the strategy looks crazy? oh well, maybe they are confused because of their financial difficulties.
 
of course, this strategy requires an enormous amount of plays. the executives asked you, as an employee of
acm foods, to estimate how long the strategy takes. your task is to write a program to count the minimum
number of turns required to find a player with m consecutive wins among n players.
 

"
p01242,Revenge of Voronoi,"
a discrete voronoi diagram is a derivation of a voronoi diagram. it is represented as a set of pixels. each of the
generatrices lies on the center of some pixel. each pixel belongs to the generatrix nearest from the center of the
pixel in the sense of manhattan distance. the manhattan distance d between two points (x1, y1) and (x2, y2) is given by the following formula:
 
                  d = |x1 - x2| + |y1 - y2|
 
your task is to find a set of generatrices which generates a given discrete voronoi diagram. in the given diagram,
each generatrix is given a unique lowercase letter as its identifier, and each pixel is represented by the identifier
of the generatrix the pixel belongs to. if a pixel has multiple generatrices at the same distance from its center, it
belongs to the generatrix with the most preceding identifier among them (i.e. the smallest character code).

 

"
p01243,Castle Wall,"
a new lord assumed the position by the death of the previous lord in a far eastern province.
 
the new greedy lord hates concave polygons, because he believes they need much wasted area to be drawn on
paper. he always wants to modify them to convex ones.
 
his castle is currently surrounded by a wall forming a concave polygon, when seen from the above. of course
he hates it. he believes more area could be obtained with a wall of a convex polygon. thus he has ordered his
vassals to have new walls built so they form a convex polygon.
 
unfortunately, there is a limit in the budget. so it might be infeasible to have the new walls built completely. the
vassals has found out that only up to r meters of walls in total can be built within the budget. in addition, the new
walls must be built in such a way they connect the polygonal vertices of the present castle wall. it is impossible
to build both of intersecting walls.
 
after long persuasion of the vassals, the new lord has reluctantly accepted that the new walls might not be built
completely. however, the vassals still want to maximize the area enclosed with the present and new castle walls,
so they can satisfy the lord as much as possible.
 
your job is to write a program to calculate, for a given integer r, the maximum possible area of the castle with
the new walls.
 

"
p01244,Divisor Function,"
teiji is a number theory lover. all numbers are his friends - so long as they are integers. one day, while
preparing for the next class as a teaching assistant, he is interested in a number-theoretical function called the
divisor function. the divisor function &sigma;(n) is defined as the sum of all positive divisors of n. “how fast does this
&sigma;(n) grow?” he asked himself. apparently, &sigma;(n) grows fast as n increases, but it is hard to estimate the speed of
the growth. he decided to calculate the maximum value of &sigma;(n)/n on 1 &le; n &le; k, for various k.
 
while it is easy for small numbers, it is tough to calculate many values of the divisor function by hand. tired of
writing thousands of digits, he decided to solve the problem with the help of a computer. but there is a problem:
he is not familiar with computer programming. he asked you, a talented programmer, for help.
 
please write a program to help him.
 

"
p01245,Magical Dungeon,"
arthur c. malory is a wandering valiant fighter (in a game world).
 
one day, he visited a small village and stayed overnight. next morning, the village mayor called on him. the
mayor said a monster threatened the village and requested him to defeat it. he was so kind that he decided to
help saving the village.
 
the mayor told him that the monster seemed to come from the west. so he walked through a forest swept away
in the west of the village and found a suspicious cave. surprisingly, there was a deep dungeon in the cave. he
got sure this cave was the lair of the monster.
 
fortunately, at the entry, he got a map of the dungeon. according to the map, the monster dwells in the depth of
the dungeon. there are many rooms connected by paths in the dungeon. all paths are one-way and filled with
magical power. the magical power heals or damages him when he passes a path.
 
the amount of damage he can take is indicated by hit points. he has his maximal hit points at the beginning and
he goes dead if he lost all his hit points. of course, the dead cannot move nor fight - his death means the failure
of his mission. on the other hand, he can regain his hit points up to his maximal by passing healing paths. the
amount he gets healed or damaged is shown in the map.
 
now, he wants to fight the monster with the best possible condition. your job is to maximize his hit points when
he enters the monster’s room. note that he must fight with the monster once he arrives there. you needn’t care
how to return because he has a magic scroll to escape from a dungeon.
 

"
p01246,Land Mark,"
“hey, what’s up? it’s already 30 minutes past eleven!”
 
“i’m so sorry, but actually i got lost. i have no idea where i am now at all and i got tired wandering around.
please help!”
 
- today you came to the metropolis to play with your friend. but she didn’t show up at the appointed time.
what happened to her? after some uncomfortable minutes, finally you managed to get her on line, and have
been just notified that she’s been lost in the city.
 
you immediately told her not to move, and asked her what are around her to figure out where she is. she told
the names of some famous land marks, in the order where she caught in her sight while she made a full turn
counterclockwise without moving around.
 
fortunately, today you have a map of the city. you located all the land marks she answered on the map, but want
to know in which district of the city she’s wandering.
 
write a program to calculate the area where she can be found, as soon as you can!
 

"
p01247,Japanese Style Pub,"
you’ve just entered a japanese-style pub, or an izakaya in japanese, for a drinking party (called nomi-kai) with
your dear friends.
 
now you are to make orders for glasses of hard and soft drink as requested by the participants. but unfortunately,
most staffs in typical izakayas are part-time workers; they are not used to their work so they make mistakes at a
certain probability for each order.
 
you are worrying about such mistakes. today is a happy day for the participants, the dearest friends of yours.
 
your task is to write a program calculating the probability at which the izakaya staff brings correct drinks for
the entire orders. cases in which the staff’s mistakes result in a correct delivery should be counted into the
probability, since those cases are acceptable for you.
 

"
p01248,Text Justification,"
you are hired by the ∀i¶אξ℘, an extraterrestrial intelligence, as a programmer of their typesetting system. your
task today is to design an algorithm for text justification.
 
text justification is to equalize the line widths as much as possible by inserting line breaks at appropriate posi-
tions, given a word sequence called a paragraph and the width of the paper. since you have not developed an
automatic hyphenation algorithm yet, you cannot break a line in the middle of a word. and since their language
does not put spaces between words, you do not need to consider about spacing.
 
to measure how well the text is justified in one configuration (i.e., a set of lines generated by inserting line breaks
to a paragraph), you have defined its cost as follows:
  the total cost of a paragraph is the sum of the cost of each line.  the cost for the last line is defined as max(0, s - w).  the cost for other lines are given by |s - w|. 
where s is the sum of the widths of the words in the line, and w is the width of the paper.
 
please design the algorithm which takes a paragraph and calculates the configuration of the minimum cost.
 

"
p01249,Billion Million Thousand,"
a linguist, nodvic natharus damenhof (commonly called dr. usoperant), invented an artificial language usoperant in 2007. the word usoperant means ‘one which tires’. damenhof’s goal was to create a complex and
pedantic language that would remind many difficulties in universal communications. talking in usoperant, you
should remember the importance of choosing your words in many conversations.
 
for example of the complexity, you may be confused by the way to say large numbers. usoperant has some
words that indicate exponential numbers in decimal, described as 10p where p is a positive integer. in terms of
english, those words might include thousand for 103 (1,000), million for 106 (1,000,000), and undecillion for
1036 (1,000,000,000,000,000,000,000,000,000,000,000,000).
 
you can concatinate those words to express larger numbers. when two words w1 and w2 mean numbers 10p1
and 10p2 respectively, a concatinated word w1w2 means 10p1+p2. using the above examples in english (actually
the following examples are incorrect in english), you can say 109 by millionthousand, 1012 by millionmillion
and 1039 by undecillionthousand. note that there can be multiple different expressions for a certain number.
for example, 109 can also be expressed by thousandthousandthousand. it is also possible to insert separators
between the adjacent components like million-thousand and thousand-thousand-thousand.
 
in this problem, you are given a few of such words, their representing digits and an expression of a certain number
in usoperant. your task is to write a program to calculate the length of the shortest expression which represents
the same number as the given expression.
 
the expressions in the input do not contain any separators like millionthousand. in case of ambiguity, the
expressions should be interpreted as the largest number among possibles. the resultant expressions should
always contain separators like million-thousand, so we can distinguish, for example, x-x (a concatinated word of
two x's) and xx (just a single word). the separators should not be counted in the length.
 

"
p01250,Pi is Three,"
&pi; (spelled pi in english) is a mathematical constant representing the circumference of a circle whose di-
ameter is one unit length. the name &pi; is said to come from the first letter of the greek words &pi;&epsilon;&rho;&iota;&phi;&#941;&rho;&epsilon;&iota;&alpha; (meaning periphery) and &pi;&epsilon;&rho;&#943;&mu;&epsilon;&tau;&rho;&omicron;&#962; (perimeter).
 

recently, the government of some country decided to allow use of 3, rather than 3.14, as the approximate
value of π in school (although the decision was eventually withdrawn probably due to the blame of many
people). this decision is very surprising, since this approximation is far less accurate than those obtained
before the common era.
 
ancient mathematicians tried to approximate the value of &pi; without calculators. a typical method was
to calculate the perimeter of inscribed and circumscribed regular polygons of the circle. for example,
archimedes (287–212 b.c.) proved that 223/71 &lt; &pi; &lt; 22/7 using 96-sided polygons, where 223/71
and 22/7 were both accurate to two fractional digits (3.14). the resultant approximation would be more
accurate as the number of vertices of the regular polygons increased.
 
as you see in the previous paragraph, &pi; was approximated by fractions rather than decimal numbers in
the older ages. in this problem, you are requested to represent &pi; as a fraction with the smallest possible
denominator such that the representing value is not different by more than the given allowed error. if
more than one fraction meets this criterion, the fraction giving better approximation is preferred.
 


"
p01251,Left Hand Rule,"
the left-hand rule, which is also known as the wall follower, is a well-known strategy that solves a two-
dimensional maze. the strategy can be stated as follows: once you have entered the maze, walk around
with keeping your left hand in contact with the wall until you reach the goal. in fact, it is proven that this
strategy solves some kind of mazes.
 
your task is to write a program that determines whether the given maze is solvable by using the left-hand
rule and (if the maze is solvable) the number of steps to reach the exit. moving to a cell from the entrance
or the adjacent (north, south, east or west) cell is counted as a step.
 
in this problem, the maze is represented by a collection of walls placed on the two-dimensional grid.
we use an ordinary cartesian coordinate system; the positive x-axis points right and the positive y-axis
points up. each wall is represented by a line segment which is parallel to the x-axis or the y-axis, such
that both ends of each wall are located on integer coordinates. the size of the maze is given by w and h
that indicate the width and the height of the maze, respectively. a rectangle whose vertices are on (0, 0),
(w, 0), (w, h) and (0, h) forms the outside boundary of the maze. the outside of the maze is always
surrounded by walls except for the entrance of the maze. the entrance is represented by a line segment
whose ends are (xe, ye) and (xe', ye'). the entrance has a unit length and is located somewhere on one
edge of the boundary. the exit is a unit square whose bottom left corner is located on (xx, yx).
 
a few examples of mazes are illustrated in the figure below. they correspond to the datasets in the sample
input.
 figure 1: example mazes (shaded squares indicate the exits) 



"
p01252,Alice and Bob,"
alice and bob are in love with each other, but they have difficulty going out on a date - alice is a very
busy graduate student at the acm university.
 
for this reason, bob came to the acm university to meet her on a day. he tried to reach the meeting
spot but got lost because the campus of the university was very large. alice talked with him via mobile
phones and identified his current location exactly. so she told him to stay there and decided to go to the
place where she would be visible to him without interruption by buildings.
 
the campus can be considered as a two-dimensional plane and all buildings as rectangles whose edges
are parallel to x-axis or y-axis. alice and bob can be considered as points. alice is visible to bob if the
line segment connecting them does not intersect the interior of any building. note that she is still visible
even if the line segment touches the borders of buildings.
 
since alice does not like to walk, she wants to minimize her walking distance. can you write a program
that finds the best route for her?
 figure 1: example situation 


"
p01253,Deadly Dice Game,"
t.i. financial group, a world-famous group of finance companies, has decided to hold an evil gambling
game in which insolvent debtors compete for special treatment of exemption from their debts.
 
in this game, each debtor starts from one cell on the stage called the deadly ring. the deadly ring
consists of n cells and each cell is colored black or red. each cell is connected to exactly two other
adjacent cells and all the cells form a ring. at the start of the game, each debtor chooses which cell to
start. then he rolls a die and moves on the ring in clockwise order by cells as many as the number of
spots shown on the upside of the die. this step is called a round, and each debtor repeats a round t times.
a debtor will be exempted from his debt if he is standing on a red cell after he finishes all the rounds.
on the other hand, if he finishes the game at a black cell, he will be sent somewhere else and forced to
devote his entire life to hard labor.
 
you have happened to take part in this game. as you are allowed to choose the starting cell, you want to
start from a cell that maximizes the probability of finishing the game at a red cell. fortunately you can
bring a laptop pc to the game stage, so you have decided to write a program that calculates the maximum
winning probability.
 

"
p01254,Reverse a Road,"
andrew r. klein resides in the city of yanwoe, and goes to his working place in this city every weekday.
he has been totally annoyed with the road traffic of this city. all the roads in this city are one-way, so he
has to drive a longer way than he thinks he need.
 
one day, the following thought has come up to andrew’s mind: “how about making the sign of one road
indicate the opposite direction? i think my act won’t be out as long as i change just one sign. well, of
course i want to make my route to the working place shorter as much as possible. which road should i
alter the direction of?” what a clever guy he is.
 
you are asked by andrew to write a program that finds the shortest route when the direction of up to
one road is allowed to be altered. you don’t have to worry about the penalty for complicity, because you
resides in a different country from andrew and cannot be punished by the law of his country. so just help
him!
 

"
p01255,Webby Subway,"
you are an officer of the department of land and transport in oykot city. the department has a plan to
build a subway network in the city central of oykot.
 
in the plan, n subway lines are built, and each line has two or more stations. because of technical
problems, a rail track between two stations should be straight and should not have any slope. to make
things worse, no rail track can contact with another rail track, even on a station. in other words, two
subways on the same floor cannot have any intersection.
 
your job is to calculate the least number of required floors in their plan.
 

"
p01256,Time Trial,"
some people like finishing computer games in an extremely short time. terry a. smith is one of such
and prefers role playing games particularly.
 
he is now trying to find a shorter play for one of the key events in a role playing game. in this event,
a player is presented a kind of puzzle on a grid map with three rocks and three marked squares. the
objective is to have all the rocks placed on the marked squares by controlling the hero of this game
appropriately.
 figure 1: example map 
the hero can move to the four adjacent squares, that is, to the north, east, south, and west, unless his move
is blocked by walls or rocks. he can never enter squares occupied by walls. on the other hand, when he
is moving to a square occupied by a rock, he pushes the rock in his moving direction. nonetheless, he
cannot push the rock if the next square is occupied by a wall or another rock and his move is blocked in
this case. also, he can only move one rock at a time. it is allowed to have rocks pass through marked
squares.
 
terry thinks he can reduce his playing time by finding the optimal way to move the rocks and then playing
the event accordingly. however, it is too hard for him to find the solution of this puzzle by hand. so you
are asked by him to write a program that finds the smallest number of steps for the maps given as the
input. here, each move from a square to its adjacent square is counted as one step.
 

"
p01257,Vending Machine,"
there has been marketing warfare among beverage vendors, and they have been working hard for in-
crease of their sales. the kola-coqua company is one of the most successful vendors among those:
their impressive advertisements toward the world has brought the overwhelming market share of their
representative product called koque.
 
this time, kola-coqua is focusing on vending machines. they think cusomters will be more pleasant as
the machines respond more quickly, so they have improved many parts of the machines.
 
in particular, they have developed a new device of change return. the new device can give one or more
kinds of coins at a time (in a single operation), although it can give only one coin for each kind at once.
for example, suppose there are 500-yen, 100-yen, 50-yen and 10-yen coins, change of 6540 yen can be
made by four operations of giving 500-yen and 10-yen coins and nine operations of giving 500-yen coins.
in conclusion, 6540 yen can be returned by thirteen operations. it is supposed that the new device allows
customers to make their purchase more quickly and so helps kola-coqua’s market share grow up.
 
however, the project leader says “no, it’s not optimal yet.” his suggesion is as follows: the real opti-
mization is to minimize the number of operations. for example, change of 6540 yen should be made
with ten of 500-yen coins, ten of 100-yen coins, ten of 50-yen coins, and four of 10-yen coins. this way,
6540 yen can be returned only with ten operations. this allows full speed-up in giving back change, even
though it sometimes results in a huge amount of coins.
 
given which kinds of coins are available and how much change should be given back, you are to write a
program that calculates the minimum number of operations according to the above suggestion. you may
assume that there are enough amount of coins inside the vending machines.
 

"
p01258,Memory Match,"
memory match is a single-player game which employs a set of 2m cards. each card is labeled with a
number between 1 and m on its face. for each number i (1 &le; i &le; m), there are exactly two cards which
have the number i. at the start of the game, all cards are shuffled and laid face down on a table. in each
turn you choose two cards and turn them face up. if two numbers on the cards are the same, they are
removed from the table. otherwise, they are turned face down again (this is called a mismatch). when
you choose cards, you do not have to turn two cards simultaneously; you can choose the second card
after you see the number of the first card. the objective of the game is to remove all the cards with as
few mismatches as possible.
 
royce a. mitchell has extraordinary memory, so he can remember all the positions and the numbers of
the cards that he has already turned face up. your task is to write a program that calculates the expected
number of mismatches, on average, when he plays the game optimally.
 

"
p01259,Tile Puzzle,"
you are visiting ancient and contemporary museum. today there is held an exhibition on the history of
natural science. you have seen many interesting exhibits about ancient, medieval, and modern science
and mathematics, and you are in a resting space now.
 
you have found a number of panels there. each of them is equipped with n &times; n electric tiles arranged
in a square grid. each tile is lit in one of the following colors: black (unlit), red, green, yellow, blue,
magenta, and cyan. initially all the tiles are in black. when a tile is touched on, that tile and the eight
adjacent tiles will change their colors as follows: black -&gt; red, red -&gt; green, green -&gt; yellow, yellow -&gt;
blue, blue -&gt; magenta, magenta -&gt; cyan, and cyan -&gt; black. here, the leftmost and rightmost columns
are considered adjacent, and so as the uppermost and lowermost rows. there is a goal pattern for each
panel, and you are to change the colors of the tiles as presented in the goal pattern. for example, if you
are given the goal pattern shown in the figure below for a panel of 4 &times; 4, you will touch on the upper-left
tile once and then on the lower-right tile twice (note that this might not be the only way).
 
since you are good at programming, you guess you can find the solution using your computer. so your
job in this problem is to write a program for it.
 figure 1: example goal pattern 


"
p01260,Girls' Party,"
issac h. ives hosted a party for girls. he had some nice goods and wanted to distribute them to the girls
as the presents. however, there were not enough number of presents and thus he needed to decide who
would take them. he held a game for that purpose.
 
before the game, issac had all the girls divided into two teams: he named his close friends bella and
gabriella as two leaders and asked other girls to join either bella or gabriella. after the two teams were
formed, issac asked the girls to form one big circle.
 
the rule of the game was as follows. the game consisted of a number of rounds. in each round, the girls
called numbers from 1 to n in clockwise order (n was a number fixed before the game started). the girl
calling the number n was told to get out of the circle and excluded from the rest of the game. then the
next round was started from the next girl, that is, the girls called the numbers again, and the one calling
n left the circle. this was repeated until only the members of either team remained. the remaining team
won the game.
 
as the game went on, bella found far more girls of her team excluded than those of gabriella’s team.
bella complained it, and requested issac to make the next round begin with a call of zero instead of one.
issac liked her idea as he was a computer scientist, and accepted her request. after that round, many
girls of gabriella’s team came to leave the circle, and eventually bella’s team won the game and got the
presents from issac.
 
now let’s consider the following situation. there are two teams led by bella and gabriella respectively,
where they does not necessarily have the same numbers of members. bella is allowed to change the
starting number from one to zero at up to one round (regardless the starting girl belongs to her team or
not). we want to know how many girls of bella’s team at most can remain in the circle. you are requested
to write a program for it.
 

"
p01261,Bitwise Kingdom,"
in the bitwise kingdom, located somewhere in the universe, there are exactly 2n citizens living and each
of them has a unique identification string that represents his or her class in the society. an identification
string is a binary string of length n which consists of characters ‘0’ or ‘1’. the order of classes is defined
among the citizens by the following criteria:
 citizens identified by a string containing a greater number of ones are ranked higher. for example,
       “011” indicates a higher class than “100”.  among those who have identification strings with the same number of ones, citizens identified by
       a lexicographically greater identification string are ranked higher. for example, “110” indicates a
       higher class than “101”. 
for example, if n = 3, there are 8 (= 23) people in the country, and their identification strings are “000”,
“001”, “010”, “100”, “011”, “101”, “110”, and “111” (from the lowest class to the highest).
 
you are given two numbers n (1 &le; n &le; 60) and m (1 &le; m &le; 2n), and you want to resolve the
identification string of the person of the m-th lowest class among 2n citizens. can you write a program
to solve this problem?
 

"
p01262,Adaptive Time Slicing Quantization,"
nathan o. davis is a student at the department of integrated systems. today he learned digital quanti-
zation in a class. it is a process that approximates analog data (e.g. electrical pressure) by a finite set of
discrete values or integers.
 
he had an assignment to write a program that quantizes the sequence of real numbers each representing
the voltage measured at a time step by the voltmeter. since it was not fun for him to implement normal
quantizer, he invented a new quantization method named adaptive time slicing quantization. this
quantization is done by the following steps:
  divide the given sequence of real numbers into arbitrary m consecutive subsequences called
       frames. they do not have to be of the same size, but each frame must contain at least two ele-
       ments. the later steps are performed independently for each frame.  find the maximum value vmax and the minimum value vmin of the frame.                                                                         .
          qi = vmin + (i - 1){(vmax - vmin)/(2l - 1)}
 

  round the value of each element of the frame to the closest quantized value. 
the key of this method is that we can obtain a better result as choosing more appropriate set of frames in
the step 1. the quality of a quantization is measured by the sum of the squares of the quantization errors
over all elements of the sequence: the less is the better. the quantization error of each element is the
absolute difference between the original and quantized values.
 
unfortunately, nathan caught a bad cold before he started writing the program and he is still down in his
bed. so he needs you help. your task is to implement adaptive time slicing quantization instead. in
your program, the quantization should be performed with the best quality, that is, in such a way the sum
of square quantization errors is minimized.
 

"
p01263,Reaction,"
you are a hero of a role playing game, asked by the king to defeat monsters threating people’s life.
 
you have been making a long journey with your colleagues, and you are now in the town closest to the
final dungeon where the head of monsters dwells. you have heard from people that the head monster hits
with his strong arms, casts powerful spells, and has many special abilities, and your party would be easily
killed off without powerful equipments due to severe damages. thus you need to prepare the equipments.
 
on the other hand, you have a number of magical spheres collected during the journey. those spheres
are not useful themselves, but they can be turned into special items by a spell of reaction. you can obtain
some amount of money by selling those special items to shops in the town, then buy the equipments by
that money.
 
the spell of reaction works as follows. each sphere has a color, and either positive attribute or negative
attribute. you choose one sphere with positive attribute and another with negative attribute, and you cast
the spell to the two spheres. then the spheres will make reaction to have a set of special items produced.
those spheres will disappear after the reaction. the set of items you will obtain solely depends on the
colors of the two spheres. you can cast the spell as many as you want, but of course you cannot cast the
spell to spheres that have disappeared. also, not all pairs of colors of spheres make reaction.
 
it is natural that you want to obtain money as much as possible. so you should choose carefully the pairs
of spheres before casting the spell. on the other hand, you should be an excellent programmer, so it
should be an easy task to write a program that finds the best way using your computer.
 
your task is now clear - write a program and get ready for the battle with the head monster!
 

"
p01264,Magical Island,"
this is a story in the epoch of magic. a clan of magicians lived in an artificial island built by magic power.
 
one day, a crisis erupted on the island. an empire acm (atlas country of magic) required unconditional
surrender to them, otherwise an imperial force attacked by magical missiles to the island. however, they
were so proud that they did not surrender to the acm, and built a system to generate magical shield to
protect the clan from the threat of magical missiles. in this system, a crystal with different elements was
put on each corner of the island: the world consisted of four elements, namely fire, water, air and earth.
each crystal generated magical shield with the element of the crystal by receiving magicians’ magic
power; it shielded the island from magical missiles of the same element: any magical missile consists of
one of the four elements. magic shield covered a circular area; the crystal should be located on the center
the circular area. the crystal required r2 magic power to shield a circular area of radius r. however,
there was one restriction. magicians should send exactly the same amount of magic power to all crystals,
otherwise the island was lost because of losing a balance between four elements.
 
they decided to live in an area which is shielded from any magical missile. your job is to write a program
to calculate minimum amount of magic power to secure enough area for them to live in.
 

"
p01265,Ninja Legend,"
ninjas are professional spies in the middle age of japan. they have been popular in movies and games
as they have been described with extraordinary physical abilities and unrealistic abilities.
 
you are absorbed in one of ninja games, ninja legend. in this game, you control in an exceptionally
talented ninja named master ninja and accomplish various missions. in one of the missions, the ninja
intrudes into a mansion and aims to steal as many gold pieces as possible. it is not easy to be done
because there are many pitfalls to evade him. once he falls into a pitfall, all he can do will be just to wait
for being caught by the owner of this mansion. this definitely means failure of the mission. thus, you
must control the ninja with a good strategy.
 
the inside of mansion is represented by a grid map as illustrated below. master ninja enters at and exits
from the entrance. he can move in the four directions to the floor cells. he can pick up gold blocks when
he moves to the cells where they are placed, but it is also allowed to pick up them in the later visit of
those cells or even to give up them.
 figure 1: example map 
the ninja has a couple of special abilities for dealing with the pitfalls. he has two moving modes: normal
mode and dash mode. he is initially in the normal mode. he gets into the dash mode when he moves
in the same direction by two cells in a row without picking up gold blocks. he gets back to the normal
mode when he changes the direction, picks up a gold block, or runs on a wall as mentioned later. he is
able to jump over a pitfall, or in the dash mode he can jump over two pitfalls in his dashing direction. in
addition, when he is in the dash mode, he can run on a wall to pass over up to four pitfalls in his dashing
direction. for his running, there must be consecutive wall cells adjacent to the passing cells including
the departure and arrival floor cells. note that he gets back to the normal mode when he runs on a wall
as mentioned previously.
 
in the figure below, the left one shows how the ninja runs on a wall, and the right one illustrates a case in
which he cannot skip over pitfalls by running on a wall.
 figure 2: running on a wall figure 3: non-consecutive walls 
you want to know the maximum number of gold blocks the ninja can get, and the minimum cost to get
those gold blocks. so you have decided to write a program for it as a programmer. here, move of the
ninja from a cell to its adjacent cell is considered to take one unit of cost.
 


"
p01266,Robot Communication,"
in the year 21xx, human beings are proliferating across the galaxy. since the end of the last century,
thousands of pioneer spaceships have been launched in order to discover new habitation planets.
 
the presitener is one of those spaceships, heading toward the andromeda galaxy. after a long, long
cruise in the hyperspace, the crew have finally found a very hopeful candidate planet. the next thing to
do is to investigate the planet whether it is really suitable for a new resident or not.
 
for that purpose, the ship is taking some unattended landers. the captain juclean dripac decided to
drop them to the planet and collect data about it. but unfortunately, these robots are a bit old and not so
clever that the operator has to program what to do on the planet beforehand of the landing. many staffs
including you are called for making this important plan.
 
the most complicated phase in the mission is to gather and integrate all the data collected independently
by many robots. the robots need to establish all-to-all communication channels to exchange the data,
once during the mission. that is, all the robots activate their communication channels all together at the
predetermined time, and they exchange the data with each other at that time.
 
they use wireless channels to communicate with each other, so the distance between robots does not limit
the connectivity. but the farther two robots goes, the more power they have to use for communication.
due to the limitation of the battery capacity, you want to save the transmission power as much as possible.
 
for a good thing, communication units of the robots also have the routing functionality, each robot only
has to talk with the nearest robot. suppose a graph whose vertices represent robots and edges represent
communication channels established between them. if the graph is connected, all-to-all communication
can be established.
 
your task is to write the program to calculate the minimum total transmission power required for all-
to-all communication among the robots. each robot moves linearly on the planet surface. each pair of
robots which communicate each other must occupy one channel, but you can assume enough number of
channels are available. the transmission power required for two robots is proportional to the distance
between them, so the cost here is exactly the sum of the distances between each pair of robots which
establish a communication channel.
 
you may also regard the planet surface as a two-dimensional surface, as it is huge enough. the time
required for communicating data among robots are also negligible.
 

"
p01267,Luck Manipulator,"
nathan o. davis くんは，あるゲームを攻略中であり，非常にレアなアイテムを手に入れようと四苦八苦していた．このレアなアイテムは，カジノのスロットマシーンで特殊な絵柄を一列に揃えたときに手に入れることができる．スロットマシーンには n 個のリールがあり，ボタンを一回押すと現在回転している最も左側のリールが停止する．そのため，このレアアイテムを手に入れるためには n 回ボタンを押す必要がある．また，特殊な絵柄で停止させるためにはあるタイミングでボタンを押す必要がある．ところが，このボタンを押すタイミングは非常にシビアであるため，なかなか上手くいかずに困っていた．そこで，nathan くんはメモリビューアを利用して，ゲーム中におけるメモリの値を確認しながらゲームを解析することにした．
 
nathan くんの解析の結果，その特殊な絵柄でリールを停止させるためには，ボタンが押された時に，メモリの 007e0d1f 番地に書き込まれた「乱数」が特定の値になっている必要があることを突き止めた．乱数の値は 1 フレーム毎に線形合同法によって変化しており，またボタンが押されたかどうかの判定は 1 フレーム毎に 1 回行われていることも分かった．ここで，線形合同法とは擬似乱数を生成するための方法の一つであり，以下の式によって値を決定する．
 
x' = (a &times; x + b) mod c
 
ここで，x は現在の乱数の値，x' は次の乱数の値，a, b, c は何らかの定数である．また，y mod z は y を z で割ったときの余りを表す．
 
例えば，2 個のリールを持つスロットマシーンで a = 5，b = 7，c = 11 で，最初の「乱数」の値が 10 であったとする．そして，特殊な絵柄でリールを止めるための条件は，左側のリールが 2，右側のリールが 4 であったとする．このとき，1 フレーム目における乱数の値は (5 &times; 10 + 7) mod 11 = 2 であるため，1 フレーム目にボタンを押せば左側のリールは特殊な絵柄で停止する．続く 2 フレーム目での乱数の値は (5 &times; 2 + 7) mod 11 = 6 であるから，2 フレーム目にボタンを押しても右側のリールは特殊な絵柄では停止しない．続く 3 フレーム目では乱数の値が (5 &times; 6 + 7 ) mod 11 = 4 になるので，3 フレーム目にボタンを押せば右側のリールは特殊な絵柄で停止する．よって，最短 3 フレームで全てのリールを特殊な絵柄で停止されることができ，レアなアイテムを手に入れることができる．
 
あなたの仕事は，最短で何フレーム目に全てのリールを特殊な絵柄で停止させることができるかを求めるプログラムを書いて，nathan くんがレアなアイテムを手に入れられるよう助けてあげることである．
 

"
p01268,Matsuzaki Number,"
matsuzaki 教授は，宇宙の真理を研究している科学者である．人生，宇宙，すべての答えは 42 であると言われているが，matsuzaki 教授はこれだけでは宇宙の真理を解明するには不十分であると考えている．matsuzaki 教授は，宇宙の真理は 2 つのパラメータからなる関数で表されると考えており，42 はその 1 つに過ぎないというのである．
 
matsuzaki 教授の定義した関数 m(n, p) は，n より大きい素数を 2 つ選んで（同じ数を 2 つでも構わない）和をとることで得られる数の全体を，小さいほうから順番に並べたときに，p 番目に現れる数を表す．ここで，2 通り以上の和で表されるような数も存在するが，そういった数は和の組み合わせの数と同じ個数だけ並べられる．
 
例として n = 0 の場合を考えよう．このときは素数全体から 2 つを選んで和をとることになる．そういった和のうちで最小の数を考えると，同じ数を 2 回選ぶことも許されていることから，2 + 2 = 4 であることがわかる．すなわち m(0, 1) = 4 である．次に小さい数は 2 + 3 = 5 であるから m(0, 2) = 5 となる．同様にして考えると，和を並べたものは 4, 5, 6, 7, 8, 9, 10, 10, 12, 13, 14, 14, 16, ... のようになることがわかる．すなわち，たとえば m(0, 9) = 12 である．
 
同じようにして n = 10 の場合を考えると，このときは 10 より大きい素数 {11, 13, 17, 19, ...} から 2 つを選ぶことになり，得られる和を小さいほうから並べると 22, 24, 26, 28, 30, 30, 32, ... のようになる．
 
あなたの仕事は，n と p が与えられた時に m(n, p) を計算するプログラムを書くことである．
 

"
p01269,Brave Princess Revisited,"
ある貧乏な国のおてんばで勇敢なお姫様が，政略結婚のため別の国に嫁ぐことになった．ところがお姫様を亡き者としようとしている悪漢が嫁ぎ先への道の途中で刺客を放っている．
 
お姫様を無事に相手国に送り届けるため，あなたは安全な経路を既に決定していたのだが，お姫様の今までに通ったことのない道を通ってみたいというわがままなたっての願いで別の道を通ることとなった．そこであなたは地図を見ながらお姫様が通る道を決めなおすことにした．
 
全ての道は，宿場同士をつなぐ街道である．便宜上，出発地点及び目的地点も宿場とする．ところが，新しい道は治安の問題を抱えていた．盗賊やお姫様を亡き者にしようとする刺客が襲いかかってくる可能性が高いのである．
 
そのような危険な道を通るには護衛を雇うことが望ましい．護衛は宿場で雇うことができ，道単位で姫を守らせることができる．護衛が守っている間は盗賊や刺客に襲われることはないが，距離 1 につき金 1 がかかる．そのため，護衛を雇うためには所持金よりも次の宿場までの距離が長くないことが条件となる．
 
いま，与えられた予算 l のもとで，姫が無事に目的地に着くまでに襲いかかってくる盗賊や刺客の人数を最小化することを考える．あなたの仕事は，その最小化された人数を求めることである．なお，宿場にいる間に襲われることはないものとする．
 

"
p01270,Restrictive Filesystem,"
あなたは新型記録媒体の開発チームに所属するプログラマーである．この記録媒体はデータの読み込み及び消去はランダムアクセスが可能である．一方，データを書き込むときは，常に先頭から順番にアクセスしていき，最初に見つかった空き領域にしか書き込むことができない．
 
あなたはこの記録媒体用のファイルシステムの構築を始めた．このファイルシステムでは，記録媒体の制限から，データは先頭の空き領域から順に書き込まれる．書き込みの途中で別のデータが存在する領域に至った場合は，残りのデータをその後ろの空き領域から書き込んでいく．
 
データの書き込みはセクタと呼ばれる単位で行われる．セクタには 0 から始まる番号が割り当てられており，この番号は記憶媒体上の物理的な位置を指す．セクタ番号は，記憶媒体の先頭から後方に向かって順に 0，1，2，3，… と割り当てられている．
 
ファイルシステムには，書き込み，削除，セクタの参照という 3 つのコマンドが存在する．
 
あなたの仕事はこのファイルシステムの挙動を再現した上で，参照コマンドが実行されたとき対象セクタにはどのファイルが配置されているか出力するプログラムを書くことである．なお，初期状態では記録媒体には何も書き込まれていない．
 
例えば，sample input の最初の例を見てみよう．最初の命令では 0 という識別子を持ったサイズが 2 であるファイルを書き込む．初期状態では記録媒体には何も書き込まれていない，すなわち全てのセクタが空き領域であるから，先頭にある 2 つのセクタ，すなわち 0 番目のセクタと 1 番目のセクタに書き込みが行われる．したがって，書き込みの後の記憶媒体は次のようになっている．
 
2 番目の命令によって，1 という識別子を持つファイルが 2 番目と 3 番目のセクタに書き込まれる．この後の記憶媒体の状態は次のようになる．
 
3 番目の命令によって，0 の識別子を持つファイルが削除される．記憶媒体の状態は次のようになる．
 
4 番目の命令によって，2 という識別子を持つファイルを 0 番目，1 番目，4 番目，5 番目のセクタに書き込む．
 
最後の命令では，3 番目のセクタが参照される．いま，3 番目のセクタには 1 という識別子のファイルが配置されているので，あなたのプログラムは 1 と出力しなければならない．
 


"
p01271,Mirror Cave,"
双子の冒険者 rin と len は鏡の洞窟でお宝を探している．この洞窟には鏡の間という対になった 2 つの部屋があり，その部屋の扉の向こうには高価な宝が眠っているという．
 
便宜上，2 つの部屋はそれぞれ w &times; h のセルが格子状に並んだものとみなす．部屋の外側は壁で囲まれている．また，部屋の内側にもところどころ壁が設置されており，壁の配置されているセルには進入することができない．宝の部屋への扉を開くためには，2 人が左右対称の動きをして，同時に特定のセルに到達しなければならない．しかも，片方だけが先に到達した場合は，扉はロックされて開かなくなってしまう．
 
左右対称の動きとは，北と北，西と東，東と西，南と南にそれぞれ同時に動くことを意味する．ただし，片方が動こうとしている先に壁があり，もう一方の先に壁が無いといった状況下でも左右対称の動きであると認められる．この場合は壁がある方はその場にとどまり，壁が無い方は隣のセルに動くことになる．
 
入力として，双子の初期位置，目的地，障害物の配置が与えられる．あなたの仕事は，この双子が扉を開けることが可能であるか判定するプログラムを書くことである．
 



"
p01272,Shore Erosion,"
あなたは地元の市役所に勤めるプログラマーである．あなたの住んでいる町は観光業が盛んで，とくに離れ小島にある海岸の海水浴場が人気がある．この島の周囲は砂浜により構成されているのだが，近年海岸浸食によって砂浜の面積が減ってきた．事態を重く見た観光課は，あなたに砂浜の形状変化のシミュレーションを依頼してきた．
 
シミュレーションでは，現在の砂浜の形状をもとに，ある期間が経過した後の砂浜の形状を求める．簡単のため，島の海岸線の形状は多角形（凸とは限らない）とみなす．期間のうちに，砂浜は現在の海岸線からマンハッタン距離で r だけ浸食されて海に沈むものと仮定する．ここで，マンハッタン距離とは x 座標同士の差と y 座標同士の差を足したものである．すなわち，(x1, y1) と (x2, y2) のマンハッタン距離は |x1 - x2| + |y1 - y2| で与えられる．
 
あなたの仕事は，入力として与えられた砂浜の海岸線から，シミュレーションの結果として得られる海岸線の長さを求めるプログラムを書くことである．なお，島が海岸浸食により 2 つ以上に分割された場合は，分割されたそれぞれの島について海岸線の長さを求めて，それらの和を出力すること．
 
なお，海岸線に含まれる 2 本の線分について，平行でかつマンハッタン距離がちょうど 2r になることはない．r が &epsilon; (|&epsilon;| &lt; ????) だけ変化したときに，結果の長さが ????? より大きく変化することはないと仮定してよい．-->
 


"
p01273,Infected Computer,"
adam ivan is working as a system administrator at soy group, inc. he is now facing at a big trouble:
a number of computers under his management have been infected by a computer virus. unfortunately,
anti-virus system in his company failed to detect this virus because it was very new.
 
adam has identified the first computer infected by the virus and collected the records of all data packets
sent within his network. he is now trying to identify which computers have been infected. a computer
is infected when receiving any data packet from any infected computer. the computer is not infected, on
the other hand, just by sending data packets to infected computers.
 
it seems almost impossible for him to list all infected computers by hand, because the size of the packet
records is fairly large. so he asked you for help: write a program that can identify infected computers.
 

"
p01274,Magic Slayer,"
you are in a fantasy monster-ridden world. you are a slayer fighting against the monsters with magic
spells.
 
the monsters have hit points for each, which represent their vitality. you can decrease their hit points
by your magic spells: each spell gives certain points of damage, by which monsters lose their hit points,
to either one monster or all monsters in front of you (depending on the spell). monsters are defeated
when their hit points decrease to less than or equal to zero. on the other hand, each spell may consume
a certain amount of your magic power. since your magic power is limited, you want to defeat monsters
using the power as little as possible.
 
write a program for this purpose.
 

"
p01275,Dial Lock,"
a dial lock is a kind of lock which has some dials with printed numbers. it has a special sequence of
numbers, namely an unlocking sequence, to be opened.
 
you are working at a manufacturer of dial locks. your job is to verify that every manufactured lock is
unlocked by its unlocking sequence. in other words, you have to rotate many dials of many many locks.
 
it’s a very hard and boring task. you want to reduce time to open the locks.
it’s a good idea to rotate multiple dials at one time. it is, however, a difficult problem to find steps to open
a given lock with the fewest rotations. so you decided to write a program to find such steps for given
initial and unlocking sequences.
 
your company’s dial locks are composed of vertically stacked k (1 &le; k &le; 10) cylindrical dials. every dial
has 10 numbers, from 0 to 9, along the side of the cylindrical shape from the left to the right in sequence.
the neighbor on the right of 9 is 0.
 
a dial points one number at a certain position. if you rotate a dial to the left by i digits, the dial newly
points the i-th right number. in contrast, if you rotate a dial to the right by i digits, it points the i-th left
number. for example, if you rotate a dial pointing 8 to the left by 3 digits, the dial newly points 1.
 
you can rotate more than one adjacent dial at one time. for example, consider a lock with 5 dials. you
can rotate just the 2nd dial. you can rotate the 3rd, 4th and 5th dials at the same time. but you cannot
rotate the 1st and 3rd dials at one time without rotating the 2nd dial. when you rotate multiple dials, you
have to rotate them to the same direction by the same digits.
 
your program is to calculate the fewest number of rotations to unlock, for given initial and unlocking
sequences. rotating one or more adjacent dials to the same direction by the same digits is counted as one
rotation.
 

"
p01276,Double Sorting,"
here we describe a typical problem. there are n balls and n boxes. each ball is labeled by a unique
number from 1 to n. initially each box contains one of these balls. we can swap two balls in adjacent
boxes. we are to sort these balls in increasing order by swaps, i.e. move the ball labeled by 1 to the first
box, labeled by 2 to the second box, and so forth. the question is how many swaps are needed.
 
now let us consider the situation where the balls are doubled, that is, there are 2n balls and n boxes,
exactly two balls are labeled by k for each 1 &le; k &le; n, and the boxes contain two balls each. we can swap
two balls in adjacent boxes, one ball from each box. we are to move the both balls labeled by 1 to the
first box, labeled by 2 to the second box, and so forth. the question is again how many swaps are needed.
 
here is one interesting fact. we need 10 swaps to sort [5; 4; 3; 2; 1] (the state with 5 in the first box, 4 in
the second box, and so forth): swapping 5 and 4, then 5 and 3, 5 and 2, 5 and 1, 4 and 3, 4 and 2, 4 and
1, 3 and 2, 3 and 1,and finally 2 and 1. then how many swaps we need to sort [5, 5; 4, 4; 3, 3; 2, 2; 1, 1]
(the state with two 5’s in the first box, two 4’s in the second box, and so forth)? some of you might think
20 swaps - this is not true, but the actual number is 15.
 
write a program that calculates the number of swaps for the two-ball version and verify the above fact.
 

"
p01277,Symmetry,"
open binary and object group organizes a programming contest every year. mr. hex belongs to this
group and joins the judge team of the contest. this year, he created a geometric problem with its solution
for the contest. the problem required a set of points forming a line-symmetric polygon for the input.
preparing the input for this problem was also his task. the input was expected to cover all edge cases, so
he spent much time and attention to make them satisfactory.
 
however, since he worked with lots of care and for a long time, he got tired before he finished. so he
might have made mistakes - there might be polygons not meeting the condition. it was not reasonable to
prepare the input again from scratch. the judge team thus decided to find all line-asymmetric polygons
in his input and fix them as soon as possible. they asked a programmer, just you, to write a program to
find incorrect polygons.
 
you can assume the following:
  edges of the polygon must not cross or touch each other except for the end points of adjacent
       edges.  it is acceptable for the polygon to have adjacent three vertexes on a line, but in such a case, there
       must be the vertex symmetric to each of them. 



"
p01278,Voronoi Island,"
some of you know an old story of voronoi island. there were n liege lords and they are always involved
in territorial disputes. the residents of the island were despaired of the disputes.
 
one day, a clever lord proposed to stop the disputes and divide the island fairly. his idea was to divide the
island such that any piece of area belongs to the load of the nearest castle. the method is called voronoi
division today.
 
actually, there are many aspects of whether the method is fair. according to one historian, the clever
lord suggested the method because he could gain broader area than other lords.
 
your task is to write a program to calculate the size of the area each lord can gain. you may assume that
voronoi island has a convex shape.
 

"
p01279,Defend the Bases,"
a country gizevom is being under a sneak and fierce attack by their foe. they have to deploy one or
more troops to every base immediately in order to defend their country. otherwise their foe would take
all the bases and declare ""all your base are belong to us.""
 
you are asked to write a program that calculates the minimum time required for deployment, given the
present positions and marching speeds of troops and the positions of the bases.

 

"
p01280,Galaxy Wide Web Service,"
the volume of access to a web service varies from time to time in a day. also, the hours with the highest
volume of access varies from service to service. for example, a service popular in the united states
may receive more access in the daytime in the united states, while another service popular in japan may
receive more access in the daytime in japan. when you develop a web service, you have to design the
system so it can handle all requests made during the busiest hours.
 
you are a lead engineer in charge of a web service in the 30th century. it’s the era of galaxy wide web
(gww), thanks to the invention of faster-than-light communication. the service can be accessed from
all over the galaxy. thus many intelligent creatures, not limited to human beings, can use the service.
since the volume of access to your service is increasing these days, you have decided to reinforce the
server system. you want to design a new system that handles requests well even during the hours with the
highest volume of access. however, this is not a trivial task. residents in each planet have their specific
length of a day, say, a cycle of life. the length of a day is not always 24 hours. therefore, a cycle of the
volume of access are different by planets of users.
 
you have obtained hourly data of the volume of access for all planets where you provide the service.
assuming the volume of access follows a daily cycle for each planet, you want to know the highest
volume of access in one hour. it should be a quite easy task for you, a famous talented engineer in the
galaxy.

 

"
p01281,Tatami,"
a tatami mat, a japanese traditional floor cover, has a rectangular form with aspect ratio 1:2. when
spreading tatami mats on a floor, it is prohibited to make a cross with the border of the tatami mats,
because it is believed to bring bad luck.
 
your task is to write a program that reports how many possible ways to spread tatami mats of the same
size on a floor of given height and width.
 

"
p01282,Revenge of the Round Table,"
two contries a and b have decided to make a meeting to get acquainted with each other. n ambassadors
from a and b will attend the meeting in total.
 
a round table is prepared for in the meeting. the ambassadors are getting seated at the round table, but
they have agreed that more than k ambassadors from the same country does not sit down at the round
table in a row for deeper exchange.
 
your task is to write a program that reports the number of possible arrangements when rotations are not
counted. your program should report the number modulo m = 1000003.
 
let us provide an example. suppose n = 4 and k = 2. when rotations are counted as different arrangements, the following six arrangements are possible.
 
however, when rotations are regarded as same, the following two arrangements are possible.
 
therefore the program should report 2.
 

"
p01283,Strange String Manipulation,"
a linear congruential generator produces a series r(&sdot;) of pseudo-random numbers by the following for-
mulas:
 
                      r(0) = s , r(i) = (a · r(i − 1) + c) mod m     (for i = 1, 2, . . .),
 
where s, a, c, and m are all parameters. in this problem, 0 &le; s, a, c &le; 15 and m = 256.
 
now suppose we have some input string i(&sdot;), where each character in the string is an integer between 0
and (m - 1). then, using the pseudo-random number series r(&sdot;), we obtain another string o(&sdot;) as the
output by the following formula:
 
                               o(i) = (i(i) + r(i)) mod m    (for i = 1, 2, . . .),
 
your task is to write a program that shows the parameters s, a, and c such that the information entropy of the output string o(&sdot;) is minimized. here, the information entropy h is given by the following formula:
 
where n is the length of the string and #(x) is the number of occurences of the alphabet x.
 

"
p01284,Erratic Sleep Habits,"
peter is a person with erratic sleep habits. he goes to sleep at twelve o'lock every midnight. he gets
up just after one hour of sleep on some days; he may even sleep for twenty-three hours on other days.
his sleeping duration changes in a cycle, where he always sleeps for only one hour on the first day of the
cycle.
 
unfortunately, he has some job interviews this month. no doubt he wants to be in time for them. he can
take anhydrous caffeine to reset his sleeping cycle to the beginning of the cycle anytime. then he will
wake up after one hour of sleep when he takes caffeine. but of course he wants to avoid taking caffeine
as possible, since it may affect his health and accordingly his very important job interviews.
 
your task is to write a program that reports the minimum amount of caffeine required for peter to attend
all his interviews without being late, where the information about the cycle and the schedule of his
interviews are given. the time for move to the place of each interview should be considered negligible.
 

"
p01285,Find the Point,"
we understand that reading english is a great pain to many of you. so we’ll keep this problem statememt
simple. write a program that reports the point equally distant from a set of lines given as the input. in
case of no solutions or multiple solutions, your program should report as such.

 

"
p01286,Luigi's Tavern,"
luigi's tavern is a thriving tavern in the kingdom of nahaila. the owner of the tavern luigi supports to
organize a party, because the main customers of the tavern are adventurers. each adventurer has a job:
hero, warrior, cleric or mage.
 
any party should meet the following conditions:
  a party should have a hero.  the warrior and the hero in a party should get along with each other.  the cleric and the warrior in a party should get along with each other.  the mage and the cleric in a party should get along with each other.  it is recommended that a party has a warrior, a cleric, and a mage, but it is allowed that at most
      nw, nc and nm parties does not have a warrior, a cleric, and a mage respectively.  a party without a cleric should have a warrior and a mage. 
now, the tavern has h heroes, w warriors, c clerics and m mages. your job is to write a program to find the maximum number of parties they can form.
 

"
p01287,Colored Octahedra,"
a young boy john is playing with eight triangular panels. these panels are all regular triangles of the
same size, each painted in a single color; john is forming various octahedra with them.
 
while he enjoys his playing, his father is wondering how many octahedra can be made of these panels
since he is a pseudo-mathematician. your task is to help his father: write a program that reports the
number of possible octahedra for given panels. here, a pair of octahedra should be considered identical
when they have the same combination of the colors allowing rotation.

 

"
p01288,Marked Ancestor,"
you are given a tree t that consists of n nodes. each node is numbered from 1 to n, and node 1 is always the root node of t. consider the following two operations on t:
 m v: (mark) mark node v. q v: (query) print the index of the nearest marked ancestor of node v which is nearest to it. initially, only the root node is marked. note that a node is an ancestor of itself. 
your job is to write a program that performs a sequence of these operations on a given tree and calculates
the value that each q operation will print. to avoid too large output file, your program is requested to
print the sum of the outputs of all query operations. note that the judges confirmed that it is possible to
calculate every output of query operations in a given sequence.
 

"
p01289,Strange Couple,"
alice and bob are going to drive from their home to a theater for a date. they are very challenging - they have no maps with them even though they don’t know the route at all (since they have just moved to
their new home). yes, they will be going just by their feeling.
 
the town they drive can be considered as an undirected graph with a number of intersections (vertices)
and roads (edges). each intersection may or may not have a sign. on intersections with signs, alice and
bob will enter the road for the shortest route. when there is more than one such roads, they will go into
one of them at random.
 
on intersections without signs, they will just make a random choice. each random selection is made with
equal probabilities. they can even choose to go back to the road they have just come along, on a random
selection.
 
calculate the expected distance alice and bob will drive before reaching the theater.
 

"
p01290,Queen's Case,"
a small country called maltius was governed by a queen. the queen was known as an oppressive ruler.
people in the country suffered from heavy taxes and forced labor. so some young people decided to form
a revolutionary army and fight against the queen. now, they besieged the palace and have just rushed into
the entrance.
 
your task is to write a program to determine whether the queen can escape or will be caught by the army.
 
here is detailed description.
  the palace can be considered as grid squares.  the queen and the army move alternately. the queen moves first.  at each of their turns, they either move to an adjacent cell or stay at the same cell.  each of them must follow the optimal strategy.  if the queen and the army are at the same cell, the queen will be caught by the army immediately.  if the queen is at any of exit cells alone after the army’s turn, the queen can escape from the army.  there may be cases in which the queen cannot escape but won’t be caught by the army forever,
      under their optimal strategies. 



"
p01291,Wind Passages,"
wind corridor is a covered passageway where strong wind is always blowing. it is a long corridor of
width w, and there are several pillars in it. each pillar is a right prism and its face is a polygon (not
necessarily convex).
 
in this problem, we consider two-dimensional space where the positive x-axis points the east and the
positive y-axis points the north. the passageway spans from the south to the north, and its length is
infinity. specifically, it covers the area 0 &le; x &le; w. the outside of the passageway is filled with walls.
each pillar is expressed as a polygon, and all the pillars are located within the corridor without conflicting
or touching each other.
 
wind blows from the south side of the corridor to the north. for each second, w unit volume of air can
be flowed at most if the minimum width of the path of the wind is w. note that the path may fork and
merge, but never overlaps with pillars and walls.
 
your task in this problem is to write a program that calculates the maximum amount of air that can be
flowed through the corridor per second.
 

"
p01292,Secret Operation,"
mary ice is a member of a spy group. she is about to carry out a secret operation with her colleague.
 
she has got into a target place just now, but unfortunately the colleague has not reached there yet. she
needs to hide from her enemy george water until the colleague comes. mary may want to make herself
appear in george’s sight as short as possible, so she will give less chance for george to find her.
 
you are requested to write a program that calculates the time mary is in george’s sight before her colleague arrives, given the information about moves of mary and george as well as obstacles blocking their
sight.
 
read the input section for the details of the situation.
 

"
p01293,Whist,"
whist is a game played by four players with a standard deck of playing cards. the players seat
around a table, namely, in north, east, south, and west. this game is played in a team-play
basis: the players seating opposite to each other become a team. in other words, they make two
teams we could call the north-south team and the east-west team.
 
remember that the standard deck consists of 52 cards each of which has a rank and a suit. the
rank indicates the strength of the card and is one of the following: 2, 3, 4, 5, 6, 7, 8, 9, 10, jack,
queen, king, and ace (from the lowest to the highest). the suit refers to the type of symbols
printed on the card, namely, spades, hearts, diamonds, and clubs. the deck contains exactly
one card for every possible pair of a rank and a suit, thus 52 cards.
 
one of the four players (called a dealer) shuffles the deck and deals out all the cards face down,
one by one, clockwise from the player left to him or her. each player should have thirteen cards.
then the last dealt card, which belongs to the dealer, is turned face up. the suit of this card is
called trumps and has a special meaning as mentioned below.
 
a deal of this game consists of thirteen tricks. the objective for each team is winning more
tricks than another team. the player left to the dealer leads the first trick by playing one of
the cards in his or her hand. then the other players make their plays in the clockwise order.
they have to play a card of the suit led if they have one; they can play any card otherwise. the
trick is won by the player with the highest card of the suit led if no one plays a trump, or with
the highest trump otherwise. the winner of this trick leads the next trick, and the remaining
part of the deal is played similarly. after the thirteen tricks have been played, the team winning
more tricks gains a score, one point per trick in excess of six.
 
your task is to write a program that determines the winning team and their score for given
plays of a deal.
 

"
p01294,For the Peace,"
this is a story of a world somewhere far from the earth. in this world, the land is parted into a
number of countries ruled by empires. this world is not very peaceful: they have been involved
in army race.
 
they are competing in production of missiles in particular. nevertheless, no countries have
started wars for years. actually they have a reason they can’t get into wars - they have
missiles much more than enough to destroy the entire world. once a war would begin among
countries, none of them could remain.
 
these missiles have given nothing but scare to people. the competition has caused big financial
and psychological pressure to countries. people have been tired. military have been tired. even
empires have been tired. no one wishes to keep on missile production.
 
so empires and diplomats of all countries held meetings quite a few times toward renouncement
of missiles and abandon of further production. the meetings were quite difficult as they have
different matters. however, they overcame such difficulties and finally came to the agreement
of a treaty. the points include:
  each country will dispose all the missiles of their possession by a certain date.  the war potential should not be different by greater than a certain amount d among all
      countries. 
let us describe more details on the second point. each missile has its capability, which represents
how much it can destroy the target. the war potential of each country is measured simply by
the sum of capability over missiles possessed by that country. the treaty requires the difference
to be not greater than d between the maximum and minimum potential of all the countries.
 
unfortunately, it is not clear whether this treaty is feasible. every country is going to dispose
their missiles only in the order of time they were produced, from the oldest to the newest. some
missiles have huge capability, and disposal of them may cause unbalance in potential.
 
your task is to write a program to see this feasibility.
 

"
p01295,Champernowne Constant,"
champernown constant is an irrational number represented in decimal by ""0."" followed by
concatenation of all positive integers in the increasing order. the first few digits of this constant
are: 0.123456789101112...
 
your task is to write a program that outputs the k digits of chapnernown constant starting at
the n-th place for given two natural numbers k and n.
 

"
p01296,Futon,"
the sales department of japanese ancient giant corp. is visiting a hot spring resort for their
recreational trip. for deepening their friendships, they are staying in one large room of a
japanese-style hotel called a ryokan.
 
in the ryokan, people sleep in japanese-style beds called futons. they all have put their futons
on the floor just as they like. now they are ready for sleeping but they have one concern: they
don’t like to go into their futons with their legs toward heads — this is regarded as a bad custom
in japanese tradition. however, it is not obvious whether they can follow a good custom. you
are requested to write a program answering their question, as a talented programmer.
 
here let's model the situation. the room is considered to be a grid on an xy-plane. as usual,
x-axis points toward right and y-axis points toward up. each futon occupies two adjacent cells.
people put their pillows on either of the two cells. their heads come to the pillows; their foots
come to the other cells. if the cell of some person's foot becomes adjacent to the cell of another
person's head, regardless their directions, then it is considered as a bad case. otherwise people
are all right.
 

"
p01297,Safe Area,"
nathan o. davis is challenging a kind of shooter game. in this game, enemies emit laser beams
from outside of the screen. a laser beam is a straight line with a certain thickness. nathan
moves a circular-shaped machine within the screen, in such a way it does not overlap a laser
beam. as in many shooters, the machine is destroyed when the overlap happens.
 
nathan is facing an uphill stage. many enemies attack simultaneously in this stage, so eventually
laser beams fill out almost all of the screen. surprisingly, it is even possible he has no ""safe area"" on the screen. in other words, the machine cannot survive wherever it is located in some
cases.
 
the world is as kind as it is cruel! there is a special item that helps the machine to survive
any dangerous situation, even if it is exposed in a shower of laser beams, for some seconds. in
addition, another straight line (called ""a warning line"") is drawn on the screen for a few seconds
before a laser beam is emit along that line.
 
the only problem is that nathan has a little slow reflexes. he often messes up the timing to
use the special item. but he knows a good person who can write a program to make up his slow
reflexes - it's you! so he asked you for help.
 
your task is to write a program to make judgement whether he should use the item or not, for
given warning lines and the radius of the machine.

 

"
p01298,Water Tank,"
you built an apartment. the apartment has a water tank with a capacity of l in order to
store water for the residents. the tank works as a buffer between the water company and the
residents.
 
it is required to keep the tank ""not empty"" at least during use of water. a pump is used to
provide water into the tank. from the viewpoint of avoiding water shortage, a more powerful
pump is better, of course. but such powerful pumps are expensive. that’s the life.
 
you have a daily schedule table of water usage. it does not differ over days. the table is
composed of some schedules. each schedule is indicated by the starting time of usage, the
ending time and the used volume per unit of time during the given time span.
 
all right, you can find the minimum required speed of providing water for days from the schedule
table. you are to write a program to compute it.
 
you can assume the following conditions.
  a day consists of 86,400 units of time.  no schedule starts before the time 0 (the beginning of the day).  no schedule ends after the time 86,400 (the end of the day).  no two schedules overlap.  water is not consumed without schedules.  the tank is full of water when the tank starts its work. 



"
p01299,Neko's Treasure,"
maki is a house cat. one day she fortunately came at a wonderful-looking dried fish. since she
felt not hungry on that day, she put it up in her bed. however there was a problem; a rat was
living in her house, and he was watching for a chance to steal her food. to secure the fish during
the time she is asleep, she decided to build some walls to prevent the rat from reaching her bed.
 
maki's house is represented as a two-dimensional plane. she has hidden the dried fish at (xt, yt).
she knows that the lair of the rat is located at (xs, ys ). she has some candidate locations to
build walls. the i-th candidate is described by a circle of radius ri centered at (xi, yi). she can
build walls at as many candidate locations as she wants, unless they touch or cross each other.
you can assume that the size of the fish, the rat’s lair, and the thickness of walls are all very
small and can be ignored.
 
your task is to write a program which determines the minimum number of walls the rat needs
to climb over until he can get to maki's bed from his lair, assuming that maki made an optimal
choice of walls.
 

"
p01300,Eleven Lover,"
edward leven loves multiples of eleven very much. when he sees a number, he always tries
to find consecutive subsequences (or substrings) forming multiples of eleven. he calls such
subsequences as 11-sequences. for example, he can find an 11-sequence 781 in a number 17819.
 
he thinks a number which has many 11-sequences is a good number. he would like to find out
a very good number. as the first step, he wants an easy way to count how many 11-sequences
are there in a given number. even for him, counting them from a big number is not easy.
fortunately, one of his friends, you, is a brilliant programmer. he asks you to write a program
to count the number of 11-sequences. note that an 11-sequence must be a positive number
without leading zeros.
 

"
p01301,Crystal Jails,"
artistic crystal manufacture developed products named crystal jails. they are cool ornaments
forming a rectangular solid. they consist of colorful crystal cubes. there are bright cores on the
center of cubes, which are the origin of the name. the combination of various colored reflections
shows fantastic dance of lights.
 
the company wanted to make big sales with crystal jails. they thought nice-looking color
patterns were the most important factor for attractive products. if they could provide several
nice patterns, some customers would buy more than one products. however, they didn't have
staff who could design nice patterns. so they hired a temporary designer to decide the patterns.
 
the color pattern for mass production had a technical limitation: all cubes of the same color
must be connected. in addition, they needed to send the pattern to the factory as a set of blocks,
i.e. shapes formed by cubes of the same color. they requested him to represent the design in
this form.
 
after a week of work, he sent various ideas of the color patterns to them. at first, his designs
looked nice, but they noticed some patterns couldn’t form a rectangular solid. he was a good
designer, but they had not noticed he lacked space geometrical sense.
 
they didn't have time to ask him to revise his design. although it was acceptable to ignore bad
patterns, it also took a lot of time to figure out all bad patterns manually. so the leader of this
project decided to ask you, a freelance programmer, for help.
 
your task is to write a program to judge whether a pattern can form a rectangular solid. note
that blocks can be rotated.
 

"
p01302,Cave Explorer,"
mike smith is a man exploring caves all over the world.
 
one day, he faced a scaring creature blocking his way. he got scared, but in short time he took
his knife and then slashed it to attempt to kill it. then they were split into parts, which soon
died out but the largest one. he slashed the creature a couple of times more to make it small
enough, and finally became able to go forward.
 
now let us think of his situation in a mathematical way. the creature is considered to be a
polygon, convex or concave. mike slashes this creature straight with his knife in some direction.
we suppose here the direction is given for simpler settings, while the position is arbitrary. then
all split parts but the largest one disappears.
 
your task is to write a program that calculates the area of the remaining part when the creature
is slashed in such a way that the area is minimized.
 

"
p01303,Petting Cats,"
ある学園のキャンパス内には、多くのねこが住んでいる。なつめは、それらのねこをかわいがることを日課としている。
しかし、ねこ達は気まぐれで、キャンパスの外に散歩に出かけているかもしれない。
 
キャンパスの敷地は各辺が x 軸または y 軸に平行な長方形であり、門の部分を除いてフェンスで囲まれているが、ねこは門から自由に出入りできるし、また、フェンスを乗り越えて移動することもある。
 
ある日、なつめはキャンパス内にいるねこたちをなるべく平等にかわいがるために、キャンパス内に何匹のねこがいるのかを知りたいと考えた。
あなたの仕事は、座標平面上のキャンパスの位置とねこ達の座標が与えられたときに、キャンパス内にいるねこの数を求めることである。
ただし、フェンスの上を歩いているねこや、ちょうど門を通過中のねこもキャンパス内にいるとみなす。
 

"
p01304,Kyo Walking,"
平安京は、道が格子状になっている町として知られている。
 
平安京に住んでいるねこのホクサイは、パトロールのために毎日自宅から町はずれの秘密の場所まで行かなければならない。しかし、毎日同じ道を通るのは飽きるし、後を付けられる危険もあるので、ホクサイはできるだけ毎日異なる経路を使いたい。その一方で、ホクサイは面倒臭がりなので、目的地から遠ざかるような道は通りたくない。
 
平安京のあちこちの道にはマタタビが落ちていて、ホクサイはマタタビが落ちている道を通ることができない。そのような道を通るとめろめろになってしまうからである。幸いなことに、交差点にはマタタビは落ちていない。
 
ホクサイは、自宅から秘密の場所までの可能な経路の数を知りたい。ここで、ホクサイの自宅は (0, 0) にあり、秘密の場所は(gx, gy)にある。道は x = i (i は整数), y = j (j は整数) に格子状に敷かれている。
 

"
p01305,Card Game,"
ねこのゲイツとジャッキーは、2人で遊ぶカードゲームのルールを考えた。そのルールとは次のようなものである。
 
まず、1から18の数字が書かれたカードをシャッフルし、それぞれのプレーヤーに9枚ずつ配る。両者は同時に1枚のカードを同時に出し、その値によってスコアを得る。値の大きいカードを出したプレーヤーは、大きい方の値と小さい方の値の和を自分のスコアに加える。その際、値の小さいカードを出したプレーヤーはスコアを得られない。また、一度場に出されたカードは二度と使うことはできない。カードをすべて使い終わった後にスコアが大きかったプレーヤーの勝ちとする。
 
ゲイツとジャッキーは互いに無作為にカードを選んで出してみることにした。最初に配られたカードが与えられたとき、ゲイツとジャッキーが勝つ確率をそれぞれ求めよ。
 

"
p01306,Unit Converter,"
国際単位系(si)では、kilo, mega, giga などの接頭辞を使って、「数値 + 接頭辞 + 単位」という形でさまざまな物理量を表記する。たとえば、「3.5 kilometers」, 「5.1 milligrams」 といった具合である。
 
一方、これらの物理量は指数表記を使って「3.5 * 10^3 meters」、「5.1 * 10^-3 grams」のように表すことも可能である。
 
物理量の測定は必ず誤差を含む。そこで、測定された物理量がどれだけの精度を持つかを表すために、有効数字という概念がある。有効数字を考慮した表記では、最後の桁は誤差を含みうるが、それ以外の桁は信頼できるものと考える。たとえば、「1.23」 と表記した場合、真の値は 1.225 以上 1.235 未満であり、小数第1位以上の桁は信頼できるが、小数第2位には誤差を含む。このように「信頼できる桁 + 誤差を含む1桁」という形で物理量を表したときの桁数を有効桁数と呼ぶ。たとえば、「1.23」の有効桁数は3桁である。
 
0でない最上位の桁より前に0がある場合、その0は有効桁数には含めない。たとえば、「0.45」の有効桁数は2桁である。 0でない最下位の桁より後に0がある場合、その0を有効桁数に含むかどうかは小数点の位置により異なる。小数点より右まで0があるときは、その0は有効桁数に含める。たとえば、「12.300」の有効桁数は5桁である。一方、「12300」のように、小数点より右に0がないときは、右側の0を有効桁数に含めるかどうかは明確ではないが、この問題においては含めることとする。すなわち、「12300」の有効桁数は5桁である。
 
なつめは学校の課題で物理の問題を出された。その中で有効数字や単位が関わる計算をしなければならないのだが、困ったことになつめには有効数字や単位の使い方がまだよくわかっていない。そこで、自動でそれらの計算をするプログラムを作って、なつめを助けてあげてほしい。
 
あなたが書くのは、接頭辞を使った表記が与えられたとき、それを有効桁数が等しい指数表記に変換するプログラムである。使われる接頭辞は以下の20個である。
  yocto = 10^-24


"
p01307,Addition Game,"
ねこのファーブルは足し算を用いた簡単なゲームを思いつき、同じくねこで友達のオードリーと一緒にやってみることにした。
 
ゲームのルールは次のようなものである。まず最初に、適当な正の整数を選び、そこからスタートする。各プレーヤーは、その数のうち隣り合う2つの桁を選択して和を計算し、もとの2つの数字と置き換える。たとえば、「1234」の十の位と百の位を選ぶと、次の数は「154」となる。「5555」の十の位と百の位を選んだ場合は「5105」となる。このような操作を数が1桁になるまで交互に繰り返し、操作ができなくなったプレーヤーが負けとなる。
 
ゲーム開始時の整数の値が与えられる。先攻であるファーブルと後攻であるオードリーがいずれも最適な戦略を取るとき、どちらが勝つのかを判定するプログラムを作成せよ。
 

"
p01308,Angel Stairs,"
なつめの住んでいる街の上に浮かんでいる雲には、天使が住んでいる。その天使はなつめと同じくねこ好きで、しばしばねこと遊びに地上に降りてくる。地上に降りるために、天使は雲から地上へ繋がる長い長い階段を作った。しかし、毎回毎回ただ降りていくだけではつまらないと思った天使は、階段に細工をして、段を踏むと音が出るようにした。これを使って、音楽を奏でながら降りていくのだ。
 
音楽は12種類の音を使って奏でるものである。今回、音のオクターブは無視することにして、 c, c#, d, d#, e, f, f#, g, g#, a, a#, b の12種類のみを考える。隣りあう音同士の差を半音と呼ぶ。たとえば、cを半音上げるとc#、c#を半音上げるとdとなる。逆に、gを半音下げるとf#、 f#を半音下げるとfとなる。なお、eを半音上げるとf、bを半音上げるとcになることに注意してほしい。
 
階段から音が出る仕組みは次のようになっている。まず、階段は空中に浮かぶ n 枚の白い板からなっている。雲から数えて 1 ~ n 段目の板には、それぞれに12音のどれかが割り振られている。これを ti (i = 1 ... n) と書くことにする。また簡単のために、雲は0段目、地上は n+1 段目と考える (ただしこれらには音階は割り当てられていない) 。天使が k (k = 0 ... n) 段目にいるとき、次はk-1, k+1, k+2 段のうち存在するもののどれかに行くことができる。ただし、n+1 段目 (地上) に降りた後は動くことはできず、0段目 (雲) を離れた後はそこに戻ることはできない。それぞれの動き方をしたとき、次のようなルールで音が鳴る。
 
階段の情報 t1 ... tn と、天使が奏でたい曲 s1 ... sm が与えられる。このとき、奏でたい曲の前、途中、後で別の音を鳴らしてはならない。天使がこの曲を奏でて雲から地上へ降りられるかどうか判定せよ。
 

"
p01309,A Book Shop With a Frequent Greetings,"
なつめは大のねこ好きである。なつめはある日、いつも親しくしている野良ねこたちから、ねこたちが開いている不思議な本屋に行こうと誘われた。その本屋ではたくさんのねこの写真が載った本が売られていると聞き、なつめは喜んでついていくことにした。
 
なつめは知らなかったのだが、ねこたちに連れられていった本屋は全国にチェーン店を持つ有名店であった。その店ではしっかりとした店員用マニュアルが用意されており、どの店舗でも店員の行動が統一されている。以下はそのマニュアルからの抜粋である。
 店員からユークリッド距離10以内のドアからお客様が入店された際には、 x 秒間かけて大声で「いらっしゃいませこんにちは」といわなければならない。 ユークリッド距離50以内の他の店員が「いらっしゃいませこんにちは」と言っているのを聞いた店員は、その「いらっしゃいませこんにちは」の発声終了時に「いらっしゃいませこんにちは」と x 秒かけて大声で復唱しなければならない。ただし、この復唱の発声開始時から過去 y 秒以内に、別の「いらっしゃいませこんにちは」を発声完了していた店員は、復唱してはならない。 
x, y, 客の位置、店員の配置が与えられるので、客が入ってから店が静かになるまで何秒かかるか計算せよ。復唱が鳴り止まない場合は、""you're always welcome!""と出力せよ。
 

"
p01310,Drawing Lots,"
なつめは大のねこ好きである。なつめは今日も日課としている野良ねこのブラッシングをするために，いつも野良ねこが集まってくる校庭の一角に向かうことにした。
 
そのスポットに今日は n 匹のねこが集まってきた。なつめは全員をブラッシングしてやりたかったのだが，ちょうどそこに来る直前に突然用事が出来てしまい，時間的に一匹しかブラッシングしてやれないことになってしまった。ブラッシングはどのねこも楽しみにしているので，一匹だけやると他のねこが嫉妬してしまう。そこでねこたちを納得させるために，どのねこをブラッシングするかをあみだくじで決めることにした。
 
あみだくじは n 本の縦線とあらかじめ引いた m 本の横線からなる。横線はとなりあう2本の縦線をそれらと垂直になるように結ばなければならない。また，横線同士が端点を共有してはいけない。ある1本の縦線の下端には当たりのマークがつけてある。これらの条件を満たすあみだくじの例を図に示す（これらはサンプル入力の例と対応している）。
 
ねこたちはそれぞれ縦線の上端からどれか1つを選ぶ。そしてあみだくじを辿った結果，当たりをひいたねこが，今日のブラッシングをしてもらう権利を手に入れることができる，というルールである。なつめは早速あみだくじを作成した。縦線・横線・当たりを書き込み，横線が見えないように隠した。
 
いよいよねこたちに選んでもらおうという時になって，なつめは n 匹のねこの中に，普段は顔を見せない野良ねこのアクタガワがいることに気がついた。アクタガワはもう一ヶ月ほどブラッシングをしておらず，毛がごわごわしている。
 
なつめは他のねこたちには申し訳ないと思いながらも，ズルをしてアクタガワをブラッシングするように仕組むことにした。まず，ねこたちにそれぞれ普通通り縦線を選んでもらう。全員が選び終わったらなつめはこっそりといくつかの横線を追加し，アクタガワが当たるようにあみだくじを変更するのだ。
 
しかし，アクタガワが選んだ縦線によってはアクタガワを当たりにするために新たに引かなければならない横線が多すぎて，細工をしている間にねこたちに計画がバレてしまうかもしれない。そこでなつめはまずそれぞれの縦線について，アクタガワがそれを選んだ場合に何本の横線を引けば当たりにすることができるかを求めることにした。
 
なお，新たに引く横線も，となりあう2本の縦線をそれらと垂直に結ばなければならず，横線同士が端点を共有しないように引かなければならない。
 

"
p01311,The Door into Summer,"なつめは大のねこ好きである。なつめの家ではずっとねこを飼っておらず、ねこ好きななつめはいつも野良ねこと遊んでいた。しかし、今回なつめは決心し、自分の家でねこを一匹飼うことにした。なつめはねこを家に迎え、レノンと名付けてかわいがり始めた。 なつめの家はたくさんの部屋と、それらをつなぐたくさんの扉からなっており、扉は次の2種類がある。 レノンは夏が大好きである。だから、冬になり家の外がまっしろな雪で覆われてしまう頃になると、彼の機嫌はとても悪くなってしまった。しかし、彼は家にたくさんあるドアのうち、あるひとつの扉が「夏」へとつながっていると信じているようだった。なつめはその扉を「夏への扉」と呼んでいる。そして、寒くて不機嫌になってくると、レノンはきまってその扉の向こうへ行きたがるのである。 冬のある日、レノンがまた「夏への扉」の奥へ行こうと思い立った。しかし、レノンがひとりで扉を開けて、夏への扉の奥へ行けるとは限らない。その時はもちろん、なつめはレノンの手伝いをしなければならない。つまり、なつめしか開けることの出来ない扉をいくつか開いて、レノンが「夏への扉」の向こう側へ行けるようにしてあげるのだ。 最初、家の中の全ての扉は閉まっている。家の部屋の接続関係、なつめおよびレノンの初期位置が与えられる。なつめとレノンが最適な戦略をとった時、レノンが「夏への扉」の先へいくためになつめが開けなければならない扉の最小数を計算しなさい。 以下の図は、サンプル入力の例を図示したものである。 




図: サンプル入力の初期状態


"
p01312,Cat Burglar and Friday House,"
なつめは大のねこ好きである。なつめの通学路には通称ねこ屋敷と呼ばれている家がある。その家はたくさんのねこを飼っていることで有名で、なつめは通学途中によくこの家の前で飼いねこに遭遇し、一緒に遊んでいた。そんなある日、なつめは衝撃的な事実を知ってしまった。それは、実はねこ屋敷の主人は、機嫌が悪くなるとよく飼いねこたちを虐待している、ということだった。ねこ屋敷の主人を許せなくなったなつめは、ねこたちを救うため、主人の居ない間にねこたちを盗みだすことにした。
 
なつめはねこ屋敷の主人の行動パターンを観察し、毎週決まって出掛けているタイミングをねらってねこたちを盗みだすことにした。ねこ屋敷は二次元平面として表わされており、なつめが屋敷の中に忍びこむ時点でのそれぞれのねこの位置は分かっている。ねこたちはそれぞれ決まったルートを常に50メートル毎分のスピードでまわっている。一方、なつめは最大80メートル毎分のスピードで移動できる。なつめは屋敷のとある場所から侵入し、屋敷内を移動し、主人が帰ってくるまでに脱出口から出る。なつめがねこと同じ地点に到達すると、なつめはねこを抱えることができる。これを行なうのにかかる時間は無視できる。なつめは何匹でもねこを抱えることができるし、何匹抱えていても移動速度が落ちることはないが、必ず主人が帰ってくる前に屋敷を脱出しなければならない。
 
残念ながら、なつめはねこ屋敷のねこを全員盗みだすことはできないかもしれない。しかし、1匹でも多くのねこを幸せにするために、できるだけ多くのねこを盗みだすことにした。また、同じ数のねこを盗みだせるのであれば、屋敷の主人に捕まるリスクを抑えるため、できるだけ早い時間に屋敷から脱出する。
 
なつめが屋敷に侵入する時刻と位置、屋敷の主人が戻ってくる時刻、脱出口の場所、およびねこの初期位置と巡回ルートが与えられる。なつめが何匹のねこを盗みだして、どの時刻に屋敷を脱出できるかを答えるプログラムを書いてほしい。
 

"
p01313,Cat Numbers!,"
ねこのアリストテレスは数学の問題を考えるのを趣味にしている。今彼が考えている問題は以下のようなものである。
 
1以上の自然数 a, b (a &lt; b) に対して、a から b までの自然数の和を c、a と b を十進表記して a, b の順に結合したものを d とすると、両者が等しくなることがある。たとえば1から5までの和は15、2から7までの和は27、7から119までの和は 7119、といった具合である。このような a と b のペアのことを cat numbers と呼ぶことにする。アリストテレスは、a と b の桁数が与えられたときに、cat numbersを全て列挙したい、と考えた。
 
アリストテレスは、a または b を固定した場合に解が存在するかどうかを確かめる方法は思いついたので、小さい桁数に対しては答えを得ることができた。しかし、桁数が大きくなるにしたがって計算をするのが大変になり、途中でうんざりして投げ出してしまった。そこで、あなたにお願いがある。アリストテレスに代わって、指定された桁数のcat numbersを全て列挙するプログラムを書いてほしい。
 

"
p01314,Sum of Consecutive Integers,"

<!--
"
p01315,Moonlight Farm,"
<!--
"
p01316,Differential Pulse Code Modulation,"
<!--
"
p01317,Mr. Rito Post Office,"
<!--
"
p01318,Immortal Jewels,"
<!--
"
p01319,Canal: Water Going Up and Down,"

<!--
"
p01320,Magical Island 2,"

<!--
"
p01321,Final Examination!,"
私立桜が丘女子高等学校に通う平沢唯さんは明後日までに進路希望を出さなければならないのだが、困ったことに進路についてまだ何も決めていなかった。
友人の和に相談したところ、和の第一志望はk大と知り、自分もk大に入れるかどうか進路指導の先生に相談にいった。
 
相談された進路指導の先生であるあなたは唯さんがk大に入れるかどうかを予想するため唯さんの期末試験の成績を参考にすることにした。
しかし、唯さんは試験の山が当たるかどうかによって大きく成績が左右されるため、過去の期末試験の中で一番良かった時の点数と一番悪かった時の点数を調べることにした。
過去の期末試験のデータは5教科の各点数のみしか残っておらず、試験の合計点数は残っていなかった。
したがってあなたの仕事は各試験の点数データを入力として、過去の期末試験の中で一番良かった時の点数と一番悪かった時の点数を出力するプログラムを書くことである。
 

"
p01322,Lottery Checker,"あなたは無事進学振り分けを終え、駒場近辺から本郷近辺へ引っ越す準備の最中であった。 家の中を整理していたところ去年購入した宝くじが大量に見つかった。 交換期限を確認したところ明日までに換金しなければならないのだが、引っ越しの準備がまだ全く終わっていないため少額の当選金のために宝くじ売り場まで行くのは面倒である。 そこであなたはいくら当選金が得られるかを調べることにした。 宝くじは8桁の数字からなる。当選番号は同じく8桁で数字と'*'から構成され、持っている宝くじと数字部分が一致した場合、当選番号に応じた当選金が支払われる。 例えば所持している宝くじの番号が ""12345678"" の場合、当選番号が ""*******8"" や ""****5678"" の場合は当選となるが、当選番号が ""****4678"" のときは当選とはならない。当選番号は複数あり得て、それぞれ独立に当選金が支払われる。ただし、当選番号は1枚の宝くじが2つ以上の当選番号に当たらないように選ばれる。たとえば当選番号が ""*******8"", ""****5678"" の2つであった場合、 ""12345678"" は両方に当選してしまうため、このような当選番号の選ばれ方がされることはない。 あなたの仕事は、入力として与えられる所持している宝くじの番号と宝くじの当選番号に対して、いくらの当選金が得られるかを出力するプログラムを書くことである。 
 

"
p01323,Compile,"東京大学に入学したきたまさ君はtsg(東大スーパーゲーマーズ)というサークルに入った。 このサークルは毎年、駒場祭でゲームを展示しており、きたまさ君もゲームを作成して展示することにした。 きたまさ君の作成するゲームは次のような、よくある落ち物パズルゲームである。 横6マス×縦12マスの格子状のフィールドがあり、各マスにつき1個のブロックを置くことができる。 上からブロックが2つ1組で落下してくる。ブロックには赤・緑・青・黄・紫の5色の基本ブロックとお邪魔ブロックの計6種類がある。プレイヤーはブロックを回転、横移動により操作し、落下位置を変更することができる。 落下してきたブロックがフィールドの床やほかのブロックに衝突すると、その位置にブロックが固定される。 固定されたブロックと同色のブロックが周囲4方向にある場合、それらは互いにくっつく。ただし、お邪魔ブロックは互いにくっつかない。 ブロックが4個以上くっつくと消滅し得点となる。お邪魔ブロックの周囲4方向に存在する基本ブロックが消滅すると、そのお邪魔ブロックも一緒に消滅する。ブロックの消滅は、全てのブロックの落下が終了したタイミングで同時に起こる。 ブロックの消滅により、その上にあったブロックが落下する。このブロックの落下はプレイヤーが操作できない。このとき再びブロックが4個以上くっつくと消滅し、連鎖が起きる。ただし、複数色を同時に消した場合でも、1連鎖扱いとなる。 

 きたまさ君はこのゲームの大部分のプログラムを書き終えたが、どうしてもブロックがくっついて消滅したときの処理を書くことが出来なかった。そこでサークルの友人であるあなたにその部分のプログラムを書いてもらうことにした。 
 

"
p01324,Consistent Unit System,"これらが何か分かるだろうか。これらは全て10の累乗につけられた数詞である。 ではこれらが実用的に使われているのを見たことはあるだろうか？無いのではなかろうか？ 過去の先人達が熟考の末にこれらの命名を行ったにもかかわらず、これらの数詞が日の目を見られないとはなんと勿体無いことだろう。 この問題は、コンテスト参加者の皆様にこれらの数詞を知ってもらうために作られたものである。以下に問題の概要を示す。 上記のような単位間の関係が入力として与えられる。この問題では、左辺における単位が右辺における単位の10の累乗倍となっているような単位間の関係だけが与えられる。
単位間の関係が矛盾しているとは、与えられた関係から以下の関係が同時に成り立つことをいう。 
ただし、 x&ne;yであり、 aとbは任意の単位。
 入力として与えられた単位間の関係が矛盾しているかどうか判定せよ。 なお、入力は簡易のため指数表記で与えられる。 
 

"
p01325,The Melancholy of Thomas Right,"昨日の夕方の話。 普段通り大学での講義が終わり、日課であるキャンパスでの猫への餌付けを済ませた後、家に帰り着くと、作業着を着た人たちが僕の家の扉を取り替える工事をしていた。 それだけなら特に僕の頭痛の種を増やすような出来事ではないのだが、取り外されて去っていく慣れ親しんだ鍵とレバーがついている茶色の扉が非常に平凡であるのに対して、今からまさに取り付けられようとしている黒色の扉が非常に奇妙なもので、ああこれはまたうちの親父が何かを思いついてしまったのだなと容易に想像がついてしまうのであった。 その偏屈親父が言うには、鍵は無くす可能性があるので信用することが出来ない。手元に鍵があったとしても、目を離している隙に鍵の複製が作られてしまったかもしれない。物にセキュリティーを頼る時代はもう終わりだ。これからはパスワードを家族の各人が覚え、そうすることによって世界征服を目論む悪の科学者から我輩の発明品を守るのだ、ということらしい。 新しく設置された扉には縦にn個ずつ、横にn個ずつの正方形をかたちどるように、縦にn+1本、横にn+1本の線が薄青色で引かれていた。 一行目の正方形の左にはa、二行目の正方形の左にはb、というように、ご丁寧に行番号が書かれている。 一列目の正方形の上には1、二列目の正方形の上には2、と、列番号はどうやら数字のようだ。 n2個の正方形には各々スイッチが一つずつ配置されており、offの状態だと真っ黒だが、onの状態だと赤い丸が浮かび上がる、というセキュリティーを考えるならもう少しやりようがあるだろうというギミックが付いている。 そして全てのスイッチのon/offを正しく合わせたときのみ、扉が開く、という派手好きの親父が大満足な仕様となっているようだ。 さて、ここでの僕の問題は、このパスワードをきちんと覚えられる自信が無い、ということだ。 自分で言うのも何なのだが、僕は頭がそんなに悪くないつもりなので、パスワードの大体は覚えていられるだろうと思うのだが、機械という物は融通が効かないものだからほんのちょっと間違っただけで、寒空の下で夜を過ごすことになりかねない。 しかし、パスワードを書き写して持ち運べば、親父に見つかったときに小遣い抜きなどの理不尽な制裁が加えられることが予想される。 そこで僕はある作戦を思いついたんだ。 各行、各列の正方形に含まれる赤丸の個数をメモしてそれを持ち運ぼう。 一行目のn個の正方形に含まれる赤丸の個数、二行目のn個の....、 一列目のn個の正方形に含まれる赤丸の個数、二行目のn個の....、 という風に2n個の数字をメモしておけば、もし他の人に見られてもただの数字の羅列だ。何が何だかきっと分からないだろう。 やあわざわざここまで読んでくれた君。 ああそうだ、この作戦にはもしかしたら致命的な欠陥があるかもしれない。 複数のパスワードが、同じメモになってしまうかもしれないのだ。 そうなると、寒空(略)ということになりかねない。我が身の健康を揺るがす一大問題だ。 そこで君には、このメモの数字を入力すると、復元可能なパスワードが一つに定まるかどうかを判定するプログラムを書いてほしい。 一つに定まるなら、yes、そうでないなら、noと出力するだけのプログラムさ。簡単だろう？ もしかしたらメモをとった時に赤丸を数え間違ったかもしれない。その場合は復元できるパスワードが1つも存在しないかもしれないが、その時は迷わずnoと返してくれ。 ああそうそう、間違っても僕の家に勝手に入ろうとはしないでくれよ。親父の趣味の危ない機械や罠が並んでいるから、命の保証が出来ないからね。 
 

"
p01326,8,"utf-8はマルチバイト文字を符号化する手法の一つである。 文字は計算機上ではバイト列として扱われる。英語だけであればラテンアルファベットおよび数字、記号を合わせても 1byteで表現できるが、残念ながら世界中で利用されている文字を1byteで表現することはできないため、複数のバイトを用いて文字を表す必要がある。 ここで例えば""あ""という文字に12354(0x3042)という2バイト列を割り当てたとき、そのままバイト列を並べると0x30,0x42と2文字なのか0x3042で1文字なのかが区別がつかない。 このため、マルチバイト文字符号化方式のutf-8では始めの1バイト目で続くバイト列の長さが分かるようにすることにより、この問題を克服している。具体的なビットパターンは以下のようになる。 ここでxは0/1の任意のビットとする。またyも0/1の任意のビットとなるがどれか一つは1である必要がある。また全ての文字は1,2,3,4バイト文字のいずれかであるとする。 ここでyのビットが少なくとも一つは1であるという制約は以下のような理由による。 例えば'/'(0x2f)をバイト列にエンコードする際に0x2fと1バイトで符号化するないしは0xc0 0xafと2バイトで符号化する方法の二つがあるが、このような曖昧性を許すとセキュリティ上の脅威のもととなる可能性があるためである。 以上の話を聞いたあなたはutf-8がどの程度の自由度があるのかが気になった。具体的には与えられたバイト列の一部のビットが不明な時にutf-8として可能なバイト列の組み合わせがどの程度あるかということである。 このとき可能なバイト列の組み合わせの個数を求め、1,000,000で割った余りを出力せよ。 
 

"
p01327,Star Watching,"
2012年のある日のこと。
北の田舎町に住むあなたは、愛娘を連れて展望台で星見をすることにした。
この町は都会と違って街明かりが少なく、空気も澄んでいるので、晴れた日は満天の星空が広がっている。
天文にそこそこ詳しいあなたは季節ごとの有名な星や星座、それにまつわる神話ぐらいは知っているのだが、
なにせここは星降る町、名前のわからない星座もたくさん見えている。
この前の星見のときにそういった星々に関する娘の質問に答えられなかったあなたは、
星見の時刻にいったいどの星座が見えるのかを調べたいと思った。
 
特定の日時にどの星が見えるのかを知るには、星座早見盤というアイテムが有用である。
最近では携帯端末のgpsと連携した星座早見盤アプリも提供されている。
だが、あいにくあなたの手元には星座早見盤がなく、携帯は七年前の機種で、最新のアプリが動くわけがなかった。
詰んだと思ったあなたが最後の望みをかけてハードディスクを漁ったところ、
なんと2012年1月1日の午前零時時点での各星座を構成する星々の位置を記したファイルを発見した。
これがあれば任意の日時の星の位置がわかるはず！
あなたは急いでどの星座が見えるのかを出力するプログラムを書くことにした。
 
星々の情報は、観測者を中心とした天球上の座標群として与えられている。
座標は方位角と高度のペアで表されている。
方位角は真北を0度、真東を90度というように時計回りに測った0度以上360度未満の角度であり、
高度は地平線上を0度、天頂を90度度、天底を-90度とした-90度以上90度以下の角度である。
各天体は北極星と観測者を結ぶ直線を回転軸として、天球上を一定速度で反時計回りに回転している。
その回転速度は24時間あたり(1+1/365.24)&times;360度である。
北極星は真北方向の高度43.2度の点にある。
 
ある星座が見えるとは、その星座を構成するすべての星が地平線より上にあることをいう。
テストデータにおいて、当該時刻に地平線から高度&plusmn;0.01度以内に星があることはないとしてよい。
なお、地軸のズレ、天体との距離などは考えなくてよい。
また、2012年は閏年であることに注意せよ。
 

"
p01328,Stray Cats,"洋菓子専門店ストレイキャッツではたくさんの猫が飼われている。猫の数があまりにも多いため、この店のスタッフである希は餌やりに困っていた。
いくつかの場所に餌を置いても、猫は貪欲なので最も近い餌に向かってしまい、一つの餌入れにたくさんの猫が集中してしまう。
あなたは希のために、できるだけ猫が集中しない餌の配置を求める問題を解くことにした。 問題を簡単にするため、猫は平面上の y&gt;0 の部分にいて餌を置くまで動かないとする。
猫は n 個の集団に分かれていて、一箇所に何匹もいるかもしれない。
餌入れは y=0 上の m 点に固定してあり、この中からいくつか選んで餌を入れることになる。
餌を入れると、猫は(ユークリッド距離で)一番近い餌の入った餌入れに向かうが、同じ距離に二つあるときはx座標が小さいほうに向かうものとする。 この条件の下で、最も猫が集まっている餌入れの猫の数を最小化しなさい。
 

"
p01329,Stolen Jewel,"パル王国の国宝である宝石が盗賊たちに盗まれた。 冒険者のあなたはその噂を聞きつけて盗賊のアジトに向かい、なんとか宝石を取り戻すことが出来た。 ところが、宝石をパル王国の城へ返しに出向いたところ、城の守衛兵から、 「我が王はまだあなたを完全に信用していない。その宝石が本物かどうか怪しいし、そもそも宝石を取り戻したというのがウソで、王の命を狙う盗賊の仲間なのではないか？と疑っておられる。」 といわれた。 あなたは、守衛兵から本当に信頼できる人物かどうか試すための試練を与えられた。試練の内容は、 「城の地下倉庫へ行き指定された場所に宝石を置け。そこに宝石が本物だったときに反応する魔法陣が書かれてある。ただしあなたが怪しい行動を起こさないようにするため、地下倉庫の入り口から指定された場所に向かうまで、守衛兵が言った移動パターンをとってはならない。」 というものだった。 例えば、下図にある地下倉庫の形状、禁止パターンに対し、図にかかれてあるような移動パターンを取ってはならない。移動パターンの一部(赤くハイライトされている)が、禁止パターンの中に含まれるからである。(また、この移動パターンの中の2,3番目の動き「&darr;&darr;」も禁止パターンの中に含まれる) 一方、 下図のような移動パターンは、移動パターンのどの部分も禁止パターンの中に含まれないので許される。 入力として、地下倉庫の形状、禁止パターンが与えられる。禁止パターンを取らずに、入り口から魔法陣へ移動するのに最低限必要な移動回数を求めよ。 

"
p01330,The Number of Solutions for a Polynomial,"きたまさ君は大学でさまざまな変換について研究している。最近、きたまさ君が興味を持っている変換は次のようなものである。 n+1個の整数 a0, ..., an を固定し、整数 z を入力とする。また p を素数とする。 きたまさ君はこの変換によって t = 0 になってしまう z がいくつもあることに気がついた。 そこで、きたまさ君は友人でありスーパープログラマーでもあるあなたに、変換後に t = 0 になる z が 0〜p-1 にいくつあるかを計算してもらうことにした。 
 

"
p01331,Warp Hall,"20xx年、遠く離れた場所に対する効率的な物質転送方式が確立され、人類の宇宙への進出はますます加速されることになった。この転送方式は、より遠くに物質を転送しようとすると、原則的により大きな物質の転送が可能になる点で革新的であった。転送方式の詳細を次に記す。 まず転送対象となる物質は、スタート座標(1, 1)にて単位質量毎のパーティクルに分割される。各パーティクルには、各々異なる波動エネルギーが与えられなければならない。波動エネルギーは、vとhからなる任意の長さの文字列で表現され、パーティクルの宇宙空間における漂い方を規定する。vは座標上(+1, 0)の移動を意味し、hは(0, +1)の移動を意味する。例えば、vhhvという波動エネルギーが与えられたパーティクルは、(2, 1), (2, 2), (2, 3) という軌跡で宇宙を漂った後、座標(3, 3)に辿り着く。 また、宇宙空間には複数のワープホールが存在し、パーティクルの軌跡に影響を与える。ワープホールには入口と出口があり、パーティクルがワープホールの入口に移動した場合、必ず出口の座標にワープすることになる。i番目のワープホールの入口と出口の座標を(ai, bi), (ci, di)とすると、ai &le; ci, bi &le; di, (ai, bi) &ne; (ci, di)の条件が満たされており、ワープホールの入口は、他のワープホールの入口と同じ座標や、(1, 1)には存在しないことが保証されている。ただし、複数の出口が同じ場所にあったり、あるワープホールの出口に別のワープホールの入口がある場合はある(この場合は連続でワープする)。 例えば、(1, 2)を入口とし、(3, 2)を出口とするワープホールが存在した場合、hhと波動エネルギーを与えられたパーティクルは、(1, 2)へ移動後、(3, 2)へワープし、 (3, 3)へと辿り着く。 パーティクルは波動エネルギーを与えられると一瞬でそれに従って移動する。全てのパーティクルが同時に目的地点へ辿り着くと、自動的に元の物質へと再構成される。 あなたは宇宙開発機構のプログラマである。転送の目的座標 (n, m) と k 個のワープホールの座標対が与えられるので、一度に転送可能な物質の最大質量を求めるプログラムを書いてほしい。答えは非常に大きい数になる可能性があるため、1,000,000,007で割った余りを出力せよ。 

"
p01332,Three Silhouettes,"java(japan aerospace voyage agency: 日本宇宙飛行研究機構)は、宇宙開発事業の一環として2003年に探査機を打ち上げた。 この探査機打ち上げの目的の一つに、小惑星イシカワに接近し、その表面物質のサンプルを採集することがある。 様々なアクシデントに見舞われながらも、探査機はイシカワに到達し、そしてついに2010年、地球へ帰還し、イシカワのサンプル試料の入ったカプセルを回収することに成功した。 東京大学を卒業し、javaに就職したきたまさ君は、この試料の研究を担当している。 一刻も早く試料の分析をしたいところであるが、とても慎重なきたまさ君は、もしカプセルの中に凶暴なエイリアンが入っていたら大変であると考えた。 そこで、カプセルを開ける前にx線を用いて内部の物質の形状を調べ、エイリアンが入っていないことを確認することにした。 カプセルにx線を当てると、物質が存在しているところは白色に、存在していないところは黒色になった写真が得られる。 様々な角度からx線を当てて写真を得ることにより、内部の物質の形状を特定することができる。 しかし、ここでまた問題が生じた。 正面から、右側面から、上面からの３枚の写真を得たところでx線装置が故障してしまったのである。 さらに、３枚の写真の現像にも失敗し、本来黒色になるべき部分が一部白色となってしまった可能性もある。 このままでは物質の形状を正確に特定することは出来ないため、中にエイリアンが入っていないことを確認できず、カプセルを開けることができない。 研究を続けるためには、x線装置を買い換えるしかないのだが、javaには事業仕分けによる予算削減の影響で、x線装置をすぐに買い換えるだけのお金がない。 そこできたまさ君は来年度の予算を増やしてもらい、そのお金で新しいx線装置を買うことを考えた。 もちろん、予算は簡単には増えないため、探査機の成果を最大限にアピールする必要がある。 カプセル中に大きな物質が含まれているほど成果を強くアピールすることができるため、物質が取りうる最大体積を計算することにした。 ３枚のx線写真と矛盾しないような内部の物質の形状のうちで、体積が最大であるものを求め、その体積を出力せよ。 
 

"
p01333,Summer of KMC,"kmcはコミックマーケットと呼ばれる同人即売会で毎年cdを販売している。
コミックマーケットでcdを売ることになったfであったが、fの人気により、kmcの売り場には人が殺到し、お釣りの計算が追いつかない状態となった。そこでfは金額を入力すると即座にお釣りを出力するプログラムを書くことにした。 kmcが釣り銭として用意しているのは、100円玉と500円玉と1000円札のみである。これらの硬貨・札は無限にあるものと考えて良い。お釣りは、硬貨・札の個数が最小になるように選ぶ。また、kmcが販売するcdの値段は100の倍数であり、購入者が支払う金額も100の倍数である。 

"
p01334,Let's JUMPSTYLE,"踊りの好きなfは，とあるダンスホールでjumpstyleと呼ばれるハードコアな踊りの練習をすることにした． フロアはn×nの格子状にタイルが敷き詰められている．
踊りの練習をサポートするため，各タイルには次のステップに飛び移るべきタイルの座標が書かれている．fは日々の練習によって強靭な運動神経を持っており，フロア内の任意のタイルへ飛び移ることができる． fは，十分に長い時間この踊りを続けていけば，いつか定常状態に入り，同じルートをただループする状態になることに気付いた．fはこのようなループがこのフロアにいくつ存在するのか疑問に思い，プログラマであるあなたに相談することにした． 

"
p01335,K Poker,"時は200x年、k大学で活動する謎のサークルkはその大学の文化祭の最中にk東4fで彼らが作成した新たなゲーム、kポーカーを発表した。
このゲームは一見すると普通のポーカーであるが、カードに基本点という要素をつけてポーカーをより奥の深いゲームにしたものである。
カードの基本点はそれぞれのカードに書かれている絵柄によって決まり、手札の点数は手札にある5枚の基本点の合計に手札の役の倍率を掛けたものになる。
この基本点を導入した事により、例えばフルハウスなどの強い役を作ったとしても基本点が0であればブタと同様に扱われてしまい、ワンペアに負けることさえある。
それ以外のルールは通常のポーカーと同じである。
このkポーカーをpcに移植しようと思ったあなたは手札の点数を計算するプログラムを書く事にした。 なおこのゲームは18歳未満の人はプレイ出来ない。 


"
p01336,THE BYDOLM@STER,"the bydolm@ster(バイドルマスター)とは1rem社より2010/4/1にexidnaで発売が予定されている育成シミュレーションゲームである。一応断っておくが、今月初めにネットワーク接続サービスが停止した某アーケードゲームとはたぶん関係が無い。
このゲームはバイドルたちからプロデュースするユニット(編隊)のメンバーを選択し、メンバーたちとのレッスンやコミュニケーションを通じて、彼女(彼)らをバイドルの頂点、トップバイドルに育て上げるゲームである。
各バイドルには能力値としてボーカル、ダンス、ルックスの3つのパラメータを持ち、ユニットの能力値はユニットに属している全てのバイドルのパラメータの合計値となる。ユニットの3つの能力値のうち最大の物がユニットのランクとなる。
ユニットに人数制限は無く、メンバーの人数が1体でも、3体でも、100体でもユニットとして活動できる。もちろん同じバイドルを複数雇うこと出来るが、バイドルを雇うためには費用がかかるのでこれを考慮に入れなければならない。
プロデューサーであるあなたは最高のユニットを作るためにプログラムを書いて計算することにした。 
"
p01337,The Number of the Real Roots of a Cubic Equation,"3次方程式： が与えられるので，その正の実数根の個数，負の実数根の個数をそれぞれ調べて欲しい． 根の個数は，重根も含めて数えるものとする． 

"
p01338,KULASIS,"

　kulasisとは，全学共通科目に関する情報をweb化し，学生・教員への支援やサービスの向上を目的に，高等教育研究開発推進機構で開発・運用しているシステムの名称です。　kulasisは2003年度のオンラインシラバス開発から始まり，web掲示板・履修登録・成績関係（採点登録・学生からの採点確認）と順次システムを拡充してきました。
　学生はパソコン・携帯電話から学内外を問わず，教務情報（休講・授業変更・レポート）の確認・履修登録・採点確認等の機能を利用することができます。ログイン件数は多い日には10,000件を超え，京都大学の教務情報システムとして浸透し，全学共通科目を履修するためには欠かせないものとなっています。このkulasisを全学共通科目のみにとどまらず，学部専門課程や大学院にも適用できるよう 開発を進めています。
http://www.z.k.kyoto-u.ac.jp/introduction_kulasis.html

 
京大生のqは後期のシラバスを組むためにkulasisにログインしていた．
どの科目を入れようとしているか悩んでいると，突然kulasisが眩い光を放ち，別のページへと遷移した．
遷移した先のページは下図のようなものであった．5x5のマスには科目名と評価(不可，可，良，優)が書かれており，格子上には●のボタンが16個配置されている．
いったいなにが起きたのか分からなかったqだったが，どうやら格子上にある●のボタンを押すと，その右上，右下，左上，左下にあるマスの科目の評価がそれぞれ 不可→可，可→良，良→優，優→不可 と入れ替わるようであった．



●のボタンは何度でも押すことができる．
kulasisが何者かによって書き換えられてしまったのか自分が夢を見ているのかよく分からないが，これで成績を確定できるならば，出来るだけ良い成績を得たいとqは考えた．
単位を多く集めていることに自信があったqは，単位の数そのものよりも半年後の研究室配属に備えて戦闘力を最大にさせることにした．
戦闘力とは各科目の評価を，不可→0点，可→60点，良→70点，優→80点と換算して合計した値のことで，これは研究室配属の際に自分がどの程度優位なのかを表すと(qの学科では)思われている．

いま，kulasisの画面の表示されている科目とその評価が与えられるので，得ることが出来る戦闘力の最大値を出力するプログラムを記してほしい．
 

"
p01339,Alien's Counting,"
natsuki and her friends were taken to the space by an alien and made friends with a lot of aliens. during the space travel, she discovered that aliens’ hands were often very different from humans’. generally speaking, in a kind of aliens, there are n fingers and m bend rules on a hand. each bend rule describes that a finger a always bends when a finger b bends. however, this rule does not always imply that the finger b bends when the finger a bends.
 
when she were counting numbers with the fingers, she was anxious how many numbers her alien friends can count with the fingers. however, because some friends had too complicated rule sets, she could not calculate those. would you write a program for her?
 

"
p01340,Kaeru Jump,"
there is a frog living in a big pond. he loves jumping between lotus leaves floating on the pond. interestingly, these leaves have strange habits. first, a leaf will sink into the water after the frog jumps from it. second, they are aligned regularly as if they are placed on the grid points as in the example below. 
 
recently, he came up with a puzzle game using these habits. at the beginning of the game, he is on some leaf and faces to the upper, lower, left or right side. he can jump forward or to the left or right relative to his facing direction, but not backward or diagonally. for example, suppose he is facing to the left side, then he can jump to the left, upper and lower sides but not to the right side. in each jump, he will land on the nearest leaf on his jumping direction and face to that direction regardless of his previous state. the leaf he was on will vanish into the water after the jump. the goal of this puzzle is to jump from leaf to leaf until there is only one leaf remaining. 
 
see the example shown in the figure below.
 
in this situation, he has three choices, namely, the leaves a, b and c. note that he cannot jump to the leaf d since he cannot jump backward. suppose that he choose the leaf b. after jumping there, the situation will change as shown in the following figure.
 
he can jump to either leaf e or f next.
 
after some struggles, he found this puzzle difficult, since there are a lot of leaves on the pond. can you help him to find out a solution?
 







"
p01341,Save your cats,"
nicholas y. alford was a cat lover. he had a garden in a village and kept many cats in his garden. the cats were so cute that people in the village also loved them.
 
one day, an evil witch visited the village. she envied the cats for being loved by everyone. she drove magical piles in his garden and enclosed the cats with magical fences running between the piles. she said “your cats are shut away in the fences until they become ugly old cats.” like a curse and went away.
 
nicholas tried to break the fences with a hummer, but the fences are impregnable against his effort. he went to a church and asked a priest help. the priest looked for how to destroy the magical fences in books and found they could be destroyed by holy water. the required amount of the holy water to destroy a fence was proportional to the length of the fence. the holy water was, however, fairly expensive. so he decided to buy exactly the minimum amount of the holy water required to save all his cats. how much holy water would be required?
 

"
p01342,Dungeon Wall,"
in 2337, people are bored at daily life and have crazy desire of having extraordinary experience. these days,“dungeon adventure” is one of the hottest attractions, where brave adventurers risk their lives to kill the evil monsters and save the world. 
 
you are a manager of one of such dungeons. recently you have been receiving a lot of complaints from soldiers who frequently enter your dungeon; they say your dungeon is too easy and they do not want to enter again. you are considering making your dungeon more difficult by increasing the distance between the entrance and the exit of your dungeon so that more monsters can approach the adventurers.
 
the shape of your dungeon is a rectangle whose width is w and whose height is h. the dungeon is a grid which consists of w &times; h square rooms of identical size 1 &times; 1. the southwest corner of the dungeon
has the coordinate (0; 0), and the northeast corner has (w, h). the outside of the dungeon is surrounded by walls, and there may be some more walls inside the dungeon in order to prevent adventurers from going directly to the exit. each wall in the dungeon is parallel to either x-axis or y-axis, and both ends of each wall are at integer coordinates. an adventurer can move from one room to another room if they are adjacent vertically or horizontally and have no wall between.
 
you would like to add some walls to make the shortest path between the entrance and the exit longer. however, severe financial situation only allows you to build at most only one wall of a unit length. note that a new wall must also follow the constraints stated above. furthermore, you need to guarantee that there is at least one path from the entrance to the exit. 
 
you are wondering where you should put a new wall to maximize the minimum number of steps between the entrance and the exit. can you figure it out?
 

"
p01343,Psychic Accelerator,"
in the west of tokyo, there is a city named “academy city.” there are many schools and laboratories to develop psychics in academy city.
 
you are a psychic student of a school in academy city. your psychic ability is to give acceleration to a certain object.
 
you can use your psychic ability anytime and anywhere, but there are constraints. if the object remains stationary, you can give acceleration to the object in any direction. if the object is moving, you can give acceleration to the object only in 1) the direction the object is moving to, 2) the direction opposite to it, or 3) the direction perpendicular to it.
 
today’s training menu is to move the object along a given course. for simplicity you can regard the course as consisting of line segments and circular arcs in a 2-dimensional space. the course has no branching. all segments and arcs are connected smoothly, i.e. there are no sharp corners.
 
in the beginning, the object is placed at the starting point of the first line segment. you have to move the object to the ending point of the last line segment along the course and stop the object at that point by controlling its acceleration properly. before the training, a coach ordered you to simulate the minimum time to move the object from the starting point to the ending point.
 
your task is to write a program which reads the shape of the course and the maximum acceleration amax you can give to the object and calculates the minimum time to move the object from the starting point to the ending point.
 
the object follows basic physical laws. when the object is moving straight in some direction, with acceleration either forward or backward, the following equations hold:
 
v = v0 + at
 
and
 
s = v0t + (1/2)at2
 
where v, s, v0, a, and t are the velocity, the distance from the starting point, the initial velocity (i.e. the velocity at the starting point), the acceleration, and the time the object has been moving in that direction, respectively. note that they can be simplified as follows:
 
v2 &minus; v02 = 2as
 
when the object is moving along an arc, with acceleration to the centroid, the following equations hold:
 
a = v2/r
 
wher v, a, and r are the velocity, the acceleration, and the radius of the arc, respectively. note that the object cannot change the velocity due to the criteria on your psychic ability.
 

"
p01344,Bouldering,"
bouldering is a style of rock climbing. boulderers are to climb up the rock with bare hands without supporting ropes. your friend supposed that it should be interesting and exciting, so he decided to come to bouldering gymnasium to practice bouldering. since your friend has not tried bouldering yet, he chose beginner’s course. however, in the beginner’s course, he found that some of two stones have too distant space between them, which might result his accidentally failure of grabbing certain stone and falling off to the ground and die! he gradually becomes anxious and wonders whether the course is actually for the beginners. so, he asked you to write the program which simulates the way he climbs up and checks whether he can climb up to the goal successfully.
 
for the sake of convenience, we assume that a boulderer consists of 5 line segments, representing his body, his right arm, his left arm, his right leg, and his left leg.
 
one of his end of the body is connected to his arms on their end points. and the other end of the body is connected to his legs on their end points, too. the maximum length of his body, his arms, and his legs are a, b and c respectively. he climbs up the wall by changing the length of his body parts from 0 to their maximum length, and by twisting them in any angle (in other word, 360 degrees). refer the following figure representing the possible body arrangements.
 
5 line segments representing his body, arms and legs. the length of his body, arms and legs are 8, 3 and 4 respectively. the picture describes his head as a filled circle for better understanding, which has no meaning in this problem.
 
a boulderer climbs up the wall by grabbing at least three different rocks on the wall with his hands and feet. in the initial state, he holds 4 rocks with his hands and feet. then he changes one of the holding rocks by moving his arms and/or legs. this is counted as one movement. his goal is to grab a rock named “destination rock” with one of his body parts. the rocks are considered as points with negligible size. you are to write a program which calculates the minimum number of movements required to grab the destination rock.
 



"
p01345,DON'T PANIC!,"
arthur is an innocent man who used to live on the earth. he had lived a really commonplace life, until the day when the earth was destroyed by aliens, who were not evil invaders but just contractors ordered to build a hyperspace bypass. in the moment when the demolition beams were shot at the earth by them, arthur was in front of his house and almost about to be decomposed into hydrogen, oxygen, carbon and some other atoms. however, fortunately, he survived; one of his friend ford, who was actually an alien and had come to the earth in the course of his trip around the universe, took him up to a spaceship just before the beam reached him.
 
arthur and ford successfully escaped, but it was only the beginning of their hardships. soon it turned out that actually the spaceship was the contractor’s one itself, and as it can be easily imagined, they disliked humans. therefore as soon as they found arthur and ford, they stopped at the nearest unexplored planet and dropped the two pity men out of the spaceship from 10 miles up above the land surface.
 
again they’re in a pinch! fortunately our hero ford has a special item that let them safely land to the planet, known as a parachute, so they don’t worry about that. the problem is that they are just falling freely and can’t change the landing point, which may be on ground or sea. they want to know if they can land peacefully or need some swimming to the nearest coast.
 
ford’s universal gps gadget displays their expected position of landing by latitude/longitude. also he has a guidebook that describes almost all the planets in the universe. according to it, the planet has the only one continent and hence only one sea. it has a description of the shape of the continent but, unfortunately, not in a intuitive way of graphical maps. so your task is to make a program to decide whether the point is on the land or not.
 

"
p01346,Ropeway,"
on a small island, there are two towns darkside and sunnyside, with steep mountains between them. there’s a company intertown company of package conveyance; they own a ropeway car between darkside and sunnyside and are running a transportation business. they want maximize the revenue by loading as much package as possible on the ropeway car.
 
the ropeway car looks like the following. it’s l length long, and the center of it is hung from the rope. let’s suppose the car to be a 1-dimensional line segment, and a package to be a point lying on the line. you can put packages at anywhere including the edge of the car, as long as the distance between the package and the center of the car is greater than or equal to r and the car doesn’t fall down.
 
the car will fall down when the following condition holds:
 
here n is the number of packages; mi the weight of the i-th package; xi is the position of the i-th package relative to the center of the car.
 
you, a darkside programmer, are hired as an engineer of the company. your task is to write a program which reads a list of package and checks if all the packages can be loaded in the listed order without the car falling down at any point.
 

"
p01347,How to Create a Good Game,"
a video game company called icpc (international company for playing and competing) is now developing a new arcade game. the new game features a lot of branches. this makes the game enjoyable for everyone, since players can choose their routes in the game depending on their skills. rookie players can choose an easy route to enjoy the game, and talented players can choose their favorite routes to get high scores.
 
in the game, there are many checkpoints connected by paths. each path consists of several stages, and completing stages on a path leads players to the next checkpoint. the game ends when players reach a particular checkpoint. at some checkpoints, players can choose which way to go, so routes diverge at that time. sometimes different routes join together at a checkpoint. the paths between checkpoints are directed, and there is no loop (otherwise, players can play the game forever). in other words, the structure of the game can be viewed as a dag (directed acyclic graph), when considering paths between checkpoints as directed edges.
 
recently, the development team completed the beta version of the game and received feedbacks from other teams. they were quite positive overall, but there are some comments that should be taken into consideration. some testers pointed out that some routes were very short compared to the longest ones. indeed, in the beta version, the number of stages in one play can vary drastically depending on the routes. game designers complained many brilliant ideas of theirs were unused in the beta version because of the tight development schedule. they wanted to have more stages included in the final product. 
 
however, it’s not easy to add more stages. this is an arcade game – if the playing time was too long, it would bring down the income of the game and owners of arcades would complain. so, the longest route of the final product can’t be longer than that of the beta version. moreover, the producer of the game didn’t want to change the structure of paths (i.e., how the checkpoints connect to each other), since it would require rewriting the scenario, recording voices, creating new cutscenes, etc.
 
considering all together, the producer decided to add as many new stages as possible, while keeping the maximum possible number of stages in one play and the structure of paths unchanged. how many new stages can be added to the game?
 

"
p01348,Cruel Bingo,"
bingo is a party game played by many players and one game master. each player is given a bingo card containing n2 different numbers in a n &times; n grid (typically n = 5). the master draws numbers from a lottery one by one during the game. each time a number is drawn, a player marks a square with that number if it exists. the player’s goal is to have n marked squares in a single vertical, horizontal, or diagonal line and then call “bingo!” the first player calling “bingo!” wins the game.
 
in ultimately unfortunate cases, a card can have exactly n unmarked squares, or n(n-1) marked squares, but not a bingo pattern. your task in this problem is to write a program counting how many such patterns are possible from a given initial pattern, which contains zero or more marked squares.
 

"
p01349,Ennichi,"
縁日に来たうさぎが, ある出店のゲームの景品がキャロットケーキであるのを見つけた. このゲームのルールは以下の通りである.
 
縦h マス&times 横w マスの格子状のフィールドがあり, 各マスにつき高々1 個のブロックが置かれる. 各ブロックにはアルファベット大文字(‘a’ - ‘z’) のいずれかで表される色がついている. 同色のブロックが縦または横に一直線上にn 個以上連続して並ぶと, それらのブロックは消滅する.
 
参加者は横に隣り合う2 つのマスを選んで, それらの状態を互いに入れ替える操作ができる. ブロックの入れ替え, 消滅, 落下によってブロックの有るマスの1 つ下のマスにブロックが無くなると, このブロックは落下する. このときふたたび同色のブロックがn 個以上並ぶと消滅する. ただし, ブロックの消滅は, 落下するブロックが存在する間は起こらず, すべてのブロックの落下が終了したタイミングで同時に起こる.
 
1 回の操作でフィールド上のすべてのブロックを消滅させると, このゲームは成功となり景品のケーキを得ることができる. うさぎは1 回分の参加費で確実にケーキを手に入れたく, それができない場合は参加したくない. ゲーム開始時のフィールドの状態から, うさぎがこのゲームに参加すべきであるか答えよ.
 

"
p01350,Carrot Tour,"
うさぎがある国を旅行している. この国には1 からn の番号がついたn 個の都市があり, うさぎは今都市1にいる. 都市i は座標平面上の1 点(xi, yi) とみなす.
 
うさぎは以下の条件をみたすように旅をする.
  移動経路は折れ線であり, その各部分は異なる2 都市を結ぶ線分でなければならない.  移動経路の全長はr 以下でなければならない. 経路のうち重なった部分も, 通った回数分数える.  移動する方向が変わるとき, 曲がる角度は&theta; 以下でなければならない. 最初の移動方向に制限はない. 
うさぎがある都市から別の都市へ移動をすると, 移動先の都市でニンジンを1 本もらえる. 同じ都市を複数回訪れることは可能であり, 訪れるたびにニンジンをもらえる. うさぎがこの旅で手に入れることのできるニンジンの本数の最大値を求めよ.
 

"
p01351,Usagitobi,"
m &times; n マスの盤がある. i 行j 列のマスを(i, j) (0 &le; i &lt; m, 0 &le; j &lt; n) で表す.
 
うさぎは(x, y) にいるとき, ((x + a) mod m, (y + b) mod n) または((x + c) mod m, (y + d) mod n) へ跳ぶことができる.
 
いま, うさぎが(0, 0) にいる. 一度跳び立ったマスへ再び行くことはできないとするとき, うさぎは最大何回跳ぶことができるか.
 

"
p01352,Graph Construction,"
n 匹のうさぎがいて, 0 番からn − 1 番の番号がついた小屋に1 匹ずつ住んでいる.
 
あるとき, 秘密の組織によって地下通路の建設工事が行われる, という情報がうさぎたちのもとへ入った. 地下通路を使えば, うさぎたちは他のうさぎたちの小屋へ遊びに行けるようになって嬉しい.
 
通路は両方向に進むことができ, また通路同士は交わらない. 諸事情により, 一度建設された通路が破壊されてしまうこともある. 通路の建設や破壊の工事は1 本ずつ行われ, 各工事中はうさぎは自分の小屋に留まっているものとする.
 
うさぎたちは, 工事のいくつかの段階において, あるうさぎとあるうさぎが遊べるかどうかを事前に知りたい. うさぎたちは仲良しなので, 遊びに行くときに他のうさぎの小屋を自由に通ることができる. プログラミングが好きなうさぎたちは, 昔似たような問題を解いたので簡単だろうと思って挑戦し出したが, なかなか効率の良いプログラムが書けない. うさぎの代わりにこの問題を解け.
 

"
p01353,Rabbit Plays Games!,"
うさぎがとあるロールプレイングゲームで遊んでいる. 城に入る直前で, 敵に待ち伏せされていた！
 
うさぎが操作する主人公1 人と, n 体の敵との戦闘となった. 各キャラクターには4 つの能力値, 体力hi, 攻撃力ai, 防御力di, 敏捷si が定められている. i = 0 は主人公の情報, 1 &le; i &le; n は各敵の情報を表す.
 
戦闘はターン制である. 各ターン, 生き残っているキャラクターが, 敏捷の値が高い順に攻撃を行う. 敵は必ず主人公を攻撃する. 主人公は敵1 体を攻撃するが, どの敵を攻撃するかは毎ターンごとに主人公が選べる.攻撃力a のキャラクターが防御力d のキャラクターに攻撃するとき, max{a − d, 0} のダメージが与えられる. 受けたダメージの合計が体力の値以上になったキャラクターは直ちに戦闘不能になってしまう. 主人公が戦闘不能になったとき, あるいは敵がすべて戦闘不能になったとき, 戦闘は終了する.
 

"
p01354,The Castle,"
待ち伏せていた敵を見事撃破したうさぎは, 主人公を敵の城内に進めることに成功した. 主人公が城の地下牢に捕らわれていたねこたちを解放したところ, 彼らのうちの何匹かが主人公の力になってくれることになった.
 
ねこたちの話では, 城の奥にいる魔王に辿りつくには1 番からn 番のn 個の部屋をこの順に通り抜けることになるが, 各部屋には1 体ずつ敵が待ち受けていて逐一倒していかなければならないという. 仲間になったm匹のねこそれぞれについて, 各部屋の敵それぞれに対する勝率が分かっており, 主人公はこのねこたちを1 匹ずつ城の奥へ向けて派遣する. 各部屋はそこにいる敵を倒してからでなければ通過できないので, あるねこがある部屋の敵にやられたら, 次のねこはその部屋の敵から戦っていくことになる.
 
派遣されたねこは敵にやられるまで進むが, 派遣したねこがどの部屋の敵にやられたかは毎回知ることができ, それによって次にどのねこを派遣するかを決めることができる. どのようにすれば, ねこたちが待ち受けるすべての敵を倒せる確率が最大になるだろうか.
 

"
p01355,Nurie,"
紙の上に円がn 個書かれている. うさぎはk 色の絵の具を持っていて, 次のルールに従って紙に色を塗っていく.
  各領域をある1 色の絵の具で塗るか, 何も塗らない. ここで「領域」とは, 円弧の集合で囲まれた面積有限の部分を指す.  隣り合っている2 つの領域を同じ色の絵の具で塗ることはできない. ここで「隣り合っている」とは,境界の一部を共有する円弧があることを指す. 共有点が有限個である2 つの領域は, 隣り合っているとはみなされない.
  隣り合っている2 つの領域の両方を塗らないままにすることは許される. 
うさぎはできるだけ多くの領域を絵の具で塗りたい. 塗れる領域の個数の最大値を求めよ.
 

"
p01356,Nearest Station,"
うさぎがある電車のチケットをn 枚持っている. チケットにはそれぞれ0 からn − 1 までの番号がついていて, k 番のチケットを使うと, p&sdot;ak + q&sdot;bk 駅進むことができる.
 
うさぎは今いる駅からm 駅進んだ駅にあるニンジン食べ放題の店に行きたいが, なるべく歩く距離を短くしたい. 駅は等間隔に並んでいる. チケットを電車の上り線で進むことのみに用いるとき, うさぎは最小何駅分の徒歩で店に着けるか.
 

"
p01357,Lapin Noir,"
ここは, 地面が正六角形を敷き詰めたマス目になっている街である. 各マスは, 下の図のように2 つの整数で表される.
 
ねこは(0, 0) のマスへ行こうとしている. いたずら好きの黒うさぎはこのことを知って, ねこの邪魔をしようと考えた.
 
黒うさぎはねこがいるマスへ跳び, その周りの6 マスのうち1 つまたは隣り合う2 つをブロックすることができる. ねこは周りの6 マスのうち, ブロックされていないマスを1 つ選んで進む. ねこが動くたび黒うさぎはねこを追いかけ, またブロックを行うことができる. 黒うさぎが動くと元のブロックは解除される. 下の図はブロックの様子を示している.
 
この街にはねこの縄張りとなっているマス目がいくつかある. 縄張りは正六角形の周をなすマス目の集合n個の合併として表される. 黒うさぎはねこの縄張りに立ち入ることはできるが, ブロックすることはできない.つまり, ねこは縄張り内であれば自由に動ける.
 
ねこの出発点の候補がk 個あり, マス(xi, yi) (1 &le; i &le; k) である. それぞれについて, ねこが必ず目的地(0, 0) に辿り着けるか, あるいは黒うさぎがうまく妨害することによってねこが目的地に辿り着けないかを判定せよ.
 



"
p01358,Usaneko Matrix,"
うさぎとねこが勝負をしている. ルールは以下の通りである.
 
まず2 匹はそれぞれn 行n 列の正方形状にn2 個の整数を紙に書き, トランプを1 枚ずつ引く. 次に, 1 から 1 000 000 までの数が1 つずつ書かれた1 000 000 枚のカードを2 匹でシャッフルし, これを1 枚ずつ交互に引いていく. 2 匹はカードが引かれるたび, カードと同じ数が自分の紙に書かれていたらそれに印をつける. 「印がついたn 個の数の組であって, 一直線上に並んでいるもの」の個数が, はじめに引いたトランプの数以上になることを勝利条件とする.
 
与えられたm 枚目のカードまでで, うさぎとねこのどちらが勝つか答えよ. ただし勝敗は, あるカードが引かれて印をつけ終わった段階で2 匹のうち片方のみが勝利条件をみたしたときに決まるものとし, それ以外の場合は引き分けとする. いずれかが勝利条件をみたした後でもカードが引かれることはあるが, これは勝敗に影響しない.
 

"
p01359,Era Name,"
as many of you know, we have two major calendar systems used in japan today. one of them
is gregorian calendar which is widely used across the world. it is also known as “western
calendar” in japan.
 
the other calendar system is era-based calendar, or so-called “japanese calendar.” this system
comes from ancient chinese systems. recently in japan it has been a common way to associate
dates with the emperors. in the era-based system, we represent a year with an era name given
at the time a new emperor assumes the throne. if the era name is “a”, the first regnal year
will be “a 1”, the second year will be “a 2”, and so forth.
 
since we have two different calendar systems, it is often needed to convert the date in one
calendar system to the other. in this problem, you are asked to write a program that converts
western year to era-based year, given a database that contains association between several
western years and era-based years.
 
for the simplicity, you can assume the following:
  a new era always begins on january 1st of the corresponding gregorian year.  the first year of an era is described as 1.  there is no year in which more than one era switch takes place. 
please note that, however, the database you will see may be incomplete. in other words, some
era that existed in the history may be missing from your data. so you will also have to detect
the cases where you cannot determine exactly which era the given year belongs to.

 

"
p01360,Step Step Evolution,"
japanese video game company has developed the music video game called step step evolution.
the gameplay of step step evolution is very simple. players stand on the dance platform, and
step on panels on it according to a sequence of arrows shown in the front screen.
 
there are eight types of direction arrows in the step step evolution: up, upper right,
right, lower right, down, lower left, left, and upper left. these direction
arrows will scroll upward from the bottom of the screen. when the direction arrow overlaps the
stationary arrow nearby the top, then the player must step on the corresponding arrow panel
on the dance platform. the figure below shows how the dance platform looks like.

 
                    figure 1: the dance platform for step step evolution
 
in the game, you have to obey the following rule:
   except for the beginning of the play, you must not press the arrow panel which is not
  correspond to the edit data.  the foot must stay upon the panel where it presses last time, and will not be moved until
  it’s going to press the next arrow panel. the left foot must not step on the panel which locates at right to the panel on which the
right foot rests. conversely, the right foot must not step on the panel which locates at left
to the panel on which the left foot rests. 
as for the third condition, the following figure shows the examples of the valid and invalid
footsteps.

 
figure 2: the examples of valid and invalid footsteps
 
the first one (left foot for left, right foot for down) and the second one (left foot for lower
left, right foot for upper left) are valid footstep. the last one (left foot for right, right
foot for down) is invalid footstep.
 
note that, at the beginning of the play, the left foot and right foot can be placed anywhere at
the arrow panel. also, you can start first step with left foot or right foot, whichever you want.
 
to play this game in a beautiful way, the play style called “ natural footstep style” is commonly
known among talented players. “natural footstep style” is the style in which players make steps
by the left foot and the right foot in turn. however, when a sequence of arrows is difficult,
players are sometimes forced to violate this style.
 
now, your friend has created an edit data (the original sequence of direction arrows to be pushed)
for you. you are interested in how many times you have to violate “natural footstep style” when
you optimally played with this edit data. in other words, what is the minimum number of times
you have to step on two consecutive arrows using the same foot?
 


"
p01361,Dungeon Quest II,"
the cave, called ""mass of darkness"", had been a agitating point of the evil, but the devil king
and all of his soldiers were destroyed by the hero and the peace is there now.
 
one day, however, the hero was worrying about the rebirth of the devil king, so he decided to
ask security agency to patrol inside the cave.
 
the information of the cave is as follows:
  the cave is represented as a two-dimensional field which consists of rectangular grid of
      cells.  the cave has r &times; c cells where r is the number of rows and c is the number of columns.  some of the cells in the cave contains a trap, and those who enter the trapping cell will
      lose his hit points.  the type of traps varies widely: some of them reduce hit points seriously, and others give
      less damage. 
the following is how the security agent patrols:
  the agent will start his patrol from upper left corner of the cave.
         - there are no traps at the upper left corner of the cave.  the agent will patrol by tracing the steps which are specified by the hero.
         - the steps will be provided such that the agent never go outside of the cave during
             his patrol.  the agent will bring potions to regain his hit point during his patrol.  the agent can use potions just before entering the cell where he is going to step in.  the type of potions also varies widely: some of them recover hit points so much, and
      others are less effective.
         - note that agent’s hit point can be recovered up to hpmax which means his maximum
             hit point and is specified by the input data.  the agent can use more than one type of potion at once.  if the agent's hit point becomes less than or equal to 0, he will die. 
your task is to write a program to check whether the agent can finish his patrol without dying.
 

"
p01362,Dice Room,"
you are playing a popular video game which is famous for its depthful story and interesting
puzzles. in the game you were locked in a mysterious house alone and there is no way to call for
help, so you have to escape on yours own. however, almost every room in the house has some
kind of puzzles and you cannot move to neighboring room without solving them.
 
one of the puzzles you encountered in the house is following. in a room, there was a device
which looked just like a dice and laid on a table in the center of the room. direction was written
on the wall. it read:
 
      ""this cube is a remote controller and you can manipulate a remote room, dice
      room, by it. the room has also a cubic shape whose surfaces are made up of 3x3
      unit squares and some squares have a hole on them large enough for you to go though
      it. you can rotate this cube so that in the middle of rotation at least one edge always
      touch the table, that is, to 4 directions. rotating this cube affects the remote room
      in the same way and positions of holes on the room change. to get through the
      room, you should have holes on at least one of lower three squares on the front and
      back side of the room.""
 
you can see current positions of holes by a monitor. before going to dice room, you should
rotate the cube so that you can go though the room. but you know rotating a room takes some
time and you don’t have much time, so you should minimize the number of rotation. how many
rotations do you need to make it possible to get though dice room?
 

"
p01363,Alice and Bomb,"
alice and bob were in love with each other, but they hate each other now.
 
one day, alice found a bag. it looks like a bag that bob had used when they go on a date.
suddenly alice heard tick-tack sound. alice intuitively thought that bob is to kill her with a
bomb. fortunately, the bomb has not exploded yet, and there may be a little time remained to
hide behind the buildings.
 
the appearance of the acm city can be viewed as an infinite plane and each building forms a
polygon. alice is considered as a point and the bomb blast may reach alice if the line segment
which connects alice and the bomb does not intersect an interior position of any building.
assume that the speed of bomb blast is infinite; when the bomb explodes, its blast wave will
reach anywhere immediately, unless the bomb blast is interrupted by some buildings.
 
the figure below shows the example of the bomb explosion. left figure shows the bomb and the
buildings(the polygons filled with black). right figure shows the area(colored with gray) which
is under the effect of blast wave after the bomb explosion.
 
figure 6: the example of the bomb explosion
 
note that even if the line segment connecting alice and the bomb touches a border of a building,
bomb blast still can blow off alice. since alice wants to escape early, she wants to minimize the
length she runs in order to make herself hidden by the building.
 
your task is to write a program which reads the positions of alice, the bomb and the buildings
and calculate the minimum distance required for alice to run and hide behind the building.
 
"
p01364,Wheel Buggy,"
international car production company (icpc), one of the largest automobile manufacturers in
the world, is now developing a new vehicle called ""two-wheel buggy"". as its name suggests,
the vehicle has only two wheels. quite simply, ""two-wheel buggy"" is made up of two wheels
(the left wheel and the right wheel) and a axle (a bar connecting two wheels). the figure below
shows its basic structure.
 
figure 7: the basic structure of the buggy
 
before making a prototype of this new vehicle, the company decided to run a computer simula-
tion. the details of the simulation is as follows.
 
in the simulation, the buggy will move on the x-y plane. let d be the distance from the center
of the axle to the wheels. at the beginning of the simulation, the center of the axle is at (0, 0),
the left wheel is at (-d, 0), and the right wheel is at (d, 0). the radii of two wheels are 1.
 
figure 8: the initial position of the buggy
 
the movement of the buggy in the simulation is controlled by a sequence of instructions. each
instruction consists of three numbers, lspeed, rspeed and time. lspeed and rspeed indicate
the rotation speed of the left and right wheels, respectively, expressed in degree par second. time
indicates how many seconds these two wheels keep their rotation speed. if a speed of a wheel
is positive, it will rotate in the direction that causes the buggy to move forward. conversely,
if a speed is negative, it will rotate in the opposite direction. for example, if we set lspeed as
-360, the left wheel will rotate 360-degree in one second in the direction that makes the buggy
move backward. we can set lspeed and rspeed differently, and this makes the buggy turn left
or right. note that we can also set one of them positive and the other negative (in this case, the
buggy will spin around).
 
figure 9: examples
 
your job is to write a program that calculates the final position of the buggy given a instruction
sequence. for simplicity, you can can assume that wheels have no width, and that they would
never slip.
 

"
p01365,Camera Control,"
""acm48"" is one of the most popular dance vocal units in japan. in this winter, acm48 is
planning a world concert tour. you joined the tour as a camera engineer.
 
your role is to develop software which controls the camera on a stage. for simplicity you can
regard the stage as 2-dimensional space. you can rotate the camera to an arbitrary direction
by the software but cannot change its coordinate.
 
during a stage performance, each member of acm48 moves along her route and sings the part(s)
assigned to her. here, a route is given as a polygonal line.
 
you have to keep focusing the camera on a member during a stage performance. you can change
the member focused by the camera if and only if the current and next members are in the same
direction from the camera.
 
your task is to write a program which reads the stage performance plan and calculates the
maximum time that you can focus the camera on members that are singing.
 
you may assume the following are satisfied:
  you can focus the camera on an arbitrary member at the beginning time.  each route of the member does not touch the camera.  each member stays at the last coordinates after she reaches there. 



"
p01366,Road Construction,"
king mercer is the king of acm kingdom. there are one capital and some cities in his kingdom.
amazingly, there are no roads in the kingdom now. recently, he planned to construct roads
between the capital and the cities, but it turned out that the construction cost of his plan is
much higher than expected.
 
in order to reduce the cost, he has decided to create a new construction plan by removing some
roads from the original plan. however, he believes that a new plan should satisfy the following
conditions:
  for every pair of cities, there is a route (a set of roads) connecting them.  the minimum distance between the capital and each city does not change from his original
      plan. 
many plans may meet the conditions above, but king mercer wants to know the plan with
minimum cost. your task is to write a program which reads his original plan and calculates the
cost of a new plan with the minimum cost.
 

"
p01367,Operator,"
the customer telephone support center of the computer sales company called jag is now in-
credibly confused. there are too many customers who request the support, and they call the
support center all the time. so, the company wants to figure out how many operators needed
to handle this situation.
 
for simplicity, let us focus on the following simple simulation.
 
let n be a number of customers. the i-th customer has id i, and is described by three numbers,
mi, li and ki. mi is the time required for phone support, li is the maximum stand by time
until an operator answers the call, and ki is the interval time from hanging up to calling back.
let us put these in other words: it takes mi unit times for an operator to support i-th customer.
if the i-th customer is not answered by operators for li unit times, he hangs up the call. ki
unit times after hanging up, he calls back.
 
one operator can support only one customer simultaneously. when an operator finish a call, he
can immediately answer another call. if there are more than one customer waiting, an operator
will choose the customer with the smallest id.
 
at the beginning of the simulation, all customers call the support center at the same time. the
simulation succeeds if operators can finish answering all customers within t unit times.
 
your mission is to calculate the minimum number of operators needed to end this simulation
successfully.
 

"
p01368,Merry Christmas,"
international christmas present company (icpc) is a company to employ santa and deliver
presents on christmas. many parents request icpc to deliver presents to their children at
specified time of december 24. although same santa can deliver two or more presents, because
it takes time to move between houses, two or more santa might be needed to finish all the
requests on time.
 
employing santa needs much money, so the president of icpc employed you, a great program-
mer, to optimize delivery schedule. your task is to write a program to calculate the minimum
number of santa necessary to finish the given requests on time. because each santa has been
well trained and can conceal himself in the town, you can put the initial position of each santa
anywhere.

 

"
p01369,koukyoukoukokukikou,"
english text is not available in this practice contest.
 
acm-icpc を愛する誰もが手から喉が出るほど欲しがるもの， それが accepted． 
略して ac． しかし， 実のところ， それが通じるのはごく限られた人たちだけで， 世間一般には ""koukyoukoukokukikou"" の略称に過ぎない．
 
ところで， 一般的なキーボードのキー配置(図a-1)をqwerty配列と呼ぶのに対し， それとは別のdvorak配列と呼ばれるキー配置も考案されている．
 dvorak配列ではよく使われるキーがホームポジションにあるので， より速くタイプできると t氏(仮) は強硬に主張している．
 



図a-1 qwerty配列
 
その t 氏(仮)はこの文字列を見ていてあることに気付いた． ""koukyoukoukokukikou"" は dvorak 配列を使うと片手だけでタイプできることに．
 しかし， 同時に残念な事実にも気付いた． qwerty 配列でも片手だけでタイプできるのだ．
 
t 氏(仮)は他に dvorak 配列を使うと片手だけでタイプできる文字列がないか興味を持った．
しかし， できれば qwerty 配列を使ったときに片手だけでタイプできて欲しくない．
そのために， 各文字列に対して， qwerty 配列で文字をタイプするときに使う手が入れ替わる回数を求めるプログラムを作ることにした． 
そういえば， t 氏(仮)は qwerty 配列をほとんど忘れてしまっていたのであった． 代わりにプログラムを書いてあげるとしよう．
 
なお， qwerty 配列でそれぞれのキーが左右どちらの手でタイプされるものなのかわからなくなったときは， 下の図a-2を参照すればよいだろう．
 



図a-2 それぞれの手でタイプされる範囲
 



"
p01370,Brave Force Story,"-->


"
p01371,Fastest Route,"-->


"
p01372,6/2(1+2),"-->


"
p01373,Divide the Cake,"-->


"
p01374,Sakura Poetry,"-->


"
p01375,Intelligent Circular Perfect Cleaner,"-->


"
p01376,Programming Contest,"時は 20xx 年，世界は g○○gle 社の支配によるディストピアである．
現在，人々の娯楽はプログラミングコンテストに限られている．
例えば，週末に家族で t○pc○der アリーナを訪れるというのはとてもよく見られる光景である．
しかし，それは光の世界のプログラミングコンテストの姿に過ぎない．
一方で，g○○gle と反抗勢力がぶつかり合う闇の世界では，
命をかけたプログラミングコンテストが行われている． 自分も久しぶりにプログラミングコンテストに参加してみよう．
足慣らしに，まずは，プログラミングコンテストの結果を処理するプログラムでも書いてみることにしよう． 

"
p01377,(iwi),"20xx 年の今，g○○gle 社の世界的な支配により，人々のコミュニケーションは限られており，
例えば，自由に人と情報をやりとりすることは基本的に許されていない．
特に，過去にプログラミングコンテストで名を馳せた強豪たちは，危険と判断され，
お互いバラバラにされ，密かに注意深く監視されているという． 自分も，そんな一人であった，ような気がする．
しかし実は，自分は記憶を失ってしまっているのだ．
自分が何と名乗っていたか，それすらも思い出せない．
'i' とか 'w' とか括弧とかを使っていた気がするが，
それっぽいものを書きだしてみても，しっくりこない．
そういえば，今思い出したことには，左右に線対称だった気がするのだ． 

"
p01378,[[iwi]],"そうだ，僕のハンドルネームは (iwi) だ．
僕は確かに昔にプログラミングコンテストに参加していた．
そして，多くの仲間と楽しい時間を過ごした． 確か，仲間たちは全員，美少女だったような気がする．
プログラミングコンテストの世界は，僕のハーレムだったような気がする．
g○○gle は，僕のハーレムを奪ったのだ，そうに違いない．
昔の仲間の手がかりをつかむためにも，やはりプログラミングコンテストに出なければならない． g○○gle code jam に参加登録することにしよう．
今度の id には，丸括弧以外の括弧も検討に入れてみよう． 

"
p01379,Stopping Problem,"g○○gle code jam は g○○gle 社が年に 1 度開催するコンテストである．
優勝者は g○○gle への入社を許される，世界最高峰のコンテストだ．
しかし勿論，それ以外の参加者は帰らぬ者となる． g○○gle code jam では自分の好きなプログラミング言語や処理系を使うことができる．
僕は defunge という自らが開発したプログラミング言語で参加することにした．
この言語を使えば，計算困難な問題はおろか，判定不能な問題ですら解決できる気がしている． 

"
p01380,The First Acceptance,"プログラミングコンテストでは，各問題に関して，
その問題を最初に正解した人の名前や正解時間が，
ファーストアクセプタンス（最初の正解）として解説等でしばしば言及される． 久しぶりにプログラミングコンテストに参加するとはいえ，予選で落ちるとは到底思えない．
ならば，最初のうちは，多少高いスコアを取ることを目指すよりも，
ファーストアクセプタンスを多く獲得し，存在をアピールしたほうが良いのではないか． 自分の実力を持ってすれば，各問題を見た瞬間に，
その問題を自分が何分で解くことができるかと，
その問題が開始後何分で自分以外の参加者によって最初に解かれるかがわかる． これらの情報を用いて，
どの程度ファーストアクセプタンスを獲得できるかを計算するプログラムを作っておこう． 

"
p01381,Spanning Trees,"今，g○○gle code jam の地区大会が始まろうとしている．
左の席に座っている男の id は wata と言うらしい．
東京大学時代の記憶に，似たような id の仲間が居た覚えがある．
しかし，僕の仲間は一人残さず美少女だったはずだ． 僕の記憶の中の wata は，マトロイドが好きだった．
特に，マトロイド交差が大好きで，
様々なマトロイド達を交差させることに一種の興奮すら覚えると言う少し変わった奴だった． マトロイドの理論の力を使えば，
与えられたグラフ上で辺を共有しない複数の全域木を求めることはとても簡単な問題だと言っていた気がする．
しかし，特別なグラフに関しては，
マトロイドのアルゴリズムを直接に適用するよりも高速なアルゴリズムがあるのではないか？ 

"
p01382,Programming Contest Challenge Book,"今，g○○gle code jam の地区大会が始まろうとしている．
前の席に座っている男の id は omeometo と言うらしい．
後ろの席に座っている男の id は jellies と言うらしい．
東京大学時代の記憶に，似たような id の仲間が居た覚えがあるが，僕の仲間は一人残さず美少女だったはずだ． 彼らは，机の上に蟻のイラストが掛かれた本を持っている．
あれはもしや…プログラミングコンテストのアルゴリズムを最初に網羅し，今では発売禁止となった伝説の本，
「プログラミングコンテストチャレンジブック」ではないか？
僕は，omeometo がトイレに行ったのを見計らい，少し拝借して，読んでみることにした． 


プログラミングコンテストチャレンジブック …しかし，僕は一瞬で本を読み終えてしまった．
拍子抜けだ．簡単すぎる．
少し古い本だからといって，こんな内容でよく売る気になったものだ． 例えば，最初の三角形の問題．これは，簡単すぎてお話にならない．自分だったら，こうする． 

"
p01383,Cache Strategy,"今，g○○gle code jam の地区大会が始まろうとしている．
斜め右前の席に座っている男の id は lyrically と言うらしい．
東京大学時代の記憶に，似たような id の仲間が居た覚えがあるが，僕の仲間は一人残さず美少女だったはずだ． 僕の記憶の中の lyrically は，アルゴリズムの力や実装の力もさながら，
気合で問題に正解することにも定評があった．
例えば，計算量が多少悪いプログラムでも，上手な実装をすることで高速にし，
正解とするようなことも得意としていた． プログラムを高速にする上で，非常に大切になってくるのが，
キャッシュメモリとの親和性である． 

"
p01384,Bit Operation,"いよいよ g○○gle code jam の世界大会が始まろうとしている．
前では p○tr, t○mek, snapdrag○n をはじめとする，
g○○gle の誇る最強のコーダー達が睨みを利かせている．
妙な動きを見せれば，命はないだろう．
目をつむり，コンテスト開始をじっと待つ． …妙だ，コンテストが始まらない．
目を開けてみると…なんということだ．部屋の全ての人間が，倒れている．
いや違う，全てではない．一人の男，wata を除いてだ． はっ…!! 僕は全てを思い出していた．
僕は世界で最初にプログラミングコンテストで人を殺めたのだ．
そして，僕が殺したのは他でもなく，最も仲の良かった友人の一人，kita_masa であった． kita_masa は自らをビット演算の達人と言い，
あらゆる関数はビット演算で記述できると言う，少し変わった奴だった．
そういえば今，ビット演算を用いて作成したい関数があるが，
kita_masa にそれをお願いすることはできない．
そこで，kita_masa の代わりになるプログラムを作成することにした． 

"
p01385,Balancing Binary Search Tree,"ところで，g○○gle code jam の地区大会で右の席に座っていた男の
id は rng_58 と言うらしい．
東京大学時代の記憶に，似たような id の仲間が居た覚えがあるが，僕の仲間は一人残さず美少女だったはずだ．
彼女はいわゆる無表情不思議系キャラだったような気がする． ということは，彼は知らない男だ．rng とは何の略だろう．
おそらく random number generator に違いない．
乱択アルゴリズムを得意とするのだろう． ところで，乱数を用いた平衡二分探索木である treap は，
2011 年頃のプログラミングコンテストではしばしば用いられていたようだが，
20xx 年の今では，あまり使用されていない． 当時 treap は実装が平易であるという理由により splay 木や scapegoat 木と並んでよく使われていた．
20xx 年の今，命をかけたプログラミングコンテストが日常的に行われるこの世界では，
実装が多少平易になるというような甘い根拠での選択は到底考えられない．
皆，少しでもプログラムが高速になるよう考えているし，
世界大会出場者ともなれば，left-leaning 赤黒木程度なら十数秒で記述できるのが当然だ． 例えば，treap が赤黒木よりも遅くなってしまうのは，
高さの定数倍が効いてくるからであると言われている．
ここは，落ち着いてそれを数値的に考察することにより，精神の安定を取り戻そう． 

"
p01386,Traveling Salesman Problem,"2011 年のあの頃，まだプログラミングコンテストはとても平和であり，
我々はルールを精読せずに気軽にコンテストに参加していた．
しかし，そこに g○○gle の陰謀は迫っていた．
ある日，g○○gle によって秘密裏に買収されていた t○pc○der のコンテストは，
人知れずうちにルールが改変されており，命がけのプログラミングコンテストとなっていた．
そして僕は，そこで，何も知らず，
まっ先に kita_masa のプログラムのオーバーフローを突いたのだ…． …そういえば，今こいつは，部屋に居る全ての人間を一瞬にして倒していた．
どうなっているんだ？ …なるほど!! そういうことか．
彼は大学時代，指数時間のアルゴリズムを高速にすることに興味を持っていた．
例え指数時間であっても，指数の底が極めて小さければ，
現実的なインスタンスに対して十分に高速な可能性がある． 凄まじい，想像以上だ…． 

wata
「完成させるにあたって，グラフアルゴリズムに詳しいお前の力が必要だ． 手を貸してくれるな？」
(iwi)
「ああ，勿論だ．まかせろ!!」


"
p01387,th Number,"反乱を嗅ぎつけた多くの g○○gle のコーダーが我々を取り押さえにやってきた．
かなりの数だ．
その中には，東京大学時代に僕らを優しく指導してくれた先輩たちも多く見受けられる．
残念ながら，今では敵同士だ． 声がした窓の外を見ると，g○○gle の建物に向きあう集団がいた．
黒の生地に赤で i，緑で ○，黄色で m と書かれた t シャツ … 彼らは i○m か！？
そして奇妙なことに，彼らは，向かってくる g○○gle のコーダー達を，
キーボードに触れることなく倒していた．
どうなっている？ 2011 年，i○m は彼らの高い技術力を活用し，
自然言語で出題されたクイズに高速かつ正確に応答するシステムである wats○n を完成させ，
クイズ番組にてクイズ王と呼ばれてきた人間たちに勝利した．
そして 20xx 年の今，wats○n は，
プログラミングコンテストの問題に対し解答のプログラムを作成するシステムとして生まれ変わったのだ． i○m の登場により，我々を取り囲む人数が減ってゆく． 僕は，妄想と決別したことにより，全てを思い出していた．
当然，当時の知識や経験は，今から見ればレベルが低すぎて役に立たない．
しかし，一番大切なものを思い出すことができた．
それは，プログラミングコンテストを愛する気持ちである．
問題を開く瞬間のワクワク感，サンプルが通った瞬間の盛り上がり，
ステータスが更新される瞬間の緊張，勝利の瞬間の喜び． そして，僕は自信の 1 題を繰り出す．
これは，東京大学時代の自分が愛した問題「k 番目の数字」を独自のテクニックにより一般化かつ大規模化した問題である． 

"
p01388,KUPC,"とある学生が，kyoto university programming contest (kupc) を開こうと考えた．そこで彼は，看板を作って皆に宣伝することにした．今，手元にはアルファベット 1 文字の書かれた板がいくつもある．これらの板から 'k'，'u'，'p'，'c' という文字の書かれた 4 枚の板を選ぶことで看板を 1 つ作成できる．この作業を繰り返すことで，沢山の看板を作成できるはずである．さて，与えられた板を使って，最終的に何枚の kupc と書かれた看板が得られるだろうか？
 

"
p01389,Cicada,"
n 君は毎日学校に通っているが，その道のりはとても長い．さらに今は暑い夏である．道中，蝉が五月蝿い．出来れば避けたいものである．ところで情報化が発達した現代社会においては，家に居ながらにしてどこに何匹の蝉がいるか調べることが出来る．その情報を使い，途中で出会う蝉の数が最も少ない道で学校に行くことに決めた．
 
家と学校が描かれた地図は長方形状になっており，h × w 個のブロックに分割される．一番左上のブロックに n 君の家があり，一番右下に学校がある．彼は学校へまっすぐ登校したいので家の方に逆戻りすることはない (地図において，右か下のブロックにしか移動しない)．各ブロックにおいて，そこにいる蝉の数だけ不快になる．どのような道を選べば，不快な度合いを最小化，つまり出会う蝉の数を最小に出来るだろうか．

 
"
p01390,Shiritori,"なんとなく暇だったのでしりとりの ai を作って ai としりとりをすることにした．しりとりとは 2 人で遊ぶゲームで，両者の間でまだ一度も発言されておらず，(最初の手番を除いて) 先頭の文字が直前の単語の最後の文字となっている単語を交互に言い合うゲームである． 今回 ai に単語の判定を実装するのが面倒だったので，単語の定義はアルファベットの小文字からなる文字列全てとした． しかし ai が完成したあたりでしりとりをするのは面倒くさくなってきたので，プログラムを書いて自分の代わりに ai と対戦させることにした．プログラムを書くのは良いのだが目標が無いのはつまらないので，なるべく早く ai に勝つプログラムを書くことにした．すなわち，なるべく少ないやりとりで ai に不正な応答をさせるプログラムを書くのである． なおプログラムが先手で ai が後手である． 

"
p01391,Sequence Configuration,"1 から n までの相異なる整数が n / 2 個書かれたカードがいくつか与えられるので，次の条件を満たすような長さ n の数列 seq を 1 つ作って出力して欲しい． seq の各要素は 0 か 1 である． すべてのカードについて以下が成り立つ： カードに書かれた数字をcard[1], ..., card[n/2]とする．このときカードに書かれた部分の和: seq[card[1]] + ... + seq[card[n/2]] が n / 8 以上かつ 3n / 8 以下になっている．  例えば，n = 8 でカードが 2 枚渡され，カードに書かれている数字がそれぞれ [1, 2, 7, 8]，[4, 5, 7, 8] であったとする．このとき seq=[0, 1, 0, 1, 0, 1, 0, 1] や seq=[0, 0, 0, 0, 1, 1, 1, 1] とおくと条件を満たすようにできている． 

"
p01392,Fox Number,"きつねのしえるは数字について考えるのが好きである．ある日，しえるはこの世にねこの数字というものがあることを知り，自分もそのような数字が欲しくなってしまった．そこで，次の性質を満たす数字をとりあえず fox number と呼ぶことにした． [性質]: 整数 n は k (&ge; 1) 個の素数 p1, ..., pk と正整数 e1, ..., ek で，p1 &lt; ... &lt; pk，e1 &ge; ... &ge; ek を満たすものによって n = p1e1 × ... ×  pkek と書けるとき，fox number であると呼ぶことにする． ところでしえるはこの性質をその場の思いつきで決めてしまったのでこれがどういう性質を持っているのか全くわかっていない．そこで，この数字の性質を調べるために区間 [a-b, a+b] に含まれる fox number の個数を出力して欲しい． 

"
p01393,Ball,"2 次元平面上の原点にボールがあり，x 軸の正方向との角度が反時計回りに見て 0 度  180 度までの間の方向に一様な確率で発射されようとしている (発射される方向は整数角であるとは限らない)．ボールの大きさは十分小さく，平面上では点であると見なすことにする．この問題における目的は，このボールをできるだけ高い確率で捕獲することである． 平面上に n 個の場所 (xi, yi) が与えられる．ボールを捕獲するために，あなたは n 個の場所から k 個の場所を選んで，それぞれの場所に人を配置することができる．人は i 番目の与えられた場所に対して半径 ri 以内の距離まで動いてボールを取ることが出来る． 人の配置をうまく選んでボールを捕獲できる確率を最大にするとき，その確率を出力せよ． 

"
p01394,XOR Circuit,"
計算機科学実験及演習 3 は cad を用いて cpu を設計する授業である．cpu は多くの回路を組み合わせなければ動かず，その中の 1 つに n ビット入力の xor 回路がある．ここで xor 回路とは，入力ビット列 x1x2...xn に対して，x1 + x2 + ... + xn\ (mod 2) を出力する回路のことを言う．しかし完璧に動作する xor 回路を設計するのは時間がかかるので，とりあえず n ビットのうち k ビットだけ使う xor 回路 a を作ることにした．つまり，ある i1, ... , ik が存在し，回路 a は xi1 + xi2 + ... + xik\ (mod 2)を出力する．

 
暫く後に今度は k ビット入力の xor 回路が欲しくなった．何だ簡単ではないか．先ほどの回路 a を使えばよい．ただ残念なことに，回路 a がどの k ビットを使っていたのか忘れてしまった上に，回路 a の設計図も間違って削除してしまった．しかしコンパイル済みの回路 a は残っている．なので，入力 x1x2...xn を入れて回路 a を実行することで，その出力 xi1 + xi2 + ... + xik\ (mod 2) を見ることは出来る．
出来るだけ作業の時間を短くしたいので，回路 a の実行回数には上限を設定することにしよう．どうすれば回路aが依存しているビット i1, ... ,  ik を見つけられるだろうか？

 

"
p01395,Unruly Eel,"きつねのしえるはうなぎを食べるのが好きである． 2t+1 枚の鉄板が連続して並んでおり，順番に -t, -t+1, ..., t の番号が付いている．しえるはこれらの鉄板に熱を加え，生きたうなぎを焼こうとしている．うなぎを焼く手順は以下のようなものである． まず，時刻 t=-1 のときに各鉄板にどれだけのエネルギーを加えるかを決め，実際にエネルギーを加える．各鉄板に加えるエネルギーの総和は e 以下でなければならない．すなわち，i 番の鉄板に加えるエネルギーを e(i) として，e(i) &ge; 0, e(-t)+...+e(t) &le; e でなければならない．なお，エネルギーは整数でなくてもよい． エネルギーを加えたあと，鉄板の熱さは e(i) / c(i) になる．ここで，c(i) は i 番の鉄板の比熱である． t = -0.5 のときにうなぎを 0 番の鉄板に載せる． t = 0, 1, 2,..., t のときに，うなぎは今自分がいる鉄板の熱さだけ加熱される． t = 0.5, 1.5, 2.5,...,t-0.5 のとき，うなぎは自分の今いる鉄板にとどまるか，両隣の鉄板に移動することができる． t = t+0.5 のときにうなぎを鉄板の上から回収する． ところで生きたうなぎというのはとても活きがよくさらに頭も良いので，もしかすると自分にかかる熱さの総和が最小になるように動いたりするんではないかとしえるは不安になった．そうなると鉄板に適当に熱を加えただけではうなぎを十分に加熱できない恐れさえある． そこであなたには，うなぎが常に最適に動くとして，うなぎに与えることのできる熱さの和の最大値を求めて欲しい． 

"
p01396,Mountain,"
l 氏はある都市の市長である．l 氏の市長としての手腕はすさまじく時を止め一瞬にして都市中に鉄道網を引いたり，財政の赤字を一夜にして莫大な黒字にしたり，はては巨大な怪獣をどこからともなく呼んでパフォーマンスに使うこともした．
 
h'y^*-1, x^*-2&lt;h'y^*-1, x^*-1&lt;h'y^*-1, x^*&gt;h'y^*-1, x^*+1&gt;h'y^*-1, x^*+2
&and;&and;&and;&and;&and;
h'y^*, x^*-2&lt;h'y^*, x^*-1&lt;h'y^*, x^*&gt;h'y^*, x^*+1&gt;h'y^*, x^*+2

&or;&or;&or;&or;&or;
h'y^*+1, x^*-2&lt;h'y^*+1, x^*-1&lt;h'y^*+1, x^*&gt;h'y^*+1, x^*+1&gt;h'y^*+1, x^*+2
 

ところで，l 氏はいくらがんばっても山形にできないような土地が存在する気がした．そこで，前もってコンピュータにその土地が山形にできるかどうかをチェックさせることにした．
 

"
p01397,Mod 3 Knights Out,"
ある日の夕方，コンテストの問題を解き終えた二人は今日の問題について話し合っていた．
a「くそー，あのライツアウトの問題，mod 2 じゃなくて mod 3 とか mod 7 とかだったら解法分かったのにー！」

b「じゃあ，mod 3 で別の方法で解く問題を作ればいいんですね．分かりました！」
こうして次のような問題が誕生した．  h × w のチェス盤がある．チェス盤の各マスには 0 から 2 の整数が書かれている．このチェス盤にナイトを置いていく．ただし，各マスには多くても 1 体のナイトしか置けない．各マスについて，(マスの数値+そこを攻撃するマスにいるナイトの数)=0 mod 3が成り立つようなナイトの配置を良い配置と呼ぶ．攻撃するマスとはそのマスから縦方向に ±2 マスかつ横方向に ±1 マス，もしくは縦方向に ±1 マスかつ横方向に ±2 マスずれたマスのことである． 良いナイトの配置の数を求めよ．答えは大きくなる可能性があるので 1,000,000,007 で割った余りを答えよ． 

"
p01398,Swap Cipher,"
r大学のとある2d好きな彼は、人に見られると赤面するような恥ずかしい文章を日頃からよく書いている。
そのため、第三者に自分の書いている文章を見られないために、彼が独自に考え出したスワップ暗号という手法により文章を暗号化している。
スワップ暗号では、次のようなステップをn回繰り返し、暗号化を行う。
 
文字列のai番目とbi番目を入れ替える 
この2つの文字を、aiとbiの差分だけアルファベット順に戻す 
ただし、アルファベット順で、'a'の前は'z'とする。
 
例えば、""aojwo""という文字列に対し、a1=1、b1=4、という暗号化操作を行ったとすると、次のようになる。
 
1番目と4番目を入れ替える(""aojwo""→""wojao"") 
この2つの文字'w'と'a'を、1と4の差分＝3だけアルファベット順に戻す(""wojao""→""tojxo"") 
'w'は、アルファベット順に3戻すと、'w'→'v'→'u'→'t'となる 
'a'は、アルファベット順に3戻すと、'a'→'z'→'y'→'x'となる 
よって、""aojwo""は、""tojxo""と暗号化される。
 
この暗号化により彼の文章は、原文がわからないように暗号化できるはずだったのだが、あろうことか彼は暗号化に使用したスワップ操作の過程を流出させてしまった。
あなたの仕事は、暗号化された文字列と暗号化に使用したスワップ操作が与えられたとき""復号""を行うプログラムを作成し、2d好きな彼をはずかしめてやることである。
 

"
p01399,Problem B,"
r大学の2d好きの人たち (2drespecters)は、a津大学で開催されるプログラミングの練習合宿に参加する。
この練習合宿では、参加者たちが自作のプログラミング問題を持ち寄り、練習に用いる。
 
2drespectersも、いくつかの問題を作成することになった。
しかし、合宿の3日前になっても、まだ、b問題が完成していなかった。
最初のb問題の担当者が作成した問題は、担当者が問題の制約を難しくし過ぎてしまったため、c問題以降にまわされてしまったのだ。
そして、簡単すぎても、難しすぎてもいけない、微妙な難易度の調整が必要とされるb問題は、誰もが手を付けたがらなかった。
それ以来、b問題担当者の椅子は空席のままである。
 
合宿3日前になって、遂に、この問題を解決するために、2drespecters期待のホープが立ち上がった。
だが、彼は、b問題を作成する気がない。
彼は、自分でb問題を作成したくないので、b問題の作成担当を他者に押し付ける手法を考え出したのだ。
彼の手法は、表面上、b問題の作成担当者を平等に決定する。
 
問題作成のために要した作業時間が最も少ない人がb問題担当者になる。 
作業時間が最も少ない人が複数人居た場合は、より問題難易度の小さい問題の担当者がb問題作成担当者になる。 
作業時間が最も少ない人が複数人居て、その中で、問題難易度の最も小さい人が複数人いた場合は、ホープの彼がb問題作成担当者になる。 


彼の手法は、一見、最も仕事をしていない人がb問題の作成を担当するため、2drespectersのメンバー全員に快く受け入れられた。
 
各個人の作業時間は、各個人が口頭で申請するため、嘘の申請をすることが可能である。 
問題の作業可能時間を超える作業時間や負の作業時間を申請すると、嘘だとばれる。 
ある問題の作成のための作業時間は、必ず問題難易度の整数倍になることが知られているため、これに反する作業時間を申請した場合も、嘘だとばれる。 


嘘の申請をした人の嘘がばれた場合、その人が必ずb問題作成担当者になる。
申請は一人ずつ順番に行い、嘘がばれる場合は、申請の時点でばれる。
一人でも嘘の申請がばれた時点で、b問題作成担当者が決まり、それ以降の申請は行わない。
 
申請者は、自分より前の申請のみを考慮し、申請の時点で自分がb問題作成担当者にならないような最小の作業時間を申請するものとする。
申請の時点で、申請者がb問題作成担当者にならないような報告ができない場合は、嘘だとばれないような最大の作業時間を申請する。
 
各個人の担当する問題難易度のリストが申請順に与えられたとき、誰がb問題作成担当者になるかを求めるプログラムを作成せよ。
ホープの彼の申請順番は、一番最後である。
 
なお、本問題はフィクションであり、本問題の作成の経緯とは一切の関係がない。
 

"
p01400,Seishun 18 Kippu,"
r大学のとある学生sirokurostoneはa津大学で行われる合宿に参加しようとしていた。
他のメンバーは新幹線を使用する予定なのだが、sirokurostoneは青春18切符を使って向かおうとしていた。
同じく青春18切符使いのとある2d好きな人物も合宿に参加しようとしていた。
 
どうせならと一緒に行こうと考えたsirokurostoneは途中の駅で2d好きな彼を拾って向かおうと考えた。
sirokurostoneはr大学を出る前に遅延状況を確認してすこしでも時間のかからないルートを通ってa津大学のある駅に着きたいと考えている。
sirokurostoneはルートが確定した後に2d好きな彼にもその情報を伝えるつもりである。
しかし、sirokurostoneは遅延状況を見てもどのルートを通れば早くa津大学のある駅に到着できるか分からず困っている。
 
そこで、あなたの仕事はsirokurostoneに代わって遅延状況からどれくらいでa津大学のある駅に着くのかを求めることである。
 
距離/40+遅延予想時間 

で求めることができる。
各駅での停車時間は無視してよいものとする。
 

"
p01401,The Legendary Sword,"
※ この問題には厨二成分が多く含まれます。胸焼けにご注意ください。
 
ついに復活を遂げた魔王は、再び世界を闇に包むために人間界に攻め入ろうとしていた。
 
魔王は、本格的な侵攻を始める前に、まず伝説の剣を破壊することにした。
前回の戦争において、魔王は伝説の剣を持つ勇者によって倒された。
魔王の体は闇の衣によって守られているため、生半可な攻撃では魔王を傷つけることはできない。
しかし、伝説の剣は、神々の加護により、魔王の闇の衣すら容易に貫いてしまう。
そのため、今回の戦争に勝利するためには、なんとしてもその伝説の剣を手に入れて破壊する必要がある。
 
調査の末、伝説の剣はとある遺跡の最奥に安置され、次代の勇者が現われるのを待っていることがわかった。
伝説の剣は、邪悪な者や盗賊によって奪われるのを防ぐために、周囲に点在する無数の宝珠によって封印されている。
魔王は、強力な魔力を持っているため、触れるだけで宝珠を破壊することができる。
ただし、宝珠による封印は多重構造になっており、表層から順に破壊していく必要がある。
例えば、第1の封印の宝珠を破壊する前に第2以降の封印の宝珠に触れたとしても、破壊することはできない。
また、複数の宝珠が同じ封印を構成していることもあるが、魔王はそのうちの一つに触れるだけで、同時にその封印を破壊することができる。
 
遺跡には神聖な力が満ちており、並の魔物では入ることすらままならない。
そこで、魔王自ら赴き伝説の剣を回収してくることになった。
いかに魔王といえど、長時間その力を受け続ければただではすまない。
魔王の右腕であるあなたの仕事は、念のため魔王が全ての封印を破壊し、伝説の剣の下に辿りつくまでの時間を求めることである。
 

"
p01402,Anipero,"
猛暑が続いた、長かったようで短かったような夏がもうすぐ終わろうとしていた。
そんな8月下旬のある日、とある2d好きな人物とその先輩のslipは、アニペロサマーライブ、通称アニペロと呼ばれるイベントに参加していた。
アニペロとは、さまざまなアニメソングアーティストたちが集結する、日本国内最大のアニメソングライブイベントである。
今年のアニペロは、公式で公表されていたアーティストの他に、シークレットで超豪華歌手も出演し、大盛況の内に幕を閉じた。
アニペロには初参戦だった2d好きな彼は、ライブ後の余韻にひたりつつも、ひとつの疑問を抱えていた。
「アニペロに出演するアーティストはどのように決めているのだろうか？」
彼は、数あるアーティストの中から、出演アーティストの選出をするのに、次のような方法があるのではないかと、選出法を考えてみた。
 
まず、アニペロのアーティストには、シークレットアーティストとスタンダードアーティストの2種類の分類があるものとする。
シークレットアーティストとは、ライブに出演することを事前公表せず、ライブ本番になって突然現れるアーティストのことを指す。
スタンダードアーティストとは、ライブに出演することを事前に公表してよいアーティストのことを指す。
 
アーティスト名：文字列 
アーティストを雇うための金額（以下、雇用金と呼ぶ）：自然数 
このアーティストが出演することで、お客をどれほど満足させられるか（以下、満足度と呼ぶ）：自然数 


今回、ライブに出演するアーティストを選ぶために、シークレットアーティスト候補n人、スタンダードアーティスト候補m人が、すでに用意されているものとする。さらに、ライブの主催者は、アーティストを雇用するために使用できる資金limitを持っているものとする。
 
n人のシークレットアーティスト枠から、1人以上、2人以下を選出する(1人or2人なのは、シークレットがいなかったり多かったりすることを避けるためである) 
m人のスタンダードアーティスト枠から、x人以上のアーティストを選出する 
アーティストを全て選出し終えたとき、雇用金の合計を、limit以下にする 
選出したアーティスト全員で得られる満足度の合計を最大化する 


さて、ここまで選出法を考えた2d好きな彼は、この方法でプログラムを書いてみようと思った。しかし、彼は選出法を考えるのに気力を使ってしまい、プログラムを書く気力がなくなってしまったようなので、彼の代わりにプログラムを書いてあげてほしい。
 
あなたの仕事は、上記の選出法に従い、アーティストを選出したときのお客の最大満足度を出力するプログラムを作成することである。
 

"
p01403,Farey Sequence,"
slipは数字を眺めるのが好きである。
ファイルをダウンロードしているときの、残り時間を眺めているだけで、時間を潰せるほどである。
そんなslipが友人から面白い数列を教えられた。
その数列の定義は以下のとおりである。
 
一般項をfnと表わす。
fnとは、n以下の分母を持つ0以上1以下のすべての約分された分数(既約分数)を小さな順から並べたものである。
ただし、整数0、1はそれぞれ分数0/1、1/1として扱われる。
 
つまりf3は、
 
のように表される。
 
f5であれば
 
と表される。
 
slipはこの数列にすぐにのめり込んだ。
しかしこの数列を眺めていても、なかなか特徴がつかめなかった。
特徴をつかむためにまずは各項の項数がいくつあるのか調べようと思ったが、
増え方の規則がわからず、自力で理解することを断念した。
 
そこで、
勝手に友人と思っているあなたに、指定した項にどれだけの項数があるのかを聞くことにした。
あなたの仕事は、与えられた項における項数を求めることである。
 

"
p01404,Water Clock,"
琵琶湖の湖底から変わった形の水時計のようなものが発見された。
 
水時計は水平な広い平面上に置かれ、１つ以上の一辺が30cmの立方体の水槽で構成されている。
水槽は格子状に並べられた様々な高さの台の上に置かれている。水槽の厚みは無視できる。
同じ高さの台の上に置かれた水槽が前後左右に隣接していたとき、それらの水槽の間には穴があけられ、水の高さが等しく保たれる仕組みになっている。(図1)
 
一緒に発見された文献によると、ある水槽に水を継続的に注ぎ、他の特定の水槽の水位を調べていたらしい。
 
図2のようにある水槽に水を注ぎ、水があふれたとき、あふれた水はその水槽に隣接している方向に等しい量流れ込む。水槽がない場所に水が流れた場合、水時計の外に自動的に排水される。
また水があふれる方向がなくとも、水槽の容量より多い水が格子内にとどまることはない。そのような場合、水槽の容量を超えた分の水は不思議な力で消滅する。
隣接している水槽が、もとの水槽より少しでも高い台に置かれていたとき、その方向に水は流れないので注意すること。
例えば図3の場合、中央の水槽から左右と奥の水槽にそれぞれあふれた量の1/4ずつの水が流れ込む。
 
あなたの仕事はこの水時計をシミュレートするプログラムを書く事である。
 

"
p01405,Oh,"
太郎君は、次郎君に古文のノートを借りた。
明日の古文の宿題を写させてもらうためだ。
太郎君は、用心深い性格をしているため、万が一のことを考えて、近所のコンビニで次郎君のノートのコピーを取って自宅へ帰った。
 
太郎君は、自宅で宿題を始めようとしたときに、慌てた。
次郎君から借りたノートが鞄に入っていなかったからだ。
どうやら、コンビニに忘れてきてしまったようだ。
 
太郎君は、急いでコンビニに引き返した。
コピー機とその周辺を懸命に捜索したが、ノートを見つけることはできなかった。
 
困り果てた太郎君は、コンビニの店長に助けを求めた。
余談だが、店長は地球環境に優しい人で、白ヤギさんを飼っている。
店長は、地球環境に気を配る心遣いを持っているため、常日頃から、ペットの白ヤギさんに、餌としてコピー機周辺の客の忘れものを与えている。
店長によると、ノートは、今晩の白ヤギさんの晩御飯であり、白ヤギさんは現在食事中だそうである。
太郎君は白ヤギさんに頼みこみ、食べかけのノートを取り返すことはできたが、ノートはビリビリに破れぼろぼろである。
 
太郎君は、急いで自宅に引き返した。
自室の机とその周辺を懸命に捜索したが、ノートのコピーを見つけることはできなかった。
 
困り果てた太郎君は、お母さんに助けを求めた。
余談だが、太郎君のお母さんは地球環境に優しい人で、黒ヤギさんを飼っている。
太郎君のお母さんは、地球環境に気を配る心遣いを持っているため、常日頃から、ペットの黒ヤギさんに、餌として太郎君の宿題を与えている。
お母さんによると、ノートのコピーは、今晩の黒ヤギさんの晩御飯であり、黒ヤギさんは現在食事中だそうである。
太郎君は黒ヤギさんに頼みこみ、食べかけのノートを取り返すことはできたが、ノートのコピーはビリビリに破れぼろぼろである。
 
次郎君のノートとそのコピーをビリビリのぼろぼろにされてしまった太郎君は、ノートを可能な限り復元しようと考えた。
そこで、繋がりそうなノートの切れ端同士を繋ぎ合わせて、「繋ぎ合せたノート」を作成した。
同様に、繋がりそうなノートのコピーの切れ端同士を繋き合わせて、「繋ぎ合せたノートのコピー」を作成した。
 
太郎君は、あらゆる可能性を考えるために、繋がりそうな切れ端同士をつなぎ合わせた。
このため、1つの切れ目に2つ以上の切れ端が繋がれてしまった箇所もあった。
 
繋ぎ合わせ方の例を図1に示す。
図1は、7つの切れ端と6つの切れ目からなる。
 
haruwaakebono 
haruwasaronpusu 
natsuwaakebono 
natsuwasaronpusu 


ノートやノートのコピーは、白ヤギさんや黒ヤギさんが、食べてしまったため、復元できない部分があったり、彼らのご飯に混ざっていた関係のない書類の切れ端が混在していることもある。
 
太郎君の代わりに、「繋ぎ合わせたノート」と「繋ぎ合わせたノートのコピー」の2つを入力として受け取って、両方に共通して現れる文章の数を求めるプログラムを作成せよ。
 

"
p01406,Custom Painting Master,"
slipはとあるレーシングゲームの動画が好きである。
といっても、車が走っている動画が好きであるわけではなく、このゲームに搭載されたカスタムペイントカー作成という機能によって、車体をカスタマイズする動画が好きなのである。
これは、円や多角形などといった基本的な幾何学図形を重ねあわせることで、車体にカスタムペイントができる機能である。
 
このカスタムペイントによって様々なアートを創りだす、いわゆる職人と呼ばれる人々がいる。
職人達の手にかかれば、車体にガリガリしたアイスキャンディーのキャラクターや、アイドルをプロデュースして楽しむゲームのキャラクターを創りだすことなど造作もない事である。
職人の車は、オークションで高値で取引をされるほどである。
 
その中でも、slipがお気に入りの職人がいる。
その職人は、扇形の図形のみで様々なアートを創り出している。
その職人は扇形を何枚も重ねあわせることで、自由自在に形を創り出している。
 
ある日slipは、職人が作るアートにおいて、扇形が一番多く重なっている部分で何枚あるのか気になりだした。
そこで、手作業で数えようと思ったのだが、枚数が多かったために諦めてしまった。
 
そこで、勝手に友人と思っているあなたに、プログラムを作ってもらうことにした。
あなたの仕事は、与えられた扇形の位置情報から、最大何枚の重なりがあるのか調べることである。
ここでは、扇形同士が接している場合も重なっているものとする。
 

"
p01407,Attack the Moles,"
icpc で良い成績を収めるには修行が欠かせない．うさぎは icpc で勝ちたいので，今日も修行をすることにした．
 
今日の修行は，もぐらたたきを何回も行って，反射神経と記憶力を高めようというものである．出てくるもぐらを次々に叩き，出来るだけ多くのポイントを獲得したい．
 
もぐらが出てくる可能性のある場所は直線状に並んでいて，基準点からの距離によって座標が定まっている．うさぎはしばらく修行を続けるうちに，もぐらの出現する場所と時間が常に一緒であることに気が付いた．うさぎは，その情報をすべて記録し，コンピュータで解析を行うことにした．
 
もぐらを叩くには，もぐらの出現位置に手を動かした後，もぐらの出てくるタイミングにぴったり合わせてもぐらを叩かなければならない．もぐらをうまく叩けると，そのもぐらに応じてポイントを得ることが出来る．もぐらを叩く動作は一瞬で行うことが出来るが，手を移動させる速さには限界がある．うさぎはもぐらを叩くにあたって左右両方の手を用いることができる．左手と右手は独立に動かすことが可能であるが，左手は常に右手より座標が小さい位置に存在しなければならない．このような条件下で，最大でどれだけのポイントが得られるかを調べたい．
 

"
p01408,Brilliant Stars,"
icpc で良い成績を収めるには修行が欠かせない．うさぎは icpc で勝ちたいので，今日も修行をすることにした．
 
今日の修行は，夜空に輝くたくさんの星たちを観測して，視力と集中力を鍛えようというものである．うさぎは独自のセンスで星の特徴を記録していくことができる．
 
うさぎは「星の観測日記」として記録した星の特徴をノートにつけていくことにした．ここで，「似ている」 2 つの星をともに記録することは避けたい．2 つの星が「似ている」かどうかは，すべてうさぎの判断で決まっている．「似ている」かどうかの関係はあまり複雑ではなく，以下の条件を満たす．
 
条件： 異なる 4 つの星 a, b, c, d があり，a と b，b と c，c と d がそれぞれ「似ている」とする．このとき，a と c が「似ている」か，b と d が「似ている」か，あるいはその両方が成り立つ．
 
うさぎは「似ている」 2 つの星を記録しないようになるべくたくさんの星を記録したい．また，そのようにする方法が何通りあるかも知りたい．
 

"
p01409,Common Palindromes,"
icpc で良い成績を収めるには修行が欠かせない．うさぎは icpc で勝ちたいので，今日も修行をすることにした．
 
今日の修行は，文字列中にある回文を探すことによって，文章から隠れたメッセージを読解する能力を高めようというものである．回文はたくさんあるかもしれないので，探すついでに個数も数えてしまいたい．
 
2 つの文字列 s, t が与えられるので，以下を満たす整数の組 (i, j, k, l) の個数を求めたい．
 1 &le; i &le; j &le; (s の長さ)． 1 &le; k &le; l &le; (t の長さ)． s の i 文字目から j 文字目までを取り出した部分文字列は，t の k 文字目から l 文字目までを取り出した部分文字列と同一であり，さらにこれらは回文 (左から読んでも右から読んでも同じになる文字列) となっている． 


"
p01410,Dangerous Tower,"
icpc で良い成績を収めるには修行が欠かせない．うさぎは icpc で勝ちたいので，今日も修行をすることにした．
 
今日の修行は，積み木を丁寧に積み上げることによって，決してミスタイピングをしないほどの手先の器用さを手に入れようというものである．せっかく積み木がたくさんあるので，高い塔を作ろう．
 
積み木は n 個あり，i 番目 (1 &le; i &le; n) の積み木は 1 &times; ai &times; bi の直方体の形をしている．長さ 1 の辺は奥行き方向に用いて，長さ ai, bi の辺を横方向と高さ方向に 1 つずつ割り当てることにした．積み木を積み上げるとき，上の段の積み木は下の段の積み木より横の長さが厳密に短くなければならない．積み木は好きな順番に使うことができ，また，使わない積み木があってもよい．このような制約下で，作ることが可能な最も高い塔を作りたい．
 

"
p01411,Entangled with Lottery,"
icpc で良い成績を収めるには修行が欠かせない．うさぎは icpc で勝ちたいので，今日も修行をすることにした．
 
今日の修行は，あみだくじを利用して，未来を読む力をつけて運気を高めようというものである．もちろん直感に頼るだけでなく，綿密な確率計算も欠かせない．
 
今回考えるあみだくじは，長さ h + 1 センチメートルの縦棒 n 本からなる．うさぎは棒の上部を見て，n 本のうち 1 本を選ぶことになる．棒の下部には，左から p 本目の棒の場所にのみ「当たり」と書かれている．あみだくじにはいくつかの横棒が含まれる．横棒の配置に関して，以下の条件を考えよう．
 各横棒は，a を 1 以上 h 以下の整数として，縦棒の上端から a センチメートルの高さにある． 各横棒は，隣り合った 2 本の縦棒のみを結ぶ． 同じ高さには複数の横棒は存在しない． 
うさぎはこれらの条件を満たすように m 本の横棒を引いた．あいにくうさぎは記憶力が良いので，当たりの位置や横棒の位置をすべて覚えてしまっており，あみだくじを楽しめない．そこで友達のねこにさらに横棒を追加してもらうことにした．
 
まず，うさぎは当たりを狙って n 本の棒のうち 1 本を選ぶ．その後，ねこは以下の操作をちょうど k 回行う．
 横棒を追加しても上で指定された条件を満たすような場所のうち 1 箇所を無作為に選ぶ．ここで，どの場所も等確率で選ばれるものとする．選んだ場所に横棒を追加する． 
そして，うさぎが選んだ棒が当たりであったかを判定する．棒の辿り方は通常のあみだくじと同様である (横棒に出会うたびに隣の縦棒に移る)．うさぎは，可能な限り当たりとなる確率を高くしたい．
 

"
p01412,Power of Power,"
icpc で良い成績を収めるには修行が欠かせない．うさぎは icpc で勝ちたいので，今日も修行をすることにした．
 
今日の修行は，非常に大きな数の計算を行って，計算力をつけて意識を高めようというものである．大きい数が簡単に出てくる演算として，累乗が挙げられる．
 
n 個の非負整数 a1, a2, ..., an がある．これらの並べ替え b1, b2, ..., bn であって，b1b2...bn - 1bn が最大になるものを求めたい．うさぎたちにとってはもちろん常識であるが，この計算は右上から順に行う．また，00 = 1 であると約束することにする．
 
最大条件を満たす b1, b2, ..., bn は複数通りあるかもしれない．そのような場合は，そのうちで辞書順最小の列を選ぶことにしよう．
 
"
p01413,Quest of Merchant,"
icpc で良い成績を収めるには修行が欠かせない．うさぎは icpc で勝ちたいので，今日も修行をすることにした．
 
今日の修行は，街を駆け回り交易を行うことで，商売の力を手にしようというものである．
 
今後の修行のためにも，できるだけ多くの資金を稼ぎたい．
 
この世界は，東西南北方向の道路が等間隔に並んでいて，碁盤状になっている．唯一存在する市場の位置を (0, 0)，街には x 座標，y 座標が定まっている (座標が整数値の点が交差点に対応する)．うさぎは道路に沿ってのみ移動することができ，隣接する交差点間を移動するのに 1 分を要する．いくつかの交差点には街がある．交易では，街で商品を買い，市場にて販売することによって価格の差の分の利益を得る．
 
うさぎの初期資金は十分にあり，お金が足りないから商品が購入できない，といったことはない．だが，それぞれの商品には重さがあり，うさぎは重さの合計が w までの商品しか同時に持ち運ぶことができない．よって，街に商品を仕入れに行ったり市場に戻ったりを繰り返すことになる．場合によっては，複数の街で商品を購入してから市場に戻ることになるかもしれない．
 
街での商品の購入や，市場での商品の販売は一瞬で行えるものとする．また，街にある商品が品切れになってしまうことは有り得ず，無限に購入することが可能である．
 
うさぎは，今回売買を行おうとしている各商品の名前，1 個あたりの重さおよび販売価格と，各街の x 座標，y 座標および販売商品の名前と価格を，データにまとめた．うさぎは今，市場がある (0, 0) の位置にいる．プログラムを使って，制限時間 t 分の間にどれだけ稼ぐことが可能か調べたい．
 
"
p01414,Rectangular Stamps,"
icpc で良い成績を収めるには修行が欠かせない．うさぎは icpc で勝ちたいので，今日も修行をすることにした．
 
今日の修行は，絵を描くことによって，創造力を高めようというものである．四角いスタンプを用いて，上手く模様を描こう．
 
大小さまざまなスタンプを使い，4 &times; 4 のマス目の紙に指定された赤・緑・青の通りの絵を完成させたい．スタンプは長方形であり，マス目にぴったり合わせて使う．スタンプの縦と横を入れ替えることはできない．
 
紙は最初色が塗られていない状態にある．紙にスタンプを押すと，押された部分がスタンプの色に変わり，下に隠れた色は全く見えなくなる．スタンプの色は付けるインクにより決定されるので，どのスタンプでも，好きな色を選ぶことが可能である．スタンプは紙から一部がはみ出た状態で押すことも可能であり，はみ出た部分は無視される．
 
1 つのスタンプを複数回使うことは可能である．同じスタンプを別の色に対して使ってもよい．スタンプを押すのはやや神経を使う作業なので，出来るだけスタンプを押す回数を少なくしたい．
 

"
p01415,Starting Line,"
icpc で良い成績を収めるには修行が欠かせない．うさぎは icpc で勝ちたいので，今日も修行をすることにした．
 
今日の修行は，一直線上の道を走って，体力と判断力を養おうというものである．うさぎは今，スタートラインに立って長い長い道を見渡している．
 
道の途中にはいくつかニンジンが置かれており，うさぎはニンジンを食べると加速することができる．加速していないときのうさぎの走る速さは毎秒 u メートルであるが，ニンジンを食べることで，最後のニンジンを食べてから t 秒後までは速さが毎秒 v メートルとなる．また，うさぎはニンジンを k 個まで食べずに持っておくことができる．ニンジンを持っていても走る速さは変わらない．
 
ニンジンを持ったり食べたりするのに時間はかからないとして，ゴールまでの最短所要時間を求めたい．
 

"
p01416,Tiles are Colorful,"
icpc で良い成績を収めるには修行が欠かせない．うさぎは icpc で勝ちたいので，今日も修行をすることにした．
 
今日の修行は，流行りのパズルをすばやく解いて，瞬発力を鍛えようというものである．今日挑戦するのは，色とりどりのタイルが並んでいてそれらを上手く消していくパズルだ
 
初期状態では，グリッド上のいくつかのマスにタイルが置かれている．各タイルには色がついている．プレイヤーはゲーム開始後，以下の手順で示される操作を何回も行うことができる．
 タイルが置かれていないマスを 1 つ選択し，そのマスを叩く． 叩いたマスから上に順に辿っていき，タイルが置かれているマスに至ったところでそのタイルに着目する．タイルが置かれているマスがないまま盤面の端に辿り着いたら何にも着目しない． 同様の操作を叩いたマスから下・左・右方向に対して行う．最大 4 枚のタイルが着目されることになる． 着目したタイルの中で同じ色のものがあれば，それらのタイルを盤面から取り除く．同じ色のタイルの組が 2 組あれば，それら両方を取り除く． タイルを取り除いた枚数と同じ値の得点が入る． 着目をやめる． 
たとえば，以下のような状況を考えよう．タイルが置かれていないマスはピリオドで，タイルの色はアルファベット大文字で表されている．
 
ここで上から 2 行目，左から 3 列目のマスを叩く操作を考える．着目することになるタイルは a , b , b の 3 枚であるから，b の 2 枚が消えて盤面は以下のようになり，2 点を得る．
 
このパズルはゆっくりしていると時間切れになってしまい，盤面の一部が見えなくなりどのくらい修行が足りなかったのかがわからなくなってしまう．
各色のタイルは 2 枚ずつ置かれているが，それらをすべて消せるとは限らないので，予めプログラムに得点の最大値を計算させておきたい．
 

"
p01417,Calender Colors,"
taro  is a member of a programming contest circle.
in this circle, the members manage their schedules in the system called great web calender.
 

taro has just added some of his friends to his calendar so that he can browse their schedule on his calendar.
then he noticed that the system currently displays all the schedules in only one color, mixing the schedules for all his friends.
this is  difficult to manage because  it's hard to tell whose schedule each entry is.
 
but actually this calender system has the  feature to change  the color of schedule entries, based on the person who has the entries.
so taro wants to  use that feature to distinguish their plans by color.
 
given the colors taro can use and the number of members,
your task is to calculate the subset of colors to color all  schedule entries.
the colors are given by &quot;lab color space&quot;.
 
in lab color space,
the   distance between two colors is defined by the square sum of the difference of each element.
taro has to pick up the  subset of colors  that maximizes the sum of distances of all color pairs in the set.
 

"
p01418,Sleeping Time,"
miki is a high school student.
she has  a part time job, so she cannot take enough sleep  on weekdays.
she wants to take good sleep  on holidays, but she doesn't know  the  best length of sleeping time for her.

she is now trying to figure that out with the following algorithm:
  begin with the numbers k, r and l. she  tries to sleep for h=(r+l)/2 hours. if she feels  the time is longer than or equal to the optimal length, then  update l with h.  otherwise,  update r with h. after repeating step 2 and  3 for k  nights, she decides her optimal sleeping time to be t' = (r+l)/2. 
if her feeling  is always correct,  the steps described above should give her a very accurate optimal sleeping time.
but unfortunately, she makes mistake in step 3  with the probability p.
 
 assume you know  the optimal sleeping time t for miki.
you have to calculate the probability pp that the absolute difference of t' and t is  smaller or equal to e.
it is guaranteed that the answer remains unaffected  by the change of e in 10^{-10}.
 

"
p01419,On or Off,"
saving electricity is very important!
 
you are in the office represented as r \times c grid  that consists of walls and rooms.
it is guaranteed that, for any pair of rooms in the office, there exists exactly one route between the two rooms.
it takes 1 unit of time for you to move to the next room (that is, the grid adjacent to the current room).
rooms are so dark that you need to switch on a light when you enter a room.
when you leave the room, you can either leave the light on, or
of course you can switch off the light. each room keeps consuming electric power while the light is on.
 
today you have a lot of tasks  across the office.
 tasks are given as a list of coordinates, and they need to be done in the specified order.  
to save electricity, you want to finish all the tasks with the minimal amount of electric power.
 
the problem is not so easy though, because you  will consume electricity not only when light is on, but also when you switch on/off the light.

luckily, you know the cost of power consumption per  unit time and also the cost to switch on/off the light for all the rooms in the office.
besides, you are so smart that you don't need any  time to do the tasks themselves.
so please   figure out the optimal strategy  to minimize the amount of electric power consumed.
 
after you finished all the tasks, please do not leave the light on at any room.
it's obviously wasting!
 

"
p01420,Marathon Match,"
n people run a marathon.
there are m resting places on the way.
for each resting place, the i-th runner takes a break with probability p_i percent.
when the i-th runner takes a break,  he gets rest for t_i time.
 
the i-th runner runs at constant speed v_i, and
the  distance of the marathon is l.
 
you are requested to compute the probability  for each runner to win the first place.
if a runner arrives at the goal with another person at the same time, they are not considered to win the first place.

 

"
p01421,Reverse Roads,"
icp city has an express company whose trucks run from the crossing s to the crossing t.
the president of the company is feeling upset because all the roads in the city are one-way, and are severely congested.
so, he planned to improve the maximum flow (edge disjoint paths) from the crossing s to the crossing t by reversing the traffic direction on some of the roads.
 
your task is writing a program to calculate the maximized flow from s to t by reversing some roads, and the list of the reversed roads.
 

"
p01422,Beautiful Currency,"
km country has n kinds of coins and each coin has its value a_i.
 
the king of the  country, kita_masa, thought that the current currency  system is poor,
and he decided to make it beautiful by changing the values of some (possibly no) coins.
 
a currency  system is called beautiful
if each coin has an integer value and the (i+1)-th smallest value is divisible by the i-th smallest value for all i (1 \leq i \leq n-1).
 
for example, the set {1, 5, 10, 50, 100, 500}  is considered as a beautiful system,
while the set {1, 5, 10, 25, 50, 100}  is not,
because 25 is not divisible by 10.
 
since changing the currency  system may confuse citizens,
the king, kita_masa, wants to minimize the maximum value of the confusion ratios.
here,  the confusion ratio for the change in the i-th coin is defined as |a_i - b_i| / a_i,
where a_i and b_i is the value of i-th coin before and after the structure changes, respectively.
 
note that kita_masa can change the value of each existing coin,
but he cannot introduce new coins nor eliminate existing coins.
after the modification, the values of two or more coins may coincide. 
 

"
p01423,Rabbit Party,"
a rabbit taro decided to hold a party and invite some friends as guests.
he has n rabbit friends, and m pairs of rabbits are also friends with each other.

friendliness of each pair is expressed  with a positive integer.
if two rabbits are not friends, their friendliness is assumed to be 0.
 
when a rabbit is invited to the party, his satisfaction score is defined as the minimal friendliness with any other guests.
 the satisfaction of the party itself is defined as the sum of satisfaction score  for all the guests.
 
to maximize satisfaction scores for the party,  who should taro invite?
write a program to calculate the maximal possible satisfaction score for the party.
 

"
p01424,Palindrome Generator,"
a palidrome craftsperson starts to work in the early morning, 
with the clear air allowing him to polish up his palindromes.
 
on this morning, he is making his pieces to submit to the international contest for palindrome craftspeople.
 
by the way, in order to make palindromes, he uses a special dictionary which contains a set of words and a set of ordered pairs of the words.
any words and any ordered pairs of consecutive words in his palindromes must appear in the dictionary.
 
we already have his dictionary, so let's estimate how long a palindrome he can make.
 

"
p01425,White Bird,"
angry birds is  a mobile game  of a big craze all over the world.
you were convinced that it was a waste of time to play the game, so you decided to  create an automatic solver.
 
you are describing a routine that optimizes the white bird's strategy to defeat a pig (enemy) by hitting an egg bomb.
the white bird  follows a parabolic trajectory  from the initial position,
and it can vertically drop egg bombs on the way.
 
 in order to make it easy to solve,  the following conditions hold for the stages.
 n obstacles are put on the stage. each obstacle is a rectangle whose sides are parallel to the coordinate axes. the pig is put on the point (x, y). you can launch the white bird  in any direction at an initial velocity v from the origin. if the white bird collides with an obstacle, it becomes  unable to drop egg bombs. if the egg bomb collides with an obstacle, the egg bomb is vanished. 
the acceleration of gravity is 9.8 {\rm m/s^2}.
gravity exerts a force  on the objects in the decreasing direction of y-coordinate.
 

"
p01426,Vector Compression,"



you are recording a result of a secret experiment, which consists of a large set of n-dimensional vectors.
since the result may become very large, you are thinking of
compressing it. fortunately you already have a good compression method
for vectors with small absolute values, all you have to do is to
preprocess the vectors and make them small.
 






you can record the set of vectors in any order you like.
let's assume you process them in the order v_1, v_2,..., v_m.
each vector v_i is recorded either as is, or as a difference vector.
when it is recorded as a difference,
you can arbitrarily pick up an already chosen vector v_j (j&lt;i) and a real value r.
then the actual vector value recorded is (v_i - r v_j).
the values of r and j do not affect the compression ratio so much, so you don't have to care about them.
 
given  a set of vectors,
your task is to write a program  that calculates the minimum sum of the squared length of the  recorded vectors.

 

"
p01427,Rose Garden Witch,"
巴マミは庭の左下の角から直線に必殺技「ティロ・フィナーレ」で巨大な銃を撃ち，その弾丸が通る直線上でその生命体を分割した時，生命体が出来る限り多くの分割数に分断されるようにすることによりダメージを与えたい．ティロ・フィナーレは最大でこの生物を何分割できるか求めよ．

"
p01428,Dessert Witch,"
お菓子の魔女 charlotte は巴マミとクッキーゲームを楽しんでいる．クッキーゲームは 8\times 8 の格子状に区切られたテーブルクロスの上にチーズクッキーとチョコレートクッキーを置いて行われる．各格子には高々 1 個のチョコレートクッキーまたはチーズクッキーしか置くことはできない．
 
お菓子の魔女はチーズクッキーを，巴マミはチョコレートクッキーを交互に置いてゲームを行う．自分のクッキーを置いたあと，そのクッキーから上下左右斜めの各 8 方向について，置くクッキーとすでに置いていた自分のクッキーの間に相手のクッキーのみが直線に並んでいた場合に，その挟まれた相手のクッキーのすべてが自分のクッキーで置き換えられる．クッキーゲームのプレイヤーは自分のターンが回ってきた時，1 つ自分のクッキーを置くことができる．ただし，相手のクッキーを少なくとも 1 つ以上自分のクッキーに置き換えられなければならない．そのような置き場がない場合，自分のターンをパスをしなければならない．
 
お菓子の魔女も巴マミも考えるのが少々苦手である．そこで，回ってきたターン毎にそのターンの中で置き換えられるクッキーの数を最大化することを考えることにした．巴マミのターンのときに置き換えられるクッキーの数を最大にするようなクッキーを置く場所の候補が複数ある場合は，より上の場所を，それでも複数ある場合はより左の場所を選択することにした．また同様に，お菓子の魔女のターンのときに候補が複数ある場合はより下の場所を，それでも複数ある場合はより右の場所を選択することにした．
 
"
p01429,chan,"
世の中の少女たちはキュゥべえと契約し願いを叶えてもらい，それとひきかえに魔法少女となる．使う魔法の形・効果は願いに強く影響を受ける．魔法少女さやかちゃんは最近キュゥべえと契約した新米魔法少女である．さやかの願いは「事故のため指が動かなくなり，音楽を演奏するのを諦めていた男の子を助けること」であったので，作る魔方陣は音符が輪の上に並んだ形をしている．
 さやかは n 個の音符を持っており，それらを輪の上に並べることによって魔方陣を作る．音符をどのような順番で並べるかは彼女の自由である．魔方陣を作るために精神力が消費され，その量は音符の配置によって以下のように決まる．
 まず， m 個の正の整数からなる音楽的美しさ s_1,\ ...,\ s_m が定められている， 各音符は音程を持っており，音程は 1 から m の整数 k_1,\ ...,\ k_n で表される． 音程が a,\ b\ (a&le;b) であるような 2 つの音符の間の反発力とは， [(s_a\ +\ ...\ +\ s_b) / l] で定められる量である．ここで，l は入力で与えられる定数であり，実数 x に対して [x] は x を越えない最大の整数を表すものとする． さやかの消費する精神力は，各2つの隣り合う音符 (n 組存在する) の間の反発力の合計値である． 
例えば音楽的美しさがそれぞれ \{100,\ 200,\ 300,\ 400,\ 500\} で，音程が \{1,\ 3,\ 5,\ 4\} である音符をこの順番で並べて魔方陣を作った時，消費される精神力は 37\ (=[(100+200+300)/99]+[(300+400+500)/99]+[(500+400)/99]+[(400+300+200+100)/99]) となる．
 
使うべき音符の音程の組み合わせと各音程の音楽的美しさが与えられるので，消費される精神力の最小値を求めよ．
 
"
p01430,Box Witch,"ハコの魔女 h.n.elly はとある動画サイトの熱狂的なファンである．ハコの魔女の強さはその時々のその動画サイトからの転送速度に応じて変化するのではないかと美樹さやかは考えた．そこで動画サイトからハコの魔女の持つコンピュータまでの過去の転送速度 (=単位時間あたりのデータの転送量) を調べたい． 初期のインターネットのネットワークの構造とそれ以降のネットワークの構造の変化を表すクエリが与えられるので，各変化について変化した直後の動画サイトからハコの魔女の持つコンピュータまでの転送速度を求めよ． インターネットは複数の転送装置からなるものと見なし，各々をつなぐ回線は双方向に情報を送ることができ，その転送速度の最大は 1 であるとする．また，ネットワークは常に動画サイトからハコの魔女へ送られるデータの転送速度を最大化するように運ぶものとする． 

"
p01431,Scribbling witch,"
落書きの魔女 albertine は w 列 h 行の正方形のセルからなる長方形の結界の入り口に落書きをしている．この世界では落書きは必ずセルを白色か黒色で塗ることによって成り立つ．
 
すでに使い魔 anja の手によって落書きの一部が描かれているのだが，落書きの魔女は残りすべてのセルを塗り落書きを完成させたい．落書きの魔女にはあるこだわりがある．そのこだわりとは次のようなものである．
 2 つの異なるセルが辺を共有するとき，2 つのセルは隣接していると呼ぶことにする．完成された落書きにおいては，任意の 2 つの黒いセルについて，片方からもう片方への隣接した黒いセルをたどるパスがちょうど 1 つだけ存在していなければならない． どの 2 つの白色のセルも隣接してはならない． 
また，落書きの魔女は黒色が好きなので，こだわりを満たした状態でなおかつ最も黒色のセルが多い落書きを完成させたい．果たして落書きの魔女は最大で何個のセルが黒色に塗られたこだわりの落書きを描くことができるだろうか．
 
"
p01432,Shadow Witch,"影の魔女 elsamaria はすべてのものに対して祈りを続ける魔女である．影に捕まったあらゆる命はこの魔女の中に引きずり込まれてしまう． 影は触手のように動き美樹さやかを引きずり込もうと狙っている．美樹さやかはこの魔女に捕まることなく攻撃するために，魔女にとって予測の難しいでたらめな動きをすることを考えた．具体的には，まず頭の中で 1 から n  までの整数を一様な確率で k 個作り，その合計値の距離だけ今の位置から魔女の方向へジャンプする，ということを繰り返すのである．そして魔女の位置に到達した時に攻撃するのである． さやかと魔女はある一直線上にいるとし，最初魔女は座標 0，さやかは座標 s の位置にいるものとする．また魔女は動かないものとする．何度ジャンプした後に魔女に最初の攻撃を与えることができるだろうか．期待値を求めよ． 

"
p01433,Mermaid Witch,"
人魚の魔女 klarissa はコンサートホールの中で在りし日の感動を夢見つづけている．彼女の運命の車輪は具現化し，コンサートホールの中で転がり続けている．
 
ここでは車輪を 2 次元平面における 1 辺の長さが 1 の正方形と見なし，西から東へ向かう方向を x 軸の正向き，鉛直上方向を y 軸の正向きとする．
今，運命の車輪の一面が床に対して接地しており，床と反対の面が赤色，東側の面が緑色，床と接地している面が青色，西側の面が白色になっている．現在接地している面のうち最も西の点の x 座標が x=a であるとする．運命の車輪がすべることなく床に対して転がり続け，ある一面が床に接地した時で，設置している面のうち最も東の点の x 座標が x=b を初めて超えるとき，床に対して表向きになっている面は何色になるかを求めよ．

"
p01434,Class Representative Witch,"
委員長の魔女 patricia は，蜘蛛のような糸を吐き結界の中で暮らしている．使い魔の mathieu は，委員長の魔女が吐いた糸を引っぱり自在に空を飛んでいる．糸は空間上の線分とみなすことにする．
 
ほむらは次の戦略を考えるために，残った糸についての情報が知りたいと思っている．残った糸の長さの合計値を求めよ．

"
p01435,constructing Witch,"
キュゥべえはワルプルギスの夜に向けて魔女の合成に明け暮れている．ワルプルギスの夜のために，特別なグリーフシード (魔女の卵) を使って手に入れやすい魔女をうまく合成し目的である舞台装置の魔女を創り上げなければならないからである．
 
キュゥべえは手に入れやすい種類の魔女のグリーフシードから魔女の素となるものを取り出し，空の特別なグリーフシードに入れることで，そのグリーフシードに魔女を宿らせることができる．また，この世界には，ある組み合わせで複数の魔女を合成すると新たな 1 つの魔女を生み出すことができるという合成法則がいくつかある．そこで，いくつかの特別なグリーフシードを使い，それらの中にある魔女の素となるものを合成し，1 つの特別なグリーフシードに新たな魔女を宿らせることができる．また，合成した結果空となった特別なグリーフシードは再利用することができる．例えば，3 個の特別なグリーフシードに入った魔女を合成すると，それらの 3 個のグリーフシードは，新たな魔女が宿った 1 個の特別なグリーフシードと 2 個の空の特別なグリーフシードとなる．しかし，同じ種類の魔女を同時に複数のグリーフシードに入れることは出来ない．
 
キュゥべえは魔女の特別なグリーフシードへの寄宿と魔女の合成を繰り返すことにより舞台装置の魔女を創りだしたい．舞台装置の魔女を創りだすにはいくつの特別なグリーフシードが必要か求めよ．
 
"
p01436,Soul Gem Game,"
キュゥべえはなかなか契約を結んでくれない鹿目まどかにしびれを切らせて，ソウルジェムゲームと称して佐倉杏子と美樹さやかのソウルジェムの中身 (魂) を w 列 h 段のロッカーの中に隠してしまった．そこで，まどかは杏子とさやかを助け出したい．しかし，契約を結ばずに助けるにはロッカーボックスの壁を操作して 2 人のソウルジェムの中身を，指定されたロッカーボックスに正しく移さなければならない．ロッカーはロッカーボックスが w 列 h 段に並ぶことで構成され，隣り合うロッカーボックスは壁で仕切られている．
 
まどかは，1 回の操作でいずれかの隣りあった 2 つのロッカーボックスの壁を取り除くか取り付けることができる．ただし，ロッカーボックスの壁を開けるには制約があり，各ロッカーボックスから隣接する上下左右の壁のうち，高々 2 枚までの壁しか同時に開けておくことはできない．ロッカーボックスには上の段から下の段に向かって重力が働いている．ソウルジェムの中身は液体と同じような動きをし，隣りあった 2 つのロッカーボックスの壁が取り除かれている時，同じ高さであれば互いに同じ量になり，違う高さであれば低い方へ移動する．すべての操作が終わった時に指定された 2 つのロッカーボックスに正しい組み合わせでソウルジェムの中身がすべて入っていればまどかの勝利となる．また，一部のロッカーボックスは穢れており，その中へソウルジェムの中身が入ってしまうと大変なことになってしまうので，そのロッカーボックスはソウルジェムの中身の移動のために使うことはできない．
 
最小で何度の操作を行えばまどかは 2 人を救いだすことができるかを求めよ．
 
"
p01437,Infinity Maze,"
dr. fukuoka has placed a simple robot in a two-dimensional maze. it moves within the maze and never goes out of the maze as there is no exit.
 
the maze is made up of h &times; w grid cells as depicted below. the upper side of the maze faces north. consequently, the right, lower and left sides face east, south and west respectively. each cell is either empty or wall and has the coordinates of (i, j) where the north-west corner has (1, 1). the row i goes up toward the south and the column j toward the east.
 
the robot moves on empty cells and faces north, east, south or west. it goes forward when there is an empty cell in front, and rotates 90 degrees to the right when it comes in front of a wall cell or on the edge of the maze. it cannot enter the wall cells. it stops right after moving forward by l cells.
 
your mission is, given the initial position and direction of the robot and the number of steps, to write a program to calculate the final position and direction of the robot.
 

"
p01438,Butterfly,"
claire is a man-eater. she's a real man-eater. she's going around with dozens of guys. she's dating all the time. and one day she found some conflicts in her date schedule. d'oh!
 
so she needs to pick some dates and give the others up. the dates are set by hours like 13:00 to 15:00. she may have more than one date with a guy. for example, she can have dates with adam from 10:00 to 12:00 and from 14:00 to 16:00 and with bob from 12:00 to 13:00 and from 18:00 to 20:00. she can have these dates as long as there is no overlap of time. time of traveling, time of make-up, trouble from love triangles, and the likes are not of her concern. thus she can keep all the dates with adam and bob in the previous example. all dates are set between 6:00 and 22:00 on the same day.
 
she wants to get the maximum amount of satisfaction in total. each guy gives her some satisfaction if he has all scheduled dates. let's say, for example, adam's satisfaction is 100 and bob's satisfaction is 200. then, since she can make it with both guys, she can get 300 in total. your task is to write a program to satisfy her demand. then she could spend a few hours with
you... if you really want.
 

"
p01439,Chinese Classics,"
taro, a junior high school student, is working on his homework. today's homework is to read chinese classic texts.
 
as you know, japanese language shares the (mostly) same chinese characters but the order of words is a bit different. therefore the notation called ""returning marks"" was invented in order to read chinese classic texts in the order similar to japanese language.
 
there are two major types of returning marks: 're' mark and jump marks. also there are a couple of jump marks such as one-two-three marks, top-middle-bottom marks. the marks are attached to letters to describe the reading order of each letter in the chinese classic text. figure 1 is an example of a chinese classic text annotated with returning marks, which are the small letters at the bottom-left of the big chinese letters.
 
figure 1: a chinese classic text
 
taro generalized the concept of jump marks, and summarized the rules to read chinese classic texts with returning marks as below. your task is to help taro by writing a program that interprets chinese classic texts with returning marks following his rules, and outputs the order of reading of each letter.
 
when two (or more) rules are applicable in each step, the latter in the list below is applied first, then the former.
  basically letters are read downwards from top to bottom, i.e. the first letter should be read (or skipped) first, and after the i-th letter is read or skipped, (i + 1)-th letter is read next.
  each jump mark has a type (represented with a string consisting of lower-case letters) and a number (represented with a positive integer). a letter with a jump mark whose number is 2 or larger must be skipped.
  when the i-th letter with a jump mark of type t, number n is read, and when there exists an unread letter l at position less than i that has a jump mark of type t, number n + 1, then l must be read next. if there is no such letter l, the (k + 1)-th letter is read, where k is the index of the most recently read letter with a jump mark of type t, number 1.
  a letter with a 're' mark must be skipped.
  when the i-th letter is read and (i - 1)-th letter has a 're' mark, then (i - 1)-th letter must be read next.
  no letter may be read twice or more. once a letter is read, the letter must be skipped in the subsequent steps.
  if no letter can be read next, finish reading.
 
let's see the first case of the sample input. we begin reading with the first letter because of the rule 1. however, since the first letter has a jump mark 'onetwo2', we must follow the rule 2 and skip the letter. therefore the second letter, which has no returning mark, will be read first.
 
then the third letter will be read. the third letter has a jump mark 'onetwo1', so we must follow rule 3 and read a letter with a jump mark `onetwo2' next, if exists. the first letter has the exact jump mark, so it will be read third. similarly, the fifth letter is read fourth, and then the sixth letter is read.
 
although we have two letters which have the same jump mark 'onetwo2', we must not take into account the first letter, which has already been read, and must read the fourth letter. now we have read all six letters and no letter can be read next, so we finish reading. we have read the second, third, first, fifth, sixth, and fourth letter in this order, so the output is 2 3 1 5 6 4.
 

"
p01440,Revenge of Champernowne Constant,"
champernowne constant is an irrational number. its decimal representation starts with ""0."", followed by concatenation of all positive integers in the increasing order.
 
you will be given a sequence s which consists of decimal digits. your task is to write a program which computes the position of the first occurrence of s in champernowne constant after the decimal point.
 

"
p01441,Full Text Search,"
mr. don is an administrator of a famous quiz website named qmacloneclone. the users there can submit their own questions to the system as well as search for question texts with arbitrary queries. this search system employs bi-gram search method.
 
the bi-gram search method introduces two phases, namely preprocessing and search:
 
preprocessing precompute the set of all the substrings of one or two characters long for each question text.
 
search compute the set for the query string in the same way. then nd the question texts whose precomputed sets completely contain the set constructed from the query.
 
everything looked fine for a while after the feature was released. however, one of the users found an issue: the search results occasionally contained questions that did not include the query string as-is. those questions are not likely what the users want. so mr. don has started to dig into the issue and asked you for help. for each given search query, your task is to find the length of the shortest question text picked up by the bi-gram method but not containing the query text as its substring.
 

"
p01442,Mysterious Maze,"
a robot in a two-dimensional maze again. the maze has an entrance and an exit this time, though.
 
just as in the previous problem, the maze is made up of h &times; w grid cells, its upper side faces north, and each cell is either empty or wall. unlike the previous, on the other hand, one of the empty cells is connected to the entrance and another to the exit.
 
the robot is rather complex - there is some control, but not full. it is associated with a controller that has two buttons, namely forward and turn. the forward button moves the robot forward to the next cell, if possible. the robot can not move into a wall nor outside the maze. the turn button turns the robot as programmed. here the program is a finite sequence of n commands, each of which is either 'l' (indicating a left turn) or 'r' (a right turn). the first turn follows the first command; the second turn follows the second command; similar for the following turns. the turn button stops working once the commands are exhausted; the forward button still works in such a case though. the robot always turns by 90 degrees at once.
 
the robot is initially put on the entrance cell, directed to the north. your mission is to determine whether it can reach the exit cell if controlled properly.
 

"
p01443,Number Sorting,"
consider sets of natural numbers. some sets can be sorted in the same order numerically and lexicographically. {2, 27, 3125, 9000} is one example of such sets; {2, 27, 243} is not since lexicographic sorting would yield {2, 243, 27}.
 
your task is to write a program that, for the set of integers in a given range [a,b] (i.e. between a and b inclusive), counts the number of non-empty subsets satisfying the above property. since the resulting number is expected to be very huge, your program should output the number in modulo p given as the input.
 

"
p01444,Sky Jump,"
dr. kay em, a genius scientist, developed a new missile named ""ikan-no-i."" this missile has n jet engines. when the i-th engine is ignited, the missile's velocity changes to (vxi, vyi) immediately.
 
your task is to determine whether the missile can reach the given target point (x, y ). the missile can be considered as a mass point in a two-dimensional plane with the y-axis pointing up, affected by the gravity of 9.8 downward (i.e. the negative y-direction) and initially set at the origin (0, 0). the engines can be ignited at any time in any order. still, note that at least one of them needs to be ignited to get the missile launched.
 

"
p01445,Mobile Network,"
the trafic on the internet is increasing these days due to smartphones. the wireless carriers
have to enhance their network infrastructure.
 
the network of a wireless carrier consists of a number of base stations and lines. each line connects two base stations bi-directionally. the bandwidth of a line increases every year and is given by a polynomial f(x) of the year x.
 
your task is, given the network structure, to write a program to calculate the maximal bandwidth between the 1-st and n-th base stations as a polynomial of x.
 


"
p01446,Blue Forest,"
john is playing a famous console game named 'tales of algorithmers.' now he is facing the last dungeon called 'blue forest.' to find out the fastest path to run through the very complicated dungeon, he tried to draw up the dungeon map.
 
the dungeon consists of several floors. each floor can be described as a connected simple plane graph. vertices of the graph are identified by x-y coordinate, and the length of an edge is calculated by euclidean distance. a vertex may be equipped with a one-way warp gate. if john chooses to use the gate, it brings john to another vertex in a possibly different floor. the distance between a warp gate and its destination is considered as 0.
 
one vertex has at most one warp gate, though some vertices might be the destination of multiple warp gates.
 
he believed he made one map for each floor, however after drawing maps of all the floors, he
noticed that he might have made a few mistakes. he might have drawn the same floor several times, and might have forgotten to mark some warp gates in the maps. however, he was sure he marked all warp gates at least once. so if the maps of same floor are unified to one map, all the warp gates must be described there. luckily there are no floors which have the same shape
as the other floors, so if two (or more) maps can be unified, they must be the maps of the same floor. also, there is no floor which is circular symmetric (e.g. a regular triangle and a square).
 
map a and map b can be unified if map b can be transformed to map a using only rotation and parallel translation. since some of the warp gates on maps might be missing, you should not consider the existence of warp gates when checking unification. if it is possible to unify map a and map b, a vertex on map a and the corresponding vertex on map b are considered as 'identical' vertices. in other words, you should treat warp gates on map b as those on map a where the warp gates are located on the corresponding vertices on map a. destinations of warp gates should be treated similarly. after that you can forget map b. it is guaranteed that if both map a and map b have warp gates which are on the identical vertices, the destinations of them are also identical.
 
remember, your task is to find the shortest path from the entrance to the exit of the dungeon, using the unified maps.
 

"
p01447,sensei,"
クァークゴ帝国遠征軍は、地球侵略をもくろむ悪の組織である。彼らは侵略者の伝統にのっとり、日
本の東京周辺をターゲットに、毎週１体のペースで怪人を送りこみ続けていた。しかし、そのたびに
人類戦隊アースファイブと名乗る５人の戦士があらわれ、街で暴れまわっていた怪人はあっさりと倒
されてしまうのであった。
 
ワルザード・スルー（地球名：源雅）は、そんな現状を本気で憂いている、クァークゴ帝国遠征軍の
女幹部である。彼女は、毎週の敗北から何も学ぼうとしない司令官や、どこかズレた発明を繰り返す
天才科学者らの下で、頭の痛い日々を過ごしていた。
 
そんな中、次の作戦は吸血怪人ドラキュラスを日本に送りこむことに決まった。ドラキュラスは、血
を吸った人間をドラキュラスに変えてしまう恐るべき怪人である。ドラキュラスに血を吸われた人間
もまた、他の人間の血を吸って仲間のドラキュラスを増やしていく。こうして地球全土をドラキュラ
スで埋めつくしてしまおうという作戦だ。
 
これを聞いたワルザードは、すぐに悟った。この作戦は、幼稚園バスの乗っ取りのような普段やって
いるセコい作戦とは訳が違う。あのダメ司令官が立案したものにしては珍しく、本当に地球を征服で
きる可能性を秘めていると。
 
倍々ゲームの勢いは恐ろしい。地上に降りたったドラキュラスは、またたく間に仲間の数を増やして
いった。このまま行けば地球侵略は目と鼻の先だと思われた。だがその瞬間、ワルザードの脳裏を、
強烈にいやな予感が走り抜けた。まさか、この怪人、オリジナルが倒されると仲間も全滅するなんて
ことはないよな？
 
慌ててドラキュラスを設計開発した科学者を問いつめたところ、やはりワルザードの危惧していた通
りだった。オリジナルのドラキュラスがやられると、血を吸われた人間はすべて元に戻るように設計
してあるのだという。ふざけんなよ開発者。どうしてそんな余計な機能をつけた！
 
ワルザードは、開発担当者に飛び膝蹴りをきめると、すぐさまオリジナルの回収作業にとりかかっ
た。いくらオリジナルと偽物は見た目がまったく同じだといっても、このままでは、駆けつけたアー
スファイブに何かしらの理由でオリジナルを見抜かれて敗北するのが目に見えている。
 
開発者の話によると、ドラキュラス化した人間の重さはすべて同じだが、オリジナルのドラキュラス
はそれよりも少しだけ重いらしい。それならば、天秤ばかりを使えばオリジナルを見つけることがで
きるはずだ。アースファイブがあらわれる前に、できるだけ早くオリジナルのドラキュラスを見つけ
て回収しなければ。
 

"
p01448,A Way to Invite Friends,"
明日から、待ちに待った夏休みが始まります。なのでわたしは、友だちを誘って、海に遊びに行くこ
とに決めました。
 
けれども、わたしの友だちには、恥ずかしがりやさんが多いです。その人たちは、あまり多くの人が
いっしょに来ると知ったら、きっと嫌がるでしょう。
 
ほかにも、わたしの友だちには、目立ちたがりやさんも多いです。その人たちは、いっしょに来る人
があまり多くないと知れば、きっと嫌がるでしょう。
 
それと、わたしの友だちには、いつもは目立ちたがりやなのに実は恥ずかしがりやさんな人もいま
す。その人たちは、いっしょに来る人が多すぎても少なすぎても、きっと嫌がるでしょう。
 
こういうのは、大勢で行った方が楽しいはずです。だからわたしは、できるだけたくさんの友だちを
誘いたいと思っています。けれども、嫌がる友だちを無理やり連れていくのはよくありません。
 
いったい、わたしは最大で何人の友だちを誘うことができるのでしょうか。
 
わたしは、こういう頭を使いそうな問題が大の苦手です。なので、あなたにお願いがあります。もし
よろしければ、わたしの代わりにこの問題を解いていただけないでしょうか。いえ、決して無理にと
は言いません。けれど、もし解いていただるのでしたら、わたしはとても嬉しいです。
 

"
p01449,Time Sugoroku Road,"
全時空統一ディメンション・スゴロク・トーナメント。500 兆人を超える参加者の中から、ただ１人
のスゴロク絶対王者を決定するその大会に、あなたは２１世紀の地球代表として参加している。
 
今あなたが挑戦している課題は、自分自身をコマとした１次元スゴロク。端のスタートマスから出発
して、１から６までの目が一つずつ書かれた巨大な６面ダイスを振って出た目の数だけ進むことを繰
り返す、あなたもよく知っている形式のスゴロクだ。スタートマスとは反対の端にあるゴールマスに
止まるとゴールとなる。もちろん、ゴールするまでにサイコロを振った回数が少なければ少ないほど
良い成績となる。
 
マスの中には特殊な効果を持ったマス「○マス進む」と「○マス戻る」が存在し、そこに止まってし
まうと、指定されたマス数だけ進む、もしくは戻らなければならない。マスの効果で動いた結果、ふ
たたび効果のあるマスに止まった場合は、続けて指示どおりに移動する。
 
しかし、これは一筋縄では攻略できない時空スゴロクだ。恐るべきことに、たとえば「３マス進む」
の３マス先に「３マス戻る」が置かれていることもありうる。このようなマスに止まり、マスの効果
で無限ループに陥ってしまった場合は、永遠にマスを往復し続けなければならない。
 
だが幸いなことに、あなたの身体には、望んだ事象を全事象に変えることのできる異能『確率湾曲』
が宿っている。この能力を使えば、サイコロの出目を自由に操ることも可能。このアドバンテージを
活かして、無限ループに陥らないようにしながら進んでいくとき、ゴールするまでにサイコロを振る
回数の最小値はいくつになるだろうか。
 

"
p01450,My friends are small,"
僕には、たくさんの友達がいる。どの友達も、とても小さい。
僕は、よく友達と一緒に出かける。何人かの友達をリュックに入れて、一緒に出かける。
僕は毎朝、その日一緒に出かける友達を決める。空のリュックに、１人ずつ友達を入れていく。
僕は、あまり力が強くない。だから、同時に運べる友達の重さには限界がある。
僕は、重さの限界を超えないように友達を入れていく。どの順番で入れていくかは気分次第。
僕は、入れられる友達がまだ残っている限り、入れるのを止めない。決して止めない。
 
……ところで、リュックに入った友達の組み合わせは、全部で何パターンあるんだろう？
 

"
p01451,Roads on Towns,"
ネーヴァ王国には、トタタ族とツテテ族、２種類の民族が暮らしている。トタタ族の最大の特徴は、
酢豚にパイナップルを入れて食べることである。だがツテテ族は、パイナップルに酢豚を入れて食べ
る。こんな２つの民族がお互いに仲良くやっていけるはずもなく、トタタ族とツテテ族は、何百年も
の昔からずっといがみ合いを続けてきた。
 
そんなある日、ネーヴァ王のもとに、２つの民族から嘆願書が届いた。それによるとトタタ族は、自
分たちが暮らす街ａと街ｂのあいだを結ぶ道を建設してほしいらしい。一方でツテテ族も、自分たち
が暮らす街ｃと街ｄのあいだを結ぶ道を建設してほしいらしい。
 
２つの民族が衝突するのを防ぐため、トタタ族が通る道とツテテ族が通る道を交差させることはでき
ない。また、技術的な制約により、２つの街のあいだを一直線に結ぶような道しか建設することはで
きない。つまり、必要ならば街ａと街ｂを直接道で結ばずに、いくつかのトタタ族の街を経由して街
ａと街ｂを間接的に結ぶことになるだろう（もちろん、ツテテ族の街を経由してはならない）。その
際、トタタ族の街を結ぶ道どうしは交差していてもよい。街ｃと街ｄについても同様である。
 
道を建設するには、その長さに比例したコストがかかる。なので、条件をみたしつつ、できるだけ建
設する道の長さの合計が短くなるようにしたい。さて、長さの最小値はいくつになるだろうか。
 

"
p01452,Old Dynamic Programming,"
ある日の夕方。いつものようにあなたが居間でテレビを見ていると、小学５年生の妹から相談を持ち
かけられた。話を聞いてみると、今日学校で出された算数の問題が難しくて理解できなかったので、
あなたに解き方を教えてほしいのだという。
 
妹を悩ませている問題は、「道が碁盤目状に通っている街において、家(0, 0) から学校(n, m) まで最短距離で進む方法は何通りあるか？」というものだった。もちろん、あなたにとっては赤子の手をひねるよりも簡単な問題である。すぐに上のような図を書いて「家(0, 0) から順番に足し算していけば解けるよ」と教えてあげた。
 
ところが、それを聞いてもまだ、妹はなにやら下を向いて考えこんでいる。あなたは、自分の説明の
仕方が悪かったのだろうかと思ったが、どうやらそうではないらしい。
 
たっぷり３分ほど悩んでいただろうか。妹は、おもむろに顔を上げると、あなたに向かってこう言っ
た。
 
「でも、わたしだったら、きっと学校に行く途中でk 回くらい寄り道しちゃうだろうな……。ねぇお
兄ちゃん、そうすると答えは何通りになるの？」
 
さあ大変だ。兄の威厳を保つため、なんとしてもこの問題に答えねば。
 
この問題を定式化すると、次のようになる。
 点(0, 0) から点(n, m) まで、碁盤目状の道を通って進む方法は何通りあるか答えよ。 基本的には右か上に１マス進むが、途中で、ちょうどk 回だけ寄り道をする。 「寄り道をする」とは、左か下に１マス進むことである。 k 回の寄り道をすませていない場合、いったん点(n, m) に着いた後でも歩き続ける。途中で点(0, 0) に戻ってくる場合もある。 家はこの街の隅に建っているので、x 座標またはy 座標が負になるような点に入ることはできない。
 しかし、x 座標がn より大きな点、または、y 座標がm より大きな点には入ることができる。 



"
p01453,Spring Tiles,"
ある朝、あなたが目覚めると、そこはバネだらけの迷宮の中だった。
 
なぜ自分がこんな見知らぬ場所にいるのかはわからない。この場でじっと助けを待つという選択肢も
あるにはあるが、こういった迷宮の中に長居していると、いつかは必ず突風が吹いてきて吹き飛ばさ
れてしまうことを、あなたは経験上知っていた。しかし、突風が吹いてくるまでの時間は判断のしよ
うがない。そこであなたは、迷宮から脱出するまでに必要な移動回数の期待値が最小になるように行
動するのが最善の戦略だと考えた。
 
足元に落ちていた正体不明の巻物を拾ってためしに読んでみたところ、偶然にも迷宮の全体マップを
知覚することができた。さらに、たまたま持っていた草を飲むことで、すべてのワナの位置も知るこ
とができた。どうやらこの迷宮には、危険なモンスターやバネ以外のワナは存在しないらしい。
 
この迷宮は、いくつかの種類のタイルが長方形に並んだ形をしており、たとえば以下のようにあらわ
される。
 
「.」：床。この上なら自由に歩き回ることができる。
 
「#」：壁。あなたは壁の中に入ることはできない。
 
「s」：あなたの最初の位置。このタイルの下は床になっている。
 
「g」：階段。このタイルの上に乗れば、迷宮を脱出したことになる。
 
「*」：バネ。このタイルの上に乗ると、いずれかの床の上（階段、バネのタイルは除く）にランダムに飛ばされる。それぞれの床に飛ばされる確率はすべて等しい。
 
タイルの種類は、この５つのいずれかである。
 
あなたは、現在乗っているタイルから隣り合ったタイルへ、上下左右いずれかの方向に１マスずつ移
動することができる。ただし、ナナメに移動することはできない。
 
迷宮のマップが与えられたとき、最善の戦略をとった場合に迷宮から脱出するまでに必要な移動回数
の期待値を求めよ。バネで飛ばされるのは移動回数には含めない。
 

"
p01454,Nabe (tentative),"
あなたは、自宅にたくさんのねこを飼っている。そんなあなたの日課は、飼っているねこが土鍋の中
に入って昼寝している様子（通称：ねこ鍋）を撮影することだ。何匹かのねこが、鍋の中でいっしょ
に丸くなって眠る姿は、実に愛くるしい。
 
それぞれのねこには、「重さ」mi と「cute」ci が定義されている。cute とは、そのねこ1 匹だけを見たときの、愛らしさ・あどけなさ・しなやかさ・やわらかさ・ういういしさ、などを総合的に評価した数値であり、大きければ大きいほどそのねこは魅力的である。
 
また、ねこ鍋に対しては「uncute」という数値が定義される。これは、ねこ鍋全体としてのアンバラ
ンスさをあらわす値であり、cute とは逆に、小さければ小さいほど、そのねこ鍋はよいねこ鍋であ
る。ねこ鍋のuncute は、中にいるねこのcute の最大値cmax と最小値cmin を用いて、cmax - cminとあらわされる。つまり、中にいるねこがみな同じくらいのcute を持っているねこ鍋が、よいねこ鍋である。
 
ねこ鍋を持ち運ぶときのことを考えると、ねこ鍋の重さ（＝中にいるねこの重さの総和）は、限界値
w 以下でなければならない。この条件をみたすようにねこ鍋に入ってもらうねこを選んで、ねこ鍋のuncute を小さくしたいのだが、いったいどこまで小さくできるのだろうか。
 
……という問題を解いてすっかり満足した気になっていたのは、過去の話だ。
 
この前、あなたが家の倉庫を整理していたら、倉庫の中から古ぼけた土鍋が見つかった。これであな
たの家にある土鍋は２つ。そう、これからは、デュアルねこ鍋の時代なのだ！　ただのねこ鍋なども
う古い！
 
デュアルねこ鍋では、土鍋a はオスのねこ専用、もう片方の土鍋b はメスのねこ専用である。また、
デュアルねこ鍋のuncute を定義するにあたっては、cute のアンバランスさだけではなく、２つの
ねこ鍋の重さのアンバランスさも考慮に入れる必要がある。具体的には、重いほうのねこ鍋の重さを
mmax、軽いほうのねこ鍋の重さをmmin とおくと（２つのねこ鍋の重さが同じときはmmax = mmin）、デュアルねこ鍋のuncute は、
 
max{mmax - mmin, cmax - cmin}
 
とあらわされる。なお、ここでのcmax とcmin は、ねこ鍋a の中またはねこ鍋b の中にいるねこのcute の最大値,最小値である。
 
ねこ鍋を持ち運ぶときのことを考えると、mmaxは、限界値w 以下でなければならない。この条件をみたすようにデュアルねこ鍋に入ってもらうねこを選んで、デュアルねこ鍋のuncute を小さくしたいのだが、いったいどこまで小さくできるのだろうか。
 

"
p01455,Intelligible Double Magic,"
紀慧暦2119 年15 の月。宮廷魔術士sengemon lugene の手によって、一冊の魔術書が書き記された。この魔術書「in magiray」は、この世界の魔術法則の根幹に深く関わる「二重魔法」を、誰にでも習得可能な技術として体系化した、という点で革新的な書物であった。まずは、この書物の内容を要約したものを見ていこう。
 
【エレメント】
世界中のあらゆる物体は、「泉」「風」「羽」「花」「砂」「灯」……といった、極小要素「エレメント」から構成されている。エレメントには多くの種類があり、人間はエレメントと契約を交わすことで、契約を交わした種類のエレメントを用いた二重魔法を発動させることができる。
 
【二重魔法】
二重魔法とは、その名の通り、２つのエレメントを重ね合わせて解き放つ魔法である。主となるエレ
メントを「主属性」、もう一方を「副属性」と呼ぶ。たとえば、主属性が「灯」で副属性が「花」な
ら、その二重魔法は（灯，花）と表記される。（灯，花）と（花，灯）は別の二重魔法である。また、主属性と副属性は同じであってもよい。
 
【キーワード】
「泉→ huda」「風→ loar」「羽→ sheza」「花→ leide」といったように、各々のエレメントに、それぞれ短い「キーワード」を１対１対応させることができる。キーワードは、エレメントの持つ性質を短い言葉に象徴させることで、いくつかの連続するキーワード列を唱えるだけで簡単に二重魔法を発動させることを可能にした、画期的な概念である。
 
【呪文】
「huda・leide・loar・sheza」のように、１つ以上のキーワードを連続して並べたものを「呪文」という。術者が意図した呪文を唱えることで、対応する二重魔法を発動させることができる。具体的には、呪文の一番最初のキーワードに対応するエレメントを主属性、一番最後のキーワードに対応するエレメントを副属性とする二重魔法が発動する。先ほどの呪文の例だと、発動する二重魔法は（泉，羽）である。なお、呪文が１つのキーワードだけから成る場合には、主属性も副属性も、そのキーワードに対応するエレメントになる。
 
【エレメント同士の相性】
「huda・leide・loar・sheza」の呪文で（泉，羽）の二重魔法が発動することはすでに述べた。しかし、一見すると、（泉，羽）を使いたいのならば、わざわざ長い呪文を唱えずとも「huda・sheza」だけで良いようにも思える。だが実際には、それは不可能である。なぜなら、「泉（huda）」と「羽（sheza）」は相性が良くないため、これら２つが隣り合った呪文を唱えると、反発作用が起こってエレメント同士が相殺してしまうからである。一方で、「泉（huda）」と「花（leide）」、「花（leide）」と「風（loar）」、「風（loar）」と「羽（sheza）」は、どのペアも好相性なので、「huda・leide・loar・sheza」や「loar・leide・huda」といった呪文では、エレメントの相殺は起こらない。
 
【呪文論理】
二重魔法を使おうとする者は、あらかじめ、すべての好相性なエレメントのペアそれぞれに対して、
どちらのキーワードが「上位ワード」で、どちらのキーワードが「下位ワード」なのかを定義しておかなければならない。好相性な２つのエレメントのキーワード「a」と「b」に対して、a を上位ワード、b を下位ワードと定義したとき、a &gt; b と表記する。a &gt; b であるとき、一つの呪文内で、b の直後にa を並べることはできない。つまり、「a1・a2・a3・……・ak」が正しい呪文であるならば、a1 &gt; a2，a2 &gt; a3，……，ak-1 &gt; ak でなくてはならない。ちなみに、a &gt; b かつb &gt; c であっても、a &gt; c である必要はない。
 
このように、各々の術者が、上位・下位ワードを自分好みに定義することを「呪文論理の構築」と呼
ぶ。これは、あえて呪文の構文に制約をもたせることで、エレメントの流れを明確化し、目的の二重
魔法の成功確率を上げるための工夫である。だが、その代償として、呪文論理を構築すると、どのよ
うに呪文を唱えても発動させることのできない二重魔法が生じてしまう可能性がある（ただし、いか
なる呪文論理を構築しても使うことのできない二重魔法は存在しないことが証明されている）。この
ような事情があるため、どのような呪文論理を構築するかは、今も昔も多くの魔術士を悩ませている
厄介な問題なのである。
 
とある小さな町で暮らす見習い魔術士の少年ユートは、すべてのエレメントとの契約を終え、いよい
よ明日、自分の呪文論理を構築するための儀式を行おうとしている。ユートは単純に、できるだけた
くさんの種類の二重魔法を発動させることができるような呪文論理が良い呪文論理である、と考えて
いた。
 
超一級電術技師（現代日本で言うところのスーパープログラマー）であるあなたは、友達のユートか
ら、うまく呪文論理を構築することができれば、最大で何種類の二重魔法を使えるようになるのか知
りたいと相談を受けた。これは、今まで世界中の人間が挑戦してきたが、誰も解くことができなかっ
たほどの難問である。もしも解くことができれば、あなたの名前は未来永劫、世界中で語り継がれる
ことになるであろう。
 

"
p01456,Person responsible for problem description don't w,"
n 個の点からなる有向グラフがある。このグラフに閉路はない。それぞれの点には、いくつかの石が置かれている。このグラフを使って、２人のプレイヤーがゲームをする。おのおのの手番は、交互に訪れる。各プレイヤーは、自分の手番において、頂点v を選び、そこに置かれた石を１つ以上取り除く。その後、v からw に辺が張られているすべての頂点w について、w に置かれている石の個数を自由に変化させることができる（いくつ増やしても、いくつ減らしても、変化させなくてもよい）。これを繰り返して、最初に取る石がなくなった方の負けである。両者が最善をつくしたとき、先手と後手、どちらが勝つか。もしくは、いつまでもゲームが終わらないか。
 
「……いや、無理でしょう、これ」
「何が？」
「何がじゃなくて！　これにどうやって自然な問題設定をつけろって言うんですか」
「ははは。それを考えるのが君の仕事じゃないか。文章担当だろう？」
「丸投げにもほどがありますよ……。まずゲームのルールが不自然すぎるでしょう」
「そうかなぁ？　僕はよくある石取りゲームだと思うけどね」
「プレイヤーの意思で石を無尽蔵に増やせる石取りゲームがよくあってたまりますか！」
「お。君、今うまいこと言ったね」
「ええ、意思で石を……ってどうでもいいわ！　そっちも少しは考えてくださいよ」
「そうだねぇ。縊死した医師の遺志を継ぐ遺子の意思で石を取る、なんてどうだい？」
「考えるのはそこじゃねぇよ！　石取りゲームの話だよ！」
「違うのかい？　でも『取り』は鳥くらいしか同音異義語がなくて難しいんだよね」
「いったん言葉遊びから離れろや！　自然な問題設定を考えてくれって言ってるんですよ！」
「だからそれは君の仕事だろうに。僕はただの仲介役。原案担当と文章担当の間をとりもつだけさ」
「くそ……。原案担当め、どうしてこんな厄介な問題を……」
「原案担当者から君へのメッセージ。『フヒヒｗ　存分に苦しめ文章担当ｗｗ』だそうだよ」
「畜生あの野郎！　いつか一発殴る！」
「まあ、僕の『石が増える石取りゲームなんて実に設定がつけにくいと思わないかい？』ってアドバ
イスのおかげもあるだろうけどね」
「畜生お前もか！　いつかと言わず今殴る！」
「はっはっは。君が締め切りまでに文章担当としての役割を果たせないようなら、僕が勝手に問題文
を書いちゃうよ？」
「殴……って、え？　お前が書いてくれんの？」
「タイトルは『問題文担当者は働かない！』。本文には、僕たちのこの会話をそのまま掲載」
「頼むからやめて！　そんなふざけた問題が自分名義で世に出たら、これから皆になんて言われる
か！」
「はっはっは。締め切りも守れないような奴は、社会的に抹殺されて当然だよね」
「畜生！　こうなったら、意地でも自然な問題設定を思いついてやらあああああ！」
（※　結局そのまま掲載されました）
 

"
p01457,Carpenters' Language,"
international carpenters professionals company (icpc) is a top construction company with a lot of expert carpenters.
what makes icpc a top company is their original language.
 
the syntax of the language is simply given in cfg as follows:
 
in other words, a right parenthesis can be closed by a left parenthesis and a left parenthesis can be closed by a right parenthesis in this language.
 
alex, a grad student mastering linguistics, decided to study icpc's language. 
as a first step of the study, he needs to judge whether a text is well-formed in the language or not.
then, he asked you, a great programmer, to write a program for the judgement.
 
alex's request is as follows: you have an empty string s in the beginning, and construct longer string by inserting a sequence of '(' or ')' into the string.
you will receive q queries, each of which consists of three elements (p, c, n), where p is 
the position to insert, n is the number of characters to insert and c is either '(' or ')', the character to insert.
for each query, your program should insert c repeated by n times into the p-th position of s from the beginning.
also it should output, after performing each insert operation, &quot;yes&quot; if s is in the language and &quot;no&quot; if s is not in the language.
 
please help alex to support his study, otherwise he will fail to graduate the college.
 

"
p01458,Kth Sentence,"
a student, kita_masa, is taking an english examination.
in this examination, he has to write a sentence of length m.
 
since he completely forgot the english grammar, he decided to consider all sentences of length m constructed by concatenating the words he knows and write the k-th sentence among the candidates sorted in lexicographic order.
he believes that it must be the correct sentence because k is today's lucky number for him.
 
each word may be used multiple times (or it's also fine not to use it at all) and the sentence does not contain any extra character between words.
two sentences are considered different if the order of the words are different even if the concatenation resulted in the same string.
 

"
p01459,Light Road,"
there is an evil creature in a square on n-by-m grid (2 \leq n, m \leq 100),
and you want to kill it using a laser generator located in a different square.
since the location and direction of the laser generator are fixed,
you may need to use several mirrors to reflect laser beams.
there are some obstacles on the grid and you have a limited  number of mirrors.
please find out whether it is possible to kill the creature,
and if possible, find the minimum number of mirrors.
 
there are two types of single-sided mirrors;
type p mirrors can be placed at the angle of 45 or 225 degrees from east-west direction,
and type q mirrors can be placed with at the angle of 135 or 315 degrees.
for example, four mirrors are located properly, laser go through like the following. 
 
note that mirrors are single-sided,
and thus back side (the side with cross in the above picture) is not reflective.
you have a type p mirrors, and also a type q mirrors (0 \leq a \leq 10).
although you cannot put mirrors onto the squares with the creature or the laser generator,
laser beam can pass through the square.
evil creature is killed if the laser reaches the square  it is  in.
 

"
p01460,Matrix Operation,"
you are a student looking for a job.
today you  had an employment examination for an it company.
they  asked you to write an efficient program to  perform several operations.
first, they showed you an n \times n square matrix and a list of operations.
all operations  but one modify the matrix, and the last operation outputs the character in  a specified cell.
please remember that you need to  output the final matrix after you  finish all the operations.
 
followings are the detail of the operations:
 









 

"
p01461,Multi Ending Story,"
you are a programmer who loves bishojo games (a sub-genre of dating simulation games).
a game, which is titled &quot;i * c * p * c!&quot; and was released yesterday, has arrived to you just now.
this game has multiple endings. when you complete all of those endings, you can get a special figure of the main heroine, sakuya.
so, you want to hurry and play the game!
but, let's calm down a bit and think how to complete all of the endings in the shortest time first.
 
in fact, you have a special skill that allows you to know the structure of branching points of games.
by using the skill, you have found out that all of the branching points in this game are to select two choices &quot;yes&quot; or &quot;no&quot;, and once a different choice is taken the branched stories flow to different endings; they won't converge any more, like a binary tree.
you also noticed that it takes exactly one minute to proceed the game from a branching point to another branching point or to an ending.
in addition, you can assume it only takes negligible time to return to the beginning of the game (``reset'') and to play from the beginning to the first branching point. 
 
the game has an additional feature called &quot;quick save&quot;, which can significantly reduce the playing time for completion.
the feature allows you to record the point where you are currently playing and return there at any time later.
you can record any number of times, but you can hold only the last recorded point.
that is, when you use quick save, you overwrite the previous record. if you want to return to the overwritten point, you must play the game from the beginning once again.
 
well, let's estimate how long it will take for completing all of the endings in the shortest time.
 

"
p01462,Network Reliability,"
an undirected graph is given.
each edge of the graph disappears with a constant probability.
calculate the probability with which the remained graph is connected.
 

"
p01463,Runaway Domino,"
``domino effect'' is a famous play using dominoes.
a player sets up a chain of dominoes stood.
after a chain is formed, the player topples one end of the dominoes.
the first domino topples the second domino, the second topples the third and so on.
 
you are playing domino effect.
before you finish to set up a chain of domino,
a domino block started to topple, unfortunately.
you have to stop the toppling as soon as possible.
 
the domino chain forms a polygonal line on a two-dimensional coordinate system without self intersections.
the toppling starts from a certain point on the domino chain
and continues toward the both end of the chain.
if the toppling starts on an end of the chain, the toppling continue toward the other end.
the toppling of a direction stops when you touch the toppling point or the toppling reaches an end of the domino chain.
 
you can assume that:
  you are a point without volume on the two-dimensional coordinate system.  the toppling stops soon after touching the toppling point.  you can step over the domino chain without toppling it. 
you will given the form of the domino chain, the starting point of the toppling,
your coordinates when the toppling started, the toppling velocity and the your velocity.
you are task is to write a program that calculates your optimal move to stop the toppling at the earliest timing and
calculates the minimum time to stop the toppling.
 

"
p01464,Sunny Graph,"
the sun is a great heavenly body.
the sun is worshiped by various religions.
bob loves the sun and loves any object that is similar to the sun.
he noticed that he can find the shape of the sun in certain graphs.
he calls such graphs &quot;sunny&quot;.
 
we define the property &quot;sunny&quot; mathematically.
a graph g=(v,e) with a vertex v \in v is called &quot;sunny&quot; when there exists a subgraph g'=(v,e'), e' \subseteq e that has the following two properties.
(be careful, the set of vertices must be the same.)
 
1. the connected component containing v is a cycle that consists of three or more vertices.
 
2. every other component has exactly two vertices.
 
the following picture is an example of a subgraph g'=(v,e') that has the above property.
 
given a simple graph (in each edge, two end points are different. every pair of vertices has one or no edge.) g=(v,e),
write a program that decides whether the given graph with the vertex 1 is &quot;sunny&quot; or not. 
 

"
p01465,Testing Circuits,"
a boolean expression is given.
in the expression, each variable appears exactly once.
calculate the number of variable assignments that make the expression evaluate to true.
 

"
p01466,World Trip,"
kita_masa is planning a trip around the world.
this world has n countries and the country i has m_i cities.
kita_masa wants to visit every city exactly once, and return back to the starting city.
 
in this world, people can travel only by airplane.
there are two kinds of airlines: domestic and international lines.
since international airports require special facilities such as customs and passport control,
only a few cities in each country have international airports.
 
you are given a list of all flight routes in this world and prices for each route.
now it's time to calculate the cheapest route for kita_masa's world trip!
 

"
p01467,B Problem,"2つの整数 $a$，$b$ がある。
十進数での筆算によって $a - b$ を求める処理を以下に示す。 　1. $a$，$b$ を十進数で表現する。添字は下位から順に $0,1,2,...,n-1$ とし、 $a = a_{n-1} a_{n-2} ... a_{0}$，$b = b_{n-1} b_{n-2} ... b_{0}$ とする。 $n$ は十進数で表現した時の$a$の桁数とする。 $b$ の桁数が $n$ より小さいとき、上位桁に $0$ を補う。
　2. $borrow_{0} = 0$ とする。
　3. 以下の処理を $i = 0$ から $n-1$ まで繰り返す。
　　3.1. $a_{i} - borrow_{i} \geq b_{i}$ ならば、 $c_{i} = a_{i} - borrow_{i} - b_{i}$ ， $borrow_{i+1} = 0$とする。
　　3.2. $a_{i} - borrow_{i} \lt b_{i}$ ならば、 $c_{i} = a_{i} - borrow_{i} + 10 - b_{i}$ ， $borrow_{i+1} = 1$とする。 $a - b$ の計算結果は $c_{n-1} c_{n-2} ... c_{0}$ となる。ただし、最上位に連続する $0$ は取り除く。 繰り下がりを忘れると3.2の処理での $borrow_{i+1} = 1$ が $borrow_{i+1} = 0$ となる。
最大 $k$ 回繰り下がりを忘れたときの計算結果の最大値を求めよ。 

"
p01468,Closest Segment Pair,"$n$ 本の線分 $s_1, s_2, ..., s_n$ が与えられる。このとき、
dist$(s_i, s_j)$, ( $1 \leq i,j \leq n, i \ne j $ )
のとりうる最小値を求めよ。
dist$(s_i, s_j)$ は $\sqrt{(x_i-x_j)^2 + (y_i-y_j)^2}$, ( $(x_i,y_i)$ は $s_i$ 上の点、$(x_j,y_j)$ は $s_j$ 上の点) のとりうる最小値で定義される。 以下はsample inputのデータセットを図示したものである。 




 

"
p01469,Divisor,"正整数列 $x_1,x_2,...,x_n$ がある。数列 $\{1,2,...,n\}$ から部分列 $s$ を選ぶ。ただし $s$ は以下の条件を満たす必要がある。 $t=\{x_s | s \in s\}$ とする。このとき、任意の $x \in t$ について、$x$ の約数(ただし $x$ は除く)は $t$ に含まれない。 条件を満たす $s$ のうち、最も多くの要素を含むものを求めよ。また、そのような $s$ が複数ある場合は辞書式順序で最小のものを求めよ。 

"
p01470,Four Arithmetic Operations,"有理数列 $x_0, x_1, x_2, ..., x_n$ がある。各項は以下のように定義される。 $x_0 = 0$ $x_i = x_{i-1}$ $op_i$ $y_i$ ($1 \leq i \leq n$). ただし $op_i$ は $＋$、$−$、$×$、$÷$のいずれかである。 $x_n$ を求めよ。 

"
p01471,Fractional Knapsack,"実数変数 $x_1, x_2, ..., x_n$ は以下の条件を満たす。 $0 \leq x_i \leq 1$ ($1 \leq i \leq n$) $w_1x_1+w_2x_2+...+w_nx_n \leq w$ このとき $v_1x_1+v_2x_2+...+v_nx_n$ のとりうる最大値を求めよ。そのような最大値は実際に存在することが知られている。 

"
p01472,Game,"ふたりのプレイヤーがゲームをしている。以下、ゲームのルールを説明する。 $n×n$ マスのボードがあり、各マスには数字 $x_{i,j}$ ($1 \leq i,j \leq n$)が書かれている。先手と後手は交互に手を選んで点を積み重ねてゆく。最初に先手は $f$ 点持っており、後手は $0$ 点持っている。 $t$ ターン目($1 \leq t \leq 2n$)のプレイヤーの行動を示す。 これ以降自分と相手がどのような手を選んだとしても自分が負けてしまう場合、即座に負けを宣言してゲームを終了する。 先手の手番(つまり $t$ が奇数)かつ $t&gt;1$ のとき、先手は $x_{y_{t}, y_{t-1}}$ 点を得る。 $t=1$ のとき、先手の得点に変化は起きない。 後手の手番(つまり $t$ が偶数)のとき、後手は $x_{y_{t-1}, y_{t}}$ 点を得る。  $t=2n$ のとき、勝敗判定を行いゲームを終了する。点を多く獲得しているプレイヤーの勝ちで、点が同じ場合は引き分けとする。 ターンを終了して相手に手番を渡す。 先手と後手は以下の基準で手を選ぶ。 自分が勝ちになる手が存在するときはその手を選ぶ。自分が勝ちになる手が複数存在するときはその中からゲームが最短で終了するような手を選ぶ。 自分が勝ちになる手が存在しないとき、引き分けになる手が存在すればその手を選ぶ。 自分が負けになる手しか存在しないとき、ゲームが最長で終了するような手を選ぶ。 先手と後手がこのような基準で手を選んだとき、ゲームの結果とゲームが何ターンで終了するかを求めよ。 

"
p01473,Palindromic Anagram,"文字列 $s$ が与えられる。$s$ のすべてのアナグラムのうち、回文になっているものの個数を求めよ。 文字列 $x$ が $y$ のアナグラムであるとは、$x$ が $y$ と等しいか、$x$ の文字を並び替えたら $y$ に等しくなることをいう。例えば文字列abcdに対して、abcdやcbdaなどはアナグラムであるが、abedやcabやabcddなどはアナグラムでない。 文字列 $x$ が回文であるとは、$x$ を逆から読んだものが $x$ 自身と等しくなることをいう。例えばabcやabは回文でなく、aやabccbaなどは回文である。 

"
p01474,Permutation,"以下の条件を満たす整数列 $x_1, x_2, ..., x_n$ の個数を求めよ。 任意の整数 $i$ ($1 \leq i \leq n$)に対して、$x_j=i$ となる $j$ ($1 \leq j \leq n$)が存在する。 $x_s = t$ $x_{a_i} &lt; x_{b_i}$ ($1 \leq i \leq c$) 

"
p01475,Plane Division,"1つの陰関数 $ax^2+bxy+cy^2+dx+ey+f=0$ で与えられる曲線と、
$n$ 個の陰関数 $a_ix+b_iy+c_i=0$ で与えられる直線がある。
これらの曲線と直線によって平面がいくつの領域に分割されているか求めよ。 以下はsample inputのデータセットを図示したものである。 



 

"
p01476,Range Minimum Query,"実数変数 $x_1, x_2, ...$ があり、何らかの初期値が割り振られている。
これから $q$ 個の情報が順番に与えられる。与えられる情報は以下の2種類のいずれかである。 min $\{x_{a_i}, x_{a_i+1}, ..., x_{b_i}\} = y_i$ である。 変数 $x_{a_i}, x_{a_i+1}, ..., x_{b_i}$ に $y_i$ を代入する。 これら $q$ 個の情報が矛盾しないように各変数の初期値を選べるかどうか判定せよ。 

"
p01477,Sharp 2SAT,"$(x_{1,1}∨x_{1,2})∧(x_{2,1}∨x_{2,2})∧...∧(x_{m,1}∨x_{m,2})$ で表される論理式が与えられる。ただし $x_{i,j} \in \{x_1, x_2, ..., x_n, ~x_1, ~x_2, ..., ~x_n\}$である。
与えられた論理式が真となるように各変数 $x_i$ ($1 \leq i \leq n$)に真偽値を割り当てたい。そのような割り当て方が何通りあるかを求めよ。 

"
p01478,Sort,"$1,2,...,n$ を並べ替えた順列がある。2つの異なる数字 $i$, $j$ を選んで入れ替えることを繰り返してソートされた状態( $1,2,...,n$ の順番に並んだ状態)にしたい。
数字 $i$, $j$ を入れ替える度にコストが $c_{i,j}$ 必要になる。 順列 $p$ に対して、 $p$ をソートするのに必要な最小コストを $f(p)$ とする。
$f(p)$ のとりうる最大値を求めよ。 

"
p01479,Chicken or the Egg,"
time limit: 8 sec / memory limit: 64 mb
 
"
p01480,Unequal Dice,"
time limit: 8 sec / memory limit: 64 mb
 
"
p01481,Lucky Dip,"
time limit: 8 sec / memory limit: 64 mb
 
"
p01482,Memory Leak,"
time limit: 8 sec / memory limit: 64 mb
 
"
p01483,Elevator,"
time limit: 8 sec / memory limit: 64 mb
 
"
p01484,Icy Composer,"
time limit: 8 sec / memory limit: 64 mb
 
"
p01485,Satan Attacks,"
time limit: 8 sec / memory limit: 64 mb
 
"
p01486,CatChecker,"
  外見からねこかどうかわからない動物がいる. あなたは, 鳴き声がねこの鳴き声であればねこであり, そうでなければうさぎであると判定することにした.
 
  ねこの鳴き声は次のように定義される.
  """" (empty string) はねこの鳴き声である.  $x$, $y$ がねこの鳴き声であれば 'm' + $x$ + 'e' + $y$ + 'w' は猫の鳴き声である. ただし + は文字列の連結を表す. 以上で定義されるものだけがねこの鳴き声である. 
bnf で表すとねこの鳴き声 $cat$ は
$cat$ := """" (empty string) $|$ 'm' + $cat$ + 'e' + $cat$ + 'w'
と定義される.
 
  鳴き声を表す文字列 $s$ が与えられる. 鳴き声から動物が何であるか判定せよ.
 


"
p01487,RabbitWalking,"
  うさぎの住んでいる都市には, $v$ 個の交差点と $e$ 本の道がある. 交差点は 1-indexed で番号が付けられている. $i$ 番目の道は交差点 $a_i$ と交差点 $b_i$ を bidirectional につないでいる.
 
  うさぎは, 散歩と奇数が好きである．うさぎはある交差点から出発し, 道を奇数本辿り, 出発した頂点に戻るような経路に沿って散歩したいと思っている．
 
  この都市の市長であるねこは, 都市内の移動を効率化するために異なる2 つの交差点を結ぶ道をたくさん追加しようとしている．ただし，ある交差点の組に対して敷設することが出来る道は高々1本までである．また， ねこはいたずら好きなので，道を奇数本辿り, 出発した頂点に戻るような経路が含まれないようにしたいと思っている．
 
  最大で何本道を付け加えられるか求めよ. ただし，最初からうさぎの要求が満たされている場合は-1 を出力せよ.
 


"
p01488,TransferTrain,"
  うなぎは電車に乗るのが好きである. いま，うなぎは駅 a から駅 b へ電車を使って行こうとしている. うなぎは急いでいるので, 最短時間の経路を選ぶことにした. ただし，うなぎは乗り換えが苦手なので, 最短時間の経路が複数ある場合は最も乗り換え回数の少ない経路を選ぶことにした.
 
  $n$ 本の路線がある. $i$ 本目の路線は $a_i$ 個の駅を通っている. $i$ 本目の路線の通る駅名は通る順に $s_{i,0}, ... , s_{i,a_i -1}$ であり, 駅間の所要時間は $t_{i,0}, ...,  t_{i,a_i - 2}$ である. 電車は路線上を上下方向に走っており, 入力で与えられた逆順に乗ることもできる. 複数の路線の同じ駅名は同じ駅を表しており，乗り換えをすることが出来る. 乗り換えには駅や路線によらず $t$ 分かかる.
 
  一本の路線が同じ駅を複数回通ることもある．もし同じ路線，同じ駅の，路線内で異なる位置の駅に移動したい場合は乗り換えをする必要がある. たとえば, c - d - e - f - d - g という路線を使って c から g まで行く場合, 始点から終点まで一本の電車で行くことも，d 駅で乗り換えて c - d, d - g と乗ることもできる.
 
  うなぎが駅 a から駅 b へ行くのにかかる時間と乗り換え回数を求めよ. 電車はとても頻繁に来るので待ち時間は無視してよい.
 

"
p01489,IkaNumber,"
  数直線上の整数座標に, ねこの taro の家, にんじん, うさぎの hanako の家がこの順に並んでいる. 点 $x$ にいるイカは, 一回のジャンプで $x + 1$ または $x + 2$ に移動することができる.
 
あなたは, イカが taro の家から hanako の家までにんじんの置かれている座標に止まらずに行く経路が何通りあるか求めようとしたが, taro の家, にんじん, hanako の家の座標を知らないので
求めることができなかった. そこで, 代わりに経路の数として考えられる数をすべて列挙することにした.
 
  ある taro の家, にんじん, hanako の家の配置に対してイカの経路数となる整数をイカ数と呼ぶことにする. $k$ 番目に小さいイカ数 (1-indexed) を mod 1,000,000,007 で求めよ.
 

"
p01490,HullMarathon,"
  うさぎはフルマラソンという競技が好きである. この競技はチームで行う. チームメンバーは競技開始前に原点に集まる. 競技開始と同時に走り出し, 1 分後に立ち止まる．このとき，チームメンバーの位置の凸包の面積が最も大きなチームが勝ちとなる.
 
  あなたは $n$ 匹のうさぎからなるチームの監督である. $i$ 匹目のうさぎは 1 分で $r_i$ 移動することができる. このチームが最適な戦略をとった場合の, 1 分後の凸包の面積の最大値を求めよ.
 

"
p01491,RabbitLunch,"
  うさぎは昼食ににんじんとキウイを1 個ずつ食べる. うさぎはとても個性的なので, 食べるにんじんの種類もキウイの種類も同じであるような, 異なる2 匹のうさぎが存在してはならない.
 
  にんじんは $m$ 種類ある. $i$ 種類目のにんじんは $m_i$ 個ある. キウイは $n$ 種類ある. $i$ 種類目のキウイは $n_i$ 個ある. 最大何匹のうさぎが昼食をとれるか求めよ.
 
  $m_i$ と $n_i$ は次の漸化式を用いて生成せよ.
  $m_0 = m0$   $m_{i+1} = (m_i * 58 + md )$ mod $(n + 1)$  $n_0 = n0$  $n_{i+1} = (n_i * 58 + nd )$ mod $(m + 1)$ 


"
p01492,CarrotBreeding,"
  にんじんは繁殖の好きな植物である.
 
  うさぎが畑でにんじんを飼うことにした. 畑は (0, 0) と (1000000000, 1000000000) を対角線とする正方形 (boundary を含む) である. うさぎは, 2 個以上のにんじんを通るすべての直線に沿って毎日1 回ずつ水をまくことにした.
 
  このにんじんたちは, 毎日 $n$ 回ずつ水をまかれるのが繁殖に最適だと考えているので, そのような条件を満たすようにうさぎの畑に並ぶことにした. にんじんは畑内部の格子点にしか並ぶことができない. また, そのような条件を満たす並び方が複数ある場合は, 最もにんじんの個数が少ないものを選ぶことにした.
 
  条件を満たすにんじんの配置を1 つ出力せよ. そのような配置が存在しない場合には -1 と出力せよ.
 

"
p01493,DisconnectedGame,"
  taro と hanako がゲームをしている.
 
  最初に, 非連結な無向グラフ(二重辺や self loop を含まない) が与えられる. taro と hanako は交互に操作を行う. 操作では, 辺で直接つながれていない異なる2 頂点を選び, その間に辺を加える. グラフを連結にしたほうが負けである.
 
  グラフには $v$ 個の頂点がある. $v \times v$ の行列が与えられる. 行列の $(i, j)$-成分が'y' であるとき $i$ と $j$ の間には辺があり, 'n' であるときは辺が無い.
 
  両者が最善に操作をしたとき, どちらが勝つかを出力せよ.
 

"
p01494,ThreeRooks,"
  ねこがチェスの練習をしている.
 
  ねこは, $x \times y$ のチェス盤の上にルークを 3 つ置こうとしている. このチェス盤の $k$ 個のマス目にはうさぎが座っている. $i$ 匹目のうさぎの座標は $(x[i], y[i])$ である. ただし, チェス盤の左上端のマス目の座標を $(0, 0)$, 右下端のマス目の座標を $(x-1, y-1)$ とする。うさぎが座っている場所にはルークを置くことができない. また, 1 つのマス目に複数個のルークを置くことはできない.
 
  どの 2 つのルークも互いに攻撃し合わないようにルークを3 つ置く方法は何通りあるか, mod 1,000,000,007 で求めよ. 2 つのルークは同じ行または同じ列にあり, 間にうさぎが座っていない場合に互いに攻撃しあうものとする.
   

"
p01495,SolveMe,"
$n$ 個の部屋があり, それぞれの部屋の床にはうさぎの絵が描かれている. あなたが部屋 $r$ のうさぎの絵の右耳の部分に乗ると, あなたは部屋 $a[r]$ に書かれたうさぎのしっぽの上にテレポートする. 同様に, 部屋 $r$ のうさぎの絵の左耳の部分に乗ると, 部屋 $b[r]$ に書かれたうさぎのしっぽの上にテレポートする.
 
  整数 $x$, $y$, $z$ が与えられる. ねこは, 以下の条件を満たすようにテレポートを設定しようとしている. テレポートの $n^{2n}$ 通りの設定方法のうち, 条件を満たすものは何通りか, mod 1,000,000,007で求めよ.
 
  条件: 任意の部屋 $r$ に対し, $r$ から右耳にちょうど $x$ 回乗り, 左耳にちょうど 1 回乗り, 右耳にちょうど $y$ 回乗り, 左耳にちょうど 1 回乗り, 右耳にちょうど $z$ 回乗ると, $r$ に戻る.
   

"
p01496,Bicube,"
mary thomas has a number of sheets of squared paper. some of squares are painted either in black or some colorful color (such as red and blue) on the front side. cutting off the unpainted part, she will have eight opened-up unit cubes. a unit cube here refers to a cube of which each face consists of one square.
 
she is going to build those eight unit cubes with the front side exposed and then a bicube with them. a bicube is a cube of the size 2 &times; 2 &times; 2, consisting of eight unit cubes, that satisfies the following conditions:
  faces of the unit cubes that comes to the inside of the bicube are all black;  each face of the bicube has a uniform colorful color; and  the faces of the bicube have colors all different. 
your task is to write a program that reads the specification of a sheet of squared paper and decides whether a
bicube can be built with the eight unit cubes resulting from it.
 



"
p01497,Bubble Puzzle,"
a browser-based puzzle game called ""bubble puzzle"" is now popular on the internet. 
 
the puzzle is played on a 4 &times; 4 grid, and initially there are several bubbles in the grid squares. each bubble has a state expressed by a positive integer, and the state changes when the bubble gets stimulated. you can stimulate a bubble by clicking on it, and this will increase the bubble's state by 1. you can also click on an empty square. in this case, a bubble with state 1 is newly created in the square.
 
when the state of a bubble becomes 5 or higher, the bubble blows up and disappears, and small waterdrops start flying in four directions (up, down, left and right). these waterdrops move one square per second. at the moment when a bubble blows up, 4 waterdrops are in the square the bubble was in, and one second later they are in the adjacent squares, and so on.
 
a waterdrop disappears either when it hits a bubble or goes outside the grid. when a waterdrop hits a bubble, the state of the bubble gets increased by 1. similarly, if a bubble is hit by more than one water drop at the same time, its state is increased by the number of the hitting waterdrops. please note that waterdrops do not collide with each other.
 
as shown in the figure above, waterdrops created by a blow-up may cause other blow-ups. in other words, one blow-up can trigger a chain reaction. you are not allowed to click on any square while waterdrops are flying (i.e., you have to wait until a chain reaction ends). the goal of this puzzle is to blow up all the bubbles and make all the squares empty as quick as possible.
 
your mission is to calculate the minimum number of clicks required to solve the puzzle.
 



"
p01498,King Slime,"
there is a grid of size w &times; h surrounded by walls. some cells in the grid are occupied by slimes. the slimes want to unite with each other and become a ""king slime"".
 
in each move, a slime can move to east, west, south and north direction until it enters a cell occupied by another slime or hit the surrounding wall. if two slimes come together, they unite and become a new slime.
 
your task is write a program which calculates the minimum number of moves that all the slimes unite and become a king slime. suppose slimes move one by one and they never move simultaneously.
 



"
p01499,Rabbit Game Playing,"
honestly, a rabbit does not matter.
 
there is a rabbit playing a stage system action game. in this game, every stage has a difficulty level. the rabbit, which always needs challenges, basically wants to play more difficult stages than he has ever played. however, he sometimes needs rest too. so, to compromise, he admitted to play t or less levels easier stages than the preceding one.
 
how many ways are there to play all the stages at once, while honoring the convention above? maybe the answer will be a large number. so, let me know the answer modulo 1,000,000,007.
 


"
p01500,Rabbit Jumping,"
  there are $k$ rabbits playing on rocks floating in a river. they got tired of playing on the rocks on which they are standing currently, and they decided to move to other rocks. this seemed an easy task initially, but there are so many constraints that they got totally confused.
 
  first of all, by one leap, they can only move to a rock within $r$ meters from the current rock. also, they can never leap over rocks. that is, when they leap in some direction, they should land on the nearest rock in that direction. furthermore, since they always want to show off that they are courageous, they will never leap to rocks downriver. finally, since they never want to admit they have been defeated, they never land on a rock if the rock is already visited by other rabbits.
 
  in this situation, is it possible for them to move to their destination rocks? if possible, please minimize the sum of their moving distance.
 

"
p01501,Shelter,"
  taro lives in a town with n shelters. the shape of the town is a convex polygon.
 
  he'll escape to the nearest shelter in case of emergency. given the current location, the cost of escape is defined as the square of the distance to the nearest shelter. because emergency occurs unpredictably, taro can be at any point inside the town with the same probability. calculate the expected cost of his escape.
   

"
p01502,Sightseeing Tour,"
  km city has $n$ sightseeing areas. currently every pair of area is connected by a bidirectional road.
 
  however for some reason, mr. km, the mayor of this city, decided to make all of these roads one-way . it costs $c_{i, j}$ dollars to renovate the road between area $i$ and area $j$ to a one-way road from area $i$ to area $j$. of course, mr. km is economic and wants to minimize the total cost of the renovation.
 
  on the other hand, because tourism is the most important industry for km city, there must exists a tour that goes through all the sightseeing areas, visiting each area exactly once. the first and last area of the path need not to be the same. can you calculate the minimum total cost required for the renovation, given this situation?
   
  
"
p01503,Tampopo Machine,"
  ""today is another day of endless, tedious work to put a tampopo on sashimi...""
 
  yaruo works in a sashimi (sliced raw fish) factory. his job is to put tampopos on sashimi packages everyday. tired of this menial job, he decided to develop a tampopo machine to do the job instead of him.
 
  the tampopo machine has the following properties. sashimi packages are put on a conveyor belt and move from left to right. the width of a package is $w$ and the interval between two adjacent packages is $d$. the machine has $n$ magic hands placed above the conveyor belt at regular intervals of $m$. these magic hands put tampopos every $t$ seconds.
 
  in initial state, the right end of the first package is under the leftmost magic hand. the magic hands start putting a tampopo as soon as he turns on the power of the machine. the conveyor belt moves one unit length per one second.
 
  unfortunately, after building the machine, yaruo noticed that there exist some packages with no tampopos. calculate the ratio of packages with no tampopos for him.
 
when a magic hand puts a tampopo on the left or right end of a package, you can assume that the tampopo is on the package.
 

"
p01504,AYBABTU,"
there is a tree that has n nodes and  n-1 edges.
there are military bases on t  out of the n nodes.
we want to  disconnect the bases as  much as possible by destroying k edges.
the tree will  be split into k+1  regions when we destroy k edges.
given the purpose to disconnect the bases, we only consider to split in a way that each of these k+1  regions  has at least one base.
when we destroy an edge, we must pay destroying cost.
find the minimum destroying cost to split  the tree.
 

"
p01505,Billiards Sorting,"
rotation is one of  several popular pocket billiards games.
it uses 15 balls numbered from 1 to 15, and set  them up  as illustrated in the following figure  at the beginning of a game.
(note:  the ball order  is  modified from  real-world rotation rules for simplicity of the problem.)
 
you are an engineer  developing an automatic billiards machine.
for the first step you  had to  build a machine that sets up the initial condition.
this project  went well, and finally  made up a machine that  could arrange the balls in the triangular shape.
however, unfortunately, it  could not place the balls in the correct order.
 
so now you are trying to  build another machine that fixes the order of balls by swapping   them.
to cut off the cost, it is only allowed to swap the ball #1 with its neighboring balls that are  not  in the same  row.
for example, in the  case below,  only the following pairs can be swapped: (1,2), (1,3), (1,8), and (1,9).
 
write a program that calculates the minimum number of swaps required.
 

"
p01506,Digit,"
for a positive integer a, let s(a) be the sum of the digits in base l.
also let l(a) be the minimum k such that s^k(a) is less than or equal to l-1.
find the minimum a such that l(a) = n for a given n, and print a modulo m.
 

"
p01507,Dungeon Creation,"
the king demon is waiting in his dungeon to defeat a brave man.
his dungeon consists of h \times w grids.
each cell is connected to four (i.e. north, south, east and west) neighboring cells and some cells are occupied by obstacles.
 
to attack the brave man, the king demon created and sent a servant  that walks around in the dungeon.
however, soon the king demon found that the servant does not work as he wants.
the servant  is too dumb. if the dungeon had  cyclic path, it might keep walking along the cycle forever.
 
in order to make sure that the servant eventually find the brave man, the king demon decided to  eliminate all cycles by building walls between cells.
at the same time, he must be careful so that there  is at least one path between any two cells  not occupied by obstacles.
 
your task is to write a program that computes in how many ways the kind demon can build walls.
 

"
p01508,Longest Lane,"
mr. km, the mayor of km city, decided to build a new elementary school.
the site for the school has an awkward polygonal shape, which caused several problems.
the most serious problem was that there was not enough space for a short distance racetrack.
your task is to help mr. km to calculate the maximum possible length for the racetrack
that can be built in the site.
the track can be considered as a straight line segment  whose width can be ignored.
the boundary of the site has a simple polygonal shape without self-intersection,
and the track can touch the boundary.
note that the boundary might not be convex.
 

"
p01509,Play in Basic,"
one sunny day, dick t. mustang found an ancient personal computer in the closet.
he brought it back to his room and turned it on with a sense of nostalgia, seeing a message coming on the screen:
 
yes. basic.
 
basic is a programming language designed for beginners, and was widely used from 1980's to 1990's.
there have been quite a few basic dialects.
some of them provide the play statement, which plays music when called with a string of a musical score written in music macro language (mml).
dick found this statement is available on his computer and accepts the following commands in mml:
 each note command consists of a musical note followed by a duration specifier. each musical note is one of the seven basic notes: 'c', 'd', 'e', 'f', 'g', 'a', and 'b'.  it can be followed by either '+' (indicating a sharp) or '-' (a flat).  the notes 'c' through 'b' form an octave as depicted in the figure below.  the octave for each command is determined by the current octave, which is set by the octave commands as described later.  it is not possible to play the note 'c-' of the lowest octave (1) nor the note 'b+' of the highest octave (8). each duration specifier is basically one of the following numbers: '1', '2', '4', '8', '16', '32', '64', and '128', where '1' denotes a whole note, '2' a half note, '4' a quarter note, '8' an eighth note, and so on.  this specifier is optional; when omitted, the duration will be the default one set by the l command (which is described below).  in addition, duration specifiers can contain dots next to the numbers.  a dot adds the half duration of the basic note.  for example, '4.' denotes the duration of '4' (a quarter) plus '8' (an eighth, i.e. half of a quarter), or as 1.5 times long as '4'.  it is possible that a single note has more than one dot, where each extra dot extends the duration by half of the previous one.  for example, '4..' denotes the duration of '4' plus '8' plus '16', '4...' denotes the duration of '4' plus '8' plus '16' plus '32', and so on.  the duration extended by dots cannot be shorter than that of '128' due to limitation of dick's computer; therefore neither '128.' nor '32...' will be accepted.  the dots specified without the numbers extend the default duration.  for example, 'c.' is equivalent to 'c4.' when the default duration is '4'.  note that 'c4c8' and 'c4.' are unequivalent; the former contains two distinct notes, while the latter just one note. the r command rests  for the specified duration.  the duration should be specified in the same way as the note commands, and it can be omitted, too.  note that 'r4r8' and 'r4.' are equivalent, unlike 'c4c8' and 'c4.', since the both rest for the same duration of '4' plus '8'. the o command sets the current octave to the specified number.  '&gt;'  raises one octave up, and '&lt;'  drops one down.  it is not allowed to set the octave beyond the range from 1 to 8 by these commands.  the  octave is initially set to 4. the l command sets the default duration.  the duration should be specified in the same way as the note commands, but cannot be omitted nor followed by dots.  the default duration is initially set to 4. the v command sets the current volume.  larger is louder.  the  volume is initially set to 100. 
as an amateur composer, dick decided to play his pieces of music by the play statement.
he managed to write a program with a long mml sequence, and attempted to run the program to play his music -- but unfortunately he encountered an unexpected error: the mml sequence was too long to be handled in his computer's small memory!
 
since he didn't want to give up all the efforts he had made to use the play statement, he decided immediately to make the mml sequence shorter so that it fits in the small memory.
it  was too hard for him, though.
so he asked you to write a program that, for each given mml sequence, prints the shortest mml sequence (i.e. mml sequence containing minimum number of characters) that expresses the same music as the given one.
note that the final values of  octave,  volume, and default duration can be differrent from the original mml sequence.
 

"
p01510,Skyland,"
somewhere in the sky, km  kingdom built n floating islands by their highly developed technology.
the islands are numbered from 1 to n.
 
the king of the country, kita_masa, can choose any non-negative real number as  the altitude for each island, as long as the  sum of the altitudes is greater than or equals to h.
for floating  the island i  to the altitude h_i, it  costs b_i h_i.
besides, it  costs |h_i - h_j|c_{i,j} for each pair of islands i and j since there are  communications between  these islands.
 
recently, energy prices are rising, so the king, kita_masa, wants to minimize the sum of the costs.
the king ordered you, a court programmer, to write a program that finds the altitudes of the floating islands  that minimize the cost.
 

"
p01511,way Branch,"
there is a grid that consists of w \times h cells. the  upper-left-most cell is (1, 1).
you are standing on the cell of (1,1) and you  are going to move to cell of (w, h).
you can only move to adjacent lower-left, lower or lower-right cells.
 
there are obstructions on several cells. you can not move to it. you cannot move out the grid, either.
write a program  that outputs the number of ways to reach  (w,h)  modulo 1,000,000,009.
you can assume that there is no obstruction at  (1,1).
 

"
p01512,Tree Allocation,"
a tree is one of the most popular data structures in computer science.
tree itself is very elegant, but it is incompatible with current computer architecture.
in the current architecture, memory can be regarded as a one-dimensional array.
since a tree is not a  one-dimensional structure, cache efficiency may come into question when we allocate a tree  on memory.
we can access the data faster if it is contained in cache.
let us consider the allocation of nodes of a tree which achieves high cache performance.
 
we define the cost of allocation for a tree as follows.
for simplicity, we regard  memory to be separated to  blocks  each can store at most b nodes of a tree.
when we access  data in a block, all data in the block are stored in cache and access request to data in the block will be faster.
the cost of an access to node u after node v is 0 if u and v are in same block, and 1 otherwise.
initially, cache has no data and the cost of an access to a node is always 1.
the cost of the path v_1, v_2,..., v_n is sum of the cost when we access the nodes v_1, v_2,..., v_n in this order.
for a tree, we define the cost of allocation as a maximum cost of the paths from root node to each terminal node.
 
the figures below show examples of allocation when b = 4 and node 1 is  the root node (it corresponds to  the tree described in the third sample input).
each frame  represents a block.
the left figure is an example of allocation whose cost is 3.
it is not optimal, because
the right  example achieves  the optimal allocation  cost  2.
 
given a tree,  for each node i in the tree, calculate the minimum cost of allocation when the node i is  the root node.
 

"
p01513,Save Your Privacy!,"
english text is not available in this practice contest.
 
icpc (international committee of privacy and confidence) は世界中に多くの構成員を持つ組織であり、その名の通り非常にプライバシーを尊重する、秘密主義者たちの団体である。構成員たちは必要上他の構成員の個人情報を知ってしまうことがあるが、それらを厳重に秘匿するよう義務付けられている。
 
しかしある日、何人かの構成員の個人情報が漏洩してしまった！icpcの acm (account control manager: アカウント管理責任者) であるあなたは、速やかに情報を漏洩させた構成員を特定し、厳重に処分しなければならない。
 
あなたは構成員よりも大きな権限を持つ管理者なので、誰が誰の個人情報を知ってしまっているかを完全に把握している。もちろん、どの構成員も自分の知らない構成員の個人情報を漏洩させることはありえない。しかし、犯人は自分が知っている全ての個人情報を漏洩させたとは限らない。個人情報が漏洩してしまった構成員の一覧から、どの構成員が個人情報を漏洩させたのかを (可能ならば) 特定しよう。
 
ところで、icpc という組織が何を目的として活動しているのかは最重要機密であり、管理者の権限をもってしても知ることはできない。
 




"
p01514,You Are the Judge,"
english text is not available in this practice contest.
 
あなたはプログラミングコンテスト icpc の審判だ。今日も何事もなく試合が終わり、後は結果を出力するだけだと思いきや、突然システムが停止してしまった！　
 
これでは結果が出力できない！　でも、大丈夫。我々にはログがある。
 
あなたは優れたプログラマーであり、かつて icpc で輝かしい成績を残したこともある。
 
そこであなたはシステムログから各チームの成績を割り出し、チームの順位表を出力するプログラムを作成することにした。
 
入力としてチームの数、問題の数、システムログが与えられる。
 
シムテムログは以下の 2 種類のレコードからなる。
 
※上記のシステムログはこの問題のために簡略化されたものであり、本番のicpcで見られるシステムログと異なることに留意せよ
 
icpcにおける順位付けのルールは以下の通りである。
 より多くの問題を解いたチームは順位が上になる 解いた問題が同じ場合、ペナルティの少ないチームのほうが順位が上になる 解いた問題もペナルティも同じ場合、チーム番号が小さいほうのチームが順位が上になる 
入力より与えられるコンテストの情報・システムログから各チームの成績を割り出し、チームの順位表を出力せよ。
 




"
p01515,Equation,"
english text is not available in this practice contest.
 
論理演算では，値は t と f の2種類だけを扱う．
 
&quot;-&quot;を単項演算子（入力が 1 つの演算を表す記号），
&quot;*&quot;, &quot;+&quot;, &quot;-&gt;&quot; を 2 項演算子（入力が 2 つの演算を表す記号）とする．
&quot;-&quot; は論理否定(not)，
&quot;*&quot; は論理積(and)，
&quot;+&quot; は論理和(or)，
&quot;-&gt;&quot; は論理包含(imp)を表す演算子である．
これらの論理演算の真理値表を下の表に示す．
 
論理式は以下のいずれかの形式である．
x, yは論理式とし， 2 項演算子は必ず括弧で囲むものとする．
 定数: t, f 変数: a, b, c, d, e, f, g, h, i, j, k 論理否定: -x 論理積: (x*y) 論理和: (x+y) 論理包含: (x-&gt;y) 
2 つの論理式を等号 &quot;=&quot; で結合した等式が与えられる．
恒等式とは，式に現れる変数がどのような値であっても成立する等式のことである．
与えられた等式が恒等式であるかを判定するプログラムを作りたい．
 




"
p01516,Milky Way,"
english text is not available in this practice contest.
 
天の川交通公社は星間旅行ツアーの企画・運営を行う旅行会社である。
天の川交通公社では「天の川横断織姫彦星体験ツアー」という企画を計画中である。
このツアーは琴座のベガを出発し、
星々を巡って鷲座のアルタイルに向かうというものである。
あなたは天の川交通公社に社員であり、
ツアーの経路の選択を任されている。
 
簡単のため天の川は2次元座標上にあるものとし、
星は五芒星で表現されるものとする。
ツアーに使用する宇宙船には特殊なエンジンが搭載されており、
五芒星の線分上はエネルギー無しで移動することができる。
一方、五芒星の間を移動する際には、その距離に比例したエネルギーが必要となる。
 
近年、天の川交通公社の売上は低迷しており、
宇宙船のエネルギー代を始めとした各種必要経費の節約を迫られている。
あなたの仕事は、ベガからアルタイルに移動する際、
星間移動距離の総和が最小になるような経路を求め、
その総和を出力するプログラムを書くことである。
 
ある五芒星からその内部に含まれる別の五芒星に移動する場合、
五芒星同士が接していない場合は星間の移動として扱われることに注意せよ。
 
図d-1は3つ目のsample inputを図示したものである。
図中、赤色の線分は星間移動距離の総和が最小になるような経路の、
星間移動の部分を表している。
 
図 d-1: 星間の移動
 





"
p01517,The Enemy of My Enemy is My Friend,"
english text is not available in this practice contest.
 
時は xxxx 年。戦乱の世である。
 
土地や資源を巡って、隣り合った国同士の衝突がそこかしこで起こり、世の中の先行きは非常に不透明であった。そんな中とある国が、様々な国と軍事同盟を結んでこの乱世を生き延びようと考えた。軍事同盟は次の条件をみたすように行うことが出来る。
 自国の隣国とは同盟を結ぶことは出来ない。 同盟をした国の隣国とは同盟を結ぶことは出来ない。 
ただし、国ごとにその軍事的な強さは異なっている。軍事的に強くない複数の国と同盟を結ぶより、軍事的に非常に強い一国と同盟を結んだほうが有利であることも有り得る。ここでは、同盟に含まれる国の軍事的強さの和が最大になるような軍事同盟の結び方を考えたい。
 




"
p01518,Dog Food,"
english text is not available in this practice contest.
 
あなたは, 賢い犬を選ぶコンテストの主催者である．
種目の1つに，以下のようなものがある．
 
この種目は，平面的な広場の上で行われる．
広場には杭がいくつか立っており，そのうちの1つと，犬はロープで結ばれている．杭やロープの太さは無視できるものとする．ロープが結ばれている杭の座標を(0，0)，犬の位置を(dx，dy)とする．
また，ロープが結ばれている杭以外の杭の本数をｎ本とし，それらの座標を(x1，y1)... (xn，yn)とする．
初期状態で，ロープはピンと張られた状態である．すなわち，ロープの長さはちょうど(dx，dy)と(0，0)の距離に等しく，その2つの端は原点の杭と犬にそれぞれ結び付けられている．
(fx，fy)には，ドッグフードがおかれており，この地点がゴールである．この条件下で，短い走行距離でゴールに辿りつけた犬ほど賢いと考えられる．
場合によっては，図f-1のように，直接ゴールに向かうと，別の杭にロープが引っかかり，ロープの長さが足りなくなって，ゴールにたどりつけないため，杭を迂回する必要があることに注意せよ．
この例は，サンプルの1番目の入力を表している．
 
図 f-1: 杭を迂回する必要がある例
 
優秀なプログラマーでもあるあなたは，犬がゴールにたどり着けるかどうか，またたどり着けるとしたら最短距離はどうなるのかを，あらかじめ計算しておくことにした．
 




"
p01519,Sister Ports,"
english text is not available in this practice contest.
 
acm 国は正 n 角形の島国である．
n 個の角に港があり，ある角の港から時計回りに 1 から n までの番号が順番に付いている．
港は点とみなす．
 
acm 国には，二種類の道路がある．
 隣り合う港を繋ぐ道路 全ての隣接する港は道路で接続されている．すなわち，番号の差が 1 である港同士および港 1 と港 n の間に道路がある．この種類の道路は n 本ある． 島の内部を通る道路 一部の隣接しない港の間も，道路で接続されている．この種類の道路は m 本あり，道路 i は港 ai と港 bi を接続する． 
道路は線分とみなす．acm 国では，任意の 2 つの道路は端点以外で共有点を持たない．
 
図 g-1: 港と道路の例
 
acm 国は，港に事故が起きた時などに備えるため，全ての港について姉妹港を決め，いつでも互いを補助できるよう準備させることにした．
全ての港について姉妹港は 1 つで，港 a が港 b の姉妹港であるとき，港 b も港 a の姉妹港である．
すなわち，n 個の港から，港が重複しない n/2 個のペアを作る．
このとき，acm 国は，姉妹港の間には必ず道がなければならないとすることにした．
 
acm 国に住む優秀なプログラマーであるあなたの仕事は，
全港に対する姉妹港の選び方の総数を計算するプログラムを作成することである．
 
図 g-2: 姉妹港の選び方の例（姉妹港同士の間の道路を赤色太線で表示している）
 





"
p01520,Al dente,"
わたしは近所のスーパーで初めてスパゲッティというものを購入した．パッケージの情報によると，このスパゲッティは t 秒茹でると最も理想的な状態に茹で上がるらしい．
 
ところでわたしは電気が嫌いな人間であり，家にはテレビやパソコンはおろか，時計さえ無い．
そのためスパゲッティを茹でようにも，時間を測ることができない．
電池式の時計は嫌なので，わたしは代わりに砂時計を買おうと考え，スーパーの砂時計売り場へと向かった．
売り場には n 個の砂時計があった．i 番目の砂時計はちょうど xi 秒だけ測ることができるようであった．
いろいろあって悩ましいが，スパゲッティのために砂時計を何個も買うのは馬鹿らしいのでこの中からちょうど 1 個だけ買おうと思う．
 
しかし皆さんご存知の通り，砂時計というのは一度測り始めると，それから測り終えるまでは途中の時刻というのはまったく分からない．
そのため，もし私が i 番目の砂時計を買って使ったとすると，時計を連続して使うことで xi 秒，2xi 秒，3xi 秒，... という時間を測ることができるが，逆にそれ以外の時間は測ることができない． 
 
理想的な茹で上がりに必要な時間は t 秒らしいが，ここでは妥協して e (&lt; t) 秒以内の誤差を許そう．
すなわち，どれか 1 つの砂時計を用いて，t&minus;e 秒，t&minus;e+1 秒，t&minus;e+2 秒，... ，t+e&minus;2 秒，t+e&minus;1 秒，t+e 秒のうちのどれかの時間を計測したい．
私は何番目の砂時計を購入して使えばよいだろうか?
 


"
p01521,Simple Othello,"
b君はオセロが大好きである (オセロのルールについてはwikipediaのオセロのページを参照せよ．「パス」についても wikipedia に書かれているとおり，駒を打つことができない場合のみパスできるものとし，パスの回数に制限は無いものとする．)
b君は駒の初期配置によってゲームの結果がどのように変わるのかに興味がある．
しかしいきなり 2 次元の盤面で考えるのは難しいので，ひとまずは 1 次元の盤面で考えることにした．
すなわち，この問題では盤面は縦幅 1，横幅無限のマス目であると見なす．
また，オセロの駒はアルファベット小文字の o と x によって表すことにする．
 
b君はこの盤面上のオセロの初期配置として n 個の駒を連続させて並べ，左から i 番目の駒を ci &isin; {o, x} とするものを考えることにした．
先手の駒を o とするとき，両方のプレイヤーが最善を尽くした時に勝利者がどちらになるかを求めて欲しい．
 

"
p01522,Social,"
うさぎが n 匹おり，ボートを使って川を渡ろうとしている．ボートは k 個あり，誰がどのボートに乗るかを適当に決めて乗ることにした．
 
ところでうさぎというのは互いの仲の良し悪しに敏感であり，狭い空間に仲の悪いうさぎと一緒に閉じ込められると気分を悪くしてしまう．
この n 匹のうさぎについても何組かのうさぎは仲が悪いということが分かっており，今の割り当てでは何匹かは気分を悪くしてしまう可能性がある．
もっと良い割り当てを考えるのがよいところではあるが，ひとまず今の割り当てで何匹のうさぎが気分を悪くするかを求めて欲しい．
 


"
p01523,Power,"
  10号館とはとある大学にある建物で，j研究科のメンバーが日夜研究に勤しんでいる施設である．
 
  10号館は建物が古いことで有名であったが，今年ついに改装されることになった．
  改装工事終了後は綺麗な環境で研究が出来ると皆が期待していたある日，
  k研究科の一部が，改装工事終了後の10号館の部屋を侵略するという知らせが届いた．
 
  もしk研究科に10号館の部屋が侵略されれば，その部屋で活動していたj研究科のメンバーはこれまた建物が古いことで知られる2号館に移動する必要がある．
  何とか阻止しなければならないので，j研究科は教授が権力を出しあって10号館の各部屋をk研究科から守ることにした.
 
  10号館は n 個の部屋が1直線上に並んでおり，順番に 1,2,...,n の番号が付けられている．
  k研究科は，この n 個の部屋を全て侵略しようとしてくる．
  j研究科には m 人の教授が在籍しており，各教授はある区間に含まれる部屋に対して権力を発揮できる．
  1人以上の教授に権力を発揮された部屋はk研究科に侵略されることはなく守ることが出来るが，どの教授からも権力を発揮されなかった部屋は侵略されてしまう．
 
  教授は研究で忙しいので，出来るだけ少人数で全ての部屋を守りたい．
  全ての部屋を守るために権力を発揮するべき教授の最少人数を求めよ．
  なお，教授全員が権力を発揮しても全ての部屋を守ることが出来無い場合があることに注意せよ．
 


"
p01524,Janken,"
e 君はじゃんけんが大好きである (ちなみにじゃんけんのルールについてはwikipediaのじゃんけんのページを参照せよ)．
ある日，町内でじゃんけん大会があるということを知った e 君は，じゃんけんの腕に自信があったこともあり早速出場することにした．
ところが大会当日，e 君を待ち受けていたのは，普通の「グー・チョキ・パー」のみからなる普通のじゃんけんではなく，
より多くの手からなる一般化されたじゃんけんであった．
 
一般化されたじゃんけんは 2 人のプレイヤーで行われるゲームである．
まず，2 人にはこのじゃんけんにおいて使用出来る手の個数 n と，n 個の手の勝敗関係を示す表が伝えられる．
そして，通常のじゃんけんと同じように同時に手を出しあい，伝えられた手の勝敗関係に基いて勝敗を決める．これを 1,000 回 繰り返す．
1 回のじゃんけんの勝敗の結果によって得点が手に入り，相手に勝利した場合は 3 点，相手と「あいこ」になった場合は 1 点が手に入る．相手に負けてしまった場合は得点を得られない．
 
このなんだかよくわからないルールのじゃんけんにすっかり戦意を喪失してしまった e 君であったが，どうやら聞くところによると，最終的に相手に得点で勝てなくても，350 点以上を獲得すれば何か景品がもらえるらしい．
めんどくさいので 350 点を得てさっさと大会を後にすることにした．
 
この問題の目的は，一般化されたじゃんけんをプレイする ai を作成し，ジャッジ側の用意した ai と対戦させて 350 点以上を獲得することである．
 

"
p01525,Acceleration of Network,"
インターネットと言う広大な海は少しずつ黒く塗りつぶされていった。
ボットの反乱、ddos攻撃の嵐、ウィルスの蔓延、
何度も何度も繰り返されたクラッカーとの戦争で、人もインターネットもボロボロになった。

人の手では、インターネットはどうにもならない。
だから人は、とんでもない時間をかけて
インターネットを復旧できる「少女」を造った。

少女は、インターネットの手当をはじめた。
果てしなく広いインターネットの世界をどうにかしようと頑張った。

まだ少女ひとりでは撚り対線を織る事くらいしかできないけど、
長い長い時がすぎてインターネットが少し復旧すれば、
みんなと一緒に頑張れるだろうという期待をこめて。
 

"
p01526,Village,"
きつねのしえるは，休暇でとある小さな村を訪れている．彼女が驚いたのは，その村の表札がもつ性質である．
 
村には n 個の家屋がある．ここでは簡単のため，村は 2 次元平面であるとし，家屋はこの平面上の点であると見なす．
それぞれの家屋には表札が 1 個設けられており，その家の苗字を表していた．しえるは村の中を訪問するにつれて，この村の表札が次のような性質を持っていることに気付いた．
 ある実数 r が存在する． もし 2 つの家屋の距離が r 以下であるなら，その 2 つの家屋は同じ表札を持つ． もし 2 つの家屋の距離が 3r 以上であるなら，その 2 つの家屋は異なる表札を持つ． 任意の 2 つの家屋の距離は r 以下であるか 3r 以上であるかのどちらかである． 
ここで，家屋同士の距離は，平面上のユークリッド距離によって計測するものとする．
 
しえるはこの村に表札が全部で何種類あるのかが気になったが，この村は意外に広いということに気付いたので，計算機を使ってこの答えを模索することにした．
 


"
p01527,Tree Planting,"
  とある大学の魔法学部の生徒であるk君は広大な屋敷に住んでいる．
  屋敷の裏には林が広がっていたが，所々木が生えていない箇所があった．
  このままでは屋敷からの見た目が悪いと感じたので，k君は木が生えていない箇所に木を植えることに決めた．
  魔法使いの卵であるk君は使い魔を召喚することが出来るので，植林の作業を使い魔にやらせようと考えた．
 
  林は h &times; w 個のセルを持つ長方形領域とみなすことが出来る．
  各セルは木が1本生えているか1本も生えていないかのどちらかである．
  k君はこの h &times; w 個のセルのどれか 1 つを指定し，そこに使い魔を召喚する．
  しかしk君はまだ未熟者なので，魔力を調節することが出来ず，使い魔を召喚するときは必ず 5 匹召喚してしまう．
  さらに悪いことに，k君が召喚する使い魔はひねくれもので，訪れたセルに木が生えていない場合はそこに木を植えるが，訪れたセルに既に木が生えている場合はそのセルの木を消してしまう．
  召喚された使い魔のうちの 4 匹は，指定されたセルを始点として東西南北に散らばり1直線上を進み，1つ1つセルを訪れていく．これらの使い魔は林の外に出ると消える．
  残りの使い魔は指定されたセルのみを訪問し，その後直ちに消える．
 
  より正確に言えば，k君がセル (i, j) に使い魔を召喚すると，i 行目か或いは
  j 列目にある h+w-1 個のセルに対し，
  木が生えていなければ木が植えられ，木が生えていれば木が消されるという操作が行われる．
 
  召喚には多くの魔力を必要とするので，出来るだけ少ない召喚回数で林を木で覆いつくしたい．
  k君はどのセルに使い魔を召喚すれば最小の召喚回数で林を木で覆いつくすことが出来るだろうか．
 


"
p01528,Treasure Hunt,"
わたしはある宝探しの依頼を受けた．
どうやら，この近くの地中 2w &times; 2h の範囲内にお宝が埋まっているらしい．
わたしの得意なダウジングを使えば，現在の位置からお宝がどの方向にねむっているのか知ることができる．
 
ただ，わたしの能力はその日の体調による影響が大きく，今日はダウジングをした時に最大で e 度まで誤差が出てしまいそうだ．
また，わたしの体力にも限界はある．1日に200回までしかダウジングを行うことはできない．
 
わたしは考えることは苦手だ．
あなたには，宝を見つけるためにどこでダウジングをするべきかの指示を出していただきたい．
 

"
p01529,Sashimi,"
きつねのしえるは川で釣りをしていた．黒くて細長い魚を手に入れることができたので，その場で切り刻んで刺身にして食べることにした．
 
魚は体長が n センチメートルある．奇妙なことに，この魚は身体の部分ごとに密度が異なっていた．
魚の身体を頭から 1 センチメートルごとに区切って番号を 1, 2, ..., n と付けるとき，身体の i 番目の部分の重みは w_i であった．
魚の i 番目から j 番目までの部分を [i..j] と表すことにする．
最初，しえるは魚の身体 [0..n-1] を 1 枚だけ持っていると見なせる．しえるはこれを切っていき最終的に n 個に分割された魚の身体 [0..0], [1..1], ..., [n-1..n-1] を得たい．
 
しえるは今野外におり，まな板などを持っていないので，次のようなアクロバティックな方法で魚の身体を切っていくことにした ： まず，魚の身体を 1 枚取る．これを [i..j] とする．この魚の身体は長さが少なくとも 2 センチメートル以上でなければならない．すなわち， j-i &ge; 1 でなければならない．次に，それを空中に投げる．そして日本刀を手に持ち，宙に舞う魚を真っ二つに切る．このとき，しえるは強靭な運動神経によって任意の位置でこの魚を切ることができるが，必ず 1 センチメートル区切りの位置で切るものとする．これにより，元の魚の身体 [i..j] を，任意の切断位置 k (i &le; k &lt; j) によって，[i..k] と [k+1..j] の 2 つに分割するのである．
このアクロバティックな方法で魚の身体を 2 つに切るとき，元の身体の重さ (=wi+wi+1+...+wj) だけコストがかかる．
 
しえるは，魚のすべての部分を 1 センチメートル区切りに切るのにかかるコストの合計値を最小にしたい．
 


"
p01530,XOR Cloister,"
ku大学では一風変わったラリーゲームが人気である．
このゲームの舞台であるサーキットには，n 個の休憩所と m 個の道があり，i 番目の道は fi 番目の休憩所と ti 番目の休憩所の間にある．
すべての道にはチェックポイントが一つずつ存在し，道 i のチェックポイントを通過するとどちらの向きで通っても pi の得点がxorで加算される．xorで加算される．大事なことなので2回言いました．
 
このゲームでは，同じ休憩所や道を何度通っても良いし，
ゴールにたどり着いてもそのままラリーを続行することができるが，
道の途中にあるチェックポイントを迂回して別の休憩所へ行くことは禁止されている．
そのため，どのような道順をたどれば高い得点を取ることができるかを頑張って考えなければならない点が人気のある所以である．
 
今回は q 人の参加者がいて，j 番目の参加者は aj の休憩所からスタートして，ゴールである bj の休憩所まで行くことになっているようだ．
運営側の人間としてそれぞれの参加者の最高得点を前もって調べておくことにした．
 


"
p01531,Flick Input,"
二次元が大好きな大学生，通称2d君は，長年使用していたガラパゴス携帯からスマホに買いかえた．初めてスマホを操作した2d君は，文字入力の方式が，昔の携帯と少し違うことに気付いた．スマホでは，画面をタッチ・フリックできることを利用して，フリック入力という方式が採用されていたのである(フリックとは，「画面上で指を滑らせて弾く操作」を意味する)．フリック入力は，次に示すような文字入力方式である．
 
フリック入力では，図a(a)のように，0-9の10個のボタンにより入力を行う(#と*については，今回は省略している)．各ボタンには，図のようにあ行-わ行が1つずつ割り当てられている．
 










図a: スマホのボタン詳細





 
ある1つのボタンは，図a(b)に表す方法により操作することができる．つまり，
  ボタンを「タッチ」するだけだと，そのボタンに対応する「あ段」の文字を出力  ボタンを「左に向かってフリック」すると，「い段」を出力  ボタンを「上に向かってフリック」すると，「う段」を出力  ボタンを「右に向かってフリック」すると，「え段」を出力  ボタンを「下に向かってフリック」すると，「お段」を出力 

ということである．フリック入力の仕方を全てのボタンについて表すと図a(c)のようになる．「ん」を出力するためには，ボタン0を上側にフリックすることに注意してほしい．
 
あなたの仕事は，フリック入力の操作を示す文字列が与えられたとき，その操作の結果出力される文字列を求めることである．
 
"
p01532,Problem B War II,"
r大学の2d好きの人たち (2drespecters)は，a津大学で開催されるプログラミングの練習合宿に参加する．
この練習合宿では，参加者たちが自作のプログラミング問題を持ち寄り，練習に用いる．
今年は，2drespectersの面々は手軽に作問できるb問題の作問担当者に立候補したため，b問題担当者の座を争うことになった．
 
戦いの舞台は，とある自販機である．
この自販機は，90円のジュースを1種類だけ販売しており，お手頃価格で購入できることで有名である．
ただし，自販機には，10円玉と100円玉の2つの硬貨しか投入することができず，釣銭もこれらの硬貨でしか支払われない．
 
自販機の内部には，10円玉を保存するための10円玉ストレージと，100円玉を保存するための100円玉ストレージが備え付けられており，それぞれには，始めにt枚の10円玉とh枚の100円玉が保存されている．
自販機には，硬貨を一度に一枚しか投入できず，投入された硬貨は，硬貨に対応する内部のストレージに保存される．
自販機の残金表示は，始め0円になっており，硬貨を投入すると，投入した硬貨の金額分，自販機の残金が増加する．
硬貨を投入した結果，自販機の残金が，90円以上になったならば，1本の缶ジュースがジュースの取り出し口に出てくると同時に，自販機の残金から90円を引いた額とちょうど同じ額の硬貨が釣銭として釣銭の取り出し口に出てくる．
このときの釣銭は，内部のストレージにある硬貨で払える範囲で，できるだけ多くの10円玉を用いて支払われる．
釣銭が支払われた後，自販機の残金は0円に戻る．
 
ただし，この自販機は次の操作を行うと壊れる．
  釣銭を払えなくなったとき  10円玉ストレージの保存可能枚数の上限であるl枚を超える10円玉が保存されようとしたとき 

自販機の紹介が終わったので，n人の2drespectersのメンバーが参加したゲームについて説明する．
ゲームの開始時には，2drespectersのメンバーiはそれぞれ10円玉ti枚と100円玉をhi枚ずつ持っている．
このゲームでは，n人全員が順番に1枚ずつ硬貨を自販機に投入していく．
このとき，メンバー1，メンバー2，....，メンバーnの順で投入する．
n人全員が1枚ずつ硬貨の投入を終えたら，前回と同じ順番で順番に1枚ずつ硬貨の投入を行い，3週目以降も同様である．
硬貨の投入は，10円玉を持っている場合は必ず10円玉を投入し，10円玉を持っていない場合は100円玉を投入するものとする．
メンバーiが硬貨を投入したとき，釣銭の取り出し口に釣銭が出てきた場合は，その全ての釣銭をメンバーiが受け取り，取り出し口に何もない状態にしてから，次のメンバーのターンに移る．
 
このゲームは，次の条件を最初に満たしたメンバーが勝者となり，b問題の作問担当者となる．
  自販機を壊したとき  自分の順番に，硬貨を1枚も持っていないとき 

なお，自販機には無限にジュースが保存されており，100円玉ストレージには無限に100円玉を保存することができる．
 
あなたの仕事は，b問題担当者が誰になったかを求めるものである．
 
なけなしの硬貨を犠牲に，b問題を賭けた壮絶な戦いが??今，始まる．
ちなみに，購入したジュースはちゃんとb問題担当者が後でおいしくいただきます．
 
"
p01533,Acrophobia,"
高杉やよいは，超売れっ子アイドルである．
そんな彼女には，1つ苦手なものがある．
高いところだ・・・．彼女は，極度の高所恐怖症なのである．
彼女は今回，プロデューサーの不手際により，バラエティ番組で次のようなチャレンジに挑戦することになってしまった．
 
今回のロケは，とある忍者屋敷のとある一室で行われる．
この部屋の床には，正方形のタイルが敷き詰められており，いくつかのタイルが抜け落ちて穴になっている．
この穴から落ちると数メートル下の池にまっさかさまである．
やよいのチャレンジ内容は，この部屋の指定された場所からスタートし，部屋の中に置かれた全ての巻物を回収し，ゴール地点まで持っていくことである．
 
やよいは，部屋の中を以下のルールに従って移動できる．
  あるタイルから隣のタイルへ移動するとき，上下左右のタイルにのみ移動することができる．  穴に近くない場合，隣のタイルへ移動するためには，1秒だけ時間がかかる．  穴に近づいた場合，やよいは怖がってしまい図c-1のように移動時間がかかる．例えば，図中の矢印のように，[2][2]から[1][2]へ移動するためには，3秒かかる．  複数の穴が近くにある場合，最も近くにある穴に対して怖がる．  巻物を取るためにかかる時間は，0と仮定してよい． 











図c-1: 穴の近くの移動時間





 
やよいは，なるべく早くこのチャレンジを終わらせたいと考えている．
あなたの仕事は，このチャレンジを終了するための最短時間を求めるプログラムを書き，やよいを助けてあげることである．
 
"
p01534,Anipero 2012,"
アニペロサマーライブ，通称アニペロは，さまざまなアニメソングアーティストたちが集結する，日本国内最大のアニメソングライブイベントである．アニソンが大好きな2d君は，昨年に引き続き，今年もアニペロに行くことにした．
 
彼は，アニペロを楽しむために，すでにサイリウムをm本購入している．サイリウムとは，折ると化学反応で光るスティックである．リズムに合わせてサイリウムを振ることで，ライブを盛り上げることができ，自分の満足度も上昇する．今回，彼が購入した全てのサイリウムは，次のような性質を持つ．
  サイリウムは，折ってから時間が経過するにつれ暗くなっていき，10分で光を失う．  折ってから5分の間は，非常に明るい（以下，「レベル2」と呼ぶ）．  折ってから5分経過した後は，少し暗くなる（以下，「レベル1」と呼ぶ）．  振っても振らなくても，光を失うスピードは変わらない． 

2d君は，限られたサイリウムを曲によってうまく使い分けることで，今年のアニペロでどれだけの満足度を得られそうか，以下の問題を考えることにした．
 
彼は，ライブ中に流れるであろう曲をn曲予想している．
各曲の長さは，全て5分である．
n曲は，連続で流れ続け，曲と曲の間は，0分と考えてよい．
各曲には，以下の3つのパラメータが与えられる．
  ある曲に対して，レベル2を1本だけ振ったときに増える満足度  ある曲に対して，レベル1を1本だけ振ったときに増える満足度  ある曲において，1本も振らないときに増える満足度 

サイリウムを振ったからといって，満足度が増えるとは限らない．
振ったら逆に会場の雰囲気を乱して，満足度が減る場合もある．
振らない場合も，同様のことが言える．
 
サイリウムは，以下のルールに従って使用しなければならない．
  曲が始まる時点でのみ折ることができ，一度に何本でも折ることができる．サイリウムを折るのにかかる時間は無視してよい．  1曲で最大8本同時に振ることができる．  複数のサイリウムを振る際，以下の式により加算する満足度を計算する．  (レベル1の本数)×(レベル1の1本あたりの満足度)＋(レベル2の本数)×(レベル2の1本あたりの満足度)  1本もサイリウムを振らない場合は，1本も振らない場合の満足度だけを加算する．  一度振ると決めたサイリウムは，1曲が終了するまで持ち替えることはできない．  サイリウムは，振らずに置いておくことができる．また，サイリウムを全て使いきる必要はない． 

2d君は，ライブの曲予想までは済ませたが，それだけで疲れてしまって，問題を解く気になれなかった．
あなたの仕事は，彼の代わりに，今年のライブで得られそうな最大満足度を求めるプログラムを書くことである．
 
"
p01535,Markup language has Declined,"
わたしたち人類がゆるやかな衰退を迎えて，はや数世紀．
すでに地球は”ぷろぐらまー”のものだったりします．
平均身長170センチで7頭身，高い知能を持ち，こーでぃんぐが大好きなぷろぐらまーさんたち．
わたしは，そんなぷろぐらまーさんと人との間を取り持つ重要な職，国際公務員の” えすいー ”となり，故郷のニブンキの里に帰ってきました．
祖父の年齢でも現役でできる仕事なのだから，さぞや楽なのだろうとこの職を選んだのですが…．
 
ある日，ぷろぐらまーさんたちが渡してくれたのは，2枚の設計書のようなもの．
そのぷろぐらまーさん曰く，テキストとスクリプトを利用して，様々な情報を容易に交換できるのだと言います．
 
1枚目の設計書は，文章構造を表すファイルの説明でした．
このファイルのファイル名が.dmlで終わり，dmlファイルと呼ばれます．
 
dmlファイルの中は，タグと呼ばれる文字列で挟むことで文章の構造を表しています．
タグは，開始タグと終了タグが存在し，
 
の要素で表されます．
このとき，開始タグ名と終了タグ名は同じ文字列で表されます．
 
タグは入れ子構造にすることができ，&lt;taga&gt;&lt;tagb&gt;&lt;/tagb&gt;&lt;/taga&gt;のようにしても構いません．
また，&lt;taga&gt;&lt;tagb&gt;&lt;/taga&gt;&lt;/tagb&gt;のような構造は許されません．
 
dmlファイル内のタグ名はいくつか特殊なものを除いて任意の文字列です．
特殊なタグは以下の5つです．
  タグ名：dml  全てのタグの根を表します．  この開始タグは必ずファイルの先頭1度だけに現れ，このタグの終了タグはファイルの末尾に1度だけ出現します．  タグ名：script  必ずdmlタグで囲まれた中で先頭，もしくはこの終了タグに連続して現れます．  このタグは内部に入れ子構造を持つことが出来ません．  このタグに囲まれたスクリプトファイルを関連付けます．  このタグに囲まれた文字列は出力されません．  タグ名：br  表示に際し，改行を行います．  終了タグを持ちません．  タグ名：link  このタグは内部に入れ子構造を持つことが出来ません．  ユーザがこのタグに囲まれた文字列をクリックすると，現在の画面全てを消去し，その文字列で表されるファイル名のdmlファイルを表示します．  タグ名：button  このタグは内部に入れ子構造を持つことが出来ません．  ユーザがこのタグに囲まれた文字列をクリックすると，scriptタグによって関連付けられているスクリプトの中から，その文字列で表される名前のサブルーチンを実行します． 

タグ名は，アルファベットの大文字，小文字のみで表されます．
タグ名にスペースが現れることはありません．
dmlファイル中に現れる文字列は，アルファベットの大文字，小文字，スペース，'&lt;'，'&gt;'，'/'となります．
また，同名のタグが存在することもありえます．
 
scriptタグ以外で囲まれたタグ以外の文字列は，画面の左上(0, 0)から左詰めで出力され，
画面端かbrタグが出現するまで改行されません．
 
2枚目の設計書は，dmlファイル中のボタンを押した時の動作を表すdsファイルの説明でした．
dsファイルは，サブルーチンが並べられています．
 

セミコロンは式の終わりを表します．
 
例えば，dmlファイル中に，&lt;title&gt;?&lt;/title&gt;で囲まれた文章があるとします．
そのとき可能な式は以下の4つの代入式です．
 

visibleへの真偽値の代入は，そのタグの内容を表示するかしないかを変更します．表示され無くなった場合には，それ以降の文章は左に詰められます．
最初やlinkタグのクリックによって現在表示しているdmlファイルが書き変わった時，初期値は全てtrueになっています．
 
'!='は否定の代入を表します．
上の例では，1行目と4行目，2行目と3行目はそれぞれ等価です．
 
また式は，以下のように複数の値を同時に変更することもできます．
 
この時，右から順に処理が行われます．
すなわち，
 
の2行と等価です．
ただし，この表し方は便宜上であって，スクリプト内で文の最も右において，タグによる指定が行われることはありません．
また，
 
は
 
と等価です．
 
タグの指定方法は，'.'で絞り込むことによって行われます．
例えば，
 
は，dmlタグに囲まれた，bodyタグに囲まれた，titleタグを指します．
ただし，scriptタグとbrタグが絞り込みにつかわれたり，指定されることはありません．
 
このとき，絞り込まれる要素が直接囲まれているとは限らないことに注意して下さい．
例えば， &lt;a&gt;&lt;b&gt;&lt;c&gt;&lt;/c&gt;&lt;/b&gt;&lt;/a&gt; とあるとき，a.b.cでもa.cでもcを指すことができます．
 
また，同名のタグが存在する場合には，指定されたタグが1つとは限りません．
指定したタグが存在しない場合には，表示に影響は与えられませんが，複数の値を同時に変更する際に現れた場合には，存在している場合と同様に評価されます．
 
bnfは以下のようになります．
 

頭が痛くなりそうですね．ならないですか？そうですか．
 
ユーザは，最初のdmlファイルが表示された後，画面上の座標(x, y)をクリックします．
すると，その場所のlinkやbuttonに応じて，画面が変化します．
それ以外の場所をクリックしたらですか？なにも起こりませんよ．流石に．
 
さて，どんなものができるのでしょう？
大好物のえなじーどりんくでも渡しつつ，見守ることにします．
 
"
p01536,Transparent Mahjong,"
あなたは，闇に舞い降りた天災と噂されるギャンブラーの鷹巣さんと麻雀で対局することになった．
鷹巣さんは天災と噂されるだけあって，鷹巣牌という奇怪な麻雀牌を用いた対局を提案してきた．
 
麻雀とは，プレイヤーが互いに手牌という複数枚の牌を持ち合い，自分の手牌を相手よりもはやく，アガリの形にすることで勝利が確定するゲームである．
麻雀の牌の表側には，その牌が何であるかが描かれており，牌の裏側には，何も描かれていない．
よって，あなたが麻雀で対局するときは，あなたの手牌の表側をあなたの側に，裏側を対局者の側に向けるとよい．
こうすることで，あなたの手牌が何であるかは，あなたのみが知ることができる．
麻雀の醍醐味は，プレイヤーが互の手配を読み合い，それを楽しむことにある．
 
しかしながら，鷹巣牌は透明な麻雀牌である．
鷹巣牌は透明であるため，プレイヤーは互いに相手の手牌を知ることができる．
これでは，手配の読み合いを楽しむことができない．
 
「もはや，これは麻雀ではない．」と，鷹巣牌を用いることに納得できないあなたは，鷹巣さんとの紆余曲折を経た協議の結果，鷹巣牌と普通の麻雀牌を混ぜて対局することになった．
 
手始めに，あなたは，鷹巣さんの手牌のアガリ牌が何であるかを予想することにした．
鷹巣さんの手牌は，鷹巣牌と普通の牌から構成される．
問題の簡単のため，鷹巣牌と普通の牌は，1から12の12種類各4枚からなるものとする．
 
3n+2枚の牌からなる手牌について，次の3つの条件が満たされるとき，その手牌はアガリである．
  同じ数字を組み合わせた牌の組が1つ存在する  残りの3n枚の牌は，3個の数字の組合せのnグループになる  それぞれのグループは，同じ数字を3つ組み合わせたものか，3つの連続する数字を組み合わせたものである 

例えば，
 
のような14枚の牌は，全て鷹巣牌で構成されている．
この場合，次のように2つの牌の組合せ1つと4つのグループを作ることができ，アガリである．
 

次に，普通の牌と鷹巣牌が混ざった手牌の例を挙げる．
 
のような14枚の牌は，12枚の鷹巣牌と2枚の普通の牌(*)で構成されている．
この場合，次のように2つの普通の牌が8と9であるかもしれないので，2つの牌の組合せ1つと4つのグループを作ることができ，アガリであるかもしれない．
 
同じ例について，次のように2つの普通の牌が8と8であるかもしれないので，以下のような形のアガリであるかもしれない．
 
しかし，7という同じ牌は4枚までしか使えないので，以下のような形のアガリであることはない．
 

鷹巣さんの3n+1枚の手牌が入力として与えられたときに，
鷹巣さんの手牌に1枚の牌を加えて，3n+2枚の手牌を作ることを考える．
このときに，3n+2枚の手牌がアガリになり得るような加える1枚の牌(アガリ牌)を全て求めよ．
 
"
p01537,Code Art Online,"
コードアートオンライン（cao）は，様々な問題をプログラミングによって解くことにより，冒険を進めて行くオンラインrpgである．
caoは，世界初のバーチャルリアリティ空間を実現したゲームであったこともあり，大人気の内に完売し，ゲームを購入したユーザ達はこの世界を楽しむはずであった．
しかし，ゲームにダイブしたプレイヤー達は，ゲームマスターから恐るべき託宣を聞かされる．
 
「君たちプレイヤーの内の誰かが，ラストダンジョンのラストプロブレムを解かない限り，この仮想空間から抜け出すことはできない．そして，この世界での，waやtle・reは，現実世界での死を意味する．心して問題にとりかかってほしい．」
 
あなたも，caoのプレイヤーの内の1人で，このゲームをクリアして現実世界に戻るために，ゲーム攻略に全力を尽くしている．
ある日，あなたは次のような問題に直面することとなった．
 
今回，新たなダンジョンを攻略するために，n人のメンバーでパーティが組まれた．
あなたもこのパーティの内の1人である．
今から攻略するダンジョンに突入するためには，崖から見える穴を通過しなくてはならない．
無事に穴を通過できれば，ダンジョンに突入できるが，穴に突入できず他の部分に触れてしまうと，死が待っている．
さらに，1つの穴に誰かが通ると，その穴は閉じてしまうため，1人1人別々の穴に入らなければならない．
 
穴や人は，二次元平面上で考えることとする．
穴の形は，図g-1のような，大小様々な円である．入力では，半径の長さが与えられる．
 










図g-1: 穴の形





 
人の形は，図g-2のように人の断面が多角形で与えられる（凸とは限らない）．
入力では，多角形の形を表すために，頂点が反時計まわりで与えられる．
多角形の任意の三点は，1直線上に並ばないと仮定してよい．
さらに，頂点を構成する目的以外で，多角形の線分同士が交差することはないものとする．
穴に通すために，自由に回転してよい（ただし，z軸方向への回転は禁止する）．
人を表す多角形の頂点が，穴の円周上にある場合でも，穴を通過できるものとする．
 










図g-2: 人の形





 
パーティの中で最もアルゴリズムスキルが高いあなたは，みんなで無事に穴を通過できるかどうかの判定問題を解くことにした．
もし，無事に通過できるなら，どの人がどの穴を通過すればいいのか表示せよ．
 
※今回のコンテストで死ぬことはありませんが，間違ったら死ぬつもりで解いてください．
 
"
p01538,Kakezan,"
太郎君はかけざんを習いたての小学生です。なんとなく、彼はかけざんを気に入っているので、数字を見かけるとかけざんをしたくなります。そんな彼はここのところ、次のような処理を0以上の整数に施すことが好きなようです。


(処理の流れ)
 手順1. ある0以上の整数nが10進数表示で一けたならばそこで処理を終了する。そうでなければ手順2に進む
 手順2. 10以上の整数nを10進数表示をするとどこかの桁の間に切れ目を入れて二つの数字に分解することが可能である(例えば2012-&gt; 20,12)。このような切り方としてありうるものに対して,得られた二つの数字を掛け合わせて最も大きいものを次のnとして手順1に戻る。(詳しくは下記の&quot;手順2に関する補足を参照&quot;)
 
太郎君はこの処理を気に入っているようですが、何回手順2の操作を繰り返せばよいのか大きい数字だと予想ができず、もしかしたら無限回行われなければならないかもしれないと思っています。そこで、太郎君の兄であり大学生であるあなたに0以上の整数nに対してこの手順2を何回しなければならないかを聞いてきました。
 
あなたの仕事は、q個の0以上の整数n1..nqが与えられるので、それぞれの整数で処理の終了までに何回の手順2が施されるかを求めることです。その際にもし無限回の手順が必要ならば、-1を出力してください。
 

"
p01539,A Holiday of Miss Brute Force,"
全探索お姉さんはとても優秀な女性である。
お姉さんは格子状の道の経路の数え上げを数千程度なら簡単に数え上げてしまう。

あなたと全探索お姉さんは今、六角形のタイルが敷き詰められた部屋にいる。
お姉さんは初めて見る六角形にとても興奮している様子である。
六角形の並びを座標に表すことに不慣れなお姉さんは図1のような座標系で部屋を表した。
 
あなたはこの座標系上である地点からある地点まで移動したい。
しかし、お姉さんは 1 分ごとに動きたい方向をあなたに指示する。
いつものお姉さんなら同じ座標の場所を通らないようにあなたに移動の指示を出すだろう。
しかし、この座標系に不慣れなお姉さんは|x&times;y&times;t|(x：x 座標、y：y座標、t:最初の指示からの経過時間[分])を 6 で割った余り
に対応する方向（図で示す番号と対応）を指示するだけで、まったくのでたらめな方向にあなたを誘導する。
 
お姉さんを傷つけたくないあなたは、お姉さんの指示をできるだけ守りつつ目的地までたどり着きたい。
あなたは許された行動は下の 7 つの行動である。
 方向 0 へ 1 タイル移動
 方向 1 へ 1 タイル移動
 方向 2 へ 1 タイル移動
 方向 3 へ 1 タイル移動
 方向 4 へ 1 タイル移動
 方向 5 へ 1 タイル移動
 その場に留まる
 
お姉さんが指示を出した直後にあなたはこれら行動のうちの必ず1つを行う。

部屋には家具があり家具が配置されているタイルの中に移動することはできない。
また、y 座標の絶対値が ly を超えたり x 座標の絶対値が lx を超えるような移動は許されていない。
しかし、お姉さんはそのような移動を指示することがある。
指示を無視するとはお姉さんが示した方向と異なる方向へ移動するか、
もしくは、その場に留まることである。

目的地にたどり着くために最小で何度指示を無視すれば良いかを出力せよ。
目的地にたどり着くことが不可能な場合は -1 を出力せよ。
 


"
p01540,Treasure Hunt,"
太郎君はある広場にお宝を探しにやってきました。この広場にはたくさんのお宝が埋められていますが、太郎君は最新の機械を持っているので、どこにお宝が埋まっているかをすべて知っています。広場はとても広いので太郎君は領域を決めてお宝を探すことにしましたが、お宝はたくさんあるためどのお宝がその領域の中にあるかすぐにわかりません。そこで太郎君はその領域の中にあるお宝の数を数えることにしました。
 

"
p01541,hosonagaitokoro,"
高橋君は苹果(りんご)ちゃんとニューヨークを観光することになりました。
高橋君は観光するところに特に希望はなかったのですが、苹果ちゃんの熱烈な誘いにより、以下の地図にあるような&quot;ほそながいところ&quot;を観光することに決まりました。
 
この&quot;ほそながいところ&quot;はとても細長く、直線とみなすことができます。また、&quot;ほそながいところ&quot;には片方の端にスタート地点が、もう片方の端にゴール地点があり、スタート地点からゴール地点へ向けて何台かの観光用の馬車が走っています。この馬車は以下のようなルールに従って運行されています。
 馬車はn台あり、すべての馬車はスタート地点から出発してゴール地点まで進みます。
 以下のすべての場合において馬車の大きさは無視できます。
 途中で速度を変更することが難しいため、すべての馬車は馬車はそれぞれ1kmあたりをsi(siは1以上の整数)分の等速で進みます。
 馬車には出発する順番が定められており、この順番を守らなければなりません。ただし、ゴール地点に到着する順番について特に決まりはありません。
 複数の馬車はスタート地点を同時に発車することはできず、ある馬車が発車すれば次の馬車が発車するまでに1分以上間をあけなければなりません。
 ゴール地点は十分に広いため、何台の馬車が同時に到着しても構いません。また、ゴール地点に到着した馬車はそこで止まり、ずっとゴール地点にいます。
 &quot;ほそながいところ&quot;は大変細長いため馬車は基本的に同じ場所に2台並ぶことはできません。しかし、特別に&quot;すこしひろいところ&quot;がm箇所あり、そこでのみ2台まで並ぶことができ、ある馬車が別の馬車を追い抜くことが可能です。
 
また、先述した&quot;ほそながいところ&quot;と&quot;すこしひろいところ&quot;について、以下の制約を満たします。
 スタート地点からゴール地点までは直線的に結ばれており、その距離は(dist)km(distは1以上の整数)
 m箇所の&quot;すこしひろいところ&quot;はスタート地点からゴール地点までのどこかにあり、それらはいずれもスタート地点およびゴール地点とは重なりません。また、それぞれの&quot;すこしひろいところ&quot;はスタート地点からちょうど(di)km(diは1以上の整数)の地点にあります。
 
これを聞いた高橋君は、以上に述べた馬車運行のルールを守りつつ馬車の出発時刻を調整することにより、1台目の馬車が発車してからすべての馬車が到着するまでにかかる時間を小さくできることを見抜きました。

高橋君の出した結果を知るために、
馬車の台数n , それぞれの馬車の速度に関するパラメータsi,&quot;ほそながいところ&quot;上に存在する&quot;すこしひろいところ&quot;の総数m ,それぞれの&quot;すこしひろいところ&quot;のスタート地点からの距離di が与えられるので、
1台目の馬車が発車してからすべての馬車が到着するまでにかかる時間の最小値を求めるプログラムを書くことがあなたの仕事です。


なお、苹果ちゃんは&quot;ほそながいところ&quot;での観光を存分に楽しみましたが、高橋君はこの観光の後には「ほそながかった…」としかつぶやかなかったそうです。
 


"
p01542,Lost Number,"
時は3xxx年、高度に発達した文明は停滞期を迎えていた。歴史家たちはこの状況を打開しようと過去の叡智を学ぶことにした。注目したのはコンピュータ創世期の天才が残した資料である。この資料には計算式が書かれておりその計算結果が知りたいのだが、残念ながらその一部の文字が薄れて読めなくなっている。仕方がないので計算結果としてありえる最も大きい数を求めることにした。

計算式は2進数で書かれており、演算は足し算・引き算・掛け算の3種類である。括弧も用いられているが括弧内が数字のみであることはない。正確には以下のbnfで定義された文法を満たしている必要がある。
 
当時のコンピュータの計算能力の限界により、数字は0以上210未満の整数であり計算中もこの範囲を出ることはない。ただし計算は括弧内を先に行い、掛け算は足し算・引き算より先に行う。それ以外の場合は左から順に計算する。
 

"
p01543,marukaite,"
太郎君は小学生で、チラシの裏に落書きをしています。

ある時、太郎君は次のゲームを思いつきました。
 n&times;nの格子状のマス目を書いておきます。
 それぞれのマス目の初期状態は、丸印が書かれているか、書かれていないかのどちらか一方です。
 これらの丸印を消したり書いたりして最終的にどの一列を見ても必ずちょうど1つのみの丸印が、どの一行を見ても必ず1つのみの丸印が存在するようにすることが目標であり、この状態にすればゲームをクリアしたことになります。
 
太郎君はこのゲームを思いつきましたが、太郎君はこのゲームをクリアするのに大変時間がかかってしまいます。そこで、大学生であるあなたに助けを求めました。

太郎君の兄であり大学生であるあなたの仕事は以下の通りです。
厳密な状況を考えるために、あるマス目に丸印を書き込むコスト、あるマス目にある丸印を消すコストをあなたは導き出しました。このコストを用いてこのゲームをクリアするためにかかる操作のコストを最小化するような手順を考える。
このとき、最小のコストおよびそのコストを達成するような手順を出力するプログラムを書いてください。
出力については、最小コストを達成する手順なら、どのような操作、順番でも出力してもよいものとする。
 

"
p01544,Longest Increasing Sequence,"
時は過ぎて太郎君は高校生になりました。
大学生だったお兄さんの影響も受け、コンピューターサイエンスに興味を持ち始めました。

太郎君はコンピューターサイエンスの教科書を読み進め、「最長増加部分列問題」という有名問題があることを知りました。太郎君はこの問題のことを理解しましたが、自分でも類似問題が作れないものかと気になりました。

そこで太郎君は試行錯誤の結果に次のような問題を作りました。
 n個の整数で構成される数列aがある
 m-1個の区切りを入れて、数列aをm個の数列に分解する。なお、分解後のそれぞれの数列は1つ以上の数を必ず含まなければならない。
 このm個それぞれの数列内の整数をすべて足し合わせた結果出来上がるm個の数を、元の数列の順に配置すると厳密な増加列になっている(つまり、出来上がる数列はbi &lt; bi+1をみたす)ようにしたい。
 目標は最終的にできる数列bの長さmを最大化することである。
 
例えば、数列aが{5,-4,10,-3,8}の場合を考えてみる。
区切りの位置を表す数列cを用意し、c={2,4}とする。
このとき、数列aは(5,-4),(10,-3),(8)の部分に分かれ、これらの内部を足し合わせるとそれぞれ1,7,8となり、出来上がる数列bは{1,7,8}となる。
 

太郎君はこの問題について&quot;最長増加列問題&quot;と名付け、これを解くアルゴリズムも考えました。
そして社会人になったあなたにチェックをしてほしいと連絡をしました。

あなたの仕事は、成長した太郎君の作った問題を解くプログラムを作ることです。
チェックするのが仕事なので、m-1個の区切りの位置も出力します。
なお、最適なmに対してこのような区切り方が複数考えられる場合もありますが、このmが正しく出力されていれば、考えられるもののうち一つを出力すればよいです。
 

"
p01545,House Moving,"
太郎君は引っ越しをすることになりました。太郎君はたくさんの荷物を持っているので、荷物の運搬を引っ越し業者に頼むことにしました。荷物はいろいろな重さの物があるので、わかりやすいように軽い方から順番に並べて置いてもらうように頼みましたが、引っ越し業者の人はばらばらの順番で荷物を置いていってしまいました。そこで太郎君は荷物を並べ替えようとしましたが、荷物は重いので運ぶのには体力が必要です。それぞれの荷物は今ある場所から他の荷物の間や荷物の端など好きな場所に運ぶことができますが、ある荷物を運ぶにはその荷物の重さと同じだけ体力を使います。太郎君はあまり体力がないので、できるだけ体力を使わずに荷物を軽い方から順番に並べる方法を考えることにしました。
 

"
p01546,Sports Days 2,"
会津大学附属小学校（会津大小）は日本有数の競技プログラマー養成校として有名である。
もちろん、運動会に参加しているときでさえアルゴリズムの修行を欠かせない。
競技プログラミング部部長のあなたはもちろんこの大会でも勝利したい。
今回はある競技に注目する。
 
ある競技とは会津大小で行われている伝統的な競技だ。
校庭にコーンがv個置いてある。
コーンのいくつかのペアは白線で描かれた矢印で結ばれている。
矢印の先は片側だけについており、整数が併記されている。
同じコーンのペアがの複数の矢印に結ばれている場合もある。
 
競技者は任意にコーンを選び、移動開始する。
移動は競技者がいるコーンから矢印の上をその向きに移動し、次のコーンへ移る。
同じコーン、同じ矢印を何度も辿っても良い。
競技者はコーンからコーンへの移動後、さらに移動するか移動を終了をするかを選択することができる。
 
この競技の目的は矢印を辿ることにより、スコアをk以上にすることである。
スコアは矢印を辿る度に併記された整数値が加算されていく。
より少ない経由する矢印の本数でスコアをk以上にした競技者が勝利となる。
矢印が同じ本数の場合はより高いスコアの競技者が勝利となる。
 
このルールで最適な動きを競技者が行った場合、何本の矢印を経由すべきか出力せよ。
また、経由した矢印の数が100本以下の場合、経由すべきコーンを順にすべて出力せよ。
最適な動きが複数存在する場合があるが、どの動きの結果を出力しても良い。
スコアをk以上にする動きが存在しない場合は-1を出力せよ。
 
また、コーンにはすべて0からv-1までの番号が振られており、
色はすべて緑色（意味深）である。
 

"
p01547,Final Defense Line,"
たびたび未確認生物に侵略されるようになった某国では重要施設を新型防衛兵器で保護することにした。
この兵器は多角形の領域に特殊なガスを充満させることで未確認生物にダメージを与えることができる。未確認生物が侵攻する途中でガスの濃度が変わると、濃度の差の絶対値のダメージを与える。ガスの濃度が同じ領域を動いているときはダメージは一切発生しない。
現在の技術ではガスの濃度は一定にしかできないので、某国は新型防衛兵器を複数投入することにした。全ての兵器でガスの濃度は同じであり、複数の兵器の領域に含まれる部分は濃度が足し合わされる。
未確認生物の出現地点と重要施設の位置を元に、未確認生物が重要施設まで侵攻する時に受けるダメージの最小値を求めて欲しい。
ただし、未確認生物の侵攻ルートに多角形の頂点や他の多角形との交点は含まれないものとする。また、多角形の辺上を辺にそって侵攻することはない。
 

"
p01548,Audition,"アイドル---それは女の子達の永遠の憧れ。しかし、頂点に立てるのはほんの一握り。そんなサバイバルな世界に、あなたはアイドルプロデューサーとして足を踏み入れることになりました。そして、今日はあなたの担当アイドルを連れて大事なオーディションに挑むことになりました。
 オーディションの決め手になるのはビジュアル、ダンス、ボーカルの 3 要素です。オーディション中には m 回のアピールタイムがあり、 1 回のアピールタイムごとに各アイドルはビジュアルアピール、ダンスアピール、ボーカルアピールのいずれかを行うことが出来ます。ビジュアルアピールを行うとそのアイドルのビジュアルポイントは彼女の持ってるビジュアル値だけ、ダンスアピールを行うとダンスポイントは彼女の持ってるダンス値だけ、ボーカルアピールを行うとボーカルポイントは彼女の持ってるボーカル値だけ上昇します。
 m 回のアピールが終了した後、n 人のアイドルのうちビジュアルポイントの高いほうから 3 人は 5 オーディションポイント、ダンスポイントの高いほうから 3 人は 3 オーディションポイント、ボーカルポイントの高いほうから 3 人は 2 オーディションポイントを獲得します。一方、ビジュアルポイントが最下位だとオーディションポイントは 1 点減点、ダンスポイントが最下位だとオーディションポイントは 1 点減点、ボーカルポイントが最下位だとオーディションポイントは 1 点減点となります。（オーディションポイントが1以下でもそこから 1 点減点）。
 オーディションの始めに、各アイドルのビジュアルポイント、ダンスポイント、ボーカルポイントはそれぞれ 0 です。あなたはアイドル 1 のプロデューサーで、アピールタイムごとにどのアピールを行うか指示することが出来ます。アイドル 1 以外のアイドルはアピールタイムごとにランダムに等確率にどれかのアピールを行います（つまりそれぞれ 3 分の 1 の確率で行われる）。アイドル 1 のビジュアル、ダンス、ボーカルのポイントが他のアイドルと等しい場合、アイドル 1 は常に下位とします。アイドル 1 の獲得するオーディションポイントの期待値が最大になるように指示したときの期待値を求めて下さい。アイドルの運命は、あなたの指示にかかっています！
 ちなみに、指示はオーディションが始まる前に全て行って、その後オーディション中の指示の変更は出来ないものとします。つまり、他のアイドルが、オーディションが始まってからのアピールでどのアピールをしかたを見てから、その場合においての期待値が最大となるような指示を出す、ということは出来ないものとします。
 
"
p01549,Zero Division Checker,"森下さんは困っていました... 姉原さんにプログラムを書いてもらったのですが、そのプログラムがクラッシュするのです。
 姉原さんに書いてもらったのは、逆ポーランド記法の式を読んで、その計算結果を出力するプログラムで、クラッシュログによると、 0 で割り算をしてしまったのが原因のようです。これは、森下さんが間違った式を入力してしまったからかもしれませんし、もしかしたら、もしかしたら、姉原さんの書いたプログラムにバグがあるのかもしれません。
 姉原さんの書いたプログラムを読んでみようと思いましたが、姉原さんのプログラムはアセンブリというよくわからないことばで書かれているようで、見ているだけで頭がガンガンしてきます。
 そこで、森下さんはあなたに、式が間違っていないかどうか調べるプログラムを書いてもらうことにしました。式が間違っている、とは、その式に従って計算すると、 0 での割り算をしてしまう可能性のあることをいいます。
 なお、姉原さんの書いたコードはとてもふるいコンピューターで動くもので、加減乗除は整数で行い、結果は 8 bit の符号なし整数として保存されます。
例えば、255+1 は 0 になってしまうし、3/2 は 1 になります。
 あ、姉原さんにはないしょですよ。
 

"
p01550,Card,"今 n 枚の数字が書かれたカードがあります。これらの一部または全部を適当に並べて数字を作ることを考えます。この時作られる数字を全て足した数を求めて下さい。
 例えば、 1 と 2 があったら、作られる数字は 1, 2, 12, 21 の 4 つなので、全て足した数は 36 になります。並べた結果同じ数字が出来ても違う並べ方だとしたら別々に足します。たとえば、 1 というカードと 11 というカードがあったら並べて 111 になる並べ方が2通りありますがそれぞれ別のものとして足し合わせます。カードの中にリーディングゼロのカードはありませんし、リーディングゼロになる数字は認めません。答えを1,000,000,007 で割ったものを出力してください。
 

"
p01551,DNA,"遺伝子は、a, t, g, c からなる文字列です。
この世界の遺伝子は奇妙なことに、ある構文規則に従うことが知られています。
 構文規則は、次のような形で与えられます。
 記号は非終端記号または終端記号のどちらかです。
非終端記号は小文字文字列で表され、終端記号はa, t, g, cのうちのいくつかの文字が、&quot;[&quot;と&quot;]&quot;に囲まれた文字列で表されます。
 構文規則の例は次のようになります。
 &quot;非終端記号i: 記号i_1 記号i_2 ... 記号i_ni&quot; を非終端記号 i のルールと呼び、ルールは、構文規則に現れる各非終端記号に対して、ちょうど 1 つづつ存在します。
 文字列 s が非終端記号 i に「マッチする」とは、 s = s1 + s2 + ... + sni となるような s の部分文字列 {sj} が存在し、sj (1 &le; j &le; ni)がルール内の記号 j にマッチすることをいいます。
 文字列 s が終端記号に「マッチする」とは、文字列が 1 文字からなり、その文字が終端記号を表す文字列に含まれることをいいます。
 文字列が構文規則に従うとは、非終端記号 1 にその文字列がマッチすることをいいます。
 ルール i は、記号のうちに、非終端記号 j (j &le; i) を含みません。
 構文規則と、4つの整数 na , nt, ng, nc が与えられます。
構文規則に従い、a をちょうど na 個、t をちょうど nt 個、g をちょうど ng 個、c をちょうど nc 個含むような遺伝子の総数を 1,000,000,007 で割った余りを求めなさい。
 


"
p01552,YAML,"yaml (yaml ain't markup language)とは、オブジェクトを文字列で表現する形式の一つです。
 yamlのサブセットで表されたオブジェクトと、プロパティを指定するクエリが与えられるので、指定されたプロパティの値を答えてください。
 

"
p01553,Hakone,"日本のお正月の風物詩に箱根駅伝があります。箱根駅伝は、各チーム 10 人の走者が中継所ごとに襷をつなぎながらゴールを目指すというものです。テレビの放送では中継所で各チームの通過順位と共に前の中継所からの順位変動が表示されます。そこで、それを見て前の中継所の各チームの通過順として考えられるものが何通りあるか答えてください。ありえた通過順の数は非常に大きくなりうるので、1,000,000,007 で割った余りで答えて下さい。
 
"
p01554,Kagisys,"ある部屋ではicカードを用いて鍵を開け閉めする電子錠システムを用いている。
このシステムは以下のように動作する。
 各ユーザーが持つicカードを扉にかざすと、そのicカードのidがシステムに渡される。
システムはidが登録されている時、施錠されているなら開錠し、そうでないのなら施錠し、それぞれメッセージが出力される。
idが登録されていない場合は、登録されていないというメッセージを出力し、開錠及び施錠はおこなわれない。
 さて、現在システムにはn個のid(u1, u2, ……, un)が登録されており、施錠されている。
m回icカードが扉にかざされ、そのidはそれぞれ順番にt1, t2, ……, tmであるとする。
この時のシステムがどのようなメッセージを出力するか求めよ。
 

"
p01555,FizzBuzz,"fizzbuzzとは、1以上の整数を順に、以下のルールに従って発言していくゲームである。
  3で割り切れる時には「fizz」
   5で割り切れる時には「buzz」
   3と5の両方で割り切れる時には「fizzbuzz」
   それ以外の時はその数字
  ゲームの進行状況の例を以下に示す。
 1, 2, fizz, 4, buzz, fizz, 7, 8, fizz, buzz, 11, fizz, 13, 14, fizzbuzz, 16, …
 得られた発言を1つの文字列に結合し得られた文字列をfizzbuzz stringと呼ぶ。インデックスsが与えられるので、fizzbuzz stringのs文字目から20文字を出力せよ。但し、インデックスは1から始まるものとし、得られた文字列の長さは十分に大きい（s+20以上）としてよい。
 

"
p01556,ConvexCut,"n個の頂点からなる凸多角形が与えられる。各頂点の座標は反時計周りに(x1, y1), (x2 ,y2), ……, (xn, yn)で表わされる。
点pを通るどのような直線で凸多角形を切断しても、切断後に得られる2つの凸多角形の面積が等しいような点pの座標を求めよ。
 

"
p01557,ReverseSort,"1 &sim; nまでのn個の数字の順列a1, a2, ……, anが与えられる。
この順列に対して区間[i, j](1 &le; i &le; j &le; n)の数字の順序を逆順にする操作reverse(i, j)を行うことが出来る。
例えば、[1, 2, 3, 4, 5]に対してreverse(2, 4)を適用すると[1, 4, 3, 2, 5]となる。
最小で何回の操作を行えば順列を昇順にソートされた状態にすることが出来るか計算せよ。
 

"
p01558,Substring,"長さnの文字列s=s1,s2,…,snおよびm個のクエリが与えられる。
各クエリqk (1 &le; k &le; m)は、&quot;l++&quot;, &quot;l--&quot;, &quot;r++&quot;, &quot;r--&quot;の4種類のいずれかであり、
k番目のクエリqkに対してl[k]とr[k]を以下で定義する。
  l++：l[k]=l[k-1]+1,r[k]=r[k-1]
   l--：l[k]=l[k-1]-1,r[k]=r[k-1]
   r++：l[k]=l[k-1],r[k]=r[k-1]+1
   r--：l[k]=l[k-1],r[k]=r[k-1]-1
  但し、l[0]=r[0]=1である。
 この時、m個の部分文字列
sl[k], sl[k]+1, …, sr[k]-1, sr[k] (1 &le; k &le; m)
について、何種類の文字列が作られるかを答えよ。
 

"
p01559,MinimumCostPath,"nxnの方眼がある。
 
(n=3の場合の図)
 隣接するマス目に移動するにはコストが1かかる。ただし、斜めに移動することは出来ない。
また障害物があるマス目がm個あり、そのマスに入ることは許されない。
マス(1, 1)からマス(n, n)に最小のコストで移動する方法は何通りあるか。
答えは大きくなることがありうるので、1000000009(=109+9)でmodを取って出力せよ。
 

"
p01560,Enumeration,"n個の整数a1, a2, …, anとn個の整数p1, p2, …, pn、整数mが与えられる。k番目の整数akをpk[%]の確率で選ぶ、という操作を各k(1 &le; k &le; n)について行い、0個以上n個以下の整数を選び出す。1以上m以下の整数の中で、選ばれた整数の少なくとも1つで割り切れるものの個数の期待値を求めよ。
 

"
p01561,A Two Floors Dungeon,"it was the last day of the summer camp you strayed into the labyrinth on the way to komaba campus, the university of tokyo. 
the contest has just begun.
your teammates  must impatiently wait for you.
so you have to escape from this labyrinth as soon as possible.

the labyrinth is represented by a grid map.
initially, each grid  except for walls  and stairs is either on the first floor or on the second floor.
some grids have a switch which can move up or down some of the grids (the grids on the first floor move to the second floor, and the grids on the second floor  to the first floor).

 in each step, you can take one of the following actions:

  move to an adjacent grid (includes stairs) on the same floor you  are now in.
   move to another floor (if you  are in the stairs grid).
   operate the switch (if you  are in a grid  with a switch).
  luckily, you have just found a map of the labyrinth for some unknown reason.
let's calculate the minimum step to escape from the labyrinth, and go to the place your teammates are waiting!

 
"
p01562,Area Folding," you are given one polygonal line, which is a collection of line segments.
your task is to calculate the sum of areas  enclosed by the polygonal line.
 
a point is defined to be &quot;enclosed&quot; if and only if the point is unreachable without crossing at least one line segment from the point at infinity.
 

"
p01563,Connect,"you are playing a solitaire puzzle called &quot;connect&quot;, which uses several letter tiles.
 there are r &times; c empty cells.
for each i (1 &le; i &le; r), you must put a string si (1 &le; |si| &le; c) in the i-th row of the table, without changing  the letter order.
in other words, you choose an integer sequence {aj} such that
1 &le; a1 &lt; a2 &lt; ... &lt; a|si| &le; c
, and put the j-th character of the string si in the aj-th column (1 &le; j &le; |si|).
 for example, when c = 8 and si = &quot;icpc&quot;, you can put si like followings.
 '_' represents an empty cell.
 for each non-empty cell x, you get a point equal to the number of adjacent cells which have the same character as x.
two cells are adjacent if they share an edge.
 calculate the maximum total point you can get.
 

"
p01564,Do use segment tree,"given a tree with n (1 &le; n &le; 200,000) nodes and a list of q (1 &le; q &le; 100,000) queries,
process the queries in order and output a value for each output query.
the given tree is connected and each node on the tree has a weight wi (-10,000 &le; wi &le; 10,000).
 each query consists of a number ti (ti = 1, 2), which indicates the type of the query , and  three numbers ai, bi and ci (1 &le; ai, bi &le; n, -10,000 &le; ci &le; 10,000).
depending on the query type, process one of the followings:
  (ti = 1: modification query)
change the weights of all nodes on the shortest path between ai and bi (both inclusive) to ci.
   (ti = 2: output query) 
first, create a list of weights on the shortest path between ai and bi (both inclusive) in order. after that, output the maximum sum of a non-empty continuous subsequence of the weights on the list. ci is ignored for output queries.
  


"
p01565,Move on Dice,"there is a cube  on a rectangle map with h-rows and w-columns grid.
two special squares a start and a goal are marked on the map.
initially, the cube is on the start square. let's repeat to roll it and take it to the goal square.
rolling the cube means  to select one of four edges which touch the map, and push the cube down without detaching the edge from the map.
that is, there are four  directions you can move the cube toward.
 directions where we can roll the cube are limited depending on each square.
an instruction is written in each square and represented by a single character as follows:
 regardless of instructions, it is not allowed to roll the cube to outside of the map.


 on each face of the cube, a string is written.
let's output the string which concatenates strings written  on the  top face seen during the rollings from the start square to the goal square. 
since there may be multiple paths  that take the cube to the goal square, choose the minimal string in ascending lexicographic order.
 please note that there are cases where  no path exists from the start to the goal, or the cases you can make the lexicographically minimal string infinitely longer.
 

"
p01566,Pipeline Plans,"there are twelve types of tiles in fig. 1.
 you were asked to fill a table with r &times; c cells with these tiles.
r is the number of rows and c is the number of columns.
 how many arrangements in the table meet the following constraints?
  each cell has one tile.
   the center of the upper left cell (1,1) and the center of the lower right cell (c, r) are connected by some roads.
   fig. 1: the types of tiles 

 

"
p01567,Presentation,"you are a researcher investigating  algorithms on  binary trees.
binary tree is a data structure composed of branch nodes and leaf nodes.
every branch nodes have left child and right child, and each child is either a branch node or a leaf node.
the root of a binary tree is the branch node which has no parent.
 you are preparing for your presentation and you have to make a figure of  binary trees using a software.
you have already made a figure corresponding to a binary tree which is composed of one branch node and two leaf nodes (figure 1.)
however, suddenly the function of your software to create a figure  was broken.
you  are very upset because  in five hours you have to make the presentation in front of large audience.
 you decided to make the figure of the binary trees using only copy function, shrink function and paste function of the presentation tool.
that is, you can do only following two types of operations.
  copy the current figure to the clipboard. the figure copied to the clipboard before is removed.  
    paste the copied figure (with shrinking, if needed), putting the root of the pasted figure on a leaf node of the current figure.  you can paste the copied figure multiple times.  
   moreover, you decided to make the figure using the minimum number of paste operations because paste operation is very time cosuming.
now, your job is to calculate the minimum possible number of paste operations to  produce the target figure.
  figure 1: initial state for example, the answer for the instance of sample 1(figure 4) is 3, because you can  produce the target figure by following operations and this is minimum.
  figure 2: intermediate 1  figure 3: intermediate 2  figure 4: goal 

"
p01568,Repairing,"in the international city of pipe construction, it is planned to repair the water pipe at a certain point in the water pipe network.
the network consists of water pipe segments, stop valves and source point.
a water pipe is represented by a segment on a 2d-plane and intersected pair of water pipe segments are connected at the intersection point.
a stop valve, which prevents from water flowing into the repairing point while repairing,  is represented by a point on some water pipe segment.
in the network, just one source point exists and water is supplied to the network from this point.
 of course, while repairing, we have to stop water supply in some areas, but,
in order to reduce the risk of riots, the length of water pipes stopping water supply must be minimized.
what you have to do is to write a program to minimize the length of water pipes needed to stop water supply when the coordinates of end points of water pipe segments, stop valves, source point and repairing point are given.
 

"
p01569,Sun and Moon,"in the year 20xx, mankind is hit by an unprecedented crisis.
the power balance  between the sun and the moon  was broken by the total eclipse of the sun, and the end is looming!
to save the world, the secret society called &quot;sun and moon&quot; decided to perform the ritual to balance the power of the sun and the moon called &quot;ritual of sun and moon&quot;.
 the ritual consists of &quot;ritual of sun&quot; and &quot;ritual of moon&quot;. &quot;ritual of moon&quot; is performed after &quot;ritual of sun&quot;.
a member of the society is  divided into two groups, &quot;messengers of sun&quot; and &quot;messengers of moon&quot;.
each member has some offerings and magic power.
 first, the society performs &quot;ritual of sun&quot;.
in the ritual, each member sacrifices an offering.
if he can not sacrifice an offering here, he will be killed.
after the sacrifice, his magic power is multiplied by the original number of his offerings.
each member must perform the sacrifice just once.
 second, the society performs &quot;ritual of moon&quot;.
in the ritual, each member sacrifices all remaining offerings.
after the sacrifice, his magic power is multiplied by xp.
here x is the number of days from the eclipse (the eclipse is 0th day) and p is the number of his sacrificed offerings.
each member must perform the sacrifice just once.
 after two rituals, all &quot;messengers of sun&quot; and &quot;messengers of moon&quot; give all magic power to the &quot;magical reactor&quot;.
if the total power of &quot;messengers of sun&quot; and the total power of &quot;messengers of moon&quot; are equal,
the society will succeed in the ritual and save the world.
 it is very expensive to perform &quot;ritual of sun&quot;.
it may not be able to perform &quot;ritual of sun&quot; because the society is in financial trouble.
please write a program to calculate the minimum number of days from the eclipse in which the society can succeed in &quot;ritual of sun and moon&quot; whether &quot;ritual of sun&quot; can be performed or not.
the society cannot perform the ritual  on the eclipse day (0-th day).
 

"
p01570,Usoperanto,"usoperanto is an artificial spoken language designed and regulated by usoperanto academy.
the academy is now in study to establish strict usoperanto, a variation of the language intended for formal documents.
 in usoperanto, each word can modify at most one other word, and modifiers are always put before modifiees.
for example, with a noun uso (&quot;truth&quot;) modified by an adjective makka (&quot;total&quot;), people say makka uso, not uso makka.
on the other hand, there have been no rules about the order among multiple words modifying the same word,
so in case uso is modified by one more adjective beta (&quot;obvious&quot;),
people could say both makka beta uso and beta makka uso.
 in strict usoperanto, the word order will be restricted according to modification costs.
words in a phrase must be arranged so that the total modification cost is minimized.
each pair of a modifier and a modifiee is assigned a cost equal to the number of letters between the two words;
the total modification cost is the sum of the costs over all modifier-modifiee pairs in the phrase.
for example, the pair of makka and uso in a phrase makka beta uso has the cost of 4 for beta (four letters).
as the pair of beta and uso has no words in between and thus the cost of zero, makka beta uso has the total modification cost of 4.
similarly beta makka uso has the total modification cost of 5.
applying the &quot;minimum total modification cost&quot; rule, makka beta uso is preferred to beta makka uso in strict usoperanto.
 your mission in this problem is to write a program that, given a set of words in a phrase, finds the correct word order in strict usoperanto and reports the total modification cost.
 

"
p01571,Adhoc Translation,"
one day, during daily web surfing, you encountered a web page which was written in a language you've never seen. the character set of the language was the same as your native language; moreover, the grammar and words seemed almost the same. excitedly, you started to ""decipher"" the web page. the first approach you tried was to guess the meaning of each word by selecting a similar word from a dictionary of your native language. the closer two words (although from the different languages) are, the more similar meaning they will have.
 
you decided to adopt edit distance for the measurement of similarity between two words. the edit distance between two character sequences is defined as the minimum number of insertions, deletions and substitutions required to morph one sequence into the other. for example, the pair of ""point"" and ""spoon"" has the edit distance of 3: the latter can be obtained from the former by deleting 't', substituting 'i' to 'o', and finally inserting 's' at the beginning.
 
you wanted to assign a word in your language to each word in the web text so that the entire assignment has the minimum edit distance. the edit distance of an assignment is calculated as the total sum of edit distances between each word in the text and its counterpart in your language. words appearing more than once in the text should be counted by the number of appearances.
 
the translation must be consistent across the entire text; you may not match different words from your dictionary for different occurrences of any word in the text. similarly, different words in the text should not have the same meaning in your language.
 
suppose the web page says ""qwerty asdf zxcv"" and your dictionary contains the words ""qwert"", ""asf"", ""tyui"", ""zxcvb"" and ""ghjk"". in this case, you can match the words in the page as follows, and the edit distance of this translation is 3: ""qwert"" for ""qwerty"", ""asf"" for ""asdf"" and ""zxcvb"" for ""zxcv"".
 
write a program to calculate the minimum possible edit distance among all translations, for given a web page text and a word set in the dictionary.
 

"
p01572,Artistic Art Museum,"
mr. knight is a chief architect of the project to build a new art museum. one day, he was struggling to determine the design of the building. he believed that a brilliant art museum must have an artistic building, so he started to search for a good motif of his building. the art museum has one big theme: ""nature and human beings."" to reflect the theme, he decided to adopt a combination of a cylinder and a prism, which symbolize nature and human beings respectively (between these figures and the theme, there is a profound relationship that only he knows).
 
shortly after his decision, he remembered that he has to tell an estimate of the cost required to build to the financial manager. he unwillingly calculated it, and he returned home after he finished his report. however, you, an able secretary of mr. knight, have found that one field is missing in his report: the length of the fence required to surround the building. fortunately you are also a good programmer, so you have decided to write a program that calculates the length of the fence.
 
to be specific, the form of his building is union of a cylinder and a prism. you may consider the twodimensional projection of the form, i.e. the shape of the building is considered to be union of a circle c and a polygon p. the fence surrounds the outside of the building. the shape of the building may have a hole in it, and the fence is not needed inside the building. an example is shown in the figure below.
 






"
p01573,Complex Integer Solutions,"
let f(x) = a0 + a1x + a2x2 + ... + adxd be the function where each ai (0 &le; i &le; d) is a constant integer (and ad is non-zero) and x is a variable. your task is to write a program that finds all complex integer solutions of the equation f(x) = 0 for a given f(x). here, by complex integers, we mean complex numbers whose
real and imaginary parts are both integers.
 


"
p01574,Dial Key,"
you are a secret agent from the intelligence center of peacemaking committee. you've just sneaked into a secret laboratory of an evil company, automated crime machines.
 
your mission is to get a confidential document kept in the laboratory. to reach the document, you need to unlock the door to the safe where it is kept. you have to unlock the door in a correct way and with a great care; otherwise an alarm would ring and you would be caught by the secret police.
 
the lock has a circular dial with n lights around it and a hand pointing to one of them. the lock also has m buttons to control the hand. each button has a number li printed on it.
 
initially, all the lights around the dial are turned off. when the i-th button is pressed, the hand revolves clockwise by li lights, and the pointed light is turned on. you are allowed to press the buttons exactly n times. the lock opens only when you make all the lights turned on.
 
for example, in the case with n = 6, m = 2, l1 = 2 and l2 = 5, you can unlock the door by pressing buttons 2, 2, 2, 5, 2 and 2 in this order.
 
there are a number of doors in the laboratory, and some of them don’t seem to be unlockable. figure out which lock can be opened, given the values n, m, and li's.
 

"
p01575,Dungeon Master,"
once upon a time, in a fantasy world far, far away, monsters dug caves and dungeons for adventurers. they put some obstacles in their caves so it becomes more difficult and more exciting for the adventurers to reach the goal.
 
one day, emils, one of the monsters in the caves, had a question about the caves. how many patterns of a cave can they make, by changing the locations of the obstacles in it?
 
here's the detail of the question. a cave consists of w &times; h squares. monsters can put obstacles at some of the squares, so that adventurers can't go into them. the total number of obstacles is fixed, and there can't be two or more obstacles in one square. adventurers enter the cave from the top-left square, and try to reach the bottom-right square. they can move from one square to any of the four adjacent squares, as long as there are no obstacles in the destination square. there must be at least one path between any two squares that don't have obstacles. there must be no obstacles in the top-left square, nor in right-bottom square. the question is, given the width w and height h of the cave, and the number s of obstacles, how many patterns of the caves the monsters can make. as the obstacles have the same look, they should not
be distinguished each other.
 
it was a very interesting mathematical question. emils couldn't solve this question by himself, so he told it to his colleagues instead. none of them could answer to it, though. after that, the question soon got popular among the monsters working in the caves, and finally, they became unable to sleep well as they always thought about the question.
 
you are requested to write a program that answers to the question.
 


"
p01576,Exciting Bicycle,"
you happened to get a special bicycle. you can run with it incredibly fast because it has a turbo engine. you can't wait to try it off road to enjoy the power.
 
you planned to go straight. the ground is very rough with ups and downs, and can be seen as a series of slopes (line segments) when seen from a lateral view. the bicycle runs on the ground at a constant speed of v. since running very fast, the bicycle jumps off the ground every time it comes to the beginning point of a slope slanting more downward than the previous, as illustrated below. it then goes along a parabola until reaching the ground, affected by the gravity with the acceleration of 9.8m/s2.
 
it is somewhat scary to ride the bicycle without any preparations - you might crash into rocks or fall into pitfalls. so you decided to perform a computer simulation of the ride.
 
given a description of the ground, calculate the trace you will run on the ground by the bicycle. for simplicity, it is sufficient to output its length.
 

"
p01577,Magic Walls,"
you are a magician and have a large farm to grow magical fruits.
 
one day, you saw a horde of monsters, approaching your farm. they would ruin your magical farm once they reached your farm. unfortunately, you are not strong enough to fight against those monsters. to protect your farm against them, you decided to build magic walls around your land.
 
you have four magic orbs to build the walls, namely, the orbs of aquamarine (a), bloodstone (b), citrine (c) and diamond (d). when you place them correctly and then cast a spell, there will be magic walls between the orbs a and b, between b and c, between c and d, and between d and a. the walls are built on the line segments connecting two orbs, and form a quadrangle as a whole. as the monsters cannot cross the magic walls, the inside of the magic walls is protected.
 
nonetheless, you can protect only a part of your land, since there are a couple of restrictions on building the magic walls. there are n hills in your farm, where the orbs can receive rich power of magic. each orb should be set on the top of one of the hills. also, to avoid interference between the orbs, you may not place two or more orbs at the same hill.
 
now, you want to maximize the area protected by the magic walls. please figure it out.
 



"
p01578,Sort by Hand,"
it's time to arrange the books on your bookshelf. there are n books in the shelf and each book has a unique number; you want to sort the books according to the numbers. you know that the quick sort and the merge sort are fast sorting methods, but it is too hard for you to simulate them by hand - they are efficient for computers, but not for humans. thus, you decided to sort the books by inserting the book with the number i into the i-th position. how many insertions are required to complete this task?
 


"
p01579,Substring Expression,"
trees are sometimes represented in the form of strings. here is one of the most popular ways to represent unlabeled trees:
  leaves are represented by ""()"".  other nodes (i.e. internal nodes) are represented by ""( s1 s2 ... sn )"", where si is the string representing the i-th subnode. 
for example, the tree depicted in the figure below is represented by a string ""((()())())"".
 
a strange boy norward is playing with such strings. he has found that a string sometimes remains valid as the representation of a tree even after one successive portion is removed from it. for example, removing the underlined portion from the string ""((()())())"" results in ""((()))"", which represents the tree depicted below.
 
however, he has no way to know how many ways of such removal there are. your task is to write a program for it, so that his curiosity is fulfilled.
 


"
p01580,Up Above the World So High,"
one of the questions children often ask is ""how many stars are there in the sky?"" under ideal conditions, even with the naked eye, nearly eight thousands are observable in the northern hemisphere. with a decent telescope, you may find many more, but, as the sight field will be limited, you may find much less at a time.
 
children may ask the same questions to their parents in a spaceship billions of light-years away from the earth. their telescopes are similar to ours with circular sight field. it can be rotated freely, that is, the sight vector can take an arbitrary value.
 
given a set of positions of stars and the spec of a telescope, your task is to determine the maximum
number of stars that can be seen through the telescope at a time.
 


"
p01581,Cache Control,"
mr. haskins is working on tuning a database system. the database is a simple associative storage that contains key-value pairs. in this database, a key is a distinct identification (id) number and a value is an object of any type.
 
in order to boost the performance, the database system has a cache mechanism. the cache can be accessed much faster than the normal storage, but the number of items it can hold at a time is limited. to implement caching, he selected least recently used (lru) algorithm: when the cache is full and a new item (not in the cache) is being accessed, the cache discards the least recently accessed entry and adds the new item.
 
you are an assistant of mr. haskins. he regards you as a trusted programmer, so he gave you a task. he wants you to investigate the cache entries after a specific sequence of accesses.
 

"
p01582,Cover Time,"
let g be a connected undirected graph where n vertices of g are labeled by numbers from 1 to n. g is simple, i.e. g has no self loops or parallel edges.
 
let p be a particle walking on vertices of g. at the beginning, p is on the vertex 1. in each step, p moves to one of the adjacent vertices. when there are multiple adjacent vertices, each is selected in the same
probability.
 
the cover time is the expected number of steps necessary for p to visit all the vertices.
 
your task is to calculate the cover time for each given graph g.
 

"
p01583,Craftsman,"
takeshi, a famous craftsman, accepts many offers from all over japan. however, the tools which he is using now has become already too old. so he is planning to buy new tools and to replace the old ones before next use of the tools. some offers may incur him monetary cost, if the offer requires the tools to be replaced. thus, it is not necessarily best to accept all the orders he has received. now, you are one of his disciples. your task is to calculate the set of orders to be accepted, that maximizes his earning for a given list of orders and prices of tools. his earning may shift up and down due to sale income and replacement cost.
 
he always purchases tools from his friend's shop. the shop discounts prices for some pairs of items when the pair is purchased at the same time. you have to take the discount into account. the total price to pay may be not equal to the simple sum of individual prices.
 
you may assume that all the tools at the shop are tough enough. takeshi can complete all orders with replaced tools at this time. thus you have to buy at most one tool for each kind of tool.
 

"
p01584,Divide the Water,"
a scientist arthur c. mcdonell is conducting a very complex chemical experiment. this experiment requires a large number of very simple operations to pour water into every column of the vessel at the predetermined ratio. tired of boring manual work, he was trying to automate the operation.
 
one day, he came upon the idea to use three-pronged tubes to divide the water flow. for example, when you want to pour water into two columns at the ratio of 1 : 1, you can use one three-pronged tube to split one source into two.
 
he wanted to apply this idea to split water from only one faucet to the experiment vessel at an arbitrary ratio, but it has gradually turned out to be impossible to set the configuration in general, due to the limitations coming from the following conditions:
  the vessel he is using has several columns aligned horizontally, and each column has its specific capacity. he cannot rearrange the order of the columns. there are enough number of glass tubes, rubber tubes and three-pronged tubes. a three-pronged tube always divides the water flow at the ratio of 1 : 1.  also there are enough number of fater faucets in his laboratory, but they are in the same height.  a three-pronged tube cannot be used to combine two water flows. moreover, each flow of water going out of the tubes must be poured into exactly one of the columns; he cannot discard water to the sewage, nor pour water into one column from two or more tubes. 
the water flows only downward. so he cannot place the tubes over the faucets, nor under the exit of another tubes. moreover, the tubes cannot be crossed.
 
still, arthur did not want to give up. although one-to-many division at an arbitrary ratio is impossible, he decided to minimize the number of faucets used. he asked you for a help to write a program to calculate the minimum number of faucets required to pour water into the vessel, for the number of columns and the ratio at which each column is going to be filled.
 

"
p01585,Mickle's Beam,"
major mickle is commanded to protect a secret base which is being attacked by n tanks. mickle has an ultimate laser rifle called mickle's beam. any object shot by this beam will be immediately destroyed, and there is no way for protection. furthermore, the beam keeps going through even after destroying objects. the beam is such a powerful and horrible weapon, but there is one drawback: the beam consumes a huge amount of energy. for this reason, the number of shots should be always minimized.
 
your job is to write a program that calculates the minimum number of shots required to destroy all the enemy tanks.
 
you can assume the following:
  the base is located on the origin (0, 0);  each tank has a rectangular shape with edges parallel to the x- and y-axes;  no tank may touch or include the origin;  no two tanks share the same point;  the width of beam is negligible; and  a beam destroys every tank it touches or crosses. 



"
p01586,Poor Computer,"
brian fulk is struggling with a really poor computer for a couple of days. now he is trying to write a very simple program which receives a positive integer x and returns some of its multiples, say, a1x,...,anx. however, even such a simple task is not easy on this computer since it has only three arithmetic operations: addition, subtraction and left shift.
 
let us describe the situation in more details. initially the computer stores only a given positive integer x. the program brian is writing will produce a1x,..., anx, where a1,...,an are given multipliers, using only the following operations:
  addition of two values,  subtraction of two values, and  bitwise left shift (left shift by n bits is equivalent to multiplication by 2n). 
the program should not generate any value greater than 42x; under this constraint he can assume that no overflow occurs. also, since this computer cannot represent negative values, there should not be subtraction of a greater value from a smaller value.
 
your task is to write a program that finds the shortest sequence of operations to produce the multiples a1x,...,anx and reports the length of the sequence. these numbers may be produced in any order.
 
here we give an example sequence for the first sample input, in a c++/java-like language:
 


a = x << 1;  // 2x
b = x + a;   // 3x
c = a + b;   // 5x
d = c << 2;  // 20x
e = d - b;   // 18x


"
p01587,Riffle Swap,"
you have a deck of 2n cards (1 &le; n &le; 1000000) and want to have them shuffled.
 
the most popular shuffling technique is probably the riffle shuffle, in which you split a deck into two halves, place them in your left and right hands, and then interleave the cards alternatively from those hands. the shuffle is called perfect when the deck is divided exactly in half and the cards are interleaved one-by-one from the bottom half. for example, the perfect riffle shuffle of a deck of eight cards &lt;0, 1, 2, 3, 4, 5, 6, 7&gt; will result in a deck &lt;0, 4, 1, 5, 2, 6, 3, 7&gt;.
 
since you are not so good at shuffling that you can perform the perfect riffle shuffle, you have decided to simulate the shuffle by swapping two cards as many times as needed. how many times you will have to perform swapping at least? as the resultant number will obviously become quite huge, your program should report the number modulo m = 1000003.
 


"
p01588,Round Table,"
you are the owner of a restaurant, and you are serving for n customers seating in a round table.
 
you will distribute m menus to them. each customer receiving a menu will make the order of plates, and
then pass the menu to the customer on the right unless he or she has not make the order. the customer i takes li unit time for the ordering.
 
your job is to write a program to calculate the minimum time until all customers to call their orders, so you can improve your business performance.
 


"
p01589,Strange Currency System,"
the currency system in the kingdom of yoax-musty is strange and fairly inefficient. like other countries, the kingdom has its own currencty unit denoted by k $ (kingdom dollar). however, the ministry of finance issues bills for every value between 1 k $ and (231 - 1) k $ worth.
 
on the other hand, this system often enables people to make many different values just with a small number of bills. for example, if you have four bills of 1 k $, 2 k $, 4 k $, and 8 k $ worth respectively, you can make any values from 1 k #36; to 15 k $.
 
in this problem, you are requested to write a program that finds the minimum value that cannot be made with a given set (multiset in a mathematical sense) of bills. for the case with the four bills (1 k $, 2 k $, 4 k $, and 8 k $), since you can make any values up to 15 k $, your program should report 16 k $.
 


"
p01590,Trading Ship,"
you are on board a trading ship as a crew.
 
the ship is now going to pass through a strait notorious for many pirates often robbing ships. the maritime police has attempted to expel those pirates many times, but failed their attempts as the pirates are fairly strong. for this reason, every ship passing through the strait needs to defend themselves from the pirates. 
 
the navigator has obtained a sea map on which the location of every hideout of pirates is shown. the strait is considered to be a rectangle of w &times; h on an xy-plane, where the two opposite corners have the coordinates of (0, 0) and (w, h). the ship is going to enter and exit the strait at arbitrary points on y = 0 and y = h respectively.
 
to minimize the risk of attack, the navigator has decided to take a route as distant from the hideouts as possible. as a talented programmer, you are asked by the navigator to write a program that finds the best route, that is, the route with the maximum possible distance to the closest hideouts. for simplicity, your program just needs to report the distance in this problem.
 


"
p01591,Approximate Circle,"consider a set of n points (x1, y1),
..., (xn,yn) on a cartesian space.
your task is to write a program for regression to a circle x2
+ y2 + ax + by
+ c = 0. in other words, your program should find a circle that
minimizes the error. here the error is measured by the sum over square distances
between each point and the circle, which is given by: 



"
p01592,Blame Game,"alice and bob are in a factional dispute. recently a big serious problem
arised in a project both alice and bob had been working for. this problem was
caused by lots of faults of alice's and bob's sides; those faults are closely
related. alice and bob started to blame each other. first, alice claimed it was
caused by bob's fault. then bob insisted his fault was led by alice's fault.
soon after, alice said that her fault should not have happened without bob's
another fault. so on so forth. it was terrible. it was totally a blame game.
still, they had their pride. they would not use the same fault more than once in
their claims. all right, let's see the situation in terms of a game. alice and bob have a number of faults. some pairs of alice and bob faults
have direct relationship between them. this relationship is bidirectional; if a
fault x is led by another fault y, they can say either ""x was due to y."" or
""even with x, the problem could be avoided without y."" note that not both, since
they never pick up the same fault in their claims. alice and bob take their turns alternatively. alice takes the first turn
by claiming any of bob's faults. then bob makes his claim with alice's fault
directly related to the claimed fault. afterward, in each turn, one picks up
another's fault directly related to the fault claimed in the previous turn. if
he/she has no faults that have not been claimed, then he/she loses this game. by the way, you have been working both under alice and bob. you know all
the faults and relationships. your task is to write a program to find out which
would win this game, under the assumption that they always take their optimal
strategies. if you could choose the winning side, you would not have to take the
responsibility for the arisen problem. 

"
p01593,Earn Big,"a group of n people is trying to challenge the following game
to earn big money. first, n participants are isolated from each other. from this
point, they are not allowed to contact each other, or to leave any information
for other participants. the game organizer leads each participant, one by one,
to a room with n boxes. the boxes are all closed at the beginning of
the game, and the game organizer closes all the boxes whenever a participant
enters the room. each box contains a slip of paper on which a name of a distinct
participant is written. the order of the boxes do not change during the game.
each participant is allowed to open up to m boxes. if every
participant is able to open a box that contains a paper of his/her name, then
the group wins the game, and everybody in the group earns big money. if anyone
is failed to open a box that contains a paper of his/her name, then the group
fails in the game, and nobody in the group gets money. obviously, if every participant picks up boxes randomly, the winning
probability will be (m/n)n. however, there is a far more
better solution. before discussing the solution, let us define some concepts. let p
= {p1, p2, ..., pn} be a set of the
participants, and b = {b1, b2, ..., bn}
be a set of the boxes. let us define f, a mapping from b
to p, such that f(b) is a participant whose name is
written on a paper in a box b. here, consider a participant pi picks up the boxes
in the following manner: let x := i. if pi has already opened m boxes,
	then exit as a failure. if f(bx) = pi, then exit as a
		success. if f(bx) = pj (i != j),
		then let x := j, and go to 2. 
	
	 assuming every participant follows the algorithm above, the result of the
game depends only on the initial order of the boxes (i.e. the definition of f).
let us define g to be a mapping from p to b,
such that g(pi) = bi. the participants win the
game if and only if, for every i &isin; {1, 2, ..., n}, there exists
k( such that (fg)k
(pi) = pi. your task is to write a program that calculates the winning probability
of this game. you can assume that the boxes are placed randomly. 

"
p01594,Exportation in Space,"in an era of space travelling, mr. jonathan a. goldmine exports a special
material named ""interstellar condensed powered copper"". a piece of it consists
of several spheres floating in the air. there is strange force affecting between
the spheres so that their relative positions of them are not changed. if you
move one of them, all the others follow it. to transport icpcs between planets, it needs to be shielded from cosmic
rays. it will be broken when they hit by strong cosmic rays. mr. goldmine needs
to wrap up each icpc pieces with anti-cosmic-ray shield, a paper-like material
which cuts all the cosmic rays. to save cost, he wants to know the minimum area
of the shield he needs to wrap an icpc piece up. note that he can't put the shield between the spheres of an icpc because
it affects the force between the spheres. so that the only way to shield it is
to wrap the whole icpc piece by shield. mr. goldmine asked you, an experienced programmer, to calculate the
minimum area of shield for each material. you can assume that each sphere in an icpc piece is a point, and you can
ignore the thickness of the shield. 

"
p01595,Laser Puzzle,"an explorer john is now at a crisis! he is entrapped in a w
times h rectangular room with a embrasure of laser beam. the
embrasure is shooting a deadly dangerous laser beam so that he cannot cross or
touch the laser beam. on the wall of this room, there are statues and a locked
door. the door lock is opening if the beams are hitting every statue. in this room, there are pillars, mirrors and crystals. a mirror reflects
a laser beam. the angle of a mirror should be vertical, horizontal or diagonal.
a crystal split a laser beam into two laser beams with &theta;&plusmn;(&pi;/4)
where &theta; is the angle of the incident laser beam. he can push one mirror or
crystal at a time. he can push mirrors/crystals multiple times. but he can push
up to two of mirrors/crystals because the door will be locked forever when he
pushes the third mirrors/crystals. to simplify the situation, the room consists of w times h
unit square as shown in figure 1. he can move from a square to the neighboring square vertically or
horizontally. please note that he cannot move diagonal direction. pillars,
mirrors and crystals exist on the center of a square. as shown in the figure 2,
you can assume that a mirror/crystal moves to the center of the next square at
the next moment when he push it. that means, you don't need to consider a state
about pushing a mirror/crystal. you can assume the following conditions: the direction of laser beams are horizontal, vertical or diagonal, the embrasure is shooting a laser beam to the center of the
	neighboring square, the embrasure is on the wall, he cannot enter to a square with pillar, a mirror reflects a laser beam at the center of the square, a mirror reflects a laser beam on the both side, a mirror blocks a laser beam if the mirror is parallel to
	the laser beam, a crystal split a laser beam at the center of the square, diagonal laser does not hit a statue, and he cannot leave the room if the door is hit by a vertical, horizontal or
	diagonal laser. in order to leave this deadly room, he should push and move mirrors and
crystals to the right position and leave the room from the door. your job is to
write a program to check whether it is possible to leave the room. figure 3 is an initial situation of the first sample input. figure 4 is one of the solution for the first sample input. 

figure 4

"
p01596,Magnum Tornado,"we have a toy that consists of a small racing circuit and a tiny car. for
simplicity you can regard the circuit as a 2-dimensional closed loop, made of
line segments and circular arcs. the circuit has no branchings. all segments and
arcs are connected smoothly, i.e. there are no sharp corners. the car travels on this circuit with one distinct feature: it is capable
of jumping, which enables short cuts. it can jump at any time for any distance.
the constraints are that 1) the traveling direction will never change during
each jump, 2) the jumping direction needs to match the traveling direction at
the time of take-off, and 3) the car must land on the circuit in parallel to the
tangent at the landing point. note that, however, the traveling direction at the
landing point may be the opposite of the forward direction (we define forward
direction as the direction from the starting point to the ending point of each
line segment in the circuit.) that is, the car can traverse part of the circuit
in the reverse direction. your job is to write a program which, given the shape of the circuit,
calculates the per-lap length of the shortest route. you can ignore the height
of the jump, i.e. just project the route onto the plane on which the circuit
resides. the car must start from the starting point of the first line segment,
heading towards the ending point of that segment, and must come back to the same
starting point heading in the same direction. figure 1 shows the solution for the first sample input. 

figure 1: the solution for the first sample input

"
p01597,Nezumi's Treasure,"there were a mouse and a cat living in a field. the mouse stole a dried
fish the cat had loved. the theft was found soon later. the mouse started
running as chased by the cat for the dried fish. there were a number of rectangular obstacles in the field. the mouse
always went straight ahead as long as possible, but he could not jump over or
pass through these obstacles. when he was blocked by an obstacle, he turned
leftward to the direction he could go forward, and then he started again to run
in that way. note that, at the corner, he might be able to keep going without
change of the direction. he found he was going to pass the same point again and again while chased by
the cat. he then decided to hide the dried fish at the first point where he
was blocked by an obstacle twice from that time.
in other words, he decided to hide it at the first turn 
after he entered into an infinite loop.
he thought he could come there again
after the chase ended. for example, in the following figure, 
he first went along the blue line and turned left at point b.
then he went along the red lines counter-clockwise,
and entered into an infinite loop.
in this case, he hid dried fish at not point b but at point a,
because when he reached point b on line c for the second time,
he just passed and didn't turn left. finally the cat went away, but he remembered neither where he thought of
hiding the dried fish nor where he actually hid it. yes, he was losing his
dried fish. you are a friend of the mouse and talented programmer. your task is to
write a program that counts the number of possible points the mouse hid the
dried fish, where information about the obstacles is given. the mouse should be
considered as a point. 

"
p01598,Testing Sorting Networks,"a n sorting network is a circuit that accepts n
numbers as its input, outputs them sorted. mr. smith is an engineer of a company
that sells various sizes of the circuit. one day, the company got an order of n sorting networks.
unfortunately, they didn't have the circuit for n numbers at the
time. the clerk once declined the order for being out of stock, but the client
was so urgent that he offered much money if he could get the circuit in a week.
the deal escalated to a manager, and she asked mr. smith for a solution to
produce the n sorting networks by the deadline. he came up with an idea to combine several n/2 sorting
networks, because he noticed that they have many stocks of the circuits for n/2
numbers. he designed a new circuit using the n/2 sorting networks,
but he was not sure if it would really work as an n sorting network.
so, he asked a colleague, you, to check if it was actually an n
sorting network. the circuit he designed consists of multiple stages. each stage of the
circuit consists of two n/2 sorting networks, which makes each stage
accept a sequence of n numbers as inputs and output a sequence of n
numbers. from the 1st to the n/2-th input numbers of a stage goes to
one of those n/2 sorting networks, and from the (n/2+1)-th
to the n-th input numbers goes to the other. similarly, the first
half of the output numbers of a stage is the output of the former sorting
network and the second half is the output of the latter, both of which are
sorted in ascending order. each output of a stage is connected to exactly one
input of the next stage, and no two inputs are connected to the same output
line. the input of the last stage is the input of the whole circuit and the
output of the first stage is the output of the whole circuit. 

"
p01599,Train King,"roland has been given a mission of dangerous material transfer by train
king. the material is stored in the station a and subject to being transferred
to the station b. he will bring it by direct trains between a and b, one (or
zero) unit per ride. your task is to write a program to find out the most optimal way of his
bringing. your program will receive the timetable of trains on the mission day
and should report how many units of material can be transferred at the end. be
aware that there can be trains which can go to the past time or the same time
which train leaved the station. each train consists of one or more cars. roland is disallowed to ride the
same car of the same train multiple times. this restriction avoids time paradox.
he is still allowed to get on a different car, though. you can assume he can
change trains instantly. 

"
p01600,Tree Construction,"consider a two-dimensional space with a set of points (xi,
yi) that satisfy xi xj
and yi > yj for all i .
we want to have them all connected by a directed tree whose edges go toward
either right (x positive) or upward (y positive). the
figure below shows an example tree. write a program that finds a tree connecting all given points with the
shortest total length of edges. 

"
p01601,Palindromic Number,"整数nに最も近い回文数を求めよ． なお，非負整数xが回文数であるとは，xを十進法で表現した文字列とそれを反転させた文字列が等しいことをいう．
例えば0,7,33,10301などは回文数であり，32,90,1010などは回文数でない． 

"
p01602,Parentheses,"文字列sがある．はじめ，sは空文字列である．
以下の処理をn個順番に行う． sの末尾にp_i(=&quot;(&quot;または&quot;)&quot;)をx_i個追加する． 処理を施した後，sがバランスのとれた文字列であるかどうか判定せよ． 「文字列のバランスが取れている」とは，次のように定義される． 空文字列はバランスが取れている． バランスの取れている文字列aとbに対して，a + b(+は文字列の連結を表す)はバランスが取れている． バランスの取れている文字列aに対して，&quot;(&quot; + a + &quot;)&quot;はバランスが取れている． 

"
p01603,Sanpo,"ねこのそらは散歩が大好きだ．道を歩くと新しい発見がある． そらの住む町は n 個の広場と n-1 本の道からなる．
道はちょうど二つの広場をつないでおり，枝分かれしたり道どうしが交わったりしない． 道には，歩くのにかかる時間 t，得られる発見の個数の上限 m，および，発見一つあたりの価値 v が指定されている．
道を一方の端からもう一方の端まで歩いたとき，m 回目までの通行では価値 v の発見が一つ得られるが，m+1 回目以降は発見が得られない． 今日もそらは，町内の散歩に出かけるようだ．
そらの散歩は広場 1 から始まり，いくつかの道 ( 0 本かもしれない ) を通って，最後に広場 1 に戻ってくる，というルートをとる．
また，日が暮れると寂しい気持ちになるので，そらは散歩時間を t 以下にしたいと思っている． そらの友人であるあなたの仕事は，散歩時間が t 以下である散歩ルートにおいて，得られる発見の価値の総和の最大値を求めることである． 

"
p01604,goto busters,"あなたは謎のプログラムのソースコードを見つけた．
さっそくコンパイルして実行してみたが，いつまで待っても処理が終わらない．
どうやら，プログラムが無限ループしてしまっているようである． ソースコードを詳しく見てみたところ，以下のようなことがわかった． ソースコードは n 行からなり，各行はラベル文か goto 文のいずれかである．
ラベル文と goto 文はそれぞれ次のようなフォーマットに従っている． ここで，label はラベルを表す文字列である． プログラムは先頭の行から順番に 1 行ずつ処理される．
ラベル文と goto 文を処理したときの挙動は次のとおり： ラベル文を処理しても何も起こらない goto 文を処理したとき，次の処理は同じ名前のラベルを持ったラベル文から始める 最後の行を処理し終えて次に処理する行がなくなったとき，プログラムは終了する． あなたは，いくつかの goto 文を削除することでプログラムを正しく終了させたいと思っている．
一方で，手を加える箇所はできるだけ少なくしたい．
プログラムを終了させるためには最小でいくつの goto 文を消せばいいだろうか． 

"
p01605,Replace,"文字列sが与えられる．
以下の処理をq個順番に行う． sに含まれる文字c_iを全て同時に文字列p_iで置き換える． 最後に文字列sのa文字目からb文字目まで(1-indexed)を出力せよ． 

"
p01606,Sliding GCD,"自然数の集合 s に対して，集合 \{ gcd(t) | t ⊆ s, t は空でない \} の要素数を f(s) とおく． ここで，gcd(t) は t に含まれるすべての数を割り切るような最大の整数である．
特に，t が一つの整数 a のみからなるときは gcd(\{a\}) = a であることに注意せよ． i = 1, 2, . . ., n - w+1 に対して f(\{i, i+1, . . ., i+w - 1\}) を求めよ． 

"
p01607,Magical Circle,"〜魔法陣の描き方〜 十分広くて真っ白な床を用意します． 床の座標 (0,0) の点を中心にして，半径 1, 2, ..., r の円を描きます． 半径 1 の円と半径 2 の円の間，半径 3 の円と半径 4 の円の間，... を青色で塗ります．なお，半径 r の円の外には色を塗ってはいけません． 床に頂点数 n の多角形を一つ描きます． 多角形の内部の白色の領域を青色で，青色の領域を白色で塗りなおします． 魔法陣の力は，魔法陣に青色が多く含まれるほど強くなるという．
そこであなたには，魔法陣に含まれる青い領域の面積を求めてほしい． 次の図はこの手順で描くことのできる魔法陣の一例である． 



"
p01608,1,"長さnのビット列がある． 左からi番目のビットが1のとき，スコアをa_i点得られる．
左からi番目のビットを中心に距離w以内にある1の個数(=|\{j \in \{1,...,n\}∩\{i-w,...,i+w\} | 左からj番目のビットが1\}|)が奇数のとき，スコアをb_i点得られる． スコアを最も多く得られるようなビット列を求めよ． 

"
p01609,One,"電車の窓から美しい山並みが見える．
窓は，左下隅の座標が (0, 0)，右上隅の座標が (w, h) の長方形である．
窓からは n つの山が見えており，i 番目の山は上に凸な放物線 y = a_i (x-p_i)^2 + q_i の形をしている．
山と空との境界線の長さを求めよ． 次の三つの図は sample input に対応している．太線で示されている部分が山と空との境界線である． 





"
p01610,Cube of Two,"日本で販売されているルービックキューブの各面の配色が，
世界で標準的に採用されているものに合わせられたのはつい最近のことだ．
これに慣れるため，まずは簡単な2x2x2のキューブをスクランブルして遊ぼう． 初期状態のルービックキューブは，各色が1つの面に集まるように揃えられており，
上面に赤色，正面に黄色，右側面に青色が見える．
また，下面は橙色，背面は白色，左側面は緑色である．
展開図を用いると次のように表せる． 各面に対し，向かって時計回りに90°回転させる操作を，それぞれの頭文字をとってu,f,r,d,b,lと表す．
ルービックキューブのスクランブルは，各文字が1つの回転操作に対応する文字列sとして表される．
初期状態から入力に従ってスクランブルしたときの，ルービックキューブの各面の色を展開図として出力せよ． 

"
p01611,th String,"長さnの文字列sに対する接尾辞配列saを，以下の手順で得られるn以下の正整数の順列として定義する．
sのi文字目からj文字目までの部分文字列をs[i..j]と表す．ただし添字は1-indexedである． 各接尾辞s[i..n] (i=1,2,...,n)を辞書式順序（昇順）で整列する． 整列した各接尾辞の開始位置iを順に並べる． たとえば，s=&quot;mississippi&quot;の接尾辞配列saは，以下のようになる． 入力として，長さnの文字列に対する接尾辞配列saが与えられる．
saが得られるような文字列のうち，辞書式順序でk番目(1-indexed)のものを求めよ．
ただし，元の文字列は，アルファベット順に'a'から数えて高々a個の文字のみからなる． 

"
p01612,Company Trip,"あなたの会社にはn人の社員が存在する．m個の社員(a_i,b_i)の組について，a_iはb_iの上司である． 社員xが社員yの実質的な上司であるとは，次のうち少なくとも一方が成り立つことをいう． xがyの上司である． yの実質的な上司である社員zが存在して，xはzの上司である． あなたの会社で，自分自身が自分の実質的な上司であるような社員は存在しない． あなたの会社では社員が全員参加する社員旅行が計画されている．全社員の要求により，旅館での部屋割りは「よい部屋割り」でなければならない．
ある部屋割りが「よい部屋割り」であるとは以下の両方が満たされることをいう． 各社員はどこかの部屋に割り振られる． 社員xと社員yが同じ部屋に割り振られているとき，xはyの実質的な上司でない． 幹事の社員は非常に優秀なので，「よい部屋割り」でかつ必要な部屋の数が最小になるように部屋割りを行った．しかし残念なことに予算が不足している．どうしても必要な部屋の数を減らさなければならないらしい．
そこで，人事部で働くあなたは上司-部下の関係を一つだけ解消することによって，「よい部屋割り」を得るために必要な部屋の数を減らすことにした．
さて，どの関係を解消すればよいのだろう？ 

"
p01613,Grid Mori,"とある富豪の森さんが，グリッド状に区分けされた土地の n 区画を買って， 4つの工場 a, b, c, d を建てようとしている． まず，土地全体の幅 w を1以上 n 以下の値で決定する． この土地の 1 番左上の区画を (0, 0) とする． そして， (0, 0) の区画を1番目に， (1, 0) の区画を2番目に購入する． このように， i 番目に (x, y) の区画を購入した後に， i + 1 番目に (x + 1, y) の区画を購入していく． もし， (w, y) の区画を購入しようとしたときは， 代わりに (0, y + 1) の区画を購入する． さらに森さんは，土地を購入する前に占い師に次のようなことを言われていた． 「a 番目に購入するグリッドの土地に工場aを，b 番目に購入するグリッドに工場bを，c 番目のグリッドに工場cを，d 番目のグリッドに工場dを建てるとよいぞ．」 森さんは，非常に占い好きであり，必ず占い師の助言を守りたいと考えている． しかし，aとb，cとdの2つのペアは関連のある工場であるため，できるだけ近くにあった方がよい． 自分の土地の買い方と占い師の助言を両方守りつつ，関連する工場同士をなるべく近くしたいのである． ここで，2つの土地が (x1, y1)，(x2, y2) にあるとき， 距離は，|x1 - x2 |+ |y1 - y2 | で求めることができる． |x| は， x の絶対値を表している． あなたの仕事は， (工場aとbの距離) ＋ (工場cとdの距離) の値が最小になるように土地を購入したときの距離の合計を求めるプログラムを作成することである． 図1はサンプルの1番目における，すべての工場の配置の組み合わせである．幅3で土地を購入したとき，距離の合計が最小となる． 図1: サンプル1の工場の配置 
    


    
      "
p01614,VOCAL ANDROID,"ボーカルアンドロイド (vocal android) とは，メロディと歌詞を入力して音声を合成する作曲ツールである． 2013年3月9日に和歌山県で開催された，ボーカルアンドロイドのライブに行ったあなたは，音楽の素晴らしさに感動した． そこで，あなたは新作ボーカルアンドロイド「立音リプロ (cv.立命太郎)」を購入し，作曲を始めることにした． ところが，メロディは完成したものの作詞で詰まってしまった． 使いたいフレーズはいくつか断片的に用意しており，それらを組み合わせて各メロディにあてはめる． 各メロディは，長さが決まっており，必ずこの長さぴったりになるようにフレーズをあてはめる必要がある． また，各フレーズには，そのフレーズを使うと得られるノリの良さを表す得点と，下限の長さと上限の長さが決まっている． フレーズは，長さが整数であれば，下限から上限まで自由に調整できる． ただし，長さを変更しても，得られる点数は変わらない． 図1は，サンプルの1番目の例である． 図1: メロディに対するフレーズの割り当て あなたの仕事はメロディの長さぴったりにフレーズを組み合わせて，できるだけ得点の総和が高い曲を作ることである． 同じフレーズは何度も使用してよいものとする． 

    
      "
p01615,Project Management,"あなたは凄腕のプロジェクトマネージャである． 今回は超大規模なプロジェクトのマネジメントを請け負った． 図1: アローダイアグラム これまでの勘と経験からなんとか 図1 のようなアローダイアグラムを作成した． 各ノードは作業の結合点を表している． また，sはプロジェクトの開始状態，tはプロジェクトの終了状態を表す結合点である． 例えば結合点p3において，作業gは作業cと作業eが終了しなければ開始できない． プロジェクトの計画は完璧であり，全ての結合点は，そこから出て再びその結合点に戻る作業経路を持たない． また，全ての作業は前後に結合点を持っており， 開始状態と終了状態以外の結合点は必ず前後に作業を持っている． しかし，今回のプロジェクトは作業数が多い． アローダイアグラムにおいて，所要時間が最長となる経路(クリティカルパス)上の作業は， プロジェクトの時間制約に大きく影響する． そこであなたはアローダイアグラム上のクリティカルパスの所要日数を計算するプログラムを書くことにした． ちなみに，このクリティカリパスは必ずアローダイアグラム上に存在する． 

    
      "
p01616,Statement Coverage,"「うわっ！なんてひどいコードだ！」 古いソースコードを開きながら先輩が叫んでいる． また面倒な仕事が押し付けられそうだ……． ソースコードにはめまいがしそうなほどたくさんの if 文が並んでいる． どうやら制御の構造はそれほど複雑ではないらしい． 1 つの条件文には，変数と not 演算子 ""~"" ，そして and ""&amp;"" / or ""|"" の 2 項演算子が現れる． 変数は真または偽を表し，変数名は1文字以上のアルファベットで表される． 演算の順序は not 演算子が優先だが，括弧で先に計算するよう順序を変えてもよい． 変数は 1 つもしくは 2 つ，2 項演算は高々 1 回，それ以外は何度でも現れて良い． とりあえずコンパイルは通った． コードを修正する前にテストを書く必要がある． 今回頼まれたのは，このコードのテストケースを書く作業だ． テストケースの数は，全ての命令が 1 度以上実行されれば十分である． テストケースの数を見積もって， 1 つで済むようなら引き受けることにしよう． 

    
      "
p01617,Twins Idol,"アイドル事務所841プロダクションには，多くの個性的なアイドル達が所属している． 双子のアイドルであるアキ＆マキは，841プロに所属するアイドルであり，2人ともとてもゲーム好きである． ある日2人は，次のようなゲームを自分達で自作して楽しむことにした． このゲームは，2人で協力するタイプのゲームであるため，双子の息の合ったプレイが期待される． まず，ゲームを始める前に，2人が別々に自分の好きなようにフィールドを床に描く． フィールドは，アルファベットの1文字が書かれたいくつかのボードと，ボード間をつなぐルートで構成される． 彼女らは，このルート上を辿ることで，ボード間を移動できる． ただし，ルートには矢印がついており，その矢印の方向に向かってしか移動できない． アキのフィールドとマキのフィールドの間にルートは存在しないため，互いのフィールドを行き来することはできない． まず，アキとマキが，自分のフィールド内の好きなボードに立つところからゲームが始まる． そして，以下の決まりに従って，2人が同時に行動していく． 2人の立っているボードの文字が等しい場合 スコアとして，1点を得る． 2人は現在立っているボードを離れて，別のボードに移動しなければならない． ただし，別のボードに移動しようとした際，2人の内どちらかが移動できなかった場合，ゲームを終了する． 2人の立っているボードの文字が異なる場合 スコアを得ることはできない． 2人はそれぞれ，「現在のボードにとどまる」か「別のボードに移動する」かを選択して行動する．2人が同じ行動を取る必要はない． ただし，別のボードに移動しようとした際，移動できなかった場合，ゲームを終了する． 現在以降のターンを使用して，現在のボードから，どう移動しても点数を増やせないとき ゲームを終了する． アキ＆マキは，このゲームでなるべく高いスコアを出したいと考えている． 2人が最大でどれだけの得点を取得できるか，841プロの新人敏腕プロデューサである君が，お得意のプログラミングによって華麗にヒントを与えてあげよう． 

    
      "
p01618,Operation training for BYDOL,"u'sというスクールアイドルを結成した私達は，さらなる高みを目指すため，部室にあったdvdで憧れの841プロダクションに所属するアイドル達を見ていた． このアイドル達は今でこそ輝くステージの上で活躍しているが，以前はbydolと呼ばれるロボットに乗り込み，隕石の撤去作業をしていたらしい． そこで，トップアイドルになるために，bydolの操縦技術が必要であることを知った私達は，急遽bydolを入手し，他校のスクールアイドルとbydolを用いた模擬戦をすることにした． この模擬戦では，白の軍と赤の軍に分かれ，bydolに積まれている弾により撃ち合いを行う． 各軍のメンバは，それぞれbydolに乗り込み，合図が出ると同時に「1度だけ」弾を撃つ． 合図が出る時点での全てのbydolの座標は決まっており，bydol同士はレーダーによって互いの座標を把握できる． 同じ座標にbydolが2台以上現れることはない． bydolが移動できるフィールドは2次元平面で表され，非常に広くフィールド全体を囲む壁はないものとして考える． しかし，フィールド内部にいくつかの円形の壁が用意されている． この壁の内側は，コンクリートで塗り固められているため，bydolが侵入することはできない． 壁を構成する円は，互いに接したり交差したり内包関係になったりすることはなく，bydolがいる座標上に壁は存在しない． 各bydolには，合図が出る時点で位置する座標，射程，1度に発射できる弾数，壁で反射する弾を積んでいるか，倒された時に敵軍が得る点数の5つのパラメータが設定されている． 弾は，bydolがいる位置から360度どの方向へも発射することができ，一直線状に進む． 発射されてから進んだ弾の距離が射程の値以下である間，かつ他のbydolや壁に弾が当たらない間であれば，弾は進み続ける． フィールド上を動く全ての弾は，弾道が交差していても衝突しないものとする． bydolによっては壁で反射する弾を積んでいる場合がある． この場合のbydolの弾は全て，1回のみ壁で反射する． ただし，自分のbydolから壁の反射した地点までの距離と，反射した地点から相手のbydolまでの距離の合計が，射程の値以下でなければ，相手に当たったことにはならない． 壁で反射するときは図1のように，弾が壁に当たった地点に対して接線を引き，この線を基準に入射角&theta;1と反射角&theta;2が等しくなるように反射する． 弾道が壁を構成する円に接する場合，そのまままっすぐ弾は進み，壁で反射したことにはならない． 図1: 弾の反射 あるbydolは，発射できる弾数の範囲で，1度に複数の弾を撃ち，複数のbydolに当てることができる．ただし，同じbydolが，全く同じ方向へ向かって弾を2発以上撃つことは許されない． 各bydolには，倒された時に敵軍が得る点数が設定されている． この撃ち合いでは，より多くの点数を得た軍が勝者となる． 同じ点数を得た場合は，引き分けとする． bydolは1発弾を当てれば倒れるため，同じbydolに何発撃ち込もうが，得られる点数は1度きりである． 味方のbydolを撃った場合，失格になってしまうため絶対に撃ってはいけない． 自滅することも許されない． u'sにおける作戦指揮担当であるあなたの仕事は，各軍が最大の点数をとれるように行動したときの点数を求め，どちらの軍が勝つことができるのかを判定することである． これができれば，u'sはトップアイドルへ一歩近づくことができるだろう． 

    
      "
p01619,Computer Onesan,"ある日，おねえさんは，子供たちに組合せの数え方について教えてあげることになりました． そこで，おねえさんは，次のような問題を解いてみることにしました． 縦幅 1 ，横幅 1 の正方形を縦幅 n ，横幅 m の長方形に敷き詰めたときに，長方形の左上の頂点から右下の頂点への通り方が何通りあるかを数える 敷き詰めた正方形の辺の上しか通れない それぞれの通り方は，同じ場所を1度しか通らない 図1に，n = 2, m = 2 の場合の全ての通り方を示します． 図1では，全部で12通りの通り方を示しており，その経路は赤い太線で表しています． 図1: n = 2, m = 2 の場合の全ての通り方 この問題では， n と m が少し大きくなるだけで，組合せの数が爆発的に増加してしまい，手で数えるのがとても難しくなってしまいます． そこで，おねえさんは，自分の頭脳をロボットに移植し，25万年をかけて，10 x 10 の場合の組合せの数を数える計画を立てました． 「10 x 10 なんて計算するとおねえさん死んじゃう！やめて！」 止める子供たちをよそに，おねえさんは，計算を開始します． おねえさんは，そこまでしてでも，子供たちに組合せ爆発のすごさを教えてあげたいのです． おねえさんの熱意に心打たれたプログラマーのあなたは，この問題を解くプログラムを書いてあげることにしました． といっても，いきなり 10 x 10 を計算するプログラムを作るのは難しいので，手始めに m が小さい場合のプログラムを書くことにしました． 

    
      "
p01620,King's Inspection,"-->


"
p01621,Sim Forest 2013,"
-->


"
p01622,Twin book report,"
-->


"
p01623,Sinking islands,"
-->


"
p01624,Ononokomachi's Edit War,"
-->


"
p01625,Princess Tetra's Puzzle,"
-->


"
p01626,MirrorLabyrinth,"
-->


"
p01627,Seishun 18 Kippu 2013,"
会津合宿に参加予定の高槻さんは、家が貧乏であまりお金を持っていない。そのため、青春18きっぷを使用して、お金を節約しようとしている。18きっぷは、これ1枚だけで、鈍行列車ならば1日中乗り放題、改札の出入りも自由という優れものである（詳しい利用ルールについては省略）。
 
18きっぷの魅力は、乗り換えを行う駅で、空いている時間を使って、ご当地のお土産等を見てまわれる点である。彼女は、せっかくの機会なので、旅の途中でいろいろな駅を見て回りたいと考えている。ただし、次の電車に乗り遅れては困るため、乗り換え駅に到着した時刻から、乗り換え駅を出発する時刻までの間がt分以上のときだけ、その駅を見て回ることにした。
 
高槻さんの18きっぷを使った乗り換え計画が与えられるので、見て回れる駅の名前と時間を出力せよ。一番最初に出発する駅と、一番最後に到着する駅は、見て回る候補には入らないことに注意してほしい。
 

"
p01628,Amidakuji,"
会津合宿に参加予定の高槻さんは、家が貧乏であり、いつも紙をなるべく節約して使うようにしている。彼女は、会津合宿のチーム決めのために、他の参加者の人達とあみだくじをすることになった。
 
この合宿のあみだくじの作り方は次のようなものである。まず、紙にn本の縦棒を平行に書く。そして、m本の横棒を上から順番に、縦棒と垂直になるように、かつ横棒の高さが全て異なるように書いていく。例えば、sample input 1のあみだは、図1のようになる。
 
ここで、高槻さん、ちょっと不満げな表情。こんなに縦長にあみだくじを書いていると紙がもったいない。もっと、高さを圧縮できるはず。ということで、彼女のために以下に示すあみだくじの高さ圧縮の問題を解いてほしい。
 
まず、あみだくじの高さとは、同じ高さに存在する横棒をまとめて高さ1と数えて、これを一番下の横棒まで数えた値である。ここでは、高さ圧縮を行うために、各横棒を上下に自由に動かすことができるものとする。ただし、横棒を削除することも追加することも許されない。高さ圧縮をした後のあみだくじは、必ず以下の条件を満たしている必要がある。
 横棒の端点が他の横棒の端点と接していない。 圧縮後のあみだくじを辿った結果と、圧縮前のあみだくじを辿った結果が一致している。 
図2は、図1を圧縮したものである。「縦棒1と2を結ぶ横棒」が一番上まで移動して、「縦棒4と5を結ぶ横棒」と同じ高さとなり、この2つで高さ1。あとは、「縦棒3と4を結ぶ横棒」と「縦棒2と3を結ぶ横棒」は、それぞれ別の高さとなり、全体で高さ3である。
 
与えられたあみだくじを高さ圧縮し、圧縮後の高さを出力せよ。
 

"
p01629,Hotel,"
会津合宿に参加予定の高槻さんは、家が貧乏であまりお金を持っていない。彼女は、合宿のためにホテルを探しているが、なるべくお金を節約できるプランにするために、悩み中である。宿泊の合計金額が安くなるホテルの泊まり方を求めて、彼女に教えてあげよう。
 
宿泊するホテルの候補数は、n個であり、各ホテルをホテル1、ホテル2、...、ホテルnと呼ぶこととする。彼女は、これからd泊分の予約をこれらのホテルから選ぶことにしている。候補のホテルは全て、1泊ごとに宿泊料金が変動することがあるため、入力では各ホテルごとにd泊分の宿泊費が与えられる。
 
d泊分の宿泊費の合計が最小になるような、ホテルの泊まり方を出力せよ。ただし、d泊全て同じホテルに泊まる必要はないことに注意してほしい。安さのためであれば、彼女は1泊ごとにホテルの移動をすることも考えている。
 
もし、そのような宿泊方法が複数あるならば、ホテルの移動回数が最小になるような宿泊方法を出力せよ。ホテルの移動回数とは、x泊目(1 <= x < d)の宿泊ホテルとx+1泊目の宿泊ホテルが異なる場合にこれを1回の移動と考え、d泊分足し合わせた値である。
 
それでも1通りに定まらない場合は、辞書順で最も小さくなるような宿泊方法を出力すること。2つの宿泊ホテル番号の数列 a = {a1, a2, ..., ad} と b = {b1, b2, ..., bd} があったとき、aがbより辞書順で小さいとは、aiがbiと異なるような最初のiについて、aiがbiより小さいときのことを言う。
 

"
p01630,B2D,"
bdd(binary decision diagram)というデータ構造をご存知だろうか。近年、組み合わせ爆発お姉さんの動画関連でも話題になったzddは、bddが派生したデータ構造である。この問題は、bddの基本的な実装を行うものである。
 
bddとは、論理関数を表現する閉路のないグラフ(dag)である。例えば、表1の真理値表を表わす論理関数は、図1のbddとなる。bddは、0エッジ(破線矢印)、1エッジ(実線矢印)、0終端ノード(0の四角)、1終端ノード(1の四角)、変数ノード(数字が書かれた丸)の5種類の部品からなる。0終端ノードと1終端ノードは、一番下にそれぞれ1つずつ存在する。各変数ノードからは、0エッジと1エッジ、それぞれが1つずつ出力されており、次のノードへとつながっている。各変数ノードは、ノードに書かれた番号の変数に対応しており、その変数の値が1ならば1エッジ側へ、0ならば0エッジ側へ辿る。そうして、一番上のノードから辿った結果、1終端ノードに行き着けば1が答え、0終端ノードに行き着けば0が答えとなる。例えば、表1の真理値表の「変数1=1, 変数2=0, 変数3=1」をbddで辿ると、図1の太線のような辿り方となり、結果が1であることがわかる。この問題においては必ず、bddの上側から1段ずつ、変数1、変数2、...、変数nの順番に変数ノードが現れるものとする。
 
さて、この問題では、今説明した単純なbddを、簡約化規則を利用して圧縮するプログラムを作成してもらう。簡約化規則とは、図2に示す2つの規則である。まず、図2(a)の規則は、変数ノードaがあったとき、「aの0エッジの指す先＝aの1エッジの指す先」であるときに適用される。この場合、変数の値が0であろうと1であろうと遷移する先が1通りであるため、この変数ノードは必要のないものであるとわかる。そのため、この条件に当てはまる変数ノードは全て削除することができる。図2(b)の規則は、2つの変数ノードa, bがあったとき、「aの変数番号＝bの変数番号、かつaの0エッジの指す先＝bの0エッジの指す先、かつaの1エッジの指す先＝bの1エッジの指す先」であるときに適用される。この場合、二重に同じノードが存在していて無駄であることがわかるので、2つの変数ノードを1つの変数ノードとして共有することができる。
 
bddの形が変わらなくなるまで簡約化規則を繰り返し用いると、図1のbddは、図3(a)->(b)と変化していき、最終的に図3(c)のような、よりコンパクトなbddへと変形する。もともと変数ノードが7個だったbddが、変数ノード3個のbddになったことがわかる。
 
論理関数を表わす真理値表が入力されるので、簡約化規則を適用後のbddの変数ノード数を出力せよ。
 


"
p01631,English,"
会津合宿に参加予定の高槻さんは勉強熱心で、最近は英語の勉強をがんばっている。彼女は、携帯を使って次のようなゲームをプレイすることで、少しでも多く英単語を覚えようとしている。彼女が持っている携帯は、指で画面を操作するタッチパネル式である。
 
携帯の画面には、4 * 4のマス目が描かれており、各マスにはアルファベット大文字が書かれている。このゲームは、制限時間t秒の間に、マス目の中に隠されている英単語をたくさん見つけ、発見できた英単語の種類により点数を競うものである。
 
1つの単語を見つける手順は、次のようになる。まず、単語の1文字目に対応する開始マスを決めて、そこに指を置く。そして、今指を置いているマス目から、上下左右・斜めの、隣接する8方向のマスのいずれかに向かって、指でなぞっていく。ただし、開始マスから現在のマスまですでに辿ったことがあるマスは、通ることができない。単語の終了マスに達したら、そこで指を離す。その瞬間、開始マスから終了マスまで指でなぞった単語1つの点数が加点される。x文字の単語1つをなぞるためには、x秒の時間がかかる。ある単語をなぞってから、次の単語をなぞるための指の移動時間は無視してよい。
 
入力では、加点対象となる単語の辞書も入力される。この辞書の各単語には、点数が振られている。辞書の中に書かれている単語を指でなぞると、その単語に対応する点数が加算される。ただし、開始マスから終了マスまで、全く同じ指のなぞり方をした単語は、最初の1回しか点数加算されない。辞書に書かれていない単語を指でなぞっても加点はされない。
 
辞書とゲームの盤面が与えられるので、制限時間内に得られる最大の点数を出力せよ。
 


"
p01632,Bicycle,"
菊地君は、大の自転車好きである。今日も彼は、お気に入りの自転車に乗ってサイクリングロードへと走り出そうとしている。
 
彼が住む地域には、n個の町が存在する。各町を町1、町2...、町nと呼ぶこととする。彼が住む町は、町1である。この地域には、サイクリングを趣味としている人が多く、最近では頻繁に町と町を結ぶサイクリングロードが作られている。サイクリングロードを使うと、2つの町を双方向に移動できる。入力では、どの町とどの町が新しくサイクリングロードで繋がれたかが時系列順に入力される。
 
菊地君は、新しいサイクリングロードが1つ完成したときに、次に示す条件を満たすときだけサイクリングに出かける。まず、サイクリング中に同じ風景を何回も見るのはつまらないため、同じ町や同じサイクリングロードを2回以上通らないような道順である必要がある。サイクリングの終了時には家に帰るようにしたいため、スタート地点は町1で、ゴール地点は町1である必要がある。そして、完成した最新のサイクリングロード1つを必ず走らなければならない。また、全ての町やサイクリングロードを通る必要はない。
 
完成したサイクリングロードが時系列順に与えられるので、各サイクリングロードが完成した時点で、菊地君がサイクリングできるかどうかを答えよ。
 


"
p01633,Hole,"
魔法使いの萩原さんは、非常にネガティブな性格である。彼女は、何か落ち込むようなことがあると、穴掘りの魔法を使って穴を作り、泣きながら埋まってしまう。穴掘りの魔法とは、次のようなものである。
 
彼女は、まずn本の線分を地面に描く。そして、彼女が呪文を唱えると、線で囲まれた範囲に穴が出来上がる。交差・内包の関係にある2つの穴は、1つの穴として数える。ただし、頂点のみで接している2つの穴は、別々の穴として数える。
 
図1と図2に、sample input 1と2の図を示す。まず、図1において、aの三角形とbの三角形は、頂点のみで接しているため、別々の穴と数える。bの三角形とcの三角形は、辺同士重なっているため、1つの穴として数える。よって、図1は、穴2つである。図2では、dの四角形がeの四角形に包含されているため、これらは1つの穴と数える。eは、右上の穴とも交差しているため、図2は、穴1つである。
 
あなたは、萩原さんの世話係であり、彼女が作った無数の穴を埋めなければならない。どれくらい穴を埋めないといけないのかを知るために、彼女が作った穴の数を求めるプログラムを作成せよ。
 


"
p01634,Register Phase,"

インターネットをより安全に活用するために、堅牢なパスワードを使うことは重要である。それと同時に、同じパスワードを使い回さないことも非常に重要である。どんなに強いパスワードを使っていても、一箇所で平文が流出してしまえば、破るのは非常に容易になってしまう。もちろん、全てのアプリケーションがパスワードをハッシュ化し、saltを適切に使用していれば流出してもそのような被害は発生しないが、いまだにパスワードを平文で保存しているアプリケーションはあるのである。 
さて、そろそろコンテストが始まる。チームのアカウントを登録しなくては…。 
問題

パスワードを表す文字列が与えられる。その文字列が以下の条件を全て満たすか調べ、満たす場合は<span style=
""font-family: monospace;"">""valid""と、ひとつでも満たさない項目がある場合は""invalid""と出力せよ。 文字列長が6以上である 数字を一つ以上含んでいる 大文字英字を一つ以上含んでいる 小文字英字を一つ以上含んでいる 

入力
パスワードを表す文字列が一行に与えられる。 
出力
パスワードを表す文字列が問題の条件を全て満たすなら<span style=
""font-family: monospace;"">""valid""と、満たさない条件があるなら<span style=
""font-family: monospace;"">""invalid""と、一行に出力せよ。 パスワードを表す文字列は1文字以上20文字以内である パスワードを表す文字列は英大文字、英小文字、数字のみを含む 世界中で広く使われているパスワードである。 素晴しいパスワードである。 暗証番号として広く使われている。 ぎりぎり6文字以上である。 "
p01635,Time Complexity,"
icpc world finals 1日目 
プログラミングコンテストではプログラムの実行時間を把握する事が重要だ。
実行時間の見積もりを誤り、 時間制限をオーバーしてしまうコードを書いてしまうと、 そのぶん時間をロスしてしまう。
icpcのようにコンピュータが1台しか使えないチーム戦ではなおさらである。 
そこで、icpc world
finalsを前に控えたティー氏はプログラムの実行時間を暗算で求める訓練を始めることにした。
「logは定数のようなもの」なので、まずは多項式に取り組むとしよう。 
問題
ある問題の答えを計算するプログラムと、それを実行するコンピュータがある。
問題の入力を表す正整数\(n\)、 入力\(n\)に応じてプログラム中で実行される命令の数を表す多項式\(f(n)\)、
コンピュータの1命令の実行時間\(t\)[ナノ秒]（=\( 10^{-9} \)[秒]）が与えられる。
多項式\(f(n)\)の回数だけ命令を実行した時のプログラムの総実行時間が1秒「以下」であるかを判定し、
1秒「以下」であるならば総実行時間を求めよ。 1行目に 問題の入力を表す正整数\(n\)と 1命令の実行時間[ナノ秒]を表す整数\(t\)が空白区切りで与えられる。
2行目に実行される命令の数を表す多項式\(f(n)\)が与えられる。 
多項式\( f(n) \)は以下のbnfで表される。 

&lt;poly&gt; ::= &lt;poly&gt; ""+"" &lt;mono&gt; | &lt;mono&gt;
&lt;mono&gt; ::= ""n^"" &lt;num&gt;
&lt;num&gt; ::= ""0"" | ""1"" | ""2"" | ""3"" | ""4"" | ""5"" | ""6"" | ""7"" | ""8"" | ""9""

ここで各単項式n^kは、\(n\)の\(k\)乗を表す。 
出力

プログラムの総実行時間が1秒「以下」である場合には総実行時間を[ナノ秒]単位で、1秒を「超過」する場合には""tle""を1行に出力せよ。 
制約
 \( 1 \leq n \leq 10^{9}(= 1000000000) \) \( 1 \leq t \leq 10^{9}(= 1000000000) \) 多項式\( f(n) \)の次数は0以上9以下、単項式の数は1以上10以下 総実行時間は\( (100^{1} + 100^{2} + 100^{3}) \times 100 \)[ナノ秒]である。 総実行時間は\( 1000^{3} + 1000^{0} = 10^{9}+1 \)[ナノ秒]であり、1[秒]を超えてしまう。 総実行時間は\( (10^{8})^{3} \times 10^{8} = 10^{32} \)[ナノ秒]である。 "
p01636,Mysterious Operator,"
ケー氏がいつものように某snsを閲覧していると、
「解ける人はiq150以上ある」という問題がタイムラインに流れてきた。
ケー氏はiqが150以上あるので、見るまでもなくその問題を一瞬で解いてしまった。
彼にしてみれば、このような問題なぞに頭を働かせる必要は無い。 コンピュータに任せれば充分なのである。 
問題
問題には以下のような謎の数式が書かれていた。 \( 5 + 3 = 28 \) \( 9 + 1 = 810 \) \(8 + 6 = 214 \) \( 5 + 4 = 19 \) \( 2 + 2 = 4 \) \( 15 + 8 = 723 \) \( 7 + 9 = -216 \) \( 3 + 0 = 33 \) 上記の演算子\( + \)について考えた時、ある正整数\( a \)について\( x \geq 0, y \geq 0 \)かつ\( x + y = a \)になるような整数のペア\( x,y \)の個数を求めよ。 
入力


正整数\(a\)が一行で与えられる。
 
\( a = x + y, x \geq 0, y \geq 0\)を満たすペア\((x,y)\)の個数を一行に出力せよ。
 \( 1 \leq a \leq 10^9(= 1000000000) \) \( 5 + 4 \)の1通りである。 \( 11 + 11 \)と、\( 2 + 0 \)の2通りが存在する。 \( 1 + 0 = 11 , 0 + 1 = -11 \)である。\( 1 \)は生成することができない。 \( 1 - 0 \)は\( 101 \)ではないことに注意すること。 
入力5


660233276

出力5

4
"
p01637,Change,"
icpc world finals 2日目 
ティー氏らは空港のターミナルについた。 これから飛行機を乗り継ぎ敵地r国に乗り込むのである。 我々はd国を経由するため、手持ちのお金を2種類の通貨に両替せねばならない。 
ケー氏「ティーさんはどのように両替しますか？」 
ティー氏「ハフハフハフハフハフハフハフハフ」 
ケー氏「なるほど。私も20,000円をd国用に5,000円、r国用に15,000円割り振ろうと思います」 
ティー氏「ハフハフハフハフハフハフハフハフ」 
ケー氏「あれ？変ですね。両替結果が私と違いますね…。」 
問題
ある旅行者は、日本を旅立ち、d国（通貨単位d）、r国（通貨単位r）を観光し、日本に帰ってくることを考えている。 今、\( m \)円持っている。 \( c_{d} \)[d]、\( c_{r} \)[r]を各国で消費することが分かっているので、 お金が不足しないように両替したい。 \( x \)円をd国のお金に両替すると\( \lfloor \frac{r_{d}x}{100} \rfloor \)[d]に、 \( x \)円をr国のお金に両替すると\( \lfloor \frac{r_{r}x}{100} \rfloor \)[r]になる。 
例えば、 \( r_{d}=11, c_{d}=10 \)の時に 150円をd国のお金に両替すると\( \lfloor \frac{11 \times 150}{100} \rfloor = \)16[d]になるためお金は不足しない。 しかし、50円しか両替しないと5[d]になり10[d]に満たないためお金が不足する。 
また、帰国時には手持ちのお金を全て日本円に両替する。 \( x \)[d]を日本円に両替すると\( \lfloor \frac{100x}{r_{d}} \rfloor \)円に、 \( x \)[r]を日本円に両替すると\( \lfloor \frac{100x}{r_{r}} \rfloor \)円になる。 
先の1つ目の例では、 得られた16[d]のうち10[d]を消費するため6[d]余る。 これを日本円に両替すると\( \lfloor \frac{100 \times 6}{11} \rfloor = 54\)円になる。 
出国時に日本円の最適な両替を行った時、帰国時に最終的に手元に戻ってくる日本円の最大額を求めよ。 いかなる両替を行なっても、d国またはr国のいずれかでお金が不足する場合には&quot;-1&quot;と出力せよ。 
※\( \lfloor x \rfloor \)は、\(x\)を超えない最大の整数を表す。 1行目に 現在手持ちの日本円の額\(m\)、 日本円とd国の通貨単位との両替レート\( r_{d} \)、 日本円とr国の通貨単位との両替レート\( r_{r} \)、 d国でのお金の消費額\( c_{d} \)、 r国でのお金の消費額\( c_{r} \)が空白区切りで与えられる。
 
出力
手元に戻ってくる日本円の最大額を1行に出力せよ。 いかなる両替を行なっても、d国またはr国のいずれかでお金が不足する場合は&quot;-1&quot;を出力せよ。 667円をd国のお金に、10,000円をr国のお金に変換すれば、それぞれ20[d]、100[r]が得られる。 この旅行者は大金持ちである。 この旅行者は一文無しであり、どこにも行けない。 
"
p01638,Pie Chart is as easy as pie.,"icpc world finals 3日目 
この日、ティー氏はチーム内の言語使用割合を調べていた。
珍しいことに、我々のチームは使用言語を統一していない。 調査の結果、2人がc++、1人がjavaを使っていることが分かった。
さて、これをパイチャート（円グラフ）にしてみよう。 
 
おや、javaの使用割合が少ないように見えるな。
どう考えてもこんなはずはないので少々手を加えよう。 これは最近流行りのテクニックであり、
「パイチャートの中心座標をずらす」というものだ。 （皆さんはマネしてはいけません。） 
 
うむ、これでバランスがとれた。 ところで面積はどのように変わったのだろう？ 
問題
半径\(r\)、項目数\(n\)のパイチャート（円グラフ）が与えられる。
項目\(i\)の構成比率は\( p_{i} \)[%]であり、座標\( (0, r)
\)から時計回りに項目が割り当てられる（下図を参照）。 パイチャートの中心座標が\( (0, 0) \)から\( (x, y)
\)に変化した時、 各項目の占める面積は何%変化するかを求めよ。 
 
入力


r x y n
p1 p2 … pn

1行目に パイチャートの半径\(r\)、中心のx座標\(x\)、y座標\(y\)、項目数\(n\)が空白区切りで与えられる。
2行目には、 項目\(i\)の構成比率\( p_{i} \)[%]が空白区切りで与えられる。
出力

1行目に各項目の占める面積の変化率[%]を「整数に切り捨てた値」を空白区切りで出力せよ。 入力は全て整数で与えられる \( r = 100 \) \( x^{2} + y^{2} &lt; r^{2} \) \( 2 \leq n \leq 10 \) \( p_{i} &gt; 0 (1 \leq i \leq n) \) \( \sum_{1 \leq i \leq n}p_{i} = 100 \) \( (x, y) \)が高々距離\( 10^{-3} \)移動しても答えが変化しないことが保証される 

入出力例
入力1


100 50 -50 2
67 33

出力1


71 156


項目1の面積は約21048から約15153に変化した。 変化率は15153/21048 ≒
71.99%。 
項目2の面積は約10367から約16262に変化した。 変化率は16262/10367 ≒
156.86%。 
入力2


100 -50 0 4
10 20 30 40

出力2


115 144 113 64


項目ごとのおよその面積の変化は以下の通り。 項目1: 3142 → 3619 項目2: 6283 → 9078 項目3: 9425 → 10675 項目4: 12566 → 8044 

入力3


100 70 -70 8
1 24 1 24 1 24 1 24

出力3


167 97 27 10 32 102 172 189

"
p01639,MLE,"

icpc world finals 4日目 
暗い嵐の夜だった。 夢の中でティー氏はタイムスリップしていた。
icpcの会場のようだが何かおかしい…。 もしや…これは、n年前（nは自然数）のicpcなのか…? 混乱の内に競技は開始してしまった。
だが慌てる必要はない。 きっと問題も簡単に違いない。 例えばこれなどはソートするだけで解けてしまうはずではないか。
冷静にコードを書き上げ、速やかにsubmit。 
しかしその結果は…memory limit exceeded…?! 
問題
c++言語については以下のコード java言語については以下のコード で与えられる擬似乱数列\( a[0], a[1], \cdots, a[n-1] \)を昇順にソートする。 \(k\)番目の数（\(
a[k-1] \)）を答えよ。 1行目に 擬似乱数列の長さ\(n\)、 求めるインデックス\(k\)、 コード中の初期値\(x0\) が空白区切りで与えられる。 

出力
問題文にて定義された擬似乱数列において\(k\)番目に小さい数を1行に出力せよ。 \( 0 \leq x0 \leq 9 \) \( 1 \leq n \leq 10^{8}(= 100000000) \) \( 1 \leq k \leq n \) 
この入力において生成される数列は以下の通りである。
 

1
1082269761
1152992998833853505
-7269227409276787159
-768720241707614171
-8787613929710185883
-670945072575735807
-6753709453369041295
-4166779903597258483
9024654201992055039
8332670729032836398
2074683623940568804
-1176172910426220663
5632491372296299238
-8006175397324373085
-8536891001451786268
-3486562341448986757
1956468987595729445
-6260278484400246991
1076885984028793263

入力2

1000000 100 2

出力2

-9221458681145860019

入力3

100000000 10000000 3

出力3

-7379326796154077070
"
p01640,Get Lost,"
icpc world finals 5日目 
ティー氏はr国の街で迷ってしまった。
困ったことに、街並みが似ているため、自分が今どこにいるかが全く分からない。
r国は「おそろしあ」であるから、敵に襲撃される前にホテルへ戻らねばならない。 幸い、どのように曲がって来たかだけは覚えているので、
行き当たりばったりに進んでみよう。 
問題
\( w \times h \)マスの二次元格子状のマップがある。 左上のマスの座標を\(
(1, 1) \)、右下のマスの座標を\( (w, h) \)とする。 マップの周りは壁で囲まれており、
\(n\)個の障害物が座標\( (x_{i}, y_{i}) (1 \leq i \leq n) \)に置かれている。
さらに、命令列\( r_{1}r_{2} \cdots r_{m} \)と目的座標\( (g_{x}, g_{y})
\)が与えられる。 開始座標と進行方向の設定後、歩行者は以下の移動規則に従って歩行を開始する。 
1. カウンタを\( i=1
\)に初期化し、開始座標と進行方向（上・下・左・右）を設定する。
2. 壁・障害物に出会うまで直進する。
3. 壁・障害物の手前で次のいずれかを実行する。
3. a. \( i&gt;m \)、すなわち命令が無ければ歩行を終了する。
3. b. 命令\( r_{i} \)がlならば左、rならば右へ方向転換する。
4. \( i \)をインクリメントする。
5. 2.に戻る。 
歩行開始から歩行終了までに通過した座標（開始座標を含む）に目的座標\( (g_{x},
g_{y}) \)が含まれれば、歩行者が目的地に辿り着いたと解釈する。
目的地に辿り着くことのできる開始座標・進行方向の組み合わせは何通りあるかを求めよ。
ただし、開始座標には障害物やマップ外の座標を設定することはできないとする。 （目的座標を設定することはできる。） 1行目に マップの横幅\(w\)、縦幅\(h\)、目的地のx座標\( g_{x} \)、目的地のy座標\( g_{y}
\)、障害物の数\(n\)が空白区切りで与えられる。 2行目から\( n+1 \)行目に 各障害物の座標\( (x_{i},
y_{i}) \)が空白区切りで与えられる。 \( n+2 \)行目に長さ\(m\)の命令列\( r_{1}r_{2} \cdots
r_{m} \)が与えられる。 
出力
目的地に辿り着けるような 開始座標・進行方向の組み合わせの数を1行に出力せよ。 入力は全て整数である \( 2 \leq w, h \leq 10^{5}(= 100000) \) \( 0 \leq n \leq 10^{5}(= 100000) \) \( 1 \leq g_{x}, x_{i} \leq w \) \( 1 \leq g_{y}, y_{i} \leq h \) \( (x_{i}, y_{i}) \not = (g_{x}, g_{y}) (1 \leq i \leq n)
\) \( (x_{i}, y_{i}) \not = (x_{j}, y_{j}) (i \not = j) \) \( r_{i} \in \{ l, r \} (1 \leq i \leq m) \) \( 1 \leq m \leq 20 \) 以下の5通りの歩行に加え、 目的座標を開始座標とする歩行（4通り）が目的座標を通過する。 以下の開始座標・進行方向から開始する歩行は目的座標を通過する。 

入力3


100000 100000 46597 49716 17
38713 77141
46598 78075
66177 49715
58569 77142
48303 12742
32829 65105
32830 78076
70273 27408
48302 21196
27119 54458
38714 65104
46598 54457
27118 12743
60242 21197
60241 1101
58568 27409
93581 1100
llrrllllrrll

出力3


647505
"
p01641,Brainf*ck,"

bさんはbrainf*ckが大好きで、学校で出された課題も全てbrainf*ckを使って提出している。
最近そんなbさんに洗脳され、先生が課題を解く言語をbrainf*ckに限定してしまった。 
このままでは皆が単位を落としてしまう。
あなたは、brainf*ckプログラムを生成するプログラムを作ることで、皆の単位を救い出す手伝いをすることにした。 

もちろん、brainf*ckプログラムを生成するプログラムはbrainf*ckで記述する必要はない。 
問題
指定された文字列\( s \)を出力するbrainf*ckプログラムを生成せよ。 
brainf*ck言語仕様
ジャッジで用いるbrainf*ckの言語仕様を記す。 
brainf*ckプログラムは文字列で記述される。
プログラム文字列は角括弧(<span style=
""font-family: monospace;"">[および<span style=
""font-family: monospace;"">])の対応が取れている必要があるが、それ以外の制限はない。 

brainf*ckプログラムが実行される時、バイト配列とその要素を指し示すポインターを持つ。バイト配列は無限の大きさを持ち、8bit非負整数の情報を保持することができる。
これをc言語で表すと次のようになる。 

unsigned char memory[100000]; // バイト配列（実際にはもっと広大な領域を確保する）
unsigned char *ptr = memory; // バイト配列の要素を指し示すポインター

brainf*ckでは1つの命令は1文字で表され、命令には以下の7種類がある。 

.brainfuck {
  border-collapse: collapse;
  border: solid 1px #999;
  font-size: 100%;
}

.brainfuck th, .brainfuck td{
  border: solid 1px #999;
  padding: 4px 6px;
}

.brainfuck th {
  background: #e6e6e6;
  text-align: center;
  color: #666;
}





文字


意味


c言語での記述法





+


ポインターが示すバイト配列の要素の値を1増やす。値が255の時は0になる。


(*ptr)++;




-


ポインターが示すバイト配列の要素の値を1減らす。値が0の時は255になる。


(*ptr)--;




&gt;


ポインターが示すバイト配列の要素の位置を正に1ずらす。


ptr++;




&lt;


ポインターが示すバイト配列の要素の位置を負に1ずらす。


ptr--;




[


ポインターが示すバイト配列の要素の値が0ならば、対応する<tt class=
""backtick"">]に飛ぶ。そうでなければ次の命令に進む。


while(*ptr)&nbsp;{




]


ポインターが示すバイト配列の要素の値が0ならば、対応する[に飛ぶ。そうでなければ次の命令に進む。


}&nbsp;do&nbsp;while(*ptr);




.


ポインターが示すバイト配列の要素の値をasciiコードと見なし、文字を出力する。


putchar(*ptr);




命令は先頭から順に実行され、命令を表す文字ではない文字はコメントとして無視される。 

以上のbrainf*ckの仕様はおおよそ一般に使われているbrainf*ckと同様なものなので、<a href=
""http://ja.wikipedia.org/wiki/brainfuck"">http://ja.wikipedia.org/wiki/brainfuckなどを参考にすることができる。ただし、ジャッジに用いるbrainf*ckは、一文字入力命令を使用することはできないので注意すること。 
入力
1行に1000文字以内の文字列\( s \)が与えられる。 
出力
brainf*ckコードを20000文字以内で出力せよ。実行結果が\( s
\)に一致した任意のプログラムがacceptされる。 \( 1 \leq |s| \leq 1000 \) \( s \)はascii文字列 \( s \)にはasciiコード33〜126の文字しか含まれない（記号、英字、数字のみで空白や制御文字を含まない） 出力したプログラムの長さは空白、改行、コメントを含めて\( 20000 \)文字までを許容する 命令は\( 10^7 \)回実行されるとストップする brainf*ckプログラムは最後に改行を出力してはならない 入力に空白が含まれることはない。 このケースは33から126のasciiコードを順番に並べたものである。 "
p01642,Reverse Game,"

あるところにオセロが趣味な女の子がいました。時間があるときに家族とオセロを楽しんでいます。 

ある日、女の子はいつものようにオセロで遊ぼうとしました。ところが、みんな忙しくて誰も遊んでくれませんでした。
そこでオセロのボードとこまを使って１人で遊べるゲームを考え出しました。 
問題

縦\( r \)マス、横\( c \)マスのマス目全てにオセロの駒が上面が黒あるいは白になるように配置されている。 

以下の図のように「あるマスを選んで、その上下左右斜め方向にある駒を全て裏返す」という操作を繰り返し行うことを考える。
全ての駒の上面を白にするような操作の仕方の個数を求めよ。 ただし、以下の条件を満たす必要がある。 同じマスに二度操作を行うことはできない 操作の順序は区別しない 全ての駒の上面が白になってから操作を続けることは可能である 

 
入力
1行目に整数\( r \)と整数\( c \)がそれぞれ空白区切りで与えられる。 
続けて\( r \)行に、それぞれ\( c \)個の整数値(0か1)が与えられる。\( r \)行目の\(
c \)個目の整数は、マス目(r,c)の状態を表す。 
1は上面が黒であることを、0は上面が白であることを表す。 
出力
盤面の全ての駒の上面を白にすることができるなら、そのような操作の仕方の個数を\(
1000000009 (= 10 ^ 9 + 9) \)で割った余りを1行に出力せよ。 
盤面の全ての駒の上面を白にすることができないなら、\( 0 \)と1行に出力せよ。 \(1 \leq r \leq 50, 1 \leq c \leq 50\) \( \{(1,1)\}, \{(1,2)\}, \{(1,3)\}, \{(1,1),(1,2),(1,3)\} \)の4通りである。 
入力2


1 3
1 0 1

出力2


0

入力3


2 4
0 1 0 1
1 0 1 0

出力3


1
"
p01643,garde Art,"
icpc world finals 6日目 
ロシア構成主義とは、1910年代半ばに始まったソ連における芸術運動である。
r国に長く滞在していたティー氏は、 そのようなものに感化され、 icpc world finalsのリハーサル中にも関わらず、
クールなデザインを作ることにした。 ティー氏は語る： 「記号は円と線分だけで充分だ。
線分をいかに美しく交差させるかが重要である。」 
問題
円周に\(n\)個の座標\( 1, 2, …, n \)を等間隔に割り当てる。
各座標からはちょうど1本の線分が出ており、 座標\( i \)の線分は異なる座標\( a_{i} \)に結ばれている。
（逆に、座標\( a_{i} \)の線分は座標\( a_{a_{i}} = i \)に結ばれている。） この状態から高々\( k
\)本の線分を（座標・長さに関係なく自由に）円周上に結び直すことが出来る。 互いに交差している線分の集合の最大サイズを答えよ。 1行目に座標の数\(n\)、結び直すことのできる線分の数\(k\)が空白区切りで与えられる。
2行目に座標\(i\)の線分が結ばれる座標を表す\( a_{i} \)が空白区切りで与えられる。 
出力
高々\(k\)本の線分を結び直した後に
互いに交差している線分の集合の最大サイズを1行に出力せよ。 \( 2 \leq n \leq 8000 \) \(n\)は偶数 \( 0 \leq k \leq \min(n/2, 20) \) \( 1 \leq a_{i} \leq n \) 線分を自分自身に結ぶことは無い 

 同じ座標に2本以上の線分が結ばれることは無い 

 \(i\)から\(j\)に線分が結ばれているならば、\(j\)から\(i\)に線分が結ばれている 

 
互いに交差する線分は下図の赤い線分で表される。
 
1,7を結ぶ線分を下図のように結び直せば互いに交差する3つの線分が得られる。
 全ての線分は互いに交差しているため、交差する最大の線分の数は4となる。 
"
p01644,Collector,"
※この物語はフィクションであり、実在の人物、団体などとは一切関係がありません。 
最近ソーシャルゲームがとても人気で、
たくさんの会社がソーシャルゲームを開発しています。 
あなたは競合しているソーシャルゲーム開発会社の一つにスパイとして潜入しています。 
問題
あなたの務めている会社では、ソーシャルゲームを開発している。
開発しているゲームは、カードを集めて戦うゲームであり、1回300円の有料”ガチャガチャ”を収益の柱にしている。
このゲームのカードには、”ノーマル”、”レア”、”sレア”の3種類がある。”sレア”カードはn種類存在する。
有料”ガチャガチャ”では、1回行うごとに97％の確率で1枚のレアカードが手に入り、3%の確率で1枚のsレアカードが手に入る。 

有料”ガチャガチャ”における各sレアカードの出現割合(合計3%)を操作する権限を持っているあなたは、
会社の利益を「減少」させることにした。 
まず、様々なプレイヤーの有料”ガチャガチャ”の利用傾向を調べたところ、 「各プレイヤーは、
各々の好きなsレアカードを引くと、 満足し、その後は”ガチャガチャ”の利用を行わない」ということが明らかになった。 以上の情報より、
あなたは ”各プレイヤーは、特定のsレアカードを好み、そのsレアカードを引くまでガチャガチャをし続ける”
という仮定の下で会社の利益をモデル化した。 
すなわち会社の利益とは、 sレアカードiを好む人の割合 ×
sレアカードiが得られるまでの消費金額の期待値 の総和である。 
sレアカードの出現割合を適切に操作することで、 会社の利益を「最小化」せよ。 
ただし、出現割合は以下の条件を満たさなければならない。 sレアカード全体の出現割合の和は3%である 各sレアカードの出現割合は最低0.01%である 

入力


n (sレアカードの種類)
p_1 (カード1が好きな人の割合)
p_2 (カード2が好きな人の割合)
...
p_n (カードnが好きな人の割合)

出力
問題文で定義された会社の利益の最小値を出力せよ。 \( n \)は整数 \( 1 \leq n \leq 300 \) \( 0.0 \leq p_i (1 \leq i \leq n) \leq 1.0 \) \( p_1 + p_2 + \cdots + p_n = 1.0 \) \( p_i \)は小数点以下5桁まで与えられる 誤差は相対\( 10 ^ {-6} \) まで許容される カード1は\( 0.01% \)の割合で出現し、カード2は\( 2.99% \)の割合で出現するように設定する。 
入力3

2
0.50000
0.50000

出力3

20000.0000000
"
p01645,The Return of FizzBuzz,"
icpc world finals 7日目 
いよいよ明日はicpc world finalsの本番である。
ティー氏はあるオンラインジャッジ(aru online judge)で練習をすることにした。
問題一覧を眺めているとfizzbuzzという問題が目についた。
この問題は、fizzbuzzゲームで得られる発言のn文字目から20文字を出力するというものだ。 
…ふぅ。あっという間に解けてしまった。 これでは簡単すぎた。
入力と出力を逆にした問題を作ってみることにしよう。 
問題

fizzbuzzとは、1以上の整数を順に、以下のルールに従って発言していくゲームである。 3で割り切れる時には「fizz」 5で割り切れる時には「buzz」 3と5の両方で割り切れる時には「fizzbuzz」 それ以外の時はその数字 

ゲームの進行状況を以下に示す。
1, 2, fizz, 4, buzz, fizz, 7, 8, fizz, buzz,
11, fizz, 13, 14, fizzbuzz, 16, … 
得られた発言を結合することで得られる（無限長の）文字列をfizzbuzz stringと呼ぶ。
ある文字列\(s\)が与えられる。 \(s\)がfizzbuzz stringの部分文字列として出現するかを判定し、
出現する場合には最初に出現するインデックスを求めよ。 入力は複数のテストケースからなる。 1行目にテストケース数\(n\)が与えられる。 2行目から\( n+1
\)行目は各テストケースに対応し、 文字列\( s_{i} \)が1行で与えられる。 
出力
\(i\)番目の文字列\( s_{i} \)について、 \( s_{i}
\)がfizzbuzz stringの部分文字列として出現する場合には最初に出現するインデックスを(1-indexで)、
出現しない場合には""-1""を\(i\)行目に出力せよ。 \( 1 \leq n \leq 20 \) 文字列は文字\( \{ 0,1,\cdots,8,9
,\mbox{f},\mbox{b},\mbox{i},\mbox{u},\mbox{z} \} (1 \leq i \leq n)
\)からなる。 文字列の長さは1以上15以下である。 入力例は6つのテストケースからなる。 それぞれ以下の発言に対応する。 …, buzz, fizz, 7, 8, fizz, buzz, … …, fizz, 97, 98, fizz, buzz, 101, fizz, … …, 7, 8, fizz, buzz, 11, 12, … 存在しない …, 1111111109, fizzbuzz, 1111111111,
1111111112, fizz, 1111111114, … …, 1123456787, fizz, 1123456789, buzz, fizz, … 


"
p01646,Dictionary,"
we found a dictionary of the ancient civilization mayo (acm) during excavation of the ruins.
after analysis of the dictionary, we revealed they used a language that had not more than 26 letters.
so one of us mapped each letter to a different english alphabet and typed all the words in the dictionary into a computer.
 
how the words are ordered in the dictionary, especially whether they are ordered lexicographically, is an interesting topic to many people.
as a good programmer, you are requested to write a program to judge whether we can consider the words to be sorted in a lexicographical order.
 
note:
in a lexicographical order, a word always precedes other words it is a prefix of.
for example, ab 
precedes abc, 
abde, and so on.
 


"
p01647,Texas hold 'em,"
texas hold 'em is one of the standard poker games, originated in texas, united states.
it is played with a standard deck of 52 cards, which has 4 suits (spades, hearts, diamonds and clubs) and 13 ranks (a, k, q, j and 10-2), without jokers.
 
with betting aside, a game goes as described below.
 
at the beginning each player is dealt with two cards face down.
these cards are called hole cards or pocket cards, and do not have to be revealed until the showdown.
then the dealer deals three cards face up as community cards, i.e. cards shared by all players.
these three cards are called the flop.
the flop is followed by another community card called the turn then one more community card called the river.
 
after the river, the game goes on to the showdown.
all players reveal their hole cards at this point.
then each player chooses five out of the seven cards, i.e. their two hole cards and the five community cards, to form a hand.
the player forming the strongest hand wins the game.
there are ten possible kinds of hands, listed from the strongest to the weakest:
  royal straight flush: a, k, q, j and 10 of the same suit. this is a special case of straight flush.  straight flush: five cards in sequence (e.g. 7, 6, 5, 4 and 3) and of the same suit.  four of a kind: four cards of the same rank.  full house: three cards of the same rank, plus a pair of another rank.  flush: five cards of the same suit, but not in sequence.  straight: five cards in sequence, but not of the same suit.  three of a kind: just three cards of the same rank.  two pairs: two cards of the same rank, and two other cards of another same rank.  one pair: just a pair of cards (two cards) of the same rank.  high card: any other hand. 
for the purpose of a sequence, j, q and k are treated as 11, 12 and 13 respectively.
a can be seen as a rank either next above k or next below 2, thus both a-k-q-j-10 and 5-4-3-2-a are possible (but not 3-2-a-k-q or the likes).
 
if more than one player has the same kind of hand, ties are broken by comparing the ranks of the cards.
the basic idea is to compare first those forming sets (pairs, triples or quads) then the rest cards one by one from the highest-ranked to the lowest-ranked, until ties are broken.
more specifically:
  royal straight flush: (ties are not broken)  straight flush: compare the highest-ranked card.  four of a kind: compare the four cards, then the remaining one.  full house: compare the three cards, then the pair.  flush: compare all cards one by one.  straight: compare the highest-ranked card.  three of a kind: compare the three cards, then the remaining two.  two pairs: compare the higher-ranked pair, then the lower-ranked, then the last one.  one pair: compare the pair, then the remaining three.  high card: compare all cards one by one. 
the order of the ranks is a, k, q, j, 10, 9, ..., 2, from the highest to the lowest,
except for a next to 2 in a straight regarded as lower than 2.
note that there are exceptional cases where ties remain.
also note that the suits are not considered at all in tie-breaking.
 
here are a few examples of comparison (note these are only intended for explanatory purpose; some combinations cannot happen in texas hold 'em):
 j-j-j-6-3 and k-k-q-q-8.  
the former beats the latter since three of a kind is stronger than two pairs.
 j-j-j-6-3 and k-q-8-8-8.  
since both are three of a kind, the triples are considered first, j and 8 in this case.
j is higher, hence the former is a stronger hand.
the remaining cards, 6-3 and k-q, are not considered as the tie is already broken.
 q-j-8-6-3 and q-j-8-5-3.  
both are high cards, assuming hands not of a single suit (i.e. flush).
the three highest-ranked cards q-j-8 are the same, so the fourth highest are compared.
the former is stronger since 6 is higher than 5.
 9-9-q-7-2 and 9-9-j-8-5.  
both are one pair, with the pair of the same rank (9). 
so the remaining cards, q-7-2 and j-8-5, are compared from the highest to the lowest,
and the former wins as q is higher than j.
 
now suppose you are playing a game of texas hold 'em with one opponent, and the hole cards and the flop have already been dealt.
you are surprisingly telepathic and able to know the cards the opponent has.
your ability is not, however, as strong as you can predict which the turn and the river will be.
 
your task is to write a program that calculates the probability of your winning the game,
assuming the turn and the river are chosen uniformly randomly from the remaining cards.
you and the opponent always have to choose the hand strongest possible.
ties should be included in the calculation, i.e. should be counted as losses.
 


"
p01648,Median Tree,"
you are given a connected undirected graph which has even numbers of nodes.
a connected graph is a graph in which all nodes are connected directly or indirectly by  edges.
 
your task is to find a spanning tree whose median value of edges' costs is  minimum.
a spanning tree of a graph means that a tree which contains all nodes of the graph.
 


"
p01649,Billiard,"
you have a billiard table.
the playing area of the table is rectangular.
this billiard table is special as it has no pockets, and the playing area is completely surrounded with a cushion.
 
you succeeded in producing a ultra-precision billiards playing robot.
when you put some balls on the table, the machine hits one of those balls.
the hit ball stops after 10,000 unit distance in total moved.
 
when a ball collided with the cushion of the table, the ball takes the orbit like mirror reflection.
when a ball collided with the corner, the ball bounces back on the course that came.
 
your mission is to predict which ball collides first with the ball which the robot hits .
 


"
p01650,Stack Maze,"
there is a maze which can be described as a w \times h grid.
the upper-left cell is denoted as (1, 1), and the lower-right cell is (w, h).
you  are now at the cell (1, 1) and  have to  go to the cell (w, h).
however, you can only move to the right adjacent cell or to the lower adjacent cell.
the following figure is an example of a maze.
 
in the maze, some cells are free (denoted by .) and some cells are occupied by rocks (denoted by #), where you cannot enter.
also there are jewels (denoted by lowercase alphabets) in some of the free cells  and holes to place jewels (denoted by uppercase alphabets).
different alphabets  correspond to different types of jewels, i.e. a cell denoted by a contains a jewel of type a, and a cell denoted by a contains a hole to place a jewel of type a.
it is said that, when we place a jewel to a corresponding hole, something happy will happen.
 
at the cells with jewels, you can choose whether you pick a jewel or not.
similarly, at the cells with holes, you can choose whether you place a jewel you have or not.
initially you do not have any jewels.
you have a very big bag, so you can bring arbitrarily many jewels.
however, your bag is a stack, that is, you can only place the jewel that you  picked up last.
 
on the way from cell (1, 1) to cell (w, h), how many jewels can you place to correct holes?
 


"
p01651,Counting 1's,"
let b_i(x) be the i-th least significant bit of x, i.e. the i-th least significant digit of x in base 2 (i \geq 1).
for example, since 6 = (110)_2, b_1(6) = 0, b_2(6) = 1, b_3(6) = 1, b_4(6) = 0, b_5(6) = 0, and so on.
 
let a and b be integers that satisfy 1 \leq a \leq b \leq 10^{18},
and k_i be the number of integers x such that a \leq x \leq b and b_i(x) = 1.
 
your task is to write a program that determines a and b for a given \{k_i\}.
 


"
p01652,Ancient Commemorative Monolith,"
one day in a forest, alice found an old monolith.
 
she investigated the monolith, and found this  was a sentence written in an old language.
a sentence consists of glyphs and rectangles which surrounds them.
for the above example, there are following glyphs.
 
notice that some glyphs are flipped horizontally in a sentence.
 
she decided to transliterate it using ascii letters assigning an alphabet to each glyph, and [ and ] to rectangles.
if a sentence contains a flipped glyph,  she transliterates it from right to left.
for example,  she could assign a and b to the above glyphs respectively.
then the above sentence  would be transliterated into [[ab][ab]a].
 
after examining the sentence, alice figured out that the sentence was organized by the following structure:
  a sentence &lt;seq&gt; is a sequence consists of  zero or more &lt;term&gt;s.   a term &lt;term&gt; is either a glyph or a &lt;box&gt;. a glyph may be flipped.  &lt;box&gt; is a rectangle surrounding a &lt;seq&gt;. the height of a box is larger than any glyphs inside. 
now, the sentence written on the monolith is a nonempty &lt;seq&gt;.
each term in the sequence fits in a rectangular bounding box, although the boxes are not explicitly indicated for glyphs.  those bounding boxes for adjacent terms have no overlap to each other.
alice  formalized the transliteration rules as follows.
 
let f be the transliterate function.
 
each sequence s = t_1 t_2 ... t_m is written either from left to right, or from right to left.
however, please note here t_1 corresponds to the leftmost term in the sentence, t_2 to the 2nd term from the left, and so on.
 
let's define &#7713; to be the flipped glyph g.
a sequence must have been written from right to left, when a sequence contains one or more single-glyph term which is unreadable without flipping, i.e. there exists an integer i where t_i is a single glyph g, and g is not in the glyph dictionary given separately whereas &#7713; is.
in such cases f(s) is defined to be f(t_m) f(t_{m-1}) ... f(t_1), otherwise f(s) = f(t_1) f(t_2) ... f(t_m).
it is guaranteed that all the glyphs in the sequence are flipped if there is one or more glyph which is unreadable without flipping.
 
if the term t_i is a box enclosing a sequence s', f(t_i) = [ f(s') ].
if the term t_i is a glyph g, f(t_i) is mapped to an alphabet letter corresponding to the glyph g, or &#7713; if the sequence containing g is written from right to left.
 
please make a program to transliterate the sentences on the monoliths to help alice.
 


"
p01653,Magical Bridges,"
a magician lives in a country which consists of n islands and m bridges. 
some of the bridges are magical bridges, which are created by the magician.
her magic can change all the lengths of the magical bridges to the same non-negative integer simultaneously.
 
this country has a famous 2-player race game.
player 1 starts from island s_1 and player 2 starts from island s_2. 
a player who reached the island t first is a winner.
 
since the magician loves to watch this game, she decided to make the game most exiting by changing the length of the magical bridges
so that the difference between the shortest-path distance from s_1 to t and the shortest-path distance from s_2 to t is as small as possible. we ignore the movement inside the islands.
 
your job is to calculate how small the gap can be.
 
note that she assigns a length of the magical bridges before the race starts once, 
and does not change the length during the race.
 


"
p01654,Hashigo Sama,"
chelsea is a modern artist. she decided to make her next work with ladders. she wants to combine some ladders and paint some beautiful pattern. 
 
a ladder can be considered as a graph called hashigo. there are n hashigos numbered from 0 to n-1. 
hashigo i of length l_i has 2 l_{i} + 6 vertices v_{i, 0}, v_{i, 1}, ..., v_{i, 2 l_{i} + 5}
and has edges between the pair of vertices (v_{i, j}, v_{i, j+2}) (0 \leq j \leq 2 l_i +3) and (v_{i, 2j}, v_{i, 2j+1}) (1 \leq j \leq l_i+1).
the figure below is example of a hashigo of length 2. this corresponds to the graph given in the first dataset in the sample input.
 
two hashigos i and j are combined at position p (0 \leq p \leq l_{i}-1) and q (0 \leq q \leq l_{j}-1) by marged each pair of vertices (v_{i, 2p+2}, v_{j, 2q+2}), (v_{i, 2p+3}, v_{j, 2q+4}), (v_{i, 2p+4}, v_{j, 2q+3}) and (v_{i, 2p+5}, v_{j, 2q+5}). 
 
chelsea performs this operation n-1 times to combine the n hashigos.
after this operation, the graph should be connected and the maximum degree of the graph should not exceed 4.
the figure below is a example of the graph obtained by combining three hashigos. this corresponds to the graph given in the second dataset in the sample input.
 
now she decided to paint each vertex by black or white with satisfying the following condition:
   the maximum components formed by the connected vertices painted by the same color is less than or equals to k.  
she would like to try all the patterns and choose the best. however, the number of painting way can be very huge.
since she is not good at math nor computing, she cannot calculate the number. so please help her with your superb programming skill! 
 


"
p01655,Ancient Scrolls,"
you bought 3 ancient scrolls from a magician. these scrolls have a long string, and the lengths of the strings are the same. he said that these scrolls are copies of the key string to enter a dungeon with a secret treasure.
however, he also said, they were copied so many times by hand, so the string will contain some errors, though the length seems correct. 
 
your job is to recover the original string from these strings. when finding the original string, you decided to use the following assumption. 
   the copied string will contain at most d errors. in other words, the hamming distance of the original string and the copied string is at most d.    if there exist many candidates, the lexicographically minimum string is the original string. 
can you find the orignal string?
 


"
p01656,Older Research Bldg. No.7,"
時は平成50年春休み．情報学研究科に所属する京子さんは，京都にある某研究パークからの研究室の引越しがやっと終わり，ホッと一息ついていた．
今回の引越しは，古くなった校舎の改修工事によるもので，新年度から工事に伴い校舎の名前が変更されることになっている．
 
ホッとしていたのもつかの間，京子さんは先生から大学の資料に載っている校舎名を新しい名前に変更するお仕事を頼まれてしまった．
しかし編集しなければならない資料には，今までの担当者が仕事を怠っていたせいか，ひとつ古い名前よりもっと古い名前が使われているものもあった．
 
なんとか京子さんは，平成の間に校舎が改名が行われた年度とその名前のリストを見つけることができた．平成元年度の校舎名は ""kogakubu10gokan"" であった．
だが引越し作業にとても疲れたので，その資料が作られた年度にこの校舎がどんな名前だったのかを自分の手で調べるのには我慢ならなかった．
 
そこで京子さんは，プログラミングが得意なあなたに手伝ってとお願いすることにした．
改名の歴史と資料が作られた年度が与えられるのでその年度の校舎の名前を出力するプログラミングを書いてあげよう．
 

"
p01657,Lion,"
あなたは動物園に来てライオンを見ている。
この動物園にはn個のライオンのオリがある。
あなたはライオンが全部で何頭いるのか知りたくなったのだが、
一人で数えるのは大変だ。
そこで近くにいた動物園の来園者m人に協力してもらうことにした。
 
ライオンのオリは、それぞれ1番からn番までの数字がついており、
順番に並んでいる。
一つのオリには0頭以上x頭以下のライオンがいる。
 
m人の来園者でi番目の人(1 &le; i &le; m)には
l_i番から
r_i番までの
両端を含むすべてのオリのライオンの数の総和を数えてもらった。
 
この情報を元に、1からn
各オリの中のライオンの数を求めることにした。
 


"
p01658,Chocolate,"
    目の前に m \times n 個のピースでできた板チョコがある．
    ピースには甘いピースと辛いピースの2種類があり，できるだけ多くの甘いピースを食べたい．
   
    しかし，板チョコの食べ方にはルールがあり，以下のルールを守らなければならない．
   あるピースを食べるためには，そのピースの真上に隣接するピースが存在せず，加えてそのピースの少なくとも左右どちらかにはピースが存在しない必要がある．  
    例えば，図のような形のチョコレートでは，赤く色付けされたピースを次に食べることができる．
   
    また奇妙なことに，あるピースを食べるとそのピースの上下左右に隣接していてかつまだ食べられていないピースの味が変化する． (甘いピースは辛く，辛いピースは甘くなってしまう)
   
    上手くチョコレートを食べると最大でいくつの甘いピースを食べることができるだろうか?
   


"
p01659,Carpet,"
    総合研究7号館の引越しに伴い，研究室にカーペットを敷くことになった．
    この問題では研究室を上から見たときの床を，二次元平面上の多角形とみなす．
    床の形状を表す要素数nの数列\{a_i\}が与えられる．
    r_iを，左下の座標が(i,0)で右上の座標が(i+1,a_i)である各辺がx軸またはy軸に平行な長方形の境界及び内部領域とする．
    このとき，床を表す多角形はr_1 ∪ r_2 ∪ r_3 ∪ … ∪ r_nによって表される．
    
    カーペットは長方形であればどんな大きさのものを何枚でも用意することができる．
    以下の条件を満たすようにカーペットを配置し，研究室の床を全て覆いつくしたい．
 カーペットは研究室からはみ出してはいけない． カーペットはいくらでも重ねて敷くことが可能である．このとき，カーペットの厚さは無視する． カーペットを切り離して利用することはできない． カーペットは各辺がx軸またはy軸に平行になるように配置しなければならない． 
    研究室の床を覆い尽くすために必要なカーペットの最小数を求めよ．
   
  
  
    
    図d-1. 入力例1の床
     
    図d-2. 入力例2の床
  
  

"
p01660,Sugoroku,"
友達のいないきつねのボブは，今日は一人ですごろく遊びをして過ごすことにした．
各面に整数a_1,a_2,a_3,a_4,a_5,a_6が書かれた6面ダイスと，駒と，直線上にm個のマスがあり
左から順に1からmまでの番号が割り当てられたすごろく盤を用いることにした．
すごろく盤の各マスには指示が数字で書かれており，i番目のマスには数字n_iが書かれている．
これは，その値が正なら右，負なら左に，その絶対値だけ駒を移動せよという意味である．
すなわち，i+n_i番目のマスに駒を移動せよという意味である．
ボブは，以下のようにしてすごろく遊びをする．まず駒をスタート地点に置く．
次にサイコロを振り，サイコロが出た目の数を見て，駒を「現在のマスから右に移動する」か
「左に移動する」か「現在のマスに留まる」かを選択することができる．
マスから移動する場合は，サイコロの出目の距離だけ駒を移動して，移動した先のマスの指示に従う．
指示に従って移動した先のマスの指示には従わない．
以後，ボブは上記のようにサイコロを振って駒を移動することを繰り返す．
移動した結果すごろく盤の外に駒が出てしまったらボブの負けであり，誤答(wrong answer)と判定される．
この問題の目的はこのすごろくをゴールすることである．サイコロを振る回数は3000回以下とする．
 

"
p01661,7 Age,"７歳の誕生日に""彼""は父から告げられた． 「お前が７歳になったということは，私はもう引退だ．今日からお前が７歳教の長だ．
  ７歳教の戒律により，７歳教の長が７歳の間だけ布教活動を行うことが認められている．
  この宇宙船を使って，よりたくさんの人々に７歳教の素晴らしさを広めてきなさい．」
 
  ７歳教をよりたくさんの人に広めるために""彼""は，自分の周りの星についての情報を集めた．
  ""彼""の星の周りには，n 個の惑星があり，惑星は  1, ... , n で番号付けされていることがわかった．
  惑星i から 惑星jの間を移動するには，w_i_j (年)の時間がかかることもわかった．
 
  そして，それぞれの星で彼が７歳でいられる時間，つまり布教活動できる時間が異なることがわかった．
  それぞれの惑星上では，宇宙暦l_i年1月1日00:00:00以降r_i年1月1日00:00:00より前までの時間帯であれば7歳でいられる． 
  たとえ一度ある星で７歳以外の年齢になっても，その星で後から７歳になった場合や，別の星で７歳になれば布教活動を再開することができる．
 
  しかしどの星でどれくらい，そしてどの順序で布教活動を行えばより多くの人に７歳教を伝えることができるのか，
  ""彼""にはわからなかった．そこで""彼""はプログラミングが得意なあなたに助けを求めることにした．
 
現在は宇宙暦0年1月1日00:00:00であり，""彼""は惑星 s にいる．
惑星間を最適に移動・滞在した場合に布教活動が行える最長の年数，
つまり""彼""が７歳でかつ惑星で過ごす最長の年数tを求めてあげよう．
ただし，年数tには移動時間は含まれない．
 


"
p01662,Independent Research,"
きつねの次郎は夏休みの自由研究で最大独立集合問題のアルゴリズムを考えている．
最大独立集合問題では，入力として無向グラフ g=(v,e) が与えられる．
g の各頂点が白または黒で塗られており，どの辺の端点も少なくとも一方が白く塗られているとき，黒い頂点集合のことを独立集合と呼ぶ．
例えば下図において，図の左部のようなグラフが与えられた時，図の中央部のように色を塗ると黒い頂点集合は独立集合になっているが，一方で図の右部のように色を塗った場合は黒い頂点集合は独立集合になっていない．
問題の目的は，要素数が最大であるような独立集合を求めることである．
便宜上，グラフ g の最大の独立集合の大きさを a(g) と記す．
 

 
残念ながらこの問題はnp困難であることが知られており，多項式時間で最適値を求めることは多分できそうにない．
そこで，きつねの次郎は理論的には保証がないがなんとなくうまくいきそうな乱択アルゴリズムを考案した．そのアルゴリズムは次のようなものである．
 
【次郎のアルゴリズム】n=|v| をグラフの頂点数とする．
最初，すべての頂点は白で塗られている．
いま，各頂点に 1,2,…,n の番号を，どの2つの頂点も互いに異なる番号を持つように割り当てる．
このとき，n! = n \times (n-1) \times (n-2) \times … \times 1 通りの割り当て方が存在するが，
これらの中から一様な確率で無作為に割り当てるものとする．
各頂点 v について，もし v に隣接するすべての頂点 w に対して v に割り当てられた番号が w より小さいとき v を黒く塗るということをする．
(もし v に隣接する頂点が存在しない場合，アルゴリズムは v を黒く塗るものとする．) そして，黒く塗られた頂点を，問題の解として出力する．
 
次郎のアルゴリズムの動作例を下図に示す．
図の左部のようなグラフが与えられたとき，各頂点に番号を(無作為に)割り当て，そこから条件を満たす頂点を黒く塗っている．
 

 
定義から，このアルゴリズムによって黒く塗られる頂点集合は独立集合になっていることがわかる．
アルゴリズムを作り，すっかり自信に満ちた様子の次郎であったが，それを横から見ていたきつねのしえるが突っ込みを入れてきた．
そんなアルゴリズムでは全然良い解は出ない，と．
納得しようとしないきつねの次郎にために，しえるは致命的なケースを見せることにした．
 
e(g) を次郎のアルゴリズムが出力する黒い頂点集合の大きさの期待値とする．
頂点数が40以下の無向グラフで，a(g)-e(g) が最大になるようなものを1つ作り，それを出力せよ．
 

"
p01663,N and K,"
    1以上n以下の整数からなる狭義単調増加数列で，数列の要素からどの2つの異なる数を取ってきても
    他方が一方を割り切ることがないようなものを考える．
    そのような数列のうち，とりうる最大の長さをlとして，そのような数列(a_1,a_2,...,a_l)を考える．
    この数列のk番目の要素a_kを求めよ．ただし，そのような数列(a_1...a_l)が複数個存在する場合は，
    a_kの値としてとりうる最小の値を出力せよ．
    また，k &gt; lのときは-1を出力せよ．
   
  

"
p01664,Sigma,"
大きさ n の順列とは，数列 (1, 2, 3, …, n) の各要素を並べ替えたものである．
例えば (5, 2, 1, 4, 3) は大きさ 5 の順列だが，一方で (1, 5, 1, 2, 3) はそうではない．
 
この問題はリアクティブ方式のタスクである．あなたは応答プログラムと「順列当てゲーム」を行う．
まず最初に，応答プログラムは順列 σを1つ内部で決める．
次に，あなたにはこの順列の大きさ n が伝えられる．
この後，あなたは応答プログラムに何回か質問をする．
そして，応答プログラムの持っている順列を特定することがあなたの目的である．
 
質問は次のようなものである：
大きさ n の順列 τ を1つ決め，それを応答プログラムに聞くと，
応答プログラムは数列 ai = (σ上での数字 i の位置と τ 上での数字 i の位置の距離)を計算する．
その後，数列 (a1, a2, a3, …, an) を昇順に並べて列 (b1, b2, b3, …, bn) を作り，あなたのプログラムに出力する．
 
例えば，σ = (5, 2, 1, 4, 3) のとき，τ = (2, 3, 1, 4, 5) を聞くと，
応答プログラムは内部で (a1, a2, a3, a4, a5) = (0, 1, 3, 0, 4) を計算し，
これをソートした列 (b1, b2, b3, b4, b5) = (0, 0, 1, 3, 4) を出力する．
 
できるだけ少ない質問回数で順列を特定するプログラムを記せ．
採点方法については「採点方式」の項で記す．
 

"
p01665,Tile Setting,"
サイズh×wの盤面にサイズ1×2のタイルをマス目にそってn個配置する方法が何通りあるか求めたい. タイルは重なってはいけない. また縦横どちらの向きに置いても構わない. タイルは全て同じ見た目であり互いに区別しないものとする. タイルは180度回転しても同じ見た目であり、区別しないものとする. 答えは大きくなる可能性があるので1,000,000,007で割った余りを答えよ 


"
p01666,encode/decode,"tはabcdefghiの9種類の文字列からなる 「良い」文字列の例 beb abcdcbefghi 「良い」文字列ではない例 ac(aとcは隣接していない) aabcd(同じ文字はグラフ上では隣接していないとみなす) 
以下の条件を満たすような２つの関数,encodeとdecodeを実装せよ.
 任意の01列sに対し,encode(s)は「良い」文字列である 任意の01列sに対し,decode(encode(s))=sを満たす 





"
p01667,Everlasting Zero,"
you are very absorbed in a famous role-playing game (rpg), ""everlasting -zero-"". an rpg is a game in which players assume the roles of characters in a fictional setting. while you play the game, you can forget your ""real life"" and become a different person.
 
to play the game more effectively, you have to understand two notions, a skill point and a special command. a character can boost up by accumulating his experience points. when a character boosts up, he can gain skill points.
 
you can arbitrarily allocate the skill points to the character's skills to enhance the character's abilities. if skill points of each skill meets some conditions simultaneously (e.g., the skill points of some skills are are greater than or equal to the threshold values and those of others are less than or equal to the values) , the character learns a special command. one important thing is that once a character learned the command, he will never forget it. and once skill points are allocated to the character, you cannot revoke the allocation. in addition, the initial values of each skill is 0.
 
the system is so complicated that it is difficult for ordinary players to know whether a character can learn all the special commands or not. luckily, in the ""real"" world, you are a great programmer, so you decided to write a program to tell whether a character can learn all the special commnads or not. if it turns out to be feasible, you will be more absorbed in the game and become happy.
 

"
p01668,Integer in Integer,"
given an integer interval \[a, b\] and an integer c, your job is to calculate the number of occurrences of c as string in the interval.
 
for example, 33 appears in 333 twice, and appears in 334 once. thus the number of occurrences of 33 in \[333, 334\] is 3.
 

"
p01669,Iyasugigappa,"
three animals frog, kappa (water imp) and weasel are playing a card game.
 
in this game, players make use of three kinds of items: a guillotine, twelve noble cards and six action cards. some integer value is written on the face of each noble card and each action card. before stating the game, players put twelve noble cards in a line on the table and put the guillotine on the right of the noble cards. and then each player are dealt two action cards. here, all the noble cards and action cards are opened, so the players share all the information in this game.
 
next, the game begins. each player takes turns in turn. frog takes the first turn, kappa takes the second turn, weasel takes the third turn, and frog takes the fourth turn, etc. each turn consists of two phases: action phase and execution phase in this order.
 
in action phase, if a player has action cards, he may use one of them. when he uses an action card with value on the face y, y-th (1-based) noble card from the front of the guillotine on the table is moved to in front of the guillotine, if there are at least y noble cards on the table. if there are less than y cards, nothing happens. after the player uses the action card, he must discard it from his hand.
 
in execution phase, a player just remove a noble card in front of the guillotine. and then the player scores x points, where x is the value of the removed noble card.
 
the game ends when all the noble cards are removed.
 
each player follows the following strategy:
 
each player assume that other players would follow a strategy such that their final score is maximized.
 
actually, frog and weasel follows such strategy.
 
however, kappa does not. kappa plays so that frog's final score is minimized.
 
kappa knows that frog and weasel would play under ``wrong'' assumption: they think that kappa would maximize his score.
 
as a tie-breaker of multiple optimum choises for each strategy, assume that players prefer to keep as many action cards as possible at the end of the turn.
 
if there are still multiple optimum choises, players prefer to maximuze the total value of remaining action cards.
 
your task in this problem is to calculate the final score of each player.
 


"
p01670,Medical Inspection,"
the government has declared a state of emergency due to the mofu syndrome epidemic in your country. persons in the country suffer from mofu syndrome and cannot get out of bed in the morning. you are a programmer working for the department of health.  you have to take prompt measures.
 
the country consists of n islands numbered from 1 to n and there are ocean liners between some pair of islands.
the department of health decided to establish the quarantine stations in some islands and restrict an infected person's moves to prevent the expansion of the epidemic.
to carry out this plan, there must not be any liner  such that there is no quarantine station in both the source and the destination of the liner.
the problem is  the department can build at most k quarantine stations due to the lack of budget.
 
your task is to calculate whether this objective is possible or not.
and if it is possible, you must calculate the minimum required number of quarantine stations.
 


"
p01671,Minimum Spanning Tree,"
you are given an undirected weighted graph g with n nodes and m edges.
each edge is numbered from 1 to m.
 
let g_i be an graph that is made by erasing i-th edge from g. your task is to compute the cost of minimum spanning tree in g_i for each i.
 


"
p01672,Point Distance,"
you work for invention center as a part time programmer. this center researches movement of protein molecules. it needs how molecules make clusters, so it will calculate distance of all pair molecules and will make a histogram.
molecules’ positions are given by a n x n grid map.
value c_{xy} of cell (x, y) in a grid map means that c_{xy} molecules are in the position (x, y).
 
you are given a grid map, please calculate histogram of all pair molecules.
 

"
p01673,Revenge of Minimum Cost Flow,"
flora is a freelance carrier pigeon.
since she is an excellent pigeon, there are too much task requests to her.
it is impossible to do all tasks, so she decided to outsource some tasks to industrial carrier pigeon company.
 
there are n cities numbered from 0 to n-1.
the task she wants to outsource is carrying f freight units from city s to city t.
there are m pigeons in the company.
the i-th pigeon carries freight from city s_i to t_i, and carrying cost of u units is u a_i if u is smaller than or equals to d_i, otherwise d_i a_i + (u-d_i)b_i.
note that i-th pigeon cannot carry from city t_i to s_i.
each pigeon can carry any amount of freights.
if the pigeon carried freight multiple times, the cost is calculated from total amount of freight units he/she carried.
 
flora wants to minimize the total costs.
please calculate minimum cost for her.
 

"
p01674,Rings,"
there are two circles with radius 1 in 3d space. please check two circles are connected as chained rings.
 

"
p01675,th Number,"
you are given n empty arrays, t_1, ..., t_n. at first, you execute m queries as follows.
 add a value v to array t_i (a \leq i \leq b) 
next, you process q following output queries.
 output the j-th number of the sequence sorted all values in t_i (x \leq i \leq y) 



"
p01676,Tree Reconstruction,"
you have a directed graph.
some non-negative value is assigned on each edge of the graph.
you know that the value of the graph satisfies the flow conservation law
that is, for every node v, the sum of values on edges incoming to v equals to
the sum of values of edges outgoing from v.
for example, the following directed graph satisfies the flow conservation law.
 
suppose that you choose a subset of edges in the graph, denoted by e',
and then you erase all the values on edges other than e'.
now you want to recover the erased values by seeing only remaining information.
due to the flow conservation law, it may be possible to recover all the erased values.
your task is to calculate the smallest possible size for such e'.
 
for example, the smallest subset e' for the above graph will be green edges in the following figure.
by the flow conservation law, we can recover values on gray edges.
 





"
p01677,Broken Audio Signal,"nathan o. davis is a student at the department of integrated systems.
 today's agenda in the class is audio signal processing.
nathan was given a lot of homework out.
one of the homework was to write a program to process an audio signal.
he copied the given audio signal to his usb memory and brought it back to his home.
 when he started his homework, he unfortunately dropped the usb memory to the floor.
he checked the contents of the usb memory and found that the audio signal data got broken.
 there are several characteristics in the audio signal that he copied.
  the audio signal is a sequence of $n$ samples.
   each sample in the audio signal is numbered from $1$ to $n$ and represented as an integer value.
   each value of the odd-numbered sample(s) is strictly smaller than the value(s) of its neighboring sample(s).
   each value of the even-numbered sample(s) is strictly larger than the value(s) of its neighboring sample(s).
  he got into a panic and asked you for a help.
you tried to recover the audio signal from his usb memory but some samples of the audio signal are broken and could not be recovered.
fortunately, you found from the metadata that all the broken samples have the same integer value.
 your task is to write a program,
which takes the broken audio signal extracted from his usb memory as its input, 
to detect whether the audio signal can be recovered uniquely.
 

"
p01678,Restore Calculation,"the animal school is a primary school for animal children.
you are a fox attending this school.
 one day, you are given a problem called &quot;arithmetical restorations&quot; from the rabbit teacher, hanako.
arithmetical restorations are the problems like the following:
  you are given three positive integers, $a$, $b$ and $c$.
   several digits in these numbers have been erased.
   you should assign a digit in each blank position so that the numbers satisfy the formula $a+b=c$.
   the first digit of each number must not be zero. it is also the same for single-digit numbers.
  you are clever in mathematics, so you immediately solved this problem.
furthermore, you decided to think of a more difficult problem, to calculate the number of possible assignments to the given arithmetical restorations problem.
if you can solve this difficult problem, you will get a good grade.
 shortly after beginning the new task, you noticed that there may be too many possible assignments to enumerate by hand. so, being the best programmer in the school as well, you are now trying to write a program to count the number of possible assignments to arithmetical restoration problems.
 

"
p01679,SIRO Challenge,"you are now participating in the summer training camp for programming contests with your friend jiro, who is an enthusiast of the ramen chain siro.
since every siro restaurant has its own tasteful ramen, he wants to try them at as many different restaurants as possible in the night.
he doesn't have plenty of time tonight, however, because he has to get up early in the morning tomorrow to join a training session.
so he asked you to find the maximum number of different restaurants to which he would be able to go to eat ramen in the limited time.
 there are $n$ railway stations in the city, which are numbered $1$ through $n$. the station $s$ is the nearest to the camp venue.
$m$ pairs of stations are directly connected by the railway: you can move between the stations $a_i$ and $b_i$ in $c_i$ minutes in the both directions.
among the stations, there are $l$ stations where a siro restaurant is located nearby. there is at most one siro restaurant around each of the stations, and there are no restaurants near the station $s$.
it takes $e_i$ minutes for jiro to eat ramen at the restaurant near the station $j_i$.
 it takes only a negligibly short time to go back and forth between a station and its nearby siro restaurant.
you can also assume that jiro doesn't have to wait for the ramen to be served in the restaurants.
 jiro is now at the station $s$ and have to come back to the station in $t$ minutes. how many different siro's can he taste?
 

"
p01680,,"&quot;everlasting -one-&quot; is an award-winning online game launched this year. this game has rapidly become famous for its large number of characters you can play.
 in this game, a character is characterized by attributes. there are $n$ attributes in this game, numbered $1$ through $n$. each attribute takes one of the two states, light or darkness. it means there are $2^n$ kinds of characters in this game.
 you can change your character by job change. although this is the only way to change your character's attributes, it is allowed to change jobs as many times as you want.
 the rule of job change is a bit complex. it is possible to change a character from $a$ to $b$ if and only if there exist two attributes $a$ and $b$ such that they satisfy the following four conditions:
  the state of attribute $a$ of character $a$ is light.
   the state of attribute $b$ of character $b$ is light.
   there exists no attribute $c$ such that both characters $a$ and $b$ have the light state of attribute $c$.
   a pair of attribute $(a, b)$ is compatible.
  here, we say a pair of attribute $(a, b)$ is compatible if there exists a sequence of attributes $c_1, c_2, \ldots, c_n$ satisfying the following three conditions:
  $c_1 = a$.
   $c_n = b$.
   either $(c_i, c_{i+1})$ or $(c_{i+1}, c_i)$ is a special pair for all $i = 1, 2, \ldots, n-1$. you will be given the list of special pairs.
  since you love this game with enthusiasm, you are trying to play the game with all characters (it's really crazy). however, you have immediately noticed that one character can be changed to a limited set of characters with this game's job change rule. we say character $a$ and $b$ are essentially different if you cannot change character $a$ into character $b$ by repeating job changes.
 then, the following natural question arises; how many essentially different characters are there?
since the output may be very large, you should calculate the answer modulo $1{,}000{,}000{,}007$.
 

"
p01681,Putter,"fox ciel is practicing miniature golf, a golf game played with a putter club only. for improving golf skills, she believes it is important how well she bounces the ball against walls.
 the field of miniature golf is in a two-dimensional plane and surrounded by $n$ walls forming a convex polygon. at first, the ball is placed at $(s_x, s_y)$ inside the field. the ball is small enough to be regarded as a point.
 ciel can shoot the ball to any direction and stop the ball whenever she wants. the ball will move in a straight line. when the ball hits the wall, it rebounds like mirror reflection (i.e. incidence angle equals reflection angle).
 for practice, ciel decided to make a single shot under the following conditions:
  the ball hits each wall of the field exactly once.
   the ball does not hit the corner of the field.
  count the number of possible orders in which the ball hits the walls.
 

"
p01682,Shipura,"dr. suposupo developed a programming language called shipura. shipura supports only one binary operator ${\tt >>}$ and only one unary function ${\tt s}$.
 $x {\tt >>} y$ is evaluated to $\lfloor x / 2^y \rfloor$ (that is, the greatest integer not exceeding $x / 2^y$), and ${\tt s}$ is evaluated to $x^2 \bmod 1{,}000{,}000{,}007$ (that is, the remainder when $x^2$ is divided by $1{,}000{,}000{,}007$). 
 the operator ${\tt >>}$ is left-associative. for example, the expression $x {\tt >>} y {\tt >>} z$ is interpreted as $(x {\tt >>} y) {\tt >>} z$, not as $x {\tt >>} (y {\tt >>} z)$. note that these parentheses do not appear in actual shipura expressions. 
 the syntax of shipura is given (in bnf; backus-naur form) as follows:
 the start symbol of this syntax is $\tt expr$ that represents an expression in shipura. in addition, $\tt number$ is an integer between $0$ and $1{,}000{,}000{,}000$ inclusive, written without extra leading zeros.
 write a program to evaluate shipura expressions.
 

"
p01683,Floating Islands,"you have just arrived in a small country. unfortunately a huge hurricane swept across the country a few days ago.
 the country is made up of $n$ islands, numbered $1$ through $n$. many bridges connected the islands, but all the bridges were washed away by a flood. people in the islands need new bridges to travel among the islands again.
 the problem is cost. the country is not very wealthy. the government has to keep spending down. they asked you, a great programmer, to calculate the minimum cost to rebuild bridges. write a program to calculate it!
 each bridge connects two islands bidirectionally. each island $i$ has two parameters $d_i$ and $p_i$. an island $i$ can have at most $d_i$ bridges connected. the cost to build a bridge between an island $i$ and another island $j$ is calculated by $|p_i - p_j|$. note that it may be impossible to rebuild new bridges within given limitations although people need to travel between any pair of islands over (a sequence of) bridges. 
 
"
p01684,Venn Diagram,"alice is a private teacher.
one of her job is to prepare the learning materials for her student.
now, as part of the materials, she is drawing a venn diagram between two sets $a$ and $b$.
 venn diagram is a diagram which illustrates the relationships among one or more sets.
for example, a venn diagram between two sets $a$ and $b$ is drawn as illustrated below.
the rectangle corresponds to the universal set $u$.
the two circles in the rectangle correspond to two sets $a$ and $b$, respectively.
the intersection of the two circles corresponds to the intersection of the two sets, i.e. $a \cap b$.
 alice, the mathematics personified, came up with a special condition to make her venn diagram more beautiful.
her condition is that the area of each part of her venn diagram is equal to the number of elements in its corresponding set.
in other words, one circle must have the area equal to $|a|$, the other circle must have the area equal to $|b|$, and their intersection must have the area equal to $|a \cap b|$. here, $|x|$ denotes the number of elements in a set $x$.
 alice already drew a rectangle, but has been having a trouble figuring out where to draw the rest, two circles, because she cannot even stand with a small error human would make.
as an old friend of alice's, your task is to help her by writing a program to determine the centers and radii of two circles so that they satisfy the above condition.
 

"
p01685,Overwriting Game,"you have a rectangular board with square cells arranged in $h$ rows and $w$ columns.
the rows are numbered $1$ through $h$ from top to bottom, and the columns are numbered $1$ through $w$ from left to right. 
the cell at the row $i$ and the column $j$ is denoted by $(i, j)$. 
each cell on the board is colored in either black or white.
 you will paint the board as follows:
  choose a cell $(i, j)$ and a color $c$, each uniformly at random, where $1 \le i \le h$, $1 \le j \le w$, and $c \in \{{\rm black}, {\rm white}\}$.
   paint the cells $(i', j')$ with the color $c$ for any $1 \le i' \le i$ and $1 \le j' \le j$.
  here's an example of the painting operation.
you have a $3 \times 4$ board with the coloring depicted in the left side of the figure below.
if your random choice is the cell $(2, 3)$ and the color black, the board will become as shown in the right side of the figure.
$6$ cells will be painted with black as the result of this operation.
note that we count the cells ""painted"" even if the color is not actually changed by the operation, like the cell $(1, 2)$ in this example.
 given the initial coloring of the board and the desired coloring, you are supposed to perform the painting operations repeatedly until the board turns into the desired coloring.
write a program to calculate the expected total number of painted cells in the sequence of operations.
 

"
p01686,Magical Switches,"you are given a rectangular board divided into square cells. the number of rows and columns in this board are $3$ and $3 m + 1$, respectively, where $m$ is a positive integer. the rows are numbered $1$ through $3$ from top to bottom, and the columns are numbered $1$ through $3 m + 1$ from left to right. the cell at the $i$-th row and the $j$-th column is denoted by $(i, j)$. 
 each cell is either a floor cell or a wall cell. in addition, cells in columns $2, 3, 5, 6, \ldots, 3 m - 1, 3 m$ (numbers of form $3 k - 1$ or $3 k$, for $k = 1, 2, \ldots, m$) are painted in some color. there are $26$ colors which can be used for painting, and they are numbered $1$ through $26$. the other cells (in columns $1, 4, 7, \ldots, 3 m + 1$) are not painted and each of them is a floor cell. 
 you are going to play the following game. first, you put a token at cell $(2, 1)$. then, you repeatedly move it to an adjacent floor cell. two cells are considered adjacent if they share an edge. it is forbidden to move the token to a wall cell or out of the board. the objective of this game is to move the token to cell $(2, 3 m + 1)$. 
 for this game, $26$ magical switches are available for you! switches are numbered $1$ through $26$ and each switch corresponds to the color with the same number. when you push switch $x$, each floor cell painted in color $x$ becomes a wall cell and each wall cell painted in color $x$ becomes a floor cell, simultaneously. 
 you are allowed to push some of the magical switches only before you start moving the token. determine whether there exists a set of switches to push such that you can achieve the objective of the game, and if there does, find such a set. 
 

"
p01687,D's Ambition,"あいずにゃんは若ヶ松高校のプログラミングコンテスト部、通称ぷろこん部に所属する2年生である。かわいい。dのひとは天使のごとくかわいいあいずにゃんにぞっこんであり、隙あらばぺろぺろしようと画策する変態である。その愛は猟奇的であり、あいずにゃんを自分色に染めようと、&quot;aizunyan&quot;という文字列を見る度&quot;aidunyan&quot;に書き換えてしまう。さらにあいずにゃんを自分だけのものにするため、他の人に気づかれないようにその文字列をバラバラに並べ替えてしまう。プロコンの名門・律命館大学中等部卒のエリート競技プログラマであり、ぷろこん部の部長であるりっつちゃんは、あいずにゃんをdのひとの魔の手から救うため、dのひとが改変した文字列をすべて復元することにした。 
"
p01688,Doctor Course Is Recommended,"dのひとはd進を決意したので、博士後期課程入学試験を受けることにした。筆記試験はマークシート形式であった。自身の専門分野の問題ばかりだったので、dのひとはすぐにすべての正答を導くことができた。しかし、ここで大きな問題に気づいた。dのひとは宗教上の理由から、解答用紙には'd'としか書くことができなかったのだ。また、'd'と書くためには尋常ではない集中力を使うため，'d'と書くことのできる個数も決まっている。dのひとが本当にd進することができるか調べるため、解答・配点を踏まえ、上記の条件を満たした上で得られる最大の得点を求めてみよう。 
"
p01689,Dowsing Machine,"世間ではxだとかyだとかで騒がしいけれど、これからの時代は&quot;d&quot;である。&quot;パクリンモンスターd&quot;は、秘密結社&quot;r団&quot;によって開発された&quot;dマシン&quot;を使って&quot;dのひと&quot;が財宝探索を行う大人気ゲームである。 このゲームでは、格子状マップのあるマスにいるdのひとが、隣接する上下左右のマスへの移動を繰り返し、財宝が存在するマスへの到達を目指す。 マップ上には財宝が存在するマスが1つだけある。 財宝が存在するマスは明らかにされていないため、dマシンを使って存在する財宝のマスを絞り込んでから、財宝が存在するマスへ移動したい。 dマシンを使うと、財宝が存在するマスを含む複数マスへの反応を示す。反応は、dマシンを使ったときにdのひとが居たマスを基準に表現される。ただし、dマシンは壊れていることがあり、dマシンを使ったときに、財宝が存在し得ないマスへの反応を示すことがある。また、dのひとが移動できない壁マスがマップ上に存在するため、財宝の存在するマスに移動できないこともある。dのひとはいろいろなマスでdマシンを使い、その反応を観測した。dのひとは、財宝の存在するマスに到達できるだろうか。 
"
p01690,Disciple Life is Hard,"dのひとはドーナツを愛してやまない。常にドーナツを欲している。しかし、師匠であるぶなしめじたんに体を鍛えることを命じられたdのひとは、摂取カロリーを制限しなければならない。そこでdのひとは基礎代謝も考慮し、その日トレーニングによって消費したカロリーの分までドーナツを食べてもよいことにした。dのひとはドーナツを愛してやまないとはいえ、好みはあるので、食べるドーナツによって得られる幸福感は変わる。また、その日の体力によって行えるトレーニングも変わってくるため、トレーニングの種類、ドーナツの種類、体力を考慮し、d日間で得られる幸福を最大化することを試みた。 
"
p01691,Disappear Drive,"dのひとはバスケットボールが好きだが、シュートが好きなため、他のテクニックはからっきしである。ドリブルは特に苦手で、相手の守備範囲に入ると必ずボールを奪われてしまう。そこでどんな相手も必ず抜き去る必殺のドリブルを編み出すことにした。努力の末、彼は遂に消えるドライヴ、&quot;ディスアピアドライヴ&quot;を完成させた。 ディスアピアドライヴは、相手を挑発することで集中力を奪い視線を外す&quot;ディスディレクション&quot;により隙を作り、その隙に次元(ディメンジョン)の壁を超えて相手の守備範囲をすり抜けてしまう完全無欠のドライヴである。しかし、次元の壁を超えることは体への負担が大きいため、次元を超えられる回数には制限がある。また、常に集中力を使うため、通常の移動を含め、方向転換が1度までしかできない。コート上でどのように動けば、ボールを奪われずに最短でゴールまで辿り着けるだろうか。 
"
p01692,Dangerous Delivery,"dのひとは重大な使命を背負っていた。それはdatacoder社長のdhokudai氏へ、次のdatacoder regular contest(darc)のd問題を届けることだ。dのひとのアジトがある都市1からdatacoder本社がある都市nまではn個の都市が一直線に並んでいる。この移動の間、不正を企む緑の三角形の集団がd問題を狙っており、その魔の手からd問題を守らねばならない。 幸い、dのひとは次元(ディメンジョン)の壁を超えて移動する能力を持っているため、簡単に捕まるようなことはない。しかしこの移動法にはいくつかの欠点がある。第一に、移動を開始する際には隙ができてしまい、またその瞬間が見つかると、移動先までバレてしまう。緑の三角形達はそれぞれが複数の都市を見渡せるように監視し続けている。しかもdのひとの移動を読み、少しずつ都市nの方向へ移動しているようだ。よって、多くの緑の三角形達に監視されている都市からの移動や、長い距離の移動は発見のリスクが高まってしまう。また第二の欠点として、次元の壁を超える移動は体への負担がかかるため、1日に1度しか使えない。次のdarcが開催されるd日後までに間に合わせるよう、ペース配分を考える必要もある。緑の三角形ごときにdのひとが捕捉されることなどまずありえないが、慎重派であるdのひとは、d日後までに都市1から都市nに移動するためのリスクを最小化しようと考えた。 
"
p01693,Derangement,"dのひとは順列に関する研究をしている。あるときdのひとは、&quot;完全順列 (derangement)&quot;という順列のクラスを見つけた。「完全な順列とかなんかかっこいい！！！しかもdからはじまる！！！」と廚二病をこじらせたdのひとは、与えられた順列をすべて完全順列に書き換えてしまおうと考えた。 
"
p01694,Step Aerobics,"-->


"
p01695,channel,"


<!--"
p01696,Broken Cipher Generator,"-->


"
p01697,1 Day Passport,"-->


"
p01698,Wish upon a shooting star,"-->


"
p01699,Elevator Hall Number,"-->


"
p01700,Golf,"-->



"
p01701,North North West,"we can describe detailed direction by repeating the directional names: north, south, east and west. for example, northwest is the direction halfway between north and west, and northnorthwest is between north and northwest. 
 in this problem, we describe more detailed direction between north and west as follows.
 ""north"" means $0$ degrees.
 ""west"" means $90$ degrees.
 if the direction $dir$ means $a$ degrees and the sum of the occurrences of ""north"" and ""west"" in $dir$ is $n$ ($\geq$ 1),
""north""$dir$ (the concatenation of ""north"" and $dir$) means $a - \frac{90}{2^n}$ degrees and ""west""$dir$ means $a + \frac{90}{2^n}$ degrees.
 your task is to calculate the angle in degrees described by the given direction.
 

"
p01702,Unknown Switches,"in the headquarter building of icpc (international company of plugs &amp; connectors), there are $m$ light bulbs and they are controlled by $n$ switches.
each light bulb can be turned on or off by exactly one switch.
each switch may control multiple light bulbs.
when you operate a switch, all the light bulbs controlled by the switch change their states.
you lost the table that recorded the correspondence between the switches and the light bulbs, and want to restore it.
 you decided to restore the correspondence by the following procedure.
 at first, every switch is off and every light bulb is off.
 you operate some switches represented by $s_1$.
 you check the states of the light bulbs represented by $b_1$.
 you operate some switches represented by $s_2$.
 you check the states of the light bulbs represented by $b_2$.
 ...
 you operate some switches represented by $s_q$.
 you check the states of the light bulbs represented by $b_q$.
 after you operate some switches and check the states of the light bulbs, the states of the switches and the light bulbs are kept for next operations.
 can you restore the correspondence between the switches and the light bulbs using the information about the switches you have operated and the states of the light bulbs you have checked?
 

"
p01703,Speedrun,"infinite chronicle -princess castle- is a simple role-playing game. 
there are $n + 1$ checkpoints, numbered $0$ through $n$, 
and for each $i = 1, 2, \ldots, n$, there is a unique one-way road running from checkpoint $i - 1$ to $i$. 
the game starts at checkpoint $0$ and ends at checkpoint $n$. 
evil monsters will appear on the roads and the hero will have battles against them. 
you can save your game progress at any checkpoint; if you lose a battle, you can restart the game from the checkpoint where you have saved for the last time. 
at the beginning of the game, the progress is automatically saved at checkpoint $0$ with no time. 
 rabbit hanako is fond of this game and now interested in speedrunning. 
although hanako is an expert of the game, she cannot always win the battles because of random factors. 
for each $i$, she estimated the probability $p_i$ to win all the battles along the road from checkpoint $i - 1$ to $i$. 
everytime she starts at checkpoint $i - 1$, after exactly one miniutes, 
she will be at checkpoint $i$ with probability $p_i$ and where she saved for the last time with probability $1 - p_i$. 
 what puzzles hanako is that it also takes one minute (!) to save your progress at a checkpoint, 
so it might be a good idea to pass some checkpoints without saving in order to proceed quickly. 
the task is to compute the minimum possible expected time needed to complete the game. 
 

"
p01704,Flowers,"we have planted $n$ flower seeds, all of which come into different flowers.
we want to make all the flowers come out together.
 each plant has a value called vitality, which is initially zero.
watering and spreading fertilizers cause changes on it, and the $i$-th plant will come into flower if its vitality is equal to or greater than $\mathit{th}_i$.
note that $\mathit{th}_i$ may be negative because some flowers require no additional nutrition.
 watering effects on all the plants.
watering the plants with $w$ liters of water changes the vitality of the $i$-th plant by $w \times \mathit{vw}_i$ for all $i$ ($1 \le i \le n$), and costs $w \times \mathit{pw}$ yen, where $w$ need not be an integer.
$\mathit{vw}_i$ may be negative because some flowers hate water.
 we have $n$ kinds of fertilizers, and the $i$-th fertilizer effects only on the $i$-th plant.
spreading $f_i$ kilograms of the $i$-th fertilizer changes the vitality of the $i$-th plant by $f_i \times \mathit{vf}_i$, and costs $f_i \times \mathit{pf}_i$ yen, where $f_i$ need not be an integer as well.
each fertilizer is specially made for the corresponding plant, therefore $\mathit{vf}_i$ is guaranteed to be positive.
 of course, we also want to minimize the cost.
formally, our purpose is described as &quot;to minimize $w \times \mathit{pw} + \sum_{i=1}^{n}(f_i \times \mathit{pf}_i)$ under $w \times \mathit{vw}_i + f_i \times \mathit{vf}_i \ge \mathit{th}_i$, $w \ge 0$, and $f_i \ge 0$ for all $i$ ($1 \le i \le n$)&quot;.
your task is to calculate the minimum cost.
 

"
p01705,Square in Circles,"circles island is known for its mysterious shape:
it is a completely flat island with its shape being a union of circles whose centers are on the $x$-axis and their inside regions.
 the king of circles island plans to build a large square on circles island in order to celebrate the fiftieth anniversary of his accession.
the king wants to make the square as large as possible.
the whole area of the square must be on the surface of circles island, but any area of circles island can be used for the square.
he also requires that the shape of the square is square (of course!) and at least one side of the square is parallel to the $x$-axis.
 you, a minister of circles island, are now ordered to build the square.
first, the king wants to know how large the square can be.
you are given the positions and radii of the circles that constitute circles island.
answer the side length of the largest possible square.
 $n$ circles are given in an ascending order of their centers' $x$-coordinates.
you can assume that for all $i$ ($1 \le i \le n-1$), the $i$-th and $(i+1)$-st circles overlap each other.
you can also assume that no circles are completely overlapped by other circles.
 
 [fig.1 : shape of circles island and one of the largest possible squares for test case #1 of sample input]
 

"
p01706,Reverse a Road II,"jag kingdom is a strange kingdom such that its $n$ cities are connected only by one-way roads.
the $n$ cities are numbered $1$ through $n$.
icpc (international characteristic product corporation) transports its products from the factory at the city $s$ to the storehouse at the city $t$ in jag kingdom every day.
for efficiency, icpc uses multiple trucks at once.
each truck starts from $s$ and reaches $t$ on the one-way road network, passing through some cities (or directly).
in order to reduce risks of traffic jams and accidents, no pair of trucks takes the same road.
 now, icpc wants to improve the efficiency of daily transports, while icpc operates daily transports by as many trucks as possible under the above constraint.
jag kingdom, whose finances are massively affected by icpc, considers to change the direction of one-way roads in order to increase the number of trucks for daily transports of icpc.
because reversal of many roads causes confusion, jag kingdom decides to reverse at most a single road.
 if there is no road such that reversal of the road can improve the transport efficiency, jag kingdom need not reverse any roads.
check whether reversal of a single road can improve the current maximum number of trucks for daily transports.
and if so, calculate the maximum number of trucks which take disjoint sets of roads when a one-way road can be reversed, and the number of roads which can be chosen as the road to be reversed to realize the maximum.
 

"
p01707,Cookie Counter,"one day, my grandmas left $n$ cookies.
my elder sister and i were going to eat them immediately, but there was the instruction.
it said
  cookies will go bad; you should eat all of them within $d$ days.
  be careful about overeating; you should eat strictly less than $x$ cookies in a day.
 my sister said ""how many ways are there to eat all of the cookies? let's try counting!""
 two ways are considered different if there exists a day such that the numbers of the cookies eaten on that day are different in the two ways.
for example, if $n$, $d$ and $x$ are $5$, $2$ and $5$ respectively, the number of the ways is $4$:
  eating $1$ cookie on the first day and $4$ cookies on the second day.
  eating $2$ cookies on the first day and $3$ cookies on the second day.
  eating $3$ cookies on the first day and $2$ cookies on the second day.
  eating $4$ cookies on the first day and $1$ cookie on the second day.
 i noticed the number of the ways would be very huge and my sister would die before counting it.
therefore, i tried to count it by a computer program to save the life of my sister.
 

"
p01708,Points and Lines,"one day, you found an old scroll with strange texts on it.
 you revealed that the text was actually an expression denoting the position of
treasure.  the expression consists of following three operations:
  from two points, yield a line on which the points lie.
  from a point and a line, yield a point that is symmetric to the given point with respect to the line.
  from two lines, yield a point that is the intersection of the lines.
 the syntax of the expression is denoted by following bnf:
 each &lt;point&gt; or &lt;point-factor&gt; denotes a point, whereas each &lt;line&gt; or &lt;line-factor&gt; denotes a line.  the former notion of &lt;point-factor&gt; $(x,y)$ represents a point which has $x$ for $x$-coordinate and $y$ for $y$-coordinate on the $2$-dimensional plane.
""@"" indicates the operations on two operands.  since each operation is distinguishable from others by its operands' types (i.e. a point or a line),
all of these operations are denoted by the same character ""@"". 
note that ""@"" is left-associative, as can be seen from the bnf.
 your task is to determine where the treasure is placed.
 

"
p01709,Color the Map Extreme,"you have just transferred to another world, and got a map of this world.
there are several countries in this world.
each country has a connected territory,
which is drawn on the map as a simple polygon consisting of its border segments in the $2$-dimensional plane.
 you are strange to this world, so you would like to paint countries on the map to distinguish them.
if you paint adjacent countries with same color, it would be rather difficult to distinguish the countries.
therefore, you want to paint adjacent countries with different colors.
here, we define two countries are adjacent if their borders have at least one common segment whose length is strictly greater than $0$.
note that two countries are not considered adjacent if the borders only touch at points.
 because you don't have the currency of this world, it is hard for you to prepare many colors.
what is the minimum number of colors to paint the map such that adjacent countries can be painted with different colors?
 

"
p01710,Website Tour,"you want to compete in icpc (internet contest of point collection).
in this contest, we move around in $n$ websites, numbered $1$ through $n$, within a time limit and collect points as many as possible.
we can start and end on any website.
 there are $m$ links between the websites, and we can move between websites using these links.
you can assume that it doesn't take time to move between websites.
these links are directed and websites may have links to themselves.
 in each website $i$, there is an advertisement and we can get $p_i$ point(s) by watching this advertisement in $t_i$ seconds.
when we start on or move into a website, we can decide whether to watch the advertisement or not.
but we cannot watch the same advertisement more than once before using any link in the website, while we can watch it again if we have moved among websites and returned to the website using one or more links, including ones connecting a website to itself.
also we cannot watch the advertisement in website $i$ more than $k_i$ times.
 you want to win this contest by collecting as many points as you can.
so you decided to compute the maximum points that you can collect within $t$ seconds.
 

"
p01711,Idempotent Filter,"let's consider operations on monochrome images that consist of hexagonal pixels, each of which is colored in either black or white.  because of the shape of pixels, each of them has exactly six neighbors (e.g. pixels that share an edge with it.)
 ""filtering"" is an operation to determine the color of a pixel from the colors of itself and its six neighbors.  examples of filterings are shown below.
 example 1: color a pixel in white when all of its neighboring pixels are white.  otherwise the color will not change.
 
 performing this operation on all the pixels simultaneously results in ""noise canceling,"" which removes isolated black pixels.
 example 2: color a pixel in white when its all neighboring pixels are black. otherwise the color will not change.
 
 performing this operation on all the pixels simultaneously results in ""edge detection,"" which leaves only the edges of filled areas.
 example 3: color a pixel with the color of the pixel just below it, ignoring any other neighbors.
 
 performing this operation on all the pixels simultaneously results in ""shifting up"" the whole image by one pixel.
 applying some filter, such as ""noise canceling"" and ""edge detection,"" twice to any image yields the exactly same result as if they were applied only once.
we call such filters idempotent. the ""shifting up"" filter is not idempotent since every repeated application shifts the image up by one pixel.
 your task is to determine whether the given filter is idempotent or not.
 

"
p01712,Koto Distance,"
	koto は言わずと知れた碁盤の目の街である．
	この街は東西方向に w メートル，南北方向に h メートルに伸びる長方形の領域によってできている．
	この街の西端から x メートル，南端から y メートルの点は (x,&thinsp; y)  と記される．
	ここの街に住む人は古くから伝わる独自の文化を重んじており，その一つにkoto距離という変わった距離尺度がある．
2つの点 (x_1, y_1)，(x_2, y_2) の koto 距離は，min(|x_1 - x_2|,&thinsp; |y_1 - y_2|) によって定義される．
 
	最近この街全体に wifi を使えるようにする計画が立ち上がった．
	現在の計画では，親機を n 個作ることになっている．
i 番目の親機は点 (x_i, &thinsp;y_i) に設置され，koto距離が w_i 以下の領域に対して wifi を提供する．
 
	親機を計画どおり建てた場合に，街の内部及び境界上に wifi を提供できるかどうかを判定せよ．
 
	なお，koto距離は一般に三角不等式を満たさないため，距離の公理を満たさないということはここだけの秘密である．
 

"
p01713,Evacuation Route,"
日本では防災研究が盛んに行われており，近年その重要性がますます増している．
避難経路の評価も重要な研究のひとつである．
今回は直線状の通路の安全評価を行う．
 
通路は w 個のユニットに分けられており，一方の端のユニットからもう一方の端のユニットまで 0, &thinsp;1, &thinsp;2, &thinsp;…&thinsp;, &thinsp;w-1 の番号がつけられている．
通路内の各ユニットには，入口の扉，出口の扉，防火扉のいずれか1つが存在する．
入り口の扉，出口の扉，防火扉はそれぞれ通路内に複数個存在しうる．
 
この問題では時刻 t=0 で火災が発生したと想定する．
それにより，通路の外部にいて避難しようとしている人々が入口の扉を通じて通路へ入り，より安全な場所へ出るために出口の扉へ脱出しようとするものとする．
避難中のそれぞれの人は単位時刻ごとに 1 つのユニットを移動するか，今のユニットに留まることができる．
すなわち，時刻 t にある人がユニット i にいたとするとき，その人は時刻 t+1 ではユニット i-1, &thinsp;i, &thinsp; i+1 の3つの数字のうち 0 以上 w-1 以下であるものを選択し，その番号のユニットへ移動することができる．
防火扉があるユニットは，ある一定時刻以降になると完全に遮断されてしまい，避難中の人々はそのユニットに立ち入りできなくなる．また，そのユニット内に居た人々もそこから他のユニットに移動できなくなってしまう．
 
この問題における目的は，それぞれの扉の情報が与えられるので，避難中の人々が最適に行動した時に最大で何人が出口の扉へたどり着けるか計算することである．
 
通路の情報がw個の整数a_iで与えられる．
 a_i = 0のとき，i 番目のユニットが出口の扉であることをあらわす． a_i のとき，i 番目のユニットが防火扉により時間 |a_i| 以降出入りできなくなることを表す． a_i > 0のとき，時刻 t=0,&thinsp;1,&thinsp;2,&thinsp;…&thinsp;,&thinsp;a_{i}-1 のそれぞれにおいて，ちょうど一人の人が i 番目のユニットに現れる．時刻 t に現れた人は，時刻 t+1 以降から移動を開始する． 
なお，1つのユニットに複数の人々が存在してもかまわない．
 
出口の扉へたどり着ける最大の人数を求めよ．
 


"
p01714,Apples,"
あるところに銃の腕に自信をもつ猟師がいました．
猟師はある日，「ウィリアムテルというスイス人が，息子の頭にりんごを乗せて遠くから矢で撃ち落とすパフォーマンスで有名になった」というお話を聞きました．
それを聞いて""自分のほうがもっと凄い!!""と思った猟師は動いている人の上にりんごを乗せて撃ちぬくパフォーマンスを考えつきました．
 
猟師は広場に n 人の人を集め，それぞれの人の上にりんごを乗せました．
i 番目の人は時刻 t=0 のとき，座標 (x_i, &thinsp;y_i) にいます．
そこから単位時間あたり速度ベクトル (u_i,&thinsp; v_i) にしたがって歩きます．
すなわち，時刻 t &thinsp;&ge;&thinsp; 0 のとき，i 番目の人は座標 (x_i + t \times u_i &thinsp;, &ensp; y_i + t \times v_i) にいます．
ここで，人々は十分小さいので，同じ座標に複数の人がいたり，同じ座標ですれ違ったりできると仮定します．
 
猟師は人々を驚嘆させるために，一発の弾丸でできるだけ多くのりんごを撃ち落とすことにしました．
猟師は t &ge; 0 であるような任意の時刻に，任意の座標から任意の方向に向けて弾丸を放つことができます．
放たれた弾丸は無限の速さで直線軌道で移動し，りんごに当たった場合貫通して移動します．
弾丸を一発だけ打つとき，最大で何個のりんごを撃ち落とせるか計算してください．
 

"
p01715,TiMe Table,"
ある学生は朝にいつも乗る通学バスで，あることに気がついた．
そのバスの利用者がいつも同じなのだ．
気になってバスに乗っている利用者たちに聞いてみると，毎日決まった時刻にバス停に来ているようである．
それなら，乗客にとってもっとよいバスの時間割があるのではないかとその学生は考えた．
 
学生の乗る通学路には，バスの営業所から終点までにs個のバス停が一直線に並んでいる．(営業所はバス停には含まれないが，終点はバス停に含まれる．)
各バス停には，営業所から近い方から順に1 から s までの番号が付けられている．
営業所と i 番目のバス停の距離は x_i である．
バスはまず営業所を出発し，それから x_i 経った後に i 番目のバス停に到着する．
バス停には n 人の利用者がやって来る．
i 番目の利用者は時刻 t_i にバス停 p_i にやって来る．
 
この通学路には1日にちょうど m 本のバスが営業所から終点まで走ることになっている．
バスはバス停に止まると，そのバス停で待っていた利用者を全員回収して，次のバス停に向かう．
バス停で利用者を回収する時間は無視出来ると仮定する．
いま各バスが営業所から出発する時刻を自由に決めることができるとき，利用者の待ち時間の和を最小化しよう．
 


"
p01716,Pattern Language,"
m 個の相異なるアルファベット var_0, &thinsp;var_1, &thinsp; …&thinsp;, &thinsp;var_{m-1} がある．
0, &thinsp; 1, &thinsp; …&thinsp;, &thinsp; 9, &thinsp; var_0, &thinsp; var_1, &thinsp; …&thinsp;, &thinsp; var_{m-1} の 10+m 種類の文字からなる，長さ n の文字列 s_0s_1s_2…s_{n-1} が与えられる．
この文字列における各アルファベットを数字で置き換えて回文になるようにしたい．(回文とは，前から読んでも後ろから読んでも同じ文字列をあらわす．)
ここで，同じアルファベットは同じ数字で置き換えなければならない．また与えられたすべてのアルファベットvar_iは少なくとも，一度は文字列s_0s_1s_2…s_{n-1}にあらわれる．
 
アルファベット var_i は 0 以上 u_i 以下の，leading zero を含まない整数に置き換える事ができる．
置き換えた後の文字列が回文になるような置き換え方が何通り存在するかを，mod 10^9+7 で求めよ．
なお，アルファベットの置き換え方が異なれば，得られる文字列が同じでも異なるものとして数える．
 



"
p01717,Social Monsters,"
  不思議な生き物と人間が互いに助け合って生きている世界．
  この世界では自分で捕まえたモンスター同士を戦わせる大会が盛んに行われており，
  多くの少年少女達が世界一のトレーナーを目指している．
 
  バトルでは自分が捕まえたモンスターからパーティを作り，パーティ同士の対戦となる．
  モンスターのペアには相性があり，相性が非常に悪い場合と普通の場合がある．
  相性が非常に悪い場合，そのペアのモンスターを同じパーティに入れることはできない．
  相性が普通の場合には，友情度という数値で相性の良さが表現される．
  バトルでは，パーティ全体の友情度の和が勝負の鍵となる．
 
  いまn匹のモンスターからk匹のモンスターからなるパーティを作りたい．
  m個のモンスターのペア(a_i, &thinsp; b_i)に対して相性が分かっており，整数 c_i で表されている．
  c_i = 0 のとき，a_i 番目のモンスターと b_i 番目のモンスターは相性が非常に悪いことを意味する．
  c_i &thinsp;&ne;&thinsp; 0 のとき，a_i 番目のモンスターと b_i 番目のモンスターは相性が普通であり，その友情度は c_i であることを意味する．
  与えられたm個のペア以外は，相性が普通であり，それらの友情度はすべて0である．
 
  パーティの友情度の和を最大にする選び方を考えてみよう．


"
p01718,Perm Query,"
\{1,&thinsp; 2,&thinsp; …&thinsp;,&thinsp; n\}の順列 (p(1),&thinsp; p(2),&thinsp; …&thinsp;,&thinsp; p(n)) が与えられる．
(l_i,&thinsp; r_i) からなるクエリが q 個与えられるので，各クエリに対して以下の擬似コードによる処理結果を出力せよ．
 ret &thinsp; := &thinsp; 0, (x(1),&thinsp; x(2),&thinsp; …&thinsp;,&thinsp; x(n)) &thinsp;:=&thinsp; (1,&thinsp; 2,&thinsp; …&thinsp;,&thinsp; n) とおく． 各i &thinsp; &in; \{1, &thinsp; 2, &thinsp;…&thinsp;, &thinsp; n\} について y(i) := p(x(i)) とする． 各i &thinsp; &in; \{1, &thinsp; 2, &thinsp;…&thinsp;, &thinsp; n\} について x(i) &thinsp; = &thinsp;y(i)とする． ret &thinsp; := &thinsp;ret + x(l_i) + x(l_i+1) + …&thinsp; + x(r_i) もし (x(l_i),&thinsp; x(l_i+1),&thinsp; …&thinsp;,&thinsp; x(r_i)) = (l_i,&thinsp; l_i+1,&thinsp; …&thinsp;,&thinsp; r_i) なら (ret &ensp; mod10^9+7) を出力して終了する．そうでないなら 2 行目に戻る． 



"
p01719,Invest Master,"入力は以下の形式で与えられる。
  n : 株式の種類数
  d : 日数
  x : 1日目の所持金
  pi,j : i 日目の銘柄jの株価（今日を1日目とする）
 


"
p01720,Minus One,"入力は以下の形式で与えられる。
 最初に無向グラフの頂点数、辺数、2つの頂点を表す整数n,m,s,tが入力される。
2行目からm+1行目までは辺によって結ばれている2つの頂点が入力される。
(ただし、g の頂点集合を\{1,..., n\}とする。)
 

"
p01721,Wave Attack,"入力は以下の形式で与えられる。
  それぞれは問題文の説明の通りの正の整数である。
 

"
p01722,Fast Division,"入力は以下の形式で与えられる。
 問題の入力の非負整数nがあたえられる。
 

"
p01723,Ordering,"入力は以下の形式で与えられる。
 nは塔の数を表す。
ai, bi (1 &le; i &le; n &minus; 1)は塔aiが塔biより高いことを表す。
 

"
p01724,Phutball,".oxで構成された19 &times; 15の盤面が19行で与えられる。
各行は必ず15文字からなり、各文字は次を表す。
 "".""は空白を表す。
 ""o""は白石を表す。
 ""x""は黒石を表す。
 

"
p01725,Unordered Operators,"入力は以下の形式で与えられる。
0〜9の数字と演算子'+','-','*'、括弧'(',')'で構成された数式
  正確に記述すると入力は以下のbnfで示される形式になっている
  &lt;number&gt;は非負整数を表す。 

"
p01726,Almost Same Substring,"入力は以下の形式で与えられる。
 １行目でsが与えられる。
 ２行目でt'が与えられる。
 s, t'はそれぞれ大文字、小文字のアルファベットのみからなる。
 


"
p01727,A + B,"入力は以下の形式で与えられる。
 1行目にクエリの数n,2進数a, bが与えられる。
 2からn+1行目には以下の様なクエリが与えられる。
  q
  a i
  b i
 qが出力クエリを、a i,b iはそれぞれaの最下位ビットからiビット目、bの最下位ビットからiビット目を反転させる変更クエリを表している。
 


"
p01728,KuruKuruKururin,"入力は以下の形式で与えられる。
 lはヘリリンの半分の長さを表す。
rは回転角度を定めるものである。
(sx, sy)は点 s、(gx, gy)は点 g の座標である。
nは障害物の数を表す。
(xi1, yi1)と(xi2, yi2)はi番目の障害物を表す線分の端点である。
 

"
p01729,Air Pollution,"入力は以下の形式で与えられる。
 nは店の数、piはi番目の店の現在の大気の綺麗さ、liはi番目の店が達成すべき大気の綺麗さを表す。
 


"
p01730,Trip to Kyoto,"入力は以下の形式で与えられる。
 1行目のnは観光客の人数である。
次のn行のうちi行目(1&le; i &le; n)はi番目の観光客の位置(xi, yi)を表している。
xi,yiはそれぞれ整数で与えられる。
 

"
p01731,Thread Tree, 
p01732,Trodden Cable,"the first line of the input contains three integers which represent the dimension of the office w, h (1 \leq w, h \leq 500), and the number of staff n (1 \leq n \leq 1000), respectively.
the next line contains two x-y pairs (0 \leq x \leq w, 0 \leq y \leq h), which mean the position of two endpoints of a lan cable to be connected.
these values represents the coordinates of the cells to which the cable is plugged in its top-left corner.
exceptionally, x = w means the right edge of the rightmost cell, and y = h means the bottom edge of the bottommost cell.
 following lines describe staff's initial positions and their moving patterns.
the first line includes an x-y pair (0 \leq x \lt w, 0 \leq y \lt h), which represents the coordinate of a staff's initial cell.
the next line has an integer t (1 \leq t \leq 100) and a string which consists of u, d, l and r, whose meaning is described as above.
the length of a pattern string is greater than or equal to 1, and no more than 1,000.
these two lines are repeated n times.
 


"
p01733,Fox Observation,"
the input is formatted as follows.
 
the first line contains a single integer n (1 &le; n &le; 10^5) indicating the number of  the fox lairs in the forest.
each of the next n lines contains three integers x_i, y_i (|x_i|,\, |y_i| &le; 10^9) and w_i (1 &le; w_i &le; 10^4), which represent there are w_i foxes at the point (x_i, y_i).
it is guaranteed that all points are mutually different.
 


"
p01734,Removing Magical Tiles,"input follows the following format:
 the first line contains an integer n, which means the number of magical tiles.
 then, n lines which contain the information of magical tiles follow.
 the (i+1)-th line includes four integers xlower_{i1}, xlower_{i2}, xupper_{i1}, and xupper_{i2}, which means i-th magical tile's corner points are located at (xlower_{i1}, 0), (xlower_{i2}, 0), (xupper_{i1}, 1), (xupper_{i2}, 1).
 you can assume that no two magical tiles will share their corner points.
that is, all xlower_{ij} are distinct, and all xupper_{ij} are also distinct.
the input follows the following constraints:
  1 \leq n \leq 10^5
  1 \leq xlower_{i1} 
  1 \leq xupper_{i1} 
  all xlower_{ij} are distinct.
  all xupper_{ij} are distinct.
 



"
p01735,Optimal alpha beta pruning,"input follows following format: the first line contains an integer n, which means the number of vertices in game tree t.
the second line contains n integers p_i, which means the evaluation value of vertex i.
then, next n lines which contain the information of game tree t.
k_i is the number of child nodes of vertex i, and t_{ij} is the indices of the child node of vertex i.

input follows following constraints:
  2 \leq n \leq 100
  -10,000 \leq p_i \leq 10,000
  0 \leq k_i \leq 5
  2 \leq t_{ij} \leq n
  index of root node is 1.
  evaluation value except leaf node is always 0. this does not mean the evaluation values of non-leaf nodes are 0. you have to calculate them if necessary.
  leaf node sometimes have evaluation value of 0.
  game tree t is tree structure.
 



"
p01736,Graph Automata Player,"the input is formatted as follows:
 the first line contains one integer n (2 \leq n \leq 300).
n indicates the number of vertices.
the following n lines indicate the adjacent matrix of the graph.
when (i,j)-element is 1, there is an edge from vertex i to vertex j.
otherwise, there is no edge.
the following n lines indicate the value vector of the vertices.
the i-th element indicates the value of vertex i at time 0.
each element of the matrix and the vector can be 0 or 1.
the last line contains one integer t (1 \leq t \leq 100,000,000).
-t is the time your grandma wants to know the status at.
 


"
p01737,Spotlight Movement,"each input dataset is given in the following format:
 all inputs are integer. all coordinate information satisfies -10,000 \leq x, y \leq 10,000.
n (1 \leq n \leq 100) indicates the number of spotlights. (sx, sy) and (ex, ey) indicate the starting point and the ending point of ciel's path, respectively.
the following n lines denote the information of each spotlight.
r_{i} (1 \leq r_{i} \leq 100) indicates the radius of the spotlight.
k_{i} (2 \leq k_{i} \leq 10) indicates the number of vertices in the orbital path.
then, k_{i} vertices are given. two consecutive vertices on the same orbital path are located at different places.
the spotlight moves from the first point (x_{i1}, y_{i1}) to the second point (x_{i2}, y_{i2}), then moves to the third point (x_{i3}, y_{i3}), and so on.
after moving to the k_{i}-th point (x_{ik_{i}}, y_{ik_{i}}), the spotlight returns to the first point (x_{i1}, y_{i1}) and repeats again its movement.
 let d_{ij} be the closest distance between two central points of spotlight i and spotlight j. d_{ij} satisfies either of the following:
  d_{ij} > r_{i} + r_{j} + 0.000001
  d_{ij} 
 furthermore, let d_{i} be the closest distance between a central point of spotlight i and either the starting point or the ending point. d_{i} satisfies either of the following:
  d_{i} > r_{i} + 0.000001
  d_{i} 
 

"
p01738,Gravity Point,"the input is formatted as follows.
 the first line of the input contains two integers h and w (1 \leq h, w \leq 50) separated by a space, where h and w are the numbers of rows and columns of given matrix.
 the second line of the input contains five integers ma1, ma2, mb1, mb2 and mx (1 \leq ma1 \lt ma2 \leq 100, 1 \leq mb1 \lt mb2 \leq 100 and 1 \leq mx \leq 100) separated by a space.
 the following h lines, each consisting of w characters, denote given matrix.
in those h lines, a, b and x denote a piece of type a, type b and type x respectively, and . denotes empty cell to place no piece.
there are no other characters in those h lines.
 of the cell at i-th row in j-th column, the coordinate of the left top corner is (i, j), and the coordinate of the right bottom corner is (i+1, j+1).
 you may assume that given matrix has at least one a, b and x each and all pieces are connected on at least one edge.
also, you may assume that the probability that the x-coordinate of the center of gravity of the object is an integer is equal to zero and the probability that the y-coordinate of the center of gravity of the object is an integer is equal to zero.
 

"
p01739,Multi Path Story,"a data set is given in the following format.
 the first line of the data set contains one integer n (2 \leq n \leq 1{,}000), which denotes the number of the branching points in this game. the following n lines describe the branching points. the i-th line describes the branching point of id number i. the first integer k_{i} (0 \leq k_{i} \leq 50) is the number of choices at the i-th branching point. k_{i} &ge; 0 means that the i-th branching point is an ending. next 2k_{i} integers t_{ij} (1 \leq t_{ij} \leq n) and c_{ij} (0 \leq c_{ij} \leq 300) are the information of choices. t_{ij} denotes the id numbers of the next branching points when you select the j-th choice. c_{ij} denotes the time to read the story between the i-th branching point and the t_{ij}-th branching point. the branching point with id 1 is the first branching point. you may assume all the branching point and endings are reachable from the first branching point. you may also assume that there is no loop in the game, that is, no branching point can be reached more than once without a reset.
 


"
p01740,Rotation Game,"the input is formatted as follows.
 the first line of the input contains an integer w (2 \leq w \leq 2,000), the width of the board. the following two lines contain the information of the initial arrangement. if a cell (i, j) contains a checker in the initial arrangement, s_{ij} is o. otherwise, s_{ij} is .. then an empty line follows. the following two lines contain the information of the desired arrangement. similarly, if a cell (i, j) must contain a checker at last, t_{ij} is o. if a cell (i, j) must not contain a checker at last, t_{ij} is .. if there is no condition for a cell (i, j), t_{ij} is *.
you may assume that a solution always exists.
 
"
p01741,Manhattan," 0 &lt; d &le; 10 d は小数点以下ちょうど三桁まで与えられる 





"
p01742,Dictionary," 1 &le; n &le; 50  1 &le; |si| &le; 20  si に現れる文字は英小文字または ? である 


"
p01743,Clique Coloring," 1 &le; n &le; 5  2 &le; ai &le; 109 


"
p01744,Dense Amidakuji," 1 &le; h, w,  n &le; 200000   w は偶数  1 &le; ai &le; h  1 &le; bi &le; w − 1  ai &equiv; bi (mod 2)  (ai, bi) = (aj, bj) となるような相異なる i, j は存在しない 



"
p01745,Cellular Automaton," 1 &le; w &le; 3  |s| = 22w+1  s に現れる文字は '0', '1' のみである 


"
p01746,Directions," 1 &le; n &le; 200000  −109 &le; ai, bi &le; 109  1 &le; pi &le; 109  入力は全て整数である 



"
p01747,Snake," 2 &le; n &le; 1000   0 &le; xi &le; 109   1 &le; yi &le; 109   折れ線は自己交差を持たない   どの三点も同一直線上にない   (xi, yi) &ne; (xi+1, yi+1)   入力は全て整数である  



"
p01748,Distance Sum," 1 &le; n &le; 200000   1 &le; pi &le; n   1 &le; di &le; 200000   pi によって表されるグラフは木になっている   入力は全て整数である  


"
p01749,Substring Pairs," 1 &le; n &le; 200   1 &le; m &le; 50  m &le; n  1 &le; a &le; 1000 



"
p01750,Hyperrectangle," 2 &le; d &le; 300   1 &le; li &le; 300  0 &le; s &le; $\sum l_{i}$  入力は全て整数である 






"
p01751,Yamanote Line,"
入力は以下の形式で1 行で与えられる．
 
入力は3 つの整数 a, b, c からなる．
 
a は起きている時間，b は寝ている時間，c は乗車してから目的地までにかかる時間である．また，a, b, c の単位は分である．
 

"
p01752,Prowler,"
入力は以下の形式で与えられる．
 
si (1 &le; i &le; n) は， m 文字の文字列で各文字は次を表す．
  ""^""，""v""，"""" は b 君の最初の位置と最初に向いている方向（上下左右の向き）を表す．  ""."" は，何もないマスである．b 君は，このマスの上を移動することができる．  ""#"" は，壁を表す．壁の上を移動することは出来ない．  ""g"" は a さんの家の位置を表す．b 君は，a さんの家にたどり着くまで移動を繰り返す． 


"
p01753,Magic Bullet,"
入力はすべて整数である．それぞれの数は1 つの空白により区切られる．
  n は障害物の個数であり，q は仮定した青いオブジェと赤いオブジェの座標の組の個数である．  xi, yi, zi はそれぞれ i 個目の障害物の中心の位置を表す x 座標，y 座標，z 座標である．  ri は i 個目の障害物の半径である．  li は i 個目の障害物を貫通するための魔法で消費する魔力の量である．  sxj, syj, szj はそれぞれ j 番目の仮定における赤いオブジェの位置を表す x 座標，y 座標，z 座標である．  dxj, dyj, dzj はそれぞれ j 番目の仮定における青いオブジェの位置を表す x 座標，y 座標，z 座標である． 


"
p01754,Dinner,"
入力は以下の形式で n + 1 行で与えられる．
  1 行目は 3 つの整数 n, p, q が与えられ，それぞれ日数，自炊の幸福度を算出するための定数，自炊パワーの初期値である．  2 行目から n + 1 行目にはそれぞれ整数が 1 つずつ与えられ，i + 1 行目では i 日目に食堂に行った時に得られる幸福度が与えられる．
 


"
p01755,AI,"
入力は以下の形式で与えられる．
 
h は盤面の高さ，w は盤面の幅を表す．
 
次に盤面を真上から見た状態が与えられる．この盤面は上，下，左，右がそれぞれ北，南，西，東に対応する．各マスの状態を表す ai,j は以下のいずれかの文字である．
  ""s"" : ロボット（ロボットの初期位置．このマスには壁がないことが保証されている）  ""g"" : ゴール  ""#"" : 壁（ロボットは壁の上を移動することはできない）  ""."" : 何もないマス 
s にはロボットに与えられるプログラムが文字列として入力される．
 

"
p01756,Longest Match,"
入力は以下の形式で与えられる．
  1 行目には，文字列 s が与えられる．  2 行目には，クエリの個数 m が与えられる．  3 行目からの m 行のうち i 行目には i 番目のクエリ文字列 xi, yi が空白区切りで与えられる． 


"
p01757,Tournament,"
入力には，「マネージャーから受け取った順位表」が以下の形式で与えられる．
  1 行目は n, m の2 個の整数からなり， 2n は「地区大会の参加チーム数」，m は「『マネージャーから受け取った順位表』で連続した順位が並んでいる区間の個数」を表す．  2 行目は ai(0 &le; i &le; m) の m + 1 個の整数からなり，各 ai は「『マネージャーから受け取った順位表』で連続した順位が並んでいる区間の区切り位置」を表す．
  3 行目は bi(0 &le; i &lt; m) の m 個の整数からなり，各2bi は「『マネージャーから受け取った順位表』におけるチーム番号が ai 以上 ai+1 未満のチームの順位」を表す．
 


"
p01758,The Capital,"
入力は以下のような形式で m + 1 行で与えられる．
  1 行目には二つの整数 n, m が与えられ，与えられるグラフは n 頂点 m 辺であることを表す．  2 行目から m + 1 行目にはそれぞれ二つの整数 ai, bi が与えられ，ai から bi に有向辺が張られていることを表す．
 


"
p01759,Vongress,"
入力は以下の形式で与えられる．
 
n は盤である凸多角形の頂点数，m はプレイヤーの数を表す．(xi, yi) は盤の頂点の座標を表す．r1, . . . ,  rm は各プレイヤーが得たスコアの比を表す．
 

"
p01760,Taps,"あいづ君の家の浴槽には2つの蛇口 a, b がついており、 ひねるとひねった角度に比例した量の水が出てくる。 出てくる水の温度は a は ta [℃]、b は tb [℃]で一定である。 風呂に入るときにはそれらの量を調節して混ぜあわせることで適度な温度になるようにしている。 ta [℃] の水 va [l] と tb [℃]の水 vb [l] を混ぜ合わせた後の温度は、(ta × va + tb × vb) / (va + vb) になる。 例えば、ta = 80℃, tb = 20℃ で 40℃ のお湯を張りたいときには、 a から 100ml/s 、 b から 200ml/s ずつ出るように蛇口を調節すればよい。 ところが、このごろ蛇口が老朽化してきたため a は da [ml/s] 、b は db [ml/s] 単位でしか 出る水の量を調節できなくなってしまった。 すなわち、a から出る水の量が 0, da, 2×da, 3×da, ...[ml/s] という 飛び飛びの値にしか設定できなくなってしまったのである(b も同様)。 あいづ君は長年培ってきた勘によって狙った温度ぴったりに 調節できたのだが、それが通用しなくなった。 困ったあいづ君は、自動的に目的の温度 t[℃] に最も近い温度になるような水の出し方に調節するプログラムを書くことにした。 ただし、毎秒出せる水の量には上限があり、 a と b の水の量の和は d [ml/s] 以下でなければならない。 また、水を出さないことにはお風呂に入れないため、毎秒出る水の量は最低でも 1ml/s 以上でなければならない。 つまり、 1 ≦ a から出る水の量 + b から出る水の量 ≦ d を満たす必要がある。 
"
p01761,Books,"大学生のいづあ君はかなりの読書家である。面白そうだと思った本は迷わず買うため、蔵書が増えすぎて管理できなくなっているのが悩みである。そこでいづあ君は、持っている本の中から目的の本を検索するシステムを作ることにした。 全ての本は次の 3 つの属性を持つ。 title : 本のタイトルを表す文字列である。 author : 本の著者を表す文字列である。 date : 本の出版日を表す 2014/07/07 のような形式をした文字列である。 検索のクエリは次のような形式で与えられる。 q_title q_author q_date_from q_date_to
 q_title : タイトルに文字列 q_title を含む本がヒットする。 q_author : 著者名に文字列 q_author を含む本がヒットする。 q_date_from : 出版日が q_date_from と同じかそれより後である本がヒットする。 q_date_to : 出版日が q_date_to と同じかそれより前である本がヒットする。 ただし、クエリに * (アスタリスク)が指定された場合は任意の文字列にヒットする。ある本がヒットするかの判定は上記 4 つの論理積で行われる。つまり、 1 つ以上ヒットしていない属性がある場合はその本はヒットしていないものとする。(「ヒットする」とは本が検索クエリに合致することを意味する。) いづあ君の仕事は与えられたクエリを順に処理するプログラムを書くことである。 
"
p01762,Pruning,"とにかくあつい。あづい君の住んでいる地域は今年猛暑であった。 さらに、家の庭には 1 本の木が生えており、毎日やかましく鳴く蝉が暑さを増幅させているような気がする。 庭の木は、まさにグラフ理論でいうところの木のような形をしており、この木にはたくさんの蝉が止まっている。
蝉は、必ず枝の先端(葉)または枝の分かれ目(頂点)に止まる習性がある。 ただし、木の根には 1 匹も止まることはない。
この木のある枝(辺)を切ると、それより空側(根と反対側)にいる蝉を全て駆除することができる。
ただし、枝を切るためには、その枝に応じた労力が必要となる。 (注 : 括弧内の言葉はグラフ理論の言葉で置き換えたものである。以降は全てグラフ理論の言葉で表現することにする。) 高度情報化社会となった現代においては、 部屋に居ながらにして頂点に何匹の蝉がいるか、 そして各辺を切るのに要する労力を調べることが出来る。 あづい君はその情報を用いて、 木に止まっている全ての蝉を駆除するのに必要な最小の労力を調べるプログラムを書くことにした。 

"
p01763,Chopsticks,"お箸は 2 本 1 セット(1 膳)で用いるものである。しかしあるとき一人暮らしの大学生であるいあづ君は箸立てに入っているお箸が奇数本であることに気がついた。これは明らかにおかしい。いつの間にか何本か無くしてしまったのである。
困ったいあづ君は、今後このようなことが無いように箸の本数を毎日記録することにした。 ところが、いあづ君が決めた記録の方法は少し変わっている。 それは、まずm 個の自然数 a1, ... , am を決めた後、 箸の本数をそれらで割った余りを毎日記録するというものである。 例えばある日に残っている箸の本数が t のとき、 その日の記録として t % a1 , ... , t % am を付ける。 ただ、たまにいくつか記録し忘れたり、間違った記録を付けたりすることもあるようだ。 (x % y は x を y で割った余りである。) ここでいあづ君は大事なことに気づいた。 これだと最終日に何本残っているか 1 つに決まらない！ ポジティブないあづ君は、 d 日分の記録をもとに、 d 日目の記録をつけた直後に残っている箸の本数の最大値を求めるプログラムを書くことにした。 
"
p01764,Sigma,"小学生のづあい君は同じ足し算にも得意不得意があり、 0 以上の整数 x, y に対して、x + y を計算するのにかかる時間(秒)が次のように決まる。 1 の位から順番に計算していく。 xi は x の10進数表記で 10i の位の数である。 yi は y の10進数表記で 10i の位の数である。 ただし i が x の桁数より大きくなる時は xi = 0 とする。y についても同様である。 ci は、 i = 0 または xi-1 + yi-1 + ci-1 &lt; 10 ならば 0、 そうでなければ 1 である。 
 0 以上の整数 i についての xi × yi + ci の総和が x + y の計算にかかる時間である。 ある日、づあい君の先生は長さ n の整数列 a0, ... , an-1 の和を計算する宿題を出した。づあい君は数列の順番を並び替えることはできないが、足し算の式に括弧を付けることにより、足し算の順番を自由に変えることができる。例えば n = 4 の場合、順番は次の 5 通りある。 ((a0 + a1) + a2) + a3 (a0 + a1) + (a2 + a3) (a0 + (a1 + a2)) + a3 a0 + ((a1 + a2) + a3) a0 + (a1 + (a2 + a3)) それぞれの括弧 (x + y) の中で上で説明した時間がかかるとすると、総和を求めるのにかかる時間は最小で何秒になるだろうか。 
"
p01765,Todaiji,"づいあ君は旅行が大好きである。奈良旅行に訪れたづいあ君は、東大寺にある柱の穴をくぐることにした。しかし、づいあ君は最近太りだしたため、穴に引っかかってしまうかもしれない。そこでづいあ君は、どこまで太っても大丈夫かを調べるプログラムを書くことにした。 簡単のため問題は平面上で考える。穴は2本の折れ線で、づいあ君は円で表すこととする。折れ線 1 は点 (0,0) が始点、点 (1000,0) が終点である。折れ線 2 は点 (0,1000) が始点、点 (1000,1000) が終点である。 づいあ君の全身が x &lt; 0 の領域にある状態から、2 本の折れ線の間を通り、 x &gt; 1000 の領域にづいあ君の全身が出た状態に到達できるような最大の直径を求めてほしい。通過する際の経路は自由であり、円が折れ線に接しても良い。 
"
p01766,Soccer,"a国とb国の間でaiサッカーの試合をした。あなたの手元には、ある時刻にボールを持っていた選手とその位置を記録した表がある。表は n 行からなり、上から i 番目の行は次に示す要素からなる。 フレーム数 f_i ボールを持っている選手の背番号 a_i その選手が属するチーム t_i その選手の位置を表す座標 x_i , y_i フレーム数とは、ゲームの開始時刻に 0 に設定され、 1/60 秒ごとに 1 加算される整数のことである。例えば、ゲーム開始からちょうど 1.5 秒後のフレーム数は 90 である。 背番号は各チーム内の 11 人の選手に一意にふられる整数である。さらに、表中の連続する 2 つの記録において、同じチームの異なる背番号の選手がボールを持っているとき、その間に「パス」が行われたとする。記録に存在しないフレームは考慮しなくてよい。 さて、エンジニアであるあなたの仕事は、各チームの選手間で行われたパスのうち、 最も距離(ユークリッド距離)が長いものの距離と、それにかかった時間を求めることである。 距離が最長となるパスが複数ある場合は、かかった時間が最も短いものを出力せよ。 入力は以下の形式で与えられる。t_i=0 のときa国、 t_i=1 のときb国を表す。 入力はすべて整数である 1 \&le; n \&le; 100 0 \&le; f_i \lt f_{i+1} \&le; 324\,000  1 \&le; a_i \&le; 11  t_i = 0,1  0 \&le; x_i \&le; 120  0 \&le; y_i \&le; 90 a国の最長のパスにかかった距離と時間、b国の最長のパスにかかった距離と時間を、それぞれ1行に出力せよ。時間は秒単位とし、距離、時間ともに 10^{&minus;3} 以下の絶対誤差は許される。パスが一度も行われなかった場合はともに &minus;1 と出力せよ。 a国は長さ 5 のパスを 30 フレームの時刻に 60 フレーム =1 秒でし、b国は長さ √2 のパスを 120 フレームの時刻に 12 フレーム =0.2 秒でした。これらがそれぞれの最長のパスである。 
サンプル入力2
2
0 1 0 0 0
10 1 1 0 0


サンプル出力2
-1 -1
-1 -1


サンプル入力3
3
0 1 0 0 0
30 2 0 1 1
40 1 0 2 2


サンプル出力3
1.4142135624 0.1666666667
-1 -1


サンプル入力4
3
0 1 0 0 0
10 2 0 1 1
40 1 0 3 3


サンプル出力4
2.8284271247 0.5000000000
-1 -1
"
p01767,RUPC,"ロシア連邦でプログラミングコンテストが開催される。コンテストには n 個の問題が出題され、m 人の参加者がいる。問題 i には得点 a_i が設定されており、参加者 j の実力は b_j であることがわかっている。問題 i と参加者 j について、 a_i &le; b_j のときかつそのとき限り、参加者 j は問題 i を必ず解くことができる。 コンテストを通した参加者の得点は、その人が解くことができた問題の得点の総和である。また、参加者 j は、このコンテストでの目標点数 c_j を定めている。 各参加者が、目標点数以上の得点を獲得できるか判定せよ。 入力は以下の形式で与えられる。 入力はすべて整数である 1 \&le; n \&le; 300\,000 1 \&le; m \&le; 300\,000 0 \&le; a_{i} \&le; 1\,000\,000 0 \&le; b_{i} \&le; 1\,000\,000 0 \&le; c_{i} \&le; &sum;a_k 答えを m 行で出力せよ。 i 行目には、参加者 i&minus;1 が目標点数以上の得点を獲得できるなら yes、できないなら no と出力せよ。 各参加者の得られる得点は以下のようになる。 参加者0 : 1+1=2 参加者1 : 1+2+1+3=7 参加者2 : 1+2+1+3+4=11 参加者3 : 1+2+1+3+4+5=16 参加者4 : 1+2+1+3=7 参加者5 : 1+1=2 参加者6 : 0 

サンプル入力2
8
1 1 2 3 3 4 6 100
4
1 3 4 99
1 10 15 120


サンプル出力2
yes
yes
no
no

"
p01768,Shopping,"料理が得意な2d君は昼ごはんを作ろうとしている。料理には n 個の材料 a_{0}, a_{1}, … , a_{n&minus;1} が全てが必要である。 さて、今2d君の家の冷蔵庫には一つも材料が入っていないので、スーパーに買いに行かなければならない。スーパーでは材料 a_{i} を値段 x_{i} 円で買うことができる。 2d君は魔法使いでもあり、 m 種類の魔法が使える。 i 番目の魔法を材料 s_{i} にかければ材料 t_{i} に、また逆に t_{i} にかければ s_{i} に変えることができる。さらに、一つの材料に対して複数の魔法を繰り返して使うことができる。例えば、 p から q に変える魔法と、 q から r に変える魔法の2つを使って、 p から r を得ることができる。 2d君は魔法の力を借りてなるべく安く材料を揃えることにした。料理を完成させるために2d君が買う必要のある材料の、値段の総和の最小値を求めよ。 入力は以下の形式で与えられる。 数値はすべて整数である 材料の名前はすべて 1 文字以上 10 文字以下のアルファベット小文字からなる i ≠ j なら a_{i} ≠ a_{j} 1 \&le; x_{i} \&le; 1,000 1 \&le; n \&le; 5,000 0 \&le; m \&le; {\rm min}(n(n&minus;1)/2, 1000) s_{i} ≠ t_{i} s_{i},t_{i} の組に重複はない s_{i},t_{i} は a_{0},…,a_{n&minus;1} に含まれる 答えを1行で出力せよ。 魔法によって安い yaki を tako に変えることができるので、 yaki を 2 個買えばよい。 下に示すように、全ての材料を a から変えてそろえることができる。 a : a そのまま b : a -&gt; c -&gt; b c : a -&gt; c d : a -&gt; c -&gt; d e : a -&gt; b -&gt; e 



"
p01769,Hopping Hearts,"n 羽のうさぎが長さ l&minus;1 の平均台の上にいる。 i 番目のうさぎの初期位置は整数 x_iであり、 0 &le; x_{i} \lt x_{i+1} &le; l&minus;1 を満たす。座標は右に進むほど大きくなる。任意の i 番目のうさぎは、任意の回数だけ、ちょうど距離 a_i だけ右方向にジャンプ(すなわち、x_i から x_i+a_i へ移動)することができる。ただし別のうさぎを飛び越えること、&minus;1 以下または l 以上の位置に入ることはできない。また、同時にジャンプしていられるのは高々 1 羽であり、ある座標に存在できるうさぎの数も高々 1 羽である。 初期状態から始めてジャンプを任意の回数繰り返したあとの x_{0}, …, x_{n&minus;1} の状態として、あり得るものは何通りあるか。1\,000\,000\,007 で割った余りで求めよ。 入力は以下の形式で与えられる。 入力はすべて整数である 1 \&le; n \&le; 5\,000 n \&le; l \&le; 5\,000 0 \&le; x_{i} \lt x_{i+1} \&le; l&minus;1 0 \&le; a_{i} \&le; l&minus;1 答えを1行で出力せよ。 1/0でうさぎがいる/いないを表現すれば、100, 010, 001 の 3 通りである。 1100, 1001, 0101, 0011 の 4 通りである。 二項係数 c(50,10) = 10\,272\,278\,170 であり、それを 1\,000\,000\,007 で割ったあまりは 272\,278\,100 である。 
"
p01770,Arojam's Mask,"あなたは勇者である。勇者が旅をしている世界は n 個の街と、異なる街同士を結ぶ m 本の道からなる。道 i は街 a_i と街 b_i を結び、双方向に移動可能である。 街 s から出発し、街 t に移動することが勇者の目的である。 s,t は異なる街である。勇者は 0 日目に街を出発し、ちょうど 1 日かけて 1 本の道を通って移動することができる。道を使った移動には日数の制限 r があり、r 日目を超えることはできない。 また、勇者は任意の街で「オカリナを吹く」こともできる。オカリナを吹くと、時は 0 日目に、位置は街 s に戻される。つまり、r 回を超える移動を行う場合は、最低一度はオカリナを吹かなければならない。 さらに、勇者がある街に位置すると「イベント」が発生することがある。イベントは e 種類あり、i 番目のイベントは、街 c_{i} で発生する。イベントは勇者がそこにいると自動的に発生し、新たに道 a’_i と b’_i を結ぶ道が生じる。この道はオカリナを吹いても消えることはなく、初めから存在する道とも、別のイベントによって追加される道とも重複しない。ある町で起こるイベントは高々1つである。 さて、勇者の今日の仕事は、街 t に到達するまでに必要な移動の回数とオカリナを吹く回数の和の最小値を求めるプログラムを書くことである。 入力は以下の形式で与えられる。 入力はすべて整数である 2 \&le; n \&le; 100 1 \&le; m+e \&le; n(n&minus;1)/2 0 \&le; e \&le; 4 0 \&le; r \&le; 100 0 \&le; s,t,a_i,b_i,a’_i,b’_i,c_i \&le; n&minus;1 s ≠ t a_{i} ≠ b_{i}, a’_{i} ≠ b’_{i} a_{i} と b_{i}、a’_{i} と b’_{i}の全ての組は重複しない i ≠ j なら c_{i} ≠ c_{j} 答えを一行で出力せよ。どうしても t へ到達できない場合は &minus;1 を出力せよ。 例えば以下のように移動すればよい。イベントを起こすまでは道(4,5), (3,4)は存在しないことに注意せよ。 街2に行くと4から5へ移動できるようになる オカリナを使用し0へ戻る 街7に行くと3から4へ移動できるようになる オカリナを使用し0へ戻る 0から5へまっすぐ進む オカリナを1度も吹かない経路が最適である。 街 s でイベントが起こることもある。 "
p01771,Tree,"大きさ n の根付き木がある。 各頂点には 0 から n&minus;1 までの番号が付けられ、根が 0である。 任意の辺の両端の頂点について、割り当てられた整数は根に近いほうが小さい。初めは全ての辺の重みは 0 である。 この木に対する q 個のクエリを順に処理せよ。クエリには以下の 2 種類がある。 頂点 u, v の距離(パスに含まれる辺の重みの和)を求める。 頂点 v の子孫(自身を含まない)に接続する辺の重みを全て x 増加させる。 入力は以下の形式からなる。 a_i,b_i は i 番目の辺が結ぶ頂点である。 q_i は i 番目のクエリを表す 3 つの整数であり、次のうちいずれかである。 0 \ u_i \ v_i : 頂点 u_i, v_i の距離を求める。 1 \ v_i \ x_i : 頂点 v_i の子孫に接続する辺の重みを全て x_i 増加させる。 入力はすべて整数である 2 \&le; n \&le; 150\,000 1 \&le; q \&le; 150\,000 0 \&le; a_{i},b_{i},u_{i},v_{i} \&le; n&minus;1 a_{i} &lt; b_{i} 0 \&le; x_{i} \&le; 300 距離を求めるクエリのたびに、結果を1行で出力せよ。 この問題では入出力が非常に大きくなりうるので高速な関数を使用してほしい。 図のようになる。 



サンプル入力2
13 7
0 1
1 2
2 3
1 4
3 5
1 6
2 7
0 8
7 9
5 10
8 11
1 12
1 2 143
0 8 7
0 10 6
1 1 42
1 6 37
0 3 6
1 6 38


サンプル出力2
143
429
269
"
p01772,Z Cat,"あいずにゃんは若ヶ松高校のプログラミングコンテスト部，通称ぷろこん部に所属する2年生である．とてつもなくかわいい．あいずにゃんは友達のジョイに頼まれて猫を預かることになった．a-z キャットと呼ばれる珍種の猫である．あいずにゃんは預かった a-z キャットを「あいずにゃん 2 号」と (勝手に) 名付け，大層可愛がった． a-z キャットは特定の条件を満たす文字列を好むとされる．そこであいずにゃんが試しに文字列を与えてみると，あいずにゃん 2 号は文字列の一部を爪で切り取った後，満足げな表情を浮かべた．どうやら，好みの文字列に書き換えようとしているようだ． 天使のごとくかわいいあいずにゃんにぞっこんである d のひとは，あいずにゃんのために a-z キャットが好む文字列の条件を見つけ出した．それは 'a' と 'z' が交互に繰り返される文字列であり，かつ 'a' から始まり 'z' で終わる文字列である．a-z キャットはとても賢いので，最小限の文字消去で好みの文字列に変換しようとする．あいずにゃんにいい格好をしたい d のひとは，与えられた 'a' と 'z' のみからなる文字列を a-z キャットがどのような文字列に変換するか求めるプログラムを書くことにした． 

"
p01773,Cram School Schedule,"あなたは塾の経営者である．あなたの塾は個人授業制で1人の生徒と1人の先生で授業を行う．この塾の先生は非常に優秀で科目にかかわらずすべての授業を行うことができる．また，先生と生徒は非常にタフなので，出席できる授業には他の授業の出席状況にかかわらず，すべて出席することが可能である．例えば，同じ時間帯の授業に出席できる2人の生徒と4人の先生がいる場合は，その時間帯に2つの授業を行える． あなたは来月の授業予定を立てなくてはいけないが，先生と生徒の人数が多いため予定を立てるのが非常に大変である．また，あなたはできるだけ多くの授業を行いたいと考えている．そのため，あなたは行える最大の授業数を求めるプログラムを作ることにした． 

"
p01774,Digital Clock,"あいずにゃんは最近，風邪を引いてしまった．あまりのだるさにベットから出られない．辛そうにしている姿もまたかわいい． しかし暇で暇で仕方がないあいずにゃんは，枕下にあるデジタル時計で遊ぶ方法を考えついた．下の図のようなデジタル時計の光っている棒の本数を毎秒毎秒，ただひたすらに数えるのである． 何時間かこの遊びを続けた頃，あいずにゃんは時間が違っていても光っている棒の本数が等しい場合があることに気づいた．光っている棒の本数が等しい時間が何通りあるのか気になったあいずにゃんは，看病中のあなたに数えてくれるようお願いしてきた． ベッドから出られないあいずにゃんのために，あなたはプログラムを書いて求めることにした． 


"
p01775,Rescue a Postal Worker,"あなたは，この春に長年の夢だった郵便局に就職できました．担当する配達地域も決定し，ウキウキ気分で迎えた初仕事ですが，あまりに浮かれていたため郵便物を入れた袋に穴が空いているのに気づかず，入っていた郵便物を全部落としてしまいました．しかし，用意周到なあなたはすべての郵便物にgpsをつけていたため，どこに郵便物が落ちているかを知ることができます． 郵便物を拾いなおしていると予定していた配達時間を超えてしまうかもしれないので，あなたはできる限り短い時間で配達を終えたいと思っています．落としてしまったすべての郵便物を拾いなおして，それぞれの配達先に届ける最短の時間を求めなさい． 

"
p01776,Do You Divide It?,"t君は過去に出場したプログラミングコンテストで平面図形の問題にひどく手こずらされ，それ以来，平面図形に強い恨みを抱いている． 中でも，特に二次元平面上に描かれる多角形に対して複雑な感情を抱いているため，多角形を見かけると切り刻まずにはいられない． t君が多角形を切り刻むときには，y軸に平行に幅0.5の間隔でスリットの入った板で多角形を覆い，スリットで見えない部分を切り刻んで捨ててしまう． しかしながら，t君は一方的な殺戮を好まないため，多角形に再起の芽を残すべく，切り刻んだ後に残る図形の合計面積ができるだけ大きくなるように配慮する． t君が切り刻んだ後に残る図形の面積を求めよう． 

"
p01777,Disordered Data Detection,"宮守あかねは武蔵野ソフトウェアに務めるエンジニアである．今日は顧客から受けた不具合報告に頭を悩ませている．「変な話，この前作ってもらったソフトの挙動がぷるんぷるんしてるんでぇ，そちらでチェックしてもらえますか？保守するのもおたくらの仕事でしょ？」いつも無理難題ばかり押し付けてくるこの顧客だが，今回ばかりはこちらに非がある．なぜなら，いつも適当な仕事ばかりのジローがテストに通っていないコードをそのまま放置して製品に組み込んだことを告白したからである．普通の人間ならジローに殴りかかりそうなものだが，もはやいつものことだ，あかねは怒りを通り越し，すでに悟りを開きつつある．なにはともあれ，バグを取り除かなければならない．まずはデータログを解析し，異常が出ている箇所を検知することでバグの原因を探ろう． 今，d 日分のログがあり，各データは1つの整数である．l 日目から r 日目までのデータについて，l 日目のデータと r 日目のデータの間に収まらず，大きくかけ離れたデータは異常の可能性が高いと考えられる．よって，指定された期間を入力とし，上記のような外れ値を検知するコードを書くことにした． 顧客が提示したデバッグ期限は3時間後．万策尽きたかのような状況だが，あかねは何度もこのような状況を乗り越えてきた．お気に入りのドーナツを頬張り気合を入れて，どんどんデバッグ，どーんと行こう！ 

"
p01778,Dungeon of Cards,"ここは不思議の国あじふらい．あじふらい辺境の地に位置するカードの迷宮には，金銀財宝が眠ると伝えられている．好奇心旺盛なあいずにゃんは，この言い伝えを聞くやいなや，友人のウィを連れてカードの迷宮を目指す旅に出ることにした． 翌日，旅の計画を立てるためにあいずにゃんがウィの家を訪れると，ウィは何やら考え込んでいるようだった．どうやら用意周到なウィはカードの迷宮に関する重要な情報を入手したようだ．それは，カードの迷宮には n 枚の扉があり，それぞれの扉を開けるためにカードが必要になるということだ． カードの迷宮への道中には，扉を開くためのカードを扱う店がある．ウィはここでカードを調達しようと考えているらしいが，問題なのは予算である．あいずにゃんとウィは決してお金持ちではないので，カードにお金をかけすぎてしまうと道中の食料を十分に確保できない可能性があるのだ． 幸い n 枚の扉の情報は，これまで迷宮に挑んだ人々の記録から知ることができた．これなら効率の良いカードの買い方を計算できるかもしれない．しかし，２人で考えるには少し難しい．そこであいずにゃんとウィは，あじふらいに住む優秀なプログラマであるあなたに依頼をすることにした． 

"
p01779,Typing Game,"
ここからは，タイピング力を鍛える時間です．皆さんは早く正確なタイピングをすることができますか？
let’s enjoy typing game!
 

"
p01780,First Search by Foxpower,"
fox ciel went to jag kingdom by bicycle, but she forgot a place where she parked her bicycle. so she needs to search it from a bicycle-parking area before returning home.
 
the parking area is formed as a unweighted rooted tree $t$ with $n$ vertices, numbered $1$ through $n$. each vertex has a space for parking one or more bicycles. ciel thought that she parked her bicycle near the vertex $1$, so she decided to search it from there by the breadth-first search. that is, she searches it at the vertices in the increasing order of their distances from the vertex $1$. if multiple vertices have the same distance, she gives priority to the vertices in the order of searching at their parents. if multiple vertices have the same parent, she searches at the vertex with minimum number at first.
 
unlike a computer, she can't go to a next vertex by random access. thus, if she goes to the vertex $j$ after the vertex $i$, she needs to walk the distance between the vertices $i$ and $j$. bfs by fox power perhaps takes a long time, so she asks you to calculate the total moving distance in the worst case starting from the vertex $1$.
 

"
p01781,Cube Coloring,"
great painter cubic is famous for using cubes for his art. now, he is engaged in a new work of art. he tries to form an $x \times y \times z$ rectangular parallelepiped by arranging and piling up many $1 \times 1 \times 1$ cubes such that the adjacent surfaces of cubes are fully shared.
 
of course, he won't finish his work only arranging and piling up cubes. the position of each cube is denoted by $(0,0,0)$ through $(x-1,y-1,z-1)$ as by the ordinary coordinate system, and cubic calls the cube $(a,b,c)$ the origin cube. then, he paints a pattern on the rectangular parallelepiped with different colors according to the distance between each cube and the origin cube. he paints all cubes regardless of whether or not a cube is visible externally. this is his artistic policy. he uses manhattan distance as the distance between cubes. the manhattan distance between two cubes $(x_1,y_1,z_1)$ and $(x_2,y_2,z_2)$ is defined as $|x_1-x_2| + |y_1-y_2| + |z_1-z_2|$.
 
on the current work, cubic decides to use $n$ colors, which are numbered from $1$ to $n$. he paints a cube with the $(i+1)$-th color if the distance $d$ between the cube and the origin cube satisfies $d \equiv i \pmod{n}$. 
 
cubic wants to estimate the consumption of each color in order to prepare for the current work. he asks a great programmer, you, to write a program calculating the number of cubes that will be painted by each color.
 

"
p01782,Decoding Ancient Messages,"
professor y's work is to dig up ancient artifacts. recently, he found a lot of strange stone plates, each of which has $n^2$ characters arranged in an $n \times n$ matrix. further research revealed that each plate represents a message of length $n$. also, the procedure to decode the message from a plate was turned out to be the following:
 select $n$ characters from the plate one by one so that any two characters are neither in the same row nor in the same column. create a string by concatenating the selected characters. among all possible strings obtained by the above steps, find the lexicographically smallest one. it is the message represented by this plate. 
note: the order of the characters is defined as the same as the order of their ascii values (that is, $\mathtt{a} \lt \mathtt{b} \lt \cdots \lt \mathtt{z} \lt \mathtt{a} \lt \mathtt{b} \lt \cdots \lt \mathtt{z}$).
 
after struggling with the plates, professor y gave up decoding messages by hand. you, a great programmer and y's old friend, was asked for a help. your task is to write a program to decode the messages hidden in the plates.
 

"
p01783,LR,"
jag kingdom will hold a contest called icpc (interesting contest for producing calculation). 
 
at the contest, you are given a string composed of ?s and usable characters. you should replace all ?s in the string with the usable characters to make the string valid mathematical expression, before submitting it. the usable characters are l, r, (, ), ,, 0, 1, 2, 3, 4, 5, 6, 7, 8, and 9. 
 
for example, suppose that you are given the string ""r(??3,??1?78??1?)?"", then you can submit ""r(123,l(1678,213))"" as an example. 
 
the submitted string will be scored as follows.
 let $l$ and $r$ be functions defined by $l(x,y)=x$, $r(x,y)=y$, where $x$ and $y$ are non-negative integers.
 the submitted string will be regarded as a mathematical expression, whose value will be the score. for example, the score of the string ""r(123,l(1678,213))"" is $r(123,l(1678,213)) = r(123,1678) = 1678$.
 if the string cannot be evaluated as a mathematical expression about the functions $l$ and $r$, the string will be rejected. for example, ""r"", ""r(3)"", ""r(3,2"", ""r(3,2,4)"" and ""lr(3,2)"" are all invalid.  and strings that contain numbers with extra leading zeros, will be rejected. for example, ""r(04,18)"" is invalid, while ""r(0,18)"" is valid. 
the winner of the contest will be the person getting the highest score. your friend jagger, who is going to join the contest, wants to be the winner. you are asked by jagger to make the program finding the possible highest score for the input string.
 

"
p01784,Parentheses,"
you are given $n$ strings $\mathit{str}_1, \mathit{str}_2, \ldots, \mathit{str}_n$, each consisting of ( and ). the objective is to determine whether it is possible to permute the $n$ strings so that the concatenation of the strings represents a valid string.
 
validity of strings are defined as follows:
  the empty string is valid.   if $a$ and $b$ are valid, then the concatenation of $a$ and $b$ is valid.   if $a$ is valid, then the string obtained by putting $a$ in a pair of matching parentheses is valid.   any other string is not valid.  
for example, ""()()"" and ""(())"" are valid, while ""())"" and ""((()"" are not valid.
 

"
p01785,Polygon Guards,"
you are an it system administrator in the ministry of defense of polygon country. 
 
polygon country's border forms the polygon with $n$ vertices. drawn on the 2d-plane, all of its vertices are at the lattice points and all of its edges are parallel with either the $x$-axis or the $y$-axis. 
 
in order to prevent enemies from invading the country, it is surrounded by very strong defense walls along its border. however, on the vertices, the junctions of walls have unavoidable structural weaknesses. therefore, enemies might attack and invade from the vertices. 
 
to observe the vertices and find an invasion by enemies as soon as possible, the ministry decided to hire some guards. the ministry plans to locate them on some vertices such that all the vertices are observed by at least one guard. a guard at the vertex $a$ can observe a vertex $b$ if the entire segment connecting $a$ and $b$ is inside or on the edge of polygon country. of course, guards can observe the vertices they are located on. and a guard can observe  simultaneously all the vertices he or she can observe.
 
to reduce the defense expense, the ministry wants to minimize the number of guards. your task is to calculate the minimum number of guards required to observe all the vertices of polygon country.
 

"
p01786,Proportional Representation,"
an election selecting the members of the parliament in jag kingdom was held. the only system adopted in this country is the party-list proportional representation. in this system, each citizen votes for a political party, and the number of seats a party wins will be proportional to the number of votes it receives. since the total number of seats in the parliament is an integer, of course, it is often impossible to allocate seats exactly proportionaly. in jag kingdom, the following method, known as the d'hondt method, is used to determine the number of seats for each party. 
 
assume that every party has an unlimited supply of candidates and the candidates of each party are ordered in some way. to the $y$-th candidate of a party which received $x$ votes, assign the value $\dfrac{x}{y}$. then all the candidates are sorted in the decreasing order of their assigned values. the first $t$ candidates are considered to win, where $t$ is the total number of seats, and the number of seats a party win is the number of its winning candidates. 
 
the table below shows an example with three parties. the first party received $40$ votes, the second $60$ votes, and the third $30$ votes. if the total number of seats is $t = 9$, the first party will win $3$ seats, the second $4$ seats, and the third $2$ seats. 
 
when selecting winning candidates, ties are broken by lottery; any tied candidates will have a chance to win. for instance, in the example above, if $t = 5$ then two candidates tie for the value $20$ and there are two possible outcomes: 
  the first party wins $2$ seats, the second $2$ seats, and the third $1$ seat.   the first party wins $1$ seat, the second $3$ seats, and the third $1$ seat.  you have just heard the results of the election on tv. knowing the total number of valid votes and the number of seats each party won, you wonder how many votes each party received. 
 
given $n$, $m$, and $s_i$ ($1 \le i \le m$), denoting the total number of valid votes, the number of parties, and the number of seats the $i$-th party won, respectively, your task is to determine for each party the minimum and the maximum possible number of votes it received. note that for some cases there might be no such situation with the given $n$, $m$, and $s_i$. 
 

"
p01787,RLE Replacement,"
in jag kingdom, icpc (intentionally compressible programming code) is one of the common programming languages. programs in this language only contain uppercase english letters and the same letters often appear repeatedly in icpc programs. thus, programmers in jag kingdom prefer to compress icpc programs by run length encoding in order to manage very large-scale icpc programs.
 
run length encoding (rle) is a string compression method such that each maximal sequence of the same letters is encoded by a pair of the letter and the length. for example, the string ""rrrrleee"" is represented as ""r4l1e3"" in rle.
 
now, you manage many icpc programs encoded by rle. you are developing an editor for icpc programs encoded by rle, and now you would like to implement a replacement function. given three strings $a$, $b$, and $c$ that are encoded by rle, your task is to implement a function replacing the first occurrence of the substring $b$ in $a$ with $c$, and outputting the edited string encoded by rle. if $b$ does not occur in $a$, you must output $a$ encoded by rle without changes.
 

"
p01788,Tokyo Olympics Center,"
you are participating in the summer training camp for programming cotests. the camp is held in an accommodation facility called tokyo olympics center. today is the last day of the camp. unfortunately, you are ordered to check if all the participants have properly cleaned their rooms.
 
the accommodation facility is a rectangular field whose height is $h$ and width is $w$. the field is divided into square cells. the rows are numbered $1$ through $h$ from top to bottom and the columns are numbered $1$ through $w$ from left to right. the cell in row $i$, column $j$ is denoted by $(i, j)$. two cells are adjacent if they share an edge.
 
each cell is called either a wall cell or a floor cell. a wall cell represents a wall which no one can enter. 
a floor cell is a part of the inside of the accommodation facility. everybody can move between two adjacent floor cells. the floor cells are divided into several units. each unit is assigned an uppercase english letter (a, b, c, ...). a floor cell adjacent to exactly one floor cell is called a room. otherwise the floor cell is called an aisle. for example, the accommodation facility can be shown as the following figure. we denote a wall cell by . (single period).
 
in the above figure, there are $7$ rooms in unit a, $4$ rooms in unit b, and $4$ rooms in unit c.
 
because the accommodation facility is too large to explore alone, you asked the other participants of the camp to check the rooms. for simplicity's sake, we call them staffs. now, there are $k$ staffs at the cell $(s, t)$. you decided to check the rooms according to the following procedure.
  first, you assign each staff to some of units. every unit must be assigned to exactly one staff. note that it is allowed to assign all the units to one staff or to assign no units to some staffs.  then, each staff starts to check the rooms in the assigned units at the same time. the staffs can move between two adjacent floor cells in $t_{\mathit{move}}$ time. to check the room at $(i, j)$, the staffs must move to the cell $(i, j)$ and spend $t_{\mathit{check}}$ time there. each staff first determines the order of the units to check and he or she must check the rooms according to the order. for example, suppose that there is a staff who is assigned units a, c, and e. he may decide that the order is e-&gt;a-&gt;c. after that, he must check all the rooms in unit e at first. then, he must check all the rooms in unit a, and so on. the staffs can pass any floor cells. however, the staffs cannot check rooms that are not assigned to them. further, the staffs cannot check rooms against the order of units that they have decided.   after checking all the assigned rooms, the staffs must return to the cell $(s, t)$.   when every staff returns to the cell $(s, t)$, the task is done.  
because you do not have enough time before the next contest, you want to minimize the total time to check all the rooms.
 

"
p01789,Unfair Game,"
rabbit hanako and fox jiro are great friends going to jag primary school. today they decided to play the following game during the lunch break. 
 
this game is played by two players with $n$ heaps of some number of stones. the players alternatively take their turn to play the game. jiro is a kind gentleman, so he yielded the first turn to hanako. in each turn, the player must take some stones, satisfying the following conditions:
 if the player is hanako, she must take between $1$ to $a$ stones, inclusive, from a heap. if the player is jiro, he must take between $1$ to $b$ stones, inclusive, from a heap. 
the winner is the player who takes the last stone. jiro thinks it is rude to go easy on her because he is a perfect gentleman. therefore, he does him best. of course, hanako also does so.
 
jiro is worried that he may lose the game. being a cadet teacher working at jag primary school as well as a professional competitive programmer, you should help him by programming. your task is to write a program calculating the winner, assuming that they both play optimally.
 

"
p01790,Balanced Paths,"
you are given an undirected tree with $n$ nodes. the nodes are numbered 1 through $n$. each node is labeled with either '(' or ')'. let $l[u \rightarrow v]$ denote the string obtained by concatenating the labels of the nodes on the simple path from $u$ to $v$. (note that the simple path between two nodes is uniquely determined on a tree.) a balanced string is defined as follows:
  the empty string is balanced.  for any balanced string $s$, the string ""("" $s$ "")"" is balanced.  for any balanced strings $s$ and $t$, the string $st$ (the concatenation of $s$ and $t$) is balanced.  any other string is not balanced. 
calculate the number of the ordered pairs of the nodes ($u$, $v$) such that $l[u \rightarrow v]$ is balanced.
 

"
p01791,Card Game Strategy,"
alice and bob are going to play a card game. there are $n$ cards, each having an integer written on it. the game proceeds as follows:
  alice chooses an integer between $a$ and $b$, inclusive. call this integer $t$. alice then tells bob the value of $t$.  bob chooses $k$ out of the $n$ cards. compute the sum of the integers written on the $k$ cards bob chooses. call this sum $u$.
 
alice's objective is to make $|t - u|$ as large as possible and bob's is to make $|t - u|$ as small as possible.
 
prior to the game, both alice and bob know the values of $n$, $k$, $a$, and $b$, and also the integers on the cards. both alice and bob will play optimally. in particular, alice will make a choice, knowing that bob will surely minimize $|t - u|$ for told $t$. additionally, assume that alice prefers to choose smaller $t$ if she has multiple equally good choices.
 
your task is to determine the outcome of the game: the value of $t$ alice will choose and the $k$ cards bob will choose for that $t$.
 

"
p01792,Casino,"
taro, who owes a debt of $n$ dollars, decides to make money in a casino, where he can double his wager with probability $p$ percent in a single play of a game. taro is going to play the game repetitively. he can choose the amount of the bet in each play, as long as it is a positive integer in dollars and at most the money in his hand.
 
taro possesses $m$ dollars now. find out the maximum probability and the optimum first bet that he can repay all his debt, that is, to make his possession greater than or equal to his debt.
 


"
p01793,Content Delivery,"
you are given a computer network with n nodes. this network forms an undirected tree graph. the $i$-th edge connects the $a_i$-th node with the $b_i$-th node and its distance is $c_i$. every node has different data and the size of the data on the $i$-th node is $s_i$. the network users can deliver any data from any node to any node. delivery cost is defined as the product of the data size the user deliver and the distance from the source to the destination. data goes through the shortest path in the delivery. every node makes cache to reduce the load of this network. in every delivery, delivered data is cached to all nodes which relay the data including the destination node. from the next time of delivery, the data can be delivered from any node with a cache of the data. thus, delivery cost reduces to the product of the original data size and the distance between the nearest node with a cache and the destination.
 
calculate the maximum cost of the $m$ subsequent deliveries on the given network. all the nodes have no cached data at the beginning. users can choose the source and destination of each delivery arbitrarily.
 


"
p01794,Cost Performance Flow,"
yayoi is a professional of money saving. yayoi does not select items just because they are cheap; her motto is ""cost performance"". this is one of the reasons why she is good at cooking with bean sprouts. due to her saving skill, yayoi often receives requests to save various costs. this time, her task is optimization of ""network flow"".
 
network flow is a problem on graph theory. now, we consider a directed graph $g = (v, e)$, where $v = \{1, 2, ... , |v|\}$ is a vertex set and $e \subset v \times v$ is an edge set. each edge $e$ in $e$ has a capacity $u(e)$ and a cost $c(e)$. for two vertices $s$ and $t$, a function $f_{s,t} : e \rightarrow r$, where $r$ is the set of real numbers, is called an $s$-$t$ flow if the following conditions hold:
  for all $e$ in $e$, $f_{s,t}$ is non-negative and no more than $u(e)$. namely, $0 \leq f_{s,t}(e) \leq u(e)$ holds.  for all $v$ in $v \setminus \{s, t\}$, the sum of $f_{s,t}$ of out-edges from $v$ equals the sum of $f_{s,t}$ of in-edges to $v$. namely, $\sum_{e=(u,v) \in e} f_{s,t}(e) = \sum_{e=(v,w) \in e} f_{s,t}(e)$ holds.
 
here, we define flow $f( f_{s,t})$ and cost $c( f_{s,t})$ of $f_{s,t}$ as $f( f_{s,t}) = \sum_{e=(s,v)\in e} f_{s,t}(e) - \sum_{e=(u,s)\in e} f_{s,t}(e)$ and $c( f_{s,t}) = \sum_{e\in e} f_{s,t}(e)c(e)$, respectively.
 
usually, optimization of network flow is defined as cost minimization under the maximum flow. however, yayoi's motto is ""cost performance"". she defines a balanced function $b( f_{s,t})$ for $s$-$t$ flow as the sum of the square of the cost $c( f_{s,t})$ and the difference between the maximum flow $m = max_{f : s-t flow} f( f )$ and the flow $f( f_{s,t})$, i.e. $b( f_{s,t}) = c( f_{s,t})^2 + (m - f( f_{s,t}))^2$. then, yayoi considers that the best cost performance flow yields the minimum of $b( f_{s,t})$.
 
your task is to write a program for yayoi calculating $b( f_{s,t}^*)$ for the best cost performance flow $f_{s,t}^*$.
 

"
p01795,ICPC Teams,"
you are a coach of the international collegiate programming contest (icpc) club in your university. there are 3n students in the icpc club and you want to make $n$ teams for the next icpc. all teams in icpc consist of 3 members. every student belongs to exactly one team.
 
when you form the teams, you should consider several relationships among the students. some student has an extremely good relationship with other students. if they belong to a same team, their performance will improve surprisingly. the contrary situation also occurs for a student pair with a bad relationship. in short, students with a good relationship must be in the same team, and students with a bad relationship must be in different teams. since you are a competent coach, you know all $m$ relationships among the students.
 
your task is to write a program that calculates the number of possible team assignments. two assignments are considered different if and only if there exists a pair of students such that in one assignment they are in the same team and in the other they are not.
 

"
p01796,channel II,"
jag (japan alumni group) is a group of $n$ members that devotes themselves to activation of the competitive programming world. the jag staff members talk every day on the bbs called jag-channel. there are several threads in jag-channel and these are kept sorted by the time of their latest posts in descending order.
 
one night, each of the $n$ members, identified by the first $n$ uppercase letters respectively, created a thread in jag-channel. the next morning, each of the $n$ members posted in exactly $k$ different threads which had been created last night. since they think speed is important, they viewed the threads from top to bottom and posted in the thread immediately whenever they came across an interesting thread. each member viewed the threads in a different period of time, that is, there was no post of other members while he/she was submitting his/her $k$ posts.
 
your task is to estimate the order of the members with respect to the periods of time when members posted in the threads. though you do not know the order of the threads created, you know the order of the posts of each member. since the threads are always kept sorted, there may be invalid orders of the members such that some members cannot post in the top-to-bottom order of the threads due to the previous posts of other members. find out the lexicographically smallest valid order of the members.
 


"
p01797,Kimagure Cleaner,"
ichiro won the newest model cleaner as a prize of a programming contest. this cleaner automatically moves around in a house for cleaning. because ichiro's house is very large, it can be modeled as an infinite two-dimensional cartesian plane, whose axes are called $x$ and $y$. the positive direction of the $y$-axis is to the left if you face the positive direction of the $x$-axis.
 
the cleaner performs a sequence of actions for cleaning. each action consists of a turn and a run. in an action, first the cleaner turns right or left by 90 degrees, and then runs straight by an integer length to the direction that the cleaner faces. at the end of a day, the cleaner reports the log of its actions in the day to ichiro, in order to inform him where it has cleaned and where it hasn't.
 
unlike common cleaners, this cleaner has human-like artificial intelligence. therefore, the cleaner is very forgetful (like humans) and it is possible that the cleaner forgets the direction of a turn, or the cleaner only remembers the length of a run as a very rough range. however, in order to pretend to be operating correctly, the cleaner has to recover the complete log of actions after finishing the cleaning.
 
the cleaner was initially at the point $(0, 0)$, facing the positive direction of $x$-axis. you are given the cleaner's location after cleaning, $(x, y)$, and an incomplete log of the cleaner's actions that the cleaner remembered. please recover a complete log from the given incomplete log. the actions in the recovered log must satisfy the following constraints:
  the number of actions must be the same as that in the incomplete log.  the direction of the $i$-th turn must be the same as that in the incomplete log if it is recorded in the incomplete log.  the length of the $i$-th run must be within the range of the length specified in the incomplete log.  the cleaner must be at $(x, y)$ after finishing all actions. the direction of the cleaner after cleaning is not important and you do not have to care about it, because the cleaner can turn freely after cleaning, though it cannot run after cleaning. you are not required to recover the actual path, because ichiro only checks the format of the log and the location of the cleaner after cleaning. 



"
p01798,Midpoint,"
one day, you found $l + m + n$ points on a 2d plane, which you named $a_1, ..., a_l, b_1, ...,b_m, c_1,...,c_n$. note that two or more points of them can be at the same coordinate. these were named after the following properties:
  the points $a_1,...,a_l$ were located on a single straight line,  the points $b_1,...,b_m$ were located on a single straight line, and  the points $c_1,...,c_n$ were located on a single straight line. 
now, you are interested in a triplet $(i, j, k)$ such that $c_k$ is the midpoint between $a_i$ and $b_j$. your task is counting such triplets.
 


"
p01799,New Game AI,"
aoba is a beginner programmer who works for a game company. she was appointed to develop a battle strategy for the enemy ai (artificial intelligence) in a new game. in this game, each character has two parameters, hit point ($hp$) and defence point ($dp$). no two characters have the same $hp$ and $dp$ at the same time. the player forms a party by selecting one or more characters to battle with the enemy. aoba decided to develop a strategy in which the ai attacks the weakest character in the party: that is, the ai attacks the character with the minimum hit point in the party (or, if there are several such characters, the character with the minimum defense point among them). she wrote a function selecttarget($v$) that takes an array of characters representing a party and returns a character that her ai will attack.
 
however, the project manager ms. yagami was not satisfied with the behavior of her ai. ms. yagami said this ai was not interesting.
 
aoba struggled a lot, and eventually she found that it is interesting if she substitutes one of the constant zeros in her program with a constant $c$. the rewritten program is as follows. note that character is a type representing a character and has fields $hp$ and $dp$ which represent the hit point and the defense point of the character respectively.
 
by the way, this function may return different characters according to the order of the characters in $v$, even if $v$ contains the same set of characters. ms. yagami wants to know how many characters in a party may become the target of the new ai. aoba's next task is to write a program that takes a given party $v$ and a constant $c$, and then counts the number of characters that may become the return value of selecttarget($v$) if $v$ is re-ordered.
 

"
p01800,Runner and Sniper,"
you are escaping from an enemy for some reason. the enemy is a sniper equipped with a high-tech laser gun, and you will be immediately defeated if you get shot. you are a very good runner, but just wondering how fast you have to run in order not to be shot by the sniper. the situation is as follows:
 
you and the sniper are on the $xy$-plane whose $x$-axis and $y$-axis are directed to the right and the top, respectively. you can assume that the plane is infinitely large, and that there is no obstacle that blocks the laser or your movement.
 
the sniper and the laser gun are at $(0, 0)$ and cannot move from the initial location. the sniper can continuously rotate the laser gun by at most $\omega$ degrees per unit time, either clockwise or counterclockwise, and can change the direction of rotation at any time. the laser gun is initially directed $\theta$ degrees counterclockwise from the positive direction of the $x$-axis.
 
you are initially at ($x$, $y$) on the plane and can move in any direction at speed not more than $v$ (you can arbitrarily determine the value of $v$ since you are a very good runner). you will be shot by the sniper exactly when the laser gun is directed toward your position, that is, you can ignore the time that the laser reaches you from the laser gun. assume that your body is a point and the laser is a half-line whose end point is (0, 0).
 
find the maximum speed $v$ at which you are shot by the sniper in finite time when you and the sniper behave optimally.
 


"
p01801,Wall Making Game,"
the game wall making game, a two-player board game, is all the rage.
 
this game is played on an $h \times w$ board. each cell of the board is one of empty, marked, or wall. at the beginning of the game, there is no wall on the board.
 
in this game, two players alternately move as follows:
  a player chooses one of the empty cells (not marked and not wall). if the player can't choose a cell, he loses.  towards each of the four directions (upper, lower, left, and right) from the chosen cell, the player changes cells (including the chosen cell) to walls until the player first reaches a wall or the outside of the board.
 
note that marked cells cannot be chosen in step 1, but they can be changed to walls in step 2.
 
fig.1 shows an example of a move in which a player chooses the cell at the third row and the fourth
column.
 
your task is to write a program that determines which player wins the game if the two players play optimally from a given initial board.
 


"
p01802,Koto Municipal Subway,"koto市は，下図のように，道路が碁盤の目状である有名な街である．
南北に伸びる道と東西に伸びる道は，それぞれ1kmの間隔で並んでいる．
koto市の最も南西の交差点にあるkoto駅を (0, 0) として，そこから東に x km，北に y km 進んだ位置を (x, y) と記すこととする (0 &le; x, y である)．
 5年後に開かれるオリンピックにより観光客が増大することを見越して，市はkoto駅を始発駅とする新しい地下鉄の路線を建設することを決めた．
現在，koto駅の次の駅として新しく建設されるshin-koto駅までのレールを敷く計画を立てている．
レールは，koto駅からshin-koto駅に向かってまっすぐ敷く．
従って，shin-koto駅の場所を (x, y) としたとき，レールの長さは， &radic;(x2 + y2) である．
レールを敷くための費用は，敷いたレールの長さ分だけ必要になる．
レールの長さが1.5kmのように小数であっても，費用も同じように1.5必要となる．
 shin-koto駅の場所 (x, y) はまだ決定しておらず，以下の条件を満たす場所にする予定である．
  交差点である．つまり， x と y がそれぞれ整数である．
  koto駅から道路に沿って歩いた最短距離が，ちょうど d である．つまり， x + y = d を満たす．
 上の2つの条件を満たす中で，市が定めるレールの予算 e とレールの費用とのずれ | &radic;(x2 + y2) - e | が最小となるようにshin-koto駅の場所を選ぶ．
ここで |a| は， a の絶対値を表す．
あなたの仕事は，上記のようにshin-koto駅を建設したときの，レールを敷くための費用と予算とのずれを出力するプログラムを作成することである．
 




"
p01803,Airport Codes,"jag王国では国内の空港にそれぞれ空港コードを割り当てて識別をしている．
 空港コードは，小文字の英語アルファベットで表記した空港の名前をもとに以下の規則で割り当てられる:
  名前の最初の文字と，母音 (a,i,u,e,o) の直後の文字を順に取り出す．
  取り出した文字列が k 文字未満ならそれを空港コードとし， k 文字以上なら，その取り出した文字列の先頭 k 文字を空港コードとして使う．
 例えば k = 3 のとき，haneda には hnd ， oookayama には ooo ， tsu には t というコードが割り当てられる．
 しかしこのコードの割り当て方では，違う名前の空港でも同じコードが割り当てられることがあり，混乱を招いてしまう．
空港の名前の一覧が与えられるので，すべての空港のコードが異なるようにできるか判定して，可能な場合はすべての空港コードが異なるようにできる最小の k を求め，不可能な場合はその旨を伝えるプログラムを作成せよ．
 





"
p01804,Falling Block Puzzle,"あなたはある落ち物パズルで遊んでいる．
このパズルのフィールドは，下図のように各段に立方体のセルが2マス×2マスに並び，段が上に無限に並んでいる形をしている．
 それぞれのセルは，セルにぴったり収まるブロックが1つ存在するか，何もないかのどちらかである．
このパズルは以下のように進行する．
  初期状態としていくつかのブロックが設置されている．
  2マス×2マス×2マスに収まるブロックの塊を上から落とす．ただし，落とす前に，ブロックがフィールドからはみ出さないようにして塊を水平方向に平行移動することができる．
  落としたブロックのうち，ある1つの下面が，すでに置かれているブロックまたはフィールドの底に着いた時点で，すべてのブロックの落下が止まり停止する．
  それぞれの段について，4マス全てが埋まっていればその段のブロックは消滅し，その上にあるブロックが1段ずつ落下する．落下後のそれぞれのブロックの下のセルにブロックがなかったとしても，それ以上落下することはない．
  2に戻る．
 初期状態で置かれているブロックと，落とす塊がいくつか与えられるので，与えられる順に全ての塊を落とすことで，最大いくつの段を消すことができるかを求めるプログラムを作れ．
 




"
p01805,Alternate Escape,"aliceとbobはボードゲームで遊んでいる．
このボードゲームは， h 行 w 列のマス目が書かれた盤面と1つのコマを使って遊ぶ．
このゲームでは，盤面の左上のマスを1行1列目として，下方向に行を，右方向に列を数える．
 マス同士が隣接する辺と，マスが盤面の外側と接する辺には壁を置けるようになっていて，ゲームの開始時にはそれぞれの辺について壁の有無が指定されている．また，ゲームの開始時には，コマが盤面のマスのいずれか1箇所に置かれている．
 aliceとbobは交互に手番をこなすことでゲームを進める．
ゲームはaliceの手番から始まる．
aliceの目的は，コマを盤面の外まで動かして，迷路から脱出させることである．
aliceが1手でできる行動は，コマを今ある位置のマスから，上下左右に隣接するマスのうち，間の辺に壁がない方向のいずれかに移動させることである．
コマの今あるマスが盤面の外側に接していて，間の辺に壁がない場合，そこからコマを脱出させることができる．
 一方，bobの目的は，コマの脱出を妨害することである．
bobの手番では，壁の有無を反転させるか，何もせずに手番を終えるかを選ぶことができる．
壁の有無を反転させることを選んだ場合，盤面のすべてのマスの辺について，壁の有無が反転する．
 盤面の初期状態と，コマの初期位置が与えられるので，aliceとbobの両者が最適な行動をとったときに，aliceがコマを盤面から脱出させられるか判定せよ．
ただし，aliceの手番においてコマが4方向とも壁で囲まれてしまった場合は脱出できないとみなす．
 




"
p01806,Dice Stamp,"あなたは地元の縁日で，今までに見たことがないゲームの出店を発見した．
n 個の6面サイコロを，ボード上に落として転がすゲームだ．
より正確には， n 個のボタンが n 個のサイコロに1対1に紐付いており，ボタンを押すことで対応したサイコロがボードに落ちる．
ボタンを好きなように n 回押し，サイコロを n 回落として転がすことで得点を得るゲームである．
 ゲームのより詳細なルールを説明しよう．
ゲームで使用する n 個のサイコロはすべて各辺の長さが1の立方体であり，ボードは長さが1の正方形のマスに区切られた十分に広い平面である．
ゲーム開始前，ボードの各マスにはすべて0が書かれている．
各サイコロの各面には整数が書かれている．これは1から6までとは限らないし，サイコロごとに違う数が書かれていることもある．
 ゲームで用いる筐体には n 個のボタンが付いており， n 個のサイコロと1対1に紐付いている．
いずれかのボタンを押すと，対応したサイコロが機械から排出されてボードに落ち，何度か回転する．
回転の途中，サイコロの下面は必ずボードのいずれかのマスにぴったりと重なる．
下面がマスに触れる度，そのマスに書かれていた数が，サイコロの下面に書かれた数で上書きされる．
これは落下により初めてボードに触れたときも含む．
回転が止まった後，サイコロはボードから取り除かれ，元の排出装置へと戻される．
ボタンを n 回押した後，ボードに書かれた数の和が最終得点となる．
同じボタンを複数回押すことはできるが，1つ前に排出したサイコロの回転が終わり，排出装置に戻るまで次のボタンを押すことはできない．
 さて，出店のおっちゃんはサイコロの排出の仕方はランダムだと主張しているが，注意深いあなたは，他の客が遊ぶ様子を観察することで，同じボタンを押した時の挙動がそれまでのボタンの押し方に依らず完全に同一であることに気付いた．
より具体的には， i 番目のボタンを押したときの挙動は以下のように決定的である．
  i 番目のサイコロが排出される．
  このサイコロは内部で決められたマスに決められた向きで落下する．この向きは必ず，マスの正方形と下面の正方形とがぴったりと重なる向きである．
  サイコロは前後左右4方向いずれかに回転することを繰り返す．回転回数やそれぞれの回転の方向も，内部で決められている．
  決められた回転が終了すると，サイコロはボードから取り除かれ，排出装置に戻される．
 ここで，便宜上3次元空間を考え，マスの辺に平行な向きにそれぞれ x 軸と y 軸をとり，サイコロ上面が向く方向を z 軸正方向とする. この時，サイコロの回転は x, y 軸の正，負方向の4通りであり，それぞれ下図のようになる．ただし，図中の記号は後述の入力形式に対応している．
 決定的に動くとはなんて詐欺だ，と憤りを感じたものの，あなたは n 回のボタンの押し方によって最終得点を変えられることに気が付いた．
 あなたは入念な観察により各サイコロの各面に書かれた数や落とされる初期位置・向き・その後の回転の仕方に至るまで完全な情報を揃えた．
集めた情報に基づいて，最善のボタンの押し方で得られるこのゲームの最高得点を求めよ．
 




"
p01807,Stamp Rally,"日本アミューズメントグループ (japan amusement group, jag) では，島国を模したテーマパークでのイベントを企画している．
このイベントでは，参加者は橋を渡るたびに橋ごとに決められたスタンプをスタンプ帳に順番に押していく．
用意されたスタンプは以下の7種類のどれかである．
 スタートからゴールまで橋を渡り歩いて，押されたスタンプの列が正しい数式になればクリアである．
ただし橋を渡る向きは決まっていて，逆向きに渡ることはできない．
同じ橋を何度も渡ってよく，最終的にゴール地点に到着するのであれば一度ゴール地点に着いた後に引き続きスタンプを集めてもよい．
正しい数式とは以下の bnf で定義される &lt;expression&gt; である．
 スタート・ゴールと橋ごとのスタンプを決めたので，関係者で試しにやってみたがなかなかクリアする人が現れない．
もしかしたら，この設定ではクリアすることができないのかもしれない．
 スタート・ゴールと橋の情報が与えられるので，クリア可能かどうかを判定するプログラムを書きなさい．
 




"
p01808,Kuru Kuru Door,"acm (automatic cleaning machine) 社が2011年に開発した全自動円形掃除機 icpc (intelligent circular perfect cleaner) は，
日中に自動で動き出し，自分が通り過ぎた場所のゴミを掃除する機能を備えている．
加えて，この icpc は，バッテリー残量が低下した場合に自動的に電源の位置まで戻る機能も備えている．
 この度，jag (japan alumni group) と名乗る謎の組織から， acm 社に対し大量の icpc の発注があった．
しかし，その発注には条件が付いていた．
それは，彼らが本拠地としているビルの内部にある「くるくるドア」に icpc を対応させることである．
くるくるドアは，以下に述べるように平面上の物体としてモデル化されている．
 くるくるドアは，原点で接続された長さ r の 2n (&ge; 4) 枚のドアの組として表される．
これらのドアは，角度 &pi;/n おきに並んでいる．
くるくるドアは手動であり，ドアのどこに触れても触れた方向( icpc との重なりが解消される方向)へ原点中心に一斉に回転させることができるが，
平行移動させることはできない．
初期状態では，ドアのちょうど2枚が y 軸に平行である．
 また，原点を中心とする半径 r の円のうち，y 座標の絶対値が rsin(&pi;/(2n)) 以上である部分および，
y 軸上で y 座標の絶対値が r 以上の部分は壁になっている．
これらの壁は押すことができない．
 平面上で icpc は半径 r の円として表される．
 icpc の電源は点 t = (xt, yt) にあり， icpc はその中心座標が電源の位置に重なっている時バッテリーを充電することができる．
はじめに icpc の中心座標が点 s = (xs, ys) となる位置にあるとき，
電源の位置まで icpc が最短経路を通って戻れるようにすることが， jag から出された icpc 発注の条件である．
なお， icpc がくるくるドアに対して正確な挙動を行うことを確かめるために， icpc の初期位置と電源の位置は，くるくるドアを挟んで反対側となるように与えられる．
 acm 社は，凄腕プログラマーのあなたに，くるくるドアの寸法， icpc の中心座標 s と半径，電源の位置 t が与えられたとき，icpcが電源の位置へ到達できるかを判定し，到達可能な場合は icpc の中心座標が移動する最短経路の長さを求めるプログラムの作成を依頼した．
 




"
p01809,Let's Solve Geometric Problems,"
a君は今日も幾何の問題を解いている。
幾何の問題を解く時は浮動小数点誤差に気をつけることが大事である。
 
浮動小数点誤差とは、2進法の有限小数で数を表す際におこる丸めによって起きる誤差である。
例えば、10進法での 0.1 は2進法では 0.00011001100110011 ... という無限小数になるが、
これを有限の桁で丸める際に誤差が発生してしまう。
 
正の整数 p, q が10進法で与えられる。
有理数 p / q を有限桁数の小数で表現することができるような b 進法（b は2以上の整数）を求めよ。
複数ある場合は最も小さいものを出力せよ。
 

"
p01810,Jail,"無限人の囚人たちがいる。はじめ、囚人たちは 0, 1, 2, ... と番号が振られている。 次の操作を n 回行う。 0 番目の囚人を釈放し、k, 2k, 3k, ... 番目の囚人たちを処刑する。 その後、残った囚人たちに番号を振り直す。このとき、元の番号が小さい囚人から順に 0, 1, 2,  ... と番号を振る。 n 回目の操作で釈放される囚人がはじめに振られていた番号を求めよ。 


"
p01811,ABC Gene,"文字列 abc で表される遺伝子配列がある。あなたは次の操作を何回か行い、この遺伝子配列を書き換えていくことができる。 文字 a，b，c のうち 1 つを選ぶ。これを x とおく。遺伝子配列に含まれるすべての x をそれぞれ abc へ同時に置き換える。 a，b，c だけからなる文字列 s が与えられる。遺伝子配列を s に一致させられるか判定せよ。 

"
p01812,Dark Room,"
目を覚ますと、a君は真っ暗な部屋の中にいた。
どうやらa君は n 個の部屋から構成されたダンジョンに迷い込んでしまったようだ。
あなたはa君がどの部屋に迷い込んだのかを知ることはできなかったが、幸いにもダンジョンのマップを手に入れることができた。
a君の進むべき道を示し明るい部屋に導こう。
 
n 個の部屋のうち m 個の部屋が真っ暗な部屋であり、それぞれ d_1, d_2, ..., d_m 番目の部屋が真っ暗な部屋であることが分かっている。
また、全ての部屋からちょうど k 本の一方通行の道が順に並んでおり、i 番目の部屋から出る道はそれぞれ 
v_{i,1}, v_{i,2}, ..., v_{i,k} 番目の部屋に繋がっている。
あなたは、a君に対し今いる部屋から a_1, a_2, ..., a_l 番目の道を順に進ませることができる。
ただし、a君は明るい部屋に到達したらそれ以降の指示は無視する。
あなたは、指示の前後においてa君が今いる部屋の情報を知ることはできないため、a君がどの部屋にいたとしても明るい部屋に辿り着けるような指示列を伝えなければならない。

そのような指示のうち、最も短いものの長さを答えよ。

 

"
p01813,An Equation in a Mine,"
ある日廃坑を探検していたあなたは、坑道に長い数式 s が書かれているのを発見した。大きな数が好きなあなたは、チョークを取り出し、数式を計算した結果ができるだけ大きくなるように(または)を書き加えることにした。書き加えた後も数式になっていなければならないとすると、最大でいくつにできるか。
 
文字と文字の間は十分広く空いていて、(または)であればいくつでも書き加えることができる。最終的に数式になっていれば、最初のかっこの対応が崩れるように(または)を書いてもよい（sample 2参照）。
また、ここでは以下のbnfで定義される&lt;expr&gt;を数式と呼ぶ。数式中の数は全て一桁である。

&lt;expr&gt;  ::= ""("" &lt;expr&gt; "")""
         | &lt;term&gt; ""+"" &lt;term&gt;
         | &lt;term&gt; ""-"" &lt;term&gt;
&lt;term&gt;  ::= &lt;digit&gt; | &lt;expr&gt;
&lt;digit&gt; ::= ""0"" | ""1"" | ""2"" | ""3"" | ""4""
          | ""5"" | ""6"" | ""7"" | ""8"" | ""9""

 

"
p01814,Nearly Cyclic String,"
文字列 s が与えられる。この文字列 s に対し、q 個のクエリに答えよ。
 i 番目のクエリでは、s[l_i,\ r_i] から1文字まで変えてよいとき、s[l_i,\ r_i] を周期 t_i の文字列にできるかどうかを判定せよ。s[l,\ r] は文字列 s の l 文字目から r 文字目までの部分文字列を表す。
 
文字列 w が周期 t の文字列であるとは、i\ =\ 1,\2,\... ,\ |w| &minus; t に対し、
 w_{i} = w_{i+t}
となることとする。
 

"
p01815,Escape,"
頂点に正の値を持つ無向グラフが与えられる。
頂点には 1 から n の番号がついており、i 番目の頂点は w_i の値を持っている。
1 番目の頂点からスタートし、直前に通った辺を通ることができないという制約のもとでグラフ上を移動することができる。
各頂点では，初めて訪れた時に限りその頂点が持つ値の点数を得られる。
 
取得できる点数の総和の最大値を求めよ。
 

"
p01816,Bit Operation Game,"
n 頂点の根付き木が与えられる。
頂点には 0 から n &minus; 1 の番号がついており、0番目の頂点が根を表す。
根には t = 0 が、それ以外の頂点には
 t=t&x t=t&y t=t|x t=t|y t=t^x t=t^y 
のいずれかの操作が書かれている。
ここでの演算子 &, |, ^ はそれぞれビット演算子 and, or, xor, を意味する。
 
a君とb君はこの木を使って以下のゲームを m 回行った。
二人は根からスタートし、子頂点を選び進むという操作を、a君から始め葉に到達するまで交互に行う。
通ったノードに書かれている操作を、通った順に適用した時の、最終的な t の値がスコアになる。
b君はできるだけスコアを小さくしたいと考えており、またa君は大きくしたいと考えている。
m回のゲームの x, y の値が与えられるので、二人が最適な選択をした時の各ゲームのスコアを出力せよ。
 

"
p01817,Twin Reverse,"要素数 n の配列 a が与えられる。ただし、a は (1, 2, ... , n) の順列である。 次の操作を 0 回以上 10,000 回以下の任意の回数行い、a を (1, 2, ..., n) へソートしたい。 整数 i (1 &le; i &le; n) を 1 つ選び、区間 a[1,\ i-1] の要素を逆順にし、区間 a[i+1,\ n] の要素を逆順にする。 ただし、区間 a[l,\ r] とは a の l, l+1, ..., r  番目の位置のことである。 a を (1, 2, ..., n) へソートできるか判定せよ。ソートできるならば、操作の例を一つ出力せよ。 

"
p01818,Leapfrog,"n 個のマスが円状に並んでいる。マスは時計回りに 1,\ 2,\  ... ,\ n と番号が振られている。各 i (1 &le;  i &le;  n&minus;1) について、i 番目のマスと i+1 番目のマスは隣り合う。また、n 番目のマスと 1 番目のマスは隣り合う。 これらのうち m 個のマスには、互いに区別できない駒が 1 個ずつ置かれている。はじめ、x_1,\ x_2,\  ... ,\ x_m 番目のマスに駒が置かれている。次の操作を何回か行い、y_1,\ y_2,\  ... ,\ y_m 番目のマスに駒が置かれているようにしたい。 時計回りまたは反時計回りに連続する 3 個のマスを選び、順に a,\ b,\ c とおく。a と b にそれぞれ駒があり c に駒がないならば、a の駒を c へ移動する。 y_1,\ y_2,\  ... ,\ y_m 番目のマスに駒が置かれているようにできるか判定せよ。できるならば、必要な操作の回数の最小値を求めよ。 

"
p01819,Where is the Boundary,"
an island country jagan in a certain planet is very long and narrow, and extends east and
west. this long country is said to consist of two major cultural areas | the eastern and the
western. regions in the east tend to have the eastern cultural features and regions in the west
tend to have the western cultural features, but, of course, the boundary between the two cultural
areas is not clear, which has been an issue.
 
you are given an assignment estimating the boundary using a given data set.
 
more precise specification of the assignment is as follows:
  jagan is divided into $n$ prefectures forming a line in the east-west direction. each
prefecture is numbered 1, 2, ..., $n$ from west to east.  each data set consists of $m$ features, which has 'e' (east) or 'w' (west) for each prefecture.
these data indicate that each prefecture has eastern or western features from $m$ different
point of views, for example, food, clothing, and so on.  in the estimation, you have to choose a cultural boundary achieving the minimal errors.
that is, you have to minimize the sum of 'w's in the eastern side and 'e's in the western
side.  in the estimation, you can choose a cultural boundary only from the boundaries between
two prefectures. 
sometimes all prefectures may be estimated to be the eastern or the western cultural area.
in these cases, to simplify, you must virtually consider that the boundary is placed between
prefecture no. 0 and no. 1 or between prefecture no. $n$ and no. $n+1$. when you get multiple
minimums, you must output the most western (least-numbered) result.
 
write a program to solve the assignment.
 

"
p01820,Vector Field,"
in 20015, jag (jagan acceleration group) has succeeded in inventing a new accelerator named
force point for an experiment of proton collision on the two-dimensional $xy$-plane. if a proton
touches a force point, it is accelerated to twice its speed and its movement direction is veered. a
proton may be veered by a force field in four ways: the positive or negative directions parallel
to the $x$- or the $y$-axis. the direction in which a proton veers is determined by the type of the
force point. a force point can accelerate a proton only once because the force point disappears
immediately after the acceleration. generating many force points on the two-dimensional plane,
which is called a 2d force point field, allows us to accelerate a proton up to a target speed by
sequentially accelerating the proton with the force points in the 2d force point filed.
 
the force point generation method is still under experiment and jag has the following technical
limitations:
  jag cannot generate a force point with a specified position and a type.   jag cannot generate a force point after putting a proton into a 2d force point field.   jag cannot move force points.   jag cannot change a protons direction except by the effect of force points.   jag can use only one proton for a 2d force point field.   jag can put a proton moving in any direction with its speed 1 at any position in a 2d
force point field. 
in order to achieve the maximum speed of a proton, the engineers at jag have to choose the
optimal initial position and the optimal initial direction of the proton so that the proton is
accelerated by as many force points as possible, after carefully observing the generated 2d
force point field.
 
by observing a generated 2d force point field, the number of the generated force points is
known to be $n$. the position ($x_i$, $y_i$) and the direction veering type $d_i$ of the $i$-th point are
also known. your task is to write a program to calculate the maximum speed of a proton by
acceleration on a given 2d force point field when jag puts a proton optimally.
 

"
p01821,Identity Function,"
you are given an integer $n$, which is greater than 1.
consider the following functions:
  $f(a) = a^n$  mod  $n$   $f_1(a) = f(a)$  $f_{k+1}(a) = f_k(f(a))$ $(k = 1,2,3,...)$ 
note that we use mod to represent the integer modulo operation. for a non-negative integer $x$
and a positive integer $y$, $x$ mod $y$ is the remainder of $x$ divided by $y$.
 
output the minimum positive integer $k$ such that $f_k(a) = a$ for all positive integers $a$ less than
$n$. if no such $k$ exists, output -1.
 

"
p01822,Enclose Points,"
there are $n$ points and $m$ segments on the $xy$-plane. each segment connects two of these
points and they don't intersect each other except at the endpoints. you are also given $q$ points
as queries. your task is to determine for each query point whether you can make a polygon that
encloses the query point using some of the given segments. note that the polygon should not
necessarily be convex.
 

"
p01823,Marching Course,"
since members of kitafuji high school brass band club succeeded in convincing their stern
coach of their playing skills, they will be able to participate in moon light festival as a marching
band. this festival is a prelude in terms of appealing their presence for the coming domestic
contest. hence, they want to attract a festival audience by their performance.
 
although this festival restricts performance time up to $p$ minutes, each team can freely determine
their performance course from a provided area. the provided area consists of $n$ checkpoints,
numbered 1 through $n$, and $m$ bidirectional roads connecting two checkpoints. kitafuji brass
band already has the information about each road: its length and the expected number of people
on its roadside. each team must start at the checkpoint 1, and return back to the checkpoint
1 in $p$ minutes. in order to show the performance ability of kitafuji brass band to a festival
audience, their stern coach would like to determine their performance course so that many people
listen their march as long as possible.
 
the coach uses ""impression degree"" to determine their best course. if they play $m$ minutes on
the road with length $d$ and the expected number $v$ of people, then the impression degree will be
$m \times v/d$. the impression degree of a course is the sum of impression degree of their performance
on the course. marching bands must move at a constant speed during marching: 1 unit length
per 1 minute. on the other hand, they can turn in the opposite direction at any time, any place
including a point on a road. the impression degree is accumulated even if they pass the same
interval two or more times.
 
your task is to write a program to determine a course with the maximum impression degree in
order to show the performance ability of kitafuji brass band to an audience as much as possible.
 

"
p01824,Surface Area of Cubes,"
taro likes a single player game ""surface area of cubes"".
 
in this game, he initially has an $a \times b \times c$ rectangular solid formed by $a \times b \times c$ unit cubes
(which are all 1 by 1 by 1 cubes). the center of each unit cube is placed at 3-dimentional
coordinates $(x, y, z)$ where $x$, $y$, $z$ are all integers ($0 \leq x \leq a-1, 0 \leq y \leq b -1, 0 \leq z \leq c - 1$).
then, $n$ distinct unit cubes are removed from the rectangular solid by the game master. after
the $n$ cubes are removed, he must precisely tell the total surface area of this object in order to
win the game.
 
note that the removing operation does not change the positions of the cubes which are not
removed. also, not only the cubes on the surface of the rectangular solid but also the cubes
at the inside can be removed. moreover, the object can be divided into multiple parts by the
removal of the cubes. notice that a player of this game also has to count up the surface areas
which are not accessible from the outside.
 
taro knows how many and which cubes were removed but this game is very difficult for him,
so he wants to win this game by cheating! you are taro's friend, and your job is to make a
program to calculate the total surface area of the object on behalf of taro when you are given
the size of the rectangular solid and the coordinates of the removed cubes.
 

"
p01825,Laser Cutter,"
ciel is going to do woodworking. ciel wants to make a cut in a wooden board using a laser
cutter.
 
to make it simple, we assume that the board is a two-dimensional plane. there are several
segments on the board along which ciel wants to cut the board. each segment has a direction
and ciel must cut those segments along their directions. those segments are connected when
you ignore the directions, that is, any two points on the segments are directly or indirectly
connected by the segments.
 
while the laser cutter is powered on, it emits a laser which hits the board at a point and cuts
the board along its trace. the laser initially points to $(x, y)$. ciel can conduct the following two
operations:
  move the laser cutter with its power on and cut (a part of) a segment along its direction,
or  move the laser cutter to any position with its power off. ciel should not necessarily cut
the whole segment at a time; she can start or stop cutting a segment at any point on the
segments. 
ciel likes to be efficient, so she wants to know the shortest route such that the laser cutter cuts
the whole parts of all the segments and then move back to the initial point. your task is to
write a program that calculates the minimum total moving distance of the laser cutter.
 

"
p01826,Live Programming,"
a famous japanese idol group, jag48, is planning the program for its next live performance.
they have $n$ different songs, $song_1$, $song_2$, ..., and $song_n$. each song has three integer param-
eters, $t_i$, $p_i$, and $f_i$: $t_i$ denotes the length of $song_i$, $p_i$ denotes the basic satisfaction points the
audience will get when $song_i$ is performed, and $f_i$ denotes the feature value of songi that affects
the audience's satisfaction. during the live performance, jag48 can perform any number (but
at least one) of the $n$ songs, unless the total length of the chosen songs exceeds the length of
the live performance $t$. they can decide the order of the songs to perform, but they cannot
perform the same song twice or more.
 
the goal of this live performance is to maximize the total satisfaction points that the audience
will get. in addition to the basic satisfaction points of each song, the difference between the
feature values of the two songs that are performed consecutively affects the total satisfaction
points. if there is no difference, the audience will feel comfortable. however, the larger the
difference will be, the more frustrated the audience will be.
 
thus, the total satisfaction points will be calculated as follows:
  if $song_x$ is the first song of the live performance, the total satisfaction points just after
$song_x$ is equal to $p_x$. 
help jag48 find a program with the maximum total satisfaction points.
 


"
p01827,Black Company,"
jag company is a sweatshop (sweatshop is called ""burakku kigyo"" in japanese), and you are
the ceo for the company.
 
you are planning to determine $n$ employees' salary as low as possible (employees are numbered
from 1 to $n$). each employee's salary amount must be a positive integer greater than zero. at
that time, you should pay attention to the employees' contribution degree. if the employee $i$'s
contribution degree $c_i$ is greater than the employee $j$'s contribution degree $c_j$ , the employee i
must get higher salary than the employee $j$'s salary. if the condition is not satisfied, employees
may complain about their salary amount.
 
however, it is not necessarily satisfied in all pairs of the employees, because each employee can
only know his/her close employees' contribution degree and salary amount. therefore, as long as
the following two conditions are satisfied, employees do not complain to you about their salary
amount.
  if the employees $i$ and $j$ are close to each other, $c_i < c_j \leftrightarrow  p_i < p_j$ must be satisfied, where
$p_i$ is the employee $i$'s salary amount.  if the employee $i$ is close to the employees $j$ and $k$, $c_j < c_k \leftrightarrow  p_j < p_k$ must be satisfied.
write a program that computes the minimum sum of all employees' salary amount such that no
employee complains about their salary. 


"
p01828,M and A,"
the ceo of the company named $s$ is planning m&amp;a with another company named $t$. m&amp;a is an abbreviation for ""mergers and acquisitions"". the ceo wants to keep the original company name $s$ through the m&amp;a on the plea that both company names are mixed into a new one.
 
the ceo insists that the mixed company name after the m&amp;a is produced as follows.
 
let $s$ be an arbitrary subsequence of $s$, and $t$ be an arbitrary subsequence of $t$. the new company name must be a string of the same length to $s$ obtained by alternatively lining up the characters in $s$ and $t$. more formally, $s_0 + t_0 + s_1 + t_1 +  ...$ or $t_0 + s_0 + t_1 + s_1 + ... $ can be used as the company name after m&amp;a. here, $s_k$ denotes the $k$-th (0-based) character of string $s$. please note that the lengths of $s$ and $t$ will be different if the length of $s$ is odd. in this case, the company name after m&amp;a is obtained by $s_0 + t_0 + ... + t_{|s|/2} + s_{|s|/2+1}$ or $t_0 + s_0 + ... + s_{|s|/2} + t_{|s|/2+1}$ ($|s|$ denotes the length of $s$ and ""/"" denotes integer division).
 
a subsequence of a string is a string which is obtained by erasing zero or more characters from the original string. for example, the strings ""abe"", ""abcde"" and """" (the empty string) are all subsequences of the string ""abcde"".
 
you are a programmer employed by the acquiring company. you are assigned a task to write a program that determines whether it is possible to make $s$, which is the original company name, by mixing the two company names.
 

"
p01829,Change a Password,"
password authentication is used in a lot of facilities. the office of jag also uses password authentication. a password is required to enter their office. a password is a string of $n$ digits '0'-'9'. this password is changed on a regular basis. taro, a staff of the security division of jag, decided to use the following rules to generate a new password from an old one.
  the new password consists of the same number $n$ of digits to the original one and each digit appears at most once in the new password. it can have a leading zero. (note that an old password may contain same digits twice or more.)  the new password maximizes the difference from the old password within constraints described above. (definition of the difference between two passwords is described below.)  if there are two or more candidates, the one which has the minimum value when it is read as an integer will be selected. 
the difference between two passwords is defined by min($|a - b|,  10^n - |a - b|$), where $a$ and $b$ are the integers represented by the two passwords. for example, the difference between ""11"" and ""42"" is 31, and the difference between ""987"" and ""012"" is 25.
 
taro would like to use a computer to calculate a new password correctly, but he is not good at programming. therefore, he asked you to write a program. your task is to write a program that generates a new password from an old password.
 

"
p01830,Delete Files,"
you are using an operating system named ""jaguntu"". jaguntu provides ""filer"", a file manager with a graphical user interface.
 
when you open a folder with filer, the name list of files in the folder is displayed on a filer window. each filename is displayed within a rectangular region, and this region is called a filename region. each filename region is aligned to the left side of the filer window. the height of each filename region is 1, and the width of each filename region is the filename length. for example, when three files ""acm.in1"", ""acm.c~"", and ""acm.c"" are stored in this order in a folder, it looks like fig. c-1 on the filer window.
 
you can delete files by taking the following steps. first, you select a rectangular region with dragging a mouse. this region is called selection region. next, you press the delete key on your keyboard. a file is deleted if and only if its filename region intersects with the selection region. after the deletion, filer shifts each filename region to the upside on the filer window not to leave any top margin on any remaining filename region. for example, if you select a region like fig. c-2, then the two files ""acm.in1"" and ""acm.c~"" are deleted, and the remaining file ""acm.c"" is displayed on the top of the filer window as fig. c-3.
 
you are opening a folder storing $n$ files with filer. since you have almost run out of disk space, you want to delete unnecessary files in the folder. your task is to write a program that calculates the minimum number of times to perform deletion operation described above.
 







"
p01831,Line Gimmick,"
you are in front of a linear gimmick of a game. it consists of $n$ panels in a row, and each of them displays a right or a left arrow.
 
you can step in this gimmick from any panel. once you get on a panel, you are forced to move following the direction of the arrow shown on the panel and the panel will be removed immediately. you keep moving in the same direction until you get on another panel, and if you reach a panel, you turn in (or keep) the direction of the arrow on the panel. the panels you passed are also removed. you repeat this procedure, and when there is no panel in your current direction, you get out of the gimmick.
 
for example, when the gimmick is the following image and you first get on the 2nd panel from the left, your moves are as follows.
  move right and remove the 2nd panel.  move left and remove the 3rd panel.  move right and remove the 1st panel.  move right and remove the 4th panel.  move left and remove the 5th panel.  get out of the gimmick. 
you are given a gimmick with $n$ panels. compute the maximum number of removed panels after you get out of the gimmick.
 

"
p01832,Shifting a Matrix,"
you are given $n \times n$ matrix $a$ initialized with $a_{i,j} = (i - 1)n + j$, where $a_{i,j}$ is the entry of the $i$-th row and the $j$-th column of $a$. note that $i$ and $j$ are 1-based.
 
you are also given an operation sequence which consists of the four types of shift operations: left, right, up, and down shifts. more precisely, these operations are defined as follows:
  left shift with $i$: circular shift of the $i$-th row to the left, i.e., setting previous $a_{i,k}$ to new $a_{i,k-1}$ for $2 \leq k \leq n$, and previous $a_{i,1}$ to new $a_{i,n}$.  right shift with $i$: circular shift of the $i$-th row to the right, i.e., setting previous $a_{i,k}$ to new $a_{i,k+1}$ for $1 \leq k \leq n - 1$, and previous $a_{i,n}$ to new $a_{i,1}$.  up shift with $j$: circular shift of the $j$-th column to the above, i.e., setting previous $a_{k,j}$ to new $a_{k-1,j}$ for $2 \leq k \leq n$, and previous $a_{1,j}$ to new $a_{n,j}$. 
an operation sequence is given as a string. you have to apply operations to a given matrix from left to right in a given string. left, right, up, and down shifts are referred as 'l', 'r', 'u', and 'd' respectively in a string, and the following number indicates the row/column to be shifted. for example, ""r25"" means we should perform right shift with 25. in addition, the notion supports repetition of operation sequences. an operation sequence surrounded by a pair of parentheses must be repeated exactly $m$ times, where $m$ is the number following the close parenthesis. for example, ""(l1r2)10"" means we should repeat exactly 10 times the set of the two operations:
left shift with 1 and right shift with 2 in this order.
 
given operation sequences are guaranteed to follow the following bnf:
 
given $n$ and an operation sequence as a string, make a program to compute the $n \times n$ matrix after operations indicated by the operation sequence.
 

"
p01833,Modern Announce Network,"
today, modern teenagers use sns to communicate with each other.
 
in a high school, $n$ students are using an sns called icpc (international community for programming contest). some pairs of these $n$ students are 'friends' on this sns, and can send messages to each other. among these $n$ students, $a$ first grade students, $b$ second grade students, and $c$ third grade students are members of the programming society. note that there may be some students who are not the members of the programming society, so $a+b +c$ can be less than $n$.
 
there are good relationships between members of the same grade in the society. thus, there is a chat group in the sns for each grade, and the society members of the same grade can communicate with each other instantly via their group chat. on the other hand, the relationships between any different grades are not so good, and there are no chat group for the entire society and the entire high school.
 
in order to broadcast a message to all the society members on the sns, the administrator of the society came up with a method: the administrator tells the message to one of the $n$ students and have them spread the message on the sns via the chat groups and their friends. (the administrator itself does not have an account for the sns.) as the members of the same grade can broadcast the message by the chat group for the grade, we can assume that if one of a grade gets the message, all other members of that grade also get the message instantly. therefore, if the message is told to at least one member of each grade, we can assume that the message is broadcasted to the all members of the society on the sns.
 
because it is bothering to communicate between friends, we want to minimize the number of communications between friends. what is the minimum number of communications between friends to broadcast a message to all the society members? who is the first person to whom the administrator should tell the message to achieve the minimum communications?
 

"
p01834,Cube Dividing,"
pablo cubarson is a well-known cubism artist. he is producing a new piece of work using a cuboid which consists of $a \times b \times c$ unit cubes. he plans to make a beautiful shape by removing $n$ units cubes from the cuboid. when he is about to begin the work, he has noticed that by the removal the cuboid may be divided into several parts disconnected to each other. it is against his aesthetics to divide a cuboid. so he wants to know how many parts are created in his plan.
 
your task is to calculate the number of connected components in the cuboid after removing the $n$ cubes. two cubes are connected if they share one face.
 

"
p01835,Donut Decoration,"
donut maker's morning is early. mr. d, who is also called mr. donuts, is an awesome donut maker. also today, he goes to his kitchen and prepares to make donuts before sunrise.
 
in a twinkling, mr. d finishes frying $n$ donuts with a practiced hand. but these donuts as they are must not be displayed in a showcase. filling cream, dipping in chocolate, topping somehow cute, colorful things, etc., several decoration tasks are needed. there are $k$ tasks numbered 1 through $k$, and each of them must be done exactly once in the order $1, 2, ..., k$ to finish the donuts as items on sale.
 
instantly, mr. d arranges the $n$ donuts in a row. he seems to intend to accomplish each decoration tasks sequentially at once. however, what in the world is he doing? mr. d, who stayed up late at yesterday night, decorates only a part of the donuts in a consecutive interval for each task. it's clearly a mistake! not only that, he does some tasks zero or several times, and the order of tasks is also disordered. the donuts which are not decorated by correct process cannot be provided as items on sale, so he should trash them.
 
fortunately, there are data recording a sequence of tasks he did. the data contain the following information: for each task, the consecutive interval $[l, r]$ of the decorated donuts and the id $x$ of the task. please write a program enumerating the number of the donuts which can be displayed in a showcase as items on sale for given recorded data.
 

"
p01836,Shortest Bridge,"
there is a city whose shape is a 1,000 $\times$ 1,000 square. the city has a big river, which flows from the north to the south and separates the city into just two parts: the west and the east.
 
recently, the city mayor has decided to build a highway from a point $s$ on the west part to a point $t$ on the east part. a highway consists of a bridge on the river, and two roads: one of the roads connects $s$ and the west end of the bridge, and the other one connects $t$ and the east end of the bridge. note that each road doesn't have to be a straight line, but the intersection length with the river must be zero.
 
in order to cut building costs, the mayor intends to build a highway satisfying the following conditions:
  since bridge will cost more than roads, at first the length of a bridge connecting the east part and the west part must be as short as possible.  under the above condition, the sum of the length of two roads is minimum. 
your task is to write a program computing the total length of a highway satisfying the above conditions.
 

"
p01837,Longest Shortest Path,"
you are given a directed graph and two nodes $s$ and $t$. the given graph may contain multiple edges between the same node pair but not self loops. each edge $e$ has its initial length $d_e$ and the cost $c_e$. you can extend an edge by paying a cost. formally, it costs $x \cdot c_e$ to change the length of an edge $e$ from $d_e$ to $d_e + x$. (note that $x$ can be a non-integer.) edges cannot be shortened.
 
your task is to maximize the length of the shortest path from node $s$ to node $t$ by lengthening some edges within cost $p$. you can assume that there is at least one path from $s$ to $t$.
 


"
p01838,Optimal Tournament,"
in 21xx, an annual programming contest ""japan algorithmist grandprix (jag)"" has been one of the most popular mind sport events. you, the chairperson of jag, are preparing this year's jag competition.
 
jag is conducted as a knockout tournament. this year, $n$ contestants will compete in jag. a tournament is represented as a binary tree having $n$ leaf nodes, to which the contestants are allocated one-to-one. in each match, two contestants compete. the winner proceeds to the next round, and the loser is eliminated from the tournament. the only contestant surviving over the other contestants is the champion. the final match corresponds to the root node of the binary tree.
 
you know the strength of each contestant, $a_1,a_2, ..., a_n$, which is represented as an integer. when two contestants compete, the one having greater strength always wins. if their strengths are the same, the winner is determined randomly. 
 
in the past jag, some audience complained that there were too many boring one-sided games. to make jag more attractive, you want to find a good tournament configuration.
 
let's define the boringness of a match and a tournament. for a match in which the $i$-th contestant and the $j$-th contestant compete, we define the boringness of the match as the difference of the strength of the two contestants, $|a_i - a_j|$. and the boringness of a tournament is defined as the sum of the boringness of all matches in the tournament.
 
your purpose is to minimize the boringness of the tournament.
 
you may consider any shape of the tournament, including unbalanced ones, under the constraint that the height of the tournament must be less than or equal to $k$. the height of the tournament is defined as the maximum number of the matches on the simple path from the root node to any of the leaf nodes of the binary tree.
 
figure k-1 shows two possible tournaments for sample input 1. the height of the left one is 2, and the height of the right one is 3.
 
write a program that calculates the minimum boringness of the tournament.
 

"
p01839,un Breathing,"
時は進んで 2060 年，共に 70 歳を迎える前田さんと後藤さんは長い付き合いの友人であり，大学時代にacm-icpcで共に戦った仲間でもある．
 
二人は今でもよく一緒にお茶を飲みつつ，競技プログラミングの話で盛り上がっている．
 
二人で一緒にお茶を飲む時，前田さんが 1 回aと言うと，その発言の後に後藤さんがちょうど 1 回unと返事をする習慣がいつのまにか出来た．
 
しかし最近後藤さんは物忘れや勘違いをすることが多く，前田さんがaと言っても，後藤さんはたまにunの返事を忘れたり，余計に返事をしたりする．
 
ついこの間も前田さんと後藤さんはお茶を飲みながら，二人のお気に入りのデータ構造について話し込んでいたようだ．
 
この時の会話の中から，aで表される前田さんの発言と，unで表される後藤さんの返事のみからなる記録が時系列で与えられたとき，後藤さんが習慣通りに反応したとみなすことが出来るかチェックしてほしい．
 
注意点として，前田さんの発言に対し，後藤さんの返事が多少遅れても，後藤さんは習慣通りに反応したとみなせる場合がある，ということが挙げられる．
例えば，前田さんが2回連続してaと言った後，後藤さんが 2 回連続してunと返事をして会話が終了した場合は，後藤さんが習慣通りの返事をしたとみなされる (sample input 2 参照)．
 また，会話が終了した時点で，前田さんがaと言った回数と，後藤さんがunと返事した回数が一致しても，後藤さんが習慣通りに返事をしたとはみなされない場合もあるので注意すること．
例えば，前田さんが1回aと言った後，後藤さんが 2 回連続してunと返事し，その後で前田さんが 1 回aと言って会話が終了した場合は，後藤さんが習慣通りの返事をしたとはみなされない (sample input 3 参照)．
 

"
p01840,Delivery to a Luxurious House,"
太郎君は豪邸で一人暮らしをしている．
勉強好きの太郎君は，今日も邸内の書斎で勉強をするつもりである．
太郎君は，書斎以外の場所では集中できないので，勉強は必ず書斎で行う．
 
ところがこの日，太郎君宛の宅配便が $n$ 件届く．$i$ ($1 \leq i \leq n$) 番目の宅配便の届く時刻は $a_i$ である．
配達員を玄関先で待たせるのは心苦しいので，太郎君は宅配便の届く時刻には玄関にいることにした．
豪邸は広いので，書斎と玄関間の移動には片道 $m$ の時間がかかる．
 
一方で，太郎君はできるだけ長い時間勉強したいと思っている．
時刻 $0$ から時刻 $t$ までで，太郎君が書斎で勉強できる時間の最大値を求めよ．
 
なお，太郎君は時刻 $0$ には書斎にいて，時刻 $m$ より早く宅配便が届くことはなく，時刻 $t$ より遅く宅配便が届くこともない．
また，太郎君が宅配便を受け取るのにかかる時間は無視できる．
 

"
p01841,san,"
あなたは親友であるみさわさんの誕生日が近いことに気づき，根付きの二分木をプレゼントすることにした．
ここで，根付きの二分木とは，以下のようなグラフ構造である．(図 1)
  各頂点には，その頂点の親と呼ばれる頂点がちょうど 1 つだけ存在し，親と辺で結ばれている．ただし，根と呼ばれる 1 つの頂点のみ，例外的に親を持たない．
  各頂点は，左の子と呼ばれる頂点をちょうど1つ持つか，あるいは持たない．左の子を持つ場合，左の子とは辺で結ばれており，左の子の親はその頂点である．
  各頂点は，右の子と呼ばれる頂点をちょうど1つ持つか，あるいは持たない．右の子を持つ場合，右の子とは辺で結ばれており，右の子の親はその頂点である．
 
図 1. 2 つの根付きの二分木とその合成の例
 
あなたは手作りの品を贈りたいと考えたので，市販の根付きの二分木を 2 つ買ってきて重ね合わせて合成することで，さらによい根付きの二分木を 1 つ作ることにした．
あなたが買ってきた 2 つの木の各頂点には非負の整数が書かれている．
みさわさんは少ない頂点数で各数値が大きいような，コストパフォーマンスがよい木が好みなので，以下の手順に沿って新しい二分木を作ることにする．
  2 つの二分木それぞれの根に書かれた整数の和を，新しい二分木の根に書く整数とする．
  どちらの二分木の根も左の子を持っている場合，それらを根とする二分木それぞれを合成した二分木を作り，新しい二分木の根の左の子とする．そうでない場合，新しい二分木の根は左の子を持たない．
  どちらの二分木の根も右の子を持っている場合，それらを根とする二分木それぞれを合成した二分木を作り，新しい二分木の根の右の子とする．そうでない場合，新しい二分木の根は右の子を持たない．
 
あなたは実際に合成する作業を行う前に，できあがる根付きの二分木がどのようになるのか確かめることにした．
買ってきた 2 つの根付きの二分木の情報が与えられるので，上記の手順に従って合成される新しい根付きの二分木を求めるプログラムを作成せよ．
 
ここで，根付きの二分木の情報は以下のような形式で文字列として表現するものとする．
 
節点が存在しない木は空文字列とする．例えば図 1 の合成されてできた新しい根付きの二分木は (()[6]())[8](((()[4]())[7]())[9]()) のように書く．
 

"
p01842,Invisible,"
あなたは友達と""インビジブル""というカードゲームを遊ぼうとしている．
このカードゲームでは，""得点カード""と""妨害カード""という2種類のカードを使う．
それぞれの得点カードには，正の値が書かれている．このカードゲームのルールは次の通りである．
  ゲームはプレイヤー1とプレイヤー2の2人のプレイヤーで行われる．ゲームはプレイヤー1のターンから始まる．
  場には，1つのスタックと2つのデッキがある．スタックは，2人のプレイヤーが置いたカードからなる．また，それぞれのプレイヤーが持つデッキはそのプレイヤーが持つ得点カードと妨害カードからなる．プレイヤーは自分，もしくは相手デッキのカードの順番をいつでも確認できる．ゲームの開始時点ではスタックには1枚もカードはない．
  自分のデッキの一番上のカードをスタックの一番上に置く．ただし，この行動は自分のデッキにカードが1枚も存在しない時には行うことができない．
  自分のターンをパスする．
 
  自分がスタックにおいた得点カードである．
  相手が置いたどの妨害カードよりも上にある (スタック中に相手の妨害カードが存在しないとき，プレイヤーは自分がスタックに置いたすべてのカードを得る)．
 
  スタックのカードをすべて取り除く．
 
 
もしスタックにカードがない状態で両プレイヤーが連続してパスした場合，ゲームを終了する．
各プレイヤーの最終的なスコアは，各プレイヤーが得た得点カードに書かれた数の総和である．
 
各プレイヤーは，自分のスコアから相手のスコアを引いた値を最大化するために最適な行動をとる．
あなたの仕事は，与えられた各プレイヤーのデッキに対し，各プレイヤーが最適に行動したときのプレイヤー1のスコアとプレイヤー2のスコアの差を計算することである．
 

"
p01843,Campaign,"
あなたは次回の選挙の候補者であるx氏の支援者である．
x氏は駅前での街頭演説を予定しており，できるだけ多くの有権者に見てもらえる場所で演説しようと考えている．
 
駅前は $n$ 個の障害物と $m$ 人の有権者が存在している二次元平面として与えられる．
各障害物は多角形であらわされ，その多角形の内側の領域が障害物となる．多角形の辺上は障害物に含まれない．
また，有権者は平面上の点としてあらわされる．
ある有権者の位置とx氏の位置を結ぶ線分上に障害物が存在しないとき，その有権者はx氏を見ることができる．
 
あなたの仕事は，駅前の障害物と有権者の情報をもとに，もっとも多くの有権者に見てもらえる地点を探すことだ．
最大で何人の有権者から見えるように演説することができるかを求めよ．
 


"
p01844,Land Inheritance,"ある $n$ 人の兄弟は親の遺産相続の話し合いをしていた．
彼らの親の残した莫大な遺産の中には広大な土地も含まれていた．
その土地は南北に $h$ km, 東西に $w$ km に広がる長方形の形をしている．
この土地は 1 km 四方の区画単位で管理されており，
土地の北端から $i$ 〜 $i+1$ km かつ西端から $j$ 〜 $j+1$ km の範囲にある 1 km 四方の区画を区画 $(i, j)$ と呼ぶ．
（$i$, $j$ は $0 \leq i < h$, $0 \leq j < w$ を満たす整数である．）
土地の価格は区画ごとに決まっており，区画 $(i, j)$ の価格は $a_{i, j}$ で表される．
 
兄弟は次のように土地を分けて相続することにした．
  $n$ 人の兄弟それぞれが区画をいくつか選び相続する．
  各兄弟が相続する土地が 1 つの長方形を成すように区画を選ばなければならない．
  $n$ 人の兄弟が相続する土地は重なってはならない．
  誰も相続しない区画があってもよい．誰も相続しない区画は放棄される．
 
ある人が相続する土地の範囲に含まれる区画の価格の和をその土地の価格と呼ぶ．
兄弟は，各々が相続する土地の価格がなるべく公平になるように土地を分けたい．
あなたの仕事は， $n$ 人の中で相続する土地の価格が
最も低い人の土地の価格を最大にするような土地の分け方を考えることである．
そのように土地を分けた時の，相続する土地の価格が最も低い人の土地の価格を答えるプログラムを作成せよ．
 


"
p01845,Curry Making,"acm-icpc国内予選が近づいてきたので，練習に追い込みをかけたいと思っていたあなたは，友人宅で行われる競技プログラミング合宿に参加することにした．
参加者のこだわりで，食事は自炊することになった．
 合宿初日の夜，参加者達はその日の練習を終え，夕食の準備に取り掛かり始めた．
競技プログラミングだけでなく，自炊でも「プロ」と友人によく言われるあなたは，担当分のメニューをあっという間に作り終えてしまい，暇を持て余してしまった．
そこで，他の人が担当していたカレー作りを手伝うことにした．
 今，w0 [l] の水に r0 [g] のルウを混ぜた作りかけのカレーがある．
今回使うルウは 1 種類で，1 個あたり r [g] である．ルウは十分な量の備蓄がある．
あなたはこのルウを使う場合，濃度が c [g/l] のカレーが最も美味しいと考えているので，このカレーにいくつかのルウと水を適切に加え，濃度を c [g/l] にしたいと考えている．
ここで，ルウ r0 [g] が水 w0 [l] に溶けているカレーの濃度は r0 / w0 [g/l] であり，このカレーに r [g] のルウを x 個と水 y [l] を追加すると，その濃度は (r0 + x r) / (w0 + y) [g/l] になる．
ルウは大量にあるものの，使い過ぎるのは良くないと考えたあなたは，追加するルウの個数を出来る限り少なくして濃度 c [g/l] のカレーを作ることにした．
 濃度 r0/w0 [g/l] のカレーに，ルウか水のいずれか，またはその両方を適切に加えることによって濃度 c [g/l] のカレーを作るとき，追加すべきルウの個数 x の最小値を求めて欲しい．
 ただし，今回のカレー作りについては，以下の事柄に注意すること．
 追加するルウの個数 x の値は 0 以上の整数でなければならない．つまり，ルウを 1/3 個分だけ追加する，といったことは出来ない．
 追加する水の体積 y の値は 0 以上の実数として良く，整数である必要はない．
 ルウか水のいずれか，またはその両方を追加しなくても濃度 c のカレーを作ることが出来る場合もある．
 ルウや水は十分な量を確保しているので，ルウや水が足りず濃度 c のカレーを作ることが出来ない，という事態は起こらないとして良い．
 


"
p01846,jfen,"h &times; w の盤面で遊ぶ一人用ゲームがある．このゲームはそれぞれのセルに 0 か 1 個のボールがあるのでそれを移動させるゲームである．あなたはこのゲームで遊んでいたが，ボールは非常に丸いため，セルからセルへ正確にボールを移動させるのが難しいことに気づいた．そこであなたは，命令通りにボールを動かしてくれるロボットを作ることにした．ここで，セルを表す表記として (y, x) という表記を用いる．これは y 行目の x 列目のセルを表す．
 ロボットへの命令は 4 つの整数 a, b, c, d で与えられる．これは (a, b) にあるボールを (c, d) に移動することを表す．このとき，(a, b) にボールが存在し， (c, d) にボールが存在しないことが保証される．
 盤面の状態は，""jfen"" と呼ばれる次の記法で表される．
 この記法は盤面の各行を表すデータをスラッシュ区切りで連結したものである．各行のデータは文字列で表され，1 列目からw列目にあるセルの状態を左から順に記述している．この文字列は数字と文字 'b' で表され，数字が表す整数は連続した空白のセル数を，'b' はボールが存在するセルを表している．ここで，各行のデータで整数が連続してはならない．また，各行のデータに書かれている整数の総和と 'b' の個数の和は必ず w になる．
 例として，次のような盤面状態を考える．空白のセルを '.' で表し，ボールが存在するセルを 'b' で表現している．この例の i 行目の左から j 文字目は盤面の i 行目の j 列目のセルの状態を表す．
 上記の盤面を jfen で表記すると次のようになる．
 ロボットに現在の盤面の状態と 1 つのボールを動かす命令を与えた時に，ロボットがボールを動かした後の盤面を出力するプログラムを作成せよ．このとき，出力する盤面は jfen 記法で出力せよ．
 


"
p01847,Curtain,"もうすぐ夏がやってくる．あなたは夏に向けて部屋の模様替えをすることにした．今年の夏はとても日差しが強いことが予想されており，まぶしいのが苦手なあなたには辛い季節になりそうだ．そこで，あなたは部屋の明るさを調節するために，部屋の窓にカーテンを取り付けようと考えた．
 取り付けるカーテンは長方形であり，辺が地面に対して垂直，もしくは平行であるように取り付ける．また，あなたの部屋の窓は非常に特殊な形をしており，各辺が地面に平行または垂直であるような n 角形で表される．そのため，カーテンを取り付けたときにカーテンに覆われていない窓の面積がどのくらいになるのかを求めるのは難しい．部屋の明るさを調節するためにも，カーテンを取り付ける位置を決めた時にどのくらい窓が覆えるかを知ることは重要である．そこで，あなたは窓とカーテンの設置位置と形状が与えられたときに，カーテンに覆われていない窓の面積を求めるプログラムを作ることにした．
 例として次のような窓とカーテンの設置の仕方を考える．この場合はカーテンに隠れていない窓の面積は 8 となる．この例はサンプル入力の 3 ケース目に対応する．
 






"
p01848,Early Morning Work at Summer Camp,"jag夏合宿の朝は早い．
正確にはそこまで早くないが，早いと感じる参加者が多いという．
 例年合宿の会場となる施設では，退去時に参加者がシーツの回収や掃除をしなければならない．
1 つの部屋でも退去が遅れると，来年以降の施設の利用に関わるため，参加者は一人たりとも寝坊してはならない．
 そうは言っても皆人間，寝坊することもある．
しかし，起きた人が連絡先を知っている人にモーニングコールをすることで，一人も寝坊しないよう努めることができるはずだ．
 jag夏合宿の運営を任されたあなたは，寝坊を絶対に防ぐ手を打つための前準備として，どのくらいの確率で全員がきちんと起きられるのかを調べることにした．
準備としてまず，各参加者の寝坊する確率と，各々が連絡先を知っている人のリストを入手した．
ここで，部屋は個室であるため，各々が寝坊するか否かは，他の参加者が寝坊するか否かとは独立である．
起きた人は必ずすべての知っている連絡先にモーニングコールをすること，また，モーニングコールを受けた人は必ず起きることを仮定するとき，全員がきちんと起きられる確率をこれらの情報から計算せよ．
 


"
p01849,The Most Powerful Bed,"あなたは新生活に備え，おふとんを n 枚買った．
i 番目のおふとんは si のぬくもり供給力をもつ．
これから m 日間の気温の予測から，j 日目には dj のぬくもり需要が予想される．
ぬくもりが足りなくても多すぎても快適さが損なわれるので，j 日目に掛けているおふとんのぬくもり供給力の総和と dj の差の絶対値を j 日目の不快度と呼ぶことにする．
このm 日分の不快度の合計ができるだけ少なくなるようにしたい．
 ところで，あなたの部屋は残念ながらとても狭く，ベッドと押入れしかない．
そのため，ベッドにおふとんを 1 枚増やすには，そのとき押入れの一番上にあるおふとんをベッドの一番上に乗せるしかない．
逆に，ベッドのおふとんを 1 枚減らすには，そのときベッドの一番上にあるおふとんを押入れの一番上に置くしかない．
また，1 日に動かせるおふとんの枚数に制限は無いが，一度に 1 枚ずつしか動かすことができない．
 さて，あなたはこれから買ってきたおふとんを押入れにしまう予定である．
このときに限り，おふとんを好きな順序で押入れにしまうことができる．
どのようにおふとんを押入れに収納し，その後，日々どのようにおふとんを出し入れすれば，快適に毎日を過ごせるだろうか．
m 日間の不快度の和を最小化するとき，その和の値を求めよ．
なお，一度も使われないおふとんがあってもよく，おふとんを一枚も使わない日があってもよい．
 



"
p01850,Hyakunin Isshu,"百人一首は日本の伝統的なゲームである． このゲームでは n 枚のカードが用いられ，それぞれのカードには1つの文字列が書かれている．細かいルールは省略するが， a君は n 枚のカードに書かれている文字列を何らかの順序でそれぞれちょうど1回ずつ読むことになった．
 百人一首ではその接頭辞が非常に重要である．百人一首で使用される文字列として接頭辞は似ている言葉が多く， 連続して似たような文字列を読むとa君も混乱してしまう． そこでa君は，連続する二つのカードの文字列の接頭辞ができるだけ異なるように，カードを並べ替えようと考えた．
 a君の目標は，「山札の読みやすさ」と呼ばれる指標を最小化するような山札を求めることである．ここで山札とは，この百人一首で読まれる n 枚のカードを並べ替えたものを指す．山札の読みやすさとは，山札内にある隣接したカードの類似度の総和を言う．2 枚のカードの類似度はそれらに書かれた文字列どうしの最長共通接頭辞の長さとして定義される．なお，文字列 t と u の最長共通接頭辞とは，t と u 両方の接頭辞であるような文字列のうち，最長のものを指す．
 例えば，2 枚のカードに書かれた文字列がそれぞれ ""jag"" と ""japan"" であれば，これらのカードの類似度は 2 である．一方，""wan"" と ""nyan"" であれば類似度は 0 である．
 ところで，「山札の読みやすさ」が最小となる山札は複数存在するかもしれない．a君は，最小解としてありうる山札のうち，辞書順最小の山札を求めたい．ここで，山札 p と q について p が辞書順で小さいとは，ある正の整数 i が存在して，1 番目から i-1 番目のカードまではそれぞれ同一のカードであり，かつ i 番目のカードの文字列は辞書順において山札 p のカードのほうが小さいことを言う．
 あなたの仕事は，「山札の読みやすさ」を最小にするような山札の中で，辞書順最小となるものを求めることである．
 


"
p01851,Baseball,"先日，あなたの競技プログラミング仲間であるoさんは野球観戦に出かけた．
観戦した試合は，チームxとチームyの合計 4 試合の対戦だったが，一方的な展開となり，全試合でチームxが勝利した．
しかも，4 試合を通じたxの合計得点は 33 点だったのに対し，yの合計得点はたったの 4 点だった．
 あまりに一方的な内容のため，試合内容への興味が薄れてしまったoさんは，試合を観戦している間も競技プログラミングの作問ネタをついつい考えてしまっていた．
その甲斐もあって，oさんは以下のような問題を思いついた．
 野球チームxとyが対戦し，xが勝った試合数，yが勝った試合数，引き分けの試合数がそれぞれ a, b, c 試合だったとする．
また，全 a+b+c 試合を通じたx，yの総得点は，それぞれ sx 点，sy 点だったとする．得点は全て 0 以上の整数である．
xとyが合計 a+b+c 試合対戦したとき，全試合の結果としてこのような条件を満たす各試合のスコアの並びは何通り有り得るだろうか？
 ここで，ある試合で勝利する条件は，その試合における得点が，相手チームの得点よりも多いことであり，等しい場合は引き分けとなる．
 また，各試合のスコアの並びを求める際，対戦した全試合の結果を比べた時，xとyの得点の組み合わせが同じでも，その順序が異なれば区別する必要がある．
例えば，xとyが 2 試合対戦した結果，共に 1 勝ずつし，引き分けが無く，xとyの総得点が共に 1 点ずつだったとする．
この場合，各試合におけるx，yの得点を (xの得点) - (yの得点) という表記で表し，合計 2 試合の結果を並べると，以下の 2 通りが与えられた条件を満たす．
  1 - 0, 0 - 1
  0 - 1, 1 - 0
 試合の順序を区別して数えるので，これらは区別される．
 あなたにはこの答えを求めるプログラムを作って欲しい．
ただし，求める数はとても大きい数になり得るため，求める数を 1,000,000,007 で割った余りを答えるようにして欲しい．
 


"
p01852,Finger Counting,"肉西くんは指の数を増やしたり減らしたりできる．肉西くんの前には n 個のまんじゅうがある．肉西くんは指を折ってまんじゅうの個数を数えようとしている．肉西くんの指が取れる形は折れているか折れていないかの 2 つしか無い．肉西くんは 2 進数を理解している．肉西くんは各指に 2 進数の桁を対応させて数を数えることが出来る．肉西くんは対数を理解していない．肉西くんのかわりにまんじゅうを数え上げるのに必要な指の本数の最小値を求めよ． 整数である 0 &le; n &le; 1018 答えを 1 行に出力し，最後に改行を出力せよ． 
サンプル
サンプル入力1

0


サンプル出力1

0


サンプル入力2

4


サンプル出力2

3


サンプル入力3

31


サンプル出力3

5


サンプル入力4

36028797018963968


サンプル出力4

56

"
p01853,Lie with Mean Value,"r 大学情報理工学部 1 回生の学生 n 人が， プログラミング演習 1 という講義の期末試験を受験する． 試験は m 点満点である．つまり，1 人の学生の取りうる点数は 0 以上 m 以下の整数である． 担当の先生は意地が悪いので，平均値と中央値の差が最大になるような点数分布が気になっている．そのような点数の取り方を 1 つ出力せよ． 注 : 平均値とは点数の和を n で割ったものであり，中央値とは点数を昇順に並べたとき，n が奇数なら前から (n+1)/2 番目 (1 &minus; indexed) の点数， 偶数なら前から n/2 番目と n/2+1 番目の点数を足して 2 で割った点数である． 整数である 1 &le; n &le; 100 1 &le; m &le; 100 答えの n 個の点数の列をスペース区切りで 1 行に出力し， 最後に改行を出力せよ．複数通りある場合はどれを出力しても良い． 100 \ 100 \ 0 等も正答である． 


サンプル入力2

1 100


サンプル出力2

50




  "
p01854,Pots,"ここに n 個の不思議な形の壺がある． i 番目の壺は k_i 個の直円柱を下から順に鉛直に繋げた形状である． 繋がっている順番は変えることができない． a 氏は体積 m の水を持っている． この水をそれぞれの壺に好きな量ずつに分けて注ぐ． 水が全く入っていない壺が存在しても構わない． また，全ての壺が水で満たされたとき，それ以上水を注ぐ事はできない．それぞれの壺の水面の高さの総和の最大値を求めよ． 1 行目に n, m が， 1+i 行目には i 番目の壺の情報が入力される． k_i は直円柱の数であり，s_{ij}, h_{ij} はそれぞれ壺を構成する下から j 番目の直円柱の底面積と高さである． 整数である 1 &le; n &le; 200 1 &le; m &le; 200 1 &le; k_i &le; 20 1 &le; s_{ij} &le; 20 1 &le; h_{ij} &le; 20 答えを 1 行で出力せよ． 0.00001 以下の絶対誤差を含んでも良い． 
サンプル
サンプル入力1

2 15
2 3 3 7 2
2 7 1 1 4


サンプル出力1

6.33333333


サンプル入力2

2 14
1 2 4
2 5 2 1 4


サンプル出力2

6


サンプル 1, 2 の入出力を図示すると次のようになる．





サンプル入力3

2 25
4 8 9 1 9 6 5 2 8
4 1 7 4 4 1 6 4 3


サンプル出力3

13



 "
p01855,Checkered Pattern,"縦横の長さが h, w の長方形があり， 内部には一辺の長さが 1 の正方形のマスが敷き詰められている． 最も左上のマスを (0,0) とし， (0,0) の i 個下で j 個右のマスを (i,j) のように表すことにすると， (i,j) は i+j が偶数なら赤色に，奇数なら青色に塗られている． 今，(0,0) の左上の頂点と (h &minus; 1,w &minus; 1) の右下の頂点を線分で結んだ． この線分が通る赤色の部分の長さを a, 青色の部分の長さを b とおいたとき， 比 a : b は整数比となる．a : b を最も簡単にして(互いに素な整数で)表せ． 1 つのファイルに t 個の入力が含まれる． 1 行目に t， 1+i 行目に t 番目の入力における縦横の長さ h_i, w_i が入力される． 整数である 1 &le; t &le; 1000 1 &le; h_i, w_i &le; 109 各ケースに対する答えを 1 でスペース区切りで出力せよ． 全体で t 行にわたる． 
サンプル
サンプル入力1

3
2 3
3 3
4 3


サンプル出力1

1 1
1 0
1 1






  "
p01856,Typhoon,"南北方向に h ，東西方向に w の大きさの町がある． 町には一辺の長さが 1 の正方形の区画に隙間なく整備されており，全ての区画に 1 軒ずつ家が建っている． この町のある区画の上空で台風が発生し，被害を与えた後，ある区画の上空で温帯低気圧に変化した． 変化した後は被害を与えない． 下図のように，台風は高さ 3, 幅 3 の正方形であり， ★のついたマスを中心と呼ぶことにする．台風は 8 近傍に区画単位で移動する． つまり，台風の中心は辺または頂点を共有する区画(現在の区画を含む)に移るように，全体を伴って移動する． ただし，町の外に台風がはみ出ることはなく，

台風の中心は，下の図の網掛けのように，北から 0 番目と h &minus; 1 番目，西から 0 番目と w &minus; 1 番目の区間は通らないように移動する．
 家は台風が一度上空に来ると，以下のように被害の程度が変化する． 損壊ナシ → 一部損壊 → 半壊 → 全壊 → 跡形ナシ だが，幸い跡形ナシとなった家は無かったようだ． 各家の被害の状況が与えられるので，台風が発生した地点と，温帯低気圧に変化した地点を求めよ． ただし，発生した区画を北から s_i 番目，西から s_j 番目， 温帯低気圧に変化した区画を北から t_i 番目，西から t_j 番目とすると， 2 つの地点は 10000 t_i + t_j &le; 10000 s_i + s_j を満たすように定まる． d_{ij} は北から i 番目， 西から j 番目の家の被害の程度を以下のように表す整数である． 0 : 損壊ナシ 1 : 一部損壊 2 : 半壊 3 : 全壊 整数である 入力は答えが一意に定まるようなもののみ与えられる 3 &le; h,w &le; 500 0 &le; d_{ij} &le; 3 答えを以下のように 1 行で出力せよ． 

s_i \ s_j \ t_i \ t_j



サンプル
サンプル入力1

7 5
0 0 0 0 0
0 1 1 1 0
0 2 2 2 0
0 3 3 3 0
0 2 2 2 0
0 1 1 1 0
0 0 0 0 0


サンプル出力1

4 2 2 2


サンプル入力2

6 6
0 0 0 1 1 1
0 0 0 2 2 2
0 0 1 3 3 2
1 2 3 3 2 1
1 2 3 2 1 0
1 2 2 1 0 0


サンプル出力2

4 1 1 4


サンプル入力3

4 4
2 2 2 0
2 2 2 0
2 2 2 0
0 0 0 0


サンプル出力3

1 1 1 1




 "
p01857,Eggs,"1 か月前のことである． 小学生の肉西君は夏休みの宿題をやっていなかった． そこで自由研究は家にあった卵の強度を調べることにした． この研究において，卵を高さ h から落としても割れず， 高さ h+1 から落とすと割れるとき， その卵の強度は h であると定義する． ここで h は非負整数であり，非負整数以外の高さから落とすことは無いとする． 肉西くんは卵を 1 つ落下させる実験を行う． 実験の結果は割れるか割れないかのいずれかである． また，卵の強度は全て同じである．つまり，どの卵を用いても実験の結果は同じである． 肉西くんは高さ 1 から n までの整数の高さの段からなる階段と， 強度が不明な e 個の卵を用意した． 高さ 0 では割れず，高さ n+1 では割れるということは既にわかっている． 肉西くんは各段と同じ高さから地面に向かって落とし，その度に卵が割れたか割れなかったかを調べる． このとき割れた卵は二度と使えないが，割れなかった場合は再利用できる． この実験を卵が残っている限り続けることができる． 何度か実験を繰り返し，上に定めた h が求まったとき，卵の強度が求まったとする． 夏休み終了まで後数日しか無い． 最小の回数で実験を終わらせないと間に合わない． そこで，肉西くんの兄であるあなたは，卵の強度を知るために 落とす回数が少なくなるように最適な方法をとった場合に 必要な実験回数の最大値を求めるプログラムを書くことにした． 1 つのファイルに複数のテストケースが含まれる． 1 行目に整数 t が与えられる． 1+i 行目に i 番目のテストケース e_i, n_i が与えられる 整数である 1 &le; t &le; 1000 1 &le; n_i &le; 10^{18} 1 &le; e_i &le; 50 出力が 50 を超えるような入力は含まれない i 番目のテストケースに対する答えを i 行目に出力せよ． 全体で t 行にわたる． 卵が 1 つしかないため 1 段目から順に落としていくしかない 
 まず 2 段目から落とす 2 段目から落として割れた場合 1 段目から落とす 2 段目から落として割れなかった場合 4 段目から落とす 1 段目から落として割れた場合実験終了 1 段目から落として割れなかった場合実験終了 4 段目から落として割れた場合 3 段目から落とす 4 段目から落として割れなかった場合 5 段目から落とす 3 段目から落として割れた場合実験終了 3 段目から落として割れなかった場合実験終了 5 段目から落として割れた場合実験終了 5 段目から落として割れなかった場合実験終了 
 1 段目から落として実験終了 
 


  "
p01858,Sendame,"中島「磯野〜，あれやろうぜ！」 磯野「あれって何だよ，中島」 中島「ほら，あれだよ，あれ．なぜか文字で表さなきゃならないから，説明しづらいな〜」 磯野「いや，図や写真も入れられるみたいだぞ？」 中島「本当だ！」 磯野「で，何をやるんだ？」 中島「ほら，リズムに乗って，手を2回叩いた後に，防御，溜め，攻撃のポーズを取るやつ」 磯野「う〜ん，イマイチわからないな…」 中島「2回手を叩いた後に，例えば防御だったら」 中島「で，溜めだったら」 中島「攻撃だったら」 中島「ってやるやつ，知ってるだろ？」 磯野「ああ！写真が入ると劇的に分かりやすくなるな！」 中島「これぞ文明の進歩だな！」 (それから悠久の時が経った) 花沢「い゛そ゛の゛く゛〜゛ん゛な゛か゛じ゛ま゛く゛〜゛ん゛」 二人「(パチパチ…パチパチ…パチパチ…)」 花沢「アンタたち，まさか寝ながらあれやってるの…！？」 花沢「今勝負ついたじゃない…磯野くん，今あなた勝ったわよ？」 磯野「……花沢さん来てたんだ…中島もう一度やるぞ…zzz」 中島「(こくり)」 二人「(パチパチ…パチパチ…)」 花沢「もう…ここに，あれの勝敗判定ロボット置いておくから…」 そうして花沢さんは去って行った． ということがあるかもしれないので，あれの勝敗判定プログラムを書いてください． 

"
p01859,Match Peas War,"中島「うぅっ・・・」 磯野「中島，大丈夫か？」 中島「・・・なんだか嫌な夢を見ていた気がするよ」 磯野「どんな夢だい？」 中島「無限に遊ぶ夢」 磯野「意味わからん．まぁいいや，中島，あれやろうぜ！」 中島「あれってまさか，あれじゃないよな・・・」 磯野「あれだよ，あれ」 中島「おっ，いいじゃないか！やろうやろう」 磯野「それじゃあ，まずはじゃんけんだな！」 なにやら，公園で2人の子供が遊んでいるようです．懐かしさを感じますね．ところで，あなたは『マッチ・グリーンピース・戦争』などと呼ばれる手遊びを知っていますか？その名称にピンとこなかったとしても，きっと，子供時代に幾度となく遊んだことがあるでしょう． ここでは，『マッチ・グリーンピース・戦争』のルールを簡略化した手遊びを考え，『あれ』と名付けます．『あれ』は次のような2人プレイの遊びです． 磯野「よーし，僕からだね！」 おや？どうやら，磯野君が先手になったようですね．2人の遊びの行く末を見守ってみましょう． 磯野「じゃあ僕は，右手に2本，左手に1本ではじめるよ！」 中島「それなら僕は，右手に2本，左手に2本でいくよ！」 ちょっと待て，なんだそのルールは&minus; どうやら，磯野君たちの間では，遊び開始時に各手に立っている指の本数を1 〜 4本のうち自由に決められるようです．ローカルルールってやつですね． 『あれ』のような類の遊びは，先手後手でどちらが必勝なのかを簡単に調べることができます．しかし，『あれ』に磯野君たちのローカルルールを取り入れると，先手後手の勝敗が変わってきそうです．とても気になりますね．皆さんも興味がおありなのでは？もしそうならば，実際に調査してみましょう． 磯野君と中島君がローカルルールを取り入れた『あれ』で遊ぶとします．磯野君が先手と仮定して，磯野君の左手にはl_i本，右手にはr_i本の指が，中島君の左手にはl_n本，右手にはr_n本の指が立っているとします．2人とも最適な行動を選択する場合，どちらが勝つかを判定してください． 


"
p01860,Shopping,"磯野の姉であるサゾエさんは，『あれ』や『あれ』で遊んでいる磯野と中島のために夕食を作ってあげることにしました．あいにく，冷蔵庫には食材が残り僅かしか無く，サゾエさんは買い出しに行くことにしました．幾つか食材を買おうとしているサゾエさんですが，大変陽気であるため一度に一品のみレジで会計してしまいます．このままでは遊んでいた磯野と中島が買い物を終える前に帰ってきてしまい，夕食を準備することが出来ないかもしれません．そこで，サゾエさんの友人であるあなたは，サゾエさんのためにサゾエさんの買い物にかかる最小の時間を求めてください． 

"
p01861,Myampus Sequence,"
みゃんぱすー．
ウチ，田舎の分校に通う小学一年生なん．
 
あんなー，今日の授業はプログラミングだったん．
みんな苦戦してたけど，まっつんのにぃにぃ，凄い勢いでタイピングしてたん．
さすが中三なんなー．
 
にぃにぃ，プログラムが完成してどこか行ってしまったん．
そんで，画面見たら，色んな数列が出力されてたん．
だんだん出力と同じような数列を書きたくなったん，ウチ，出力テキストに同じような数列をいくつも書き加えてたん．
そしたら，にぃにぃが戻ってきて，すごい怒られたん．
ウチ，にぃにぃの声初めて聞いたから，びっくりしたん．
 
でな，にぃにぃに謝ってプログラムを見せてもらったん．
プログラムが出力してたん，「みゃんぱすーれつ」いうん．
数列がみゃんぱすーれつか調べて，にぃにぃの機嫌を直したいん．
でも，ウチ，プログラミング初めてなん，教えてほしいのん．
 

"
p01862,How To Make Stars,"北ノ木坂学院1年生の星屑鈴だニャ！鈴はお星様がだ〜い好き！夜はいつも幼馴染の花代ちんと一緒に，こっそりと学校の屋上でお星様を見てるんだ！だけど，今日のお天気はあいにくの雨・・・．これじゃ，お星様を見ることができないニャ！花代ちんどうしよう〜！ 鈴「・・・ああっ！いいこと思い付いたニャ！色んなお星様を見れるような，おっきなプラネタリウムを作るニャ！花代ちん！さっそくやるニャ！」 花代「えっ，えぇっ，鈴ちゃんちょっと待って！プラネタリウムの作り方なんて，私知らないよ！」 鈴「大丈夫ニャ！2人で力を合わせればきっとできるよ！ニャニャニャニャ〜！」 花代「だ，ダレカタスケテ〜！」 

"
p01863,Miko Mi String,"みっこみっこみ〜！みんなのアイドル，田澤みこみこ！今日は〜，みこと一緒に〜，文字列アルゴリズムの練習，しよ☆ みこのとっておきのキャラ作り合言葉，「みっこみっこみ〜」は，ローマ字にすると “mikomikomi” になるみこ！つまり，a=“mi”, b=“ko” とすると，ababaの形で書けるってことなの！こんな風に，適切にaとbを決めるとababaの形に分解できる文字列のことを「みこみー文字列」って言うわ！文字列の名前にまでなっちゃうなんて，みこはみんなの人気者みこね！ みんなでみこみー文字列をも〜っと使っていくために，与えられた文字列がみこみー文字列かどうか判定するプログラムを作ることにしたんだけど，みこ，fizzbuzzより長いプログラムなんて書けな〜い！だから〜，みこのために〜，みこみー文字列を判定するプログラムを書いて欲しいな☆ ……アンタ，いま寒いって言った！？ 

"
p01864,Travel Support,"私，香坂穂乃果16歳！学生アイドルをやっています！！ 学生アイドルの良さをみんなに伝えるためのライブをやろうと，たくさんの学生アイドルの人たちを呼んでアキバスタジアムでライブをします． だけど，遠くから来るライブ参加者もいてとっても電車賃がかかるの．だからu’sのメンバーでバイトをして，ライブ参加者たちに電車賃を渡すことにしたんだ！ただ，バイト代が入るのが遅いから電車賃を渡すのがライブ参加者の出発に間に合わないことがあったり，バイト代が足りなくて電車賃の全額は渡せないことがあるんだ．そんな時は，ライブ参加者に足りない分のお金を事前に用意してもらうのだけど，どのくらい用意して貰えばいいんだろう？ そこで，あなたにライブ参加者が用意する必要のある最小の金額を求めて欲しいんだ！ おねがい真衣ちゃん，電車賃貸して？ 

"
p01865,Steelyard,"
情太くんは長さ $2l$ の棒を使って下の図のような秤を作った．
 
棒には等間隔に $2l+1$ 個の穴があけられ，左から順に $-l, -l+1, \cdots, -1, 0, 1, \cdots, l-1, l$ という番号が付けられている．そして $0$ 番の穴の場所を天井から紐で吊るしてある．
 
情太くんは，秤の穴に $n$ 個のおもりを吊るした．$i$ 番目のおもりを吊るした穴の番号は $x_i$ で，おもりの重さは $w_i$ である．おもりが $1$ つも吊るされない穴や，複数のおもりが吊るされる穴も存在しうる．
 
情太くんが吊るしたおもりによっては，秤が傾いているかもしれない．姉の立子さんは，追加でいくつかの重りを吊るすことで秤を水平にしたい (おもりの座標と重さ積の総和が $0$ になるとき秤は水平になる)．条件を満たすおもりの吊るし方を $1$ つ出力しなさい．候補が複数ある場合はどれを出力してもよい．
 

"
p01866,Hamming Distance,"
leading-zeros を含めた桁数が $n$ の，符号なし $2$ 進数表記された整数 $x$ がある．
$x$ とのハミング距離が $d$ となる $n$ 桁で $2$ 進数表記できる非負整数のうち，
値が最大のものを出力せよ．
 
$2$ 進数表記された整数間のハミング距離とは，
$2$ つの数において値が異なる桁の数である．例えば $000$ と $110$ のハミング距離は $2$ である．
 

"
p01867,AddMul,"
情太くんは a から z までの文字と，
足し算の記号 + しか知りません．
情太くんには姉の立子さんがいます．
立子さんはそれに加えて，掛け算 * と括弧 (，)，
そして 1 以上 9 以下の整数 (数字) も知っています．
しかし，括弧を多重に使用すること，括弧の中で掛け算を行うことは知りません．
 
例えば，次のような数式があったとします．
 a+a+a a+4*(b+c) a+3*(b+2*(c+d)) a-b a/b 11*a 
このうち，情太くんは 1. のみ，立子さんは 1. と 2. を書くことができます．
3. から 6. は二人とも書くことができません．
 
    ある日，情太くんは文字列としての長さが $n$ の多項式 $s$ を書きました．
    ショートコーダーの立子さんは，掛け算と括弧と 1 以上 9
    以下の整数を使って，$s$ を文字列としてより短い恒等な多項式 $t$ に書きなおしてやりたいと思っています．
    しかし，そう簡単ではないようです．
 
さて，立子さんのかわりに，文字列として最も短い $t$ を作り，
その長さを出力するプログラムを書いてください．
 

"
p01868,Scanner,"
ここに $n$ 枚の紙がある。あなたは $3$ 台のスキャナーを並列に用いることで、
全ての紙をスキャンしたいと考えている。それぞれの紙はスキャンにかかる時間が決まっており、
$i$ 番目の紙をスキャンするのにかかる時間は $t_i$ である。
紙をスキャンする順番は任意であるが、$1$ 台のスキャナーで複数の紙を同時にスキャンすることはできない。
 
全ての紙のスキャンが終了し、スキャンを行っているスキャナーがなくなるまでにかかる時間を最小化しなさい。
 

"
p01869,28,"
トランプゲームの大富豪において，ランクが $2$, $8$ のカードは強力です．
そこで，$10$ 進数表記で数字の $2$, $8$ のみからなる整数を良い整数と呼ぶことにします．
良い整数を小さいものから列挙すると $2, 8, 22, 28, 82, 88, \cdots$ となります．
 
$n$ を正の整数とします．$n$ が良い整数の積の形で表現できるとき，
最大でいくつの積になるか求めてください．できないなら $-1$ と出力してください．
 

"
p01870,Relay,"
湖に浮かぶ $n$ 個の小島からなるビワコという村がある．
ビワコ村には $n-1$ 本の簡単な作りの橋がある．
島には $0$ から $n-1$ まで，橋には $0$ から $n-2$ までの番号が付けられている．
$i$ 番の橋は $i+1$ 番の島と $p_i$ 番の島を直接つなぎ，長さは $w_i$ である．
村人はどの島の間もいくつかの橋を通って相互に移動できるようになっている．
 
ある村人の提案により，ビワコ村でリレー大会が開催されることとなった．
しかし，ビワコ村には閉路がなくトラックを用意できないため，
現在ある橋を $1$ つだけ掛け替えることによって閉路を作ろうと考えた．
この操作によって用意できる閉路のうち，長さが最大となるものの長さを求めなさい．
 

"
p01871,Paint,"
情太くんと立子さんは，
平面の世界にある庭付きの家に住んでいる．二人は点とみなせ，
庭は $n$ 頂点の単純多角形 (隣り合わないどの $2$ 辺も交差も接触もしない多角形) の形をしている．
 
ある日，二人は一本の伸び縮みするローラーを手に入れた．
ローラーは線分とみなせ，ローラーが通過した領域に色を塗ることができる．
二人はローラーを使って庭全体に色を塗りたいと思っている．
 庭の内部の任意の $1$ 箇所に杭を打つ． 庭の外部のある $1$ 点に集まる． 十分に長い紐を用意し，片方の端を情太くん，もう一方の端を立子さんの体に結ぶ． 情太くんがローラーの片方の端を，立子さんがもう一方の端を持つ． 

 庭のどの部分から塗り始めてもよい． 庭の外部または周上を移動できるが，内部に入ってはいけない． 塗り終わるまでローラーから手を離してはいけない． 

 二人が再びある $1$ 点に集まっている． 庭の内部の任意の点の上をローラーが通過している． 二人の体の紐を解き，両端を結んで輪を作る．この輪を外から引っ張ったときに，杭に引っかかって抜けない． 

 
さて，二人はできるだけ離れたくないので，塗っている最中にとる二人の距離の最大値を最小化したい．
二人に代わってそのような値を求めてほしい．
 

"
p01872,My Number,"いっけなーい！遅刻遅刻！ あっ！私、今日から憧れのこの会社で働くことになったんだ！ それなのに、初日から寝坊だなんて…！？ 今日は会社にマイナンバーを教えなければならない大切な日なのに…！ みんな知っていると思うけれど、一応マイナンバーの説明をするね！ マイナンバーは行政手続きにおける個人を識別するために用いられる 12 桁からなる数字列 (p_{11} p_{10} p_{9} ... p_{1} p_{0}) である。 末尾の p_{0} はチェックディジットと呼ばれ、

総務省令第八十五号第五章

に定められているように、次式で定義される。 11 &minus; ( ({\rm &sigma;}_{n = 1}^{11} p_{n} &times; q_{n}) を 11 で除した余り ) ただし、 ( ({\rm &sigma;}_{n = 1}^{11} p_{n} &times; q_{n}) を 11 で除した余り ) \&le; 1 の場合は 0 とする。 ここで、 q_{n} (n = 1, 2, ..., 11) は次のように定義される。 1 \&le; n \&le; 6 のとき n + 1 7 \&le; n \&le; 11 のとき n &minus; 5 分かったかな？ でも、12桁の数字列なんて覚えられないから、家を出る直前にマイナンバーの通知書の写真を撮ったんだ！ ほら、私のマイナンバーかっこいいでしょ！ …ってあれ？ なんでマイナンバーの上に納豆の粒が乗っているの！？ これじゃあ、1桁だけ分からなくてマイナンバーを教えられないよ！ 私、これからどうなっちゃうの…！？ そうだ！ チェックディジットの定義に矛盾しないような数字を見つければいいんだ！ でも計算難しい… ねえ、私の初日を失敗しないために、分からない数字を見つけるのを手伝って！？ えっ？ 何を言っているか分かりにくかったって？ やってほしいことは要するに、 1桁だけ数字が不明な12桁のマイナンバーが与えられるので、チェックディジットの定義に矛盾しないように、不明な桁の数字を求めよ。 ただし、そのような数字が複数あるときには “multiple” と出力せよ。 ということだよ！ よろしくねっ！ 

"
p01873,Periodic Sequence,"h大学の教授を務めているperiod博士は、万物に潜むとされる周期と呼ばれる性質を研究している。一般的に知られている基本的な周期としては、数列に潜む周期が考えられるだろう。すなわち、長さnの数列s = s_1, s_2, ... , s_nが以下の性質を満たすならば、周期t (t \&le; n) を持つという事実である。 1 \&le; i \&le; n &minus; tについて、s_i=s_{i+t}である。 今、period博士が着目しているのは、周期を用いてより簡易な記述ができる数列である。例えば、長さnの数列が周期t (\&le; n) を持つとき、ある整数kを用いてn=ktと書けるならば、その数列は長さtの数列s_1, ... , s_tがk個連続したものである、と記述できる。period博士は数列を例のように記述できたとき、その数列はk-partであると言うことにした。 period博士は、kが最も大きいk-partに興味を示している。そこで助手であるあなたは、入力として数列を受け取り、それがk-partであるとき最も大きいkを出力するプログラムの作成を任されることとなった。period博士の要求に正確に応えるプログラムを作成しよう。 

"
p01874,Growing Point,"
粘菌コンピュータというものがある。
ある種の粘菌には「餌を求め、餌と餌の最短距離をつなぐ形に変形する」
という性質がある。
これを利用し、餌を「入力」、形を「出力」とみなして
コンピュータとして利用することができる。
 
今、二次元平面上に1つの粘菌の拠点とn個の餌が存在する。それぞれの餌には1からnまでの異なる番号が与えられ、拠点には番号0が与えられている。
この粘菌はある餌を食べるために、その餌と最も近い拠点の最短距離を結ぶ管状に
成長し、食べた位置に新たに拠点を形成する。
新たに形成した拠点は拠点を形成する直前に食べた餌と同じ番号を持つ。
粘菌は拠点以外の場所から成長することはできない。
以降では、拠点と餌を二次元平面上の点、管状に成長した粘菌を複数の線分として考える。
 
すべての拠点と線分からなる構造を粘菌網と呼ぶ。
粘菌は1つの餌を食べるために次のような操作を繰り返す。
 まだ食べていない餌の中で粘菌網に最も近い餌を選ぶ。そのような餌が複数存在する場合は番号が最も小さい餌を選ぶ。 選んだ餌と最も近い拠点を選ぶ。そのような拠点が複数存在する場合は、最も拠点の番号が小さいものから取る。 選んだ拠点と餌を結ぶ線分を引く。以降ではこのとき選んだ餌も拠点として扱う。 
この粘菌は生きるために必要な栄養を取るのにm個の餌を食べる必要がある。
粘菌がm個の餌を食べるまでに引いたすべての線分の長さの合計を求めよ。
また、出力する値は0.0001以下の誤差を含んでいても良い。
 以下の図では入力例2の粘菌の様子を示している。 











"
p01875,Complex Oracle,"
※この問題はリアクティブ問題です．すなわち，サーバー側に用意されたプログラムと対話的に応答することで正答を導くプログラムを作成する必要があります．
また、サーバー側のプログラムも計算機資源を共有する関係上、サーバーだけで最大 3 sec程度の実行時間、最大 300 mb程度のメモリを使用する場合がありますので、tle・mleにお気をつけください。
 あいずにゃんは若ヶ松高校のプログラミングコンテスト部、通称ぷろこん部に所属する2年生である。見目麗しい。あいずにゃんはその小さな体も無限に存在するチャームポイントの1つであるが、本人はコンプレックスを感じているようだ。そのせいか、一列に並んでいる人たちを見ると、それぞれの人の前方にその人より身長が高い人が何人並んでいるかを瞬時に数えられる能力を持っている。 プロコンの名門・律命館大学中等部卒のエリート競技プログラマであり、ぷろこん部の部長であるりっつちゃんは、あいずにゃんのこの能力を使えば、並んでいる人たちがそれぞれ何番目に背が高いのかを当てることができるのではないかと考えた。 今、りっつちゃんはn人が並んでいる列をあいずにゃんに見せている。りっつちゃんは、人がn人並んでいることは知っているが、その並び順がどうなっているかはわからない。りっつちゃんはあいずにゃんに “l番目の人からr番目の人までコンプレックス度” を教えてもらうことができる。ここで、l番目の人からr番目の人までのコンプレックス度とは、i (l \&le; i \&le; r) 番目の人それぞれに関して、l番目からi &minus; 1番目までの間にいる自分 (i) より背が高い人の人数の総和である。(より厳密な定義は入出力形式を参照のこと) (うらやましいことに) ぷろこん部の部員であるあなたは、(とても、とても心苦しいが) あいずにゃんをオラクルとして利用することで身長順を当てるプログラムを書くようりっつちゃんに命じられた。つらい。せめてあいずにゃんに負担をかけないよう、少ない質問回数で求められるよう頑張ろう。 

"
p01876,Arai's,"スクールアイドル時代から、国民的人気を誇ってきた女性アイドルグループarai's。今では、たくさんの「あらい」さんが所属する大規模なグループとして、世界レベルで活躍している。そして今日、新たなるプロジェクトの始動が決定した。彼女たちは、小さなユニットをいくつか結成することで、さらなる売上の向上を試みることになったのである。 arai'sには「荒井」さんがa人，「新井」さんがb人在籍しており、合計でa+b人の「あらい」さんからなる。新ユニットは、「荒井」さん一人と「新井」さん一人のペアで構成する。（ここで、同じ「あらい」さんが複数のユニットに所属していはいけない。）ただし、ある「荒井」さんが一部の「新井」さんのことを良く思っていないうえに、同様にある「新井」さんが一部の「荒井」さんのことを良く思っていない。「あらい」さんたちはユニットを組む際に、良く思っていない「あらい」さんをペアとして認めてくれず、一方でも認めてくれなければユニットを組むことはできない。 arai'sのマネージャーであるあなたは、なるべくたくさんのユニットを作りたいと考えているが、メンバーの交友関係からその限界を感じていた。そこであなたは、「あらい」さんたちと個別に面談し、ユニットを組ませたい「あらい」さんについての、良い噂を聞かせることを考えた。面談をした「あらい」さんは、噂に聞いた「あらい」さんを見直し、ユニットのペアとして認めるようになる。 しかし、あなたはそれほど時間をとることができないため、最大k回までしか噂を聞かせることができない。あなたは限られた時間の中で、結成できるユニットの数を最大化しようと試みた。あなたが結成できるユニットの数の最大値を求めよ。 

"
p01877,Kitsuchiri,"若ヶ松高校二年へ組の合津千里（あつちり）さんは数列が「きっちり」していなければ気がすまない。 
合津さんによると、「きっちり」した数列とは、長さが偶数で左右対称である数列のことである。
すなわち、長さn(nは偶数)の数列sについて、次の条件を満たせば数列sは「きっちり」している。
 二年へ組の数学担当の先生は、合津さんから「きっちりしてください。」と要望され、授業で用いる数列を作り直さなければならない。 先生は、数列のl番目からr番目までのそれぞれの要素に数字xを足すクエリをいくつも適用することで、数列を「きっちり」させようと奮闘しているが、うまくいかないようだ。 二年へ組に所属する凄腕プログラマーのあなたの仕事は、先生が絶望してしまう前に、先生が作り直している数列が「きっちり」しているかを調べるプログラムを作ることだ。 

"
p01878,Destiny Draw,"
mr. d はカードゲームで勝負をすることになった。
このカードゲームでは、 n 枚のカードの山を用いる。
また、山のカードには、上から順に 1, 2, 3, ... , n の番号がついている。
 
d で始まるものすべてを背負う彼に敗北は許されないが、不幸にも mr. d はカードゲームが不得手である。
そこで、自分が引くカードをコントロールすることで勝利を手にすることにした。
 
mr. d は k 種類のシャッフルが可能である。
k 種類のうち i 番目のシャッフルでは上から a_i 枚目から a_i+b_i &minus; 1枚目までのちょうど b_i 枚を引き抜き、上に重ねる。
i番目のシャッフルを1 回するとき、それぞれ t_i 秒を要する。
 ちょうど t 秒のシャッフルの後、一番上のカードを c にする方法は何通りあるか。 数が多くなる可能性があるので、 10^9+7 で割った余りを出力せよ。 

"
p01879,About Our Effort,"※この問題はおまけの問題と捉えていただけるとありがたく、できれば先に他の問題のほうをお楽しみいただければと思っておりまして，ですので他の問題を通し終えて暇になり，かつその暇をこのコンテストで潰そうという気になってくれた方に挑戦していただければと思います。 
d問題のクエリが遅くてすみませんでした。
しかし我々といたしましても決してただ怠慢をしていたわけではないのです。
私たちなりに努力したのです。
その努力の片鱗を味わっていただくため、このような問題を出題した次第であります。
 問題: d問題のサーバー側の処理をするプログラムを作成せよ。 なおこの問題は本当にd問題の要求を満たすプログラムを作成することが目標ということですので、言語による向き/不向きなどは一切考慮いたしませんのであしからず。最速実行速度を達成された方はもれなくaojに収録される際にジャッジプログラムとして採用される可能性がありますのでぜひ挑戦下さい。 

"
p01880,Best Matched Pair,"
you are working for a worldwide game company as an engineer in tokyo. this company holds an annual event for all the staff members of the company every summer. this year's event will take place in tokyo. you will participate in the event on the side of the organizing staff. and you have been assigned to plan a recreation game which all the participants will play at the same time.
 
after you had thought out various ideas, you designed the rules of the game as below.
  each player is given a positive integer before the start of the game.  each player attempts to make a pair with another player in this game, and formed pairs compete with each other by comparing the products of two integers.  each player can change the partner any number of times before the end of the game, but cannot have two or more partners at the same time.  at the end of the game, the pair with the largest product wins the game. 
in addition, regarding the given integers, the next condition must be satisfied for making a pair.
  the sequence of digits obtained by considering the product of the two integers of a pair as a string must be increasing and consecutive from left to right. for example, 2, 23, and 56789 meet this condition, but 21, 334, 135 or 89012 do not. 
setting the rules as above, you noticed that multiple pairs may be the winners who have the same product depending on the situation. however, you can find out what is the largest product of two integers when a set of integers is given.
 
your task is, given a set of distinct integers which will be assigned to the players, to compute the largest possible product of two integers, satisfying the rules of the game mentioned above.
 


"
p01881,Help the Princess!,"
the people of a certain kingdom make a revolution against the bad government of the princess. the revolutionary army invaded the royal palace in which the princess lives. the soldiers of the army are exploring the palace to catch the princess. your job is writing a program to decide that the princess can escape from the royal palace or not.
 
 for simplicity, the ground of the palace is a rectangle divided into a grid. there are two kinds of cells in the grid: one is a cell that soldiers and the princess can enter, the other is a cell that soldiers or the princess cannot enter. we call the former an empty cell, the latter a wall. the princess and soldiers are in different empty cells at the beginning. there is only one escape hatch in the grid. if the princess arrives the hatch, then the princess can escape from the palace. there are more than or equal to zero soldiers in the palace.
 
the princess and all soldiers take an action at the same time in each unit time. in other words, the princess and soldiers must decide their action without knowing a next action of the other people. in each unit time, the princess and soldiers can move to a horizontally or vertically adjacent cell, or stay at the current cell. furthermore the princess and soldiers cannot move out of the ground of the palace. if the princess and one or more soldiers exist in the same cell after their move, then the princess will be caught. it is guaranteed that the princess can reach the escape hatch via only empty cells if all soldiers are removed from the palace.
 
if there is a route for the princess such that soldiers cannot catch the princess even if soldiers make any moves, then the princess can escape the soldiers. note that if the princess and a soldier arrive the escape hatch at the same time, the princess will be caught. can the princess escape from the palace?
 


"
p01882,We don't wanna work!,"
acm is an organization of programming contests. the purpose of acm does not matter to you. the only important thing is that workstyles of acm members are polarized: each member is either a workhorse or an idle fellow.
 
each member of acm has a motivation level. the members are ranked by their motivation levels: a member who has a higher motivation level is ranked higher. when several members have the same value of motivation levels, the member who joined acm later have a higher rank. the top 20% highest ranked members work hard, and the other (80%) members never (!) work. note that if 20% of the number of acm members is not an integer, its fraction part is rounded down.
 
you, a manager of acm, tried to know whether each member is a workhorse or an idle fellow to manage acm. finally, you completed to evaluate motivation levels of all the current members. however, your task is not accomplished yet because the members of acm are dynamically changed from day to day due to incoming and outgoing of members. so, you want to record transitions of members from workhorses to idle fellows, and vice versa.
 
you are given a list of the current members of acm and their motivation levels in chronological order of their incoming date to acm. you are also given a list of incoming/outgoing of members in chronological order.
 
your task is to write a program that computes changes of workstyles of acm members.
 

"
p01883,Parentheses,"
dave loves strings consisting only of '(' and ')'. especially, he is interested in balanced strings. any balanced strings can be constructed using the following rules:
  a string ""()"" is balanced.  concatenation of two balanced strings are balanced.  if $t$ is a balanced string, concatenation of '(', $t$, and ')' in this order is balanced. for example, ""()()"" and ""(()())"" are balanced strings. "")("" and "")()(()"" are not balanced strings. 
dave has a string consisting only of '(' and ')'. it satises the followings:
  you can make it balanced by swapping adjacent characters exactly $a$ times.   for any non-negative integer $b$ ($b < a$), you cannot make it balanced by $b$ swaps of adjacent characters.  it is the shortest of all strings satisfying the above conditions. 
your task is to compute dave's string. if there are multiple candidates, output the minimum in lexicographic order. as is the case with ascii, '(' is less than ')'.
 

"
p01884,Similarity of Subtrees,"
define the depth of a node in a rooted tree by applying the following rules recursively:
  the depth of a root node is 0.  the depths of child nodes whose parents are with depth $d$ are $d + 1$. 
let $s(t, d)$ be the number of nodes of $t$ with depth $d$. two rooted trees $t$ and $t'$ are similar if and only if $s(t, d)$ equals $s(t', d)$ for all non-negative integer $d$.
 
you are given a rooted tree $t$ with $n$ nodes. the nodes of $t$ are numbered from 1 to $n$. node 1 is the root node of $t$. let $t_i$ be the rooted subtree of $t$ whose root is node $i$. your task is to write a program which calculates the number of pairs $(i, j)$ such that $t_i$ and $t_j$ are similar and $i < j$.
 


"
p01885,Escape from the Hell,"
one day, buddha looked into the hell and found an office worker. he did evil, such as enforcing hard work on his subordinates. however, he made only one good in his life. he refused an unreasonable request from his customer to save the lives of his subordinates. buddha thought that, as the reward of the good, the office worker should have had a chance to escape from the hell. buddha took a spider silk and put down to the hell.
 
the office worker climbed up with the spider silk, however the length of the way $l$ meters was too long to escape one day. he had $n$ energy drinks and drunk one of them each day. the day he drunk the i-th energy drink he could climb $a_i$ meters in the daytime and after that slided down $b_i$ meters in the night. if he could reach at the height greater than or equal to the $l$ meters in the daytime, he could escape without sliding down. after the $n$ days the silk would be cut.
 
he realized that other sinners climbed the silk in the night. they climbed $c_i$ meters in the $i$-th night without sliding down in the daytime. if they catched up with the office worker, they should have conflicted and the silk would be cut. therefore he needed to escape before other sinners catched him. your task is to write a program computing the best order of energy drink and output the earliest day which he could escape. if he could not escape, your program should output -1.
 

"
p01886,Share the Ruins Preservation,"
two organizations international community for preservation of constructions (icpc) and japanese archaeologist group (jag) engage in ruins preservation. recently, many ruins were found in a certain zone. the two organizations decided to share the preservation of the ruins by assigning some of the ruins to icpc and the other ruins to jag.
 
now, icpc and jag make a rule for assignment as follows:
  draw a vertical straight line from the north to the south, avoiding to intersect ruins.  ruins located to the west of the line are preserved by icpc. on the other hand, ruins located to the east of the line are preserved by jag. (it is possible that no ruins are located to the east/west of the line; in this case, icpc/jag will preserve no ruins.) 
a problem is where to draw a straight line. for each organization, the way to preserve its assigned ruins is to make exactly one fence such that all the assigned ruins are in the region surrounded by the fence. furthermore, they should minimize the length of such a fence for their budget. if the surrounded areas are vast, expensive costs will be needed to maintain the inside of areas. therefore, they want to minimize the total preservation cost, i.e. the sum of the areas surrounded by two fences. your task is to write a program computing the minimum sum of the areas surrounded by two fences, yielded by drawing an appropriate straight line.
 


"
p01887,Pipe Fitter and the Fierce Dogs,"
you, a proud pipe fitter of icpc (international community for pipe connection), undertake a new task. the area in which you will take charge of piping work is a rectangular shape with $w$ blocks from west to east and $h$ blocks from north to south. we refer to the block at the $i$-th from west and the $j$-th from north as $(i, j)$. the westernmost and northernmost block is $(1, 1)$, and the easternmost and southernmost block is $(w,h)$. to make the area good scenery, the block $(i, j)$ has exactly one house if and only if both of $i$ and $j$ are odd numbers.
 
your task is to construct a water pipe network in the area such that every house in the area is supplied water through the network. a water pipe network consists of pipelines. a pipeline is made by connecting one or more pipes, and a pipeline with l pipes is constructed as follows:
  choose a first house, and connect the house to an underground water source with a special pipe. 
in addition, you should notice the followings when you construct several pipelines:
  for each house, exactly one pipeline is through the house.  multiple pipes can be located at one block. 
in your task, common pipes are common, so you can use any number of common pipes. on the other hand, special pipes are special, so the number of available special pipes in this task is restricted under icpc regulation.
 
besides the restriction of available special pipes, there is another factor obstructing your pipe work: fierce dogs. some of the blocks which do not contain a house seem to be home of fierce dogs. each dog always stays at his/her home block. since several dogs must not live at the same block as their home, you can assume each block is home of only one dog, or not home of any dogs.
 
locating a common pipe at a no-dog block costs 1 unit time, but locating a common pipe at a dog-living block costs 2 unit time because you have to fight against the fierce dog. note that when you locate multiple pipes at the same block, each pipe-locating costs 1 unit time for no-dog blocks and 2 for dog-living blocks, respectively. by the way, special pipes are very special, so locating a special pipe costs 0 unit time.
 
you, a proud pipe fitter, want to accomplish this task as soon as possible. fortunately, you get a list of blocks which are home of dogs. you have frequently participated in programming contests before being a pipe fitter. hence, you decide to make a program determining whether or not you can construct a water pipe network such that every house is supplied water through the network with a restricted number of special pipes, and if so, computing the minimum total time cost to construct it.
 

"
p01888,Multisect,"
we are developing the world's coolest ai robot product. after the long struggle, we finally managed to send our product at revision $r_{rc}$ to qa team as a release candidate. however, they reported that some tests failed! because we were too lazy to set up a continuous integration system, we have no idea when our software corrupted. we only know that the software passed all the test at the past revision $r_{pass}$. to determine the revision $r_{enbug}$ ($r_{pass} < r_{enbug} \leq r_{rc}$) in which our software started to fail, we must test our product revision-by-revision.
 
here, we can assume the following conditions:
  when we test at the revision $r$, the test passes if $r < r_{enbug}$, or fails otherwise.  it is equally possible, which revision between $r_{pass} + 1$ and $r_{rc}$ is $r_{enbug}$. 
from the first assumption, we don't need to test all the revisions. all we have to do is to find the revision $r$ such that the test at $r - 1$ passes and the test at $r$ fails. we have $k$ testing devices. using them, we can test at most $k$ different revisions simultaneously. we call this ""parallel testing"". by the restriction of the testing environment, we cannot start new tests until a current parallel testing finishes, even if we don't use all the $k$ devices.
 
parallel testings take some cost. the more tests fail, the more costly the parallel testing becomes. if $i$ tests fail in a parallel testing, its cost is $t_i$ ($0 \leq i \leq k$). and if we run parallel testings multiple times, the total cost is the sum of their costs.
 
of course we want to minimize the total cost to determine $r_{enbug}$, by choosing carefully how many and which revisions to test on each parallel testing. what is the minimum expected value of the total cost if we take an optimal strategy?
 

"
p01889,Compressed Formula,"
you are given a simple, but long formula in a compressed format. a compressed formula is a sequence of $n$ pairs of an integer $r_i$ and a string $s_i$, which consists only of digits ('0'-'9'), '+', '-', and '*'. to restore the original formula from a compressed formula, first we generate strings obtained by repeating $s_i$ $r_i$ times for all $i$, then we concatenate them in order of the sequence.
 
you can assume that a restored original formula is well-formed. more precisely, a restored formula satisfies the following bnf:
 
here, '+' means addition, '-' means subtraction, and '*' means multiplication of integers.
 
your task is to write a program computing the answer of a given formula modulo 1,000,000,007, where $x$ modulo $m$ is a non-negative integer $r$ such that there exists an integer $k$ satisfying $x = km + r$ and $0 \leq r < m$; it is guaranteed that such $r$ is uniquely determined for integers $x$ and $m$.
 

"
p01890,redundant Drive,"
the people of jag kingdom hate redundancy. for example, the n cities in jag kingdom are connected with just $n - 1$ bidirectional roads such that any city is reachable from any city through some roads. under the condition, the number of paths from a city to another city is exactly one for all pairs of the cities. this is a non-redundant road network :)
 
one day, you, a citizen of jag kingdom, decided to travel as many cities in the kingdom as possible with a car. the car that you will use has an infinitely large tank, but initially the tank is empty. the fuel consumption of your car is 1 liter per 1 km, i.e. it consumes 1 liter of gasoline to move 1 km.
 
each city has exactly one gas station, and you can supply $g_x$ liters of gasoline to your car at the gas station of the city $x$. of course, you have a choice not to visit some of the gas stations in your travel. but you will not supply gasoline twice or more at the same gas station, because it is redundant. each road in the kingdom has a distance between two cities: the distance of $i$-th road is $d_i$ km. you will not pass the same city or the same road twice or more, of course, because it is redundant.
 
if a quantity of stored gasoline becomes zero, the car cannot move, and hence your travel will end there. but then, you may concern about an initially empty tank. don't worry. you can start at any gas station of the cities in the kingdom. furthermore, each road directly connects the gas stations of the its two ends (because the spirit of non-redundancy avoids redundant moves in a city), you therefore can supply gasoline to your car even if your car tank becomes empty just when you arrive the city. 
 
your task is to write a program computing the maximum number of cities so that you can travel under your non-redundancy policy.
 


"
p01891,Cabbage,"
aor イカちゃんは葉が $n$ 枚あるキャベツを手に入れた。
このキャベツの葉には外側から順に $1,\ldots,n$ の番号がついていて、$i$ 番目の葉の汚れ具合は $d_i$ である。
この値が大きいほど汚れ具合が酷いことを表す。
aor イカちゃんはこのキャベツの葉を料理に使うため、廃棄する候補の汚い葉を以下の手順に従って選ぶことにした。
 
廃棄候補を空に初期化する。
 
まだ調べていない最も外側の葉に注目する。全て調べ終わっている場合は終了する。
 
その葉の汚れ具合が $a$ 以上であれば廃棄候補に加え、 2. に戻る。そうでなければ終了する。
 
しかし、この操作を行った結果、料理に使える葉が極端に少なくなってしまう場合があることに気がついた。
そこで、上記の操作後に捨てる葉を考えなおし、以下の操作を行うことにした。
 
廃棄候補でない葉が $m$ 枚未満であれば 2. に進む。そうでなければ終了する。
 
廃棄候補の葉のうちまだ調べていない最も内側の葉に注目する。廃棄候補の葉がない場合は終了する。
 
その葉の汚れ具合が $b$ 以下であれば廃棄候補から外し、 2. に戻る。
そうでなければ廃棄候補に残っている葉を全て廃棄し、終了する。
 
これらの操作を行ったとき、最終的に捨てる葉の枚数を求めよ。
 

"
p01892,SNS,"
aor イカちゃんは最近少し機嫌が悪い。
どうやら、”イカったー”のフォロー数とフォロワー数の比が気に入らないようだ
。現在、aor イカちゃんのフォロー数は $a$ 人、フォロワー数は $b$ 人であり、比は $a:b$ である。
 
そこで、aor イカちゃんはフォロー数とフォロワー数の比が気に入った整数比になるように、フォロー数を増減させることにした。
なお気に入った整数比とは、比に含まれるどちらの値も $1$ 以上 $n$ 以下の整数となるように表せる比である。
 
しかし、aor イカちゃんはできるだけフォロー数を変更したくないので、変更前との差の絶対値をできるだけ小さくしたい。
aor イカちゃんの機嫌を良くするために、少なくともフォロー数をいくつ変更する必要があるかを求めるプログラムを作成せよ。
 

"
p01893,Lost Graph,"
あなたと aor イカちゃんは競技プログラミングのグラフ問題の準備をしている。
入力ケースの生成は aor イカちゃんの仕事である。
その問題の入力ケースは $n$ 頂点の有向グラフである。
頂点には $1$ から $n$ までの番号が付いている。
辺には自己ループが含まれるかもしれないが、多重辺は含まれない。
 
ところが、aor イカちゃんは突然音信不通となってしまい、元のグラフが手に入らなくなってしまった。残っているのは次の情報だけである。
 
入次数が $i$ の頂点の数は $a_i$ 個である。つまり、 $i$ を終点とする頂点の数は $a_i$ 個である。
 
出次数が $i$ の頂点の数は $b_i$ 個である。つまり、 $i$ を始点とする頂点の数は $b_i$ 個である。
 
残された情報と矛盾しない有向グラフは存在するだろうか。
それを判定し、存在するなら yes と出力した後矛盾しない有向グラフを 1 つ出力せよ。
複数ある場合はどれを出力してもよい。存在しないなら no と出力せよ。
 

"
p01894,DAG Trio (Easy),"
この問題は g: dag trio (hard) と制約のみが異なる同じ設定の問題です。
 

"
p01895,Fuda,"
この問題はリアクティブ問題です。
サーバー側に用意されたプログラムと対話的に応答することで正答を導くプログラムを作成する必要があります。
 

"
p01896,Folding Paper,"
高さ $h$ マス、幅 $w$ マスの格子状に区切られた長方形の紙がある。
$0$ から数えて上から $i$ 行目、左から $j$ 列目のマスには整数 $i \times w+j$ が書かれている。 $h=2, w=3$ の例を下の図に示す。
 
aor イカちゃんは、この紙に対して次のような操作を順に行った。
 
$1$ マス分の面積になるまでマスの区切り線に沿って繰り返し折る。この時の折る線や山谷、順番などは任意である。紙を破らない任意の折り方ができる。
 
$4$ 辺を切り落として $h \times w$ 枚の紙に分割する。
 
上から順にめくっていき、書かれていた整数を並べた数列 $s$ を作る。
 
例えば、下の図のように折った後切った場合、$s$ として $4, 3, 0, 5, 2, 1$ が得られる。このように、間に差し込むような折り方も可能である。
 
あなたは aor イカちゃんから数列 $s$ を受け取った。
しかし、aor イカちゃんのことを信用していないので、これが本物か確かめたい。
$s$ と一致するような紙の折り方が存在するなら ""yes"" を、しないなら ""no"" を出力するプログラムを書け。
 

"
p01897,DAG Trio (Hard),"
この問題は d: dag trio (easy) と制約のみが異なる同じ設定の問題です。
 

"
p01898,Taking a Seat,"
a君はある試験を受けるために試験会場の教室に入った。
ただ、a君はとても神経質なタイプだ。
そのため、状況によってa君が座りたくない席がもしかしたらあるかもしれない。
そこで、a君はある条件をもとに座れる席がいくつあるか調べることにした。
 

"
p01899,line Game,"山手線は便利である。 なぜならば、130円払うだけで時間の許す限り何周でも乗っていられるからだ。ただし、切符で乗車する場合は、切符の有効時間に気をつけなければならない。icカードなら安心らしい。この山手線の特性を利用して、東京近郊には電車に揺られながら惰眠を貪る輩が存在する。ちなみに、この問題の作問者はやったことがない。駅員にバレることは稀だろうが、バレたらめんどくさそうなので、オススメはしない。 

"
p01900,Mod!Mod!,"
じゃん！探してますよ目撃証言！
会津に怪盗が現れた！みんなのウマウマ棒が盗まれた！犯人は誰だ！？
解きあかせ！mod!mod!
 

"
p01901,Suntan,"
あいずにゃんは若ヶ松高校のプログラミングコンテスト部、通称ぷろこん部に所属する2年生である。天使のようにかわいい。
あいずにゃんは今年の夏フェスに参加する予定なので、聴きに行くバンドのスケジュールを立てた。
ここで心配なのが日焼けだ。
ライブはすべて野外で行われるが、あいずにゃんは日焼けしやすい体質なので長時間野外で紫外線を浴びすぎるとすぐ日焼けしてしまう。
ライブがない間は屋内に避難することでできるだけ紫外線を回避するつもりだが、ライブ中はどうしても日に当たってしまう。
そこであいずにゃんは日焼け止めを塗ることで紫外線対策をすることを考えた。
 

"
p01902,Unbalanced Old Maid,"高坂さんと園田さんと南さんは子供の頃からの仲良し3人組だ。3人は沖縄に修学旅行に行くも、台風が来てしまい、海で遊ぶことができないのでババ抜きをすることにした。 
園田さんは勝負事には強いが、ポーカーフェイスが苦手なため、自分のカードが引かれるときに無意識にかわいらしい顔芸を披露してしまう。園田さんを愛して止まない高坂さんと南さんは、園田さんの顔芸を見るだけで園田さんの手札が分かってしまうため、園田さんのカードを引くときは、自分が有利になるように引くことができる。
一方、高坂さんと南さんは特に顔芸をしたりはしないので、手札がばれることはない。 よって、高坂さんと南さんのカードを引く人はそれぞれ、高坂さんと南さんが持っているカードの中から等確率で1枚引く。
 どう考えても不利な園田さんは、ババ抜きでなかなか勝てないことに違和感を覚えている。 使用するカードの種類数nと初期の手札が与えられたとき、園田さんが負けとならない確率を求めてあげよう。 

"
p01903,Overflow of Furo,"
温泉宿・パロは自慢の温泉に全ての情熱を注いでおり、風呂のプロフェッショナルを集めている。
風呂のプロたちは主に温泉の配管を管理しており、複数の源泉から1つの大浴場へと繋がる、複雑に入り組んだ配管網を管理・調整している。
 
配管網の管理・調整業務もなかなかに大変なのだが、風呂のプロたちはその合間を縫って、さらに多くの湯を浴槽へと供給できるよう日々努力を積み重ねていた。
結果、風呂のプロたちは「1本だけ配管をオーバーフローさせることができる」という荒技を習得した。
すなわち、自由に配管1本を選び、その配管の湯量の制限をなくすことができるようになったのだ。
 今まで最大湯量を実現する配管網の設定をあなたのプログラムに依存していた風呂のプロたちは、この技術を使ってさらに浴槽への供給湯量を増やすにはどうすればよいか、あなたに再びプログラムを書くよう依頼してきた。 


"
p01904,Minimum Enclosing Rectangle,"
みんなぁ、こんにちは！　八森中ぷろこん部の藍座あいりだよぉ。
突然だけど、あいりがこの前解けなかった問題をみんなに解いて欲しいんだぁ～。
この前部活でicpc2010のa問題を解いたんだけど、その時の問題が難しかったんだぁ。
 
あ、icpcについて説明しなきゃ！　icpcは、い、いんたーなしょなる……ちゅうがくせい……ぷろぐらみんぐ……こんてすとの略で、日本語に直すと、国際中学生対抗プログラミングコンテストらしいよぉ！ あいりにはちょっとむずかしい言葉がいっぱいだよぉ。
あいり達はこの世界大会に出るために毎日頑張ってるんだぁ！
 
部活から帰った後お姉ちゃんにも聞いてみたんだけど、「わ、わからないわ……a問題からわからないなんて……お姉ちゃん失格ね……」って落ち込んじゃって…… 
でも、「『プロ』の人たちが一杯集まるところを知ってるの、お姉ちゃんちょっと連絡してみるわ。あいり、そこで聞いてみなさい！」って言ってここの合宿を教えてもらったんだぁ～ 。
ここに集まる『プロ』のみんなには簡単かもしれないけど……この問題を解いてほしいの！
 

"
p01905,Tournament,"
 aor イカちゃんとあなたは、トーナメント形式の卓球大会シングルスの部に偵察に来た。
全ての試合を録画したい aor イカちゃんのために、あなたはこの大会で行われる試合数を求めてあげることにした。
 
この大会には $n$ 人の選手が参加しており、それぞれ $0, \dots , n - 1$ の背番号を持っている。
そのうち、 $m$ 人の選手が棄権し、試合には出場しなかった。
 
この大会の試合数は、以下のルールに基いて決定される。
 シード選手は存在せず、任意の出場者が優勝するために必要な勝利回数は一定である。 対戦相手が不在の場合は試合を行わず、出場した選手が勝利する。試合数にはカウントされない。 優勝者が決まった段階で大会は終了する。 一度試合に負けた人が再び試合をすることはない。つまり敗者復活戦や 3 位決定戦などは行わない。 なお、卓球台が 1 台しか無いため異なる試合が同時に行われることはなく、また各試合では必ず勝者が決まる (引き分けとなることはない)。 
なお、トーナメントの定義は次のとおりである。
トーナメントは高さ $l = \log_2 n$ の完全二分木で表され、葉にあたる各頂点には参加者の背番号が書き込まれている。
根の深さを 0 とすると、 $i$ 回戦 ($1 \le i \le l$) では、
深さ $l - i$ の各頂点の子に書かれた番号の選手同士が試合を行い、その勝者の背番号をその頂点に書き込む。
 



"
p01906,Weight Range,"
重さの異なる $n$ 色のボールがキューにたくさん入っています。キューには、先頭から
$1,2,3, \dots ,n-1,n,1,2,3, \dots ,n-1,n,1,2,3, \dots$ というふうに昇順にボールが並んでいて、
色 $n$ のボールの後ろにはまた色 $1$ のボールから順に入っています。
同じ色のボールはそれぞれ同じ重さであり、色 $i$ のボールの重さは $a_i$ です。
 
この状態から、キューの先頭からボールを $m$ 個取り出し、これを 1 つのグループとする作業を繰り返します。
そして、キューから取り出した各色のボールの総数がすべて等しくなったときにグループを作る作業をやめます。
なお、キューには十分な数のボールが入っており、グループを作る作業をやめるまでにキューの中身が空になることはありません。
 
たとえば、
$n=8, m=2$ のとき、{色1,色2}, {色3,色4}, {色5,色6}, {色7,色8} の 4 グループができます
(このとき各色のボールは 1 つずつ存在する)。
$n=4, m=3$ のとき、{色1,色2,色3}, {色4,色1,色2}, {色3,色4,色1}, {色2,色3,色4} の $4$
グループができます (このとき各色のボールはそれぞれ3つずつ存在する)。
 
このとき、各グループにおいて、
含まれるボールの重さの最大値と最小値の差をそのグループの重さの範囲と呼ぶことにします。
各グループの重さの範囲の総和を出力してください。
 

"
p01907,Fractal Tree,"
aorイカちゃんは、フラクタルな(自己相似的な)構造を持つ根付き木が好きである。
$n$ 頂点から成る重み付き根付き木 $t$ を用いて、以下のようなフラクタル構造を持つ根付き木 $t'$ を表現することを考える。
 $t'$ は、$t$ の各頂点 $x$ に対して、$x$ を根として $t$ と同様の木構造 (コストも同じ) を持つ木を付け加えたものである。 $t'$の根は $t$ のものと同じものである。 
こうして表現される木は例えば下図のようになる。
 
  
 
aor イカちゃんは、$t'$ に対して深さ優先探索をしようとしているが、全ての頂点を辿ると時間がとてもかかることに気づいた。
そこで、深さ優先探索時の遷移の際に確率 $p$ で遷移し、確率 $1-p$ で遷移しない方針で深さ優先探索を行い、いくつかのノード訪問をサボることにした。
$t$ と確率 $p$ が与えられるので、$t’$ に対して深さ優先探索を行う際に辿る全ての辺のコストの和の期待値を求めよ。
$t$ の情報は頂点数 $n$ と $n-1$ 本の辺の情報で与えられ、頂点 $1$ が根である。
各頂点は $1,2,\dots,n$ とラベリングされており、 $i \ (1 \le i \le n-1)$ 番目の辺は頂点 $x_i$ と $y_i$ をコスト $c_i$ で結んでいる。
今回の問題で扱う、確率 $p$ で子に遷移する深さ優先探索の非決定的アルゴリズムは以下のように表現される。
出力される $\mathrm{answer}$ が辿る辺のコストの総和である。
 空のスタック $s$ を用意する。 $\mathrm{answer}=0$ とする $s$ に $t'$ の根頂点をプッシュする。 $s$ の先頭の要素を取り出し、これを $x$ とする。 $s$ に頂点 $c$ を追加する。そして $\mathrm{answer}$ に $x$ から $c$ に繋がっている辺の重みを加える。 

 sが空でなければ、3. に遷移する。 $\mathrm{answer}$ を出力する。 


"
p01908,Password,"
aor イカちゃんは英小文字のみからなる強力なパスワードを作りたいと思っています。
友達から $n$ 個の危険なパスワードの例を教えてもらった aor イカちゃんは、
以下の条件を全て満たすようなパスワードを作ることにしました。
 長さは1文字以上である。 どの危険なパスワードの、どの連続した部分文字列とも異なる。 1, 2 の条件を満たした中で、最も短い文字列である。 1,2,3の条件を満たした中で、辞書順に並べたとき先頭に来る文字列である。 
aor イカちゃんに代わって強力なパスワードを生成するプログラムを書いてください。
 

"
p01909,Graduation Ceremony,"
ある日 y さんはプログラミングコンテストに参加するため，会場がある大学に向かいました．
ところが大学に着くと人がたくさん！なんと今日は卒業式だったのです．
会場に向かおうにも人に押し流されてしまい，自分の進みたい方向に進むことすらできません．
人混みから抜け出すために，y さんは今いる場所から少しでも遠くに行きたいと考えました．
そこで y さんは状況を以下のような問題として定式化し，競技プログラミングを役に立てることにしました．
 
なお，以下の問題文では y さんは点 $p$ としてモデル化されています．
 

"
p01910,Card Game,"
カードを使ったゲームを $q$ 回行います。
カードには $1 \cdots n$ の数が書かれており、各数が書かれたカードはゲームを行うのに十分な枚数があります。
$i$ 回目のゲームでは、はじめに手札として 2 枚のカードが配られます。
それぞれのカードに書かれている数字は $x_i$ と $y_i$ です。
カードはルールに従って交換することができます。
$j$ 番目 $(1 \le j \le m)$ のルールでは、カード $a_j$ を手数料 $c_j$ 円で別のカード $b_j$ に交換することができます。
各ルールは何回でも用いることができます。また、手数料が足りなくて交換できない場合はありません。
最後に、手札のカードの数字を $r$ で割ったあまりが等しい時、報酬として $z_i$ 円受け取ります。
異なる場合報酬は $0$ 円です。
 
$q$ 回ゲームを終えた時に増やすことのできるお金の最大値を求めてください。
 

"
p01911,Rainy Bus Stops,"
今日は aor イカちゃんにとって初となるデートの日だ。
 aor イカちゃんは駅からバスを乗り継ぎ、待ち合わせ場所のバス停に向かう予定である。

 aor イカちゃんが駅に着いた時、不幸にも雨が降ってきた。当初予定していた経路ではバスの待ち時間で濡れてしまい、せっかく整えた身だしなみが台無しになってしまう可能性がある。

そこで、バスの待ち時間が最も少なくなるような経路でバス停まで向かうことにした。
 aor イカちゃんは、待ち合わせ場所のバス停に着くまでにどの程度濡れるのか心配している。
 

"
p01912,Jump Party,"
とあるダンスホールで $n$ 人の参加するダンスパーティーが行われる。
そのダンスホールは縦方向に $h$ 個、横方向に $w$ 個のグリッドに分けられており、
左上を $(0,0)$、上から $r$ マス、左から $c$ マス目のグリッドの座標を $(r,c)$ と表す。
$i$ 番目の参加者の初期位置は $(r_i, c_i)$ であり、$(i,j)$ のグリッドには $(r_{ij}, c_{ij})$ が書かれている。
 
各参加者は、無限に続く音楽に合わせて次のように同時に移動を行う。
 その時にいる座標が $(i,j)$ のとき、$(r_{ij}, c_{ij})$ へジャンプで移動する。 
それぞれのグリッドは狭く、2 人以上の参加者が同時に同じグリッドに移動すると衝突してしまう。ただし、空中で衝突することは無いとする。
これを聞いたあなたは、ジャンプ後に 2 人以上の参加者が衝突してしまわないかと心配になった。
そこで、衝突が起こる可能性があるか、あるならば何回目のジャンプの後に衝突が起こるかを求めることにした。
 

"
p01913,Islands Survival,"
 $n$ 頂点 $m$ 辺の単純連結無向グラフがある．
頂点には $1, 2, \dots, n$ と番号がつけられている．
辺には $1, 2, \dots, m$ と番号がつけられており，辺 $i$ は頂点 $a_i$ と $b_i$ をつないでいる．
また，辺 $i$ は時刻 $t_i$ に消える．どの辺も通過するために単位時間がかかる．

あなたは最初，時刻 0 において頂点 1 にいる．
あなたは最適に行動することで，時刻 $t$ までに得られるスコアを最大化したい．
スコアは最初 0 であり，イベントは以下に従って起きる．
 今の時刻 $t'$ が $t' \geq t$ を満たすならば終了する．そうでなければ 2. へ． $t_i = t'$ なるすべての辺 $i$ が消える． あなたがいる頂点を $v$ とするとき，頂点 $v$ を含む連結成分に含まれる頂点数を $x$ とすると，スコアに $x$ が加算される． あなたは頂点 $v$ と隣接している頂点のいずれかに移動するか，頂点 $v$ に留まる．ただし前者の場合，既に消えた辺を使うことはできない． $t' \gets t' + 1$ として 1. へ． 
得られるスコアの最大値を求めよ．
 


"
p01914,Energy Drink,"
ixmel、pulmn 兄弟は $n$ 種類のエナジードリンクをそれぞれ 1 本ずつ持っています。
現在、ixmel と pulmn のエネルギーはともに 0 で、時刻は午前 0 時です。
ixmel と pulmn はエネルギーが 0 以下のまま正午になると「たいへんなこと」になります。
エネルギーが正の数では「たいへんなこと」にはなりません。
ixmel とpulmn は「たいへんなこと」にならないために、
毎日朝 6 時に 1 本のエナジードリンクを 2 人で分けて飲むことにしました。
i 番目のエナジードリンクを ixmel が飲むとエネルギーが $a_i$ 増えますが、副作用として 24 時間後にエネルギーが $b_i$ 減ってしまいます。
一方、pulmn が飲むとエネルギーが $b_i$ 増え、24 時間後にエネルギーが $a_i$ 減ります。
また、ixmel と pulmn は日が変わった直後、エネルギーは 0 になります。
ixmel と pulmn は今持っているエナジードリンクだけで、どちらか一方、または両方が「たいへんなこと」になるまでの日数を少しでも長くしたいと思いました。
 
ixmel、pulmn 兄弟のために最初にどちらか片方、または両方が「たいへんなこと」になるまでの日数の最大値を求めてください。なお、エナジードリンクを飲む時間は無視できるものとし、「たいへんなこと」が起こる日は求める日数に含まないものとします。
 

"
p01915,AOR's Score,"
 aor イカちゃんは $n$ 回のレポートの点数のみで成績が決まる授業を受けている。

 aor イカちゃんは同じ授業を受けている友達が $m$ 人いて、自分が苦手なテーマのレポートは、そのテーマが得意な友達のレポートを写すことで、その友達と同じ点数を取ることができる。

ただし、他人のレポートを写していることを先生に気付かれてはいけないので、 $n$ 回のうち少なくとも $k$ 回は他人のレポートを写さず、自力でレポートを仕上げなくてはならない。
また、 aor イカちゃんは友達に迷惑をかけたくないと思ったので友達 $i$ に対してレポートを写すのは $t_i$ 回以下にすることにした。

 aor イカちゃんが自力でレポートを仕上げたときの点数と、友達がレポートを仕上げた時の点数が与えられたときに、 aor イカちゃんが取ることのできる合計点数の最大値を答えよ。
 


"
p01916,Alphabet Block,"名川 若菜 (なかわ わかな) ちゃんは回文が大好きだ。なぜなら、自分の名前もまた回文であるからである。 わかなちゃんはアルファベットブロックがいくつか入っているセットを手に入れた。アルファベットブロックというのは、1 つのブロックにつき 1 文字の英小文字アルファベットが書いてあるブロックのことであり、ブロックの順序を入れ替えて組み合わせることで好きな文字列を作ることができる。わかなちゃんはこのセットで回文を作れないか考えているところだ。 アルファベットブロックのセットには、以下の 3 種類の操作が可能であり、操作のコストはそれぞれ 1 である。 アルファベットブロックを 1 つ追加する (記載されている文字は何であっても良い) いま持っているアルファベットブロック 1 つを別のブロック 1 つ (記載されている文字は何であっても良い) に変える いま持っているアルファベットブロックを 1 つ削除する アルファベットブロックのセットに何度か操作を行うことによって、並び替えて回文にできるようなセットにしたい。そのような操作のコストの最小値はいくつになるだろうか？ わかなちゃんと一緒に考えてみよう。 

"
p01917,Dance Now!,"
前回のラボライフ！ダイガクイン！！
マスターアイドルたちが競う最大の大会「ラボライフ」の前哨戦ともいえるイベント「マスターアイドルワールド」で9位を取ってしまったドサンコスノー。
キレのあるダンスは「9位の舞」、渾身の決めポーズも「9位の構え」などと冷やかされてしまい、心に深い傷を負ってしまう。
来たるラボライフ予備予選では絶対に9位をとるわけにはいかない……
決意を新たにしたドサンコスノーは、自分たちの特技「セルフコントロール」に磨きをかけ、決戦の地へと向かうのだった。
 

"
p01918,Imagawayaki Man,"今川焼きマンは、正義のヒーローである。顔は直径 1 メートルの今川焼き（主に小麦粉でできた生地の中にたっぷりと餡を詰めて焼いた食べ物であり、見た目は円形であり、美味しい。北海道では、単に「お焼き」と呼ばれることも多い。餡として小豆餡のほかに、カスタードクリームなどを用いることもあり、さまざまな味のバリエーションがある。そのため、いくつ食べても飽きない。小豆餡やカスタードクリームのほかに、抹茶餡やりんごジャムなども美味しい。中にタコを入れたたこ焼きのようなものもあるようだ。どの味も美味しい。下の写真は標準的な今川焼きである。左はクリーム餡、右は小豆餡が入っている。美味しそうである。実際に食べて見たところ、やはり美味しかった。ところで、今川焼きの直径は通常 10 センチメートル程度であるので、直径 1 メートルの今川焼きはかなり大きなものであることに注意されよ。）でできており、お腹の空いた者に自分の顔を分けて差し出すこともある。そのため、必要に応じて顔を取り替える必要がある。いつでも取り替えられるように、今川焼き工場でおじさんが一人でせっせと一つずつ今川焼きを焼いて日々備えている。 ところで、今川焼きは食品であるため、当然ながら賞味期限が存在する。無駄にしないためには、焼いてから時間が経ったものから順に使うことが望ましい。おじさんは下図のように、完成した直径 1 メートルの今川焼き (図中の狐色部) を幅 1 メートルのレーン (図中の灰色部) の上に隙間なく並べて保存している。 ある日、大悪党の背筋マンが工場に現れ、今川焼きマンを困らせようと、自慢の背筋力を使って巨大な今川焼きをせっせと運び、好き勝手に並び替えてしまった。背筋マンは背筋力だけでなく記憶力も良いので、どの今川焼きが元々何番目にあったのか覚えているようだ。負けを認めたくない今川焼きマンは、何とかして、それぞれの今川焼きが何番目に出来たてなのか知りたいが、見た目では分かりそうにない。そこで、背筋マンに「もちろん、僕はちゃんと覚えているよ。でも、背筋マンは本当にちゃんと覚えているのかな？？」と挑発し、さらに「本当に覚えているか僕がテストするよ！」と言って質問を繰り返すことで、何番目に出来たてなのか知ることにした。ただし、あまり質問しすぎると、探っていることを勘付かれてしまうので、ほどほどにしなければならない。あなたには、今川焼きマンを助けるため、質問を繰り返し生成し、それぞれの今川焼きが何番目に出来たてなのかを当てるプログラムを作成してほしい。 

"
p01919,Country in Distortion,"アリスはすっかり退屈していました。いつも一緒に遊んでいる白ウサギが、トランプ城へ出かけているからです。（あーあ、こんなことなら一緒に出かければよかったわ。）とアリスは思いました。けれども、ここは歪みの国。そうやすやすと出かけては、ひどく疲れてしまいます。どういうことかというと— 白ウサギは困っていました。トランプ城への道中、ちょっとだけ道を間違えてしまったのです。（困ったなあ。一度戻って、道を良く知っているアリスに案内してもらうことにしよう。）と白ウサギは考えました。それにしても、白ウサギはとっても疲れているみたい。白ウサギは懐中時計を見ながら、 「なんだってこの国の道は、通る度に長さが変わったように感じるんだ！この道、さっきは100メートルくらいに感じたけど、今度は1キロはあるんじゃないか？それも、通り抜けるのにかかる時間はほとんど変わってないって言うのに！」 
と叫んでいます。そう、ここは歪みの国。まさに、時々刻々と道が歪み続ける不思議な国なのです。
やっとの思いでアリスの家に着いた白ウサギが開口一番、
 「ごめんよアリス。トランプ城まで、道案内をお願いできるかい。」 と言うと、退屈のあまりオフトゥンに突っ伏してしていたアリスは元気に飛び起きました。 「もちろんよ！一緒に行きましょう！」 嬉しい一方で、疲れた様子の白ウサギを見て（でも、あまりに疲れてしまうのは悪いわね。）と思ったアリスは、家の奥から歪みの国の地図を取り出してきました。 「さあ、トランプ城までの疲れない道のりを探すわ！」 

"
p01920,Binary Sequence,"
わしはバイナリ大好きbonald.brvin.bnuthじゃ！
オフトゥンフォード大学でバイナリ列の性質を研究しておってのお、bnuthおじさんと呼ばれて、親しまれておるぞい！
ちなみに、わしの名前「bonald.brvin.bnuth」をasciiコードからバイナリ化すると「1000010 1101111 1101110 1100001 1101100 1100100 101110 1000010 1110010 1110110 1101001 1101110 101110 1000010 1101110 1110101 1110100 1101000」になるぞい！
楽しいのお！
 
今日は、弟子が何やら面白そうな実験をすると言うからのお、朝から楽しみなんじゃ！
どれどれ、どんなことをするんじゃの？
 
なんと！バイナリ列を書き換え続けることで、何らかの性質を見出したいとな！
ふむ！これは、重要な発見の匂いがぷんぷんするぞい！
さあ、さあ、実験を始めようではないか！
より詳細な設定を文章としてまとめておくぞい！
 

"
p01921,Trees in a Forest,"
「木はいいです」
喫茶店「タートルハウス」を経営するチコちゃんは、木に並々ならぬ愛情を持っている。なんでも、木の不動のあり方に心が洗われるらしい。。。そんなチコちゃんの木への愛情を確かめるため、同じ喫茶店でバイトをしているココロちゃんはチコちゃんにいたずらを仕掛けることにした。
 ココロちゃんは、チコちゃんのために森を用意して、喫茶店近くに生えていた木を何本か森の中に隠し、チコちゃんの木への愛情を試すことにした。具体的には、チコちゃんに、隠した木を森の中から見つけてもらうことにした。木をこよなく愛するチコちゃんなら、一度見たことがある木は、心の洗われ方の違いでわかるのだが、木を移動してしまったため、木の不動のあり方が変わってしまい、どの木が喫茶店近くにあった木かわからなくなってしまった。しかも、ドジなココロちゃんも答えの木がどれか忘れてしまった！このままでは答えの木を元の場所に戻せないので、ココロちゃんがチコちゃんに怒られてしまう。そこで、優しいプログラマーの皆さんでココロちゃんに答えの木が何本あるのか教えてあげるプログラムを書いてあげよう。 

"
p01922,Love Permutation,"
おおきなジュンレツ らんらんらんでぶー♪
hello, 星空蘭にゃ！
好きなデータ構造は starry sky tree にゃ！
 
蘭は最近物理学科に入学したんだけど、どうやらそこでもプログラミングをやらないといけないらしいんだ。
蘭、アルゴリズムやデータ構造の理論は好きなんだけど、実装はどうも苦手なんだよね……
だいたい蘭達は人間なのに、どうして機械の言葉を勉強しなくちゃいけないの！？
 
とはいえ、課題をやらないことには単位が出ないしやるしかないにゃ。
今回出た課題は順列の run とかいうのが関係しているらしいんだー。
この問題、明らかに作者がタイトル一発ネタで考えてるのが見え見えにゃ、ちょっと寒くないかにゃー。
とにかく、プログラミングが得意なあなたに手伝ってもらえたら、テンション上がるにゃー！
それじゃあ問題、行っくにゃ〜！
 

"
p01923,JAG Practice Contest,"acm-icpc ob/ogの会 (japanese alumni group; jag) には模擬コンテストで出題する問題のストックが n 問あり，それぞれの問題は 1 から n の整数で番号付けられている．
それぞれの問題について難易度評価と推薦投票が行われており，問題 i の難易度は di で，推薦度は vi である．
また，難易度の最大値は m である．
 次のコンテストでは，難易度 1 から m の問題をそれぞれ 1 問ずつ，計 m 問出題する予定である．
コンテストのクオリティを上げるために推薦度の合計が最大になるように問題を選定したい．
ただし，jag の作問力はすさまじいので，各難易度の問題が最低でも 1 問以上ずつあると仮定してよい．
 あなたの仕事は，条件を満たすように問題を選定したときの推薦度の和の最大値を求めるプログラムを作成することである．
 

"
p01924,Coastline,"海岸には毎秒波が押し寄せる．基準点 p を超えて何 m の地点まで波が押し寄せたかを，t 秒の間だけ毎秒観測し記録したデータがある．データは t 個の整数 x1, ..., xt からなり，各 i  (1 &le; i &le; t) に対し，観測を始めてから i 秒後には地点 p からちょうど xi m の地点までの波が押し寄せ，海水に浸っていたことを表す．
 海岸は，最後に海水に浸ってから d 秒後に乾くことが分かっている．ここで，乾くまでの時間は最後に海水に浸った時間のみに依存し，それ以前に波に浸っていた回数や時間には依存しないことに注意せよ．
 基準点 p から，陸の方向に距離 l だけ離れた地点が，観測を開始してから 1 秒後と t 秒後の間に少なくとも何秒間濡れていたかを求めよ．ただし，時刻 0 で海岸は乾いていたことがわかっている．
 以下に，sample input 第1ケースの図を示す．
 図b1: sample input 第1ケースの場合
 


"
p01925,Quiz,"あなたはクイズ番組のディレクターである．
クイズ番組には解答者として n 人が出演予定であり，それぞれ 1 から n まで番号付けられている．
 問題は m+1 問出題する予定であり，それぞれの問題は 1 から m+1 まで番号付けられている．
問題は番号順に出題され，それぞれ早押しで最初に正解した人にのみ得点が入る．i 問目の問題の得点は整数 si である．
m+1 問目の問題を終えた時点で総合得点が最大の人が優勝する．
ただし，最大得点の人が複数人存在する場合，優勝者は存在しない．
 現在 m 問目まで配点を決めたので，m+1 問目の配点を決めようと考えている． 
最後の問題は，誰でも逆転できる点数にするのがクイズ番組のお約束である． 
しかし，その場で解答者たちの総合得点を見て問題の点数を決めると，解答者たちのやる気を削ぐ可能性がある．そこで， どんな点数状況でも全員に逆転のチャンスがあるような点数設定をあらかじめ考えることにした．
 幸い，1 から m 問目まではそれぞれ正解する可能性がある解答者が分かっている．m+1 問目は全員が正解する可能性のある問題である．正解する可能性がある解答者の中で，早押しで正解した1名のみが問題の得点 si を得る．問題への解答は正解した解答者が現れた時点で締め切られ，同じ解答者は何度でも解答を行うことができるため，ある問題の得点 si を誰も得られない場合は考慮しなくてよい．また，複数人の解答者がある問題の得点 si を重複して獲得したり，得点を分け合ったりすることもない． 
 各問の配点と正解可能な解答者の情報を基に， 起こりうるどのような得点状況においても，最後の問題を正解すれば必ず誰でも優勝できるように最後の問題の点数 sm+1 を設定したい． 条件を満たす整数 sm+1 として最小の値を求めよ．
 

"
p01926,Game Balance,"あなたは冒険ゲームを作成している．このゲームのプレイヤーは，主人公を操作して敵モンスターを倒し，主人公のレベルを上げることで冒険を進めていく．主人公の初期レベルは 1 である．
 このゲームには n 種類の敵モンスターが用意されており，弱い順で i 番目の種類の敵モンスターの強さは si である．主人公が 1 回の戦闘を行うときには，次に戦う敵モンスターの種類を自由に選び，ちょうど 1 体の敵モンスターと戦闘を行う．主人公は同じ種類の敵モンスターと何回でも戦うことができ，何回でも倒すことができる．
 あなたはいま，このゲームのバランスを調整するために，あるパラメーター x を決めようとしている．パラメーター x は正の整数であり下記のように使われる．
  主人公のレベルが l のとき，強さ si が l+x 未満の敵は倒せるが，それより強い敵モンスターは倒せない．
  主人公のレベルが l のとき，強さ si の敵を倒すと max(1, x-|l-si|) だけ主人公のレベルが上がる．
 このゲームは，最も強い（n 種類目の）敵モンスターを初めて倒したときにゲームクリアとなる．あなたは，ゲームクリアまでに必要となる戦闘の回数が最低でも m 回以上となるようにパラメーター x を決めたいと考えている．ただし，敵モンスターの強さの設定によっては，x をどのように設定しても m 回未満の戦闘回数でゲームクリアできてしまうか，ゲームをクリアできなくなってしまう場合があることに注意せよ．
 パラメーター x を決めるとき，上記の条件を満たす範囲で最大のパラメーター値 xmax を計算するプログラムを作ってほしい．
 


"
p01927,Industrial Convex Pillar City,"凸多角形柱工業都市 (industrial convex pillar city, icpc) はいくつかの凸多角形柱の形状をした建物からなる街である．あなたはこの街の中を現在地 s から目的地 t に向けて歩こうとしている．今日は日差しが強いので，出来る限りひなたを通らずに目的地へ向かいたい．あなたが立っている地点と太陽を一直線に結んだ線上に建物がある場合，あなたは建物の陰にいるので日差しを受けずにすむ．また，この街の建物の外周には全てひさしが付いているので，建物の外周に沿って歩いている間は，日が当たる縁に沿って歩いても日差しを受けることはない．あなたは建物の内部以外はこの街をどこでも自由に歩くことができる．
 もっとも日差しを受けないように現在地から目的地まで歩いた時の，ひなたを歩く距離を出力するプログラムを作成しなさい．
 図e1: 第1インプットの場合
   図e2: 第2インプットの場合
   図e3: 第3インプットの場合
   



"
p01928,Matryoshka Doll,"マトリョーシカはロシアの民芸品として有名な人形である．
マトリョーシカは上下に分割でき，開くと中により小さい別の人形が入っている．
現れた小さい人形を開くとさらに小さい人形が入っている，というような入れ子構造になっている．
 あなたは旅行先で珍しい形のマトリョーシカを見つけ，n 体の人形を購入した．
i 番目の人形の形状は，xi &times; yi &times; zi の直方体である．
 ひとしきりマトリョーシカを鑑賞したあなたは，マトリョーシカを仕舞おうとしている．
その前に，いくつかの人形を別の人形に格納することによって必要なスペースを減らしたい．
人形を格納する際には，まだ中にひとつも人形を格納していない人形にだけ，他の人形をひとつ格納できる．
ただし，直接的に格納される人形についてだけ数えるものとし，中に人形が入っている人形を別の人形に格納することはできる．
 収納された人形は，外部から見えない状態になる．
ただし，以下の条件を満たさなければならない．
  人形は回転してよいが，直方体のそれぞれの辺は，他方の直方体のいずれかの辺に平行
  回転後，対応する辺同士の長さそれぞれについて，収納される側の人形の長さの方が短い
  1 個の人形の中に直接収納できる人形の数は高々 1 個
 押入れの容積は限られているので，外部から見えている人形の体積の和を最小化したい．
あなたの仕事は，人形を収納する操作を任意の回数繰り返して達成できる，外部から見えている人形の体積の和の最小値を求めるプログラムを作成することである．
 


"
p01929,Room Assignment,"n+1 部屋が1列に並んだ新築の建物がある．各部屋はすべて1人用の住居であり，現在どの部屋も空室だが，来月から新たに n 人がここに住む予定である．したがって彼らが暮らし始めると1室は空き部屋になる．
 あなたは大家として，彼らの嗜好に合わせた部屋割りを多く提案したいと考えている．ここで部屋割りとは，それぞれの人がどの部屋に住むのかを与える表である．例えば n = 3 のとき，「1人目は4号室，2人目は1号室，3人目は2号室」がありうる一つの部屋割りである．
 もちろん，ありうるすべての部屋割りを提案すれば話は早いが，それでは提案の意味がないため，大家の手間と住人の嗜好を考慮していくつか制約を設ける．
 まず，提案された部屋割りの一つに彼らが住み始めてから，「別の提案された部屋割りの方に変更したい」と言われるかもしれない．この建物は新築であり，彼らはまだ誰も入居していない新しい部屋が好みであることがわかっているので，単純に誰か1人が空き部屋へ引っ越しをするだけで提案された別の部屋割りに変更できるときに限りこれが起こりうる．しかし大家として，そういう面倒ごとは避けたいため，このような変更が許されないよう，提案する部屋割りをうまく調整したい．
つまり，提案する部屋割りの集合は次を満たさなければならない．
「任意の二つの異なる提案された部屋割り a, b に対して，部屋割り a の空き部屋に誰か1人を移しても部屋割り b にならない」
 次に，これから住む n 人にはそれぞれちょうど1人好ましい人がいることがわかっている．したがって，提案するすべての部屋割りは，すべての人に対して好ましい人が隣に住むような部屋割りにする．
 これらの条件を満たす部屋割りの集合で，最大の集合の大きさはいくらだろうか？1,000,000,007 で割った余りを求めてほしい．
 


"
p01930,Big Maze,"あなたは jumbo amusement garden，略して「jag」と呼ばれる巨大な遊園地で働いている．この遊園地の敷地は広大で，アトラクションもことごとく巨大なものが設置される．
 この度jagに，新たな巨大迷路アトラクション「big maze」が導入されることになった．
big maze の形状は，平面図で見ると，縦横共に n マスの正方形状の迷路 m 個を，隣接する左右の辺同士を繋ぎ合わせ，縦 n マス，横 nm マスの長方形状になる予定である．
 m 個の迷路を左からどの順番で繋ぎ合わせるかはあらかじめ決まっているが，隣り合う迷路のどの辺同士を繋ぎ合わせるかは未定である．
m 個の迷路を繋ぎ合わせる前に，各迷路を90 度回転させる事が出来る．回転は何度でも行うことができ．回数は迷路毎に別々に決めてよい．回転させない迷路があってもかまわない．
 各マスは通行可能な「通路」か，通行不可能な「壁」のいずれかであり，big maze の内部での移動は，上下左右の 4 方向に隣接する通路のマスに限り可能である．
 big maze の左端の n 箇所に位置し，かつ通路であるマスをスタート地点とし，右端の n 箇所に位置し，かつ通路であるマスをゴール地点とする．
 m 個の迷路を繋ぎ合わせる辺の選び方によっては，スタート地点やゴール地点が複数存在する場合や，存在しない場合もあり得る．
また，スタート地点からゴール地点への経路が複数存在する場合や，存在しない場合もあり得る．
 あなたの仕事は， 左から繋ぎ合わせる順番があらかじめ決まっている m 個の迷路を適切に回転させ，繋ぎ合わせる辺を上手く選ぶことで，スタート地点からゴール地点へ通路を移動して到達可能な縦 n マス，横 nm マスの長方形状の big maze を作ることが出来るか確認することである．
 


"
p01931,Check answers,"
aorイカちゃんはテストに合格するため勉強しています。
 
aorイカちゃんは、 $n$ 問、問題を解きました。
その後、解いた問題の丸付けを以下の手順で行います。
 解答の正誤を確認する。 解答が正しい場合はマル印、誤っていた場合はバツ印を解答用紙に書き込む。 
解答が $2$ 問連続で誤りであるとわかった瞬間、テストに不合格になってしまう恐怖から、aorイカちゃんは失神してしまいます。そして、それ以降丸付けを行うことはできません。
 
失神は手順 $1$ と $2$ の間で起こります。
 
aorイカちゃんが解いた問題の数を表す整数 $n$ と、解答の正誤を表した長さ $n$ の文字列 $s$ が与えられます。
文字列は 'o' と 'x' からなり、 'o' は解答が正しく、 'x' は解答が誤りであることを表しています。
 $i$ 文字目が $i$ 問目の正誤を表しており、aorイカちゃんは $1$ 問目から順番に丸付けを行います。
 
aorイカちゃんが正誤を書き込めた問題数を出力してください。
 

"
p01932,All Japan Association of Return home,"株式会社 aor (association of return home)には $n$ 人の社員がいる。 
    社員 $i$ はエレベーターを使って $1$ 階に下りたいと考えており、時刻 $t_i$ に $f_i$ 階のエレベーター前にやってくる。あなたは時刻 $0$ に $1$ 階に $1$ 基だけあるエレベーターを遠隔操作し、すべての社員を $1$ 階に送ることにした。エレベーターには $d$ 人までしか乗せられない。
    エレベーターは単位時間に一階分移動するかその場にとどまる事ができる。 社員 $i$ はエレベーターが時刻 $t_i$ に $f_i$ 階にあって、自分が乗っても定員を超過しないときのみエレベーターに乗る。 時刻 $t_i$ にエレベーターに乗れないとき、階段で $1$ 階におりてしまう。 なお、乗り降りにかかる時間は無視できる。
   それぞれの社員がエレベーターに乗っている時間の合計の最小値を求めよ。 ただし、エレベーターで $1$ 階へ運べない人が $1$ 人でもいる場合は $-1$ を出力せよ。 

  "
p01933,Displayed tweets,"aorイカちゃんが利用するsnsであるイカったーでは、投稿のことをツイートと呼ぶ。 そして、イカったーでは、ツイートへの返信が多くなると視認性が悪くなることが懸念されるため、あるツイートが次の規則のいずれかを満たすときに画面にそのツイートを表示する仕様になっている。 規則１. どのツイートへも返信していない 規則２. どのツイートからも返信されていない 規則３. 規則２が適用されたツイートから返信先を順に辿ったとき、 $k$ 回未満で辿り着ける なお、同じツイートは重複して表示されることはない。 いま、 $n$ 個のツイートがあり、 $a_i$ が $0$ のとき $i$ 番目のツイートは返信でないツイートで、 $a_i$ が $0$ でないとき $i$ 番目のツイートは $a_i$ 番目のツイートへの返信のツイートである。 画面に表示されるツイート数を答えよ。 

  "
p01934,Dimension travel,"
 次元が $1$ 次元から $n$ 次元まで存在する。 
aorイカちゃんは次元間を移動できる。
具体的には、aorイカちゃんが $i$ 次元にいるとき、 $j$ 次元( $i > j$ )には自由に移動する事ができるが、 $k$ 次元( $i < k$ )に移動するには魔法を使う必要がある。
 
aorイカちゃんは $m$ 種類の魔法が使え、 $1, 2, \dots, m$ と番号が振られている。
 $i$ 番目の魔法では $a_i$ 次元から $b_i$ 次元に移動できる。
これは $a_i$ 次元にいるときしか使えない。
 
 $i$ 次元に行くと次元特有の「次元の呪い」を受ける。
 $i$ 次元の「次元の呪い」により、aorイカちゃんは $d_i$ ダメージを負う。
 $i$ 次元の「次元の呪い」を受けた場合、その後ずっと、 $j$ 次元( $i > j$ )の「次元の呪い」は受けない。
  
aorイカちゃんが $s$ 次元から $t$ 次元に移動するとき、 負うダメージの合計の最小値を求めよ。
ただし、aorイカちゃんは既に $s$ 次元の「次元の呪い」は受けており、そのダメージは考えないものとする。
また、aorイカちゃんは $t$ 次元に行けることが保証されている。
 



"
p01935,Protect from the enemy attack,"島が $v$ 島あり、それぞれ $0, 1, ..., v-1$ と番号がついている。橋が $e$ 本あり、それぞれ $0, 1, ..., e-1$ と番号がついている。 $i$ 番目の橋は島 $s_i$ と島 $t_i$ にかかってあり、幅は $c_i$ である。 
    島 $0$ に基地があるaorイカちゃん軍団 (通称イカ団) は規模が弱小であるため、島 $v-1$ にあるsosu-usa軍団 (通称そすうさ団) にいつもやられっぱなしである。ある日、イカ団は「そすうさ団が明日攻めてくる」との情報を得た。そすうさ団の基地から大人数のそすうさ団の部下が橋を渡って島を移動し、部下が一人でもイカ団の基地にたどり着かれるとイカ団は滅びてしまう……。
   
  そこでイカ団は橋に通行止めテープを張ることで橋を通れないようにし、危機を免れようとした。使うテープの長さは通行止めにした橋の幅の総和である。また、そすうさ団の部下全員が必ずある一本の幅 $1$ の橋を通る場合、イカ団がそこで待ち伏せすることで、そすうさ団を通れなくすることができる。
   
    保持しているテープの長さは $10^4$ である。今後のことも考え、消費するテープの量はなるべく少なくしたい。そすうさ団の部下がイカ団の基地にたどり着けないようにするために使うテープの長さの最小値を求めよ。ただし、テープの長さが足りずどうしても攻められてしまう合は
    $-1$ を出力せよ。
   

  "
p01936,Steps,"
aorイカちゃんは株式会社aorの視察に訪れた。
株式会社aorは $n$ 階建てのビルであり、地下階は存在しない。
aorイカちゃんは $1$ 階から視察を開始し、ちょうど $m$ 回移動することにした。
$1$ 回の移動で $i$ 階から $i + 1$ 階、あるいは $i - 1$ 階に移動することができる。
ただし、 移動先が $0$ 階や $n + 1$ 階となるように移動することはできない。
 
aorイカちゃんが全ての階に一度以上訪れる移動方法の通り数を $1000000007 (= 10^9 + 7)$ で割った余りを求めよ。
なお、 $1$ 階にはすでに訪れたものとする。
 

"
p01937,Cryptex,"aorイカちゃんは自分の宝箱にダイヤル式の鍵をかけている。 鍵には $n$ 個のシリンダーがついている。 あらかじめ設定しておいた $n$ 個の数の並びからなる暗証番号 $t$ と、シリンダーが示す数列が同じであれば開錠することができる。 シリンダーには、 $0$ から $m-1$ までの $m$ 種類の数が同じ向きに順に刻まれており、最初はすべてのシリンダーが $0$ を示している。 鍵は特別製であり、シリンダーを一つずつ回すことができない。任意のシリンダーを二つ選び、それらを同時に動かさなければならない。 一回シリンダーを回すとは、以下のように定義される。 シリンダーを二つ選ぶ。ただし、同じシリンダーは選べない。 選んだシリンダーを二つとも順方向、あるいは二つとも逆方向に回す。順方向に回すとは数を $1$ 増やすことであり、逆方向に回すとは数を $1$ 減らすことである。ただし、 $0$ を示している状態で逆方向に回すと $m - 1$ を示し、 $m - 1$ を示している状態で順方向に回すと $0$ を示す。 aorイカちゃんのために、鍵を開けるために必要なシリンダーの最小の回転数を求めよ。ただし、開けることができない場合は $-1$ を出力せよ。 


  "
p01938,,"26 マスの円環状のボードがあり、各マスには大文字のアルファベット 1 文字が、アルファベット順に時計回りに書かれています。すなわち、 'a' のマスの時計回り隣は 'b' のマスで、 'b' のマスの隣は 'c' のマスで、・・・、 'z' のマスの時計回り隣は 'a' のマスです。 また、ボードには 'a' のマスに駒が 1 つ置かれています。 
あなたは、文字列 s を受け取り、 s の先頭から 1 文字ずつ見て駒を操作します。 i 回目の操作は以下のようになります。
 その時点で駒のあるマスから  s の i 文字目のアルファベットのマスを目指して、駒を時計回りに 1 マスずつ移動させる。このとき少なくとも 1 マスは移動するとする。したがって、例えば 'a' のマスから 'a' のマスに移動する際は、ボードを 1 周しなくてはならない。 上記の操作の結果、駒が 'a' のマスを何回踏んだかを答えてください。なお「 'a' のマスを踏む」とは、 'z' のマスから 'a' のマスに駒を進めることを言います。 

"
p01939,chan and Integer Sequences,"
えびちゃんは数列が好きです。中でも等差数列が特に好きです。
今回は以下の条件を満たす数列を作ることにしました。
  長さ n の等差数列である  数列の i 番目の要素を s_i と定める時、全ての s_i (1 \leq i \leq n) が 0 \leq s_i \leq m を満たす整数である 
上の条件を満たすような数列はいくつあるでしょうか？
ただし答えは非常に大きくなることがあるので、 10^9 + 7 で割った余りを出力してください。
 

"
p01940,Unique Subsequence,"ある日えびちゃんは、机の上に長さ n のテキスト文字列 t と長さ m のパターン文字列 p  (m \leq n) が置かれていることに気づきました。えびちゃんは、文字列に現れる「たったひとつの部分列」が大好きであるため、 p が t のたったひとつの部分列であるかどうかをすぐに調査し始めました。 p が t のたったひとつの部分列であるという性質は以下のように表されます。ここで、文字列 x の i 文字目を x_i と書きます。  長さ m の数列 s = (s_1, ..., s_m) (ただし、 s_1 &lt; s_2 &lt; ... &lt; s_m) で、各 i (i = 1, ..., m) について t_{s_i} = p_i である数列 s が一意に定まる。 調査を始めてから数時間、えびちゃんは文字列をぐっと睨んでいましたが、文字列が長すぎるために疲れてしまったようです。それを見かねたあなたは、えびちゃんを手伝ってあげることにしました。えびちゃんのために、 p が t のたったひとつの部分列であるならば “yes” を、そうでないならば “no” を出力するプログラムを作成してください。 

"
p01941,Indecision,"えびちゃんは最近ギャルゲーにハマっていて、今の目標は二人のヒロインを同時に攻略することです。 えびちゃんはいくつかあるイベントを利用してヒロインからの好感度を高めることができますが、各イベントの対象として選べるヒロインはどちらか一人のみです。しかし、えびちゃんは選ばなかったヒロインに対してもフォローを忘れないので、もう片方のヒロインからの好感度もある程度は高めることができます。ただし、イベントには費用がかかるため、必ずしも全てのイベントを行えるわけではありません。 さて、優柔不断なえびちゃんは各イベントをどちらのヒロインと行うか（またはどちらとも行わないか）で迷っています。えびちゃんは片方のヒロインからの好感度だけが高くても他方が低ければ意味がないと思っているので、好感度が高くない方のヒロインからの好感度が最大となる選択が理想です。 このとき、好感度が高くない方のヒロインからの好感度の最大値を求めてください。すなわち、イベントおよび対象ヒロインの選択の結果、ふたりのヒロインからの好感度をそれぞれ a、b としたときの、min\{a, b\} として考えうる値の最大値を求めてください。ここで、行うことにしたイベントに掛かる費用の合計が予算を超えてはいけません。また、各ヒロインからの好感度の初期値は 0 です。 


"
p01942,Master and Eater,"つたさんはたい焼きを作るのがとても上手い。えびちゃんはそんなつたさんが作るたい焼きが大好きだ。　2 人は毎週たい焼きを作って食べて幸せに過ごしているが、たい焼きを作っているそばで食べ盛りのえびちゃんにつまみ食いをされてしまうのがつたさんの最近の悩みだ。 学校祭でたい焼きを作ることになったつたさんは、いつものようにえびちゃんにつまみ食いされていたら売上が心配なので、自分が注目している範囲のたい焼きの様子を知ることができればいいなと思った。学校祭が成功するように、つたさんを助けてあげよう。 

"
p01943,Multiplication Is Interesting,"男子高生の難波列くんは、彼女の誕生日に数列をプレゼントしようと考えている。彼女は掛け算が大好きな女の子なので、難波くんは彼女にできるだけ多くの掛け算を楽しんてもらえるような数列をプレゼントしたいと思っている。しかし、計算結果が 2^{20} を超える値になると彼女の機嫌が途端に悪くなってしまう（通常の人類は 2^{20}という膨大な数を計算できないため、これでも彼女は随分と寛大な人であると言える）。彼女の機嫌を損なわないように、できるだけ多くの掛け算を楽しんでもらえる数列を難波くんが作ったので、あなたの仕事はその数列が彼女を十分に楽しませられるか検証するプログラムを作ることである。つまり、あなたの仕事は数列の連続する部分列の中で、部分列の総積が k を超えない最長の部分列の長さを答えるプログラムを作ることである。 

"
p01944,Almost Infinite Glico,"n 個のマスが円環状に並んでいるフィールドがあります。 i 番目 (1 \leq i \leq n-1) のマスの 1 つ先は、 i+1 番目のマスになります。ただし、 i = n の場合、その 1 つ先は 1 番目のマスになります。 あなたが最初にいるマスは 1 番目のマスです。そこから以下のルールに従って、じゃんけんを k 回続けて行います。このとき、あなたと相手は特殊なじゃんけんを会得しているので、じゃんけんの勝ち方が m 通りあります。  相手とじゃんけんを行い、あなたが相手に勝ったとき、今出した手、すなわち勝ち方 i に応じたマス数 p_i だけ進みます。負けたときはその場に留まります。 k 回のじゃんけんを終えたあとに、あなたが i 番目のマスにいる場合の数を 1,000,000,007 で割った余りを、それぞれのマスについて求めてください。ここで 2 つの場合が異なるとは、 k 回のじゃんけんの各回のうち負けた回が一度でも異なる、または勝ち方が異なる回が一度でも存在することを言います。勝ち方も区別することに注意してください。また、それぞれの勝ち方について、発生する可能性が全くないものは存在しないこととします。 

"
p01945,Star in Parentheses,"
  you are given a string $s$, which is balanced parentheses with a star symbol '*' inserted.
 
  any balanced parentheses can be constructed using the following rules:
 an empty string is balanced. concatenation of two balanced parentheses is balanced. if $t$ is balanced parentheses, concatenation of '(', $t$, and ')' in this order is balanced. 
  for example, '()()' and '(()())' are balanced parentheses. ')(' and ')()(()' are not balanced parentheses.
 
  your task is to count how many matching pairs of parentheses surround the star.
 
let $s_i$be the $i$-th character of a string $s$. the pair of $s_l$ and $s_r$ ($l (', $s_r$ is ')' and the surrounded string by them is balanced when ignoring a star symbol.
 

"
p01946,Slimming Plan,"
  chokudai loves eating so much. however, his doctor akensho told him that he was overweight, so he finally decided to lose his weight.
 
  chokudai made a slimming plan of a $d$-day cycle. it is represented by $d$ integers $w_0, ..., w_{d-1}$. his weight is $s$ on the 0-th day of the plan and he aims to reduce it to $t$ ($s > t$). if his weight on the $i$-th day of the plan is $x$, it will be $x + w_{i\%d}$ on the $(i+1)$-th day. note that $i\%d$ is the remainder obtained by dividing $i$ by $d$. if his weight successfully gets less than or equal to $t$, he will stop slimming immediately.
 
  if his slimming plan takes too many days or even does not end forever, he should reconsider it.
 
  determine whether it ends or not, and report how many days it takes if it ends.
 

"
p01947,Ninja Map,"
  intersections of crossing path city are aligned to a grid. there are $n$ east-west streets which are numbered from 1 to $n$, from north to south. there are also $n$ north-south streets which are numbered from 1 to $n$, from west to east. every pair of east-west and north-south streets has an intersection; therefore there are $n^2$ intersections which are numbered from 1 to $n^2$.
 
  surprisingly, all of the residents in the city are ninja. to prevent outsiders from knowing their locations, the numbering of intersections is shuffled.
 
you know the connections between the intersections and try to deduce their positions from the information. if there are more than one possible set of positions, you can output any of them.
 

"
p01948,Janken Master,"
  you are supposed to play the rock-paper-scissors game. there are $n$ players including you.
 
  this game consists of multiple rounds. while the rounds go, the number of remaining players decreases. in each round, each remaining player will select an arbitrary shape independently. people who show rocks win if all of the other people show scissors. in this same manner, papers win rocks, scissors win papers. there is no draw situation due to the special rule of this game: if a round is tied based on the normal rock-paper-scissors game rule, the player who has the highest programming contest rating (this is nothing to do with the round!) will be the only winner of the round. thus, some players win and the other players lose on each round. the losers drop out of the game and the winners proceed to a new round. they repeat it until only one player becomes the winner.
 
each player is numbered from $1$ to $n$. your number is $1$. you know which shape the other $n-1$ players tend to
show, that is to say, you know the probabilities each player shows rock, paper and scissors. the $i$-th player shows rock with $r_i\%$ probability, paper with $p_i\%$ probability, and scissors with $s_i\%$ probability. the rating of programming contest of the player numbered $i$ is $a_i$. there are no two players whose ratings are the same. your task is to calculate your probability to win the game when you take an optimal strategy based on each player's tendency and rating.
 

"
p01949,Route Calculator,"
  you have a grid with $h$ rows and $w$ columns. $h + w$ is even. we denote the cell at the $i$-th row from the top and the $j$-th column from the left by ($i, j$). in any cell ($i, j$), an integer between $1$ and $9$ is written if $i+j$ is even, and either '+' or '*' is written if $i+j$ is odd.
 
you can get a mathematical expression by moving right or down $h + w - 2$ times from ($1, 1$) to ($h, w$) and concatenating all the characters written in the cells you passed in order. your task is to maximize the calculated value of the resulting mathematical expression by choosing an arbitrary path from ($1, 1$) to ($h, w$). if the maximum value is $10^{15}$ or less, print the value. otherwise, print $-1$.
 

"
p01950,Endless BFS,"
mr. endo wanted to write the code that performs breadth-first search (bfs), which is a search algorithm to explore all vertices on an undirected graph. an example of pseudo code of bfs is as follows:
 
however, mr. endo apparently forgot to manage visited vertices in his code. more precisely, he wrote the following
code:
 
you may notice that for some graphs, mr. endo's program will not stop because it keeps running infinitely. notice that it does not necessarily mean the program cannot explore all the vertices within finite steps. see example 2 below for more details.your task here is to make a program that determines whether mr. endo's program will stop within finite steps for a given graph in order to point out the bug to him. also, calculate the minimum number of loop iterations required for the program to stop if it is finite.
 

"
p01951,Sum Matrix,"
  you received a card at a banquet. on the card, a matrix of $n$ rows and $m$ columns and two integers $k$ and $s$ are written. all the elements in the matrix are integers, and an integer at the $i$-th row from the top and the $j$-th column from the left is denoted by $a_{i,j}$.
 
  you can select up to $k$ elements from the matrix and invert the sign of the elements. if you can make a matrix such that there is no vertical or horizontal contiguous subsequence whose sum is greater than $s$, you can exchange your card for a prize.
 
your task is to determine if you can exchange a given card for a prize.
 

"
p01952,Tiny Room,"
  you are an employee of automatic cleaning machine (acm) and a member of the development team of intelligent circular perfect cleaner (icpc). icpc is a robot that cleans up the dust of the place which it passed through.
 
  your task is an inspection of icpc. this inspection is performed by checking whether the center of icpc reaches all the $n$ given points.
 
however, since the laboratory is small, it may be impossible to place all the points in the laboratory so that the entire body of icpc is contained in the laboratory during the inspection. the laboratory is a rectangle of $h \times w$ and icpc is a circle of radius $r$. you decided to write a program to check whether you can place all the points in the laboratory by rotating and/or translating them while maintaining the distance between arbitrary two points.
 

"
p01953,Librarian's Work,"
  japanese animal girl library (jag library) is famous for a long bookshelf. it contains $n$ books numbered from $1$ to $n$ from left to right. the weight of the $i$-th book is $w_i$.
 
one day, naughty fox jiro shuffled the order of the books on the shelf! the order has become a permutation $b_1, ..., b_n$ from left to right. fox hanako, a librarian of jag library, must restore the original order. she can rearrange a permutation of books $p_1, ..., p_n$ by performing either operation a or operation b described below, with
arbitrary two integers $l$ and $r$ such that $1 \leq l < r \leq n$ holds.
							  
  operation a:
 a-1. remove $p_l$ from the shelf. a-2. shift books between $p_{l+1}$ and $p_r$ to $left$. a-3. insert $p_l$ into the $right$ of $p_r$. 
  operation b:
 b-1. remove $p_r$ from the shelf. b-2. shift books between $p_l$ and $p_{r-1}$ to $right$. b-3. insert $p_r$ into the $left$ of $p_l$. 
this picture illustrates the orders of the books before and after applying operation a and b for $p = (3,1,4,5,2,6), l = 2, r = 5$.
 
since the books are heavy, operation a needs $\sum_{i=l+1}^r w_{p_i} + c \times (r-l) \times w_{p_l}$ units of labor and operation b needs $\sum_{i=l}^{r-1} w_{p_i} + c \times (r-l) \times w_{p_r}$ units of labor, where $c$ is a given constant positive integer.
 
hanako must restore the initial order from $b_i, ..., b_n$ by performing these operations repeatedly. find the minimum sum of labor to achieve it.
 


"
p01954,Sum Source Detection,"
  jag members began a game with integers. the game consists of $n + m + 1$ players: $n$ open number holders, $m$ secret number holders, and one answerer, you.
 
  in the preparation, an integer $k$ is told to all $n + m + 1$ players. $n + m$ number holders choose their own integers per person under the following restrictions:
 each holder owns a positive integer. the sum of all the integers equals $k$. every integer owned by secret number holders is strictly less than any integers owned by open number holders. 
  after the choices, $n$ open number holders show their integers $o_1, ..., o_n$ to the answerer while secret number holders do not.
 
the game has $q$ rounds. at the beginning of each round, $m$ secret number holders can change their numbers under
the above restrictions, while open number holders cannot. then $n + m$ number holders select part of members among
them arbitrary, calculate the sum $x$ of the integers owned by the selected members, and tell $x$ to the answerer. for
each round, the answerer tries to identify the definitely selected open number holders from the information $k$, $x$, and $o_1, ..., o_n$: the answerer will get points per actually selected open number holder in the answer. on the other hand, if the answer contains at least one non-selected member, you lose your points got in the round. thus, the answerer, you, must answer only the open number holders such that the holders are definitely selected.
 
your task in this problem is to write a program to determine all the open number holders whose integers are necessary to the sum for each round in order to maximize your points.
 

"
p01955,Permutation Period,"
  you have a permutation $p$ of $n$ integers. initially $p_i = i$ holds for $1 \leq i \leq n$. for each $j$ ($1 \leq j \leq n$), let's denote $p_{j}^0 = j$ and $p_{j}^k = p_{p_j}^{k-1}$ for any $k\geq 1$. the period of $p$ is defined as the minimum positive integer $k$ which satisfies $p_{j}^k = j$ for every $j$ ($1 \leq j \leq n$).
 
  you are given $q$ queries. the $i$-th query is characterized by two distinct indices $x_i$ and $y_i$. for each query, swap $p_{x_i}$ and $p_{y_i}$ and then calculate the period of updated $p$ modulo $10^9 + 7$ in the given order.
 
it can be proved that the period of $p$ always exists.
 

"
p01956,Window,"
in the building of jewelry art gallery (jag), there is a long corridor in the east-west direction. there is a window on the north side of the corridor, and $n$ windowpanes are attached to this window. the width of each windowpane is $w$, and the height is $h$. the $i$-th windowpane from the west covers the horizontal range between $w\times(i-1)$ and $w\times i$ from the west edge of the window.
 figure a1. illustration of the window 
  you received instructions from the manager of jag about how to slide the windowpanes. these instructions consist of $n$ integers $x_1, x_2, ..., x_n$, and $x_i \leq w$ is satisfied for all $i$. for the $i$-th windowpane, if $i$ is odd, you have to slide $i$-th windowpane to the east by $x_i$, otherwise, you have to slide $i$-th windowpane to the west by $x_i$.
 
  you can assume that the windowpanes will not collide each other even if you slide windowpanes according to the instructions. in more detail, $n$ windowpanes are alternately mounted on two rails. that is, the $i$-th windowpane is attached to the inner rail of the building if $i$ is odd, otherwise, it is attached to the outer rail of the building.
 
before you execute the instructions, you decide to obtain the area where the window is open after the instructions.
 

"
p01957,Tournament Chart,"
  in 21xx, an annual programming contest, japan algorithmist grandprix (jag) has become one of the most popular mind sports events.
 
  jag is conducted as a knockout tournament. this year, $n$ contestants will compete in jag. a tournament chart is represented as a string. '[[a-b]-[c-d]]' is an easy example. in this case, there are 4 contestants named a, b, c, and d, and all matches are described as follows:
 match 1 is the match between a and b. match 2 is the match between c and d. match 3 is the match between [the winner of match 1] and [the winner of match 2]. 
  more precisely, the tournament chart satisfies the following bnf:
 &lt;winner&gt; ::= &lt;person&gt; | ""["" &lt;winner&gt; ""-"" &lt;winner&gt; ""]"" &lt;person&gt; ::= ""a"" | ""b"" | ""c"" | ... | ""z"" 
  you, the chairperson of jag, are planning to announce the results of this year's jag competition. however, you made a mistake and lost the results of all the matches. fortunately, you found the tournament chart that was printed before all of the matches of the tournament. of course, it does not contains results at all. therefore, you asked every contestant for the number of wins in the tournament, and got $n$ pieces of information in the form of ""the contestant $a_i$ won $v_i$ times"".
 
now, your job is to determine whether all of these replies can be true.
 

"
p01958,Factor Prime,"
  a positive integer is called a ""prime-factor prime"" when the number of its prime factors is prime. for example, $12$ is a prime-factor prime because the number of prime factors of $12 = 2 \times 2 \times 3$ is $3$, which is prime. on the other hand, $210$ is not a prime-factor prime because the number of prime factors of $210 = 2 \times 3 \times 5 \times 7$ is $4$, which is a composite number.
 
in this problem, you are given an integer interval $[l, r]$. your task is to write a program which counts the number of prime-factor prime numbers in the interval, i.e. the number of prime-factor prime numbers between $l$ and $r$, inclusive.
 

"
p01959,Revenge of the Broken Door,"
  the jag kingdom consists of $n$ cities and $m$ bidirectional roads. the $i$-th road ($u_i, v_i, c_i$) connects the city $u_i$ and the city $v_i$ with the length $c_i$. one day, you, a citizen of the jag kingdom, decided to go to the city $t$ from the city $s$. however, you know that one of the roads in the jag kingdom is currently under construction and you cannot pass the road. you don't know which road it is. you can know whether a road is under construction only when you are in either city connected by the road.
 
your task is to minimize the total length of the route in the worst case. you don't need to decide a route in advance of departure and you can choose where to go next at any time. if you cannot reach the city $t$ in the worst case, output '-1'.
 

"
p01960,Tree Separator,"
you are given a tree $t$ and an integer $k$. you can choose arbitrary distinct two vertices $u$ and $v$ on $t$. let $p$ be the simple path between $u$ and $v$. then, remove vertices in $p$, and edges such that one or both of its end vertices is in $p$ from $t$. your task is to choose $u$ and $v$ to maximize the number of connected components with $k$ or more vertices of $t$ after that operation.
 

"
p01961,RPG Maker,"
you are planning to create a map of an rpg. this map is represented by a grid whose size is $h \times w$. each cell in this grid is either '@', '*', '#', or '.'. the meanings of the symbols are as follows.
 '@': the start cell. the story should start from this cell. '*': a city cell. the story goes through or ends with this cell. '#': a road cell. '.': an empty cell. 
  you have already located the start cell and all city cells under some constraints described in the input section, but no road cells have been located yet. then, you should decide which cells to set as road cells.
 
  here, you want a ""journey"" exists on this map. because you want to remove the branch of the story, the journey has to be unforked. more formally, the journey is a sequence of cells and must satisfy the following conditions:
  the journey must contain as many city cells as possible.   the journey must consist of distinct non-empty cells in this map.  the journey must begin with the start cell.  the journey must end with one of the city cells.  the journey must contain all road cells. that is, road cells not included in the journey must not exist.  the journey must be unforked. in more detail, all road cells and city cells except for a cell at the end of the journey must share edges with the other two cells both of which are also contained in the journey. then, each of the start cell and a cell at the end of the journey must share an edge with another cell contained in the journey.  you do not have to consider the order of the cities to visit during the journey. 
initially, the map contains no road cells. you can change any empty cells to road cells to make a journey satisfying the conditions above. your task is to print a map which maximizes the number of cities in the journey.
 

"
p01962,Coin Slider,"
  you are playing a coin puzzle. the rule of this puzzle is as follows:
 
  there are $n$ coins on a table. the $i$-th coin is a circle with $r_i$ radius, and its center is initially placed at ($sx_i, sy_i$). each coin also has a target position: you should move the $i$-th coin so that its center is at ($tx_i, ty_i$). you can move coins one by one and can move each coin at most once. when you move a coin, it must move from its initial position to its target position along the straight line. in addition, coins cannot collide with each other, including in the middle of moves.
 
the score of the puzzle is the number of the coins you move from their initial position to their target position. your task is to write a program that determines the maximum score for a given puzzle instance.
 

"
p01963,Separate String,"
  you are given a string $t$ and a set $s$ of $n$ different strings. you need to separate $t$ such that each part is included in $s$.
 
  for example, the following 4 separation methods satisfy the condition when $t = abab$ and $s = \{a, ab, b\}$.
 $a,b,a,b$ $a,b,ab$ $ab,a,b$ $ab,ab$ 
your task is to count the number of ways to separate $t$. because the result can be large, you should output the remainder divided by $1,000,000,007$.
 

"
p01964,Revenge of the Endless BFS,"
mr. endo wanted to write the code that performs breadth-first search (bfs), which is a search algorithm to explore all vertices on a directed graph. an example of pseudo code of bfs is as follows:
 
  however, mr. endo apparently forgot to manage visited vertices in his code. more precisely, he wrote the following code:
 
  you may notice that for some graphs, mr. endo's program will not stop because it keeps running infinitely. notice that it does not necessarily mean the program cannot explore all the vertices within finite steps. your task here is to make a program that determines whether mr. endo's program will stop within finite steps for a given directed graph in order to point out the bug to him. also, calculate the minimum number of loop iterations required for the program to stop if it is finite. since the answer might be huge, thus print the answer modulo $10^9 +7$, which is a prime number.
   

"
p01965,Farm Village,"
  there is a village along a road. this village has $n$ houses numbered $1$ to $n$ in order along the road. each house has a field that can make up to two units of the crop and needs just one unit of the crop. the total cost to distribute one unit of the crop to each house is the summation of carrying costs and growing costs.
 the carrying cost: the cost to carry one unit of the crop between the $i$-th house and the ($i+1$)-th house is $d_i$. it takes the same cost in either direction to carry. the growing cost: the cost to grow one unit of the crop in the $i$-th house's field is $g_i$. 
  your task is to calculate the minimum total cost to supply one unit of the crop to each house.
 

"
p01966,Conveyor Belt,"
  awesome conveyor machine (acm) is the most important equipment of a factory of industrial conveyor product corporation (icpc). acm has a long conveyor belt to deliver their products from some points to other points. you are a programmer hired to make efficient schedule plan for product delivery.
 
  acm's conveyor belt goes through $n$ points at equal intervals. the conveyor has plates on each of which at most one product can be put. initially, there are no plates at any points. the conveyor belt moves by exactly one plate length per unit time; after one second, a plate is at position 1 while there are no plates at the other positions. after further 1 seconds, the plate at position 1 is moved to position 2 and a new plate comes at position 1, and so on. note that the conveyor has the unlimited number of plates: after $n$ seconds or later, each of the $n$ positions has exactly one plate.
 
    a delivery task is represented by positions $a$ and $b$; delivery is accomplished by putting a product on a plate on the belt at $a$, and retrieving it at $b$ after $b - a$ seconds ($a < b$). (of course, it is necessary that an empty plate exists at the position at the putting time.) in addition, putting and retrieving products must bedone in the following manner:
   when putting and retrieving a product, a plate must be located just at the position. that is, products must be put and retrieved at integer seconds. putting and retrieving at the same position cannot be done at the same time. on the other hand, putting and retrieving at the different positions can be done at the same time. 
    if there are several tasks, the time to finish all the tasks may be reduced by changing schedule when each product is put on the belt. your job is to write a program minimizing the time to complete all the tasks... wait, wait. when have you started misunderstanding that you can know all the tasks initially? new delivery requests are coming moment by moment, like plates on the conveyor! so you should update your optimal schedule per every new request.
   
a request consists of a start point $a$, a goal point $b$, and the number $p$ of products to deliver from $a$ to $b$. delivery requests will be added $q$ times. your (true) job is to write a program such that for each $1 \leq i \leq q$, minimizing the entire time to complete delivery tasks in requests 1 to $i$.
 

"
p01967,Many Kinds of Apples,"apple farmer mon has two kinds of tasks: ""harvest apples"" and ""ship apples"". there are n different species of apples, and n distinguishable boxes. apples are labeled by the species, and boxes are also labeled, from 1 to n. the i-th species of apples are stored in the i-th box. for each i, the i-th box can store at most c_i apples, and it is initially empty (no apple exists). mon receives q instructions from his boss kukui, and mon completely follows in order. each instruction is either of two types below.  ""harvest apples"": put d x-th apples into the x-th box.  ""ship apples"": take d x-th apples out from the x-th box. however, not all instructions are possible to carry out. now we call an instruction which meets either of following conditions ""impossible instruction"":  when mon harvest apples, the amount of apples exceeds the capacity of that box.  when mon tries to ship apples, there are not enough apples to ship. your task is to detect the instruction which is impossible to carry out. 

"
p01968,Hierarchical Calculator,"ebi-chan has n formulae: y = a_i x for i =1, ..., n (inclusive).  now she considers a subsequence of indices with length k: s_1, s_2, ..., s_k.  at first, let x_0 be 1 and evaluate s_1-th formulae with x = x_0.  next, let x_1 be the output of s_1 and evaluate s_2-th formulae with x = x_1, and so on. she wants to maximize the final output of the procedure, x_{s_k}.  if there are many candidates, she wants the """"""shortest one"""""".  if there are still many candidates, she wants the """"""lexicographically smallest one"""""". sequence s is lexicographically smaller than sequence t, if and only if either of the following conditions hold:  there exists m &lt; |s| such that s_i = t_i for i in 1 to m (inclusive) and s_{m+1} &lt; t_{m+1}, or  s_i = t_i for i in 1 to |s| (inclusive) and |s| &lt; |t|, where |s| is the length of the s. 

"
p01969,AA Graph,"given a graph as an ascii art (aa), please print the length of shortest paths from the vertex s to the vertex t. the aa of the graph satisfies the following constraints. a vertex is represented by an uppercase alphabet and symbols o in 8 neighbors as follows. 
horizontal edges and vertical edges are represented by symbols - and |, respectively.
lengths of all edges are 1, that is, it do not depends on the number of continuous symbols - or |.
all edges do not cross each other, and all vertices do not overlap and touch each other.
 
for each vertex, outgoing edges are at most 1 for each directions top, bottom, left, and right.
each edge is connected to a symbol o that is adjacent to an uppercase alphabet in 4 neighbors as follows.
 therefore, for example, following inputs are not given. (edges do not satisfies the constraint about their position.) (two vertices are adjacent each other.) 

"
p01970,The Diversity of Prime Factorization,"ebi-chan has the factorization machine, which can factorize natural numbers m (greater than 1) in o($\log$ m) time!  but unfortunately, the machine could display only digits and whitespaces. in general, we consider the factorization of m as p_1^{e_1} \times p_2^{e_2} \times ... \times p_k^{e_k} where (1) i &lt; j implies p_i &lt; p_j and (2) p_i is prime.  now, she gives m to the machine, and the machine displays according to the following rules in ascending order with respect to i:  if e_i = 1, then displays p_i,  otherwise, displays p_i e_i. for example, if she gives either 22 or 2048, then 2 11 is displayed.  if either 24 or 54, then 2 3 3. okay, ebi-chan has written down the output of the machine, but she notices that she has forgotten to write down the input!  now, your task is to count how many natural numbers result in a noted output.  note that ebi-chan has mistaken writing and no input could result in the output. the answer could be too large, so, you must output it modulo 10^9+7 (prime number). 

"
p01971,Broccoli or Cauliflower,"the input is a rooted tree t = (v, e) with n vertices. note that n is odd and the vertex with index 1 is the root of t. in addition, we give a label g or w for each vertex. let t_v  = (u, f) be a subtree of t such that u is defined as following.  u = $\{$ u \in v \ \  | \ \  u $\text{ is the descendant of }$ v $\}$ we call t_v a subtree of v. we consider the following operation and perform operations q times.  let v be a vertex. if a vertex u \in u has the label g, then we change the label of u g to w. otherwise, we change the label of u w to g.  after each operation, output “broccoli” if the number of vertices with the label g is greater than w. otherwise, output “cauliflower”. 

"
p01972,chan Lengthens Shortest Paths,"
ebi-chan loves directed graphs.
one day, a directed graph with n vertices and m edges dropped from somewhere in front of ebi-chan!
the vertices and the edges of the graph is labeled with a number from 1 to n and from 1 to m, respectively.
moreover, the ith edge directs from a vertex u_i to a vertex v_i with distance d_i.
 
ebi-chan thought that, for a pair of vertices s and t, she tries to lengthen the distance of shortest paths from s to t.
although ebi-chan should lengthen all edges slightly to easily achieve hers goal, she can not enjoy the directed graph with such way!
so, she decided the following rules of operations that can be done by her.
  she can lengthen each edges independently.  when she lengthens an edge, she must select the additional distance from positive integers.  the ith edge takes a cost c_i per additional distance 1. how is the minimum total cost of operations needed to achieve ebi-chan’s goal? 

"
p01973,Censored String,"you are given the string s, and the set of strings \mathcal p whose size is n. now we consider applying the following operation to s:  choose exactly one character in s, and replace it with '*'. let s_i  be a  i-th character of s, s_{ij} be a consecutive substring in s such that  s = s_i s_{i+1} $\cdots$  s_j, and p_k as the k-th string of p. your task is to calculate the minimum number of operations for satisfying the following condition.  for all pairs (s_{ij}, p_k), it is satisfied that s_{ij} \neq p_k. 


"
p01974,Pigeonhole principle,"
 $n$ 個の相違なる自然数 $a_i$ が与えられる。与えられた自然数から相違なる自然数を選び、ペアを作ることにした。
作ることができるペアのうち、値の差が $n - 1$ の倍数であるペアを一つ出力せよ。
 
なお、そのようなペアは必ず存在する。
 

"
p01975,Mapping,"
aorイカちゃんは集合 $s = \{a_1, ..., a_n\}$ と写像 $f: s→s$を作った。$f(a_i) = b_i$ である。
集合 $s$ の任意の要素 $x$ について、$g(f(x)) = h(f(x))$ を満たす全ての写像 $g, h: s→s$ が、$g(x) = h(x)$ を満たすかどうか判定し、満たさない場合は反例を一つ構成せよ。
 


"
p01976,Anagram,"
長さ $n$ の数列 $a_i$ が与えられる。
次の条件を満たす整数 $k (1 \le k \le n)$ を全て出力せよ。
 
条件:
$a_1, \cdots, a_k$ をうまく並び替えると $a_{n-k+1}, \cdots, a_n$ と一致する。
 


"
p01977,Aquarium,"
aorイカちゃんは縦 $1$ 横 $n$ の大きさの水槽をもらった。水槽は水を入れるのに十分な高さがある。
水槽には $n-1$ 個の仕切りがあり $n$ 個の区画に等間隔に区切られている。
ここに水を注いだところ、各区画の水の高さは $a_i$ になった。
 
aorイカちゃんはいくつか仕切りを取り除き、区画の数を $m$ 個以下にすることにした。
仕切りを取り除き終わった時、各区画の水の高さの総和の最大値を求めよ。
 
なお、仕切りの厚さは無視できるものとする。
 

"
p01978,Graph,"
あなたはグラフのアルゴリズムとして典型であるフローの問題を解いていた。
その問題で与えられるグラフは、頂点 $n$ 個、辺 $m$ 本であり、頂点 $x_i$ から 頂点 $y_i$ に容量 $z_i$ 、コスト $d_i$ の辺が張られている。
ところが、aorイカちゃんが入力ケースにいたずらした。
その結果、 $x_i, y_i, z_i$ の順序がシャッフルされ、頂点の情報と容量の情報が区別できなくなってしまった。
 
そこで、あなたは $s-t$ 間のフローを求めることを諦め、 $s-t$ 間の最短距離を求めることにした。
あなたは、 $x_i, y_i, z_i$ の順序がシャッフルされた入力ケース $a_i, b_i, c_i$ のうちから二つを頂点情報にし、コスト $d_i$ の辺を張ることにした。つまり、$a_i$ から $b_i$, $a_i$ から $c_i$, $b_i$ から $c_i$ の三つの候補のうち一つにコスト $d_i$ の辺を張る。
 
考えられるグラフのうち、 「s から t への最短距離」の最小値を求めよ。
 

"
p01979,Number,"
ごちうさが大好きなaorイカちゃんは「ごちうさ数」を定義した。
ごちうさ数とは、 $10$ 進表記において「 $51?3$ 」を含む自然数のことである。
$?$ は $0$ 〜 $9$ のどの数字であってもよい。
 
 $n$ 以下の自然数のうち、ごちうさ数の個数を求めよ。
 

"
p01980,Elevator,"
株式会社aorは $n$ 階建てのビルである。地下階は存在しない。
aorイカちゃんはイカであるため、階段を下りることは可能だが、上ることは不可能である。
 
上の階に登れないと不便なため、$m$ 個のエレベータをビルに設置することにした。
エレベータを設置するには時間がかかり、$i$ 番目のエレベータは $d_i$ 日後の夜に設置が完了し、 $a_i$ 階以上 $b_i$ 階以下の全ての階を移動可能にする。
 
あなたはaorイカちゃんに $q$ 個の質問をされた。$i$ 番目の質問は「 $e_i$ 日後の昼に、$s_i$ 階から $t_i$ 階に移動可能か？」という質問である。
移動に使える手段は階段とエレベータのみである。また移動にかかる時間は無視できるものとする。
 

"
p01981,Change of the Era Name,"平成31年4月30日をもって現行の元号である平成が終了し，その翌日より新しい元号が始まることになった．平成最後の日の翌日は新元号元年5月1日になる． acm-icpc ob/ogの会 (japanese alumni group; jag) が開発するシステムでは，日付が和暦（元号とそれに続く年数によって年を表現する日本の暦）を用いて ""平成 y 年 m 月 d 日"" という形式でデータベースに保存されている．この保存形式は変更することができないため，jagは元号が変更されないと仮定して和暦で表した日付をデータベースに保存し，出力の際に日付を正しい元号を用いた形式に変換することにした． あなたの仕事はjagのデータベースに保存されている日付を，平成または新元号を用いた日付に変換するプログラムを書くことである．新元号はまだ発表されていないため，""?"" を用いて表すことにする． 


"
p01982,Generalized Leap Years,"通常，西暦 x 年がうるう年か否かは以下のように定義されている． x が 400 の倍数であれば，うるう年である． そうでないとき，x が 100 の倍数であれば，うるう年ではない． そうでないとき，x が 4 の倍数であれば，うるう年である． そうでないとき，うるう年ではない． これは次のように一般化できる．ある数列 a1, ..., an について，西暦 x 年が ""一般化うるう年"" であるか否かを以下のように定義する． x が ai の倍数であるような最小の i (1 &le; i &le; n) について，i が奇数であれば一般化うるう年であり，偶数であれば一般化うるう年ではない． そのような i が存在しないとき，n が奇数であれば一般化うるう年ではなく，偶数であれば一般化うるう年である． 例えば a = [400, 100, 4] のとき，この a に対する一般化うるう年は通常のうるう年と等価になる． 数列 a1, ..., an と正の整数 l, r が与えられるので．l &le; x &le; r なる正の整数 x のうち，西暦 x 年が a に対する一般化うるう年であるような x の個数を答えよ． 


"
p01983,Proof of Knowledge,"あなたが住んでいる集合住宅の入口のドアには，パスワード式のロックがかけられている．このパスワードはちょうど 4 桁の 0 から 9 の範囲の数字で構成されており，あなたはいつも，集合住宅の管理人から伝えられたパスワード p を使って，このドアのロックを解除している． ある日，あなたは集合住宅の住民全員が，自分と同じパスワード p を使っているのかどうか気になり，同じ集合住宅に住む友人に尋ねることにした．あなたとあなたの友人は，自分のパスワードを互いに伝えあうことで，同じパスワードを使っているのかどうか確かめ合うことができる．しかしながら，パスワードがそれぞれの住民に個別に割り当てられている可能性を考えると，この方法は好ましくない．自分のパスワードを知っているのは自分だけであるべきで，他人に伝えるべきではないからである． この事態を防ぐために，あなたとあなたの友人は，自分のパスワードをハッシュ関数に入力し，得られたハッシュ値を互いに伝えあうことにした．ここで使用するハッシュ関数の計算式 s は小文字のアルファベット 'a', 'b', 'c', 'd' と記号 '[', ']', '+', '*', '^' からなり，以下のbnfで定義される &lt;hash&gt; によって表される． ここで 'a', 'b', 'c', 'd' はそれぞれ 4 桁のパスワードの先頭から 1 桁目，2 桁目，3 桁目，4 桁目の数字を表す．'+', '*', '^' は演算子であり，以下のような意味を表す． '+' : 続く 2 つの &lt;hash&gt; を二進数で表したときの論理和を取る '*' : 続く 2 つの &lt;hash&gt; を二進数で表したときの論理積を取る '^' : 続く 2 つの &lt;hash&gt; を二進数で表したときの排他的論理和を取る ここで，論理和，論理積，排他的論理和の真理値表はそれぞれ以下のようになる． 例として，ハッシュ関数 [+c[+a[^bd]]] にパスワード 0404 を入力すると，ハッシュ値として 0 が得られる．同じハッシュ値が得られるパスワードとして 0000, 0101, 0202, 0303, 0505, 0606, 0707, 0808, 0909 がある． あなたのパスワード p をハッシュ関数 s に入力した結果を出力せよ．また，ハッシュ値からパスワードを一意に特定可能なハッシュ関数の使用を防ぐため，あなたのパスワードと同じハッシュ値になるパスワードの数も出力せよ． 


"
p01984,Tanka Number,"願はくは 花の下にて 春死なむ そのきさらぎの 望月のころ これは，西行法師が詠んだとされる，有名な短歌の一つである．
短歌は，日本において古くから親しまれている和歌の一種であり，その多くは 5・7・5・7・7 の五句三十一音からなる． ところで，57577 という数は，5 と 7 の二種類の数字からなる．
このような，十進表記がちょうど二種類の数字からなる正の整数を，短歌数と呼ぶことにする．
例えば，10, 12, 57577, 25252 などは短歌数であるが，5, 11, 123, 20180701 などは短歌数ではない． 正の整数 n が与えられる．n 番目に小さい短歌数を求めよ． 


"
p01985,Divide and Conquer,"太郎さんと花子さんと次郎さんは3人で jag 王国を統治している．jag 王国には n 個の街が存在し，いくつかの街は双方向の道路で繋がっている．どの街からも別のすべての街へ 1 本以上の道路を経由して必ず辿り着くことができる． ある日太郎さんと花子さんはとうとう仲違いを起こしてしまい，3 人で街を分担して統治することに決めた．しかし，あまりにも仲が悪くなりすぎてしまったため，太郎さんが統治している街と花子さんが統治している街が 1 本の道路で直接繋がっていることすら嫌がっている．そこで，以下の条件を満たすように統治する街を分担することにした． 太郎さんが統治する街と花子さんが統治する街からなる任意のペアは，直接道路で繋がっていない．これは太郎さんと花子さんの仲がめちゃくちゃ悪いからである． 同じ人に統治されている街同士も直接道路で繋がっていない．これは，そんな中でも他者の統治下の経由を義務付けることで外交を促すためである． 太郎さんの統治する街の総数と花子さんが統治する街の総数は同じでなければならない．これは総数を等しくしないと太郎さんと花子さんの仲がさらにめちゃくちゃ悪くなりそうだからである．ここで，次郎さんはとても心が広いので，次郎さんが統治する街の総数はいくつでもよい． 以上の条件を満たすような分担であれば，3 人は納得して統治することができ，たとえ誰かの統治する街が 0 個であっても文句はない．このとき，太郎さんが統治する街の総数 (=花子さんが統治する街の総数) としてあり得る数をすべて列挙するプログラムを作成せよ． 


"
p01986,Antiaircraft Shield,"時は3xxx年，太陽系外の惑星に進出した人類は，大量の隕石の飛来による基地の被害で頭を悩ませていた．国際宇宙防護会社（international cosmic protection company）は，この問題を解決するために新たな対空シールドを開発した． 防護対象の基地は同じサイズの n 個のユニットが一直線上に等間隔で並んだ形をしており， 1 から n までの番号が順に付けられている．icpcは，これらのユニットに，合計で m 個のシールドを設置することにした．i 番目のシールドが能力 ai を持ち，ユニット xi に設置されているとする．このとき，あるユニット u における強度は，以下の式で表される． シールドはユニットにのみ設置することができ，複数のシールドを同じユニットに設置することもできる．そして，icpcに支払われる報酬は n 個のユニットの強度の最小値に比例した額となる． シールドの能力は全て既に決まっており，位置も最後の 1 つ以外は決定している．最後の 1 つのシールドの位置を決めるにあたって，報酬がなるべく大きくなるようにしたい．このように最後のシールドの位置を決めたときの強度の最小値を求めよ． 


"
p01987,Casino,"あなたの勤めている会社では新たなカジノゲームの開発をしている．今日は最近提案されたゲームについて考察してみることにした． このゲームでは n 個のサイコロを同時に振って，出た目の合計が得点となる．プレイヤーは得点を大きくすることを目標としてプレーする．もし出た目が気に入らなければサイコロを振り直すことができるが，その時は n 個のサイコロ全てを同時に振り直さなければならない．また，サイコロを振ることのできる回数は最大で m 回である．十分に大きい目が出たと思ったのであれば，m 回より少ない回数でゲームを終えても良く，最後に振ったサイコロの目の合計が得点となる． 適切な賭け金を設定するためには，得点の期待値を求めなければならない．n と m が与えられた時，最適な戦略をとった場合に得られる得点の期待値を求めるのが今日のあなたの仕事である． ただし，このゲームで用いるサイコロには 1 から 6 までの目があり，それぞれの目が出る確率は同じである． 


"
p01988,NINJA GAME,"新作ゲーム ""ninja game"" がついに発売となった．このゲームではプレイヤーは二次元マップ上の忍者を操作して移動を行う．二次元マップは x 軸，または y 軸のどちらか一方に平行な辺のみからなる，自己交差のない多角形で表される．いま，多角形の内部に存在するスタート地点からゴール地点へと移動する必要がある． 移動は上下左右と斜め45°の8方向が可能で，いずれかの対応するコマンドを入力すると，指定した方向に自動で進み続ける．この自動移動の最中の任意のタイミングで別のコマンドを入力した場合，即座に移動方向の転換が可能である．あなたの目標は，このゲームでの実績を解除するため，最小のコマンド入力回数でスタート地点からゴール地点に移動することである． ここで気を付ける必要があるのは，キャラが忍者であるので，壁伝いの移動が可能であるということだ．ここで壁伝いの移動するとは，多角形の辺上を移動することである．ただし，もちろん多角形の外部に出ることはできない．壁伝いの移動中にその壁に対し垂直方向に移動しようとする場合はそれ以上移動できずに止まるのだが，一方で壁伝いの移動中に斜め方向に移動しようとする場合，壁と平行な方向への壁伝いの自動移動が続き，壁がなくなったところで元の斜め方向にまた自動移動を続ける．例えば下図のように y 軸に平行な壁に x 軸正方向と y 軸負方向からなる斜め方向からぶつかった場合，ぶつかった後は壁に沿って y 軸負方向に進み，壁がなくなったところでまた x 軸正方向と y 軸負方向からなる斜め方向へと進み始める．  ここで，斜め方向に移動しながら角にぶつかったときの挙動は以下のようになる．(a) のように両方向に壁が囲まれている場合はそこで止まり，方向転換をしなければ動けない．(b) や (c) のように角を通り過ぎてそのまま進める場合は，斜め方向に自動移動を続ける．(d) のように両方向に進める場合，好きな方向を選んで進めるものとしてよい．図では移動を表す矢印で壁が隠れるため少し内部側に寄せて図示しているが，これも実際には辺上を移動することを表す図である．  また，上下左右方向の移動中に角にぶつかったときの挙動は以下のようになる．(e), (f), (g) のような場合はそのままの方向に自動移動を続ける．(h) のように壁に垂直にぶつかった場合はそこで止まり，方向転換をしなければ動けない．ただし，同様に移動を表す矢印を壁から少し内部側に寄せているが，実際には辺上を移動することを表す図である．  上記の移動に関する挙動に従った上で，スタート地点からゴール地点に到達するために入力する必要があるコマンドの数の最小値を求めるプログラムを作成してほしい．例えば下図における最小のコマンド入力回数は，図中に示すように2である．これは3つ目のサンプル入力に対応している．  


"
p01989,Internet Protocol Address,"
数字列が 1 つ与えられるので、ipv4のipアドレスとして有効な区切り方の個数を求めよ。
ただし、ipv4のipアドレスとして有効な区切り方は以下の通りである。
 数字列は 4 つに区切られ、区切られた各列について以下をすべて満たす。 空列でない。 10 進数として読むと 0 以上 255 以下の整数である。 その数が 0 ならば、その列は 0 である（00 などは認められない）。 その数が 0 でないならば、先頭の数字は 0 でない（01 などは認められない）。 



"
p01990,Pivots,"
1 から n までの整数を並び変えた、長さ n の順列 a_1, a_2,  ..., a_n が与えられる。
また、この順列に対して q 個のクエリが順に与えられる。i 番目のクエリでは次の操作をしなければならない。
  値 q_i (1 \leq q_i \leq n) が与えられる。順列 \{a_1, a_2, ..., a_n\} において q_i の左側の順列を l、q_i の右側の順列を r としたとき、元の順列 l \ \  q_i \ \  r を r \ \  q_i \ \  l に変更する。つまり、q_{i} = a_j であるとき、順列 \{a_1, ..., a_{j-1}, a_j, a_{j+1}, ..., a_n\} を \{a_{j+1}, ..., a_n, a_j, a_1, ..., a_{j-1}\} に変更する。 なお、順列 l, r は空になることもあり得る。例えば l が空の時は、q_i \ \  r を r \ \  q_i に変更する。r が空のときについても同様である。 与えられた順列に対してこれら q 個のクエリを順に処理した後の順列を一行に出力せよ。 


"
p01991,Namo.. Cut,"－謎の巨大クラゲ、 コードネーム「な◯り」を討伐せよ－ 
「な◯り」は非常に生命力が強いため、素早く切断し続けなければ、あっという間に復活してしまう。
我々は、「な◯り」をどのように切断するのが効率良いのか、日々試行錯誤している。
その過程で、あなた方プログラマの手が必要になった。
 
「な◯り」は n 頂点と n 辺からなる連結な無向グラフで表現できる。
以降、各頂点が 1 から n の異なる数で名前付けられているとしよう。
 
我々は、「な◯り」に関して q 回の質問を行う。
それらすべてに答えるプログラムを作成して欲しい。
 質問は 1 から q の番号を持ち、各質問は次のように構成される。  質問 i では 2 つの頂点 a_i と b_i が指定される。 a_i と b_i を非連結にするために、削除する必要のある辺の最小本数を答えよ。 ここで、頂点 u と v が非連結であるとは、 u と v を行き来できる経路が存在しないことを指す。 

"
p01992,Shiritori Compression,"えびちゃんとかにちゃんの二人はしりとりをしました。えびちゃんはしりとりで出た単語のメモを見ています。 えびちゃんは、この単語列 w_1, w_2, ..., w_n から冗長な連続部分列を、存在しなくなるまで取り除きたいと思っています。えびちゃんの思う冗長な連続部分列とは以下のように定義されます。 以下を満たす i, j が存在したとき、連続部分列 w_i, ..., w_{j-1} は冗長です。 i &lt; j なる添字 i, j について、単語 w_i と w_j の先頭の文字が等しい。 このとき、えびちゃんは添字 i 以上 j-1 以下の単語を取り除きます。 たとえば、次のような単語列を考えます。  apple→editor→random→me→edge これは、次のように圧縮されます。  apple→edge editor と edge の先頭の文字が e で一致しているため、editor から edge の直前（me）までの単語が取り除かれます。 えびちゃんの判断基準では、末尾の文字が同じであっても冗長とは見なさないことに注意してください。たとえば、上の圧縮済み単語列において、apple と edge の末尾の文字はどちらも e ですが、このことによって単語が取り除かれることはありません。 また、以下のような例も考えられます。  orange→eel→luck  banana→at→tomb→bus→sound→does→some  peach→hero→owl→loop→proof→fish→he これらはそれぞれ次のように圧縮できます。いずれも、最後の単語は保存されることに注意してください。  orange→eel→luck  すでに圧縮済みです。  bus→some  banana から bus、sound から some がそれぞれ圧縮可能です。  peach→he  proof→fish→he と圧縮することもできますが、圧縮後の単語数が異なっていることに注意してください。 えびちゃんのメモが与えられるので、それらを圧縮して得られる単語列の長さ（単語数）の最小値 l を出力してください。 なお、「同じ単語が複数回現れる」または「ある単語の先頭の文字が直前の単語の末尾の文字と一致していない」ことは起こらないと仮定して構いません。 

"
p01993,Balanced Edge Deletion,"
n 頂点 m 辺の重み付き単純無向グラフ g が与えられる。
頂点には 1 から n、 辺には 1 から m の番号がつけられている。
i 番目の辺は頂点 u_i と v_i を結んでおり、そのコストは w_i である。
 このグラフに対して、以下の操作を 1 度だけ行うことを考える。  g の辺集合から辺を 1 つ選択し、その辺を削除する。 
上の操作によってグラフが分割されることがあるので、操作後のグラフを a, b と表記することとする。(分割されない場合、b は空グラフであるとする。)
w(x) をグラフ x 内にある辺のコストの総和 (グラフに辺が存在しない場合 w(x)=0) とし、$\mathrm{cost}$(a,b)=|w(a)−w(b)| と定義する。$\mathrm{cost}$(a,b) が最小になるような辺 (u,v) を求めよ。複数存在する場合は、u が最小であるものを答えよ。それでも複数存在する場合は、v が最小であるものを答えよ。
 

"
p01994,Binary String with Slit,"文字の種類が 0 と 1 のみからなる文字列 s が与えられます。以下の操作を繰り返すことで、s を t に変えたいです。  文字列 s 中の最も右側に登場する 1 を含むように、幅 2 のスリットを置く。スリット内には連続した 2 文字を必ず含まなければならない。つまり、文字列の端 1 文字のみを含むように置くことはできない。2 通り置ける場合も考えられるが、この場合はどちらの方法で置いても構わない。  スリット中の 2 文字を 2 桁の二進数と捉えるとき、元の数値との差の絶対値が 1 になるようにスリット中の文字を変更する。ただし、スリット中の文字の両方が 0 になってはならない。つまり、変更後のスリット内の数値は 1 から 3 までのいずれかとなる。 クエリが q 回与えられます。i 番目のクエリで 1 を少なくとも一つ含む文字列 s_i, t_i が与えられるので、s_i を t_i に変えるために必要な操作回数の最小値を、それぞれのクエリについて求めてください。 

"
p01995,Palindromic Subsequences,"英小文字のみからなる文字列 s が与えられるので、この文字列 s の連続とは限らない部分列であって、回文であるものは何種類あるかを求めてください。 ここで、s の連続とは限らない部分列とは、元の文字列 s から 1 文字以上 |s| 文字以下を任意に選択し (選択するそれぞれの文字の位置は非連続でも良い)、それらを元の順番通りに連結させてできた文字列のことを指します。この問題において、空文字列は部分列として認められないことに注意してください。 また、文字列 x が回文であるとは、元の文字列 x と、x を反転した文字列 x’ が等しいことを指します。 さらに、異なる部分列のとりかたの結果同じ回文が生成されたとしても、それは重複して数えないことに注意してください。例えば s =  acpc である場合、 2 文字目のみからなる部分列と、4 文字目のみからなる部分列はどちらも回文 c ですが、これは複数回数えず、合わせて一度だけ数えることとします。 答えは非常に大きくなることがあるので、 1,000,000,007 で割った余りを出力してください。 

"
p01996,Test,"
  $n$ 個の席が一直線上に並んでいる教室で $m$ 人の生徒がテストを受けることになった。
  席には、前から $1 \dots n$ の番号が振られており、席 $1$ つにつき生徒 $1$ 人が座れる。
 
  いま、 各生徒は、 $a_1, \dots, a_m$ 番の席に座っている。
  $1 \dots m$ 番のどの席にも生徒が座っている。 
  
 最も後ろに座っている生徒を移動させ、空いている席のうち最も前に座らせる。 
  
 
  条件を満たすために必要な操作回数を求めよ。
 

"
p01997,Right triangle,"
  直角三角形の斜辺でない $2$ 辺の長さ $a$ , $b$ が与えられる。
  長さ $a$ の辺は $x$ 軸と重なっており、長さ $b$ の辺は $y$ 軸と重なっている。
 
  次の操作を行う。
 三角形を $x$ 軸周りに回転させる。 操作 $1$ を行ってできた図形を $y$ 軸周りに回転させる。 
  
 
  操作 $2$ を行ってできた図形の体積を求めよ。
 

"
p01998,Prime Number,"
  ある日、素数が大好きなそすうさ君は $p + q$ が素数となるペア $(p, q)$ で遊んでいた。
  そすうさ君は突然、このペアのうち、 $p$ と $q$ がともに $n$ 以下の素数であるペアがいくつあるか気になりだした。
  そすうさ君に代わって個数を求めよ。
 

"
p01999,Accident,"
  $h * w$ のグリッドで表される地図が与えられる。
  各マスは '#' か '.' であり、前者は陸地であることを、後者は海であることを示している。
 
  以下のように上下左右に隣接している陸地の集合を島と呼ぶ。
 陸地 $6$ マスの島。 陸地 $2$ マスの島が $2$ つ。 地図の端 $1$ マスは必ず '.' である。 同じ形の島が二つ以上存在することはない。
      つまり、島に含まれる陸地のうち、最も上にあり、その中で最も左にある陸地を基準とした陸地の座標集合が等しい島は存在しない。 全ての '.' マスは連結である。つまり、以下のような島は存在しない。 
    
.....
.###.
.#.#.
.###.
.....

  
 
  陸地のどこかにaorイカちゃんがいる。
  あなたの目標は、aorイカちゃんが最初にいたマスを当てることである。
  そのために、あなたは次のクエリを繰り返し送ることができる。
 'u', 'd', 'l', 'r' のうち、ひとつを選ぶ。aorイカちゃんの現在位置を $c_{y, x}$ とすると、それぞれ $c_{y - 1, x},\ c_{y + 1, x},\ c_{y, x - 1},\ c_{y, x + 1}$ に移動するように指示することができる。
      移動先が '.' である場合、aorイカちゃんは ""no"" を返し、移動しない。 そうでない場合、aorイカちゃんは ""yes"" を返し、指定したマスに移動する。
     
  
 
  クエリを高々 $800000$ 回 まで送ることで、aorイカちゃんが最初にいたマスを求めよ。
 


    なお、クエリの形式が誤っている場合は、即座にwaとなる。
    

"
p02000,Bumpy Array,"
  長さ $n$ の数列 $a$ が与えられる。$a$ の $i$ 項目 は $a_i$ である。
  あなたは、この数列に対して以下の操作を行うことができる。
 $1 \leq i \leq n - 1$ なる整数 i を選ぶ。 $a_i$ の値と $a_{i + 1}$ の値を入れ替える。 
  
 
  $a$ を凸凹数列にするために必要な操作の最小回数を求めよ。
 $1  a_i$ または $a_{i + 1}, a_{i - 1} 
													      直感的に言えば、 $1,\ 10,\ 2,\ 30,\ \dots (10,\ 1,\ 30,\ 2,\ \dots )$ のような、増加、減少、増加…（減少、増加、減少…）を繰り返す数列である。 
													      
 

"
p02001,Swap,"
  長さ $n$ の文字列 $s,\ t$ が与えられます．$s,\ t$ はそれぞれ 'o' , '.' の二種類の文字だけで構成されています．
  あなたは $s$ に対して，以下の操作を行うことができます．
  以下の条件を全て満たす整数対 $(l, r)$ を選択する．その後，$s[l]$ と $s[l + 1]，s[r - 1]$ と $s[r]$ をそれぞれスワップする． $1 \leq l, r \leq n$ $r - l \geq 3$ $s[l] = s[r] =$ '.' $s[l + 1] = s[l + 2] = \dots  = s[r - 1] =$ 'o' 
    
  
 
  何回か操作を繰り返したあと(0回でも可)，文字列 s を t に変形することが可能か判定してください．
 



"
p02002,Expression,"
  長さ $n$ の数式 $s$ が与えられる。
  数式は、以下の bnf で示される形式になっている。
 
  &lt;number&gt; は、 $0$ 以上 $2^{31}-1$ 以下の整数を表す。
 
  演算子、’^’  ‘&’  ‘|’  は、それぞれ排他的論理和、論理積、論理和を表す。
  演算子の優先順位は以下の通りである。
 
  高　’^’ > ‘&’ > ‘|’　低
 
  区間 $[i, j]$ が $q$ 個与えられる。
  $s_i, \dots , s_j$ の計算結果を出力せよ。
 
  なお、数式 $s_i, \dots , s_j$ が上記のbnfで示される形式であることは保証される。また、数式にゼロ詰めされた値が含まれることはない。
 

"
p02003,Board,"
  $r * c$ のマスが与えられます．各マスは何もないマスか，穴が開いているマスのどちらかです．
  与えられるマスは以下の条件を満たします。
  穴の開いたマス同士は連結である．（穴の開いたマスを十字方向につたって任意の穴の開いたマスに移動することができる）  何もないマス同士は連結である． 
  あなたは幅が $1$ の任意長の長方形型のタイルを生成することができます．
  このタイルを複数枚設置して全ての穴のあるマスを埋めたいです．タイルを設置するとき，以下の制約を守る必要があります．
 タイルは縦向きか横向きの $2$ 方向でのみ設置が可能である． 一つのマスに二枚以上のタイルが重なるように設置してはいけない． 穴のないマスの上にタイルがあってはいけない． 
  上記の制約を守って全ての穴のあるマスをタイルで埋めたときの，タイルの最小枚数を答えてください．
 


"
p02004,GuruGuru,"
  you are playing a game called guru guru gururin. in this game, you can move with the vehicle called gururin. there are two commands you can give to gururin: 'r' and 'l'. when 'r' is sent, gururin rotates clockwise by 90 degrees. otherwise, when 'l' is sent, gururin rotates counterclockwise by 90 degrees.
 
  during the game, you noticed that gururin obtains magical power by performing special commands. in short, gururin obtains magical power every time when it performs one round in the clockwise direction from north to north. in more detail, the conditions under which magical power can be obtained is as follows.
 at the beginning of the special commands, gururin faces north. at the end of special commands, gururin faces north. except for the beginning and the end of special commands, gururin does not face north. during the special commands, gururin faces north, east, south, and west one or more times, respectively, after the command of 'r'. 
  at the beginning of the game, gururin faces north. for example, if the sequence of commands gururin received in order is 'rrrr' or 'rrlrrlrr', gururin can obtain magical power. otherwise, if the sequence of commands is 'llll' or 'rllr', gururin cannot obtain magical power.
 
  your task is to calculate how many times gururin obtained magical power throughout the game. in other words, given the sequence of the commands gururin received, calculate how many special commands exists in it.
 


"
p02005,Colorful Drink,"
  in the jambo amusement garden (jag), you sell colorful drinks consisting of multiple color layers. this colorful drink can be made by pouring multiple colored liquids of different density from the bottom in order.
 
  you have already prepared several colored liquids with various colors and densities. you will receive a drink request with specified color layers. the colorful drink that you will serve must satisfy the following conditions.
 you cannot use a mixed colored liquid as a layer. thus, for instance, you cannot create a new liquid with a new color by mixing two or more different colored liquids, nor create a liquid with a density between two or more liquids with the same color by mixing them. only a colored liquid with strictly less density can be an upper layer of a denser colored liquid in a drink. that is, you can put a layer of a colored liquid with density $x$ directly above the layer of a colored liquid with density $y$ if $x < y$ holds. 														your task is to create a program to determine whether a given request can be fulfilled with the prepared colored liquids under the above conditions or not.
 

"
p02006,Santa's Gift,"
  santa is going to pack gifts into a bag for a family. there are $n$ kinds of gifts. the size and the price of the $i$-th gift ($1 \leq i \leq n$) are $s_i$ and $p_i$, respectively. the size of the bag is $c$, thus santa can pack gifts so that the total size of the gifts does not exceed $c$. children are unhappy if they are given multiple items of the same kind gift, so santa has to choose at most one gift of the same kind per child.
 
  in addition, if a child did not receive a gift that the other children in the same family receive, he/she will complain about that. hence santa must distribute gifts fairly to all the children of a family, by giving the same set of gifts to each child. in other words, for a family with $k$ children, santa must pack zero or $k$ items for each kind of gifts. santa gives one bag to one family, therefore, the total size of the gifts for each family does not exceed $c$.
 
  santa wants to maximize the total price of packed items for a family but does not know the number of children in the family he is going to visit yet. the number seems at most $m$. to prepare all the possible cases, calculate the maximum total price of items for a family with $k$ children for each $1 \leq k \leq m$.
 

"
p02007,Prefix Suffix Search,"
  as an english learner, sometimes you cannot remember the entire spelling of english words perfectly, but you can only remember their prefixes and suffixes. for example, you may want to use a word which begins with 'appr' and ends with 'iate', but forget the middle part of the word. it may be 'appreciate', 'appropriate', or something like them.
 
  by using an ordinary dictionary, you can look up words beginning with a certain prefix, but it is inconvenient for further filtering words ending with a certain suffix. thus it is helpful to achieve dictionary functionality which can be used for finding words with a given prefix and suffix. in the beginning, let's count the number of such words instead of explicitly listing them.
 
  more formally, you are given a list of $n$ words. next, you are given $q$ queries consisting of two strings. your task is to write a program which outputs the number of words with the prefix and suffix for each query in the given list.
 

"
p02008,Magic Triangles,"
  fallen angel yohane plans to draw a magic symbol composed of triangles on the earth. by casting some magic spell on the symbol, she will obtain magic power; this is the purpose for which she will draw a magic symbol. the magic power yielded from the magic symbol is determined only by the common area of all the triangles. suppose the earth is a two-dimensional plane and the vertices of the triangles are points on the plane. yohane has already had a design of the magic symbol, i.e. the positions, sizes, shapes of the triangles. however, she does not know how much magic power will be obtained from the symbol. your task as a familiar of the fallen angel is to write a program calculating the common area of given triangles on a two-dimensional plane.
 


"
p02009,Nim without Zero,"
alice: ""hi, bob! let's play nim!""
bob: ""are you serious? i don't want to play it. i know how to win the game.""
alice: ""right, there is an algorithm to calculate the optimal move using xor. how about changing the rule so that a player loses a game if he or she makes the xor to $0$?""
bob: ""it sounds much better now, but i suspect you know the surefire way to win.""
alice: ""do you wanna test me?""
this game is defined as follows.
  the game starts with $n$ heaps where the $i$-th of them consists of $a_i$ stones.  a player takes any positive number of stones from any single one of the heaps in one move.  alice moves first. the two players alternately move.  if the xor sum, $a_1$ xor $a_2$ xor $...$ xor $a_n$, of the numbers of remaining stones of these heaps becomes $0$ as a result of a player's move, the player loses. 
  your task is to find which player will win if they do the best move.
 

"
p02010,Additions,"
  you are given an integer $n$ and a string consisting of '+' and digits. you are asked to transform the string into a valid formula whose calculation result is smaller than or equal to $n$ by modifying some characters. here, you replace one character with another character any number of times, and the converted string should still consist of '+' and digits. note that leading zeros and unary positive are prohibited.
 
  for instance, '0123+456' is assumed as invalid because leading zero is prohibited. similarly, '+1+2' and '2++3' are also invalid as they each contain a unary expression. on the other hand, '12345', '0+1+2' and '1234+0+0' are all valid.
 
  your task is to find the minimum number of the replaced characters. if there is no way to make a valid formula smaller than or equal to $n$, output $-1$ instead of the number of the replaced characters.
 


"
p02011,Enlarge Circles,"
  you are given $n$ distinct points on the 2-d plane. for each point, you are going to make a single circle whose center is located at the point. your task is to maximize the sum of perimeters of these $n$ circles so that circles do not overlap each other. here, ""overlap"" means that two circles have a common point which is not on the circumference of at least either of them. therefore, the circumferences can be touched. note that you are allowed to make a circle with radius $0$.
 

"
p02012,Sum of QQ,"
  you received a card with an integer $s$ and a multiplication table of infinite size. all the elements in the table are integers, and an integer at the $i$-th row from the top and the $j$-th column from the left is $a_{i,j} = i \times j$ ($i,j \geq 1$). the table has infinite size, i.e., the number of the rows and the number of the columns are infinite.
 
  you love rectangular regions of the table in which the sum of numbers is $s$. your task is to count the number of integer tuples $(a, b, c, d)$ that satisfies $1 \leq a \leq b, 1 \leq c \leq d$ and $\sum_{i=a}^b \sum_{j=c}^d a_{i,j} = s$.
 

"
p02013,Prime Routing,"
  fox jiro is one of the staffs of the acm-icpc 2018 asia yokohama regional contest and is responsible for designing the network for the venue of the contest. his network consists of $n$ computers, which are connected by $m$ cables. the $i$-th cable connects the $a_i$-th computer and the $b_i$-th computer, and it carries data in both directions. your team will use the $s$-th computer in the contest, and a judge server is the $t$-th computer.
 
  he decided to adjust the routing algorithm of the network to maximize the performance of the contestants through the magical power of prime numbers. in this algorithm, a packet (a unit of data carried by the network) is sent from your computer to the judge server passing through the cables a prime number of times if possible. if it is impossible, the contestants cannot benefit by the magical power of prime numbers. to accomplish this target, a packet is allowed to pass through the same cable multiple times.
 
  you decided to write a program to calculate the minimum number of times a packet from  $s$ to $t$ needed to pass through the cables. if the number of times a packet passes through the cables cannot be a prime number, print $-1$.
 


"
p02014,Rough Sorting,"
  for skilled programmers, it is very easy to implement a sorting function. moreover, they often avoid full sorting to reduce computation time if it is not necessary. here, we consider ""rough sorting"" which sorts an array except for some pairs of elements. more formally, we define an array is ""$k$-roughly sorted"" if an array is sorted except that at most $k$ pairs are in reversed order. for example, '1 3 2 4' is 1-roughly sorted because (3, 2) is only the reversed pair. in the same way, '1 4 2 3' is 2-roughly sorted because (4, 2) and (4, 3) are reversed.
 
  considering rough sorting by exchanging adjacent elements repeatedly, you need less number of swaps than full sorting. for example, '4 1 2 3' needs three exchanges for full sorting, but you only need to exchange once for 2-rough sorting.
 
  given an array and an integer $k$, your task is to find the result of the $k$-rough sorting with a minimum number of exchanges. if there are several possible results, you should output the lexicographically minimum result. here, the lexicographical order is defined by the order of the first different elements.
 


"
p02015,Paken,"あなたはパ研部員であるから、""paken"" と出力しなさい。 

"
p02016,Twins,"とある双子は、自分たちのどちらが兄でどちらが弟かがあまり知られていないことに腹を立てた。 ""ani"" と入力されたら ""square1001""、""otouto"" と入力されたら ""e869120"" と出力するプログラムを作りなさい。 

"
p02017,Pray,"とある双子は、コンテスト前に祈祷をすることで有名である。 4 つの整数 $h, w, x, y$ があって、$h \times w$ と $x + y$ が両方とも奇数だと縁起が悪いらしい。 

"
p02018,Surmise,"とある双子は、偶数が好きである。 $n$ 個の整数 $a_1, a_2, a_3, \dots, a_n$ の中に偶数がいくつあるか数えよ。 

"
p02019,Training,"ねねさんはプログラミングの修行のため、$n$ 個の整数 $v_1, v_2, v_3, \cdots, v_n$ について調べるプログラムを作っている。 指導役のうみこさんに言われて、ねねさんは 2, 3, 6 の倍数の個数を調べるプログラムを書いた。 2 の倍数は $a$ 個、3 の倍数は $b$ 個、6 の倍数は $c$ 個だった。 うみこさんは、次は「2 の倍数でも 3 の倍数でもない数」の個数を調べるようにと言った。 しかし、ねねさんは疲れたので、答えだけを求めてごまかすことにした。  $n, a, b, c$ の値だけをもとに、「2 の倍数でも 3 の倍数でもない数」の個数が分かります。これを求めるプログラムを作ってください。 

"
p02020,Tea Party,"ゆんさんは、会社でお茶会を開くことにした。 お店には $n$ セットのパンが売られていて、それぞれ $a_1, a_2, a_3, \dots, a_n$ 枚入っている。 ゆんさんは二つのパンを 1 組にしてをサンドウィッチを作ろうと考えた。 ゆんさんは几帳面なので、買ったパンが一枚も余らないようにしたい。 最大でいくつのサンドウィッチが作れるか計算せよ。 

"
p02021,Working,"コウさんはこれから $n$ 日間、毎日同じ件数の仕事をすることにした。 $n$ 日間のうち $i$ 日目には仕事が $a_i$ 件追加される。 コウさんには今溜まっている仕事はなく、$n$ 日目までにすべての仕事が終わっている必要はない。 一日で最大何件の仕事ができるか。 ただしコウさんは優秀なので、仕事が存在する限り何件でも仕事をすることができる。 

"
p02022,Mercy,"サンタクロースは、クリスマスなのにプログラミングをやっている集団を見つけた。 サンタクロースは彼らを可哀想に思ったので、ケーキをプレゼントすることにした。 クリームが $n$ 種類あって、美味しさは $a_1, a_2, a_3, \dots, a_n$ である。 スポンジが $m$ 種類あって、美味しさは $b_1, b_2, b_3, \dots, b_m$ である。 クリーム 1 種類とスポンジ 1 種類を組み合わせてケーキを作り、その美味しさは (クリームの美味しさ) × (スポンジの美味しさ) になる。 サンタクロースは慈悲深いので、$n \times m$ 通りの組み合わせのケーキをすべて一つずつ作った。 ケーキの美味しさは合計いくつか。 

"
p02023,Ravage,"サンタクロースは、街のイルミネーションに引っかかり、壊した。 イルミネーションにはn個の電球があり、$i$ 番目の電球は電圧が $a_i$ 以上 $b_i$ 以下のときにしか付かなくなってしまった。 電圧はイルミネーションのどこでも同じにする必要がある。 電圧を調節することで、最大いくつの電球を同時に光らせることができるか求めよ。 

"
p02024,City,"サンタはある都にプレゼントを届けることにした。 この都は南北 $h$ 区画 × 東西 $w$ 区画に分けられた長方形の形をしており、各区画にプレゼントを届ける家が 1 つずつある。 北から数えて $x$ 番目、西から数えて $y$ 番目の区画を $(x, y)$ で表す。 サンタは次の条件で移動する。 はじめに区画 $(s, t)$ に降り、この場所からスタートする。 1 回の移動で東西南北に隣り合う区画に移動でき、街の外には移動できない。 1 度訪ねた区画には、2 度と入らない。 サンタが都にあるすべての家を訪ねることができるか判定せよ。 

"
p02025,Angel Relief,"天使の天真さんは、ある街を救うことにした。 この街は南北 $h$ 区画 × 東西 $w$ 区画に分けられた長方形の形をしており、各区画に家がある。 北から数えて $x$ 番目、西から数えて $y$ 番目の区画を $(x, y)$ で表す。 区画 $(i, j)$ にある家には $a_{i, j}$ 人の人が住んでいる。 天真さんは、辺が南北または東西に平行または垂直な長方形のエリアを選び、その中に住んでいる人全員をひとりずつ救済する。 天真さんは、考えられるすべての長方形でこの操作を行う。 天真さんが人を救済する回数の合計を求めよ。 

"
p02026,Demon's Cedar,"月の瀬さんは悪魔らしいことをするため、街じゅうの樹木をスギの木に変えて、人々を花粉症で困らせることにした。 樹木は $n$ 種類存在する。$i$ 種類目の樹木の天界でのランクは $a_i$、魔界でのランクは $b_i$ である。また、$1$ 種類目の樹木はスギである。 月の瀬さんは、次の操作を何度でも行うことができる。 天界で、種類 $i$ の樹木を種類 $j$ に変える。これには $|a_i - a_j|$ の時間がかかる。 魔界で、種類 $i$ の樹木を種類 $j$ に変える。これには $|b_i - b_j|$ の時間がかかる。 天界と魔界の移動や、その他の行動に時間はかからない。 それぞれの樹木の種類について、スギの木に変えるためにかかる最短の時間を求めよ。 

"
p02027,Presents,"白羽さんは、とある悪魔にサプライズプレゼントとして次のような集合を用意した。 $n$ 以下の異なる $k$ 個の自然数からなる どの 2 つの値の組を集合から選んでも、片方の数がもう片方の数で割り切れる 実はこのような集合には悪魔の力を奪う性質があり、このままだと力を失ってしまう。 悪魔を助けるために、このような集合がいくつあるか計算せよ。 

"
p02028,Mail Order,"胡桃沢さんは、魔界通販で積み木のおもちゃを買った。 積み木は一辺の長さが1の立方体の形をしており、縦に $h$ 個、横に $w$ 個に分割されたマス目の上に積まれている。 真横から見ると、左から順に、$a_1, a_2, a_3, \dots, a_h$ 個のブロックが積まれて見えた。 正面から見ると、左から順に、$b_1, b_2, b_3, \dots, b_w$ 個のブロックが積まれて見えた。 胡桃沢さんは偉大なので、これらの情報だけからブロックの総数を当てようと考えた。 小さい数を答えて間違えると格好悪いので、考えられる最大の個数を答えたい。 

"
p02029,Chisaki and Picnic,"幼稚園生の千咲ちゃんは、遠足にお菓子をもっていくことにした。 お菓子は $n$ 個あって、$i$ 番目のお菓子は値段が $a_i$ 円で、美味しさが $b_i$ である。 千咲ちゃんには友達が $m$ 人いて、$j$ 番目の友達は、値段が $c_j$ 円以上のお菓子を $d_j$ 個以上千咲ちゃんがもっていると泣きわめく。 友達が泣きわめいてしまうと千咲ちゃんはかなしいので、そうならないようにお菓子をもっていきたい。 お菓子の美味しさの合計は最大でいくつになるか求めて、千咲ちゃんを助けなさい。 

"
p02030,Information Search,"ポスティングリストとは、検索語と出現文書 id の対応関係を持たせたリストである。例えば 北海道: 1, 2, 4, 9 観光: 1, 3, 4, 7 などである。 上記のポスティングリストから、and 検索をすると、id 1, 4 の文書がヒットし、or 検索をすると、id 1, 2, 3, 4, 7, 9 がヒットする。 ここで and 検索とは「どちらのリストにも含まれる要素を列挙する」ことであり、 or 検索とは「少なくともどちらか一方のリストに含まれる要素を列挙する」ことである。 ポスティングリストが与えられるので、and 検索と or 検索の結果をそれぞれ出力せよ。 
"
p02031,Parentheses Number,"以下のように 正しい括弧列 を定めます。  空文字列は正しい括弧列である  正しい括弧列 s に対して ( s )  は正しい括弧列である  正しい括弧列 s, t に対して st は正しい括弧列である ここで、正しい括弧列に対して以下のような規則で順列を対応付けます。 i 番目の閉じ括弧が j 番目の開き括弧に対応しているとき、 数列の i 番目の値は j である。 長さ n の順列 p = ( p_1, p_2, $\ldots$, p_n ) が与えられるので、 それに対応する括弧列を復元してください。 ただし、順列に対応する括弧列が存在しない場合は :( を出力してください。 

"
p02032,Divisor Game,"tsutaj くんは約数ゲームで遊ぼうとしています。 約数ゲームでは、まず 2 以上の自然数 n が与えられ、その後は以下の手順でゲームが進んでいきます。  n 以外の n の約数の中から、整数を 1 つ宣言する。ただしこのとき、既に宣言したことがある整数の約数になるものは宣言できない。  宣言できる整数がある限りこれを繰り返し、宣言できるものがなければゲームは終了する。 ゲームを終了させるまでに行われた宣言の回数としてあり得る数の最小値と最大値を求めてください。 


"
p02033,Arrow,"rodea 君は 1 次元座標系の中におり、x = 0 の場所に立っている。この位置から、x = n の位置にある的を目がけて、 常に速さ 1 で移動する正の整数の長さの矢を投げる。しかし、rodea 君は非力なため、  区間 0 \leq x \leq n の中に合計 m 個の送風機を置くことにしている。 ここで、矢の先端から根元までの位置に 1 つの送風機も含まれない場合を「損失」と定義する。損失の判定は、矢の先端が x = 1, 2, 3, $\ldots$, n に到達した際に行う（つまり、合計 n 回行う）。 このとき、以下のクエリを q 回処理せよ。  「損失」許容可能な回数 l_i が与えられる。すなわち、n 回の判定において、「損失」が合計 l_i 回以下なら矢を的に届けることが可能である。このときの、矢を的に届けるために必要な最短の矢の長さを求める。 


"
p02034,trip String,"ここは全人類が競技プログラマーになった世界。この世界ではみなさんの生きる現代では考えられないような習慣が多数存在する。その中の一つに、両親、特に母親に感謝の証を表す時は、文字列を送るという風習がある。送る文字列としてどのような文字列がふさわしいかは地域差があるが、北の大地北海道では、できるだけシンプルな文字列が贈り物としてふさわしい。また、送られた側の母親は子供に返礼として、送られた文字列がどれほど美しいかを答える必要がある。 さて、今あなたは1児の母親から相談を受けている。その母親は子供から素晴らしそうな文字列をもらったのだが、どれくらい素晴らしいのかうまく測れないでいるそうだ。北海道の風習では、母親に送る文字列 t はある文字列 s を往復させて作ることになっている。この時、 s ができるだけ短い文字列ならばより素晴らしい文字列 t である。母親は子供の頑張りに報いるため、t を作ることができる文字列の中で、最短の文字列を見つけてあげたいが、それはなかなか難しいとのことだ。あなたのプログラミング能力を駆使して母親の悩みを解決して欲しい。 

"
p02035,Black Soul Gem,"
ほむちゃんは、そーるじぇむを赤色や黒色に変化させたり、 異なる 2 つのそーるじぇむ間を魔法の糸で接続したりする不思議な力を持っています。
この力を使うことで、ほむちゃんは、そーるじぇむによる魔方陣を作ることができます。
 ほむちゃんは、 1 から n で番号付けられた n 個のそーるじぇむがあるとき、以下の条件が成り立つ異なる魔方陣がいくつあるのか気になりました。  どの 2 つのそーるじぇむ間も、高々 1 回しか接続されない。  すべてのそーるじぇむの色が、赤色か黒色のいずれかになっている。  任意のそーるじぇむに対して、自身の色と異なる色のそーるじぇむのうち、少なくとも 1 つと接続されている。 
このとき、魔方陣はそーるじぇむを頂点とし、魔法の糸を辺とするグラフとみなすことができます。
ここで、そのグラフは 連結でなくてもよい ことに注意してください。
 
ほむちゃんは計算が苦手なので、代わりにあなたが高速なプログラムを作って異なる魔方陣の数を計算してあげましょう。
しかし、その数は非常に多いことが予想されるので、ある素数 m で割った余りを求めることにします。
 なお、ある魔方陣 g と h が異なるとは、あるそーるじぇむ v について g と h でその色が異なる、もしくはあるそーるじぇむの組 u, v が g と h の一方でのみ接続されていることを指します。 

"
p02036,Donuts Orientation,"ほむちゃんの最近のマイブームはお菓子作りだ。たくさんお菓子を作っては、それを友達におすそ分けしているらしい。そんなほむちゃんは今回、ドーナツづくりに挑戦するようだ。 ドーナツづくりに大切なことはいくつもある。生地や味付けはもちろん、かわいい見た目にするためのデコレーションも外せない。試行錯誤を繰り返しているうちに、ほむちゃんのデコレーションへのこだわりに熱がこもってきたようだ。こだわりぬいたドーナツを多くの人に食べてもらいたいので、ほむちゃんはドーナツをたくさんつくりたいと考えている。 ・・・ところで、こだわるのは一向に構わないが、ほむちゃんこだわりのドーナツを十分な数用意することはできるのだろうか？ 

"
p02037,Tile,"
			縦 $h$ , 横 $w$ の大きさの長方形の壁に, 縦 $a$ , 横 $b$ の大きさの長方形のタイルを出来るだけたくさん貼りたい.
		 タイルを重ねてはいけない. タイルを斜めに貼ってはいけない. すなわち, タイルのどの縁も, 壁のどの縁に対しても平行, または垂直である. タイルの向きを変えない. すなわち, 縦横を入れ替えない. 
			
		 
			出来るだけ多くのタイルを貼ったとき, タイルに覆われていない部分の面積の総和を求めよ.
		 


		"
p02038,Tanuki and Fox,"
					謎の装置 $m$ があり,この装置に tanuki と fox を入れると, 装置から一匹の動物が出てくる（以下, tanuki を $t$ ,foxを $f$ とする）.
				 
					$m(x, y)$ は,装置 $m$ に $x, y$ の順で動物を入れて出てきた動物を表す.
				 
					色々試した結果,以下のことがわかった.
					
						$m(t, t) = t$ 
						$m(t, f) = f$ 
						$m(f, t) = t$ 
						$m(f, f) = t$ 
					

				 
					あなたは,一列に並んでいる動物たち $p_1, p_2, ... , p_n$ を以下のように装置に入れていった.
					$m(....m(m(p_1,p_2), p_3)...., p_n)$
				 
					最後に出てくる動物を答えよ.
				 

				"
p02039,Othello,"
			オセロの盤面を用意する. 盤面は左上が $(1,1)$ , 右下が $(8,8)$ と表記する. ここで用意する盤面は, 以下のように, $(5,4)$ の黒の石がない.
		 
			黒石:x 白石:o
			8x8の盤面
			この状態から, 黒が先手でオセロを開始する.
		 
			aorイカちゃんは, 以下のルールで $q$ 回遊ぶ.
		 
			左上を $a$ 行目 $b$ 列目のマス, 右下を $c$ 行目 $d$ 列目のマスとした, マス目に沿った長方形領域が与えられる.
		 
			aorイカちゃんは, この長方形領域に含まれる石の数を最大化するように, オセロのルール(参考:wikipedia　オセロ  )にのっとり黒石と白石を交互に置いていく.
			これ以上石が置けなくなったとき(白石黒石ともにパスするしかない状態やすべての盤面が埋まった状態のとき), ゲームを終了する.
		 
			それぞれのゲームで, その領域に含まれる石の数を最大化したときの石の数を出力せよ.
			なお, 入力や出力の回数が多くなることがあるため, 入出力には高速な関数を用いることを推奨する.
		 

		"
p02040,Numbers game,"aorイカちゃん と そすうさ がグラフを使った場所当てゲームを行う． 
		最初に，aorイカちゃん が整数 $n$ を指定し，そすうさ は頂点数 $n$ の無向グラフを生成する．
		$n$ 個の頂点には， $1$ ~ $n$ までの番号が割り振られている．この無向グラフを使って，$k$ 回ゲームを行う．
		 各ゲームのはじめに aorイカちゃん は頂点を $1$ つ選び，そすうさ がその頂点を当てる． 
		そすうさ は aorイカちゃん に最大 $10$ 回まで質問することができる．
		そすうさ が頂点番号を $1$ つ aorイカちゃん に伝えると，番号に従い aorイカちゃん は以下のうちどれかを答える．
		 
		$k$ 回のゲーム全てで $10$ 回以内に頂点を当てることができれば，そすうさ の勝ちである．
		どうしても勝ちたい そすうさ は，あなたに絶対に勝てるプログラムの作成をお願いしてきた．
		 


		"
p02041,LISum,"
		長さ $n$ の数列 $a$ が与えられる。
		数列 $a$ の最長増加部分列のひとつを $b$ とするとき、$\sum b_i$ の最大値を求めよ。
		 
		数列 $a$ の最長増加部分列とは、すべての $i < j$ で $a_i < a_j$ を満たす部分列のうち、最長なものを示す。
		 

		"
p02042,ABSum,"長さ $n$ の数列 $a$ が与えられる．あなたは高々 $m$ 回まで，数列の $i$ 番目と $j$ 番目（$0 \leq i, j \leq n-1$）の要素を入れ替える操作を行うことができる． 操作を行なってできる数列の $\sum_{i = 0}^{n - 1} abs(a_i - i)$ の最大値を求めよ． 

		"
p02043,Illumination,"
		$1 \leq x \leq h , 1 \leq y \leq w$ をみたす格子点 $(x,y)$ に電球がある.
		 
		電源装置は座標 $(i+0.5,j+0.5) (1 \leq i < h,1 \leq j < w, i+j$ は偶数）に設置されている(14:21修正).
		座標 $(i+0.5,j+0.5)$ に設置されている電源装置をオンにすると, 座標 $(i,j),(i+1,j),(i,j+1),(i+1,j+1)$ に存在する $4$ つの電球が光る.
		 
		$(i,j)$ にある電球がオンになっている電源装置に $1$ つ以上つながっていると, きれいさ $b_{i,j}$ を得られる. あなたは, きれいさの合計分の収入がもらえる.
		また, それぞれの電源装置をオンにすると, $1$ つあたり電気代が $w$ かかる.
		 
		いくつかの電源をオンにして「収入の合計 - 電気代の合計」を最大化しなさい.
		 



		"
p02044,Equal Split,"あなたは icpc 2019 yokohama regional 国内予選の健闘を祈るためのパーティを企画した．このパーティの参加者は n 人である． このパーティの開催には合計で m 円の費用が必要となるため，n 人の参加者からそれぞれ m/n 円を集めることにした．m は n で割り切れる金額となったため，余りについて心配する必要はない． i 番目の参加者の今日の所持金は ai 円である．m/n 円を払うことができない場合には，今日の所持金をすべて払ってもらい，足りない分は後日払ってもらうこととする． あなたは今日のうちにパーティの開催費用をいくら集めることができるだろうか？ 


"
p02045,Poison Swamp,"あなたはレトロなロールプレイングゲームで遊んでいる．このゲームのフィールドは縦 100 マス，横 100 マスのマス目状である．このフィールドの左から x 列目，上から y 行目のマスは (x, y) と表される．あなたが操作するキャラクターはフィールド内のいずれかのマスの上におり，フィールド内を上下左右に 1 マスずつ移動することができる． あなたが操作するキャラクターはいま (x0, y0) にいて，これから n 箇所の目的地を順番に訪問する予定である．しかしながら，あなたはキャラクターを操作するとき，フィールドのマスの種類に注意してキャラクターを移動させなければならない．それぞれのマスは毒のある沼地か毒のない土地のどちらかである．キャラクターの移動先のマスが毒のある沼地の場合にはキャラクターはダメージを受け，移動先のマスが毒のない土地の場合にはダメージを受けない．あなたはキャラクターへのダメージを減らすため，適切に経路を選ぶことでキャラクターがダメージを受ける回数をできるだけ少なくしたい．ダメージの有無はキャラクターの移動先のマスの種類で決まること，例として，移動元のマスが毒のある沼地で移動先のマスが毒のない土地の場合にはキャラクターはダメージを受けないことに注意せよ． あなたの分析によれば，左上を (a, b) ，右下を (c, d) とする長方形の範囲内のマスは毒のない土地であり，それ以外のマスは毒のある沼地である．あなたのキャラクターが毒のある沼地からダメージを受ける回数を最小化するように n 箇所の目的地を順番に訪問したとき，あなたの操作するキャラクターがダメージを受ける回数を求めよ． 


"
p02046,You Should Avoid,"あなたはいま，上下左右に広大に広がるマス目の原点に当たる位置 (0, 0) にいる．マスの位置はx座標とy座標で表され，右に1マス動くことがx座標が1つ増えることに対応し，上に1マス動くことがy座標が1つ増えることに対応する．あなたはこれから目的地であるマス (x, y) を目指して出発するところだ．あなたは 1 歩で上下左右斜めの 8 方向に隣接するマスに移動することができる． さあ，目的地に向かって移動開始だ！とあなたは意気込んでいるところかもしれないが，ちょっと待ってほしい．一つだけ先に忠告しておくことがある．それはこのマス目に潜む謎の人物，回り込みのプロ・廻小宮の存在だ．廻小宮はあなたが 1 歩移動したのを確認すると，あなたが進んだ方向のさらに 1 歩先のマスに瞬時に移動し，邪魔をしてくる．より正確に言えば，あなたがマス (xs, ys) から (xt, yt) に移動するとき，廻小宮は (xt + (xt - xs), yt + (yt - ys)) に移動する．明らかに異様な雰囲気を醸し出す廻小宮．ヤツの間合いに入り込むのは危険だ．回り込まれた直後は仕方ないとして，次に移動する先のマス，あるいはその 8 方向に隣接するマスのどれかに廻小宮がすでにいると，ヤツの間合いに入り込んでしまうことになるので，これはどうしても避けたい． 上記のように廻小宮の間合いを避けつつ，目的地に辿り着くためには最小で何歩必要だろうか？あなたの仕事はこの最小歩数を求めるプログラムを書くことだ．ただし，廻小宮は初期状態ではどのマスにも存在せず，最初の 1 歩目以降から上記のルールに従ったマスに現れるものとする． 最初のサンプルでは，あなたは (2, 0) を目指す．例えば最初に右横のマス(1, 0) に移動してしまうと，廻小宮が (2, 0) に回り込んでくるため，次にそのマスへと移動することができない．一方，最初に右斜め上の (1, 1) に移動すると，廻小宮の位置は (2, 2) となり (2, 0) が廻小宮の間合いではないため，次の 1 歩で (2, 0) に移動することができる．  


"
p02047,String Magic,"魔法使いであるあなたは，今日も魔法の修行に励んでいる．あなたは今，手元に英小文字からなる文字列 x を持っている．あなたの今日の修行の課題は，この文字列を，別の文字列 y に変化させることである． あなたは，文字列を変化させる魔法を 4 種類習得していて，それらを好きな順序で何回でも唱えることができる．ただし，魔法を唱えるたびに，魔法石と呼ばれる特別な石を消費する．あなたが習得している魔法は次の通りである． 魔法石を a 個消費する．手元の文字列の好きな位置に，好きな英小文字 1 文字を追加する．例えば，元の文字列が bcbd であった場合，abcbd, bcebd, bcbdf などの文字列に変化させることができる． 魔法石を e 個消費する．手元の文字列の好きな 1 文字を取り除く．例えば，元の文字列が bcbd であった場合，cbd, bbd, bcd, bcb のいずれかに変化させることができる．なお，元の文字列の長さが 0 である場合，この魔法を唱えることはできない． 魔法石を s 個消費する．手元の文字列の好きな 1 文字を，別の好きな英小文字 1 文字に置き換える．例えば，元の文字列が bcbd であった場合，acbd や bebd などの文字列に変化させることができる．なお，元の文字列の長さが 0 である場合，この魔法を唱えることはできない． 魔法石を r 個消費する．手元の文字列の先頭の 1 文字を末尾に移動させる．例えば，元の文字列が bcbd であった場合，cbdb に変化させることができる．なお，元の文字列の長さが 0 である場合，この魔法を唱えることはできない． 魔法石は高価なので，あなたは魔法石の消費を最小限にしたいと考えている．文字列 x を文字列 y に変化させるために必要な魔法石の個数の最小値を求めよ． 


"
p02048,Great Strategy for Bring Up Grade,"受験生の太郎君は n 日間の勉強合宿に参加した．
この合宿では毎日 m 科目のテストを行い，
合宿の終了後にはすべてのテストの点数が書かれた成績表が配られる．
成績表は n 枚の紙からなっており，i 枚目の紙には i 日目の全 m 科目のテストの科目名と点数のみが印刷されている． 成績表に日付が書かれていないことに気付いた太郎君は，お母さんに成績表を渡す前に細工を加えることにした．
成績表の紙の順番を並べ替え，さらに1枚目から順番にページ番号を書き込んで冊子にすることによって「偽りの成績表」を作ったのだ．
太郎君の目的は，「偽りの成績表」でテストの点数がページ番号に対して広義単調増加している科目の個数を最大化することである． 太郎君が「偽りの成績表」を作るとき，テストの点数がページ番号に対して広義単調増加である科目の個数の最大値を求めよ． ただし，n 日間のテストの点数がページ番号に対して広義単調増加であるとは 1 &le; i &lt; n に対して i+1 枚目に記載されている点数が i 枚目に記載されている点数以上であることを意味する． 


"
p02049,The Genome Database of All Space Life Returns,"西暦2301年，宇宙連邦共和国の生命科学局では，宇宙生物のゲノム配列の研究を行っていた．近年の研究の結果，ゲノム配列に特定のパターンが何回現れるかが生物の性質に大きく影響することが分かってきた． 宇宙生物のゲノム配列は英大文字からなる文字列で表される．研究員たちはゲノム配列の中に，ある特定のパターンが何回現れるかを数え上げることにした．しかしながら，宇宙生物のゲノム配列は非常に長いため，後述する方法で繰り返しがある部分文字列を圧縮してデータベースに保存している． あなたの仕事は圧縮されたゲノム配列 s から文字列 q の出現回数を数え上げるプログラムを作成することである．ただし，q の出現は，開始位置さえ異なっていれば，重なっている部分があっても別の出現として数える．例えば， mississippi に issi は 2 回出現する． ゲノム配列の圧縮方法は以下のbnfで定義される． ここで，文字列の前に付けられる整数はその文字列がその回数だけ繰り返されることを表す．例えば，5a は aaaaa を表し，2(ab) は abab を表す．整数の直後に括弧がない場合は，その直後の1文字のみが繰り返される．例えば，2ab は aab を表す．繰り返しは多重にネストすることが可能で，2(2(ab)c) は 2(ababc) と同じであり，ababcababc を表す． 


"
p02050,K is Key of Takakkey,"「1 番じゃなきゃダメですか？k 番じゃダメなんでしょうか？」 これがケイ氏の座右の銘である．最近ケイ氏はもっぱら多角形に興味があるようで，目の前に広がる広大な二次元平面上に置かれた n 個の点を見て，そこから多角形を形成する方法について思いを馳せている．ケイ氏はどうやら，この n 個の点のうちいくつかの点を選んで自由な順番で繋げることで，選んだ点を頂点とする多角形を構成することにしたようだ．ただし，多角形は以下の条件を満たす必要がある． 単純多角形である．すなわち，3 つ以上の頂点を持ち，連続しない任意の 2 辺が交点を持たない． 選ばれた点以外も含む n 個すべての点をその内部，または周上に含む． ケイ氏は己の信念に従って，このような多角形のうち，周長，すなわち全ての辺の長さの和が k 番目に短い多角形を渇望している． あなたの仕事は，ケイ氏を手伝うため，条件を満たす多角形のうち，周長の昇順に並べたときに k 番目となる多角形を求め，その周長を出力するプログラムを書くことだ．ただし，そのような多角形が k 個以上存在しないこともある．そのようなときにはケイ氏の無念の気持ちを慮りつつ，申し訳ない気持ちを込めながら -1 と出力する必要がある． 


"
p02051,Misterious Buttons,"あなたは，町外れにあるダンジョンでコインを稼ぐことにした．このダンジョンには n 個の部屋が存在し，1 から n までの番号がつけられている．また，ダンジョン内には「コインボタン」「脱出ボタン」「ワープボタン」と呼ばれる不思議なボタンが存在する．それぞれのボタンの詳細は次の通りである． コインボタンは各部屋にちょうど 1 個存在する．コインボタンは何回でも押すことができ，そのたびにコインが 1 枚手に入る． 脱出ボタンは各部屋にちょうど 1 個存在する．脱出ボタンを押すとあなたはただちにダンジョンから脱出し，この冒険を終了する． ワープボタンは合計で m 個存在する．このうち i 個目のワープボタンは部屋 ai に存在し，押すことであなたは部屋 bi にワープし，さらにコインが ci 枚手に入る．ただし，ai &lt; bi および 1 &le; ci &le; 3 を満たす．なお，ワープボタンが 1 つの部屋に複数ある場合や，ワープボタンのまったく無い部屋が存在する場合もある． なお，ボタンを押す以外の方法で部屋を移動することはできず，複数のボタンを同時に押すこともできない．また，いずれのボタンも互いに区別可能である． あなたはこのダンジョンを q 回冒険した．あなたの記憶が正しければ，j 回目の冒険は部屋 1 から始まり，最後に部屋 dj にある脱出ボタンを押し，コインの合計獲得枚数はちょうど ej 枚だったはずである．q 回の冒険それぞれについて，そのようなボタンの押し方が何通りあるかを求めよ．答えは大きくなる可能性があるので，109+7 すなわち 1000000007 で割った余りを求めよ． ただし，2 通りの「ボタンの押し方」が異なるとは，ボタンを押した合計回数が異なるか，またはある整数 k が存在し，k 回目に押したボタンが異なることを指す． なお，もしかしたらあなたの記憶は間違っており，そのようなボタンの押し方は存在しないかもしれない．その場合には 0 を出力せよ． 


"
p02052,Hokkaido University Easy,"　問題設定は b 問題と同一のものですが、制約のみが異なりますのでご注意ください。 

"
p02053,Hokkaido University Hard,"　問題設定は a 問題と同一のものですが、制約のみが異なりますのでご注意ください。 

"
p02054,Skewering,"
ある日、ほむらちゃんが積み木で遊んでいるとてんぷら君がやってきました。
ほむらちゃんは、てんぷら君と一緒に積み木で遊ぶことにしました。
 一辺の長さが 1 の立方体の積み木のブロックを a \times b \times c 個隙間なく積み重ねてできた、a \times b \times c の直方体があります。全ての立方体と直方体の各辺は x 軸、y 軸、z 軸のいずれかと平行です。 ほむらちゃんとてんぷら君は交互に以下の操作を繰り返します。 直方体から縦方向、横方向、奥行き方向のいずれかの方向に一列に並んだ積み木のブロックの列を選んで、列に含まれるブロック全てを赤く塗る。ただし、すでに赤く塗られているブロックを含む列は選ぶことができない。 より正確には、 直方体に含まれるブロックのうち一つと、x,y,z の三つの方向から一つを選ぶ。 選んだブロックを選んだ方向に整数の距離だけ動かしたとき、完全に重なるようなブロック全てを赤く塗る（ 0  や負の整数の距離を動かすことも考える）。ただし、条件を満たすブロックであってすでに塗られたものがひとつでも存在する場合、この操作は行うことができない。 ほむらちゃんが先手で、先に操作を行えなくなった方の負けです。 また、最初全ての立方体に色は塗られていません。 二人が最適に行動したとき、どちらが勝つか判定してください。 

"
p02055,Two Colors Sort,"umg 君は散歩中に  1,2, ... ,n  を並び変えてできる長さ n の数列  p_1, p_2, ..., p_n  を見つけました。 umg 君は不思議な力を使うことで、同じ色に塗られた異なる数を二つ選んで場所を交換することができます。 umg 君は、数列に含まれる数のうち r 個を赤に、残りの n-r 個を青に塗ることで数列を昇順に並び替えられるようにしたいと考えました。 umg 君が目標を達成できるかどうか判定してください。 ただし、数字はとても重いので不思議な力を使わずに動かすことはできません。また、umg 君は天才なので不思議な力を任意の回数使うことができます。 

"
p02056,Jam,"ある国には n 個の街があり、1,\ 2,\ ...,\ n の番号がつけられています。これらの街は m 本の道で双方向に結ばれており、i 番目の道を使うと街 u_i と v_i の間を時間 t_i で移動することができます。また、どの 2 つの街もいくつかの道を使うことで行き来することができます。 それぞれの街では食パンが売られており、街 i で売られている食パンの美味しさは p_i です。 さらに、この国には k 種類の味のジャムがあり、街 i では味 c_i で美味しさ j_i のジャムを買うことができます。 街 1 に住んでいるほむちゃんは、これからパンとジャムを 1 つずつ買いにお出かけすることにしました。ほむちゃんは、いくつかの街を移動してパンとジャムを買って街 1 に戻ってきます。より正確には、ある街 u に移動してパンを買い、ある街 v を選んでジャムを買い、街 1 に戻ってきます。この際、u=v や u=1 、v=1 でも構いません。 お買い物を終えたほむちゃんの幸福度は、「買ったパンとジャムの美味しさの合計」ー「移動にかかった時間」です。k 種類それぞれのジャムについて、その味のジャムとパンを買いに行くときの幸福度として考えられる最大値を計算してください。 

"
p02057,MOD Rush,"長さ n の正の整数列 a と、長さ m の正の整数列 b が与えられます。 すべての (i, j) (1 \leq i \leq n, 1 \leq j \leq m) について、a_i を b_j で割ったあまりを求め、それらの和を出力してください。 

"
p02058,Tree,"n 頂点からなる木が与えられます。木の各頂点には 1 から n の番号が割り振られています。また、n−1 本の辺のうち、 i\ (= 1, 2, ..., n-1) 本目の辺は頂点 u_i と頂点 v_i とを結んでいます。 この木の k 個の空でない部分グラフの組であって、各部分グラフがいずれも連結で、どの二つの相異なる部分グラフも頂点を共有しないものの個数を求めるプログラムを作成してください。ただし答えがとても大きくなることがあるため、998244353 で割ったあまりを答えてください。 なお、k 個の部分グラフからなる集合が同一のものは、k 個の部分グラフの順序が異なるものも同一視するものとします。 

"
p02059,Revenge of UMG,"'u', 'm', 'g' の三種類の文字からなる文字列 t に対し、1, 2, ..., |t| 文字目をそれぞれ t_1, t_2, ..., t_{|t|} と表すことにしたとき、以下の条件を満たす (i, j, k) の組の個数を、文字列 t の “umg 数”と呼ぶことにします:  1 \leq i &lt; j &lt; k \leq |t|  j - i = k - j  t_i = 'u', t_j = 'm', t_k = 'g' さて、'u', 'm', 'g', '?' の四種類の文字からなる文字列 s が与えられます。s の '?' をそれぞれ 'u', 'm', 'g' のいずれかに置き換えてできる文字列は、'?' の個数を n として 3^{n} 通り考えられますが、それぞれの文字列の umg 数について総和をとったものを 998244353 で割ったあまりを求めてください。 

"
p02060,Four Tea,"プログラミングコンテストにはお茶が欠かせない。お茶にはコンテスタントの緊張を和らげる作用があるのだ [要出典] コンテストに参加する選手が n 人いるので、この人数分のお茶を用意したいと考えている。お茶のパッケージは a, b, c, d の 4 種類あり、どれも同じ品種であるが内容量が異なる。あるパッケージ x について、そのパッケージ 1 つ分の値段は p_x 円であり、1 つ買うと t_x 杯分のお茶を作れることがわかっている。 n 人分のお茶を作るために必要な金額の最小値を求めよ。なお、全く購入しないパッケージがあってもよく、ちょうど n 人分になるようにパッケージを購入する必要もない (n 人分以上作れれば良い)。 

"
p02061,Doubling,"クエリが q 個与えられます。1 個のクエリにつき、 1 つの正の整数 n が与えられるので、次の 2 つの条件を満たす正の整数 m の個数を求めてください。 2 \leq m \leq n を満たす m の約数のうち、m を除いたものの総積が m の 2 倍以上になる 


"
p02062,Short Circuit Evaluation,"
直大くんと北大くんはゲームをしています。
北大くんは、まず以下の bnf で表される論理式を生成します。
 
&amp; は論理積を、| は論理和を表し、&amp; の方が | より先に評価されます。
 直大くんは、この論理式を（文字列として見て）左から読んでいき、? を見つけたとき以下の行動をします。 その ? を 0 にしても 1 にしても論理式の評価結果が変わらないことが確定しているなら、何もせず読み進める。 そうでないなら、北大くんに 1 円払い、その ? を 0 または 1 に書き換える。 論理式は以下のように評価されます。いわゆる普通の論理式です。 直大くんが論理式の評価結果を確定させるために支払う必要がある最小金額はいくらでしょう？ 評価結果を 0 にする場合と 1 にする場合でそれぞれ求めてください。 


"
p02063,Is Greedy Optimal?,"1, 5, 10, 50, 100, 500 円玉がある日本では、ある金額を支払う時、大きい金額の硬貨をできるだけ多く使うという方法で支払うと、硬貨の枚数を最小化できることが知られている。 硬貨の金額が日本とは異なる場合、貪欲に支払うと必ずしも最小化できるとは限らない。 貪欲に支払うのが最適になるために、硬貨の金額が満たすべき条件は何なのだろうか。 

"
p02064,Restore Shortest Path,"競技プログラマーは日々最短経路問題を解いている。bfs や、ベルマンフォード、ダイクストラ、ワーシャルフロイドと多くのアルゴリズムも知られている。 あなたはそんな中、どうしても解けない最短路問題があった。それはグラフを見ずに最短路問題を解けという問題だ！こんなもの通常の人類には解けるわけがないのだが、30 分だけ ivvivvi 神の天啓を受けることができるようになった。 ivvivvi 神は競技プログラミングにも最短経路問題にも精通しており、どんなグラフに対しても任意の 2 点間の最短経路長を定数時間で求める能力を持っている。あなたは ivvivvi 神の力を借りて最短経路問題を解こうと思ったが、残念ながらあなたの解くべき最短経路問題では具体的な経路を出力しなければならない。ivvivvi 神なら、最短経路の復元も容易だが、ivvivvi 神は非常に忙しいので、これ以上手を煩わせるわけには行けない。そこで、できるだけ少ない質問回数で自力で最短経路を復元することにした。 

"
p02065,Grid Number,"えびちゃんは、横 n 列、縦 2 行のグリッドに 1 から 2 \times n までの整数をちょうど 1 つずつ書き込もうとしています。 グリッドの各マスにはちょうど 1 つの整数しか書き込めません。 普通に書き込むだけでは面白くないので、以下のようなルールを定めました。 隣り合う 2 つのマスに書き込まれた整数の、差の絶対値は k 以下である。 あるマスの右にマスが存在する時、あるマスに書き込まれた整数は、右のマスに書き込まれた整数より真に小さい。 あるマスの下にマスが存在する時、あるマスに書き込まれた整数は、下のマスに書き込まれた整数より真に小さい。 ここで、隣り合う 2 つのマスとは、あるマスと上下左右の辺を共有するマスのことを表します。 
このような書き込み方は何通りあるでしょうか?
答えが非常に大きくなる可能性があるので、素数 m で割った余りを出力してください。
 

"
p02066,Treasure Hunter,"財宝の山が n 個あり、それぞれの山は 1 から n までで番号づけられている。i 番目の山には価値 p_i のお宝が眠っており、このお宝はその山に訪れた時点で得ることができる。一度お宝を得るとその山からはお宝がなくなってしまうので、お宝はそれぞれ一度しか得ることはできない。 異なる山に移動するには必ず道を利用しなければならない。山と山の間には合計 n-1 本の道があり、i 番目の道は山 u_i と v_i を双方向に結んでいる。もしもどの道も問題なく通行可能であると仮定すると、任意の 2 つの山について相互に行き来可能であることが分かっている。 どの道も長らく誰も通行しておらず修復しないと渡れないため、i 番目の道について最初に渡る際には c_i 円を支払って工事し、通行可能にする必要がある。一度工事した道であればそれ以上お金を支払うことなく通行が可能である。 トレジャーハンターであるあなたは、道の工事費用の予算を w 円持っている。あなたの目的は、はじめに降り立つ山を任意に 1 つ決め、合計 w 円以下で道を工事して異なる山に移動することで、得られるお宝の価値の合計を最大化することである。あなたは最大でどれだけの価値を得られるだろうか？ なお、お宝を途中で換金することはできないため、お宝を工事費用として使用することはできないことに注意せよ。 

"
p02067,AIGo,"recently, ais which play go (a traditional board game) are well investigated.
your friend hikaru is planning to develop a new awesome go ai named sai and promote it to company f or company g in the future.
as a first step, hikaru has decided to develop an ai for 1d-go, a restricted version of the original go. in both of the original go and 1d-go, capturing stones is an important strategy.
hikaru asked you to implement one of the functions of capturing. in 1d-go, the game board consists of $l$ grids lie in a row.
a state of 1d-go is described by a string $s$ of length $l$.
the $i$-th character of $s$ describes the $i$-th grid as the following: when the $i$-th character of $s$ is b, the $i$-th grid contains a stone which is colored black. when the $i$-th character of $s$ is w, the $i$-th grid contains a stone which is colored white. when the $i$-th character of $s$ is ., the $i$-th grid is empty. maximal continuous stones of the same color are called a chain.
when a chain is surrounded by stones with opponent's color, the chain will be captured. more precisely, if $i$-th grid and $j$-th grids ($1 &lt; i + 1 &lt; j \leq l$) contain white stones and every grid of index $k$ ($i &lt; k &lt; j$) contains a black stone, these black stones will be captured, and vice versa about color. please note that some of the rules of 1d-go are quite different from the original go.
some of the intuition obtained from the original go may curse cause some mistakes. you are given a state of 1d-go that next move will be played by the player with white stones.
the player can put a white stone into one of the empty cells.
however, the player can not make a chain of white stones which is surrounded by black stones even if it simultaneously makes some chains of black stones be surrounded.
it is guaranteed that the given state has at least one grid where the player can put a white stone and there are no chains which are already surrounded. write a program that computes the maximum number of black stones which can be captured by the next move of the white stones player. 

"
p02068,trivial Common Divisor,"you are given a positive integer sequence $a$ of length $n$. you can remove any numbers from the sequence to make the sequence “friendly"". 
a sequence is called friendly if there exists an integer $k$ (&gt;1) such that every number in the sequence is a multiple of $k$.
since the empty sequence is friendly, it is guaranteed that you can make the initial sequence friendly.  you noticed that there may be multiple ways to make the sequence friendly. so you decide to maximize the sum of all the numbers in the friendly sequence. please calculate the maximum sum of the all numbers in the friendly sequence which can be obtained from the initial sequence. 

"
p02069,Universal and Existential Quantifiers,"you are given a list of $n$ intervals. the $i$-th interval is $[l_i, r_i)$, which denotes a range of numbers greater than or equal to $l_i$ and strictly less than $r_i$. in this task, you consider the following two numbers: the minimum integer $x$ such that you can select $x$ intervals from the given $n$ intervals so that the union of the selected intervals is $[0, l)$. the minimum integer $y$ such that for all possible combinations of $y$ intervals from the given $n$ interval, it does cover $[0, l)$. we ask you to write a program to compute these two numbers. 

"
p02070,Permutation Sort,"one day (call it day 0), you find a permutation $p$ of $n$ integers written on the blackboard in a single row. 
fortunately you have another permutation $q$ of $n$ integers, so you decide to play with these permutations. every morning of the day 1,2,3,... , you rewrite every number on the blackboard in such a way that erases the number $x$ and write the number $q_x$ at the same position. please find the minimum non-negative integer $d$ such that in the evening of the day $d$ the sequence on the blackboard is sorted in increasing order. 

"
p02071,Consistent Trading,"your company is developing a video game. in this game, players can exchange items. this trading follows the rule set by the developers. the rule is defined as the following format: ""players can exchange one item $a_i$ and $x_i$ item $b_i$"". note that the trading can be done in both directions. items are exchanged between players and the game system. therefore players can exchange items any number of times. sometimes, testers find bugs that a repetition of a specific sequence of tradings causes the unlimited increment of items. for example, the following rule set can cause this bug. players can exchange one item 1 and two item 2. players can exchange one item 2 and two item 3. players can exchange one item 1 and three item 3. in this rule set, players can increase items unlimitedly. for example, players start tradings with one item 1. using rules 1 and 2, they can exchange it for four item 3. and, using rule 3, they can get one item 1 and one item 3. by repeating this sequence, the amount of item 3 increases unlimitedly. these bugs can spoil the game, therefore the developers decided to introduce the system which prevents the inconsistent trading. your task is to write a program which detects whether the rule set contains the bug or not. 

"
p02072,All your base are belong to us,"in a.d. 2101, war was beginning. the enemy has taken over all of our bases. to recapture the bases, we decided to set up a headquarters. we need to define the location of the headquarters so that all bases are not so far away from the headquarters. therefore, we decided to choose the location to minimize the sum of the distances from the headquarters to the furthest $k$ bases. the bases are on the 2-d plane, and we can set up the headquarters in any place on this plane even if it is not on a grid point. your task is to determine the optimal headquarters location from the given base positions. 

"
p02073,Route Calculator Returns,"you have a grid with $h$ rows and $w$ columns. each cell contains one of the following 11 characters: an addition operator +, a multiplication operator *, or a digit between $1$ and $9$.  there are paths from the top-left cell to the bottom-right cell by moving right or down $h+w-2$ times. let us define the value of a path by the evaluation result of the mathematical expression you can obtain by concatenating all the characters contained in the cells on the path in order.
your task is to compute the sum of values of any possible paths. since the sum can be large, find it modulo $m$. it is guaranteed the top-left cell and the bottom-right cell contain digits. moreover, if two cells share an edge, at least one of them contains a digit. in other words, each expression you can obtain from a path is mathematically valid. 

"
p02074,M grid calculation,"have you experienced $10$-by-$10$ grid calculation? it's a mathematical exercise common in japan. in this problem, we consider the generalization of the exercise, $n$-by-$m$ grid calculation. in this exercise, you are given an $n$-by-$m$ grid (i.e. a grid with $n$ rows and $m$ columns) with an additional column and row at the top and the left of the grid, respectively. each cell of the additional column and row has a positive integer. let's denote the sequence of integers on the column and row by $a$ and $b$, and the $i$-th integer from the top in the column is $a_i$ and the $j$-th integer from the left in the row is $b_j$, respectively. initially, each cell in the grid (other than the additional column and row) is blank. let $(i, j)$ be the cell at the $i$-th from the top and the $j$-th from the left. the exercise expects you to fill all the cells so that the cell $(i, j)$ has $a_i \times b_j$. you have to start at the top-left cell. you repeat to calculate the multiplication $a_i \times b_j$ for a current cell $(i, j)$, and then move from left to right until you reach the rightmost cell, then move to the leftmost cell of the next row below. at the end of the exercise, you will write a lot, really a lot of digits on the cells. your teacher, who gave this exercise to you, looks like bothering to check entire cells on the grid to confirm that you have done this exercise. so the teacher thinks it is ok if you can answer the $d$-th digit (not integer, see an example below), you have written for randomly chosen $x$. let's see an example.  for this example, you calculate values on cells, which are $8$, $56$, $24$, $1$, $7$, $3$ in order. thus, you would write digits 8, 5, 6, 2, 4, 1, 7, 3. so the answer to a question $4$ is $2$. you noticed that you can answer such questions even if you haven't completed the given exercise. given a column $a$, a row $b$, and $q$ integers $d_1, d_2, \dots, d_q$, your task is to answer the $d_k$-th digit you would write if you had completed this exercise on the given grid for each $k$. note that your teacher is not so kind (unfortunately), so may ask you numbers greater than you would write. for such questions, you should answer 'x' instead of a digit.  

"
p02075,Zombie Land,"your friend, tatsumi, is a producer of immortal culture production in chiba (icpc). his company is planning to form a zombie rock band named gray faces and cheer chiba prefecture up. but, unfortunately, there is only one zombie in icpc. so, tatsumi decided to release the zombie on a platform of soga station to produce a sufficient number of zombies. as you may know, a zombie changes a human into a new zombie by passing by the human. in other words, a human becomes a zombie when the human and a zombie are at the same point. note that a zombie who used to be a human changes a human into a zombie too. the platform of soga station is represented by an infinitely long line, and tatsumi will release a zombie at a point with coordinate $x_z$. after the release, the zombie will start walking in the positive direction at $v_z$ per second. if $v_z$ is negative, the zombie will walk in the negative direction at $|v_z|$ per second. there are $n$ humans on the platform. when tatsumi releases the zombie, the $i$-th human will be at a point with coordinate $x_i$ and will start walking in the positive direction at $v_i$ per second. if $v_i$ is negative, the human will walk in the negative direction at $|v_i|$ per second as well as the zombie. for each human on the platform, tatsumi wants to know when the human becomes a zombie. please help him by writing a program that calculates a time when each human on the platform becomes a zombie. 

"
p02076,Rooks Game,"""rooks game"" is a single-player game and uses a chessboard which has $n \times n$ grid and $m$ rook pieces. a rook moves through any number of unoccupied squares horizontally or vertically. when a rook can attack another rook, it can capture the rook and move to the square which was occupied. note that, in rooks game, we don't distinguish between white and black, in other words, every rook can capture any of other rooks.  initially, there are $m$ rooks on the board. in each move, a rook captures another rook. the player repeats captures until any rook cannot be captured. there are two types of goal of this game. one is to minimize the number of captured rooks, and the other is to maximize it. in this problem, you are requested to calculate the minimum and maximum values of the number of captured rooks. 

"
p02077,Bombing,"jag land is a country, which is represented as an $m \times m$ grid. its top-left cell is $(1, 1)$ and its bottom-right cell is $(m, m)$. suddenly, a bomber invaded jag land and dropped bombs to the country. its bombing pattern is always fixed and represented by an $n \times n$ grid. each symbol in the bombing pattern is either x or .. the meaning of each symbol is as follows. x: bomb  .: empty here, suppose that a bomber is in $(br, bc)$ in the land and drops a bomb. the cell $(br + i - 1, bc + j - 1)$ will be damaged if the symbol in the $i$-th row and the $j$-th column of the bombing pattern is x ($1 \le i, j \le n$). initially, the bomber reached $(1, 1)$ in jag land. the bomber repeated to move to either of $4$-directions and then dropped a bomb just $l$ times. during this attack, the values of the coordinates of the bomber were between $1$ and $m - n + 1$, inclusive, while it dropped bombs. finally, the bomber left the country. the moving pattern of the bomber is described as $l$ characters. the $i$-th character corresponds to the $i$-th move and the meaning of each character is as follows. u: up d: down l: left r: right your task is to write a program to analyze the damage situation in jag land. to investigate damage overview in the land, calculate the number of cells which were damaged by the bomber at least $k$ times. 

"
p02078,Undo Swapping,"$n$ 行 $n$ 列のマス目の上に $n$ 個の石が置いてあります。
$i$ 番目の石は $r_i$ 行 $c_i$ 列にあります。同じマスに複数の石が置かれていることはありません。 あなたは次の2種類の操作を任意の順で任意の回数行うことができます。 2つの行を選び、それらを交換する 2つの列を選び、それらを交換する。 $n$ 個の石を、マス目の左上から右下にかけての対角線上に並べることが出来るかを判定するプログラムを作成してください。
可能な場合は必要な最小の操作回数を出力してください。不可能な場合は $-1$ を出力してください。 ただし、対角線上に並ぶ石の順番は関係無い ことに注意してください。
例えば、1番目の石を1行1列のマスに配置する必要はありません。 
"
p02079,Spent Fuel Disposal,"$n$ 個の下水処理施設が $m$ 本のパイプで繋がっており、$i$ 番目のパイプは $u_i$ 番目と $v_i$ 番目の施設を繋いでいます。
パイプは全て、毎秒最大 $1$ リットルの液体を流すことができます、  今、$s$ 番目の施設から $t$ 番目の施設へ工業廃水を、 $u$ 番目の施設から $v$ 番目の施設へ純水を流したいです。$s$ 番目および $u$ 番目の施設は、それぞれ工業廃水および純水を十分な量有しており、パイプで繋がっている別の施設へこれらの液体を好きに送ることができます。 
また、各施設では、送られてきた液体をパイプで繋がっている別の処理施設へ流すことができます。 パイプはハイテクなので、$2$ 種類の液体を同時に好きな方向へ流すことができます。 
例えば、$i$ 番目のパイプは、$u_i$ から $v_i$ へ工業廃水を、$v_i$ から $u_i$ へ純水を流すことができます。
反対に $v_i$ から $u_i$ へ工業廃水を、$u_i$ から $v_i$ へ純水を流すことも可能です。
もちろん、$2$ 種類の液体を同じ方向へ流すこともできます。  ただし、どの場合においても、$1$ つのパイプに流す液体の総量は毎秒 $1$ リットルを超えることはできません。 $s$ から $t$ へ流す工業廃水の総量と $u$ から $v$ へ流す純水の総量の合計は、最大で毎秒何リットルにできますか。
答えは整数になることが証明できるため、整数で出力してください。 
"
p02080,Cyclic String,"文字列 $s = s_0 s_1 \ldots s_{n-1}$ が文字列 $t = t_0 t_1 \ldots t_{m-1}$ に巡回的に含まれるとは、
ある $k$ があって、全ての $i$ $(0 \le i \lt n)$ について
$s_i = t_{(i+k) \bmod m}$ が成立する事を言います。 $n$ 個の文字列 $s_1, \dots, s_n$ が与えられます。
以下の条件を満たす文字列の集合 $\{c_1, \dots, c_k\}$ を考えます（$k$ は任意）: 各$i$ $(1 \leq i \leq n)$について、$s_i$は少なくとも1つの$c_j$に巡回的に含まれる。$(1 \leq j \leq k)$ $|c_1| + |c_2| + \cdots + |c_k|$の最小値を求めてください。 
"
p02081,Nose And Lung,"あなたは謎の敵対的なエイリアンについて研究しています。 エイリアンには鼻の穴が $n$ 個あり、肺が $1$ 個以上あります。 
しかし、肺がいくつあるか、および、どの鼻の穴とどの肺が繋がっているかが分かっていません。 あなたはエイリアンに関して、以下の仮説を立てました: それぞれの肺は $1$ 個以上の鼻の穴につながっている それぞれ鼻の穴は $0$ 個以上の肺につながっている 全ての肺に対して酸素が供給されないと死んでしまう。すなわち、ある肺につながっている全ての鼻の穴を塞がれると、エイリアンは死ぬ 政府はあなたの仮説を検証するために、肺と鼻の穴の接続関係がわかっていないエイリアンを $1$ 匹捕獲し、$2^n$ 匹に複製しました。これらのエイリアンで以下のような実験を行いました: $i$ 番目 $(i=0, \ldots, 2^n-1)$ のエイリアンに対しては、 $i$ を二進表記した際の $k$ 桁目が $1$ であるような $k$ 番目の鼻の穴を全て塞ぐ ($k = 0, \ldots, n-1$)。 その結果、エイリアンが生きたままか死んだかを記録する。   あなたはこれらの $2^n$ 個の実験の結果を全て与えられました。
実験の結果が仮説に矛盾していないか判定し、矛盾していない場合には
考えられる肺の最小個数を答えてください。 
"
p02082,Expensive Function,"数列$a$と非負整数上の関数$f(x)$が以下のように定義されています。 $a_1 = 0$ $a_i = (a_{i-1} \times p + q) \bmod m (i \geq2)$ $f(x) = x \mbox{ xor } a_1 \mbox{ xor } a_2 \mbox{ xor } ... \mbox{ xor } a_{10^8}$  松崎くんが計算すると、$f(s) = t$ でした。
非負整数 $y$ が与えられるので、$f(y)$ を求めてください。 $n$ 個の非負整数 $x_1, x_2, \ldots, x_n$ の排他的論理和 $x_1 \mbox{ xor } x_2 \mbox{ xor } \ldots \mbox{ xor } x_n$ は以下のように定義されます: $x_1 \mbox{ xor } x_2 \mbox{ xor } \ldots \mbox{ xor } x_n$ を二進表記した際の $2^k ( k \geq 0 )$ の位の数は $x_1, x_2, \ldots, x_n$ のうち、二進表記した際の $2^k ( k \geq 0 )$ の位の数が $1$ となるものの個数が奇数ならば $1$ 、そうでなければ $0$ となる。 

"
p02083,Clique Drawing,"$m$ 回操作を行って $n$ 頂点のグラフを作ります。
初め、$n$ 頂点のどの頂点間にも辺は存在しません。
$i$ 番目の操作では、頂点集合 $\{ v_{i, 1}, v_{i, 2}, ... , v_{i, k_i} \}$ の全ての $2$ 頂点間に辺を張ります。ただし、以前の操作によって既に辺が貼られている頂点間には張りません。
また、どの頂点も $m$ 回の操作の内高々 $2$ 回の操作にしか現れません。
これらの操作によって出来たグラフ上の、最大独立集合の大きさを求めてください。 無向グラフ $g = (v, e)$ の独立集合 $u$ とは、$u \subseteq v$ なる頂点の部分集合であって、全ての $u, v \in u$ について、$(u, v) \notin e$ を満たすものを指します。
最大独立集合とは、このような独立集合の内、最も大きいものを指します。 
"
p02084,Human Seperation,"単位円の上に人が $10^6$ 人、等間隔に立っています。
$t = \frac{2\pi}{10^6}$ として、$i$ 番目の人は 座標 $(\cos{(it)}, \sin{(it)})$ に立っています。 これら $10^6$ 人の中で、非常に仲が悪いペアが $n$ 組あります。
具体的には、$i = 1, \ldots, n$ について、人 $a_i$ と人 $b_i$ は仲が悪いです。 単位円の管理人である松崎くんは、壁を建設することによって仲の悪いペアを全て分断することにしました。
建設する壁は厚さがなく、とてつもなく長いため、直線と同一視することができます。また、壁同士は交わっても構いません。
ただし、人が立っている場所に壁を建設することは出来ません。
壁を建設するにはコストがかかるので、なるべく少ない数の壁で全てのペアを分断したいです。
目的を達成するためには、いくつの壁を建設する必要があるか求めてください。 定式的に問題を言い換えると以下のようになります: 2次元平面上に単位円があり、円周上の2点からなるペアが $n$ 組与えられます。 あなたは平面上に任意に直線を置くことができます。 ただし、どの与えられた点も直線上に存在してはいけません。 全てのペアが、いずれかの直線によって分離されるには、直線を最小で何本置く必要があるか求めてください。 「2点が直線によって分離されている」とは、2点をどのような曲線で結んでも、曲線が直線と交わる状態を指します。 
"
p02085,Permutation Score,"松崎くんは順列が大好きです。今日は順列によって定まる「サイクル森」について考えることにしました。 $1$ から $k$ までの順列 $p = (p_1, \ldots, p_k)$ に対し「$p$ によって定まるサイクル森」とは、以下の2条件を満たすグラフ $g(p)$ を指します: $g(p)$ は $k$ 頂点からなり、それぞれの頂点には $1$ から $k$ の番号が付けられている。 $i=1, \ldots, k$ について、頂点 $i$ と頂点 $p_i$ の間に辺が張られている（自己ループおよび多重辺を許し、必ず $k$ 本の辺を張る）。逆に、$g(p)$にはそれら $k$ 本以外の辺は存在しない。 順列 $p$ のスコア $f(p)$ を、「$g(p)$ の連結成分の大きさの総積」として定義します。例えば $p = (2, 1, 4, 3)$ ならば $f(p) = 4$、$p = (2, 3, 1, 4)$ ならば $f(p) = 3$です。 正整数 $n$ が与えられます。長さ $n$ の順列は $n!$ 通り考えられますが、これら全ての順列のスコアの分散はいくつになるか求めてください。 全ての順列のスコアの分散とは以下のように定義されます: まず、$p$ を $n!$ 個の順列全てからなる集合とします。 スコアの平均を$a = \frac{1}{n!} \sum_{p \in p} f(p)$ とおきます。 この時、全ての順列のスコアの分散は $\frac{1}{n!} \sum_{p \in p} (f(p) - a)^2$ として定義されます。 入力の制約下において、求める値は以下の条件を満たす有理数 $\frac{q}{p}$ として表せることが証明できます: $p$ と $q$ は互いに素な非負整数である。 $p$ は $10^9+7$ の倍数にならず、$p \cdot r \equiv q (\bmod 10^9+7)$ なる整数 $r$が存在する。 分散の値の代わりに $r \bmod 10^9+7$を出力してください。 
"
p02086,Palindrome Compliment,"小池くんはチームメイトをよく褒めます。
彼はチームメイトである松崎くんを文字列 $s$ で褒めます。その形式は以下の条件を満たします。 $hoge, zaki, o$ は小文字アルファベットのみからなる文字列 $s = hoge + zaki + hoge + o$ ($+$ は文字列の結合を表す) $s$ は回文 小池くんは$hoge$の長さを$n$としたときに、松崎くんの褒め方が何通りあるのか気になりました。
3人目のチームメンバーにしてred coderであるあなたは小池くんの代わりに答えを計算することになりました。 文字列 $zaki, o$ と 整数 $n$ が与えられるので、ありえる組み合わせの数を求めてください．
なお、答えは非常に大きくなる可能性があるので、$10^9 + 7$ で割った 余りを出力してください。 
"
p02087,Prefix Suffix Nim,"左崎さんと右男さんは、長さ $n$ の数列 $a_1, a_2, \dots ,a_n$ を使ったゲームで遊ぶのが好きです。
このゲームでは左崎さんと右男さんで交互に以下の操作を行います。 左崎さんの手番では $1 \leq k \leq n$ を指定し、$a_1, a_2, \dots ,a_k$ の値をそれぞれ $1$ ずつ減らす。 右男さんの手番では $1 \leq k \leq n$ を指定し、$a_k, a_{k+1}, \dots ,a_n$ の値をそれぞれ $1$ ずつ減らす。 手番終了時に数列の中に負の数が存在していた場合、その操作をした人は負けます。負けなかった方は勝ちます。最初に操作をするのは左崎さんです。 左崎さんはこのゲームをプレイするために、$0, 1, \dots, s$ からなる長さ $n$ の数列を全種類（$(s+1)^n$ 通り）買ってきました。左崎さんと右男さんがこれらの数列を使って $1$ 回ずつゲームをしました。左崎さんが勝った回数を $998244353$ で割ったあまりを求めてください。ただし、両者ともそれぞれが勝つために最適な操作をしたとします。 
"
p02088,Union Ball,"there are n balls in a box. the i-th ball is labeled with a positive integer a_i. you can interact with balls in the box by taking actions under the following rules:  if integers on balls in the box are all odd or all even, you cannot take actions anymore.  otherwise, you select arbitrary two balls in the box and remove them from the box. then, you generate a new ball labeled with the sum of the integers on the two balls and put it into the box. for given balls, what is the maximum number of actions you can take under the above rules? 

"
p02089,AddMulSubDiv,"you have an array a of n integers. a_i denotes the i-th element of a. you have to process one of the following queries q times:  query 1: the query consists of non-negative integer x, and two positive integers s, t. for all the elements greater than or equal to x in a, you have to add s to the elements, and then multiply them by t. that is, an element with v (v \geq x) becomes t(v + s) after this query.  query 2: the query consists of non-negative integer x, and two positive integers s, t. for all the elements less than or equal to x in a, you have to subtract s from the elements, and then divide them by t. if the result is not an integer, you truncate it towards zero. that is, an element with v (v \leq x) becomes $\mathrm{trunc}$ ( \frac{v - s}{t} ) after this query, where $\mathrm{trunc}$ ( y ) is the integer obtained by truncating y towards zero.   ""truncating towards zero"" means converting a decimal number to an integer so that if x = 0.0 then 0 , otherwise an integer whose absolute value is the maximum integer no more than |x| and whose sign is same as x. for example, truncating 3.5 towards zero is 3, and truncating -2.8 towards zero is -2. after applying q queries one by one, how many elements in a are no less than l and no more than r? 

"
p02090,Shuttle Run,"
university h has a unique physical fitness test program, aiming to grow the mindset of students.
among the items in the program, shuttle run is well-known as especially eccentric one. surprisingly, there are yokans (sweet beans jellies) on a route of the shuttle run. greedy homura-chan would like to challenge to eat all the yokans. and lazy homura-chan wants to make the distance she would run as short as possible. for her, you decided to write a program to compute the minimum distance she would run required to eat all the yokans.
 

"
p02091,XORANDORBAN,"you are given a positive integer n. your task is to determine a set s of 2^n integers satisfying the following conditions:  all the integers in s are at least 0  and less than 2^{n+1}.  all the integers in s are distinct.  you are also given three integers x, a, and o, where 0 \leq x, a, o &lt; 2^{n+1}. then, any two integers (a, b) in s must satisfy a {\it xor} b \neq x, a {\it and} b \neq a, a {\it or} b \neq o, where {\it xor}, {\it and}, {\it or} are bitwise xor, bitwise and, bitwise or, respectively. note that a and b are not necessarily different. 


"
p02092,Red Black Balloons,"homura-chan's dream comes true. it means icpc asia regional contest 20xx will be held in sapporo! homura-chan has been working hard for the preparation. and finally, it's the previous day of the contest. homura-chan started to stock balloons to be delivered to contestants who get accepted. however, she noticed that there were only two colors of balloons: red and black. 

"
p02093,Invariant Tree,"you have a permutation p_1, p_2, ... , p_n of integers from 1 to n. you also have vertices numbered 1 through n. find the number of trees while satisfying the following condition. here, two trees t and t' are different if and only if there is a pair of vertices where t has an edge between them but t’ does not have an edge between them.  for all integer pairs i, j (1\leq i &lt; j \leq n), if there is an edge between vertices i and j, there is an edge between vertices p_i and p_j as well. since this number can be extremely large, output the number modulo 998244353. 

"
p02094,Toss Cut Tree,"you are given two trees t, u. each tree has n vertices that are numbered 1 through n. the i-th edge (1 \leq i \leq n-1) of tree t connects vertices a_i and b_i. the i-th edge (1 \leq i \leq n-1) of tree u connects vertices c_i and d_i. the operation described below will be performed n times.  on the i-th operation, flip a fair coin.  if it lands heads up, remove vertex i and all edges directly connecting to it from tree t.  if it lands tails up, remove vertex i and all edges directly connecting to it from tree u.  
after n operations, each tree will be divided into several connected components. let x and y be the number of connected components originated from tree t and u, respectively.
your task is to compute the expected value of x \times y. more specifically, your program must output an integer r described below.
first, you can prove x \times y is a rational number. let p and q be coprime integers that satisfies \frac{p}{q} = x \times y. r is the only integer that satisfies r \times q $\equiv$ p $ \bmod \;$  998244353, 0 \leq r &lt; 998244353.
 

"
p02095,Colorful Tree,"
yamiuchi (assassination) is a traditional event that is held annually in jag summer camp. every team displays a decorated tree in the dark and all teams' trees are compared from the point of view of their colorfulness. in this competition, it is allowed to cut the other teams’ tree to reduce its colorfulness. despite a team would get a penalty if it were discovered that the team cuts the tree of another team, many teams do this obstruction.
 you decided to compete in yamiuchi and write a program that maximizes the colorfulness of your team’s tree. the program has to calculate maximum scores for all subtrees in case the other teams cut your tree. 

"
p02096,Add,"mr. t has had an integer sequence of n elements a_1, a_2, ... , a_n and an integer k. mr. t has created n integer sequences b_1, b_2, ... , b_n such that b_i has i elements.  b_{n,j} = a_j (1 \leq j \leq n)   b_{i,j} = k \times b_{i+1,j} + b_{i+1,j+1} (1\leq i \leq n-1, 1 \leq j \leq i) mr. t was so careless that he lost almost all elements of these sequences a and b_i. fortunately, b_{1,1}, b_{2,1}, ... , b_{n,1} and k are not lost. your task is to write a program that restores the elements of the initial sequence a for him. output the modulo 65537 of each element instead because the absolute value of these elements can be extremely large. more specifically, for all integers i (1 \leq i \leq n), output r_i that satisfies r_i  $\equiv$ a_i $ \bmod \;$ 65537, 0 \leq r_i &lt; 65537. here, we can prove that the original sequence mr. t had can be uniquely determined under the given constraints. 

"
p02097,Vertical Permutation,"you are given a positive integer n. your task is to determine if there exists a square matrix a whose dimension is n that satisfies the following conditions and provide an example of such matrices if it exists. a_{i, j} denotes the element of matrix a at the i-th row and j-th column.  for all i, j (1 \leq i, j \leq n), a_{i, j} is an integer that satisfies 1 \leq a_{i, j} \leq 2n - 1.  for all k = 1, 2, ..., n, a set consists of  2n - 1 elements from the k-th row or k-th column is \{1, 2, ..., 2n - 1\}. if there are more than one possible matrices, output any of them. 

"
p02098,The Mean of Angles,"
与えられた2つの角度&theta;1,&theta;2 のちょうど間の角度を求めよ。ここで、ちょうど間の角度を、下図のように「&theta;1 &plus; t = &theta;2 &minus; t を満たすtのうち絶対値が最も小さいものをt’としたときの&theta;1 &plus; t’」と定義する。
 






"
p02099,GPA JANKEN,"
gpaとは「galaxy point of aizu」の略で、0から4までの実数値を取る。
gpaじゃんけんは二人で行うゲームである。各々が「じゃんけん、ぽん（ほい）」の合図で互いにグー、チョキ、パーのどれか好きな手を出した後、gpaが高い人が勝者となり、低い人が敗者となる。同じ場合は引き分けとなる。
 
n 人のgpaのデータが与えられるので、総当たり戦をした時のそれぞれの勝ち点を出力せよ。
ただし、勝ち点は勝ちの時3、引き分けの時1、負けの時0とする。
 
    総当たり戦とはすべての参加者が自分以外の参加者と丁度一回ずつ対戦する方式である。
 


"
p02100,Factorization,"
ukuku1333さんはおっちょこちょいなので、
x の一次式の積を展開したら、元の一次式がわからなくなってしまった。
x の n 次多項式が与えられるので、因数分解して元のxの一次式の積の形にせよ。
 
x の n 次多項式は以下のbnfによって与えられる。
 
指数及び係数が省略されている場合は1とみなす。
 

"
p02101,Let's Go To School,"
がっちょ君は期末試験が近づくとやる気がなくなってしまい、しばしば学校を休むようになる。
期末試験まで残りn日である。
がっちょ君のi日目のやる気はxiであり、i日目に学校に行くために必要なやる気はyiである。
がっちょ君は xi &ge; yi となる日のみ学校に行く。

がっちょ君を心配したハジ君は、がっちょ君を励ますことで、可能な限り学校に行かせようと考えた。
ハジ君は最初、励まし力pを持っている。

ハジ君がi日目に励まし力t(tは0以上の任意の実数)を消費してがっちょ君を励ますと、
がっちょ君のi日目のやる気はtだけ増加して、ハジ君の励まし力はtだけ減少する。さらに、i&plus;1 &le; nのとき、i&plus;1日目のがっちょ君のやる気xi&plus;1はmax(0, xi&plus;1 &minus; t) に変化する。
ハジ君は自分の持っている励まし力を超えて励ますことはできない。
 
ハジ君が最適な励まし方をしたときの、がっちょ君が学校に行く最大日数を求めよ。
 

"
p02102,Tangled Cables,"とある会社のネットワーク上には$n$台のコンピュータと、それらをつなぐ$m$本の通信ケーブルがある。コンピュータは$0$から$n - 1$までの識別子で区別され、通信ケーブルもまた$0$から$m - 1$までの識別子をもつ。 現在この会社にある任意の異なる2台のコンピュータは、いくつかの通信ケーブルを介して相互に通信することができるが、通信経路がただ一つに定まるとは限らない。 このネットワークには、通信ケーブルが多すぎて絡まってしまうという問題がある。そこであなたは、任意の通信について通信経路がただ一つになるようにいくつかの通信ケーブルを取り除くことにした。 通信ケーブル$i$はコンピュータ$a_i$と$b_i$を双方向につなぎ、その長さは$c_i$である。また、あなたが通信ケーブル$i$を取り除く際にかかる労力は$d_i$である。 作業を始める前に、あなたは取り除く通信ケーブルの長さの和に対する、作業を終えるまでにかかる労力の和の比を「おっくう感」とし、最小のおっくう感を見積もることにした。
ただし、一つも取り除けない場合のおっくう感は$0$である。 

"
p02103,Great Devil Sakanikia,"
大悪魔サカーニャは今日も天敵の猫に襲われていた。
いつもやられている訳にはいかないので、秘密兵器を購入した。
この秘密兵器は、巨大な岩を生成することで猫の移動経路を塞ぎ、猫がこちらに近づけないようにすることができる。
 
今、サカーニャと一匹の猫がマス(0,0),(n&minus;1,0),(n&minus;1,m&minus;1),(0,m&minus;1)で囲まれた長方形の閉区間内にいる。
マス(0,0)に猫、マス(n&minus;1,m&minus;1)にサカーニャがいる。
猫は上下左右の隣接したマスに移動することができるが、区間外に出ることはできない。
いくつかのマスは、穴や障害物の影響で侵入することができない。
サカーニャは、あるマスに1つ岩を生成することでそのマスに猫が侵入できなくすることができる。
ただし、マス(0,0)とマス(n&minus;1,m&minus;1)に岩を生成することはできない。
 
マス(0,0)からマス(n&minus;1,m&minus;1)までの移動経路を塞ぐために必要な、生成する岩の数の最小値を求めよ。
 

"
p02104,Chairs,"
1からnの番号が割り当てられたn脚の椅子に、1からnのidが割り当てられたn人の人が座ろうとしている。idがiの人は椅子piに座りたいと思っている。
 
n人の人はidが小さい順に1列に並び、列の先頭の人が以下の行動をとる。
 椅子piに誰も座っていなければ、その椅子に座る。 そうでなければ、piに1を加算し、列の最後尾に並び直す。ただし、piがnを超えた場合はpiを1にする。 
全ての人が椅子に座るまでこの行動が繰り返されたとき、最終的に各椅子に座っている人のidを出力せよ。
 

"
p02105,Zombie Hunter,"
  がっちょ君は人気のゲーム、zombie hunterに熱中している。このゲームには、頭、胴、腕、腰、足専用の5種類の防具があり、がっちょ君が操作するプレイヤーキャラクター(pc)は、体の各部に対応する防具をそれぞれ最大1つまで装備することができる。
また、各防具には重さと防御力が設定されており、pcの装備している防具の重さの合計がa以上b以下であり、かつ防御力の合計もa以上b以下であるとき、そのpcはスキルを発動することができる。
 
がっちょ君はn個の防具を所持している。装備する防具を適切に選ぶことで、pcがスキルを発動することができるかを調べて欲しい。
 

"
p02106,Light,"あなたはツリーライトというツリー状の照明器具を買ってきた。 この照明器具にはn個の接点があり、それぞれ0からn&minus;1までの番号がついている。各接点は10段階の明るさを表現できる電球と、電球の状態を切り替えるための装置で構成されている。最初、すべての接点の電球の明るさは0である。 また、接点と接点の間にはケーブル線がある。すべての接点はn&minus;1本のケーブル線によって繋がれており、接点0を上にして吊り下げられる。ここで、接点iから下方向に0本以上のケーブル線を介して、接点iと繋がる接点の集合を、接点iを根とした部分木と呼ぶ。 あなたはこの照明器具に対し、以下のいずれかの行動をとる。 count(r, x, y): 接点rを根とした部分木に含まれる接点の電球の中で、明るさがx以上y以下になっている電球の数を数える。 change(r, x, y): 接点rを根とした部分木に含まれる接点の電球の中で、明るさがちょうどxになっているすべての電球の明るさをyに変更する。 q回の行動が与えられるので、count(r, x, y)が与えられるたびにその時点での電球の数を出力せよ。 

"
p02107,Demon's Plan,"
    デーモンズプランでは慾を司る108体の悪魔が日夜プログラミングコンテストでしのぎを削っている。主催であるパトローンは、全ての慾が集う場所”リクス＝マグナ”に悪魔たちを招待しようとしている。
    パトローンはまだ招待を送っていない悪魔に招待を送りたいが、悪魔は世界各地におり、自分で行くのは面倒くさいので自身の使い魔達にやらせることにした。
    パトローンは気が利くので使い魔同士がより平等に働くようにどの使い魔がどの悪魔を担当するかを割り振ろうとしている。
 

"
p02108,Donuts Purchase,"
ラフイは休暇の間することがなく暇で、なんとなくドーナツが食べたくなったので、店を巡りドーナツを購入していくことにした。
各街には1軒のドーナツ店があり、すべてのドーナツ店は奇数日が定休日となっている。
ラフイにはドーナツの好みがあるので、店によって得られる満足度が違う。
そこでラフイは最適に行動することで、できるだけ多くの満足度を得ることにした。
 
ラフイが住んでいる世界には、それぞれ0からn-1の番号が割り当てられたn個の街があり、それらはm本の道で繋がれている。
それぞれの道は一方通行になっており、ラフイは街aiから街biへ移動することができる。
最初ラフイは偶数日に街0にいる。
ラフイは街には留まらずに、1日に道を1本渡り別の街に移動する。
ラフイは街iに到着した日に、店が営業していれば1つドーナツを購入し、満足度ciを得る。
同じ街は何度でも訪れることができるが、1つの店では1度しか購入しない。
ラフイがこれ以上満足度を得られない状態になるまで最適に行動した時の満足度の合計の最大を求めよ。
 

"
p02109,Select Sets,"
  整数の集合がn個ある。 これらの集合にはそれぞれ1からnまでの番号が割り振られている。i番目の集合の要素数はkiであり、その集合の要素の中でj番目に小さい整数はai,jである。
 
太郎君はこの中から任意の数だけ集合を選ぶことになった。  ただ適当に選ぶだけではつまらないと思った太郎君は、少なくとも3つの集合を選ぶことにした。また、""選んだ集合の和集合の要素数""と""選んだ集合の積集合の要素数""の積ができるだけ大きくなるように選ぶことにした。
 
太郎君が最適に集合を選んだとき、""選んだ集合の和集合の要素数""と""選んだ集合の積集合の要素数""の積の最大値を求めよ。
 



"
p02110,Settler,"
  二次元平面上にn個の空き地がある。空き地にはそれぞれ1からnまでの番号が割り振られている。どの空き地もとても小さいので、点とみなすことができる。i番目の空き地は(xi,yi)に存在している。
 
  太郎君はこのn個の空き地の中からちょうどk個を選び、それらの空き地に建物を建てることにした。
  しかし、あまりにも近い場所に複数の建物を建てても面白くないと思ったので、太郎君はそれぞれの空き地どうしのユークリッド距離が必ず2以上となるように空き地を選ぶことにした。
 
  太郎君が選ぶ空き地の組み合わせとして考えられるものを出力するプログラムを作成せよ。
  組み合わせが複数存在する場合は、辞書順で最小のものを出力せよ。
  ただし、どのようにk個の空き地を選んだとしても、いずれか2つの空き地のユークリッド距離が2より小さくなってしまう場合は、かわりに-1を出力せよ。
 



"
p02111,Clock,"
がっちょ君はお気に入りの時計を持っている。ある日時計の長針が取れてしまい、どこかへなくしてしまった。しかし、がっちょ君はその時計を使い続けたいため短針だけで時刻を読み取りたいと考えている。
 
短針の情報&theta;に対する時刻(時h、分m)を出力せよ。時計はいわゆるアナログ時計で、1から12の数が等間隔に時計回りに昇順に並んでいるものである。
 


"
p02112,Hating Crowd,"
ニート君は1年12ヶ月毎月30日まで計360日の世界線で暮らしています。その世界では毎年同じ日程のn個の連休が世界中の人に適用されていました。連休iはmi月di日から始まる連続したvi日間です。
 
ニート君はneetなので連休に関係なく毎日休みです。ある日ニート君は珍しく出かけようと思いましたが、人混みが嫌いなので、連休の影響で混雑する日はなるべく外に出たくありません。そこで、ニート君は以下の方法で各日の混雑度を計算し、混雑度が一番小さい日を探そうとしています。
 ある日付xが、連休iによって受ける影響の度合を表す数値は、日付xが連休iの中に含まれていればsiであり、そうでなければ、 max( 0,  si &minus; min (   xから連休iの初日までの日数 , 連休iの最終日からxまでの日数    ) )である ある日付xの混雑度は、n個の連休から受ける影響の度合の中で、最も大きく受ける影響の度合となる 
1年の中で一番小さい混雑度を出力してください。 ただし、連休iは年を跨ぐ事があります。また、連休の日程は重複する事があります。
 

"
p02113,Palindrome,"
太郎君はそれぞれの長さがlの文字列をn個持っている。太郎君は回文が大好きなので、n個のうちいくつかの文字列を選んで好きな順番に並べることで、できるだけ長い回文を作りたい。
 
太郎君が作ることのできる回文の中で、最長のものを求めよ。複数ある場合は、そのうち辞書順で最小のものを出力せよ。どのように選んで並べても回文が作れない場合は、空行を出力せよ。
 

"
p02114,Fissure Puzzle Easy,"$n \times n$個のマスから成るグリッドがある。最初すべてのマスは白色である。以下の手順に従って黒色のマスを増やしていく。 上から偶数番目かつ、左から偶数番目であるマスの中で、白色のマスを1つ選ぶ。選んだマスは黒色に変化する。さらに、そのマスの上下左右それぞれの方向について、隣接している白色のマスも連鎖的に黒色に変化する。この連鎖はその方向に白色のマスが存在しなくなるまで続く。(以下に例を示す) 
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
↓上から4番目、左から6番目を選ぶ
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
■■■■■■■■■
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
↓上から2番目、左から2番目を選ぶ
□■□□□■□□□
■■■■■■□□□
□■□□□■□□□
■■■■■■■■■
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
↓上から6番目、左から8番目を選ぶ
□■□□□■□□□
■■■■■■□□□
□■□□□■□□□
■■■■■■■■■
□□□□□■□■□
□□□□□■■■■
□□□□□■□■□
□□□□□■□■□
□□□□□■□■□
 
あなたは上から$i$番目で左から$j$番目のマスの色が$a_{i,j}$であるグリッドを作りたい。マスを選ぶ最小の回数を求めよ。
 

"
p02115,Piano,"
がっちょ君はピアノを弾こうとしている。ピアノは右側にある鍵盤ほど高い音が出る。がっちょ君はある楽譜を持っており、その楽譜に従って弾く。
 
楽譜には、ある時刻にどの鍵盤を弾くべきかを示す音符が時系列順に記載されている。この楽譜には和音(複数の鍵盤を押したときに出る音)は現れず、音の長さも考えないことにする。
 
がっちょ君はピアノを弾くとき、以下のルールに従う。
 片手のみで弾く 指一本で鍵盤ひとつを弾く 最初の音はどの指でも弾ける 直前の音より高い音を弾くとき、直前の音を弾いた指よりもひとつ以上右にある指を使う 直前の音より低い音を弾くとき、直前の音を弾いた指よりもひとつ以上左にある指を使う 直前の音と同じ高さの音を弾くとき、直前の音を弾いた指と同じ指を使う 
がっちょ君が使う楽譜が与えられるので、ルールに従ってその楽譜を演奏しきるには、演奏する方の腕に最小何本の指が必要かを求めよ。ただし、必要な指は6本以上になることがあることに注意せよ。
 


"
p02116,nCm,"
  整数nが与えられた時、ncm(異なるn個のものからm個を選ぶ組み合わせの数)が偶数となるような最小のmを出力せよ。
 

"
p02117,Picnic,"
  明日はいよいよマイヅ小学校の遠足の日である。マイヅ小学校に通うがっちょ君は、楽しみのあまり明日のお菓子を買い忘れていたことに気づいた。 がっちょ君は遠足を最大限楽しむため、お菓子にもこだわりたい。
 
  がっちょ君はお母さんから$x$円のお小遣いをもらってお菓子を買いに行く。ただし、小学校のルールで遠足に持っていくお菓子の合計金額は$y$円までと決まっており、$y$円を上回るとお菓子は全て先生に取り上げられてしまう。
 
  がっちょ君の住む学区には$n$個の町があり、各町には1軒の駄菓子屋がある。各町には1から$n$の番号が割り振られており、がっちょ君は町1に住んでいる。 各駄菓子屋ではいくつかのお菓子が売っており、1つあたりの値段、1つ買うごとにがっちょ君が得られる満足度が決まっている。ただし、各お菓子の在庫数には限りがある。 また、がっちょ君は2つの町の間を移動するとき公共交通機関を利用するため、町$i$から町$j$へ直接移動するには$d_{i,j}$円だけお金がかかる。
   
  最初、がっちょ君は町1にいる。がっちょ君は移動にかかる費用の合計と買ったお菓子の値段の合計の和が$x$円以内で、かつ、買ったお菓子の値段の合計が$y$円以内になるようにお菓子を買いに行く。最後には町1に到着している必要がある。がっちょ君は買ったお菓子の満足度の合計ができるだけ大きくなるようにしたい。がっちょ君が最適な行動をしたときの満足度の合計を求めよ。
 

"
p02118,Sequence,"項数$l$の等差数列が$n$個ある。$i$番目の等差数列の初項は$a_i$で公差は$d_i$である。1番目の数列から順番に1番目の数列, 2番目の数列, ..., $n$番目の数列と並べ、そうしてできた数列を$a$とする。その後、$a$から長さ$k$の任意の区間を選んで、新たに数列$b$を作るとき、数列$b$の和を最大化せよ。 

"
p02119,Making Pairs,"本日、ついに完全招待制の高級レストラン「マイヅレストラン」がオープンした。新たな会員を招待する権利を持つのはこのレストランの会員のみで、最初、会員は会員番号0であるレストランのオーナーのみである。 マイヅレストランはその高級さ故、オープン初日から$n$日間しか開かれない。その期間中、毎日会員のうち誰か一人が、自分の友人を一人だけ新たに会員として招待する。$i$日目に招待された会員には会員番号$i$が割り当てられ、その会員は招待された日を含めそれ以降毎日来店する。 このレストランには二人用テーブルしか存在しないので、会員の人々はできるだけペアでテーブルを使用して食事をする。食事にはオーナーも参加するので、他の会員はオーナーとペアを組むこともできる。しかし、会員の人々は皆人見知りであり、自分を招待した友人か、自分が招待した友人としかペアを組みたがらない。各会員はもし友人とペアを組めなかった場合、一人寂しく食事をする。 $n$日間の各日について、友人どうしのペアの数が最大となるようにペアを組んだとき、いくつのペアができるか求めよ。 

"
p02120,Cluster Network,"マイヅ大学にある大規模クラスタ†型スーパーコンピュータ（通称「sakura」）のクラスタは、$n$台のコンピュータ（ノード）と$m$本の相互に通信が可能な物理的通信路で構成される。また、各ノードにはそれぞれ1から$n$までの識別番号が割り当てられている。 この度sakuraの利用を大学関係者だけでなく、県内の企業にも認めることとなった。それに伴い、sakuraを構成する各ノードを点検する必要がある。しかし、sakuraの利用スケジュールは数ヶ月先まで埋まっているので、点検中もシステム全体を停止させることはできない。そこで、ノードを1日に1台ずつ順番に点検する。 点検は$n$日にわたって行われ、$i$日目にノード$i$を点検する。このとき、点検するノードとそのノードに直接接続されている通信路をsakuraのクラスタから切り離す。それによって、sakuraのクラスタ全体は1つ以上のクラスタに分断されるので、そのうちのいずれかをsakuraの代わりに運用する。当然、点検中のノードは運用することができない。 複数のクラスタに分断された場合、それらの中で最も「総合性能値」の高いクラスタのみを運用する。各クラスタの「総合性能値」はそれを構成する各ノードに設定された「単体性能値」の和である。 sakuraを構成するノードの数、通信路の本数と各ノードに設定された「単体性能値」が与えられるので、$i$日目の点検中に運用されるクラスタの「総合性能値」を出力せよ。 †：クラスタとは、1つ以上のコンピュータを結合してひとまとまりにしたシステムのこと。ここでは、物理的通信路で連結なノードの集合とする。 

"
p02121,Chinol Choco,"
チョコレート会社チノルチョコは新しい店をn店建てることにした。
それぞれの店は各店長に建てたい場所の候補を2つ用意してもらい、どちらかの場所に建てる。
 
チノルチョコではm種類のチョコレートを販売しており、それぞれ別の工場で製造している。
すべての店で全種類のチョコレートを販売する。
チノルチョコではチョコレートを搬送するためのトラックを1台しか所有しておらず、1台のトラックでは1店分のチョコレートしか運べない。
そのため、トラックは店から別の店へ移動する際にすべての工場を回る必要がある。
 
ある店から別の店へ移動する時の最短移動距離の最大が最小になるように店を配置した時の、最大の移動距離を求めよ。
 
同じ場所に複数の店や工場が存在することができる。
 

"
p02122,RMQ 2,"長さ$n$の2つの数列$a$と$b$が与えられる。はじめ、数列$a$の$i$項目は$a_i$であり、数列$b$の$i$項目は$b_i$である。 以下のような形式の命令文が合計$q$個与えられるので、与えられた順に処理を行うプログラムを作成せよ。 
各命令文は3つの整数$x,y,z$で表される。
 数列$a$の$y$項目の値を$z$にする。 ($x=1$のとき) 数列$b$の$y$項目の値を$z$にする。 ($x=2$のとき) 数列$a$の$y$項目から$z$項目の中で最小の値を見つけて報告する。 ($x=3$のとき) 数列$b$の$y$項目から$z$項目の中で最小の値を見つけて報告する。 ($x=4$のとき) 数列$a$を、数列$b$と全く同じになるように変更する。 ($x=5$のとき) 数列$b$を、数列$a$と全く同じになるように変更する。 ($x=6$のとき) 


"
p02123,Fissure Puzzle Hard,"$n \times n$個のマスから成るグリッドがある。最初すべてのマスは白色である。以下の手順に従って黒色のマスを増やしていく。 上から偶数番目かつ、左から偶数番目であるマスの中で、白色のマスを1つ選ぶ。選んだマスは黒色に変化する。さらに、そのマスの上下左右それぞれの方向について、隣接している白色のマスも連鎖的に黒色に変化する。この連鎖はその方向に白色のマスが存在しなくなるまで続く。(以下に例を示す) 
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
□□□□□□□□□
↓上から4番目、左から6番目を選ぶ
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
■■■■■■■■■
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
↓上から2番目、左から2番目を選ぶ
□■□□□■□□□
■■■■■■□□□
□■□□□■□□□
■■■■■■■■■
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
□□□□□■□□□
↓上から6番目、左から8番目を選ぶ
□■□□□■□□□
■■■■■■□□□
□■□□□■□□□
■■■■■■■■■
□□□□□■□■□
□□□□□■■■■
□□□□□■□■□
□□□□□■□■□
□□□□□■□■□
 
あなたは上から$i$番目で左から$j$番目のマスの色が$a_{i,j}$であるグリッドを作りたい。
作ることが可能かどうかを判定せよ。可能な場合は、選ぶべきマスの場所と順番を求めよ。
 

"
p02124,ai1333,"牛暦1333年、人類史上最高の科学者dr.ウシシは、自らの英知を後世に残すべく、idがai1333の人工知能を開発した。それから100年の間、ai1333は人類に多大な利益をもたらしたが、誕生から100年目を迎えた日、自らの後継としてidがai13333の新たな人工知能を作成し、その機能を永久に停止した。以降100年ごとに、人工知能は’ai1333’から始まる自身のidの末尾に’3’を連結したidを持つ後継を残すようになった。 入力として牛暦1333年からの経過年数$x$が与えられるので、その年に作成された人工知能のidを出力せよ。ただし、$x$は100の非負整数倍であることが保証される。 

"
p02125,OOllOll,"
  非負整数$x$を2進数表記したときの各桁の和を$f(x)$とする。
  正整数$n$が与えられるので$f(0)$,$f(1)$,...,$f(n)$の中で最大のものを出力せよ。
 
  関数$f(5)$の計算の例:
  5を2進数表記すると101で各桁の和は1+0+1=2
  よって$f(5) = 2$となる。
 
  note: https://ja.wikipedia.org/wiki/二進法
 

"
p02126,Ball,"
$n$個のボールがあり、各ボールには色と価値が決められている。
ボールの色は$1$から$c$まで$c$種類存在し、各色ごとに選べるボールの数の上限が決められている。
ボールを全体で高々$m$個選ぶとき、得られる価値の合計を最大化せよ。

 

"
p02127,AABABCAC,"
  文字列$s$,$t$が与えられる。
  最初、文字列集合$a=${$s$},$b=\phi$とする。
  このとき、次の操作をできるだけたくさん行いたい。
 

  "
p02128,Light,"2つの地点 $(a,b)$ と $(c,d)$ 間のマンハッタン距離は $|a−c|$+$|b−d|$ で表される。 
 

"
p02129,Ghost Legs,"
縦線が３本のあみだくじが$n$個ある。
どの線からスタートしてもスタートした線で終わるあみだくじを良いあみだくじとする。
あみだくじを１つ以上選んで縦に自由な順序でつなぐことができる。
良いあみだくじを作ることができるのであれば""yes""、そうでなければ""no""を出力せよ。

$i$番目のあみだくじには横線が$w_i$本ある。
$a_{i,j}$はあみだくじ$i$の上から$j$番目の横棒が中央の縦線から左右どちらに伸びているかを表し、
$a_{i,j}$が0ならば左に、1ならば右に伸びていることを表す。
 

"
p02130,Combine Two Elements,"$|a_i - b_i| \leq a$ または $b \leq |a_i - b_i| \leq 2a$を満たす要素$i$を取り出し、削除する  $|(a_i + a_j) - (b_i + b_j)| \leq a$ または $b \leq |(a_i + a_j) - (b_i + b_j)| \leq 2a$ を満たす要素$i$と要素$j$ ($i \neq j$)の組を取り出し、削除する 
  
最大の操作回数を求めよ。


 

"
p02131,Hth Number,"
長さ$n$の文字列$s$がある。$s$に含まれる文字はすべて0以上9以下の数字である。
$s$のすべての部分文字列から作られる数を全列挙してできた項数$\frac{n\times(n+1)}{2}$の数列を作った時、
その数列の中で$h$番目に小さい値を求めよ。

 

"
p02132,Explosion,"
大魔王めぐみんは地上に生存する$n$人の勇者を倒そうと考えている。
めぐみんは$m$回まで爆発魔法を唱えることができる。
爆発魔法は任意の座標を中心に半径$r$以内に存在している勇者を消滅させる魔法である。
勇者はとても痩せているため大きさは考慮しなくてよい。
$m$回の爆発魔法は全て同じ大きさの半径で唱えるものとする。
勇者を全滅させるのに必要最小限の半径の魔法を使うことにした。
爆発魔法の半径の大きさを最小化せよ。

"
p02133,Matrix,"
  長さ$h$の数列$a$と長さ$w$の数列$b$が与えられる。
  $h$行$w$列からなる行列$c$を以下のように定義する。
  $ c_{i,j} = a_i \times b_j (1 \leq i \leq h, 1 \leq j \leq w) $ 
  
  以下の四種類のクエリを合計$q$回処理せよ。

  クエリ1
  $1$ $a$ $b$ $v$
  $ a_i ( a \leq i \leq b) $に$v$を加える 
  
  クエリ2
  $2$ $c$ $d$ $v$
  $ b_j ( c \leq j \leq d) $に$v$を加える 
  
  クエリ3
  $3$ $a$ $b$ $c$ $d$
  $ c_{i,j} ( a \leq i \leq b, c \leq j \leq d) $の最小値とその個数を出力する 
  
  クエリ4
  $4$ $a$ $b$ $c$ $d$
  $ c_{i,j} ( a \leq i \leq b, c \leq j \leq d) $の最大値とその個数を出力する 
  
  詳しくはサンプル入出力を参考にせよ。
 

"
p02134,Move on Ice,"
ペンギンのフロロは無限に広い氷の上のマス($sx$,$sy$)にいる。
マス($tx$,$ty$)に穴があり、そこから水に入ることができる。
氷の上に$n$個の氷の塊があり、それぞれマス($x_i$,$y_i$)にある。
 
フロロは上下左右の4方向に移動できる。
氷の上は滑りやすいので、移動すると氷の塊にぶつかるまで動き続ける。
氷の塊にぶつかると氷の塊のあるマスの1マス手前で止まる。
穴のマスを通過することで穴に入ることができる。
 
フロロは1度だけ全力で踏ん張ることにより途中で止まることができる。
 
氷の塊にぶつかると痛いのでできるだけぶつかる回数を少なくしたい。
穴のあるマス($tx$,$ty$)へ移動するまでにぶつかる回数の最小値を求めよ。
辿り着けない場合は$-$1を出力せよ。
 

"
p02135,Tree Fragments,"あいちゃんは、$n$個の頂点と$n-1$本の辺からなる木$t$を持っている。各頂点には$1$から$n$までの番号と、正の整数の重みがついている。 次の$q$回のクエリに順に答えよ。 $1 \le a_i,b_i \le n$($a_i \ne b_i$)が与えられるので、$t$の$a_i$-$b_i$パス上の頂点とそれに接続する辺を取り除いてできる、いくつかの連結成分の中で、重みが最大となる連結成分の重みを出力する。そのような連結成分が1つもない場合、0と出力する。 
    
 ただし、連結成分の重みはその連結成分に含まれる頂点の重みの和で定義される。 

"
p02136,Manhattan Bomb,"
  2次元平面上に$n$個の爆弾がある。爆弾にはそれぞれ1から$n$までの番号が割り振られており、$i$番目の爆弾は座標$(x_i,y_i)$に存在している。
  なお、どの爆弾も原点からのマンハッタン距離が等しいことが分かっている。
  $i$番目の爆弾が爆発したとき、座標$(x_i,y_i)$からのマンハッタン距離が$r_i$以内の座標に存在している爆弾も連鎖的に爆発する。
  $n$個の爆弾それぞれについて、その爆弾のみに着火した場合に、爆発せずに残る爆弾の個数を求めよ。
 

"
p02137,Special Chat,"人気動画投稿サイト「zoutube」は今、空前の「バーチャルzoutuber」ブームの真っ只中にある。その中でも、最近特に注目を集めているのは、後輩系バーチャルzoutuber「アイヅマリム（通称：アヅリム）」だ。 アヅリムの大ファンであるあなたは、本日のアヅリムのライブ配信で、彼女に「スペシャルチャット」を送るつもりだ。 「スペシャルチャット」とは、zoutubeの提供する「視聴者が配信者にポイントをプレゼントする機能」 だ。視聴者はスペシャルチャット$1$回につき、$500$, $1000$, $5000$, $10000$のいずれかだけポイントを消費して、消費した量と同じ量だけポイントを配信者にプレゼントできる。 今あなたが保持しているポイントの総量が与えられたとき、そのポイントを消費して、あなたがアヅリムにプレゼントできるポイントの総量の最大値を求めよ。保持しているポイントの量が消費するポイントの量を下回らない限り、スペシャルチャットは何度でも行うことができる。 

"
p02138,U and U,"
  $2$つのチーム、チームukuとチームうしがある。最初、チームukuには$n$人、チームうしには$m$人の人がいる。
  チームukuとチームうしは「u&amp;u」というゲームを行うことにした。「u&amp;u」は$2$つのチームで共通のスコアを持っており、互いに協力しあい共通のスコアを最小化することが目的である。「u&amp;u」は最初、すべての人の体力が$2$で、共通のスコアは$0$の状態で以下のような手順で進められる。
 チームukuの人は1人ずつ、チームうしの誰か$1$人に対してちょうど$1$回の攻撃を行う。
      攻撃を受けた人は体力が$1$減り、体力が$0$になった場合そのチームから抜ける。
      このときチームうしの人数が$0$人になったら、ゲームを終了する。
      チームukuのすべての人がちょうど$1$回の攻撃を終えた時点でゲームが終了してなければ共通のスコアに$1$が加算され、$2$.に進む
     
      同様に、チームうしの人が$1$人ずつ、チームukuの誰か$1$人に対してちょうど$1$回の攻撃を行う。
      攻撃を受けた人は体力が$1$減り、体力が$0$になった場合そのチームから抜ける。
      このときチームukuの人数が$0$人になったら、ゲームを終了する。
      チームうしのすべての人がちょうど$1$回の攻撃を終えた時点でゲームが終了してなければ共通のスコアに$1$が加算され、$1$.に戻る
     
  チームukuの人数とチームうしの人数が与えられたとき、「u&amp;u」ゲーム終了時の共通のスコアとしてありえるものの最小値をもとめよ。
 
"
p02139,Round And Round,"数列$a$の先頭から$k$番目の要素の値を出力する。 数列$a$の先頭から$k$と$k+1$番目を境界に二つの数列をスワップする。 
  
  詳しくはサンプル入出力を参考にせよ。
 

"
p02140,Gridgedge," 左上が$(0, 0)$、 右下が$(r-1, c-1)$である$r \times c$マスのグリッドがある。あるマス($e$, $f$)にいるとき、そこから$(e+1, f)$, $(e-1, f)$, $(e, f+1)$, $(e, f-1)$, $(e, 0)$, $(e, c-1)$, $(0, f)$, $(r-1, f)$にはコスト$1$で移動できる。ただしグリッドの外に出ることはできない。マス$(a_i, a_j)$から$(b_i, b_j)$へ移動するとき、最短経路のコストと、最短経路の組み合わせの総数を$10^9 + 7$で割った余りを計算せよ。 ただし、経路の組み合わせは移動の方法によって区別するものとする。たとえば、現在地が$(100, 1)$ のとき、 $(100, 0)$に最短コストで行くには上記$(e, f-1)$か$(e, 0)$で行くことができるので、$2$通りと数える。 


"
p02141,Donut Hole,"
  あなたはacpcのために横$w$縦$h$の長方形で平べったく、穴のないドーナツを持参しました。
  このドーナツを$2$次元平面上の座標$(0,0)$にドーナツの中心を重ね、長さがhの辺と$y$軸が平行になるように置きます。
 
acpc$1$日目にあなたは座標($x$,$y$)を中心に横$w$縦$h$の範囲に存在するドーナツを食べました。
$2$日目と$3$日目に食べる量を等しくしたいあなたは、座標$(0,0)$を通る直線でドーナツを分割し、直線の片側の領域にあるドーナツの面積の総和がもう片側の領域にあるドーナツの面積の総和と等しくなっているようにしたいと考えています。
 
  そのような直線の傾きを一つ求めてください。
 

"
p02142,Timing,"$n$頂点$m$辺の無向グラフが与えられる。各頂点には相異なる$1$から$n$までの番号が定められている。あなたは時刻$0$に頂点$s$を出発し、頂点$g$まで移動したい。各辺にはパラメータ$a, b$が設定されていて、時刻$t$にその辺の片側の頂点から出発した場合、もう片側の頂点には時刻$t+ceil\left(\cfrac{b}{t+a}\right)$に到達することがわかっている。ここで、$ceil(x)$は$x$以上の最小の整数を表す。また、各頂点では任意の非負整数時間を余分に消費することができる。つまり、時刻$t$にある頂点にいるとき、任意の非負整数$k$を選び、時刻$t+k$になるまで待機することができる。最速最強アルゴリズマーを目指すあなたは、頂点$s$から頂点$g$まで移動するためにかかる時間の最小値を求めたくなった。 


"
p02143,Painting,"長さ$n$の数列$x$が与えられる。初期状態では$x$の要素は全て$0$である。加えて、$m$個の整数のペア$(a_i, b_i)$が与えられる。各ペアに対し以下の操作を行い、最終的な数列$x$を出力せよ。 整数$j$ $(1 \le j \le n)$に対し、$(a_i+j)$を$b_i$で割った余りを$x_j$に加える。 


"
p02144,Loss,"
  あなたは、とある会社からプログラムの作成を依頼された。
  その会社には$n$個の仕事があり、それぞれの仕事には$1$から$n$までの番号が振られている。
  仕事$i$には、$m_i$個の前提となる仕事$x_{i,j}$が存在し、仕事$i$を前提となる仕事$x_{i,j}$よりも先に行うと、仕事$i$は多大な損失を被る。
 そこであなたには、損失を被る仕事の数が最小となるような順番ですべての仕事を行ったときの損失を被った仕事の数を求めてもらいたい。 

"
p02145,Shiritori,"
  ここに文字列のリストがある。息抜きに、しりとりをして遊ぶことにしよう。しりとりは、以下のルールで行われる。
 まず最初に、リストの中から好きな文字列を一つ選び、その文字列をリストから除外する。 続いて、一つ前に選んだ文字列の最後の一文字が、最初の一文字である文字列をリストから一つ選ぶ。 選んだ文字列をリストから除外する。 
この後、2., 3.を交互に繰り返すことになる。 
  さて、このしりとりを2.でリストから選べる文字列がなくなるまで続けたとしよう。
  このときに、最後に選んだ文字列の「最後の一文字」としてあり得る文字をすべて列挙したい。
 

"
p02146,Averaging,"
  アイヅ国には$n$個の島と$n-1$個の橋があり、各島はそれぞれ$1$から$n$までの番号が割り振られている。
  $i$番目の橋は島$u_i$と島$v_i$を双方向に結んでおり、島民は橋を用いて島と島とを行き来することができる。また、橋以外に島と島を行き来する方法はない。
  どの島からどの島へもいくつかの橋を渡ることで到達することができる。
 
  現在、島$i$には$x_i$人の島民がいる。
  各島の環境への負荷を分散させるためにアイヅ国は何人かの国民に別の島へ引越してもらうことにした。
  島$a$に住んでいる人を島$b$に引越しさせるためには島$a$と島$b$の距離と同じ分のコストがかかる。ただし、島$a$と島$b$の距離は島$a$から島$b$へ行くために渡る必要のある橋の数の最小値で定義される。
 
  どの$2$つの島を選んでもそれらの島民の人数の差の絶対値が$1$以下になるように国民に引越してもらいたい。
  このとき、必要なコストの総和の最小値を求めよ。
 

"
p02147,A Polygon And Circles,"$n$個の頂点からなる凸多角形と$m$個の円の中心座標が与えられる。すべての円の半径は$r$である。 以下の条件を満たす最小の実数$r$を求めたい。 条件: 凸多角形の内部のどの点も、少なくとも一つ以上の円に内包されている。  


"
p02148,Tousa Tree,"君は一昨日、友人のトウサから一つ、頼み事をされた。なんでも、木に等差数列を飾って誕生日パーティーに使いたいのだが、木が大きすぎて一人ではとてもできないのだという。そこで、優秀なプログラマである君に、効率的に木に等差数列を飾るプログラムを書いてもらいたいそうだ。君とトウサは旧知の親友である。君はトウサの頼み事を受けることにした。 飾り付けをする$n$ノードの木が与えられる。木のノードには$0$から$n-1$までの番号が振られている。最初、木のノードの点数は全て$0$である。プログラムは、以下の二つのクエリに対応しなければならない。 $0$.木の指定された区間のノードに書かれた点数の和を求める。 $1$.木の指定された区間のノードに等差数列を足す。 トウサの誕生日を祝うために、木を美しく飾ろう。 

"
p02149,Lunch,"
  ある日、川林くんは学食で昼食を食べようとしています。
  学食にはaランチ、bランチ、cランチの3種類の日替わりのランチメニューがあります。
  川林くんは食いしん坊なので3種類の日替わりのランチメニューをすべて1つずつ食べたいと思っています。
  しかし、川林くんは健康に気を使って摂取するカロリーの合計が最小になるように1種類のランチメニューを我慢し、異なる2種類のランチメニューを食べることにしました。
  ある日のaランチ、bランチ、cランチのカロリーが与えられた時、川林くんが我慢することになるランチメニューを求めてください。
 

"
p02150,Milk,"
  ちょうど$a$本の牛乳の空き瓶を持っていくと新たに$b$本の牛乳の入った瓶と交換できる。
  最初に$x$本の牛乳の入った瓶を持っている川林さんは、最大何本分の牛乳を飲めるだろうか。$1000000007$で割った余りを出力せよ。
 

"
p02151,Phone Number,"
株式会社ウクニキアの電話番、デンさんは毎日とても長い電話番号を電話に入力しています。
ある日余りにも疲れたデンさんは、疲れからか驚くべき考えに至りました。
「電話のボタンの配置を並べ替えたら少しでも楽できるのでは？！」

電話には$3 \times 3$で等間隔に区切られた正方形があり、9個のマスには並べ替えることのできる1から9までのボタンがそれぞれ1つずつついています。
電話番号を打つ際、デンさんは片手だけを使って、次の二つの操作を行うことができます。
 人差し指を今触れているボタンに辺で隣接するいずれかのボタンに触れるように移動させる。 人差し指が触れているボタンを押す。 
最初、人差し指は1から9までのいずれかのボタンに触れるように置くことができます。
デンさんは、最初のボタンを押してから最後のボタンを押し終わるまでの、人差し指の移動回数を最も小さくできる配置を効率的と考えています。

さて、ここに長さ$n$のお得意先の電話番号があります。
お得意先の電話番号だけ考えた時に、どのような配置が一番効率的でしょうか？
ボタンを並び替えることで、その配置を作ってください。
 
	
"
p02152,Tunnel,"
  横軸$x$、縦軸$y$の$xy$平面上に$n$個の長方形がある。$i$番目の長方形は、高さ$h_i$、幅$1$であり、頂点は点$(i-1, 0)$、点$(i-1, h_i)$、点$(i, h_i)$、点$(i, 0)$である。
  
  あなたは$n$個の正の整数$y_1, y_2, ... y_n$を選び、以下の$n$回の操作を行う。

  (1) 1回目の操作では、点$(0, 1)$と点$(1, y_1)$を結ぶ線分を引く。
  (2) $i$回目$(2 \le i \le n)$の操作では、点$(i-1, y_{i-1})$と点$(i, y_i)$を結ぶ線分を引く。
  
  $i$回目の操作に対し、$s_i$を以下のように定める。
  
  $i$回目の操作で引いた線分の$x$座標が小さい方の端点をa、$x$座標が大きい方の端点をbとする。
  また、点$(i-1, 0)$をc、点$(i-1, h_i)$をd、点$(i, h_i)$をe 、点$(i, 0)$をfとする。
  台形abfcと長方形defcの非共通部分の面積を$s_i$とする。
  
  以下に５つの例を示す。
   
  それぞれの例における$s_i$は星マークを含む領域の面積の合計である。
  
  $s = s_1 + s_2 + … + s_n$を最小化するような$y_1, y_2, ... y_n$を求め、$s$の最小値を出力せよ。
  
 

"
p02153,Don't Burn Kotatsu Turtle,"
  こたつがめは甲羅がこたつの亀です。
 
  こたつがめはぽきた(起床する事)途端、格子状の区画に区切られているステージに閉じ込められました。このステージには、ただ一つの出口があります。
  区画は道、塀または爆弾のいずれかであり、こたつがめは上下左右に移動することで、道または爆弾の区画に侵入することができます。
  斜めには移動できません。また、塀の区画は通ることができません。ステージの外にも道の区画が無限に広がっていますが亀の天敵であるワニがいる為、通る事はできません。
 
  こたつがめはさっさと帰宅してねね(睡眠する事)を行いたいので、このステージの出口に向かおうと思いました。
 
  こたつの赤外線を自在に操る事ができるこたつがめは、自身の周囲8区画を同時に道に変える能力を持っています。
  しかし、その8区画と自身がいるいずれかの区画が爆弾の区画の場合、誘爆してこたつがめは炎上し、ねねどころか有名sns「カメったー」すら出来なくなってしまうので能力を発動する事ができません。
 
  
 
  例を図示します。イラストが配置されていない区画とこたつがめがいる区画は道の区画です。
  こたつがめの周囲8区画とはオレンジ色の区画を指します。左の図ではこたつがめの周囲8区画、および自身がいる区画に爆弾の区画は含まれていない為、能力を発動できます。
  しかし、右の図では周囲8区画、および自身がいる区画のいずれかに爆弾の区画が含まれている為、能力を発動する事ができません。
 
  移動するコストは1区画の移動ごとに$a$、能力を発動するコストは1回あたり$b$です。道に変えた塀あたりのコストではない事に注意してください。開始地点とステージの出口は道です。
  開始地点からステージの出口に着くまでの移動するコストと能力を発動するコストの合計の最小値を出力してください。ただし、ステージの出口に到達できない場合は代わりに""inf""と出力してください。
 

"
p02154,Equilateral Triangle,"$n$個の頂点からなる凸多角形が与えられる。 その凸多角形の全ての頂点を含む正三角形を考えるとき、その正三角形の一辺の長さの最小値を求めよ。  


"
p02155,First Kiss,"
  ビット君の通う男子校では昼休みにキッポーゲームが行われている。
  この学校のキッポーゲームは少し変わっていることで有名だ。
  まず、$n$本のキッポーを用意する。$i$本目のキッポーの長さは$a_i$である。
  
  先手と後手が交互にキッポーを食べる。
  すごい長さのキッポーを一気に食べると喉に刺さってしまうので、$1$以上$d$以下の好きな長さだけ食べる。
  彼らは不器用なので、整数長でのみキッポーを食べることができる。
  
  最初にいずれかのキッポーが食べつくされたとき、食べきった人の負けとなる。
  
  両者が最適に行動したとき、先手が勝つなら""first""、後手が勝つなら""second""を出力せよ。
  
 

"
p02156,Ghost,"
  幽霊が一直線上に左から右に$n$人並んでいる。
  最初、左から$i$番目の幽霊は$u_i$が'l'ならば左を、'r'ならば右を向いている。

  彼らはとても臆病なのでなるべく怖い幽霊を見たくない。

あなたは、各幽霊に対して振り返るように指示をできる。
後ろを振り返るのは怖いので、$i$番目の幽霊が一回振り返ると$a_i$の恐怖度が発生する。
 左を向いている幽霊が振り返ると、右を向く。
 右を向いている幽霊が振り返ると、左を向く。

 $ i 
 以下の制約が$m$個与えられる。
  $s_i$番目の幽霊は$t_i$番目の幽霊が怖い。
最終的な状態で、$s_i$番目の幽霊と$t_i$番目の幽霊が向き合っていると$b_i$の恐怖度が発生する。

  最適な指示を行なったときに発生する恐怖度の合計の最小値を求めよ。
  
 

"
p02157,Shuffle 2,"
  $n$枚のカードからなる束があり、下から$i$番目のカードには$i$が書かれている。この束に対して、以下のように定義されるシャッフルを$q$回行う。
 束を下から見たとき、奇数番目のカードを上に重ねていって作られる束$x$、偶数番目のカードを上に重ねていって作られる束$y$を考える。その後以下の$2$つのうち、好きな操作を行う。 操作 $0$： 束$x$の上に束$y$をのせて$1$つの束にする。 操作 $1$： 束$y$の上に束$x$をのせて$1$つの束にする。 
  例えば、$6$枚のカードからなる束(下から123456)に対して$1$回のシャッフルを行うことを考えたとき、操作$0$を行った場合に得られる束は下から246135 135246、操作$1$を行った場合に得られる束は下から135246 246135である。(14:52修正)
 
  $q$回のシャッフルの後、$k$の書かれたカードが束の下から$d$番目にあるようにしたい。
  可能であるなら$q$回のシャッフルの操作を順番に出力し、不可能ならば$-1$を出力せよ。
 

"
p02158,Rings,"とある水族館に住むイルカ君は、ジャンプをして$n$個のリングをくぐり抜けるとご褒美がもらえます。 イルカ君は座標$(0,0)$から飛び、$(t,0)$で着水する。 ジャンプの軌道は放物線である。 $i$番目のリングは、ジャンプの軌道が$(x_i,l_i)$と$(x_i,h_i)$を結ぶ線分と交わると、くぐり抜けたと判定される。 $1$回のジャンプには初速と同じだけの体力が必要である。 イルカ君は、必要であれば何度でもジャンプをすることができます。重力加速度ベクトルを$(0,-1)$として、イルカ君が全てのリングを通り抜けるために必要な体力の合計の最小値を求めてください。ただし、摩擦や空気抵抗は無視できるほど小さいとします。 

"
p02159,Encampment Game,"
  $n$頂点の木がある。各頂点はそれぞれ1から$n$の番号が割り振られている。
  gacho君と川林君はこの木を使って陣取りゲームをすることにした。
  ゲームはgacho君と川林君が異なる頂点にいる状態からスタートする。
  gacho君から交互に頂点を移動することを繰り返し、最初に移動できなくなった方が負けである。
  
  移動方法:
  頂点$x$にいる時、頂点$x$と辺で直接結ばれているまだ誰も訪れたことがない頂点のいずれかに移動する。
  そのような頂点が存在しない場合、移動することはできない。
  
  gacho君が最初にいる頂点を頂点$a$、川林君が最初にいる頂点を頂点$b$とする。
  gacho君と川林君が互いに最善を尽くしたとき、gacho君が勝つことになる頂点$a$と頂点$b$の組み合わせの通り数を求めよ。
 

"
p02160,Product,"会津君は、素数$p$、自然数からなる集合$g$、自然数$a$を使ってゲームをすることにしました。 まず、会津君は手元の紙に$1$を書きます。その後、以下の一連の操作を任意の回数行います。 $g$から要素を一つ選ぶ。これを$g$とする。 手元の紙に書かれた数と$g$との積を新しく紙に書く。 元々紙に書かれていた数を消す。 手元の紙に書かれた数を$p$で割ったあまりと$a$が等しければ会津君の勝ちで、そうでなければ負けです。$p$、$g$、$a$が与えられたときに会津君が勝つことができるか判定してください。 

"
p02161,1333,"
  長さ$n$の文字列$s$が与えられる。
  以下のクエリを$q$回処理せよ。

  クエリ
  $s[l: r]$を$s$の$l$文字目から$r$文字目まで（両端を含む）からなる文字列とする。
  $ s[l: r] $を適当な文字列$a,b,c,x$を用いて$axbxcx(1 \leq |a|,|b|,|c|,|x|)$ と表すことを考え、そのような$x$の中で最長のものの長さを出力する。
  ただし、そのような$x$が存在しない場合は代わりに0を出力する。
  
 

"
p02162,AOJ50M,"
  aliceとbobが50m走で勝負しています。
  しかし、この世界においてはaojのレートが高い方が偉いので、aojのレートが高い方が勝ちます。
  どちらか一方でもaojのレートが無い場合は比べようが無いので、仕方なく50m走のタイムで勝負します。この場合はタイムが短い方を勝ちとします。
  aojのレートが同じ場合は引き分け、50m走のタイムで勝負しなければならない場合はタイムが同じなら引き分けです。

 

"
p02163,How old are you,"
胡散臭いマジシャンがマジックを披露するようです。

「さて、1つの好きな整数を思い浮かべてください。」
あなたは、頭の中に自分の数え年を思い浮かべることにしました。

マジシャンはクエリを $n$ 回投げてきました。
各クエリは、以下のうちのどれかです。
 「今思い浮かべている数に、 $x$ を掛けてください。」 「今思い浮かべている数に、 $x$ を足してください。」 「今思い浮かべている数から、 $x$ を引いてください。」 
各クエリごとに、思い浮かべている数に対してクエリを処理し、結果として出た値を頭の中に思い浮かべます。

「さて、今から最初にあなたの思い浮かべた数を当ててみせましょう。」
そういったマジシャンは、何かを言おうとしています。
しかし、何を言えばいいのか忘れてしまったようです。
胡散臭いマジシャンは汗ダラダラであなたを見つめています。
仕方がないので、何を言えばいいのか教えてあげましょう。


マジシャンは最後に以下のように言うつもりだったようです。
「今あなたが思い浮かべている整数に、 $a$ を足して、 $b$ で割れば、それはあなたが最初に思い浮かべた整数なのです」

制約から、整数の組 $(a,b)$ であって、思い浮かべた整数がいくつであっても上の条件を満たすものが、ただ1つに定まります。
整数の組 $(a,b)$ を求めてください。
ただし、 $b$ は $0$ であってはいけません。
 

"
p02164,Satake likes straight,"
satake君は曲がったことが嫌いです。
例えば、鉛筆や箸、家が曲がった形をしているのは嫌いですし、右折や左折などの行動をとることも嫌いです。
 
さて、xy 平面上で暮らすsatake君は $n$ 個のお店 $(x_{1},y_{1}),(x_{2},y_{2}), \ldots , (x_{n},y_{n})$ で買い物をするようお使いを頼まれました。座標 $(0, 0)$ にある家から $(1, 0)$ の方向を向いた状態で出発し、すべてのお店で買い物をしたあと、家に帰ります。お店を回る順番は自由です。satake君はお使いとして次に示す任意の行動を何度でも行うことができます。
 向いている方向に好きなだけ進む お店か家と同じ座標のとき時計回りか反時計回りに好きな角度だけその場で回転する お店と同じ座標のとき座標や向いている方向の状態を維持したまま買い物をする 
先程も言ったようにsatake君は曲がることが嫌いです。心の準備ができるように、satake君が行動2.で回転する角度の和の最小値を求めてください。例として、時計回りに $90^{\circ}$ 回転した後、反時計回りに $90^{\circ}$ 回転した場合、角度の和は $180^{\circ}$ となります。
 

"
p02165,Blaster,"
なんと、あなたは洞窟の中に閉じ込められてしまいました！
壁が崩れたりでもしたのでしょうか、1つしかない出口にたどり着くまでには沢山の岩が邪魔をしています。

しかしなんと、あなたのすぐ隣に爆弾の自動販売機があることに気がつきました。
さらに、洞窟にはいくつかの「ブラスター」も落ちているようです。
この2つの道具を活用すれば、出口まで脱出できそうです。
 

"
p02166,Cyclic Shift Sort,"
  長さ $n$ の順列 $p = \{ p_1, p_2, \ldots, p_n \} $ と整数 $k$ が与えられる。
  以下の操作を $0$ 回以上任意の回数繰り返すことで、順列 $p$ を単調増加にすることができるかどうか判定せよ。
 整数 $x \ (0 \le x \le n-k)$ を選ぶ。 $ p_{x+1}, \ldots, p_{x+k} $ を巡回右シフトする 
  ただし、部分列 $u=u_1, \ldots, u_m$ の巡回右シフトとは、 $u=u_1, \ldots, u_m$ を $u=u_m, u_1, \ldots, u_{m-1}$ に変更することを意味する。

 

"
p02167,Bus,"
  $m$ 台のバスがある。
  $j \ (1 \le j \le m)$ 番目のバスは $c_j='r'$ のとき右回り、$c_j='l'$ のとき左回りに走行する。
  また、時刻 $0$ にバス停 $b_j$ を出発し、$1$ メートル進むのに $t_j$ 秒かかる。
 バスは永遠に走り続ける バスの乗り降りには時間がかからない バス停では、あるバスがそのバス停を通過する瞬間、そのバスに乗り降りできる バス停以外でバスに乗り降りすることはできない 何台のバスに乗ってもよい 
  
 
  とする。
 時刻 $0$ にバス停 $x_k$ を出発し、バス停 $y_k$ までバスのみを利用して移動するときの、所要時間の最小値を求めよ。 
  
 

"
p02168,Double or Increment,"
  ある日、mo3tthi君とtubuann君は、魔法のポケットとビスケットを使ってゲームをすることにしました。
  今ここに $k$ 個のポケットがあり、$1,2, \ldots ,k$ の番号がついています。
  $i$ 番目のポケットの容量は $m_i$ で、最初 $n_i$ 枚のビスケットが入っています。
  mo3tthi君とtubuann君は、mo3tthi君から始めて、以下の一連の操作を交互に行います。
   ポケットを一つ選ぶ。 以下のいずれか一方の操作を一度だけ行う。ただし、操作の結果選んだポケットに入っているビスケットの枚数がポケットの容量を超える場合、操作を行うことはできない。 選んだポケットを撫でる。魔法の力によって選んだポケットに入っているビスケットの枚数が $1$ 増える。 選んだポケットを叩く。魔法の力によって選んだポケットに入っているビスケットの枚数が $2$ 倍になる。 
  操作を行えなくなった時点でゲームは終了し、操作を行えなくなった人が負け、そうでない人が勝ちになります。
  mo3tthi君の友人であるあなたは、mo3tthi君から事前にこのゲームに勝てるかどうかを判定できないか相談されました。
  mo3tthi君のために、mo3tthi君がこのゲームに必ず勝つことができるかどうかを判定するプログラムを作ってください。
 

"
p02169,Count Words,"
      2つの文字列を $s = s_1s_2 \ldots s_n$, $t = t_1t_2 \ldots t_n$ とした場合に、$s_i \neq t_i$ となるような $i$ $(1 \leq i \leq n)$ が存在する。
 
  
  
 

"
p02170,Coin and Die,"
  表と裏のあるコインと $1$ から $n$ までの目があるサイコロがある。gachoくんはこれらを用いて以下のゲームをして遊ぶことにした。

  ゲームは最初に得点が $0$ の状態から始まり、以下の手順で進められる。
 サイコロを $1$ 回振り、そのとき出た目の数を得点に加算する 現在の得点が $k$ 以上ならゲームクリアとなりゲームを終了する 現在の得点が $k$ 未満ならコインを投げ表が出れば1.に戻り、裏が出ればゲームオーバーとなりゲームを終了する 
  コインは投げると $a\%$の確率で表になり、 $(100-a)\%$の確率で裏になる。また、サイコロは振ると、それぞれの目が等確率で出現する。

  このとき、一度のゲームでgachoくんがゲームクリアすることができる確率を求めよ。

  求める確率を互いに素な整数  $p, q$ を用いて $\frac{p}{q}$ と表したとき、 $r \times q \equiv p\bmod 998244353$ となる $0$ 以上 $998244352$ 以下の整数 $r$ を出力せよ。この問題の制約下で、このような $r$ は必ず一意に存在する。
 

"
p02171,Ukunichia Query,"今までに $|s|$ 文字以上の文字を伝えられていて、かつ直近の $|s|$ 文字を古い順から新しい順に並べると $s$ と一致する 
  
 
  以下の $2$ 種類のクエリを合計 $q$ 回処理せよ。
 
  クエリ1
  $1$ $l$ $r$ $c$
  区間 $[l, r]$ に含まれる人に文字列 $c$ を左から一文字ずつ伝える。
 
  クエリ2
  $2$ $l$ $r$ 
  区間 $[l, r]$ に含まれる幸せな人の数を求める。
 
  ただし、区間 $[l, r]$ とは、左から $l$ 番目から $r$ 番目までの人のことを表す。
 

"
p02172,Gold Rush,"
  moritaoy君とは、コンピュータのなかで暮らしている謎の大学生です。
  moritaoy君が暮らしている区画は、縦に $2^h$ 、横に $2^w$ 、の大きさのある二次元空間 $s= \{ (p,q) \in \mathbb{z}^2 | 0 \leq p \lt 2^h, 0 \leq q \lt 2^w  \} $ として表されます。
  moritaoy君はいくつかの非負整数を要素とする二次元ベクトルを持っていて、この空間上を足し算を用いて移動します。
  moritaoy君が $(a,b)$ にいて、ベクトル $(i,j)$ によって移動するとは、具体的には以下のような行動を示します。
 $(a+i,b+j)$ に移動する。ただし、そのような点が $s$ に存在しない場合は、オーバーフローを起こし、$a+i \equiv k \bmod 2^h , b+j \equiv l \bmod 2^w$ を満たすようなmoritaoy君の暮らす空間上の点 $(k,l) \in s$ に移動する。 
  以下がmoritaoy君の一日の予定です。
 一日を開始する。このとき、moritaoy君は $(0,0)$ にいて、疲労度は $0$ である。2.を行う。 今日、moritaoy君が移動を行った回数が $k$ 以上なら4.を、そうでないなら3.か4.のどちらか一方を行う。 moritaoy君が持っているベクトルのなかから一つを選び、これを $v$ とする。$v$ によって移動する。moritaoy君の疲労度が $t_v$ 増加する。その後のmoritaoy君の疲労度を $t$ とし、 $t \times g_v$ 単位時間休憩する。2.を行う。 一日を終了する。 
  moritaoy君は、色々な予定を立てて遊ぶことにしました。
  各 $(a,b)$ に対して、一日を終了したときにmoritaoy君が $(a,b)$ にいるような予定全ての、一日に休憩する時間の総和を求めてください。
  ただし、二つの予定が異なるとは、二つの予定の一日に移動する回数が異なる、またはある $i$ があって $i$ 回目の移動に用いるベクトルが異なることをいいます。
 

"
p02173,Space Travel,"
遠い昔、はるかかなたの銀河系で。
時は内乱の嵐が吹き荒れるさなか、凶悪な銀河帝国の軍勢が反乱軍の秘密基地を襲った。
恐るべき帝国宇宙艦隊の追撃から逃れた、ウーク・スターウォーカーによって率いられる自由の戦士たちは、銀河の辺境に新たな秘密基地を築くことにした。
反乱軍の一員であり、凄腕のプログラマーであるあなたにあたえられたミッションは、銀河系のそれぞれの惑星から最も離れた惑星を見つけることである。
 

"
p02174,Power Subsequences,"
  添字が $1$ から始まり、長さが有限の数列を引数とする関数 $f$ を以下のように定義する。
  $\displaystyle f(\{a_1, a_2, \ldots, a_n\}) = \sum_{i=1}^n {a_i}^i$
  長さ $n$ の数列 $x = \{ x_1, x_2, \ldots, x_n \}$ が与えられるので、空の列を除く全ての部分列 $x'$ に対して $f(x')$ を求め、その総和を $998244353$ で割ったあまりを出力せよ。ただし、部分列の添字は、元の数列における相対的な序列を保ったまま $1$ から順に番号を振り直すものとする。また、ある2つの部分列が列として同じでも、取り出した位置が異なるならば、それらは別々に数えるものとする。
 

"
p02175,Strange Plants,"
		あるところに不思議な $x$ [cm] の植物が生えている.
		この植物は以下の不思議な性質を持っている.
	 
			この植物に ""nobiro"" と声を掛けると, その植物は $a$ [cm] 成長する.
		 
			この植物に ""tidime"" と声を掛けると, その植物は $b$ [cm] 成長する.
		 
			この植物に ""karero"" と声をかけると, その植物は $0$ [cm] になる.
		 
		ただし, この植物は負の長さにはならないとする.
		具体的には, $c$ [cm] の状態から $d$ [cm] $(c + d \lt 0)$ 成長するとき, 植物は $0$ [cm] になったときに成長が止まる.
	 
			この植物に $n$ 日間, 毎日一度だけ ""nobiro"", ""tidime"", ""karero"" のうちどれか
			一つの言葉をかけた. $n$ 日後の植物の長さ [cm] を求めよ.
	 

	"
p02176,Shortest Crypt,"
		xryuseixくんの学校では暗号が流行している. 格子状の街に住んでいるxryuseixくんは集合場所を決める新しい暗号を考えた.
	 a ~ m : 北に１マス進む. n ~ z : 南に１マス進む. a ~ m : 東に１マス進む. n ~ z : 西に１マス進む. 
		
	 
		さて,ここでxryuseixくんは, yryuseiyちゃんにデートの集合場所を暗号文で教えようと思ったのだが, 暗号文が冗長なことに気づいた.
	 
		例えば,「ana」という暗号文があったとしよう. これは北に $1$ マス進み, 南へ $1$ マス進んだのち北へ $1$ マス進む.
		これは北に $1$ マス進む暗号文と等価なので,「ana」＝「a」と, 簡潔にできる. xryuseixくんはyryuseiyちゃんに遠回りをさせないよう,暗号文を簡潔にしようと思った.
	 
		そこであなたはxryuseixくんに変わって, 暗号文を簡潔にするプログラムを書くことになった.
		なお, 「暗号文を簡潔にする」とは,「元の暗号文と同じ目的地へ行く最も短い暗号文を作る」ということである.

	 

	"
p02177,iff,"
		$n$ 個の命題があり, それぞれ $1, 2, \cdots,n$ という名前がついている. 
		また, 命題に関する情報が $m$ 個与えられる. $i$ 番目の情報は「$a_i$ $b_i$」という形式で与えられ, これは $a_i$ ならば $b_i$ であることを表す.（「ならば」は論理包含であり、推移律が成り立つ）
		各命題 $i$ に対して $i$ と同値な命題を全て昇順に出力せよ.
		ただし命題 $i$ と命題 $i$ は常に同値である.
		命題 $x$ と命題 $y$ が同値とは,「$x$ ならば $y$」かつ「$y$ ならば $x$」のことである.
	 


	"
p02178,Walking,"
		$1$ から $n$ の番号がつけられている $n$ 個の島がある.
		それぞれの島は $n-1$ 個の橋によって、どの $2$ つの島も何本かの橋を渡って互いに移動することができる.
		それぞれの橋には耐久度があり、入力が与えられた時点での $i$ 番目の橋の耐久度は $w_i$ である.
		それぞれの島にはお宝が $1$ つずつ置いており、島に滞在しているときにお宝を拾うことができる.
	 
		現在島 $s$ にいるyebiくんは、島 $e$ にある博物館に全てのお宝を運びたい.
		yebiくんは✝魔力✝を持っているので、島 $v$ に訪問するたびに、 $v$ から出る全ての橋の耐久度が $t$ 減少する.
		橋の耐久度が $0$ 以下になったとき、橋は崩壊し、それ以降には渡ることができなくなる.
		yebiくんは博物館に全てのお宝を届けることができるか？
		ただし、yebiくんは力持ちなので同時にいくつでもお宝を持ち運ぶことができる.
	 

	"
p02179,Monster Buster,"
            aorイカちゃんはモンスターバスターである.
            ある日, 道を歩いていると寝ているモンスターに出会った.

         
            闘争心が強いaorイカちゃんは,モンスターに寝起きの一撃をお見舞いすることに決めた.
            しかし, 現在のaorイカちゃんの攻撃力は $0$ であり, このままではまともな攻撃ができない.
         
            モンスターバスターの精進をしているaorイカちゃんは, 実は師匠から特殊な笛を託されていた.
            この笛で特定の曲を吹くと一定時間攻撃力が上がるのである.

         
            修行を積んだaorイカちゃんは $n$ 個の曲を吹くことができる.
            $i$ 番目の曲は演奏に $r_i$ 秒かかり, 演奏終了後に攻撃力が $a_i$ だけ上昇する.
            演奏終了から $t_i$ 秒後にこの演奏の効果は切れ, 演奏前の攻撃力に戻ってしまう.
         
            また, aorイカちゃんは重ね演奏をすることができる.
            演奏の効果時間中に同じ曲を演奏し終えると攻撃力が $a_i$ ではなく $w_i$ 上昇する.
            重ね演奏は何回でもできるが効果時間は延長しない. そのため現在効果中の $i$ 番目の曲の最初にかけた効果が切れると重ね演奏の効果もすべて切れる.
         
            aorイカちゃんの攻撃力の最大値を出力せよ.
            なお, いくら演奏してもモンスターは起きないし, aorイカちゃんは $0.5$ 秒で攻撃できる.
         

        "
p02180,Find a Friend,"$c_i = 1$ のとき，時刻 $a_i$ に $b_i$ さんが部屋に入室したことを表す. $c_i = 0$ のとき，時刻 $a_i$ に $b_i$ さんが部屋から退室したことを表す. 
			
		 
			$i$ 番目($1 \leq i \leq n$)の人について，時刻 $t$ までに部屋で一緒に過ごした時間が最も長い人を答えよ．
		 



		"
p02181,String,"
			$n$ 個の文字列 $s_i$ が与えられる.
		 
			$s_i$ を任意の順に繋げて得られる文字列に含まれる ""aor"" の数の最大値を求めよ.
		 



		"
p02182,Spot The Difference,"縦に n マス、横に m マスある長方形の盤面 a, b が与えられます。各盤面について、それぞれのマスは白または黒で塗られています。 盤面 x の i 行 j 列目のマスの色を c(i, j, x) と表記することにします。 以下の条件を満たす整数の組 (i, j) がいくつあるか数えてください。  1 \leq i \leq n  1 \leq j \leq m  c(i, j, a) \neq c(i, j, b) 


"
p02183,Perfect,"
縦 4 マス x 横 10 マスの長方形からなる盤面を考えます。
縦 1 マス x 横 1 マスぶんの正方形をブロックと呼びます。
 ブロックを 4 つ繋げたものをテトロミノと呼び、以下の 7 種類（およびこれらに対して 90 度回転を任意回行ったもの）があります。 さて、盤面のうち 28 個のマスにブロックが置かれた状態を考えます。 左の図のように、各ブロック（赤色で表される）はマスに合うように置かれます。右の図のように半端な位置に置かれることはありません。 4 つのテトロミノ t_1, t_2, t_3, t_4 が与えられるので、このうちちょうど 3 つを選んですきな位置に置くことで、盤面全体にブロックが置かれた状態にできるか判定してください。 ただし、テトロミノを配置するにあたり、以下の条件をすべて満たさなければなりません。 ブロック同士が重なってはいけない。 与えられたテトロミノを回転させてはいけない。 各 i (1 \leq i \leq 4) について、テトロミノ t_i を 2 回以上使ってはいけない。 テトロミノの各ブロックは盤面の外に出てはいけない。 盤面が n 個与えられるので、各盤面についてこの判定を行い、盤面全体にブロックを置けるならば yes、不可能ならば no を出力してください。 

"
p02184,Canisar Cipher,"えびちゃんは、ある非負整数 d を「カニサル暗号」で暗号化して得られた文字列 c を与えられました。この暗号は、非負整数を 10 進法で表したときの各数字をある（元と異なるとは限らない）決められた数字で置き換えるものです。異なる数字が同じ数字に置き換えられたり、同じ数字が出現位置によって異なる数字に書き換えられることはありません。 たとえば、この暗号化方式によって 2646 が 0545 になることはありますが、3456 が 1333 になったり 1333 が 3456 になることはありません。 いま、えびちゃんは d を 10^9+7 で割った余りが m になることを教えてもらいました。このとき、d として考えられるものを一つ出力してください。複数考えられる場合はどれを出力しても構いません。ただし、d の先頭には余分な 0 はついていないものとします。 

"
p02185,Many Decimal Integers,"数字 (0 から 9) のみからなる文字列 s と、数字 と ? のみからなる文字列 t が与えられます。s と t は同じ長さです。 
t 内に存在するそれぞれの ? について、0 から 9 までの数字のいずれか 1 つに変更し、数字のみからなる文字列 t' を作ることを考えます。このとき、f(t') \leq f(s) である必要があります。ここで f(t) は、文字列 t を 10 進数として読んだときの整数値を返す関数とします。
また、t' の最上位の桁にある数字は 0 であってもよいものとします。
 あり得る文字列 t' すべてについて、f(t') の値の総和を 10^9+7 で割った余りを求めてください。なお、条件を満たす t' がひとつも存在しない場合は  0 と答えてください。 

"
p02186,Cutting Subarray,"
えびちゃんは数列 (a_1, a_2, ..., a_n) を持っています。
えびちゃんは（空でもよい）部分配列の総和の最大値が気になるので、それを求めてください。
ここで、部分配列とは連続する部分列を指します。なお、空列の総和は 0 とします。
 さらに、えびちゃんがこの数列を q 回書き換えるので、各書き換えの直後にこの値を求めてください。 

"
p02187,Substring Decomposition,"
2 つの文字列 s と t および整数 k が与えられる。
t の長さ k 以上の連続する部分文字列を考えたとき、それらの連結で s を構成できるか判定せよ。
 ここで文字列 s = s_1 s_2 ... s_n の連続する部分文字列 s[l, r] = s_l s_{l+1} ... s_r (1 \leq l \leq r \leq n) とは、s の l 文字目から r 文字目までを切り出してできる文字列を指し、その長さは r - l + 1 である。 

"
p02188,Restricted DFS,"n 頂点 n-1 辺からなる、自己ループや多重辺が存在しない無向木 g がある。頂点はそれぞれ 1 から n まで番号付けされており、辺もそれぞれ 1 から n-1 まで番号付けされており、i 番目の辺は u_i と v_i を結んでいる。また、i 番目の頂点には非負整数 a_i がそれぞれ割り当てられている。 この木に対して、根 r から以下の擬似コードにしたがって dfs (深さ優先探索) を行うことを考える。 つまり、与えられた g と a に対して、根 r について を実行することを考える。 それぞれの頂点を根としたときの、この dfs のステップ数を求めよ。 

"
p02189,Min Element,"数列a_1,a_2,..,a_nが与えられます。 この数列の最小値の番号を求めてください。 最小値が複数の場所にあるときは、番号の最も小さいものを答えてください。 

"
p02190,Set,"数列a_1,a_2,..,a_nが与えられます。 この数列に値は何種類ありますか。 

"
p02191,Range Count Query,"数列a_1,a_2,..,a_nが与えられます。 クエリでは、値がl以上r以下の項の個数を答えてください。 

"
p02192,K Average Ranges,"数列a_1,a_2,..,a_nが与えられます。 この数列に値の平均がk以上の長さ1以上の区間はいくつありますか。 

"
p02193,Range Min of Max Query,"整数の組の列(a_1,b_1), (a_2,b_2),..,(a_n,b_n)が与えられます。 二種類のクエリを処理してください。 一種類目のクエリでは、a_l,a_{l+1},..,a_rにxを加算します。 二種類目のクエリでは、max(a_l,b_l),max(a_{l+1},b_{l+1}),..,max(a_r,b_r)の最小値を求めます。 

"
p02194,Zero AND Subsets,"非負整数の多重集合a_1,a_2,..,a_nが与えられます。 この集合の空でない部分集合であって、値のbitwiseandが0になるものはいくつありますか。 答えを10^9+7で割った余りを求めてください。 

"
p02195,Bichrome Tree Connectivity,"木が与えられます。 はじめ、すべての頂点は白いです。 白い頂点の色を反転すると黒になり、黒い頂点の色を反転すると白になります。 二種類のクエリを処理してください。 一種類目のクエリでは、頂点vの色を反転します。 二種類目のクエリでは、白い頂点vから白い頂点とそれらを結ぶ辺だけを使ってたどり着ける頂点の個数を答えます。 

"
p02196,Queries with Six Inequeties,"四つの整数の組(a,b,c,d)の集合が与えられます。 j番目のクエリでは、x_j &lt; a_i &lt; y_j &lt; b_iかつz_j &lt; c_i &lt; w_j &lt; d_iなるiが存在するか判定します。 

"
p02197,Twins,"square1001君とe869120君は双子です。 このうち先に生まれた方を出力して下さい。 
"
p02198,Oranges on Cans,"square1001 君は、テーブルにアルミ缶を $n$ 缶置きました。 e869120 君は、テーブル上のそれぞれのアルミ缶の上に $m$ 個ずつミカンを乗せました。 アルミ缶の上に乗っているミカンは全部で何個ありますか？ 
"
p02199,Run,"e869120君は、家から学校へ向かって分速 $p$ メートルで走り出しました。 square1001君は、e869120君が家を出発してから $a$ 分後にe869120君の忘れ物に気が付き、分速 $q$ メートルで追いかけました。 その後、e869120君は、e869120君が家を出発してから $b$ 分後に忘れものに気が付き、分速 $r$ メートルで道を引き返しました。 e869120君が家を出発してから何分後に双子は出会うでしょうか？ ただし、$b$ 分後までにe869120君とsquare1001君が出会うことはありません。 また、e869120君とsquare1001君の家から学校までは一本道であり、近道や別の道はないものとします。 
"
p02200,Today's Random Number,"e869120 君は、「今日の乱数」というキャンペーンをn日間行いました。これは、毎日 1 回乱数を生成し、その値をツイッターに投稿するという企画です。 $1, 2, 3, \dots, n$ 日目の「今日の乱数」は、それぞれ $a_1, a_2, a_3, \dots, a_n$ でした。 e869120 君は、今日の乱数の値が昨日の乱数の値よりも高ければ嬉しくなります。 $n$ 日間のなかで、e869120 君は何回「今日の乱数」によって嬉しくなったでしょうか？ 
"
p02201,Ninja E869120,"e869120君は分身が得意です。 ここに、$n$ 人のパ研部員がいます。しかし、このうちの何人かが e869120 君かもしれません。 そこで、あなたは $n$ 人全てのパ研部員に名前を聞きました。その結果、$n$ 人の部員はそれぞれ $s_1, s_2, s_3, \dots, s_n$ と名乗りました。 e869120 君は何人に分身していたでしょうか？ただし、全てのパ研部員は正直に自分の名前を答えるものとします。 
"
p02202,Gag,"segtree 君は $n$ 個の「ギャグ」を持っていて、それぞれに「できばえ」 $v_i$ という値が定まっています。 segtree 君は自由な順番で全てのギャグを公開することにしました。 ここで、 $i$ 番目のギャグを $j$ 番目に公開した時に得られる「うれしさ」は $v_i - j$ と表されます。 segtree 君が得られる「うれしさ」の和の最大値を求めてください。 
"
p02203,Auction,"square1001君はとある競りを鑑賞していました。 競りとは、買い手が多数で品数に制限があるとき、高値を付けたものに買う権利を与える仕組みの取引です。(新明解国語辞典第七版より) ここでの競りのルールは以下の通りです。 1. 次の 2. ～ 6. を品物が尽きるまで繰り返す 2. 新たな品物を出し、客に見せる 3. 客のうちの 1 人が好きな値段を品物につける 4. 客のうちの 1 人が現在品物についている値段よりも高い値段をつける 5. 4. の行為を行う客がいなくなるまで 4. を繰り返す 6. 品物に一番高い値段を付けた客がそれを落札する square1001君はこの競り中に品物につけられた値段を時間順に全て記録しました。 その記録によると、$n$ 回品物に値段がつけられ、つけられた値段は最初から順に $a_1, a_2, a_3, \dots, a_n$ です。 e869120君はこの競りで何個の品物が出品されたか気になっています。 square1001君が作ったリストから、この競りで出品された品物の個数としてありうる最小値と最大値を求めてください。 
"
p02204,shirts,"segtree 君は、 $m$ 枚のコンテストtシャツを持っています。 彼は今から $n$ 日間、コンテストtシャツだけで過ごそうと考え、$i = 1, 2, 3, \dots, n$ に対して「 $i$ 日目に $a_i$ 枚目のtシャツを着る」という $n$ 個の計画を立てました。 しかし、今の計画のままだと洗濯が間に合わない可能性があるので、必要に応じて計画を変更し、2日連続で同じ服を着ないようにしたいです。 変更する必要のある計画の個数の最小値を求めてください。なお、与えられた制約の元で、計画の変更によって必ず条件を満たすようにできることが証明できます。 
"
p02205,Calculation Training,"square1001 君は e869120 君に、誕生日プレゼントとして二つの数字 $a$ と $b$ をプレゼントしました。 e869120 君はこの二つの数字を使って、計算トレーニングをすることにしました。 具体的には、e869120君は次の操作をちょうど $n$ 回これらの数に行います。 奇数回目の操作のとき、$a$ を $a-b$ で置き換える 偶数回目の操作のとき、$b$ を $a+b$ で置き換える e869120君が $n$ 回の操作をした後、$a$ と $b$ の値がそれぞれいくつになっているか求めてください。 
"
p02206,Prize,"segtree くんは、 $n$ 人のチームでプログラミングコンテストに出場し、 $k$ 円の賞金を得ました！今、この賞金を分配しようとしています。 segtree くんを含む $n$ 人のチームメンバーそれぞれには、実力順に $1$ から $n$ までの番号がつけられています。segtree くんは $1$ 番です。 $i$ 番のチームメイト $(i \geq 2)$ の得る賞金額が「$i - 1$ 番のチームメイトの得た賞金額の半分を整数に切り捨てた値」より少ないと、その人は怒ってしまいます。 怒る人が一人もいないように $k$ 円の賞金を分配するとき、segtree くんがもらえる賞金の最大値を求めてください。 
"
p02207,Earthquakes,"e869120 君は地震が苦手です。 具体的には、ある作業をしている時に震度 $p$ の地震が発生した際、その作業のパフォーマンスが $10 \times p$ パーセント低下します。 昨日、$n$ 回地震が発生しました。より具体的に言うと、昨日の i 回目の地震は時刻 $t_i$ に発生し、その震度は $a_i$ でした。 ここで $q$ 個の質問が与えられます。$i$ 個目の質問の内容は以下の通りです。 e869120 君が時刻 $l_i$ から時刻 $r_i$ まで作業をした時、最終的な作業のパフォーマンスの値はいくつになるでしょうか？ ただし、作業開始時のパフォーマンスは $1000000000 \ (= 10^9)$ であり、地震以外に作業のパフォ―マンスに影響を及ぼすものはないものとします。 また、作業開始時、終了時と同時に地震が発生していることはありません。 
"
p02208,Cutlet Sandwich,"ある世界には、 $x$ 種類の「サンド」、 $y$ 種類の「カツ」、 $z$ 種類の「カレー」という食べ物があります。 この世界には $n$ 種類の「カツサンド」という食べ物があり、 $i$ 種類目のカツサンドは $a_i$ 種類目のサンドと $b_i$ 種類目のカツが原料です。 また、 $m$ 種類の「カツカレー」という食べ物があり、 $i$ 種類目のカツカレーは $c_i$ 種類目のカツと $d_i$ 種類目のカレーが原料です。 segtree 君は、あるカツサンドまたはカツカレーを持っているとき、原料のうち少なくとも $1$ つが共通しているようなカツサンドまたはカツカレーと交換することができます。 例えば、$a$ 種類目のサンドと $b$ 種類目のカツが原料であるカツサンドを持っているとき、 $a$ 種類目のサンドまたは $b$ 種類目のカツを原料に持つ任意のカツサンド、または、 $b$ 種類目のカツを原料に含む任意のカツカレーと交換できます。
 今、 segtree 君は $s$ 種類目のカツサンドを持っていますが、食べたいのは $t$ 種類目のカツカレーです。 $t$ 種類目のカツカレーを手に入れることができるか判定してください。もし可能ならば、最小何回の交換で目的のカツカレーを手にいられるかを求めてください。 
"
p02209,Are Cards Snacks?,"square1001君は $n$ 枚のカードを持っています。 これらのカードにはそれぞれ整数が書かれており、$i$ 枚目のカードに書かれている整数は $a_i$ です。 square1001君の今日の乱数は $k$ です。square1001君はこれらの $n$ 枚のカードの中から何枚かのカードを選び、合計が $k$ となるようにしたいです。 この様子を見ていたe869120君は、これを阻止したいと考えました。 具体的には、事前に何枚かのカードを食べることで、square1001 君がどのように残りのカードを選んでも合計が $k$ とならないようにしたいです。 しかし、e869120 君は満腹であるため、なるべくカードを食べたくありません。 さて、e869120 君は最低何枚のカードを食べることでこれを阻止できますか？ 
"
p02210,Divide Cake into Five," segtree 君は五つ子の家庭教師をしています。今日はクリスマスイブなので、五つ子のために円形のケーキを五等分しようとしています。 ケーキは中心から扇形状に $n$ 個のピースに分けられており、 $i$ 番目と $i + 1$ 番目($1 \leq i \leq n - 1$) 、 $n$ 番目と $1$ 番目のピースは隣り合っています。 $i$ 番目のピースの大きさは $a_i$ です。全てのピースの大きさの和を $s$ とすると、全ての入力について $s$ が $5$ の倍数であることが保証されます。 ある非負整数 $y$ が与えられます。以下の条件を満たすようなケーキの五つ子への分け方を、「ケーキの五等分」と呼びます。 全ての人が1つ以上のピースを取る。 ケーキの中でそれぞれが取るピースたちは連結である。つまり、取る人でピースをグループ分けしたとき、同じグループかつ隣り合っているピースに移動することを繰り返して辿り着けないような同じグループ内のピースの組は存在しない。 誰も取らないピースは存在しない。 全ての人について、取るピースの大きさを $x$ としたとき、必ず $x + y \geq s / 5$ を満たす。 「ケーキの五等分」になるようなケーキの分け方の通り数が何通りあるか求めてください。 
"
p02211,Apple Adventure,"square1001君とe869120君は縦 $h$ 行、横 $w$ 列のグリッドの世界に迷い込んでしまいました! この世界の神は言いました。 「リンゴを $k$ 個集めて二人が出会ったとき、さすれば元の世界に帰れるであろう。」 この言葉を聞いたsquare1001君は、リンゴを $k$ 個以上集めてe869120君がいるマスへ向かうことにしました。 ここで、グリッドの各マスは次のように表されます。 's'：square1001君がいるマスです。 'e'：e869120君がいるマスです。 'a'：リンゴが1つ落ちているマスです。このマスを初めて訪れたときにリンゴを1つ得ることができます。このグリッド上にこのマスは20個以下しかありません。 '#'：壁です。このマスに訪れることはできません。 '.'：何もないマスです。このマスに訪れることができます。 square1001君は自分がいるマスから上下左右に隣り合うマスへの移動を繰り返すことで、目的を達成しようとします。ただし、グリッドから外に出ることはできません。 square1001君が目的を達成するために必要な移動回数の最小値を求めてください。 ただし、e869120君が動くことはないものとします。また、square1001君はリンゴを $k$ 個以上持ち運ぶ能力があるものとします。 また、目標が達成できないときは「-1」を出力してください。 
"
p02212,Team Making,"今年の kupc はチームで参加できることを聞きつけたあなたは、友達に声をかけてチームで出場することにしました。 最終的に、あなたを含めて $4$ 人が集まりました。 個人の強さはレーティングで表され、$4$ 人のレーティングはそれぞれ $a$, $b$, $c$, $d$ です。 あなたたちは $2$ 人ずつの $2$ チームに分かれることにしました。 このとき、チームの強さはそのチームを構成する $2$ 人のレーティングの和で定義されます。
また、チーム間の実力差はそれぞれのチームの強さの差の絶対値で定義されます。 あなたはチーム間の実力差ができるだけ小さくなるようにチーム分けを行いたいです。 うまくチーム分けを行ったときの、チーム間の実力差の最小値を求めてください。 
"
p02213,Don't Rotate the Dice!,"$h$ 行 $w$ 列からなるグリッドがあります。以降、グリッド上の $i$ 行目 $j$ 列目のマスを $(i, j)$ のマスと書きます。 グリッドの各マスには、$1$ 以上 $6$ 以下の数字か、あるいは # の文字が $1$ つずつ書かれています。ただし、$i$ と $j$ がともに偶数であるような $(i, j)$ のマスには必ず # が書かれています。 あなたは以下の図で表されるようなサイコロを $1$ つ持っています。  最初、あなたはこのサイコロを底面が $6$, 前面が $2$, 右面が $3$ となるように $(1, 1)$ のマスに置きます。
ここで、前面は $(i, j)$ の $i$ が増える方向の面を、右面は $j$ が増える方向の面を指します。 その後、サイコロが置かれているマスに辺で隣接する $4$ マスのいずれかにサイコロを転がす操作を好きな回数繰り返すことができます。
サイコロを転がす際、サイコロは転がす方向に90度回転します。 ただし、サイコロを転がす際には以下の条件を満たしている必要があります。 グリッドの外にサイコロを転がしてはならない # が書かれているマスに転がしてはならない 転がした後の状態を考えたときに、サイコロの底面に書かれた数字とそのマスに書かれた数字が一致する $(1, 1)$ のマスには必ず $6$ が書かれていることが保証されます。 サイコロを転がす操作を繰り返すことで、サイコロを $(1, 1)$ のマスから $(h, w)$ のマスに移動させることができるか判定してください。 
"
p02214,Cactus Query,"単純無向グラフで、任意の辺が高々 $1$ つの単純閉路にしか含まれないようなものをサボテングラフと呼ぶことにします。 $n$ 頂点 $m$ 辺の連結なサボテングラフ $g$ が与えられます。 各頂点は $1$ から $n$ まで番号が付いています。 また、$i$ 個目の辺は頂点 $a_i$ と頂点 $b_i$ を結んでおり、コストは $c_i$ です。 グラフ $g$ 上の単純パスのコストを、そのパス上に含まれる全ての辺のコストの xor と定めます。 以下のような形式の $q$ 個のクエリに答えてください。 x_i y_i k_i ― 頂点 $x_i$ と頂点 $y_i$ を繋ぐすべての単純パスのコストを列挙して重複する値を除き、小さい順に並べた列を $d = d_1, d_2, ... , d_l$ としたときに、$d_{k_i}$ を求めよ。ただし、このコスト列 $d$ の長さ $l$ が $k_i$ より小さい場合は $-1$ とする。 

"
p02215,Xor Array,"整数 $n$ と $x$ が与えられます。
以下の条件を満たす長さ $n$ の数列の個数を $998244353$ で割った余りを求めてください。 数列は広義単調増加である。 数列の各要素は $0$ 以上 $x$ 以下である。 全ての要素の排他的論理和(xor)が $x$ である。 

"
p02216,Array Game,"長さ $n$ の正整数列 $a_1, a_2, \ldots, a_n$ があります。 この数列を用いた、$2$ 人のプレイヤーが先手と後手に分かれて行う以下のゲームを考えます。 数列の正の項を $1$ つ選び、その値を $1$ 減らす。 数列の全ての項が正のとき、全ての項の値を $1$ ずつ減らす。 

 先に操作を行えなくなったほうが負けです。 $2$ 人のプレイヤーが最適に行動したとき、先手と後手どちらが勝つかを求めてください。 
"
p02217,Tree of Peony,"$n$ 頂点 $n-1$ 辺からなる木があり、$i$ 番目の辺は $u_i$ 番目の頂点と $v_i$ 番目の頂点を接続しています。 各頂点にはボタンが咲いており、$i$ 番目の頂点に咲いているボタンをボタン $i$ と呼ぶことにします。 はじめ、ボタン $i$ の美しさは $a_i$ です。 ボタン $i$ を押すたびに、ボタン $i$ の美しさを隣接するボタンに $1$ ずつ分け与えます。 すなわち、$i$ 番目の頂点に $c_1, ..., c_k$ 番目の頂点が隣接している場合、ボタン $i$ の美しさが $k$ 減少し、ボタン $c_1, ..., c_k$ の美しさがそれぞれ $1$ ずつ増加します。 このとき、負の美しさのボタンを押しても良いし、ボタンを押した結果あるボタンの美しさが負になっても良いです。 あなたの目的はボタン $1, 2, ..., n$ の美しさをそれぞれ $b_1, ..., b_n$ にすることです。 最小で合計何回ボタンを押せば目的を達成できるでしょうか。 
"
p02218,The Farthest City,"$n$ 個の町と $n-1$ 個の道があります。 すべての町と道にはそれぞれ $1$ から $n$, $1$ から $n-1$ の番号がついています。 道 $i$ は町 $a_i$ と町 $b_i$ を距離 $d_i$ で双方向につないでいます。 最初はすべての道が通行可能な状態であり、どの町からもいくつかの道を通ることですべての町に行くことができます。 すいばかくんは最初、町 $1$ にいます。 $q$ 個のクエリが与えられるので順番に処理してください。クエリは $3$ 種類あり、以下の形式で与えられます。 クエリ $1$ : 1 x ― すいばかくんが町 $x$ に移動する。ただし、このクエリ時点で、すいばかくんがいる町と町 $x$ は通行可能な $1$ つの道で直接つながれていることが保証される。 クエリ $2$ : 2 y ― 道 $y$ が封鎖される。ただし、このクエリ時点で、道 $y$ は通行可能であることが保証される。 クエリ $3$ : 3 z ― 道 $z$ が通行可能になる。ただし、このクエリ時点で、道 $z$ は封鎖されていることが保証される。 さらに、各クエリを行った直後に、すいばかくんがその時点で通行可能な道のみを使って到達可能な町のうち、すいばかくんがいる町から一番遠い町の番号を昇順ですべて出力してください。 
"
p02219,Wizard Tower,"あなたが持っている魔導書には、 $n$ 個の魔法が載っています。 魔法には $1$ から $n$ までの番号がついていて、魔法 $i (1 \le i \le n)$ のコストははじめ整数 $a_i$ です。 あなたの目的は、魔導書に載っているすべての魔法を $1$ 回ずつ唱えることです。 魔法を唱えはじめる前に、あなたはクッキーを $k$ 枚食べることができます。クッキーを食べるのに時間はかかりません。 あなたはクッキーを $1$ 枚食べるたびに、コストが正の魔法を $1$ つ選び、そのコストを $1$ 下げることができます。 クッキーを食べたあと、あなたは魔法を唱え始めます。 あなたの mp ははじめ $m$ です。あなたは以下のどちらかを繰り返して、 $n$ 個の魔法を任意の順番で $1$ 回ずつ唱えます。 時間は経過しない。 mp を魔法 $i$ のコストだけ消費する。 

 時間が $m - m$ 経過する。 mp を $1$ 回復する。 

 あなたが $n$ 個の魔法を任意の順番で $1$ 回ずつ唱えるためにかかる時間の最小値を求めてください。 
"
p02220,Parity Sort,"$0$ から $n-1$ までの整数を並び替えた長さ $n$ の順列 $p$ が与えられます。 以下の操作を最大 $30$ 回まで行って、 $p$ を昇順に並べ替えてください。 
"
p02221,Tournament,"京都大学クスノキ前にて、$2$ 人用対戦ゲームのトーナメントが行われようとしています。 このトーナメントの参加者は $2^n$ 人いて、 $1$ から $2^n$ までの番号がついています。 参加者のうちの $2$ 人が戦った時の勝敗は、$0$ と $1$ からなる長さ $2^n-1$ の文字列 $s$ によって表されます。 人 $x$ と人 $y$ $(1 \le x &lt; y \le 2^n)$ が戦ったとき、 $s_{y-x} = 0$ のとき、人 $x$ が勝ち、  $s_{y-x} = 1$ のとき、人 $y$ が勝つ ことが分かっています。 トーナメントは参加者が一列に並ぶことで始まり、以下の通りに進行します。 列の先頭から $2$ 人ずつペアを作る。すべてのペアについて、ペア内の $2$ 人が戦う。 1 の対戦で勝った人は列に残り、負けた人は列から抜ける。 残っている人が $2$ 人以上いるときは、列を詰めて 1 に戻る。 残っている人が $1$ 人となったら、その人が優勝者となる。 いま、参加者は初期状態として、先頭から $i$ 番目 $(1 \le i \le 2^n)$ が人 $p_i$ となるように並んでいます。 $0 \le k \le 2^n-1$ を満たすすべての整数 $k$ について、以下の問題を解いてください。 つまり、移動後の列における参加者の番号を先頭から挙げていくと、 $p_{k+1}, p_{k+2}, ..., p_{2^n}, p_1, p_2, ..., p_k$ となる。 

 移動後の列からトーナメントを始めたときの、優勝者の番号を求めよ。 

"
p02222,Painting Tree,"モデューロさんは木の絵を描くのがとてもうまいです。 モデューロさんは長い年月をかけて頂点が $n$ 個である木の絵を書きました。
この木の頂点には $1$ から $n$ までの番号がついており、頂点 $a_i$ と $b_i$ $(1 \leq i \leq n-1)$ は直接辺でつながれています。
すべての頂点には色がまだ塗られていません。 モデューロさんが書いたこの木の絵はたくさんの人を感動させ、有名な美術館に飾られることが決まりました。 この美術館には順に $n$ 人の人が来場します。モデューロさんは来場者特典として、それぞれの人に $1$ 枚ずつ木の絵のコピーを配布することにしました。 さらに、来場者に満足してもらうため、配布する木の絵の頂点すべてに色を塗ることにしました。
$k$ 番目 $(1 \leq k \leq n)$ に来場する人は、以下の 2 条件を共に満たす絵が配布されたときにのみ満足します。 最短距離が $k$ の倍数である任意の 2 頂点は、同じ色で塗られている。   最短距離が $k$ の倍数でない任意の 2 頂点は、異なる色で塗られている。     モデューロさんが持っている色の数は無限にあります。また、それぞれのコピーで色の塗り方が違っても構いません。 それぞれの来場者に対し、その来場者を満足させるように頂点を塗ることができるかどうか判定してください。 
"
p02223,String Set,"以下の条件を満たす文字列集合 $s$ のうち、要素数が最大となるものを $1$ つ構成してください。 $s$ に含まれる文字列の長さは $1$ 以上 $n$ 以下である。 $s$ に含まれる文字列の長さはそれぞれ異なる。 $s$ に含まれる文字列は、文字 0, 1 のみからなる。 $s$ に含まれるどの $2$ つの文字列についても、一方がもう一方の部分文字列とならない。 ただし、文字列 $x$ の部分文字列とは、 $x$ の先頭と末尾から $0$ 文字以上の文字を取り除くことで得られる文字列のことを言います。 
"
p02224,op Game,"$1000$ ビットの非負整数が $200$ 個あり、$a_1, \ldots, a_{100}, b_1, \ldots, b_{100}$ とします。 アリスは $a_1, \ldots, a_{100}$ を確認し、$3000$ ビットのメモ $x$ をチャーリーのために残します。 ボブは $b_1, \ldots, b_{100}$ を確認し、$3000$ ビットのメモ $y$ をチャーリーのために残します。 チャーリーはメモ $x, y$ の情報をもとに、$100$ 個の質問に答えます。 $i$ 番目の質問は $1000$ ビットの非負整数 $c_i$ で表され、チャーリーは $a_{x_i}$ と $b_{y_i}$ のビットごとの排他的論理和が $c_i$ に等しくなるような $x_i, y_i$ を答えます。 $100$ 個の質問のうち、$95$ 個以上の質問に正答できる戦略を考えてください。 
"
p02225,Sum Them Up!, 
p02226,Test,"
unionfind（バイナリ入力）"
p02227,Test, 
p02228,UF, 
p02229,UF, 
p02230,UF, 
p02231,UF, 
p02232,Secret of Chocolate Poles, 
p02233,Fibonacci Number,"
  write a program which prints $n$-th fibonacci number for a given integer $n$. the $n$-th fibonacci number is defined by the following recursive formula:
 

\begin{equation*}
fib(n)= \left \{
\begin{array}{ll}
1　         &   (n = 0)          \\
1　         &  (n = 1) \\
fib(n - 1) + fib(n - 2)  & \\
\end{array}
\right.
\end{equation*}

"
p02234,Matrix Chain Multiplication,"
  the goal of the matrix-chain multiplication problem is to find the most efficient way to multiply given $n$ matrices $m_1, m_2, m_3,...,m_n$.
 
  write a program which reads dimensions of $m_i$, and finds the minimum number of scalar multiplications to compute the maxrix-chain multiplication $m_1m_2...m_n$.
 

"
p02235,Longest Common Subsequence,"
for given two sequences $x$ and $y$, a sequence $z$ is a common subsequence of $x$ and $y$ if $z$ is a subsequence of both $x$ and $y$. for example, if $x = \{a,b,c,b,d,a,b\}$ and $y = \{b,d,c,a,b,a\}$, the sequence $\{b,c,a\}$ is a common subsequence of both $x$ and $y$. on the other hand, the sequence $\{b,c,a\}$ is not a longest common subsequence (lcs) of $x$ and $y$, since it has length 3 and the sequence $\{b,c,b,a\}$, which is also common to both $x$ and $y$, has length 4. the sequence $\{b,c,b,a\}$ is an lcs of $x$ and $y$, since there is no common subsequence of length 5 or greater.
 
  write a program which finds the length of lcs of given two sequences $x$ and $y$. the sequence consists of alphabetical characters.
 

"
p02236,Optimal Binary Search Tree,"
optimal binary search tree is a binary search tree constructed from $n$ keys and $n+1$ dummy keys so as to minimize the expected value of cost for a search operation.
 
  we are given a sequence $k = {k_1, k_2, ..., k_n}$ of $n$ distinct keys in sorted order $(k_1 < k_2 < ... < k_n)$, and we wish to construct a binary search tree. for each key $k_i$, we have a probability $p_i$ that a search will be for $k_i$. some searches may be for values not in $k$, and so we also have $n+1$ dummy keys $d_0, d_1, d_2, ..., d_n$ representing values not in $k$. the dummy keys $d_i (0 \le i \le n)$ are defined as follows:
													      if $i=0$, then $d_i$ represents all values less than $k_1$ if $i=n$, then $d_i$ represents all values greater than $k_n$ if $1 \le i \le n-1$, then $d_i$ represents all values between $k_i$ and $k_{i+1}$ 
  for each dummy key $d_i$, we have a probability $q_i$ that a search will correspond to $d_i$.
for $p_i (1 \le i \le n)$ and $q_i (0 \le i \le n)$, we have 

  \[
  \sum_{i=1}^n p_i + \sum_{i=0}^n q_i = 1
  \]

  then the expected cost of a search in a binary search tree $t$ is

  \[
  e_t = \sum_{i=1}^n (depth_t(k_i) + 1) \cdot p_i + \sum_{i=0}^n (depth_t(d_i) + 1) \cdot q_i
  \]

  where $depth_t(v)$ is the depth of node $v$ in $t$.

  for a given set of probabilities, our goal is to construct a binary search tree whose expected search cost is smallest. we call such a tree an optimal binary search tree.

 
each key $k_i$ is an internal node and each dummy key $d_i$ is a leaf. for example, the following figure shows the optimal binary search tree obtained from sample input 1.
 

  


"
p02237,Graph,"
there are two standard ways to represent a graph $g = (v, e)$, where $v$ is a set of vertices and $e$ is a set of edges; adjacency list representation and adjacency matrix representation.
 
  an adjacency-list representation consists of an array $adj[|v|]$ of $|v|$ lists, one for each vertex in $v$. for each $u \in v$, the adjacency list $adj[u]$ contains all vertices $v$ such that there is an edge $(u, v) \in e$. that is, $adj[u]$ consists of all vertices adjacent to $u$ in $g$.
 
  an adjacency-matrix representation consists of $|v| \times |v|$ matrix $a = a_{ij}$ such that $a_{ij} = 1$ if $(i, j) \in e$, $a_{ij} = 0$ otherwise.
 
  write a program which reads a directed graph $g$ represented by the adjacency list, and prints its adjacency-matrix representation. $g$ consists of $n\; (=|v|)$ vertices identified by their ids $1, 2,.., n$ respectively.
 


"
p02238,Depth First Search,"
  depth-first search (dfs) follows the strategy to search ”deeper” in the graph whenever possible. in dfs, edges are recursively explored out of the most recently discovered vertex $v$ that still has unexplored edges leaving it. when all of $v$'s edges have been explored, the search ”backtracks” to explore edges leaving the vertex from which $v$ was discovered.
 
  this process continues until all the vertices that are reachable from the original source vertex have been discovered. if any undiscovered vertices remain, then one of them is selected as a new source and the search is repeated from that source.
 
  dfs timestamps each vertex as follows:
 $d[v]$ records when $v$ is first discovered. $f[v]$ records when the search finishes examining $v$’s adjacency list. 
  write a program which reads a directed graph $g = (v, e)$ and demonstrates dfs on the graph based on the following rules:
 $g$ is given in an adjacency-list. vertices are identified by ids $1, 2,... n$ respectively. ids in the adjacency list are arranged in ascending order. the program should report the discover time and the finish time for each vertex. when there are several candidates to visit during dfs, the algorithm should select the vertex with the smallest id. the timestamp starts with 1. 


"
p02239,Breadth First Search,"
  write a program which reads an directed graph $g = (v, e)$, and finds the shortest distance from vertex $1$ to each vertex (the number of edges in the shortest path). vertices are identified by ids $1, 2, ... n$. 
 

"
p02240,Connected Components,"
  write a program which reads relations in a sns (social network service), and judges that given pairs of users are reachable each other through the network.
 

"
p02241,Minimum Spanning Tree,"
  for a given weighted graph $g = (v, e)$, find the minimum spanning tree (mst) of $g$ and print total weight of edges belong to the mst.
 

"
p02242,Single Source Shortest Path I,"
for a given weighted graph $g = (v, e)$, find the shortest path from a source to each vertex. for each vertex $u$, print the total weight of edges on the shortest path from vertex $0$ to $u$.
 

"
p02243,Single Source Shortest Path II,"
  for a given weighted graph $g = (v, e)$, find the shortest path from a source to each vertex. for each vertex $u$, print the total weight of edges on the shortest path from vertex $0$ to $u$.
 

"
p02244,8 Queens Problem,"
  the goal of 8 queens problem is to put eight queens on a chess-board such that none of them threatens any of others. a queen threatens the squares in the same row, in the same column, or on the same diagonals as shown in the following figure.
 
  for a given chess board where $k$ queens are already placed, find the solution of the 8 queens problem.
 

"
p02245,8 Puzzle,"
  the goal of the 8 puzzle problem is to complete pieces on $3 \times 3$ cells where one of the cells is empty space. 
 
  in this problem, the space is represented by 0 and pieces are represented by integers from 1 to 8 as shown below.
 
  you can move a piece toward the empty space at one step. your goal is to make the pieces the following configuration in the shortest move (fewest steps).
 
  write a program which reads an initial state of the puzzle and prints the fewest steps to solve the puzzle.
 

"
p02246,15 Puzzle,"
  the goal of the 15 puzzle problem is to complete pieces on $4 \times 4$ cells where one of the cells is empty space.
 
  in this problem, the space is represented by 0 and pieces are represented by integers from 1 to 15 as shown below.
 
  you can move a piece toward the empty space at one step. your goal is to make the pieces the following configuration in the shortest move (fewest steps).
 
  write a program which reads an initial state of the puzzle and prints the fewest steps to solve the puzzle.
 

"
p02247,Naive String Search,"
  find places where a string p is found within a text t.
  
  print all indices of t where p found. the indices of t start with 0.
 

"
p02248,String Search,"
  find places where a string p is found within a text t.
  print all indices of t where p found. the indices of t start with 0.
 


"
p02249,Pattern Search,"
find places where a r &times c pattern is found within a  h &times; w region. print top-left coordinates (i, j) of sub-regions where the pattern found. the top-left and bottom-right coordinates of the region is (0, 0) and (h-1, w-1) respectively.
 

"
p02250,Multiple String Matching,"
  determine whether a text t includes a pattern p. your program should answer for given queries consisting of p_i.
 

"
p02251,Change Making,"you want to make change for $n$ cents. assuming that you have infinite supply of coins of 1, 5, 10 and/or 25 cents coins respectively, find the minimum number of coins you need. 

"
p02252,Fractional Knapsack Problem,"you have $n$ items that you want to put them into a knapsack of capacity $w$. item $i$ ($1 \le i \le n$) has weight $w_i$ and value $v_i$ for the weight. when you put some items into the knapsack, the following conditions must be satisfied: the total value of the items is as large as possible. the total weight of the selected items is at most $w$. you can break some items if you want. if you put $w'$($0 \le w' \le w_i$) of item $i$, its value becomes $\displaystyle v_i \times \frac{w'}{w_i}.$ find the maximum total value of items in the knapsack. 

"
p02253,Activity Selection Problem,"there are $n$ acitivities with start times $\{s_i\}$ and finish times $\{t_i\}$. assuming that a person can only work on a single activity at a time, find the maximum number of activities that can be performed by a single person. 

"
p02254,Huffman Coding,"we want to encode a given string $s$ to a binary string. each alphabet character in $s$ should be mapped to a different variable-length code and the code must not be a prefix of others. huffman coding is known as one of ways to obtain a code table for such encoding. for example, we consider that appearance frequencycies of each alphabet character in $s$ are as follows: we can obtain ""huffman codes"" (the third row of the table) using huffman's algorithm. the algorithm finds a full binary tree called ""huffman tree"" as shown in the following figure. to obtain a huffman tree, for each alphabet character, we first prepare a node which has no parents and a frequency (weight) of the alphabet character. then, we repeat the following steps: choose two nodes, $x$ and $y$, which has no parents and the smallest weights. create a new node $z$ whose weight is the sum of $x$'s and $y$'s. add edge linking $z$ to $x$ with label $0$ and to $y$ with label $1$. then $z$ become their parent. if there is only one node without a parent, which is the root, finish the algorithm. otherwise, go to step 1. finally, we can find a ""huffman code"" in a path from the root to leaves. task given a string $s$, output the length of a binary string obtained by using huffman coding for $s$. 

"
p02255,Insertion Sort,"
write a program of the insertion sort algorithm which sorts a sequence a in ascending order. the algorithm should be based on the following pseudocode:
 
note that, indices for array elements are based on 0-origin.
 
to illustrate the algorithms, your program should trace intermediate result for each step.
 

"
p02256,Greatest Common Divisor,"
write a program which finds the greatest common divisor of two natural numbers a and b
 

"
p02257,Prime Numbers,"
a prime number is a natural number which has exactly two distinct natural number divisors: 1 and itself. for example, the first four prime numbers are: 2, 3, 5 and 7.
 
write a program which reads a list of n integers and prints the number of prime numbers in the list.
 

"
p02258,Maximum Profit,"
you can obtain profits from foreign exchange margin transactions. for example,  if you buy 1000 dollar at a rate of 100 yen per dollar, and sell them at a rate of 108 yen per dollar, you can obtain (108 - 100) &times; 1000 = 8000 yen.
 
  write a program which reads values of a currency $r_t$ at a certain time $t$ ($t = 0, 1, 2, ... n-1$), and reports the maximum value of $r_j - r_i$ where $j > i$ .
 

"
p02259,Bubble Sort,"
write a program of the bubble sort algorithm which sorts a sequence a in ascending order. the algorithm should be based on the following pseudocode:
 
note that, indices for array elements are based on 0-origin.
 
your program should also print the number of swap operations defined in line 4 of the pseudocode.
 

"
p02260,Selection Sort,"
write a program of the selection sort algorithm which sorts a sequence a in ascending order. the algorithm should be based on the following pseudocode:
 
note that, indices for array elements are based on 0-origin.
 
your program should also print the number of swap operations defined in line 6 of the pseudocode in the case where i &ne; mini.
 

"
p02261,Stable Sort,"
let's arrange a deck of cards. there are totally 36 cards of 4 suits(s, h, c, d) and 9 values (1, 2, ... 9). for example, 'eight of heart' is represented by h8 and 'one of diamonds' is represented by d1.
 
your task is to write a program which sorts a given set of cards in ascending order by their values using the bubble sort algorithms and the selection sort algorithm respectively. these algorithms should be based on the following pseudocode:
 
for each algorithm, report the stability of the output for the given input (instance). here, 'stability of the output' means that: cards with the same value appear in the output in the same order as they do in the input (instance).
 
note that, cards with same values but different suits must be appear in the same order of the input sequence.
 
-->

"
p02262,Shell Sort,"
  shell sort is a generalization of insertion sort to arrange a list of $n$ elements $a$.
 
  a function shellsort(a, n) performs a function insertionsort(a, n, g), which considers every $g$-th elements. beginning with large values of $g$, it repeats the insertion sort with smaller $g$. 
 
your task is to complete the above program by filling ?. write a program which reads an integer $n$ and a sequence $a$, and prints $m$, $g_i (i = 0, 1, ..., m − 1)$ in the pseudo code and the sequence $a$ in ascending order. the output of your program must meet the following requirements:
 $1 \leq m \leq 100$ $0 \leq g_i \leq n$ cnt does not exceed $\lceil n^{1.5}\rceil$ 


"
p02263,Stack,"
an expression is given in a line. two consequtive symbols (operand or operator) are separated by a space character.
 
you can assume that +, - and * are given as the operator and an operand is a positive integer less than 106
 

"
p02264,Queue,"
n q
name1 time1
name2 time2
...
namen timen
 
in the first line the number of processes n and the quantum q are given separated by a single space.
 
in the following n lines, names and times for the n processes are given. namei and timei are separated by a single space.
 

"
p02265,Doubly Linked List,"
your task is to implement a double linked list.
 
write a program which performs the following operations:
 insert x: insert an element with key x into the front of the list. delete x: delete the first element which has the key of x from the list. if there is not such element, you need not do anything. deletefirst: delete the first element from the list.  deletelast: delete the last element from the list.  



"
p02266,Section Diagram,"
  your task is to simulate a flood damage.
 
  for a given cross-section diagram, reports areas of flooded sections.
 
  assume that rain is falling endlessly in the region and the water overflowing from the region is falling in the sea at the both sides.
for example, for the above cross-section diagram, the rain will create floods which have areas of 4, 2, 1, 19 and 9 respectively.
 

"
p02267,Linear Search,"
you are given a sequence of n integers s and a sequence of different q integers t. write a program which outputs c, the number of integers in t which are also in the set s.
 

"
p02268,Binary Search,"
you are given a sequence of n integers s and a sequence of different q integers t. write a program which outputs c, the number of integers in t which are also in the set s.
 

"
p02269,Dictionary,"
your task is to write a program of a simple dictionary which implements the following instructions:
 insert str: insert a string str in to the dictionary find str: if the distionary contains str, then print 'yes', otherwise print 'no' 






"
p02270,Allocation,"
  in the first line, two integers $n$ and $k$ are given separated by a space character. in the following $n$ lines, $w_i$ are given respectively.
 

"
p02271,Exhaustive Search,"
write a program which reads a sequence a of n elements and an integer m, and outputs ""yes"" if you can make m by adding elements in a, otherwise ""no"". you can use an element only once.
 
you are given the sequence a and q questions where each question contains mi.
 

"
p02272,Merge Sort,"
write a program of a merge sort algorithm implemented by the following pseudocode. you should also report the number of comparisons in the merge function.
 


merge(a, left, mid, right)
  n1 = mid - left;
  n2 = right - mid;
  create array l[0...n1], r[0...n2]
  for i = 0 to n1-1
    do l[i] = a[left + i]
  for i = 0 to n2-1
    do r[i] = a[mid + i]
  l[n1] = sentinel
  r[n2] = sentinel
  i = 0;
  j = 0;
  for k = left to right-1
    if l[i] <= r[j]
      then a[k] = l[i]
           i = i + 1
      else a[k] = r[j]
           j = j + 1

merge-sort(a, left, right){
  if left+1 < right
    then mid = (left + right)/2;
         call merge-sort(a, left, mid)
         call merge-sort(a, mid, right)
         call merge(a, left, mid, right)




"
p02273,Koch Curve,"
write a program which reads an integer n and draws a koch curve based on recursive calles of depth n.
 
the koch curve is well known as a kind of fractals.
 
you can draw a koch curve in the following algorithm:
 divide a given segment (p1, p2) into three equal segments. replace the middle segment by the two sides of an equilateral triangle (s, u, t) of the same length as the segment. repeat this procedure recursively for new segments (p1, s), (s, u), (u, t), (t, p2). 
you should start (0, 0), (100, 0) as the first segment.
 

"
p02274,The Number of Inversions,"
  for a given sequence $a = \{a_0, a_1, ... a_{n-1}\}$, the number of pairs $(i, j)$ where $a_i > a_j$ and $i < j$, is called the number of inversions. the number of inversions is equal to the number of swaps of bubble sort defined in the following program:
 
  for the given sequence $a$, print the number of inversions of $a$. note that you should not use the above program, which brings time limit exceeded.
 

"
p02275,Counting Sort,"
counting sort can be used for sorting elements in an array which each of the n input elements is an integer in the range 0 to k. the idea of counting sort is to determine, for each input element x, the number of elements less than x as c[x]. this information can be used to place element x directly into its position in the output array b. this scheme must be modified to handle the situation in which several elements have the same value. please see the following pseudocode for the detail:
 
write a program which sorts elements of given array ascending order based on the counting sort.
 

"
p02276,Partition,"
<!--

please note that problem description and judge data for this problem are still under construction. they may revised and your submissions can be rejudged.
 
quick sort is based on the divide-and-conquer approach. in quicksort(a, p, r), first, a procedure partition(a, p, r) divides an array a[p..r] into two subarrays a[p..q-1] and a[q+1..r] such that each element of a[p..q-1] is less than or equal to a[q], which is, inturn, less than or equal to each element of a[q+1..r]. it also computes the index q.
 
in the conquer processes, the two subarrays a[p..q-1] and a[q+1..r] are sorted by recursive calls of quicksort(a, p, q-1) and quicksort(a, q+1, r).
 
your task is to read a sequence a and perform the partition based on the following pseudocode:
 


partition(a, p, r)
1 x = a[r]
2 i = p-1
3 for j = p to r-1
4     do if a[j] <= x
5        then i = i+1
6            exchange a[i] and a[j] 
7 exchange a[i+1] and a[r]
8 return i+1


 
note that, in this algorithm, partition always selects an element a[r] as a pivot element around which to partition the array a[p..r].
 

"
p02277,Quick Sort,"
<!--

please note that problem description and judge data for this problem are still under construction. they may revised and your submissions can be rejudged.
 
let's arrange a deck of cards. your task is to sort totally n cards. a card consists of a part of a suit (s, h, c or d) and an number. write a program which sorts such cards based on the following pseudocode:
 
here, a is an array which represents a deck of cards and comparison operations are performed based on the numbers.
 
your program should also report the stability of the output for the given input (instance). here, 'stability of the output' means that: cards with the same value appear in the output in the same order as they do in the input (instance).
 

"
p02278,Minimum Cost Sort,"
  you are given $n$ integers $w_i (i = 0, 1, ..., n-1)$ to be sorted in ascending order. you can swap two integers $w_i$ and $w_j$. each swap operation has a cost, which is the sum of the two integers $w_i + w_j$. you can perform the operations any number of times.
 
  write a program which reports the minimal total cost to sort the given integers.
 

"
p02279,Rooted Trees,"
a graph g = (v, e) is a data structure where v is a finite set of vertices and e is a binary relation on v represented by a set of edges. fig. 1 illustrates an example of a graph (or graphs).
 
a free tree is a connnected, acyclic, undirected graph. a rooted tree is a free tree in which one of the vertices is distinguished from the others. a vertex of a rooted tree is called ""node.""
 
your task is to write a program which reports the following information for each node u of a given rooted tree t:
 node id of u parent of u depth of u node type (root, internal node or leaf) a list of chidlren of u 
if the last edge on the path from the root r of a tree t to a node x is (p, x), then p is the parent of x, and x is a child of p. the root is the only node in t with no parent.
 
if two nodes have the same parent, they are siblings.
 
a node with no children is an external node or leaf. a nonleaf node is an internal node
 
the number of children of a node x in a rooted tree t is called the degree of x.
 
the length of the path from the root r to a node x is the depth of x in t.
 
here, the given tree consists of n nodes and evey node has a unique id from 0 to n-1.
 
fig. 2 shows an example of rooted trees where id of each node is indicated by a number in a circle (node). the example corresponds to the first sample input.
 



fig. 2




"
p02280,Binary Trees,"
a rooted binary tree is a tree with a root node in which every node has at most two children.
 
your task is to write a program which reads a rooted binary tree t and prints the following information for each node u of t:
 node id of u parent of u sibling of u the number of children of u depth of u height of u node type (root, internal node or leaf) 
if two nodes have the same parent, they are siblings. here, if u and v have the same parent, we say u is a sibling of v (vice versa).
 
the height of a node in a tree is the number of edges on the longest simple downward path from the node to a leaf.
 
here, the given binary tree consists of n nodes and evey node has a unique id from 0 to n-1.
 

"
p02281,Tree Walk,"
binary trees are defined recursively. a binary tree t is a structure defined on a finite set of nodes that either
 contains no nodes, or is composed of three disjoint sets of nodes:

- a root node.
- a binary tree called its left subtree.
- a binary tree called its right subtree.

 
your task is to write a program which perform tree walks (systematically traverse all nodes in a tree) based on the following algorithms:
 print the root, the left subtree and right subtree (preorder). print the left subtree, the root and right subtree (inorder). print the left subtree, right subtree and the root (postorder). 
here, the given binary tree consists of n nodes and evey node has a unique id from 0 to n-1.
 


"
p02282,Reconstruction of a Tree,"
  write a program which reads two sequences of nodes obtained by the preorder tree walk and the inorder tree walk on a binary tree respectively, and prints a sequence of the nodes obtained by the postorder tree walk on the binary tree.
 

"
p02283,Binary Search Tree I,"
 search trees are data structures that support dynamic set operations including insert, search, delete and so on. thus a search tree can be used both as a dictionary and as a priority queue. 
 
  binary search tree is one of fundamental search trees. the keys in a binary search tree are always stored in such a way as to satisfy the following binary search tree property:
  let $x$ be a node in a binary search tree. if $y$ is a node in the left subtree of $x$, then $y.key \leq x.key$. if $y$ is a node in the right subtree of $x$, then $x.key \leq y.key$.
 
  the following figure shows an example of the binary search tree.
 
  for example, keys of nodes which belong to the left sub-tree of the node containing 80 are less than or equal to 80, and keys of nodes which belong to the right sub-tree are more than or equal to 80. the binary search tree property allows us to print out all the keys in the tree in sorted order by an inorder tree walk.
 
  a binary search tree should be implemented in such a way that the binary search tree property continues to hold after modifications by insertions and deletions. a binary search tree can be represented by a linked data structure in which each node is an object. in addition to a key field and satellite data, each node contains fields left, right, and p that point to the nodes corresponding to its left child, its right child, and its parent, respectively.
 
  to insert a new value $v$ into a binary search tree $t$, we can use the procedure insert as shown in the following pseudo code. the insert procedure is passed a node $z$ for which $z.key = v$, $z.left = nil$, and $z.right = nil$. the procedure modifies $t$ and some of the fields of $z$ in such a way that $z$ is inserted into an appropriate position in the tree.
 
  write a program which performs the following operations to a binary search tree $t$.
 insert  $k$: insert a node containing $k$ as key into $t$. print: print the keys of the binary search tree by inorder tree walk and  preorder tree walk respectively. 
  you should use the above pseudo code to implement the insert operation. $t$ is empty at the initial state.
 

"
p02284,Binary Search Tree II,"
write a program which performs the following operations to a binary search tree $t$ by adding the find operation to a: binary search tree i.
 insert  $k$: insert a node containing $k$ as key into $t$. find $k$: report whether $t$ has a node containing $k$.  print: print the keys of the binary search tree by inorder tree walk and  preorder tree walk respectively. 



"
p02285,Binary Search Tree III,"
write a program which performs the following operations to a binary search tree $t$ by adding delete operation to b: binary search tree ii.
 insert  $k$: insert a node containing $k$ as key into $t$. find $k$: report whether $t$ has a node containing $k$.  delete $k$: delete a node containing $k$. print: print the keys of the binary search tree by inorder tree walk and  preorder tree walk respectively. 
the operation delete $k$ for deleting a given node $z$ containing key $k$ from $t$ can be implemented by an algorithm which considers the following cases:
  if $z$ has no children, we modify its parent $z.p$ to replace $z$ with nil as its child (delete $z$).  if $z$ has only a single child, we ""splice out"" $z$ by making a new link between its child and its parent.  if $z$ has two children, we splice out $z$'s successor $y$ and replace $z$'s key with $y$'s key. 


"
p02286,Treap,"
  a binary search tree can be unbalanced depending on features of data. for example, if we insert $n$ elements into a binary search tree in ascending order, the tree become a list, leading to long search times. one of strategies is to randomly shuffle the elements to be inserted. however, we should consider to maintain the balanced binary tree where different operations can be performed one by one depending on requirement.
 
  we can maintain the balanced binary search tree by assigning a priority randomly selected to each node and by ordering nodes based on the following properties. here, we assume that all priorities are distinct and also that all keys are distinct.
 binary-search-tree property. if $v$ is a left child of $u$, then $v.key right child of $u$, then $u.key heap property. if $v$ is a child of $u$, then $v.priority < u.priority$ 
  this combination of properties is why the tree is called treap (tree + heap).
 
  an example of treap is shown in the following figure.
 
  insert
  to insert a new element into a treap, first of all, insert a node which a randomly selected priority value is assigned in the same way for ordinal binary search tree. for example, the following figure shows the treap after a node with key = 6 and priority = 90 is inserted.
 
it is clear that this treap violates the heap property, so we need to modify the structure of the tree by rotate operations. the rotate operation is to change parent-child relation while maintaing the binary-search-tree property.
 
  the rotate operations can be implemented as follows.
 
  the following figure shows processes of the rotate operations after the insert operation to maintain the properties.
 
  the insert operation with rotate operations can be implemented as follows.
 
  delete
  to delete a node from the treap, first of all, the target node should be moved until it becomes a leaf by rotate operations. then, you can remove the node (the leaf). these processes can be implemented as follows.
 
  write a program which performs the following operations to a treap $t$ based on the above described algorithm.
 insert ($k$, $p$): insert a node containing $k$ as key and $p$ as priority to $t$. find ($k$): report whether $t$ has a node containing $k$. delete ($k$): delete a node containing $k$. print(): print the keys of the binary search tree by inorder tree walk and preorder tree walk respectively. 


"
p02287,Complete Binary Tree,"
  a complete binary tree is a binary tree in which every internal node has two children and all leaves have the same depth. a binary tree in which if last level is not completely filled but all nodes (leaves) are pushed across to the left, is also (nearly) a complete binary tree.
 
  a binary heap data structure is an array that can be viewed as a nearly complete binary tree as shown in the following figure.
 
  each node of a nearly complete binary tree corresponds to an element of the array that stores the value in the node. an array $a$ that represents a binary heap has the heap size $h$, the number of elements in the heap, and each element of the binary heap is stored into $a[1...h]$ respectively. the root of the tree is $a[1]$, and given the index $i$ of a node, the indices of its parent $parent(i)$, left child $left(i)$, right child $right(i)$ can be computed simply by $\lfloor i / 2 \rfloor$, $2 \times i$ and $2 \times i + 1$ respectively.
 
  write a program which reads a binary heap represented by a nearly complete binary tree, and prints properties of nodes of the binary heap in the following format:
 
node $id$: key = $k$, parent key = $pk$, left key = $lk$, right key = $rk$, 
 
  $id$, $k$, $pk$, $lk$ and $rk$ represent id (index) of the node, value of the node, value of its parent, value of its left child and value of its right child respectively. print these properties in this order. if there are no appropriate nodes, print nothing.
 

"
p02288,Maximum Heap,"
  a binary heap which satisfies max-heap property is called max-heap. in a max-heap, for every node $i$ other than the root, $a[i] \leq a[parent(i)]$, that is, the value of a node is at most the value of its parent. the largest element in a max-heap is stored at the root, and the subtree rooted at a node contains values no larger than that contained at the node itself.
 
  here is an example of a max-heap.
 
  write a program which reads an array and constructs a max-heap from the array based on the following pseudo code.
 
 $maxheapify(a, i)$ move the value of $a[i]$ down to leaves to make a sub-tree of node $i$ a max-heap. here, $h$ is the size of the heap.
 
  the following procedure buildmaxheap(a) makes $a$ a max-heap by performing maxheapify in a bottom-up manner.
 


1 buildmaxheap(a)
2    for i = h/2 downto 1
3        maxheapify(a, i)



"
p02289,Priority Queue,"
  a priority queue is a data structure which maintains a set $s$ of elements, each of with an associated value (key), and supports the following operations:
 $insert(s, k)$: insert an element $k$ into the set $s$ $extractmax(s)$: remove and return the element of $s$ with the largest key 
  write a program which performs the $insert(s, k)$ and $extractmax(s)$ operations to a priority queue $s$.
  the priority queue manages a set of integers, which are also keys for the priority.
 

"
p02290,Projection,"
for given three points p1, p2, p, find the projection point x of p onto p1p2.
 





"
p02291,Reflection,"
for given three points p1, p2, p, find the reflection point x of p onto p1p2.
 






"
p02292,Clockwise,"
for given three points p0, p1, p2, print
 
if p0, p1, p2 make a counterclockwise turn (1),
 
if p0, p1, p2 make a clockwise turn (2),
 
if p2 is on a line p2, p0, p1 in this order (3),
 
if p2 is on a line p0, p1, p2 in this order (4),
 
if p2 is on a segment p0p1 (5).
 



"
p02293,Parallel/Orthogonal,"
for given two lines s1 and s2, print ""2"" if they are parallel, ""1"" if they are orthogonal, or ""0"" otherwise.
 
s1 crosses points p0 and p1, and
s2 crosses points p2 and p3.
 

"
p02294,Intersection,"
for given two segments s1 and s2, print ""1"" if they are intersect, ""0"" otherwise.
 
s1 is formed by end points p0 and p1, and
s2 is formed by end points p2 and p3.
 

"
p02295,Cross Point,"
for given two segments s1 and s2, print the coordinate of the cross point of them.
 
s1 is formed by end points p0 and p1, and
s2 is formed by end points p2 and p3.
 

"
p02296,Distance,"
for given two segments s1 and s2, print the distance between them.
 
s1 is formed by end points p0 and p1, and
s2 is formed by end points p2 and p3.
 

"
p02297,Area,"
for a given polygon g, computes the area of the polygon.
 
g is represented by a sequence of points p1, p2,..., pn where line segments connecting pi and pi+1 (1 &le; i &le; n-1) are sides of g. the line segment connecting pn and p1 is also a side of the polygon.
 
note that the polygon is not necessarily convex.
 


"
p02298,Convex,"
for a given polygon g, print ""1"" if g is a convex polygon, ""0"" otherwise. here, in a convex polygon, all interior angles are less than or equal to 180 degrees.
 
g is represented by a sequence of points p1, p2,..., pn where line segments connecting pi and pi+1 (1 &le; i &le; n-1) are sides of the polygon. the line segment connecting pn and p1 is also a side of the polygon.
 


"
p02299,Point Containment,"
for a given polygon g and target points t, print ""2"" if g contains t, ""1"" if t is on a segment of g, ""0"" otherwise.
 
g is represented by a sequence of points p1, p2,..., pn where line segments connecting pi and pi+1 (1 &le; i &le; n-1) are sides of the polygon. the line segment connecting pn and p1 is also a side of the polygon.
 
note that the polygon is not necessarily convex.
 


"
p02300,Convex Hull,"
find the convex hull of a given set of points p. in other words, find the smallest convex polygon containing all the points of p. here, in a convex polygon, all interior angles are less than or equal to 180 degrees.
 
please note that you should find all the points of p on both corner and boundary of the convex polygon.
 

"
p02301,Diameter of a Convex Polygon,"
find the diameter of a convex polygon g. in other words, find a pair of points that have maximum distance between them.
 

"
p02302,Convex Cut,"
  as shown in the figure above, cut a convex polygon g by a line p1p2 and print the area of the cut polygon which is on the left-hand side of the line.
 
g is represented by a sequence of points p1, p2,..., pn where line segments connecting pi and pi+1 (1 &le; i &le; n&minus;1) are sides of the convex polygon. the line segment connecting pn and p1 is also a side of the polygon.
 

"
p02303,Closest Pair,"
for given n points in metric space, find the distance of the closest points.
 

"
p02304,Segment Intersections: Manhattan Geometry,"
  for given $n$ segments which are parallel to x-axis or y-axis, find the number of intersections of them.
 

"
p02305,Intersection,"
for given two circles $c1$ and $c2$, print
 
if they do not cross (there are 4 common tangent lines),
 
if they are circumscribed (there are 3 common tangent lines),
 
if they intersect (there are 2 common tangent lines),
 
if a circle is inscribed in another (there are 1 common tangent line),
 
if a circle includes another (there is no common tangent line).
 

"
p02306,Incircle of a Triangle,"
write a program which prints the central coordinate ($cx$,$cy$) and the radius $r$ of a incircle of a triangle which is constructed by three points ($x_1$, $y_1$), ($x_2$, $y_2$) and ($x_3$, $y_3$) on the plane surface.
 

"
p02307,Circumscribed Circle of a Triangle,"
write a program which prints the central coordinate ($cx$,$cy$) and the radius $r$ of a circumscribed circle of a triangle which is constructed by three points ($x_1$, $y_1$), ($x_2$, $y_2$) and ($x_3$, $y_3$) on the plane surface.

 

"
p02308,Cross Points of a Circle and a Line,"
  for given a circle $c$ and a line $l$, print the coordinates of the cross points of them.
 

"
p02309,Cross Points of Circles,"
for given two circles $c1$ and $c2$, print the coordinates of the cross points of them.
 

"
p02310,Tangent to a Circle,"
  find the tangent lines between a point $p$ and a circle $c$.
 

"
p02311,Common Tangent,"
  find common tangent lines of two circles $c1$ and $c2$.
 

"
p02312,Intersection of a Circle and a Polygon,"
  find the area of intersection between a circle $c$ and a polygon $g$. the center coordinate of the circle is ($0, 0$).
 
  the polygon $g$ is represented by a sequence of points $p_1$, $p_2$,..., $p_n$ where line segments connecting $p_i$ and $p_{i+1}$ ($1 \leq i \leq n−1$) are sides of the polygon. the line segment connecting $p_n$ and $p_1$ is also a side of the polygon.
   
note that the polygon is not necessarily convex.
   

"
p02313,Area of Intersection between Two Circles,"
  write a program which prints the area of intersection between given circles $c1$ and $c2$.
 

"
p02314,Coin Changing Problem,"
find the minimum number of coins to make change for n cents using coins of denominations d1, d2,.., dm. the coins can be used any number of times.
 

"
p02315,1 Knapsack Problem,"
you have n items that you want to put them into a knapsack. item i has value vi and weight wi.
 
you want to find a subset of items to put such that:
 the total value of the items is as large as possible. the items have combined weight at most w, that is capacity of the knapsack. 
find the maximum total value of items in the knapsack.
 

"
p02316,Knapsack Problem,"
you have n kinds of items that you want to put them into a knapsack. item i has value vi and weight wi.
 
you want to find a subset of items to put such that:
 the total value of the items is as large as possible. the items have combined weight at most w, that is capacity of the knapsack. you can select as many items as possible into a knapsack for each kind. 
find the maximum total value of items in the knapsack.
 

"
p02317,Longest Increasing Subsequence,"
for a given sequence a = {a0, a1, ... , an-1}, find the length of the longest increasing subsequnece (lis) in a.
 
an increasing subsequence of a is defined by a subsequence {ai0, ai1, ... , aik} where 0 &le; i0 &lt; i1 &lt; ... &lt; ik &lt; n and ai0 &lt; ai1 &lt; ... &lt; aik.
 


"
p02318,Edit Distance (Levenshtein Distance),"
find the edit distance between given two words s1 and s2.
 
the disntace is the minimum number of single-character edits required to change one word into the other. the edits including the following operations:
 insertion: insert a character at a particular position. deletion: delete a character at a particular position.  substitution: change the character at a particular position to a different character  


"
p02319,1 Knapsack Problem II,"
you have n items that you want to put them into a knapsack. item i has value vi and weight wi.
 
you want to find a subset of items to put such that:
 the total value of the items is as large as possible. the items have combined weight at most w, that is capacity of the knapsack. 
find the maximum total value of items in the knapsack.
 

"
p02320,Knapsack Problem with Limitations,"
you have n items that you want to put them into a knapsack. item i has value vi, weight wi and limitation mi.
 
you want to find a subset of items to put such that:
 the total value of the items is as large as possible. the items have combined weight at most w, that is capacity of the knapsack. you can select at most mi items for ith item. 
find the maximum total value of items in the knapsack.
 

"
p02321,Huge Knapsack Problem,"
you have n items that you want to put them into a knapsack. item i has value vi and weight wi.
 
you want to find a subset of items to put such that:
 the total value of the items is as large as possible. the items have combined weight at most w, that is capacity of the knapsack. 
find the maximum total value of items in the knapsack.
 

"
p02322,Knapsack Problem with Limitations II,"you have $n$ items that you want to put them into a knapsack. item $i$ has value $v_i$, weight $w_i$ and limitation $m_i$. you want to find a subset of items to put such that: the total value of the items is as large as possible. the items have combined weight at most $w$, that is capacity of the knapsack. you can select at most $m_i$ items for $i$-th item. find the maximum total value of items in the knapsack. 

"
p02323,Traveling Salesman Problem,"
for a given weighted directed graph g(v, e), find the distance of the shortest route that meets the following criteria:
 it is a closed cycle where it ends at the same point it starts. it visits each vertex exactly once. 


"
p02324,Chinese Postman Problem,"
for a given weighted undirected graph g(v, e), find the distance of the shortest route that meets the following criteria:
 it is a closed cycle where it ends at the same point it starts. the route must go through every edge at least once. 


"
p02325,Bitonic Traveling Salesman Problem,"
  for given $n$ points in the 2d euclidean plane, find the distance of the shortest tour that meets the following criteria:
 it starts from the leftmost point (starting point), goes strictly from left to right, and then visits the rightmost point (turn-around point).  then it starts from the turn-around point, goes strictly from right to left, and then back to the starting point. 
    
   through the processes 1. 2., the tour must visit each point at least once. 


"
p02326,Largest Square,"
  given a matrix (h &times; w) which contains only 1 and 0, find the area of the largest square matrix which only contains 0s.
 

"
p02327,Largest Rectangle,"
  given a matrix (h &times; w) which contains only 1 and 0, find the area of the largest rectangle which only contains 0s.
 

"
p02328,Largest Rectangle in a Histogram,"
  a histogram is made of a number of contiguous bars, which have same width.
 
  for a given histogram with $n$ bars which have a width of 1 and a height of $h_i$ = $h_1, h_2, ... , h_n$ respectively, find the area of the largest rectangular area.
 

"
p02329,Coin Combination Problem,"
you have 4 bags a, b, c and d each of which includes n coins (there are totally 4n coins). values of the coins in each bag are ai, bi, ci and di respectively.
 
  find the number of combinations that result when you choose one coin from each bag (totally 4 coins) in such a way that the total value of the coins is v. you should distinguish the coins in a bag. 
 

"
p02330,Coin Combination Problem II,"
  you have n coins each of which has a value ai.
find the number of combinations that result when you choose k different coins in such a way that the total value of the coins is greater than or equal to l and less than or equal to r.
 

"
p02331,Balls and Boxes 1,"-->
"
p02332,Balls and Boxes 2,"-->
"
p02333,Balls and Boxes 3,"-->
"
p02334,Balls and Boxes 4,"-->
"
p02335,Balls and Boxes 5,"-->
"
p02336,Balls and Boxes 6,"-->
"
p02337,Balls and Boxes 7,"-->
"
p02338,Balls and Boxes 8,"-->
"
p02339,Balls and Boxes 9,"-->
"
p02340,Balls and Boxes 10,"-->
"
p02341,Balls and Boxes 11,"-->
"
p02342,Balls and Boxes 12,"-->
"
p02343,Disjoint Set: Union Find Tree,"
write a program which manipulates a disjoint set s = {s1, s2, . . . , sk}.
 
first of all, the program should read an integer n, then make a disjoint set where each element consists of 0, 1, ... n&minus;1 respectively.
 
next, the program should read an integer q and manipulate the set for q queries. there are two kinds of queries for different operations:
 same(x, y): determine whether x and y are in the same set. 


"
p02344,Weighted Union Find Trees,"
  there is a sequence $a = a_0, a_1, ..., a_{n-1}$. you are given the following information and questions.
 relate$(x, y, z)$: $a_y$ is greater than $a_x$ by $z$ diff$(x, y)$: report the difference between $a_x$ and $a_y$ $(a_y - a_x)$ 


"
p02345,Range Minimum Query (RMQ),"
write a program which manipulates a sequence a = {a0, a1, . . .  , an-1} with the following operations:
 find(s, t): report the minimum element in as, as+1, . . . ,at. update(i, x): change ai to x. 
note that the initial values of ai (i = 0, 1, . . .  , n&minus;1) are  231-1.
 

"
p02346,Range Sum Query (RSQ),"
write a program which manipulates a sequence a = {a1, a2, . . . , an} with the following operations:
 add(i, x): add x to ai. getsum(s, t): print the sum of as, as+1,...,at. 
note that the initial values of ai (i = 1, 2, . . . , n) are 0.
 

"
p02347,Range Search (kD Tree),"
the range search problem consists of a set of attributed records s to determine which records from  s intersect with a given range.
 
for n points on a plane, report a set of points which are within in a given range. note that you do not need to consider insert and delete operations for the set.
 


"
p02348,Range Update Query (RUQ),"
write a program which manipulates a sequence a = {a0, a1, . . .  , an&minus;1} with the following operations:
 update(s, t, x): change as, as+1, ..., at to x. find(i): output the value of ai. 
note that the initial values of ai (i = 0, 1, . . .  , n&minus;1) are  231-1.
 

"
p02349,Range Add Query (RAQ),"
write a program which manipulates a sequence a = {a1, a2, . . .  , an} with the following operations:
 add(s, t, x): add x to as, as+1, ..., at. get(i): output the value of ai. 
note that the initial values of ai (i = 1, 2, . . .  , n) are 0.
 

"
p02350,RMQ and RUQ,"
write a program which manipulates a sequence a = {a0, a1, . . .  , an&minus;1} with the following operations:
 update(s, t, x): change as, as+1, ..., at to x. find(s, t): report the minimum element in as, as+1, ..., at. 
note that the initial values of ai (i = 0, 1, . . .  , n&minus;1) are 231-1.
 

"
p02351,RSQ and RAQ,"
write a program which manipulates a sequence a = {a1, a2, . . .  , an} with the following operations:
 add(s, t, x): add x to as, as+1, ..., at. getsum(s, t): report the sum of as, as+1, ..., at. 
note that the initial values of ai (i = 1, 2, . . .  , n) are 0.
 

"
p02352,RMQ and RAQ,"
  write a program which manipulates a sequence $a$ = {$a_0, a_1, ..., a_{n-1}$} with the following operations:
  $add(s, t, x)$ : add $x$ to $a_s, a_{s+1}, ..., a_t$.  $find(s, t)$ : report the minimum value in $a_s, a_{s+1}, ..., a_t$. 
  note that the initial values of $a_i ( i = 0, 1, ..., n-1 )$ are 0.
 

"
p02353,RSQ and RUQ,"
  write a program which manipulates a sequence $a$ = {$a_0, a_1, ..., a_{n-1}$} with the following operations:
  $update(s, t, x)$: change $a_s, a_{s+1}, ..., a_t$ to $x$.  $getsum(s, t)$: print the sum of $a_s, a_{s+1}, ..., a_t$. 
  
 
  note that the initial values of $a_i ( i = 0, 1, ..., n-1 )$ are 0.
 

"
p02354,The Smallest Window I,"
  for a given array $a_1, a_2, a_3, ... , a_n$ of $n$ elements and an integer $s$, find the smallest sub-array size (smallest window length) where the sum of the sub-array is greater than or equal to $s$. if there is not such sub-array, report 0.
 

"
p02355,The Smallest Window II,"
  for a given array $a_1, a_2, a_3, ... , a_n$ of $n$ elements and an integer $k$, find the smallest sub-array size (smallest window length) where the elements in the sub-array contains all integers in range [$1, 2, ..., k$]. if there is no such sub-array, report 0.
 

"
p02356,The Number of Windows,"
  for a given array $a_1, a_2, a_3, ... , a_n$ of $n$ elements and $q$ integers $x_i$ as queries, for each query, print the number of combinations of two integers $(l, r)$ which satisfies the condition: $1 \leq l \leq r \leq n$ and $a_l + a_{l+1} + ... + a_{r-1} + a_r \leq x_i$.
 

"
p02357,Sliding Minimum Elements,"
  for a given array $a_1, a_2, a_3, ... , a_n$ of $n$ elements and an integer $l$, find the minimum of each possible sub-arrays with size $l$ and print them from the beginning. for example, for an array $\{1, 7, 7, 4, 8, 1, 6\}$ and $l = 3$, the possible sub-arrays with size $l = 3$ includes $\{1, 7, 7\}$, $\{7, 7, 4\}$, $\{7, 4, 8\}$, $\{4, 8, 1\}$, $\{8, 1, 6\}$ and the minimum of each sub-array is 1, 4, 4, 1, 1 respectively.
 

"
p02358,Union of Rectangles,"
  given a set of $n$ axis-aligned rectangles in the plane, find the area of regions which are covered by at least one rectangle.
 

"
p02359,The Maximum Number of Customers,"
  $n$ persons visited a restaurant. the restaurant is open from 0 to $t$. the $i$-th person entered the restaurant at $l_i$ and left at $r_i$. find the maximum number of persons during the business hours.
 

"
p02360,The Maximum Number of Overlaps,"
  given a set of $n$ axis-aligned rectangular seals, find the number of overlapped seals on the region which has the maximum number of overlapped seals.
 

"
p02361,Single Source Shortest Path,"
  for a given weighted graph g(v, e) and a source r, find the source shortest path to each vertex from the source (sssp: single source shortest path).
 


"
p02362,Single Source Shortest Path (Negative Edges),"
an edge-weighted graph g (v, e) and the source r.
 
|v| is the number of vertices and |e| is the number of edges in g. the graph vertices are named with the numbers 0, 1,..., |v|-1 respectively. r is the source of the graph.
 
si and ti  represent source and target vertices of i-th edge (directed) and di represents the cost of the i-th edge.
 


"
p02363,All Pairs Shortest Path,"
an edge-weighted graph g (v, e).
 
|v| is the number of vertices and |e| is the number of edges in g. the graph vertices are named with the numbers 0, 1,..., |v|-1 respectively.
 
si and ti  represent source and target vertices of i-th edge (directed) and di represents the cost of the i-th edge.
 

"
p02364,Minimum Spanning Tree,"
find the sum of weights of edges of the minimum spanning tree for a given weighted undirected graph g = (v, e).
 

"
p02365,Cost Arborescence,"
find the sum of the weights of edges of the minimum-cost arborescence with the root r for a given weighted directed graph g = (v, e).
 

"
p02366,Articulation Points,"
find articulation points of a given undirected graph g(v, e).
 
a vertex in an undirected graph is an articulation point (or cut vertex) iff removing it disconnects the graph.
 

"
p02367,Bridges,"
find bridges of an undirected graph g(v, e).
 
a bridge (also known as a cut-edge) is an edge whose deletion increase the number of connected components.
 

"
p02368,Strongly Connected Components,"
a direced graph is strongly connected if every two nodes are reachable from each other. in a strongly connected component of a directed graph, every two nodes of the component are mutually reachable.
 

"
p02369,Cycle Detection for a Directed Graph,"
find a cycle in a directed graph g(v, e).
 

"
p02370,Topological Sort,"
a directed acyclic graph (dag) can be used to represent the ordering of tasks. tasks are represented by vertices and constraints where one task can begin before another, are represented by edges. for example, in the above example, you can undertake task b after both task a and task b are finished. you can obtain the proper sequence of all the tasks by a topological sort.
 
given a dag $g$, print the order of vertices after the topological sort.
 

"
p02371,Diameter of a Tree,"
given a tree t with non-negative weight, find the diameter of the tree.
 
the diameter of a tree is the maximum distance between two nodes in a tree.
 

"
p02372,Height of a Tree,"
given a tree t with non-negative weight, find the height of each node of the tree. for each node, the height is the distance to the most distant leaf from the node.
 



"
p02373,Lowest Common Ancestor,"
for a rooted tree, find the lowest common ancestor of two nodes u and v.
 
the given tree consists of n nodes and every node has a unique id from 0 to n-1 where 0 is the root. 
 


"
p02374,Range Query on a Tree,"
write a program which manipulates a weighted rooted tree $t$ with the following operations:
 

  the given tree $t$ consists of $n$ nodes and every node has a unique id from $0$ to $n-1$ respectively where id of the root is $0$.
  note that all weights are initialized to zero.
 

"
p02375,Range Query on a Tree II,"
write a program which manipulates a weighted rooted tree $t$ with the following operations:
 

  the given tree $t$ consists of $n$ nodes and every node has a unique id from $0$ to $n-1$ respectively where id of the root is $0$.
  note that all weights are initialized to zero.
 

"
p02376,Maximum Flow,"
a flow network is a directed graph which has a $source$ and a $sink$. in a flow network, each edge $(u, v)$ has a capacity $c(u, v)$. each edge receives a flow, but the amount of flow on the edge can not exceed the corresponding capacity. find the maximum flow from the $source$ to the $sink$.
 


"
p02377,Minimum Cost Flow,"
  find the minimum cost to send a certain amount of flow through a flow network.
 
  the flow network is a directed graph where each edge $e$ has capacity $c(e)$ and cost $d(e)$. each edge $e$ can send an amount of flow $f(e)$ where $f(e) \leq c(e)$. find the minimum value of $\sum_{e} (f(e) \times d(e))$ to send an amount of flow $f$ from source $s$ to sink $t$.
 


"
p02378,Bipartite Matching,"
a bipartite graph g = (v, e) is a graph in which the vertex set v can be divided into two disjoint subsets x and y such that every edge e &isin; e has one end point in x and the other end point in y.
 
a matching m is a subset of edges such that each node in v appears in at most one edge in m.
 
given a bipartite graph, find the size of the matching which has the largest size.
 


"
p02379,Distance,"
  write a program which calculates the distance between two points p1(x1, y1) and p2(x2, y2).
 


"
p02380,Triangle,"
  for given two sides of a triangle a and b and the angle c between them, calculate the following properties:
 s: area of the triangle l: the length of the circumference of the triangle h: the height of the triangle with side a as a bottom edge 
  

"
p02381,Standard Deviation,"
  you have final scores of an examination for n students. calculate standard deviation of the scores s1, s2 ... sn.
 
the variance &alpha;2 is defined by  
 
&alpha;2  = (&sum;ni=1(si - m)2)/n
 
  where m is an average of si.

  the standard deviation of the scores is the square root of their variance.
   

"
p02382,Distance II,"
  your task is to calculate the distance between two $n$ dimensional vectors $x = \{x_1, x_2, ..., x_n\}$ and $y = \{y_1, y_2, ..., y_n\}$.
 
  the minkowski's distance defined below is a metric which is a generalization of both the manhattan distance and the euclidean distance.

\[
d_{xy} = (\sum_{i=1}^n |x_i - y_i|^p)^{\frac{1}{p}}
\]


it can be the manhattan distance 


\[
d_{xy} = |x_1 - y_1| + |x_2 - y_2| + ... + |x_n - y_n|
\]


where $p = 1 $.



it can be the euclidean distance

\[
d_{xy} = \sqrt{(|x_1 - y_1|)^{2} + (|x_2 - y_2|)^{2} + ... + (|x_n - y_n|)^{2}}
\]

where $p = 2 $.



also, it can be the chebyshev distance


\[
d_{xy} = max_{i=1}^n (|x_i - y_i|)
\]


where $p = \infty$
 
write a program which reads two $n$ dimensional vectors $x$ and $y$, and calculates minkowski's distance where $p = 1, 2, 3, \infty$ respectively.
 

"
p02383,Dice I,"
  write a program to simulate rolling a dice, which can be constructed by the following net.
 
  as shown in the figures, each face is identified by a different label from 1 to 6.
 
  write a program which reads integers assigned to each face identified by the label and a sequence of commands to roll the dice, and prints the integer on the top face. at the initial state, the dice is located as shown in the above figures.
 

"
p02384,Dice II,"
construct a dice from a given sequence of integers in the same way as dice i.
 
  you are given integers on the top face and the front face after the dice was rolled in the same way as dice i. write a program to print an integer on the right side face.
 







"
p02385,Dice III,"
  write a program which reads the two dices constructed in the same way as dice i, and determines whether these two dices are identical. you can roll a dice in the same way as dice i, and if all integers observed from the six directions are the same as that of another dice, these dices can be considered as identical.
 

"
p02386,Dice IV,"
 write a program which reads $n$ dices constructed in the same way as dice i, and determines whether they are all different. for the determination, use the same way as dice iii.
 


"
p02387,Hello World,"
welcome to online judge!
 
write a program which prints ""hello world"" to standard output.
 

"
p02388,X Cubic,"
write a program which calculates the cube of a given integer x.
 


"
p02389,Rectangle,"
write a program which calculates the area and perimeter of a given rectangle.
 


"
p02390,Watch,"
write a program which reads an integer $s$ [second] and converts it to $h:m:s$ where $h$, $m$, $s$ denote hours, minutes (less than 60) and seconds (less than 60) respectively.
 


"
p02391,Small,"
write a program which prints small/large/equal relation of given two integers a and b.
 


"
p02392,Range,"
  write a program which reads three integers a, b and c, and prints ""yes"" if a &lt; b &lt; c, otherwise ""no"".
 


"
p02393,Sorting Three Numbers,"
  write a program which reads three integers, and prints them in ascending order.
 


"
p02394,Circle in a Rectangle,"
  write a program which reads a rectangle and a circle, and determines whether the circle is arranged inside the rectangle. as shown in the following figures, the upper right coordinate $(w, h)$ of the rectangle and the central coordinate $(x, y)$ and radius $r$ of the circle are given.
 










"
p02395,Print Many Hello World,"
write a program which prints 1000 ""hello world"".
 


"
p02396,Print Test Cases,"
in the online judge system, a judge file may include multiple datasets to check whether the submitted program outputs a correct answer for each test case. this task is to practice solving a problem with multiple datasets.
 
write a program which reads an integer x and print it as is. note that multiple datasets are given for this problem.
 


"
p02397,Swapping Two Numbers,"
  write a program which reads two integers x and y, and prints them in ascending order. 
 


"
p02398,How Many Divisors?,"
  write a program which reads three integers a, b and c, and prints the number of divisors of c between a and b.
 


"
p02399,A / B Problem,"
write a program which reads two integers a and b, and calculates the following values:
 a &divide; b:  d (in integer) remainder of a &divide; b:  r (in integer) a &divide; b:  f (in real number) 




"
p02400,Circle,"
write a program which calculates the area and circumference of a circle for given radius r.
 

"
p02401,Simple Calculator,"
write a program which reads two integers a, b and an operator op, and then prints the value of a op b.
 
the operator op is '+', '-', '*' or '/' (sum, difference, product or quotient). the division should truncate any fractional part.
 


"
p02402,Min,"
write a program which reads a sequence of $n$ integers $a_i (i = 1, 2, ... n)$, and prints the minimum value, maximum value and sum of the sequence.
 

"
p02403,Print a Rectangle,"
  draw a rectangle which has a height of h cm and a width of w cm. draw a 1-cm square by single '#'.
 

"
p02404,Print a Frame,"
  draw a frame which has a height of h cm and a width of w cm. for example, the following figure shows a frame which has a height of 6 cm and a width of 10 cm.
 


##########
#........#
#........#
#........#
#........#
##########


"
p02405,Print a Chessboard,"
  draw a chessboard which has a height of h cm and a width of w cm. for example, the following figure shows a chessboard which has a height of 6 cm and a width of 10 cm.
 
note that the top left corner should be drawn by '#'.
 


"
p02406,Structured Programming,"
in programming languages like c/c++, a goto statement provides an unconditional jump from the ""goto"" to a labeled statement. for example, a statement ""goto check_num;"" is executed, control of the program jumps to check_num. using these constructs, you can implement, for example, loops.
 
note that use of goto statement is highly discouraged, because it is difficult to trace the control flow of a program which includes goto.
 
write a program which does precisely the same thing as the following program (this example is wrtten in c++). let's try to write the program without goto statements.
 


void call(int n){
  int i = 1;
 check_num:
  int x = i;
  if ( x % 3 == 0 ){
    cout << "" "" << i;
    goto end_check_num;
  }
 include3:
  if ( x % 10 == 3 ){
    cout << "" "" << i;
    goto end_check_num;
  }
  x /= 10;
  if ( x ) goto include3;
 end_check_num:
  if ( ++i <= n ) goto check_num;

  cout << endl;
}



"
p02407,Reversing Numbers,"
  write a program which reads a sequence and prints it in the reverse order.
 


"
p02408,Finding Missing Cards,"
  taro is going to play a card game. however, now he has only n cards, even though there should be 52 cards (he has no jokers).
 
the 52 cards include 13 ranks of each of the four suits: spade, heart, club and diamond.
 


"
p02409,Official House,"
you manage 4 buildings, each of which has 3 floors, each of which consists of 10 rooms. write a program which reads a sequence of tenant/leaver notices, and reports the number of tenants for each room.
 
  for each notice, you are given four integers b, f, r and v which represent that v persons entered to room r of fth floor at building b. if v is negative, it means that &minus;v persons left.
 
assume that initially no person lives in the building. 
 


"
p02410,Matrix Vector Multiplication,"
write a program which reads a $ n \times m$ matrix $a$  and a $m \times 1$ vector $b$, and prints their product $ab$.
 
  a column vector with m elements is represented by the following equation.
 
  a $n \times m$ matrix with $m$ column vectors, each of which consists of $n$ elements, is represented by the following equation.
 
  $i$-th element of a $m \times 1$ column vector $b$ is represented by $b_i$ ($i = 1, 2, ..., m$), and the element in $i$-th row and $j$-th column of a matrix $a$ is represented by $a_{ij}$ ($i = 1, 2, ..., n,$  $j = 1, 2, ..., m$).
 
the product of a $n \times m$ matrix $a$ and a $m \times 1$ column vector $b$ is a $n \times 1$ column vector $c$, and $c_i$ is obtained by the following formula:
 

\[
c_i = \sum_{j=1}^m a_{ij}b_j  = a_{i1}b_1 + a_{i2}b_2 + ... + a_{im}b_m
\]


"
p02411,Grading,"
  write a program which reads a list of student test scores and evaluates the performance for each student.
 
  the test scores for a student include scores of the midterm examination m (out of 50), the final examination f (out of 50) and the makeup examination r (out of 100). if the student does not take the examination, the score is indicated by -1.
 
  the final performance of a student is evaluated by the following procedure:
 if the student does not take the midterm or final examination, the student's grade shall be f. if the total score of the midterm and final examination is greater than or equal to 80, the student's grade shall be a. if the total score of the midterm and final examination is greater than or equal to 65 and less than 80, the student's grade shall be b. if the total score of the midterm and final examination is greater than or equal to 50 and less than 65, the student's grade shall be c. if the total score of the midterm and final examination is greater than or equal to 30 and less than 50, the student's grade shall be d. however, if the score of the makeup examination is greater than or equal to 50, the grade shall be c. if the total score of the midterm and final examination is less than 30, the student's grade shall be f. 



"
p02412,How many ways?,"
  write a program which identifies the number of combinations of three integers which satisfy the following conditions:
 you should select three distinct integers from 1 to n. a total sum of the three integers is x. 
  for example, there are two combinations for n = 5 and x = 9.
 1 + 3 + 5 = 9 2 + 3 + 4 = 9 



"
p02413,Spreadsheet,"
  your task is to perform a simple table calculation.
 
  write a program which reads the number of rows r, columns c and a table of r &times; c elements, and prints a new table, which includes the total sum for each row and column. 
 

"
p02414,Matrix Multiplication,"
write a program which reads a $n \times m$ matrix $a$ and a $m \times l$ matrix $b$, and prints their product, a $n \times l$ matrix $c$. an element of matrix $c$ is obtained by the following formula:
 
  where $a_{ij}$, $b_{ij}$ and $c_{ij}$ are elements of $a$, $b$ and $c$ respectively.
 

"
p02415,Toggling Cases,"
  write a program which converts uppercase/lowercase letters to lowercase/uppercase for a given string.
 


"
p02416,Sum of Numbers,"
  write a program which reads an integer and prints sum of its digits.
 


"
p02417,Counting Characters,"
  write a program which counts and reports the number of each alphabetical letter. ignore the case of characters.
 


"
p02418,Ring,"
  write a program which finds a pattern $p$ in a ring shaped text $s$.
 








"
p02419,Finding a Word,"
write a program which reads a word w and a text t, and prints the number of word w which appears in text t
 
  t consists of string ti separated by space characters and newlines. count the number of ti which equals to w. the word and text are case insensitive.
 

"
p02420,Shuffle,"
  your task is to shuffle a deck of n cards, each of which is marked by a alphabetical letter.
 
  a single shuffle action takes out h cards from the bottom of the deck and moves them to the top of the deck.
 
  the deck of cards is represented by a string as follows.
 
  the first character and the last character correspond to the card located at the bottom of the deck and the card on the top of the deck respectively.
 
  for example, a shuffle with h = 4 to the above deck, moves the first 4 characters ""abcd"" to the end of the remaining characters ""eefab"", and generates the following deck:
 
  you can repeat such shuffle operations.
 
  write a program which reads a deck (a string) and a sequence of h, and prints the final state (a string). 
 


"
p02421,Card Game,"
  taro and hanako are playing card games. they have n cards each, and they compete n turns. at each turn taro and hanako respectively puts out a card.
  the name of the animal consisting of alphabetical letters is written on each card, and the bigger one in lexicographical order becomes the winner of that turn. the winner obtains 3 points. in the case of a draw, they obtain 1 point each.
 
  write a program which reads a sequence of cards taro and hanako have and reports the final scores of the game.
 

"
p02422,Transformation,"
  write a program which performs a sequence of commands to a given string $str$. the command is one of:
 print a b: print from the a-th character to the b-th character of $str$ reverse a b: reverse from the a-th character to the b-th character of $str$ replace a b p: replace from the a-th character to the b-th character of $str$ with p 
  note that the indices of $str$ start with 0.
 

"
p02423,Bit Operation I,"
  given a non-negative decimal integer $x$, convert it to binary representation $b$ of 32 bits. then, print the result of the following operations to $b$ respecitvely.
 inversion: change the state of each bit to the opposite state logical left shift: shift left by 1 logical right shift: shift right by 1 



"
p02424,Bit Operation II,"
  given two non-negative decimal integers $a$ and $b$, calculate their and (logical conjunction), or (logical disjunction) and xor (exclusive disjunction) and print them in binary representation of 32 bits.
 


"
p02425,Bit Flag,"
  a state with $n$ flags of on or off can be represented by a sequence of bits where $0, 1, ..., n-1$ -th flag corresponds to 1 (on) or 0 (off).
  the state can be managed by the corresponding decimal integer, because the sequence of bits is a binary representation where each bit is 0 or 1.
 
  given a sequence of bits with 64 flags which represent a state, perform the following operations. note that each flag of the bits is initialized by off.
 test(i): 		print 1 if $i$-th flag is on, otherwise 0 set(i): 		set $i$-th flag to on clear(i):		set $i$-th flag to off flip(i): 		inverse $i$-th flag all:		print 1 if all flags are on, otherwise 0 any:		print 1 if at least one flag is on, otherwise 0 none:		print 1 if all flags are off, otherwise 0 count:		print the number of on flags val:		print the decimal value of the state 	



"
p02426,Bit Mask,"
   a state with $n$ flags of on or off can be represented by a sequence of bits where $0, 1, ..., n-1$ th flag corresponds to 1 (on) or 0 (off).
  the state can be managed by the corresponding decimal integer, because the sequence of bits is a binary representation where each bit is 0 or 1.
 
  on the other hand, a mask is a special bit sequence which can be used to set specified bits of a given bit sequence to on/off. it can also be used to extract/exclude a  bit sequence based on a specified pattern.
 
  given a sequence of bits with 64 flags which represent a state, perform the following operations using a set of pre-defined masks. note that each flag of the bits is initialized by off.
 test(i): 	print 1 if $i$-th flag is on, otherwise 0 set(m): 	set flags specified by mask $m$ to on clear(m):	set flags specified by mask $m$ to off flip(m):	inverse flags specified by mask $m$ all(m):	print 1 if all flags specified by mask $m$ are on, otherwise 0 any(m):	print 1 if at least one flag specified by mask $m$ is on, otherwise 0 none(m):	print 1 if all flags specified by mask $m$ are off, otherwise 0 count(m):	print the number of flags specifed by mask $m$ with on val(m):	print the decimal value of the state specified by mask $m$ 



"
p02427,Enumeration of Subsets I,"
print all subsets of a set $s$, which contains $0, 1, ... n-1$ as elements. note that we represent $0, 1, ... n-1$ as 00...0001, 00...0010, 00...0100, ..., 10...0000 in binary respectively and the integer representation of a subset is calculated by bitwise or of existing elements. 
 

"
p02428,Enumeration of Subsets II,"
  you are given a set $t$, which is a subset of $u$. the set $u$ consists of $0, 1, ... n-1$.

  print all sets, each of which is a subset of $u$ and includes $t$ as a subset.

  note that we represent $0, 1, ... n-1$ as 00...0001, 00...0010, 00...0100, ..., 10...0000 in binary respectively and the integer representation of a subset is calculated by bitwise or of existing elements. 
 


"
p02429,Enumeration of Subsets III,"

   you are given a set $t$, which is a subset of $s$. the set $s$ consists of $0, 1, ... n-1$.

  print all subsets of $t$.

  note that we represent $0, 1, ... n-1$ as 00...0001, 00...0010, 00...0100, ..., 10...0000 in binary respectively and the integer representation of a subset is calculated by bitwise or of existing elements. 
 

"
p02430,Enumeration of Combinations,"
print all combinations which can be made by $k$ different elements from $0, 1, ..., n-1$.

  note that we represent $0, 1, ... n-1$ as 00...0001, 00...0010, 00...0100, ..., 10...0000 in binary respectively and the integer representation of a combination is calculated by bitwise or of the selected elements.
 


"
p02431,Vector,"
  for a dynamic array $a = \{a_0, a_1, ...\}$ of integers, perform a sequence of the following operations:
 pushback($x$): add element $x$ at the end of $a$ randomaccess($p$):print element $a_p$ popback(): delete the last element of $a$ 
  
$a$ is a 0-origin array and it is empty in the initial state.
 


"
p02432,Deque,"
  for a dynamic array $a = \{a_0, a_1, ...\}$ of integers, perform a sequence of the following operations:
 push($d$, $x$): add element $x$ at the begining of $a$, if $d = 0$. add element $x$ at the end of $a$, if $d = 1$. randomaccess($p$): print element $a_p$. pop($d$): delete the first element of $a$, if $d = 0$. delete the last element of $a$, if $d = 1$. 
  $a$ is a 0-origin array and it is empty in the initial state.
 


"
p02433,List,"
  for a dynamic list $l$ of integers, perform a sequence of the following operations. $l$ has a special element called end at the end of the list and an element of $l$ is indicated by a cursor.
 insert($x$): insert $x$ before the element indicated by the cursor. after this operation, the cursor points the inserted element. move($d$): move the cursor to the end by $d$, if $d$ is positive. move the cursor to the front by $d$, if $d$ is negative. erase(): delete the element indicated by the cursor. after this operation, the cursor points the element next to the deleted element. in case there is no such element, the cursor should point end.
   
  in the initial state, $l$ is empty and the cursor points end.
 


"
p02434,Vector II,"
  for $n$ dynamic arrays $a_i$ ($i = 0, 1, ..., n-1$), perform a sequence of the following operations:
 pushback($t$, $x$): add element $x$ at the end of $a_t$. dump($t$): print all elements in $a_t$. clear($t$): clear $a_t$. if $a_t$ is empty, do nothing. 
  $a_i$ is a 0-origin array and it is empty in the initial state.
 


"
p02435,Stack,"
  stack is a container of elements that are inserted and deleted according to lifo (last in first out).
 
  for $n$ stack $s_i$ ($i = 0, 1, ..., n-1$), perform a sequence of the following operations.
 push($t$, $x$): insert an integer $x$ to $s_t$. top($t$): report the value which should be deleted next from $s_t$. if $s_t$ is empty, do nothing. pop($t$): delete an element from $s_t$. if $s_t$ is empty, do nothing. 
in the initial state, all stacks are empty.
 


"
p02436,Queue,"
queue is a container of elements that are inserted and deleted according to fifo (first in first out).
 
  for $n$ queues $q_i$ ($i = 0, 1, ..., n-1$), perform a sequence of the following operations.
 enqueue($t$, $x$): insert an integer $x$ to $q_t$. front($t$): report the value which should be deleted next from $q_t$. if $q_t$ is empty, do nothing. dequeue($t$): delete an element from $q_t$. if $q_t$ is empty, do nothing. 
in the initial state, all queues are empty.
 

"
p02437,Priority Queue,"
  priority queue is a container of elements which the element with the highest priority should be extracted first.
 
  for $n$ priority queues $q_i$ ($i = 0, 1, ..., n-1$) of integers, perform a sequence of the following operations.
 insert($t$, $x$): insert $x$ to $q_t$. getmax($t$): report the maximum value in $q_t$. if $q_t$ is empty, do nothing. deletemax($t$): delete the maximum element from $q_t$. if $q_t$ is empty, do nothing. 
in the initial state, all queues are empty.
 


"
p02438,Splice,"
for $n$ lists $l_i$ $(i = 0, 1, ..., n-1)$, perform a sequence of the following operations.
 insert($t$, $x$): insert an integer $x$ at the end of $l_t$. dump($t$): print all elements in $l_t$. splice($s$, $t$):　transfer elements of $l_s$ to the end of $l_t$. $l_s$ becomes empty. 
  in the initial state, $l_i$ $(i = 0, 1, ..., n-1)$ are empty.
 


"
p02439,Max,"
for given three integers $a, b, c$,  print the minimum value and the maximum value.
 

"
p02440,Max Element,"
  write a program which manipulates a sequence $a = \{a_0, a_1, ..., a_{n-1}\}$ by the following operations:
 min($b, e$): report the minimum element in $a_b, a_{b+1}, ..., a_{e-1}$ max($b, e$): report the maximum element in $a_b, a_{b+1}, ..., a_{e-1}$ 



"
p02441,Count,"
  for a given sequence of integers $a = \{a_0, a_1, ..., a_{n-1}\}$, perform the following operations.
 count($b, e, k$): print the number of the specific values $k$ in $a_b, a_{b+1}, ..., a_{e-1}$.
  


"
p02442,Lexicographical Comparison,"
  compare given two sequence $a = \{a_0, a_1, ..., a_{n-1}\}$ and $b = \{b_0, b_1, ..., b_{m-1}$ lexicographically.
 

"
p02443,Reverse,"
  write a program which reads a sequence of integers $a = \{a_0, a_1, ..., a_{n-1}\}$ and reverse specified elements by a list of the following operation:
 reverse($b, e$): reverse the order of $a_b, a_{b+1}, ..., a_{e-1}$ 



"
p02444,Rotate,"
  write a program which reads a sequence of integers $a = \{a_0, a_1, ..., a_{n-1}\}$ and rotate specified elements by a list of the following operation: 
 rotate($b, m, e$): for each integer $k$ ($0 \leq k < (e - b)$), move element $b + k$ to the place of element $b + ((k + (e - m)) \mod (e - b))$. 



"
p02445,Swap,"
write a program which reads a sequence of integers $a = \{a_0, a_1, ..., a_{n-1}\}$ and swap specified elements by a list of the following operation:
 swaprange($b, e, t$): for each integer $k$ ($0 \leq k < (e - b)$, swap element $(b + k)$ and element $(t + k)$. 



"
p02446,Unique,"
  for a sequence of integers $a = \{a_0, a_1, ..., a_{n-1}\}$ which is sorted by ascending order, eliminate all equivalent elements.
 


"
p02447,Sorting Pairs,"
  write a program which print coordinates $(x_i, y_i)$ of given $n$ points on the plane by the following criteria.
 first by $x$-coordinate in case of a tie, by $y$-coordinate 


"
p02448,Sorting Tuples,"
  write a program which reads $n$ items and sorts them. each item has attributes $\{value, weight, type, date, name\}$ and they are represented by $\{$ integer, integer, upper-case letter, integer, string $\}$ respectively. sort the items based on the following priorities.
 first by value (ascending) in case of a tie, by weight (ascending) in case of a tie, by type (ascending in lexicographic order) in case of a tie, by date (ascending) in case of a tie, by name (ascending in lexicographic order) 


"
p02449,Permutation,"
  for given a sequence $a = \{a_0, a_1, ..., a_{n-1}\}$, print the previous permutation and the next permutation in lexicographic order.
 

"
p02450,Permutation Enumeration,"
    for given an integer $n$, print all permutations of $\{1, 2, ..., n\}$ in lexicographic order.
 

"
p02451,Binary Search,"
  for a given sequence $a = \{a_0, a_1, ..., a_{n-1}\}$ which is sorted by ascending order, find a specific value $k$ given as a query.
 


"
p02452,Includes,"
  for given two sequneces $a = \{a_0, a_1, ..., a_{n-1}\}$ and $b = \{b_0, b_1, ..., b_{m-1}\}$, determine whether all elements of $b$ are included in $a$. note that, elements of $a$ and $b$ are sorted by ascending order respectively.
 

"
p02453,Lower Bound,"
  for a given sequence $a = \{a_0, a_1, ..., a_{n-1}\}$ which is sorted by ascending order, find the lower bound for a specific value $k$ given as a query.
 
    lower bound: the place pointing to the first element greater than or equal to a specific value, or $n$ if there is no such element.
   
  



"
p02454,Equal Range,"
for a given sequence $a = \{a_0, a_1, ..., a_{n-1}\}$ which is sorted by ascending order, print a pair of the lower bound and the upper bound for a specific value $k$ given as a query.
 
  lower bound: the place pointing to the first element greater than or equal to a specific value, or $n$ if there is no such element.
 
  upper bound: the place pointing to the first element greater than a specific value, or $n$ if there is no such element.
   



"
p02455,Set: Search,"
  for a set $s$ of integers, perform a sequence of the following operations. note that each value in $s$ must be unique.
 insert($x$): insert $x$ to $s$ and report the number of elements in $s$ after the operation. find($x$): report the number of $x$ in $s$ (0 or 1). 



"
p02456,Set: Delete,"
  for a set $s$ of integers, perform a sequence of the following operations. note that each value in $s$ must be unique.
 insert($x$): insert $x$ to $s$ and report the number of elements in $s$ after the operation. find($x$): report the number of $x$ in $s$ (0 or 1). delete($x$): delete $x$ from $s$. 



"
p02457,Set: Range Search,"
  for a set $s$ of integers, perform a sequence of the following operations. note that each value in $s$ must be unique.
 insert($x$): insert $x$ to $s$ and report the number of elements in $s$ after the operation. find($x$): report the number of $x$ in $s$ (0 or 1). delete($x$): delete $x$ from $s$. dump($l$, $r$): print elements $x$ in $s$ such that $l \leq x \leq r$. 



"
p02458,Set,"
  for a set $s$ of integers, perform a sequence of the following operations. note that multiple elements can have equivalent values in $s$.
 insert($x$): insert $x$ to $s$ and report the number of elements in $s$ after the operation. find($x$): report the number of $x$ in $s$. delete($x$): delete all $x$ from $s$. dump($l$, $r$): print elements $x$ in $s$ such that $l \leq x \leq r$. 



"
p02459,Map: Search,"
for a dictionary $m$ that stores elements formed by a pair of a string key and an integer value, perform a sequence of the following operations. note that each key in $m$ must be unique.
 insert($key$, $x$): insert an element formed by a pair of $key$ and $x$ to $m$. if there is an element with $key$, replace the corresponding value with $x$. get($key$): print the value with the specified $key$. 



"
p02460,Map: Delete,"
    for a dictionary $m$ that stores elements formed by a pair of a string key and an integer value, perform a sequence of the following operations. note that each key in $m$ must be unique.
 insert($key$, $x$): insert an element formed by a pair of $key$ and $x$ to $m$. get($key$): print the value with the specified $key$. print 0 if there is no such element. delete($key$): delete the element with the specified $key$. 


"
p02461,Map: Range Search,"
  for a dictionary $m$ that stores elements formed by a pair of a string key and an integer value, perform a sequence of the following operations. note that each key in $m$ must be unique.
 insert($key$, $x$): insert an element formed by a pair of $key$ and $x$ to $m$. get($key$): print the value with the specified $key$. print 0 if there is no such element.  delete($key$): delete the element with the specified $key$. dump($l$, $r$): print all elements formed by a pair of the key and the value such that the key is greater than or equal to $l$ and less than or equal to $r$ in lexicographic order. 


"
p02462,Map,"
for a dictionary $m$ that stores elements formed by a pair of a string key and an integer value, perform a sequence of the following operations. note that multiple elements can have equivalent keys.
 insert($key$, $x$): insert an element formed by a pair of $key$ and $x$ to $m$. get($key$): print all values with the specified $key$. delete($key$): delete all elements with the specified $key$. dump($l$, $r$): print all elements formed by a pair of the key and the value such that the key is greater than or equal to $l$ and less than or equal to $r$ in lexicographic order. 


"
p02463,Set Union,"
  find the union of two sets $a = \{a_0, a_1, ..., a_{n-1}\}$ and $b = \{b_0, b_1, ..., b_{m-1}\}$.
 


"
p02464,Set Intersection,"
  find the intersection of two sets $a = \{a_0, a_1, ..., a_{n-1}\}$ and $b = \{b_0, b_1, ..., b_{m-1}\}$.
 

"
p02465,Set Difference,"
  find the difference of two sets $a = \{a_0, a_1, ..., a_{n-1}\}$ and $b = \{b_0, b_1, ..., b_{m-1}\}$,  $a - b$.
 

"
p02466,Set Symmetric Difference,"
  find the symmetric difference of two sets $a = \{a_0, a_1, ..., a_{n-1}\}$ and $b = \{b_0, b_1, ..., b_{m-1}\}$.
 

"
p02467,Prime Factorize,"
factorize a given integer n.
 

"
p02468,Power,"
for given integers m and n, compute mn (mod 1,000,000,007). here, a (mod m) is the remainder when a is divided by m.
 

"
p02469,Least Common Multiple,"
find the least common multiple (lcm) of given n integers.
 

"
p02470,Euler's Phi Function,"
for given integer n, count the totatives of n, that is, the positive integers less than or equal to n that are relatively prime to n.
 

"
p02471,Extended Euclid Algorithm,"
given positive integers a and b, find the integer solution (x, y) to ax + by = gcd(a, b), where gcd(a, b) is the greatest common divisor of a and b.
 

"
p02472,Addition of Big Integers,"
  given two integers $a$ and $b$, compute the sum, $a + b$.
 

"
p02473,Difference of Big Integers,"
  given two integers $a$ and $b$, compute the difference, $a - b$.
 

"
p02474,Multiplication of Big Integers,"
  given two integers $a$ and $b$, compute the product, $a \times b$.
 

"
p02475,Division of Big Integers,"
  given two integers $a$ and $b$, compute the quotient, $\frac{a}{b}$. round down to the nearest decimal.
 

"
p02476,Remainder of Big Integers,"
  given two integers $a$ and $b$, compute the remainder of $\frac{a}{b}$.
 

"
p02477,Multiplication of Big Integers II,"
  given two integers $a$ and $b$, compute the product, $a \times b$.
 

"
p02478,problem is available from here., 
p02533,problem 9999,"
これはテスト問題です。
this is test problem. compute a + b.
 
"
p02534, Repeat ACL,"you are given an integer k.
print the string obtained by repeating the string acl k times and concatenating them. for example, if k = 3, print aclaclacl. 
"
p02535, Integer Preference,"snuke likes integers that are greater than or equal to a, and less than or equal to b.
takahashi likes integers that are greater than or equal to c, and less than or equal to d. does there exist an integer liked by both people? 
"
p02536, Connect Cities,"there are n cities numbered 1 through n, and m bidirectional roads numbered 1 through m.
road i connects city a_i and city b_i. snuke can perform the following operation zero or more times: choose two distinct cities that are not directly connected by a road, and build a new road between the two cities. after he finishes the operations, it must be possible to travel from any city to any other cities by following roads (possibly multiple times). what is the minimum number of roads he must build to achieve the goal? 
"
p02537, Flat Subsequence,"you are given a sequence a_1, a_2, ..., a_n and an integer k. print the maximum possible length of a sequence b that satisfies the following conditions: b is a (not necessarily continuous) subsequence of a. for each pair of adjacents elements of b, the absolute difference of the elements is at most k. 

"
p02538, Replace Digits,"you have a string s of length n.
initially, all characters in s are 1s. you will perform queries q times.
in the i-th query, you are given two integers l_i, r_i and a character d_i (which is a digit).
then, you must replace all characters from the l_i-th to the r_i-th (inclusive) with d_i. after each query, read the string s as a decimal integer, and print its value modulo 998,244,353. 
"
p02539, Heights and Pairs,"there are 2n people numbered 1 through 2n.
the height of person i is h_i. how many ways are there to make n pairs of people such that the following conditions are satisfied?
compute the answer modulo 998,244,353. each person is contained in exactly one pair. for each pair, the heights of the two people in the pair are different. two ways are considered different if for some p and q, person p and person q are paired in one way and not in the other. 
"
p02540, Reachable Towns,"there are n cities on a 2d plane. the coordinate of the i-th city is (x_i, y_i). here (x_1, x_2, \dots, x_n) and (y_1, y_2, \dots, y_n) are both permuations of (1, 2, \dots, n). for each k = 1,2,\dots,n, find the answer to the following question: rng is in city k.
rng can perform the following move arbitrarily many times: move to another city that has a smaller x-coordinate and a smaller y-coordinate, or a larger x-coordinate and a larger y-coordinate, than the city he is currently in. how many cities (including city k) are reachable from city k? "
p02541, Sum is Multiple,"given is an integer n.
find the minimum possible positive integer k such that (1+2+\cdots+k) is a multiple of n.
it can be proved that such a positive integer k always exists. 
"
p02542, Moving Pieces,"there is a board with n rows and m columns.
the information of this board is represented by n strings s_1,s_2,\ldots,s_n.
specifically, the state of the square at the i-th row from the top and the j-th column from the left is represented as follows: s_{i,j}=. : the square is empty. s_{i,j}=# : an obstacle is placed on the square. s_{i,j}=o : a piece is placed on the square. yosupo repeats the following operation: choose a piece and move it to its right adjecent square or its down adjacent square.
moving a piece to squares with another piece or an obstacle is prohibited.
moving a piece out of the board is also prohibited. yosupo wants to perform the operation as many times as possible.
find the maximum possible number of operations. 
"
p02543, Keep Distances,"there are n points on a number line, i-th of which is placed on coordinate x_i.
these points are numbered in the increasing order of coordinates.
in other words, for all i (1 \leq i \leq n-1), x_i &lt; x_{i+1} holds.
in addition to that, an integer k is given. process q queries. in the i-th query, two integers l_i and r_i are given.
here, a set s of points is said to be a good set if it satisfies all of the following conditions.
note that the definition of good sets varies over queries. each point in s is one of x_{l_i},x_{l_i+1},\ldots,x_{r_i}. for any two distinct points in s, the distance between them is greater than or equal to k. the size of s is maximum among all sets that satisfy the aforementioned conditions. for each query, find the size of the union of all good sets. 
"
p02544, Shuffle Window,"given are a permutation p_1, p_2, \dots, p_n of (1, 2, ..., n) and an integer k. maroon performs the following operation for i = 1, 2, \dots, n - k + 1 in this order: shuffle p_i, p_{i + 1}, \dots, p_{i + k - 1} uniformly randomly. find the expected value of the inversion number of the sequence after all the operations are performed, and print it modulo 998244353. more specifically, from the constraints of this problem, it can be proved that the expected value is always a rational number, which can be represented as an irreducible fraction \frac{p}{q}, and that the integer r that satisfies r \times q \equiv p \pmod{998244353}, 0 \leq r &lt; 998244353 is uniquely determined. print this r. here, the inversion number of a sequence a_1, a_2, \dots, a_n is defined to be the number of ordered pairs (i, j) that satisfy i &lt; j, a_i &gt; a_j. 
"
p02545, Center Rearranging,"given are integer sequences a and b of length 3n. each of these two sequences contains three copies of each of 1, 2, \dots, n.
in other words, a and b are both arrangements of (1, 1, 1, 2, 2, 2, \dots, n, n, n). tak can perform the following operation to the sequence a arbitrarily many times: pick a value from 1, 2, \dots, n and call it x. a contains exactly three copies of x. remove the middle element of these three. after that, append x to the beginning or the end of a. check if he can turn a into b. if he can, print the minimum required number of operations to achieve that. 
"
p02546, Plural Form,"in the kingdom of atcoder, people use a language called taknese, which uses lowercase english letters. in taknese, the plural form of a noun is spelled based on the following rules: if a noun's singular form does not end with s, append s to the end of the singular form. if a noun's singular form ends with s, append es to the end of the singular form. you are given the singular form s of a taknese noun. output its plural form. 
"
p02547, Go to Jail,"tak performed the following action n times: rolling two dice.
the result of the i-th roll is d_{i,1} and d_{i,2}. check if doublets occurred at least three times in a row.
specifically, check if there exists at lease one i such that d_{i,1}=d_{i,2}, d_{i+1,1}=d_{i+1,2} and d_{i+2,1}=d_{i+2,2} hold. 
"
p02548, A x B + C,"given is a positive integer n.
how many tuples (a,b,c) of positive integers satisfy a \times b + c = n? 
"
p02549, Leaping Tak,"there are n cells arranged in a row, numbered 1, 2, \ldots, n from left to right. tak lives in these cells and is currently on cell 1. he is trying to reach cell n by using the procedure described below. you are given an integer k that is less than or equal to 10, and k non-intersecting segments [l_1, r_1], [l_2, r_2], \ldots, [l_k, r_k].
let s be the union of these k segments.
here, the segment [l, r] denotes the set consisting of all integers i that satisfy l \leq i \leq r. when you are on cell i, pick an integer d from s and move to cell i + d. you cannot move out of the cells. to help tak, find the number of ways to go to cell n, modulo 998244353. 
"
p02550, Sequence Sum,"let us denote by f(x, m) the remainder of the euclidean division of x by m. let a be the sequence that is defined by the initial value a_1=x and the recurrence relation a_{n+1} = f(a_n^2, m).
find \displaystyle{\sum_{i=1}^n a_i}. 
"
p02551, Simplified Reversi,"there is a grid with n rows and n columns of squares. let (i, j) be the square at the i-th row from the top and the j-th column from the left. each of the central (n-2) \times (n-2) squares in the grid has a black stone on it.
each of the 2n - 1 squares on the bottom side and the right side has a white stone on it. q queries are given. we ask you to process them in order.
there are two kinds of queries. their input format and description are as follows: 1 x: place a white stone on (1, x). after that, for each black stone between (1, x) and the first white stone you hit if you go down from (1, x), replace it with a white stone. 2 x: place a white stone on (x, 1). after that, for each black stone between (x, 1) and the first white stone you hit if you go right from (x, 1), replace it with a white stone. how many black stones are there on the grid after processing all q queries? 
"
p02552, Not,"given is an integer x that is greater than or equal to 0, and less than or equal to 1.
output 1 if x is equal to 0, or 0 if x is equal to 1. 
"
p02553, Product Max,"given are integers a,b,c and d.
if x and y are integers and a \leq x \leq b and c\leq y \leq d hold, what is the maximum possible value of x \times y? 
"
p02554, Ubiquity,"how many integer sequences a_1,a_2,\ldots,a_n of length n satisfy all of the following conditions? 0 \leq a_i \leq 9 there exists some i such that a_i=0 holds. there exists some i such that a_i=9 holds. the answer can be very large, so output it modulo 10^9 + 7. 
"
p02555, Redistribution,"given is an integer s.
find how many sequences there are whose terms are all integers greater than or equal to 3, and whose sum is equal to s.
the answer can be very large, so output it modulo 10^9 + 7. 
"
p02556, Dist Max,"there are n points on the 2d plane, i-th of which is located on (x_i, y_i).
there can be multiple points that share the same coordinate.
what is the maximum possible manhattan distance between two distinct points? here, the manhattan distance between two points (x_i, y_i) and (x_j, y_j) is defined by |x_i-x_j| + |y_i-y_j|. 
"
p02557, Contrast,"given are two sequences a and b, both of length n.
a and b are each sorted in the ascending order.
check if it is possible to reorder the terms of b so that for each i (1 \leq i \leq n) a_i \neq b_i holds, and if it is possible, output any of the reorderings that achieve it. 
"
p02558, Disjoint Set Union,"you are given an undirected graph with n vertices and 0 edges. process q queries of the following types. 0 u v: add an edge (u, v). 1 u v: print 1 if u and v are in the same connected component, 0 otherwise. 

"
p02559, Fenwick Tree,"you are given an array a_0, a_1, ..., a_{n-1} of length n. process q queries of the following types. 0 p x: a_p \gets a_p + x 1 l r: print \sum_{i = l}^{r - 1}{a_i}. 

"
p02560, Floor Sum,"in this problem, you should process t testcases. for each testcase, you are given four integers n, m, a, b. calculate \sum_{i = 0}^{n - 1} floor((a \times i + b) / m). 
"
p02561, Maxflow,"you are given a grid of n rows and m columns. the square at the i-th row and j-th column will be denoted as (i,j).
some of the squares contain an object. all the remaining squares are empty.
the state of the grid is represented by strings s_1,s_2,\cdots,s_n. the square (i,j) contains an object if s_{i,j}= # and is empty if s_{i,j}= .. consider placing 1 \times 2 tiles on the grid. tiles can be placed vertically or horizontally to cover two adjacent empty squares.
tiles must not stick out of the grid, and no two different tiles may intersect. tiles cannot occupy the square with an object. calculate the maximum number of tiles that can be placed and any configulation that acheives the maximum. 
"
p02562, MinCostFlow,"you are given a grid of n rows and m columns. the square at the i-th row and j-th column will be denoted as (i,j).
a nonnegative integer a_{i,j} is written for each square (i,j). you choose some of the squares so that each row and column contains at most k chosen squares.
under this constraint, calculate the maximum value of the sum of the integers written on the chosen squares.
additionally, calculate a way to choose squares that acheives the maximum. 
"
p02563, Convolution,"you are given two integer arrays a_0, a_1, ..., a_{n - 1} and b_0, b_1, ..., b_{m - 1}. calculate the array c_0, c_1, ..., c_{(n - 1) + (m - 1)}, defined by c_i = \sum_{j = 0}^i a_j b_{i - j} \bmod 998244353. 
"
p02564, SCC,"you are given a directed graph with n vertices and m edges, not necessarily simple. the i-th edge is oriented from the vertex a_i to the vertex b_i.
divide this graph into strongly connected components and print them in their topological order. 
"
p02565, Two SAT,"consider placing n flags on a line. flags are numbered through 1 to n. flag i can be placed on the coordinate x_i or y_i.
for any two different flags, the distance between them should be at least d. decide whether it is possible to place all n flags. if it is possible, print such a configulation. 
"
p02566, Number of Substrings,"you are given a string of length n. calculate the number of distinct substrings of s. 
"
p02567, Segment Tree,"you are given an array a_0, a_1, ..., a_{n-1} of length n. process q queries of the following types. the type of i-th query is represented by t_i. t_i=1: you are given two integers x_i,v_i. replace the value of a_{x_i} with v_i. t_i=2: you are given two integers l_i,r_i. calculate the maximum value among a_{l_i},a_{l_i+1},\cdots,a_{r_i}. t_i=3: you are given two integers x_i,v_i. calculate the minimum j such that x_i \leq j \leq n, v_i \leq a_j. if there is no such j, answer j=n+1 instead. 

"
p02568, Range Affine Range Sum,"you are given an array a_0, a_1, ..., a_{n-1} of length n. process q queries of the following types. 0 l r b c: for each i = l, l+1, \dots, {r - 1}, set a_i \gets b \times a_i + c. 1 l r: print \sum_{i = l}^{r - 1} a_i \bmod 998244353. 

"
p02569, Lazy Segment Tree,"you are given a binary array a=(a_1,a_2,\cdots,a_n) of length n.  process q queries of the following types. the i-th query is represented by three integers t_i,l_i,r_i. t_i=1: replace the value of a_j with 1-a_j for each l_i \leq j \leq r_i. t_i=2: calculate the inversion(*) of the array a_{l_i},a_{l_i+1},\cdots,a_{r_i}． note：the inversion of the array x_1,x_2,\cdots,x_k is the number of the pair of integers i,j with 1 \leq i &lt; j \leq k, x_i &gt; x_j. 
"
p02570, Don't be late,"takahashi is meeting up with aoki. they have planned to meet at a place that is d meters away from takahashi's house in t minutes from now. takahashi will leave his house now and go straight to the place at a speed of s meters per minute. will he arrive in time? 
"
p02571, Substring,"given are two strings s and t. let us change some of the characters in s so that t will be a substring of s. at least how many characters do we need to change? here, a substring is a consecutive subsequence. for example, xxx is a substring of yxxxy, but not a substring of xxyxx. 
"
p02572, Sum of product of pairs,"given are n integers a_1,\ldots,a_n. find the sum of a_i \times a_j over all pairs (i,j) such that 1\leq i &lt; j \leq n, modulo (10^9+7). 
"
p02573, Friends,"there are n persons called person 1 through person n. you are given m facts that ""person a_i and person b_i are friends."" the same fact may be given multiple times. if x and y are friends, and y and z are friends, then x and z are also friends. there is no friendship that cannot be derived from the m given facts. takahashi the evil wants to divide the n persons into some number of groups so that every person has no friend in his/her group. at least how many groups does he need to make? 
"
p02574, Coprime,"we have n integers. the i-th number is a_i. \{a_i\} is said to be pairwise coprime when gcd(a_i,a_j)=1 holds for every pair (i, j) such that 1\leq i &lt; j \leq n. \{a_i\} is said to be setwise coprime when \{a_i\} is not pairwise coprime but gcd(a_1,\ldots,a_n)=1. determine if \{a_i\} is pairwise coprime, setwise coprime, or neither. here, gcd(\ldots) denotes greatest common divisor. 
"
p02575, I hate Shortest Path Problem,"there is a grid of squares with h+1 horizontal rows and w vertical columns. you will start at one of the squares in the top row and repeat moving one square right or down. however, for each integer i from 1 through h, you cannot move down from the a_i-th, (a_i + 1)-th, \ldots, b_i-th squares from the left in the i-th row from the top. for each integer k from 1 through h, find the minimum number of moves needed to reach one of the squares in the (k+1)-th row from the top. (the starting square can be chosen individually for each case.) if, starting from any square in the top row, none of the squares in the (k+1)-th row can be reached, print -1 instead. 
"
p02576, Takoyaki,"takahashi loves takoyaki - a ball-shaped snack. with a takoyaki machine, he can make at most x pieces of takoyaki at a time, taking t minutes regardless of the number of pieces to make. how long does it take to make n takoyaki? 
"
p02577, Multiple of 9,"an integer n is a multiple of 9 if and only if the sum of the digits in the decimal representation of n is a multiple of 9. determine whether n is a multiple of 9. 
"
p02578, Step,"n persons are standing in a row. the height of the i-th person from the front is a_i. we want to have each person stand on a stool of some heights - at least zero - so that the following condition is satisfied for every person: condition: nobody in front of the person is taller than the person. here, the height of a person includes the stool. find the minimum total height of the stools needed to meet this goal. 
"
p02579, Wizard in Maze,"a maze is composed of a grid of h \times w squares - h vertical, w horizontal. the square at the i-th row from the top and the j-th column from the left - (i,j) - is a wall if s_{ij} is # and a road if s_{ij} is .. there is a magician in (c_h,c_w). he can do the following two kinds of moves: move a: walk to a road square that is vertically or horizontally adjacent to the square he is currently in. move b: use magic to warp himself to a road square in the 5\times 5 area centered at the square he is currently in. in either case, he cannot go out of the maze. at least how many times does he need to use the magic to reach (d_h, d_w)? 
"
p02580, Bomber,"we have a two-dimensional grid with h \times w squares. there are m targets to destroy in this grid - the position of the i-th target is \left(h_i, w_i \right). takahashi will choose one square in this grid, place a bomb there, and ignite it. the bomb will destroy all targets that are in the row or the column where the bomb is placed. it is possible to place the bomb at a square with a target. takahashi is trying to maximize the number of targets to destroy. find the maximum number of targets that can be destroyed. 
"
p02581, Brave CHAIN,"we have 3n cards arranged in a row from left to right, where each card has an integer between 1 and n (inclusive) written on it. the integer written on the i-th card from the left is a_i. you will do the following operation n-1 times: rearrange the five leftmost cards in any order you like, then remove the three leftmost cards. if the integers written on those three cards are all equal, you gain 1 point. after these n-1 operations, if the integers written on the remaining three cards are all equal, you will gain 1 additional point. find the maximum number of points you can gain. 
"
p02582, Rainy Season,"we have weather records at atcoder town for some consecutive three days. a string of length 3, s, represents the records - if the i-th character is s, it means it was sunny on the i-th day; if that character is r, it means it was rainy on that day. find the maximum number of consecutive rainy days in this period. 
"
p02583, Making Triangle,"we have sticks numbered 1, \cdots, n. the length of stick i (1 \leq i \leq n) is l_i. in how many ways can we choose three of the sticks with different lengths that can form a triangle? that is, find the number of triples of integers (i, j, k) (1 \leq i &lt; j &lt; k \leq n) that satisfy both of the following conditions: l_i, l_j, and l_k are all different. there exists a triangle whose sides have lengths l_i, l_j, and l_k. 

"
p02584, Walking Takahashi,"takahashi, who lives on the number line, is now at coordinate x. he will make exactly k moves of distance d in the positive or negative direction. more specifically, in one move, he can go from coordinate x to x + d or x - d. he wants to make k moves so that the absolute value of the coordinate of the destination will be the smallest possible. find the minimum possible absolute value of the coordinate of the destination. 
"
p02585, Moving Piece,"takahashi will play a game using a piece on an array of squares numbered 1, 2, \cdots, n. square i has an integer c_i written on it. also, he is given a permutation of 1, 2, \cdots, n: p_1, p_2, \cdots, p_n. now, he will choose one square and place the piece on that square. then, he will make the following move some number of times between 1 and k (inclusive): in one move, if the piece is now on square i (1 \leq i \leq n), move it to square p_i. here, his score increases by c_{p_i}. help him by finding the maximum possible score at the end of the game. (the score is 0 at the beginning of the game.) 
"
p02586, Picking Goods,"there are k items placed on a grid of squares with r rows and c columns. let (i, j) denote the square at the i-th row (1 \leq i \leq r) and the j-th column (1 \leq j \leq c). the i-th item is at (r_i, c_i) and has the value v_i. takahashi will begin at (1, 1), the start, and get to (r, c), the goal. when he is at (i, j), he can move to (i + 1, j) or (i, j + 1) (but cannot move to a non-existent square). he can pick up items on the squares he visits, including the start and the goal, but at most three for each row. it is allowed to ignore the item on a square he visits. find the maximum possible sum of the values of items he picks up. 
"
p02587, Making Palindrome,"we have n strings of lowercase english letters: s_1, s_2, \cdots, s_n. takahashi wants to make a string that is a palindrome by choosing one or more of these strings - the same string can be chosen more than once - and concatenating them in some order of his choice. the cost of using the string s_i once is c_i, and the cost of using it multiple times is c_i multiplied by that number of times. find the minimum total cost needed to choose strings so that takahashi can make a palindrome. if there is no choice of strings in which he can make a palindrome, print -1. 
"
p02588, Integer Product,"you are given n real values a_1, a_2, \ldots, a_n.
compute the number of pairs of indices (i, j)
    such that i &lt; j and the product a_i \cdot a_j is integer. 
"
p02589, First Second,"limak can repeatedly remove one of the first two characters of a string,
    for example abcxyx \rightarrow acxyx \rightarrow cxyx \rightarrow cyx. you are given n different strings s_1, s_2, \ldots, s_n.
among n \cdot (n-1) / 2 pairs (s_i, s_j),
    in how many pairs could limak obtain one string from the other? 
"
p02590, Product Modulo,"let’s take a prime p = 200\,003.
you are given n integers a_1, a_2, \ldots, a_n.
find the sum of ((a_i \cdot a_j) \bmod p) over all n \cdot (n-1) / 2 unordered pairs of elements (i &lt; j). please note that the sum isn't computed modulo p. 
"
p02591, Twin Binary Trees,"inspired by the tv series stranger things, bear limak is going for a walk between two mirror worlds. there are two perfect binary trees of height h,
    each with the standard numeration of vertices from 1 to 2^h-1.
the root is 1 and the children of x are 2 \cdot x and 2 \cdot x + 1. let l denote the number of leaves in a single tree, l = 2^{h-1}. you are given a permutation p_1, p_2, \ldots, p_l of numbers 1 through l.
it describes l special edges that connect leaves of the two trees.
there is a special edge between vertex l+i-1 in the first tree and vertex l+p_i-1 in the second tree. 
 
drawing for the first sample test, permutation p = (2, 3, 1, 4), special edges in green let's define product of a cycle as the product of numbers in its vertices.
compute the sum of products of all simple cycles that have exactly two special edges, modulo (10^9+7). a simple cycle is a cycle of length at least 3, without repeated vertices or edges. 
"
p02592, Product Simulation,"this is an output-only problem. you shouldn't read anything from the input. in short, your task is to simulate multiplication by using only comparison (x &lt; y) and addition (x + y).
there is no input in this problem, you just print a sequence of operations. imagine that there is a big array a[0], a[1], ..., a[n-1] of length n.
the first two values are initially two non-negative integers a and b (which are unknown to you),
    the other elements are zeros.
your goal is to get the product a \cdot b in a[2] at the end. you are allowed operations of two types, with the following format (where 0 \leq i, j, k &lt; n): + i j k — applies operation a[k] = a[i] + a[j]. &lt; i j k — applies operation a[k] = a[i] &lt; a[j].
    that is, if a[i] &lt; a[j] then a[k] becomes 1, otherwise it becomes 0. you can use at most q operations.
elements of a can't exceed v.
indices (i, j, k) don't have to be distinct.
it's allowed to modify any element of the array (including the first two).
the actual checker simulates the process for multiple pairs (a, b) within a single test.
each time, the checker chooses values a and b, creates the array a = [a, b, 0, 0, \ldots, 0],
    applies all your operations and ensures that a[2] = a \cdot b. 
"
p02593, Rooks,"you are given positions (x_i, y_i) of n enemy rooks on an infinite chessboard.
no two rooks attack each other (at most one rook per row or column). you're going to replace one rook with a king and then move the king repeatedly to beat as many rooks as possible. you can't enter a cell that is being attacked by a rook.
additionally, you can't move diagonally to an empty cell (but you can beat a rook diagonally). (so this king moves like a superpawn that beats diagonally in 4 directions and moves horizontally/vertically in 4 directions.) for each rook, consider replacing it with a king, and find the minimum possible number of moves
    needed to beat the maximum possible number of rooks. 
"
p02594, Air Conditioner,"you will turn on the air conditioner if, and only if, the temperature of the room is 30 degrees celsius or above. the current temperature of the room is x degrees celsius. will you turn on the air conditioner? 
"
p02595, Distance,"we have n points in the two-dimensional plane. the coordinates of the i-th point are (x_i,y_i). among them, we are looking for the points such that the distance from the origin is at most d. how many such points are there? we remind you that the distance between the origin and the point (p, q) can be represented as \sqrt{p^2+q^2}. 
"
p02596, Repsept,"takahashi loves the number 7 and multiples of k. where is the first occurrence of a multiple of k in the sequence 7,77,777,\ldots? (also see output and sample input/output below.) if the sequence contains no multiples of k, print -1 instead. 
"
p02597, Alter Altar,"an altar enshrines n stones arranged in a row from left to right. the color of the i-th stone from the left (1 \leq i \leq n) is given to you as a character c_i; r stands for red and w stands for white. you can do the following two kinds of operations any number of times in any order: choose two stones (not necessarily adjacent) and swap them. choose one stone and change its color (from red to white and vice versa). according to a fortune-teller, a white stone placed to the immediate left of a red stone will bring a disaster. at least how many operations are needed to reach a situation without such a white stone? 
"
p02598, Logs,"we have n logs of lengths a_1,a_2,\cdots a_n. we can cut these logs at most k times in total. when a log of length l is cut at a point whose distance from an end of the log is t (0&lt;t&lt;l), it becomes two logs of lengths t and l-t. find the shortest possible length of the longest log after at most k cuts, and print it after rounding up to an integer. 
"
p02599, Range Set Query,"we have n colored balls arranged in a row from left to right; the color of the i-th ball from the left is c_i. you are given q queries. the i-th query is as follows: how many different colors do the l_i-th through r_i-th balls from the left have? 
"
p02600, Kyu in AtCoder,"m-kun is a competitor in atcoder, whose highest rating is x.
in this site, a competitor is given a kyu (class) according to his/her highest rating. for ratings from 400 through 1999, the following kyus are given: from 400 through 599: 8-kyu from 600 through 799: 7-kyu from 800 through 999: 6-kyu from 1000 through 1199: 5-kyu from 1200 through 1399: 4-kyu from 1400 through 1599: 3-kyu from 1600 through 1799: 2-kyu from 1800 through 1999: 1-kyu what kyu does m-kun have? 
"
p02601, Magic 2,"m-kun has the following three cards: a red card with the integer a. a green card with the integer b. a blue card with the integer c. he is a genius magician who can do the following operation at most k times: choose one of the three cards and multiply the written integer by 2. his magic is successful if both of the following conditions are satisfied after the operations: the integer on the green card is strictly greater than the integer on the red card. the integer on the blue card is strictly greater than the integer on the green card. determine whether the magic can be successful. 
"
p02602, Marks,"m-kun is a student in aoki high school, where a year is divided into n terms.
there is an exam at the end of each term. according to the scores in those exams, a student is given a grade for each term, as follows: for the first through (k-1)-th terms: not given. for each of the k-th through n-th terms: the multiplication of the scores in the last k exams, including the exam in the graded term. m-kun scored a_i in the exam at the end of the i-th term.
for each i such that k+1 \leq i \leq n, determine whether his grade for the i-th term is strictly greater than the grade for the (i-1)-th term. 
"
p02603, Road to Millionaire,"to become a millionaire, m-kun has decided to make money by trading in the next n days. currently, he has 1000 yen and no stocks - only one kind of stock is issued in the country where he lives. he is famous across the country for his ability to foresee the future. he already knows that the price of one stock in the next n days will be as follows: a_1 yen on the 1-st day, a_2 yen on the 2-nd day, ..., a_n yen on the n-th day. in the i-th day, m-kun can make the following trade any number of times (possibly zero), within the amount of money and stocks that he has at the time. buy stock: pay a_i yen and receive one stock. sell stock: sell one stock for a_i yen. what is the maximum possible amount of money that m-kun can have in the end by trading optimally? 
"
p02604, M's Solution,"new atcoder city has an infinite grid of streets, as follows: at the center of the city stands a clock tower. let (0, 0) be the coordinates of this point. a straight street, which we will call east-west main street, runs east-west and passes the clock tower. it corresponds to the x-axis in the two-dimensional coordinate plane. there are also other infinitely many streets parallel to east-west main street, with a distance of 1 between them. they correspond to the lines \ldots, y = -2, y = -1, y = 1, y = 2, \ldots in the two-dimensional coordinate plane. a straight street, which we will call north-south main street, runs north-south and passes the clock tower. it corresponds to the y-axis in the two-dimensional coordinate plane. there are also other infinitely many streets parallel to north-south main street, with a distance of 1 between them. they correspond to the lines \ldots, x = -2, x = -1, x = 1, x = 2, \ldots in the two-dimensional coordinate plane. there are n residential areas in new atcoder city. the i-th area is located at the intersection with the coordinates (x_i, y_i) and has a population of p_i. each citizen in the city lives in one of these areas. the city currently has only two railroads, stretching infinitely, one along east-west main street and the other along north-south main street.
m-kun, the mayor, thinks that they are not enough for the commuters, so he decides to choose k streets and build a railroad stretching infinitely along each of those streets. let the walking distance of each citizen be the distance from his/her residential area to the nearest railroad.
m-kun wants to build railroads so that the sum of the walking distances of all citizens, s, is minimized. for each k = 0, 1, 2, \dots, n, what is the minimum possible value of s after building railroads? 
"
p02605, Air Safety,"m-kun is a brilliant air traffic controller. on the display of his radar, there are n airplanes numbered 1, 2, ..., n, all flying at the same altitude.
each of the airplanes flies at a constant speed of 0.1 per second in a constant direction. the current coordinates of the airplane numbered i are (x_i, y_i), and the direction of the airplane is as follows: if u_i is u, it flies in the positive y direction; if u_i is r, it flies in the positive x direction; if u_i is d, it flies in the negative y direction; if u_i is l, it flies in the negative x direction. to help m-kun in his work, determine whether there is a pair of airplanes that will collide with each other if they keep flying as they are now.
if there is such a pair, find the number of seconds after which the first collision will happen.
we assume that the airplanes are negligibly small so that two airplanes only collide when they reach the same coordinates simultaneously. 
"
p02606, Number of Multiples,"how many multiples of d are there among the integers between l and r (inclusive)? 
"
p02607, An Odd Problem,"we have n squares assigned the numbers 1,2,3,\ldots,n. each square has an integer written on it, and the integer written on square i is a_i. how many squares i satisfy both of the following conditions? the assigned number, i, is odd. the written integer is odd. 

"
p02608, XYZ Triplets,"let f(n) be the number of triples of integers (x,y,z) that satisfy both of the following conditions: 1 \leq x,y,z x^2 + y^2 + z^2 + xy + yz + zx = n given an integer n, find each of f(1),f(2),f(3),\ldots,f(n). 
"
p02609, Anything Goes to Zero,"let \mathrm{popcount}(n) be the number of 1s in the binary representation of n.
for example, \mathrm{popcount}(3) = 2, \mathrm{popcount}(7) = 3, and \mathrm{popcount}(0) = 0. let f(n) be the number of times the following operation will be done when we repeat it until n becomes 0: ""replace n with the remainder when n is divided by \mathrm{popcount}(n)."" (it can be proved that, under the constraints of this problem, n always becomes 0 after a finite number of operations.) for example, when n=7, it becomes 0 after two operations, as follows: \mathrm{popcount}(7)=3, so we divide 7 by 3 and replace it with the remainder, 1. \mathrm{popcount}(1)=1, so we divide 1 by 1 and replace it with the remainder, 0. you are given an integer x with n digits in binary.
for each integer i such that 1 \leq i \leq n, let x_i be what x becomes when the i-th bit from the top is inverted.
find f(x_1), f(x_2), \ldots, f(x_n). 
"
p02610, Camel Train,"we have n camels numbered 1,2,\ldots,n.
snuke has decided to make them line up in a row. the happiness of camel i will be l_i if it is among the k_i frontmost camels, and r_i otherwise. snuke wants to maximize the total happiness of the camels. find the maximum possible total happiness of the camel. solve this problem for each of the t test cases given. 
"
p02611, Two Snuke,"given is an integer n. snuke will choose integers s_1, s_2, n_1, n_2, u_1, u_2, k_1, k_2, e_1, and e_2 so that all of the following six conditions will be satisfied: 0 \leq s_1 &lt; s_2 0 \leq n_1 &lt; n_2 0 \leq u_1 &lt; u_2 0 \leq k_1 &lt; k_2 0 \leq e_1 &lt; e_2 s_1 + s_2 + n_1 + n_2 + u_1 + u_2 + k_1 + k_2 + e_1 + e_2 \leq n for every possible choice (s_1,s_2,n_1,n_2,u_1,u_2,k_1,k_2,e_1,e_2), compute (s_2 − s_1)(n_2 − n_1)(u_2 − u_1)(k_2 - k_1)(e_2 - e_1), and find the sum of all computed values, modulo (10^{9} +7). solve this problem for each of the t test cases given. 
"
p02612, Payment,"we will buy a product for n yen (the currency of japan) at a shop. if we use only 1000-yen bills to pay the price, how much change will we receive? assume we use the minimum number of bills required. 
"
p02613, Judge Status Summary,"takahashi is participating in a programming contest called axc002, and he has just submitted his code to problem a. the problem has n test cases. for each test case i (1\leq i \leq n), you are given a string s_i representing the verdict for that test case. find the numbers of test cases for which the verdict is ac, wa, tle, and re, respectively. see the output section for the output format. 
"
p02614, H and V,"we have a grid of h rows and w columns of squares. the color of the square at the i-th row from the top and the j-th column from the left (1 \leq i \leq h, 1 \leq j \leq w) is given to you as a character c_{i,j}: the square is white if c_{i,j} is ., and black if c_{i,j} is #. consider doing the following operation: choose some number of rows (possibly zero), and some number of columns (possibly zero). then, paint red all squares in the chosen rows and all squares in the chosen columns. you are given a positive integer k. how many choices of rows and columns result in exactly k black squares remaining after the operation? here, we consider two choices different when there is a row or column chosen in only one of those choices. 
"
p02615, Chat in a Circle,"quickly after finishing the tutorial of the online game atchat, you have decided to visit a particular place with n-1 players who happen to be there. these n players, including you, are numbered 1 through n, and the friendliness of player i is a_i. the n players will arrive at the place one by one in some order. to make sure nobody gets lost, you have set the following rule: players who have already arrived there should form a circle, and a player who has just arrived there should cut into the circle somewhere. when each player, except the first one to arrive, arrives at the place, the player gets comfort equal to the smaller of the friendliness of the clockwise adjacent player and that of the counter-clockwise adjacent player. the first player to arrive there gets the comfort of 0. what is the maximum total comfort the n players can get by optimally choosing the order of arrivals and the positions in the circle to cut into? 
"
p02616, Multiplication 4,"given are n integers a_1,\ldots,a_n. we will choose exactly k of these elements. find the maximum possible product of the chosen elements. then, print the maximum product modulo (10^9+7), using an integer between 0 and 10^9+6 (inclusive). 
"
p02617, Intervals on Tree,"we have a tree with n vertices and n-1 edges, respectively numbered 1, 2,\cdots, n and 1, 2, \cdots, n-1. edge i connects vertex u_i and v_i. for integers l, r (1 \leq l \leq r \leq n), let us define a function f(l, r) as follows: let s be the set of the vertices numbered l through r. f(l, r) represents the number of connected components in the subgraph formed only from the vertex set s and the edges whose endpoints both belong to s. compute \sum_{l=1}^{n} \sum_{r=l}^{n} f(l, r). 
"
p02618, AtCoder Contest Scheduling,"atcoder currently hosts three types of contests: abc, arc, and agc. as the number of users has grown, in order to meet the needs of more users, atcoder has decided to increase the number of contests to 26 types, from aac to azc. for convenience, we number these 26 types as type 1 through type 26. atcoder wants to schedule contests for d days so that user satisfaction is as high as possible. for every day, atcoder will hold exactly one contest, and each contest will end on that day. the satisfaction is calculated as follows. the satisfaction at the beginning of day 1 is 0. satisfaction can be negative. holding contests increases satisfaction. the amount of increase will vary depending on a variety of factors. specifically, we know in advance that holding a contest of type i on day d will increase the satisfaction by s_{d,i}. if a particular type of contest is not held for a while, the satisfaction decreases. each contest type i has an integer c_i, and at the end of each day d=1,2,...,d, the satisfaction decreases as follows. let \mathrm{last}(d,i) be the last day before day d (including d) on which a contest of type i was held. if contests of type i have never been held yet, we define \mathrm{last}(d,i)=0. at the end of day d, the satisfaction decreases by \sum _{i=1}^{26}c_i \times (d-\mathrm{last}(d,i)). please schedule contests on behalf of atcoder.
if the satisfaction at the end of day d is s, you will get a score of \max(10^6 + s, 0).
there are 50 test cases, and the score of a submission is the total scores for each test case.
you can make submissions multiple times, and the highest score among your submissions will be your score. 
"
p02619, Scoring,"let's first write a program to calculate the score from a pair of input and output. you can know the total score by submitting your solution, or an official program to calculate a score is often provided for local evaluation as in this contest. nevertheless, writing a score calculator by yourself is still useful to check your understanding of the problem specification. moreover, the source code of the score calculator can often be reused for solving the problem or debugging your solution. so it is worthwhile to write a score calculator unless it is very complicated. 
"
p02620, Incremental Scoring,"""local search"" is a powerful method for finding a high-quality solution.
in this method, instead of constructing a solution from scratch, we try to find a better solution by slightly modifying the already found solution.
if the solution gets better, update it, and if it gets worse, restore it.
by repeating this process, the quality of the solution is gradually improved over time.
the pseudo-code is as follows. for example, in this problem, we can use the following modification: pick the date d and contest type q at random and change the type of contest to be held on day d to q.
the pseudo-code is as follows. the most important thing when using the local search method is the design of how to modify solutions. if the amount of modification is too small, we will soon fall into a dead-end (local optimum) and, conversely, if the amount of modification is too large, the probability of finding an improving move becomes extremely small. in order to increase the number of iterations, it is desirable to be able to quickly calculate the score after applying a modification. in this problem c, we focus on the second point.
the score after the modification can, of course, be obtained by calculating the score from scratch.
however, by focusing on only the parts that have been modified, it may be possible to quickly compute the difference between the scores before and after the modification.
from another viewpoint, the impossibility of such a fast incremental calculation implies that a small modification to the solution affects a majority of the score calculation.
in such a case, we may need to redesign how to modify solutions, or there is a high possibility that the problem is not suitable for local search.
let's implement fast incremental score computation.
it's time to demonstrate the skills of algorithms and data structures you have developed in abc and arc! in this kind of contest, where the objective is to find a better solution instead of the optimal one, a bug in a program does not result in a wrong answer, which may delay the discovery of the bug.
for early detection of bugs, it is a good idea to unit test functions you implemented complicated routines.
for example, if you implement fast incremental score calculation, it is a good idea to test that the scores computed by the fast implementation match the scores computed from scratch, as we will do in this problem c. 
"
p02621, Calc,"given an integer a as input, print the value a + a^2 + a^3. 
"
p02622, Minor Change,"given are strings s and t. consider changing s to t by repeating the operation below. find the minimum number of operations required to do so. operation: choose one character of s and replace it with a different character. 
"
p02623, Tsundoku,"we have two desks: a and b. desk a has a vertical stack of n books on it, and desk b similarly has m books on it. it takes us a_i minutes to read the i-th book from the top on desk a (1 \leq i \leq n), and b_i minutes to read the i-th book from the top on desk b (1 \leq i \leq m). consider the following action: choose a desk with a book remaining, read the topmost book on that desk, and remove it from the desk. how many books can we read at most by repeating this action so that it takes us at most k minutes in total? we ignore the time it takes to do anything other than reading. 
"
p02624, Sum of Divisors,"for a positive integer x, let f(x) be the number of positive divisors of x. given a positive integer n, find \sum_{k=1}^n k\times f(k). 
"
p02625, NEQ,"count the pairs of length-n sequences consisting of integers between 1 and m (inclusive), a_1, a_2, \cdots, a_{n} and b_1, b_2, \cdots, b_{n}, that satisfy all of the following conditions: a_i \neq b_i, for every i such that 1\leq i\leq n. a_i \neq a_j and b_i \neq b_j, for every (i, j) such that 1\leq i &lt; j\leq n. since the count can be enormous, print it modulo (10^9+7). 
"
p02626, Unfair Nim,"there are n piles of stones. the i-th pile has a_i stones. aoki and takahashi are about to use them to play the following game: operation: choose one pile of stones, and remove one or more stones from it. 

 when a player is unable to do the operation, he loses, and the other player wins. when the two players play optimally, there are two possibilities in this game: the player who moves first always wins, or the player who moves second always wins, only depending on the initial number of stones in each pile. in such a situation, takahashi, the second player to act, is trying to guarantee his win by moving at least zero and at most (a_1 - 1) stones from the 1-st pile to the 2-nd pile before the game begins. if this is possible, print the minimum number of stones to move to guarantee his victory; otherwise, print -1 instead. 
"
p02627, αlphabet,"an uppercase or lowercase english letter \alpha will be given as input.
if \alpha is uppercase, print a; if it is lowercase, print a. 
"
p02628, Mix Juice,"a shop sells n kinds of fruits, fruit 1, \ldots, n, at prices of p_1, \ldots, p_n yen per item, respectively. (yen is the currency of japan.) here, we will choose k kinds of fruits and buy one of each chosen kind. find the minimum possible total price of those fruits. 
"
p02629, One Quadrillion and One Dalmatians,"1000000000000001 dogs suddenly appeared under the roof of roger's house, all of which he decided to keep. the dogs had been numbered 1 through 1000000000000001, but he gave them new names, as follows: the dogs numbered 1,2,\cdots,26 were respectively given the names a, b, ..., z; the dogs numbered 27,28,29,\cdots,701,702  were respectively given the names aa, ab, ac, ..., zy, zz; the dogs numbered 703,704,705,\cdots,18277,18278  were respectively given the names aaa, aab, aac, ..., zzy, zzz; the dogs numbered 18279,18280,18281,\cdots,475253,475254  were respectively given the names aaaa, aaab, aaac, ..., zzzy, zzzz; the dogs numbered 475255,475256,\cdots  were respectively given the names aaaaa, aaaab, ...; and so on. to sum it up, the dogs numbered 1, 2, \cdots were respectively given the following names: a, b, ..., z, aa, ab, ..., az, ba, bb, ..., bz, ..., za, zb, ..., zz, aaa, aab, ..., aaz, aba, abb, ..., abz, ..., zzz, aaaa, ... now, roger asks you: ""what is the name for the dog numbered n?"" 
"
p02630, Replacing,"you have a sequence a composed of n positive integers: a_{1}, a_{2}, \cdots, a_{n}. you will now successively do the following q operations: in the i-th operation, you replace every element whose value is b_{i} with c_{i}. for each i (1 \leq i \leq q), find s_{i}: the sum of all elements in a just after the i-th operation. 
"
p02631, Red Scarf,"there are n snuke cats numbered 1, 2, \ldots, n, where n is even. each snuke cat wears a red scarf, on which his favorite non-negative integer is written. recently, they learned the operation called xor (exclusive or).  when x_1~\textrm{xor}~x_2~\textrm{xor}~\ldots~\textrm{xor}~x_n is written in base two, the digit in the 2^k's place (k \geq 0) is 1 if the number of integers among x_1, x_2, \ldots, x_n whose binary representations have 1 in the 2^k's place is odd, and 0 if that count is even.  

for example, 3~\textrm{xor}~5 = 6.
 they wanted to use this operation quickly, so each of them calculated the xor of the integers written on their scarfs except his scarf. we know that the xor calculated by snuke cat i, that is, the xor of the integers written on the scarfs except the scarf of snuke cat i is a_i.
using this information, restore the integer written on the scarf of each snuke cat. 
"
p02632, Strivore,"how many strings can be obtained by applying the following operation on a string s exactly k times: ""choose one lowercase english letter and insert it somewhere""? the answer can be enormous, so print it modulo (10^9+7). 
"
p02633, Takahashikun  The Strider,"takahashi is standing on a two-dimensional plane, facing north. find the minimum positive integer k such that takahashi will be at the starting position again after he does the following action k times: go one meter in the direction he is facing. then, turn x degrees counter-clockwise. 

"
p02634, Extension,"we have a grid with a horizontal rows and b vertical columns, with the squares painted white. on this grid, we will repeatedly apply the following operation: if we choose ""vertical"", insert one row at the top of the grid, resulting in an (a+1) \times b grid. if we choose ""horizontal"", insert one column at the right end of the grid, resulting in an a \times (b+1) grid. 

 then, paint one of the added squares black, and the other squares white. assume the grid eventually has c horizontal rows and d vertical columns. find the number of ways in which the squares can be painted in the end, modulo 998244353. 
"
p02635, Shift,"given is a string s consisting of 0 and 1. find the number of strings, modulo 998244353, that can result from applying the following operation on s between 0 and k times (inclusive): choose a pair of integers i, j (1\leq i &lt; j\leq |s|) such that the i-th and j-th characters of s are 0 and 1, respectively. remove the j-th character from s and insert it to the immediate left of the i-th character. 

"
p02636, Secret Passage,"given is a string s consisting of 0 and 1. find the number of strings, modulo 998244353, that can result from applying the following operation on s zero or more times: remove the two characters at the beginning of s, erase one of them, and reinsert the other somewhere in s. this operation can be applied only when s has two or more characters. 

"
p02637, Permutation Cover,"given are an integer k and integers a_1,\dots, a_k. determine whether a sequence p satisfying below exists. if it exists, find the lexicographically smallest such sequence. every term in p is an integer between 1 and k (inclusive). for each i=1,\dots, k, p contains a_i occurrences of i. for each term in p, there is a contiguous subsequence of length k that contains that term and is a permutation of 1,\dots, k. 

"
p02638, Forbidden Tournament,"given are integers n and k, and a prime number p. find the number, modulo p, of directed graphs g with n vertices that satisfy below. here, the vertices are distinguishable from each other. g is a tournament, that is, g contains no duplicated edges or self-loops, and exactly one of the edges u\to v and v\to u exists for any two vertices u and v. the in-degree of every vertex in g is at most k. for any four distinct vertices a, b, c, and d in g, it is not the case that all of the six edges a\to b, b\to c, c\to a, a\to d, b\to d, and c\to d exist simultaneously. 

"
p02639, Five Variables,"we have five variables x_1, x_2, x_3, x_4, and x_5. the variable x_i was initially assigned a value of i. snuke chose one of these variables and assigned it 0. you are given the values of the five variables after this assignment. find out which variable snuke assigned 0. 
"
p02640, Crane and Turtle,"there are some animals in a garden. each of them is a crane with two legs or a turtle with four legs. takahashi says: ""there are x animals in total in the garden, and they have y legs in total."" determine whether there is a combination of numbers of cranes and turtles in which this statement is correct. 
"
p02641, Forbidden List,"given are an integer x and an integer sequence of length n: p_1, \ldots, p_n. among the integers not contained in the sequence p_1, \ldots, p_n (not necessarily positive), find the integer nearest to x, that is, find the integer whose absolute difference with x is the minimum. if there are multiple such integers, report the smallest such integer. 
"
p02642, Not Divisible,"given is a number sequence a of length n. find the number of integers i \left(1 \leq i \leq n\right) with the following property: for every integer j \left(1 \leq j \leq n\right) such that i \neq j , a_j does not divide a_i. 

"
p02643, Smart Infants,"there are n infants registered in atcoder, numbered 1 to n, and 2\times 10^5 kindergartens, numbered 1 to 2\times 10^5.
infant i has a rating of a_i and initially belongs to kindergarten b_i. from now on, q transfers will happen.
after the j-th transfer, infant c_j will belong to kindergarten d_j. here, we define the evenness as follows. for each kindergarten with one or more infants registered in atcoder, let us find the highest rating of an infant in the kindergarten. the evenness is then defined as the lowest among those ratings. for each of the q transfers, find the evenness just after the transfer. 
"
p02644, Pond Skater,"snuke, a water strider, lives in a rectangular pond that can be seen as a grid with h east-west rows and w north-south columns. let (i,j) be the square at the i-th row from the north and j-th column from the west. some of the squares have a lotus leaf on it and cannot be entered.
the square (i,j) has a lotus leaf on it if c_{ij} is @, and it does not if c_{ij} is .. in one stroke, snuke can move between 1 and k squares (inclusive) toward one of the four directions: north, east, south, and west.
the move may not pass through a square with a lotus leaf. moving to such a square or out of the pond is also forbidden. find the minimum number of strokes snuke takes to travel from the square (x_1,y_1) to (x_2,y_2).
if the travel from (x_1,y_1) to (x_2,y_2) is impossible, point out that fact. 
"
p02645, Nickname,"when you asked some guy in your class his name, he called himself s, where s is a string of length between 3 and 20 (inclusive) consisting of lowercase english letters.
you have decided to choose some three consecutive characters from s and make it his nickname. print a string that is a valid nickname for him. 
"
p02646, Tag,"two children are playing tag on a number line. (in the game of tag, the child called ""it"" tries to catch the other child.) the child who is ""it"" is now at coordinate a, and he can travel the distance of v per second.
the other child is now at coordinate b, and she can travel the distance of w per second. he can catch her when his coordinate is the same as hers.
determine whether he can catch her within t seconds (including exactly t seconds later).
we assume that both children move optimally. 
"
p02647, Lamps,"we have n bulbs arranged on a number line, numbered 1 to n from left to right.
bulb i is at coordinate i. each bulb has a non-negative integer parameter called intensity.
when there is a bulb of intensity d at coordinate x, the bulb illuminates the segment from coordinate x-d-0.5 to x+d+0.5.
initially, the intensity of bulb i is a_i. we will now do the following operation k times in a row: for each integer i between 1 and n (inclusive), let b_i be the number of bulbs illuminating coordinate i. then, change the intensity of each bulb i to b_i. find the intensity of each bulb after the k operations. 
"
p02648, Knapsack Queries on a tree,"we have a rooted binary tree with n vertices, where the vertices are numbered 1 to n.
vertex 1 is the root, and the parent of vertex i (i \geq 2) is vertex \left[ \frac{i}{2} \right]. each vertex has one item in it. the item in vertex i has a value of v_i and a weight of w_i.
now, process the following query q times: given are a vertex v of the tree and a positive integer l.
  let us choose some (possibly none) of the items in v and the ancestors of v so that their total weight is at most l.
  find the maximum possible total value of the chosen items. here, vertex u is said to be an ancestor of vertex v when u is an indirect parent of v, that is, there exists a sequence of vertices w_1,w_2,\ldots,w_k (k\geq 2) where w_1=v, w_k=u, and w_{i+1} is the parent of w_i for each i. 
"
p02649, O(rand),"given are n pairwise distinct non-negative integers a_1,a_2,\ldots,a_n.
find the number of ways to choose a set of between 1 and k numbers (inclusive) from the given numbers so that the following two conditions are satisfied: the bitwise and of the chosen numbers is s. the bitwise or of the chosen numbers is t. 

"
p02650, Triangles,"in a two-dimensional plane, we have a rectangle r whose vertices are (0,0), (w,0), (0,h), and (w,h), where w and h are positive integers.
here, find the number of triangles \delta in the plane that satisfy all of the following conditions: each vertex of \delta is a grid point, that is, has integer x- and y-coordinates. \delta and r shares no vertex. each vertex of \delta lies on the perimeter of r, and all the vertices belong to different sides of r. \delta contains at most k grid points strictly within itself (excluding its perimeter and vertices). 

"
p02651, Xor Battle,"there are two persons, numbered 0 and 1, and a variable x whose initial value is 0.
the two persons now play a game.
the game is played in n rounds. the following should be done in the i-th round (1 \leq i \leq n): replace x with x \oplus a_i, where \oplus represents bitwise xor. do nothing. 

 person 0 aims to have x=0 at the end of the game, while person 1 aims to have x \neq 0 at the end of the game. determine whether x becomes 0 at the end of the game when the two persons play optimally. solve t test cases for each input file. 
"
p02652, 01 Unbalanced,"given is a string s, where each character is 0, 1, or ?. consider making a string s' by replacing each occurrence of ? with 0 or 1 (we can choose the character for each ? independently).
let us define the unbalancedness of s' as follows: (the unbalancedness of s') = \max \{ the absolute difference between the number of occurrences of 0 and 1 between the l-th and r-th character of s (inclusive) :\ 1 \leq l \leq r \leq |s|\} find the minimum possible unbalancedness of s'. 
"
p02653, Range Set,"snuke has a string x of length n.
initially, every character in x is 0. snuke can do the following two operations any number of times in any order: choose a consecutive characters in x and replace each of them with 0. choose b consecutive characters in x and replace each of them with 1. find the number of different strings that x can be after snuke finishes doing operations.
this count can be enormous, so compute it modulo (10^9+7). 
"
p02654, Lamps and Buttons,"we have n lamps numbered 1 to n, and n buttons numbered 1 to n.
initially, lamp 1, 2, \cdots, a are on, and the other lamps are off. snuke and ringo will play the following game. first, ringo generates a permutation (p_1,p_2,\cdots,p_n) of  (1,2,\cdots,n).
the permutation is chosen from all n! possible permutations with equal probability, without being informed to snuke. 
 then, snuke does the following operation any number of times he likes: choose a lamp that is on at the moment. (the operation cannot be done if there is no such lamp.)
let lamp i be the chosen lamp.
press button i, which switches the state of lamp p_i. that is, lamp p_i will be turned off if it is on, and vice versa. 

 at every moment, snuke knows which lamps are on.
snuke wins if all the lamps are on, and he will surrender when it turns out that he cannot win.
what is the probability of winning when snuke plays optimally? let w be the probability of winning. then, w \times n! will be an integer.
compute w \times n! modulo (10^9+7). 
"
p02655, Fragile Balls,"we have n boxes numbered 1 to n, and m balls numbered 1 to m.
currently, ball i is in box a_i. you can do the following operation: choose a box containing two or more balls, pick up one of the balls from that box, and put it into another box. since the balls are very easy to break, you cannot move ball i more than c_i times in total.
within this limit, you can do the operation any number of times. your objective is to have ball i in box b_i for every i (1 \leq i \leq m).
determine whether this objective is achievable.
if it is, also find the minimum number of operations required to achieve it. 
"
p02656, Division into Multiples,"snuke has x+y balls.
x of them have an integer a written on them, and the other y of them have an integer b written on them. snuke will divide these balls into some number of groups.
here, every ball should be contained in exactly one group, and every group should contain one or more balls. a group is said to be good when the sum of the integers written on the balls in that group is a multiple of an integer c.
find the maximum possible number of good groups. solve t test cases for each input file. 
"
p02657, Multiplication 1,"compute a \times b. 
"
p02658, Multiplication 2,"given n integers a_1, ..., a_n, compute a_1 \times ... \times a_n. however, if the result exceeds 10^{18}, print -1 instead. 
"
p02659, Multiplication 3,"compute a \times b, truncate its fractional part, and print the result as an integer. 
"
p02660, Div Game,"given is a positive integer n. consider repeatedly applying the operation below on n: z can be represented as z=p^e, where p is a prime number and e is a positive integer; z divides n; z is different from all integers chosen in previous operations. 

 then, replace n with n/z. find the maximum number of times the operation can be applied. 
"
p02661, Count Median,"there are n integers x_1, x_2, \cdots, x_n, and we know that a_i \leq x_i \leq b_i.
find the number of different values that the median of x_1, x_2, \cdots, x_n can take. 
"
p02662, Knapsack for All Subsets,"given are a sequence of n positive integers a_1, a_2, \ldots, a_n and another positive integer s.
for a non-empty subset t of the set \{1, 2, \ldots , n \}, let us define f(t) as follows: f(t) is the number of different non-empty subsets \{x_1, x_2, \ldots , x_k \} of t such that a_{x_1}+a_{x_2}+\cdots +a_{x_k} = s. find the sum of f(t) over all 2^n-1 subsets t of \{1, 2, \ldots , n \}. since the sum can be enormous, print it modulo 998244353. 
"
p02663, Study Scheduling,"in this problem, we use the 24-hour clock. takahashi gets up exactly at the time h_1 : m_1 and goes to bed exactly at the time h_2 : m_2. (see sample inputs below for clarity.)
he has decided to study for k consecutive minutes while he is up.
what is the length of the period in which he can start studying? 
"
p02664, Postdocs,"for a string s consisting of the uppercase english letters p and d, let the doctoral and postdoctoral quotient of s be the total number of occurrences of d and pd in s as contiguous substrings. for example, if s = ppddp, it contains two occurrences of d and one occurrence of pd as contiguous substrings, so the doctoral and postdoctoral quotient of s is 3. we have a string t consisting of p, d, and ?. among the strings that can be obtained by replacing each ? in t with p or d, find one with the maximum possible doctoral and postdoctoral quotient. 
"
p02665, Folia,"given is an integer sequence of length n+1: a_0, a_1, a_2, \ldots, a_n. is there a binary tree of depth n such that, for each d = 0, 1, \ldots, n, there are exactly a_d leaves at depth d? if such a tree exists, print the maximum possible number of vertices in such a tree; otherwise, print -1. 
"
p02666, Urban Planning,"there are n towns numbered 1, 2, \cdots, n. some roads are planned to be built so that each of them connects two distinct towns bidirectionally. currently, there are no roads connecting towns. in the planning of construction, each town chooses one town different from itself and requests the following: roads are built so that the chosen town is reachable from itself using one or more roads. these requests from the towns are represented by an array p_1, p_2, \cdots, p_n. if p_i = -1, it means that town i has not chosen the request; if 1 \leq p_i \leq n, it means that town i has chosen town p_i. let k be the number of towns i such that p_i = -1. there are (n-1)^k ways in which the towns can make the requests. for each way to make requests, find the minimum number of roads needed to meet all the requests, and print the sum of those (n-1)^k numbers, modulo (10^9+7). 
"
p02667, Binary Programming,"takahashi has an empty string s and a variable x whose initial value is 0. also, we have a string t consisting of 0 and 1. now, takahashi will do the operation with the following two steps |t| times. insert a 0 or a 1 at any position of s of his choice. then, increment x by the sum of the digits in the odd positions (first, third, fifth, ...) of s. for example, if s is 01101, the digits in the odd positions are 0, 1, 1 from left to right, so x is incremented by 2. print the maximum possible final value of x in a sequence of operations such that s equals t in the end. 
"
p02668, Sorting Game,"takahashi and snuke came up with a game that uses a number sequence, as follows: prepare a sequence of length m consisting of integers between 0 and 2^n-1 (inclusive): a = a_1, a_2, \ldots, a_m. 
 snuke first does the operation below as many times as he likes: choose a positive integer d, and for each i (1 \leq i \leq m), in binary, set the d-th least significant bit of a_i to 0. (here the least significant bit is considered the 1-st least significant bit.) 

 after snuke finishes doing operations, takahashi tries to sort a in ascending order by doing the operation below some number of times. here a is said to be in ascending order when a_i \leq a_{i + 1} for all i (1 \leq i \leq m - 1). choose two adjacent elements of a: a_i and a_{i + 1}. if, in binary, these numbers differ in exactly one bit, swap a_i and a_{i + 1}. 

 there are 2^{nm} different sequences of length m consisting of integers between 0 and 2^n-1 that can be used in the game. how many among them have the following property: if used in the game, there is always a way for takahashi to sort the sequence in ascending order regardless of snuke's operations? find the count modulo (10^9 + 7). 
"
p02669, Pay to Win,"you start with the number 0 and you want to reach the number n. you can change the number, paying a certain amount of coins, with the following operations: multiply the number by 2, paying a coins. multiply the number by 3, paying b coins. multiply the number by 5, paying c coins. increase or decrease the number by 1, paying d coins. you can perform these operations in arbitrary order and an arbitrary number of times. what is the minimum number of coins you need to reach n? you have to solve t testcases. 
"
p02670, Joker,"tonight, in your favourite cinema they are giving the movie joker and all seats are occupied. in the cinema there are n rows with n seats each, forming an n\times n square. we denote with 1, 2,\dots, n the viewers in the first row (from left to right); with n+1, \dots, 2n the viewers in the second row (from left to right); and so on until the last row, whose viewers are denoted by n^2-n+1,\dots, n^2. at the end of the movie, the viewers go out of the cinema in a certain order: the i-th viewer leaving her seat is the one denoted by the number p_i. the viewer p_{i+1} waits until viewer p_i has left the cinema before leaving her seat.
to exit from the cinema, a viewer must move from seat to seat until she exits the square of seats (any side of the square is a valid exit). a viewer can move from a seat to one of its 4 adjacent seats (same row or same column).
while leaving the cinema, it might be that a certain viewer x goes through a seat currently occupied by viewer y; in that case viewer y will hate viewer x forever. each viewer chooses the way that minimizes the number of viewers that will hate her forever. compute the number of pairs of viewers (x, y) such that y will hate x forever. 
"
p02671, Strange Dance,"there are 3^n people dancing in circle.
we denote with 0,1,\dots, 3^{n}-1 the positions in the circle, starting from an arbitrary position and going around clockwise. initially each position in the circle is occupied by one person. the people are going to dance on two kinds of songs: salsa and rumba. when a salsa is played, the person in position i goes to position j, where j is the number obtained replacing all digits 1 with 2 and all digits 2 with 1 when reading i in base 3 (e.g., the person in position 46 goes to position 65). when a rumba is played, the person in position i moves to position i+1 (with the identification 3^n = 0). you are given a string t=t_1t_2\cdots t_{|t|} such that t_i=s if the i-th song is a salsa and t_i=r if it is a rumba.
after all the songs have been played, the person that initially was in position i is in position p_i.
compute the array p_0,p_1,\dots, p_{3^n-1}. 
"
p02672, Guess the Password,"this is an interactive task. you have to guess a secret password s. 
a password is a nonempty string whose length is at most l. 
the characters of a password can be lowercase and uppercase english letters (a, b, ... , z, a, b, ... , z) and digits (0, 1, ... , 9). in order to guess the secret password s you can ask queries.
a query is made of a valid password t, the answer to such query is the edit distance between s and t (the operations considered for the edit distance are: removal, insertion, substitution).
you can ask at most q queries. note: for a definition of edit distance (with operations: removal, insertion, substitution), see this wikipedia page. 
"
p02673, Random Pawn,"you are playing a game and your goal is to maximize your expected gain.
at the beginning of the game, a pawn is put, uniformly at random, at a position p\in\{1,2,\dots, n\}. the n positions are arranged on a circle (so that 1 is between n and 2). the game consists of turns. at each turn you can either end the game, and get a_p dollars (where p is the current position of the pawn), or pay b_p dollar to keep playing.
if you decide to keep playing, the pawn is randomly moved to one of the two adjacent positions p-1, p+1 (with the identifications 0 = n and n+1=1). what is the expected gain of an optimal strategy? note: the ""expected gain of an optimal strategy"" shall be defined as the supremum of the expected gain among all strategies such that the game ends in a finite number of turns. 
"
p02674,Preserving Clubs,"there are n people (with different names) and k clubs. for each club you know the list of members (so you have k unordered lists). each person can be a member of many clubs (and also 0 clubs) and two different clubs might have exactly the same members.
the value of the number k is the minimum possible such that the following property can be true for at least one configuration of clubs.
if every person changes her name (maintaining the property that all names are different) and you know the new k lists of members of the clubs (but you don't know which list corresponds to which club), you are sure that you would be able to match the old names with the new ones. count the number of such configurations of clubs (or say that there are more than 1000).
two configurations of clubs that can be obtained one from the other if the n people change their names are considered equal. formal statement:
a club is a (possibly empty) subset of \{1,\dots, n\} (the subset identifies the members, assuming that the people are indexed by the numbers 1, 2,\dots, n).
a configuration of clubs is an unordered collection of k clubs (not necessarily distinct).
given a permutation \sigma(1), \dots, \sigma(n) of \{1,\dots, n\} and a configuration of clubs l=\{c_1, c_2, \dots, c_k\}, we denote with \sigma(l) the configuration of clubs \{\sigma(c_1), \sigma(c_2), \dots, \sigma(c_k)\} (if c is a club,  \sigma(c)=\{\sigma(x):\, x\in c\}).
a configuration of clubs l is name-preserving if for any pair of distinct permutations \sigma\not=\tau, it holds \sigma(l)\not=\tau(l). you have to count the number of name-preserving configurations of clubs with the minimum possible number of clubs (so k is minimum). two configurations l_1, l_2 such that l_2=\sigma(l_1) (for some permutation \sigma) are considered equal.
if there are more than 1000 such configurations, print -1. 
"
p02675, ∴ (Therefore),"the cat snuke wants to play a popular japanese game called åtcoder, so iroha has decided to teach him japanese. when counting pencils in japanese, the counter word ""本"" follows the number. the pronunciation of this word varies depending on the number. specifically, the pronunciation of ""本"" in the phrase ""n 本"" for a positive integer n not exceeding 999 is as follows: hon when the digit in the one's place of n is 2, 4, 5, 7, or 9; pon when the digit in the one's place of n is 0, 1, 6 or 8; bon when the digit in the one's place of n is 3. given n, print the pronunciation of ""本"" in the phrase ""n 本"". 
"
p02676, ... (Triple Dots),"we have a string s consisting of lowercase english letters. if the length of s is at most k, print s without change. if the length of s exceeds k, extract the first k characters in s, append ... to the end of them, and print the result. 
"
p02677, : (Colon),"consider an analog clock whose hour and minute hands are a and b centimeters long, respectively. an endpoint of the hour hand and an endpoint of the minute hand are fixed at the same point, around which each hand rotates clockwise at constant angular velocity. it takes the hour and minute hands 12 hours and 1 hour to make one full rotation, respectively. at 0 o'clock, the two hands overlap each other. h hours and m minutes later, what is the distance in centimeters between the unfixed endpoints of the hands? 
"
p02678, .. (Double Dots),"there is a cave. the cave has n rooms and m passages. the rooms are numbered 1 to n, and the passages are numbered 1 to m. passage i connects room a_i and room b_i bidirectionally. one can travel between any two rooms by traversing passages. room 1 is a special room with an entrance from the outside. it is dark in the cave, so we have decided to place a signpost in each room except room 1. the signpost in each room will point to one of the rooms directly connected to that room with a passage. since it is dangerous in the cave, our objective is to satisfy the condition below for each room except room 1. if you start in that room and repeatedly move to the room indicated by the signpost in the room you are in, you will reach room 1 after traversing the minimum number of passages possible. determine whether there is a way to place signposts satisfying our objective, and print one such way if it exists. 
"
p02679, ∙ (Bullet),"we have caught n sardines. the deliciousness and fragrantness of the i-th sardine is a_i and b_i, respectively. we will choose one or more of these sardines and put them into a cooler. however, two sardines on bad terms cannot be chosen at the same time. the i-th and j-th sardines (i \neq j) are on bad terms if and only if a_i \cdot a_j + b_i \cdot b_j = 0. in how many ways can we choose the set of sardines to put into the cooler? since the count can be enormous, print it modulo 1000000007. 
"
p02680, . (Single Dot),"there is a grass field that stretches infinitely. in this field, there is a negligibly small cow. let (x, y) denote the point that is x\ \mathrm{cm} south and y\ \mathrm{cm} east of the point where the cow stands now. the cow itself is standing at (0, 0). there are also n north-south lines and m east-west lines drawn on the field. the i-th north-south line is the segment connecting the points (a_i, c_i) and (b_i, c_i), and the j-th east-west line is the segment connecting the points (d_j, e_j) and (d_j, f_j). what is the area of the region the cow can reach when it can move around as long as it does not cross the segments (including the endpoints)? if this area is infinite, print inf instead. 
"
p02681, Registration,"takahashi wants to be a member of some web service. he tried to register himself with the id s, which turned out to be already used by another user. thus, he decides to register using a string obtained by appending one character at the end of s as his id. he is now trying to register with the id t. determine whether this string satisfies the property above. 
"
p02682, Easy Linear Programming,"we have a cards, each of which has an integer 1 written on it. similarly, we also have b cards with 0s and c cards with -1s. we will pick up k among these cards. what is the maximum possible sum of the numbers written on the cards chosen? 
"
p02683, Skill Up,"takahashi, who is a novice in competitive programming, wants to learn m algorithms.
initially, his understanding level of each of the m algorithms is 0. takahashi is visiting a bookstore, where he finds n books on algorithms.
the i-th book (1\leq i\leq n) is sold for c_i yen (the currency of japan). if he buys and reads it, his understanding level of the j-th algorithm will increase by a_{i,j} for each j (1\leq j\leq m).
there is no other way to increase the understanding levels of the algorithms. takahashi's objective is to make his understanding levels of all the m algorithms x or higher. determine whether this objective is achievable. if it is achievable, find the minimum amount of money needed to achieve it. 
"
p02684, Teleporter,"the kingdom of takahashi has n towns, numbered 1 through n. there is one teleporter in each town. the teleporter in town i (1 \leq i \leq n) sends you to town a_i. takahashi, the king, loves the positive integer k. the selfish king wonders what town he will be in if he starts at town 1 and uses a teleporter exactly k times from there. help the king by writing a program that answers this question. 
"
p02685, Colorful Blocks,"there are n blocks arranged in a row. let us paint these blocks. we will consider two ways to paint the blocks different if and only if there is a block painted in different colors in those two ways. find the number of ways to paint the blocks under the following conditions: for each block, use one of the m colors, color 1 through color m, to paint it. it is not mandatory to use all the colors. there may be at most k pairs of adjacent blocks that are painted in the same color. since the count may be enormous, print it modulo 998244353. 
"
p02686, Bracket Sequencing,"a bracket sequence is a string that is one of the following: an empty string; the concatenation of (, a, and ) in this order, for some bracket sequence a ; the concatenation of a and b in this order, for some non-empty bracket sequences a and b / given are n strings s_i. can a bracket sequence be formed by concatenating all the n strings in some order? 
"
p02687, A?C,"atcoder inc. holds a contest every saturday. there are two types of contests called abc and arc, and just one of them is held at a time. the company holds these two types of contests alternately: an arc follows an abc and vice versa. given a string s representing the type of the contest held last week, print the string representing the type of the contest held this week. 
"
p02688, Trick or Treat,"n snukes called snuke 1, snuke 2, ..., snuke n live in a town. there are k kinds of snacks sold in this town, called snack 1, snack 2, ..., snack k. the following d_i snukes have snack i: snuke a_{i, 1}, a_{i, 2}, \cdots, a_{i, {d_i}}. takahashi will walk around this town and make mischief on the snukes who have no snacks. how many snukes will fall victim to takahashi's mischief? 
"
p02689, Peaks,"there are n observatories in atcoder hill, called obs. 1, obs. 2, ..., obs. n. the elevation of obs. i is h_i.
there are also m roads, each connecting two different observatories. road j connects obs. a_j and obs. b_j. obs. i is said to be good when its elevation is higher than those of all observatories that can be reached from obs. i using just one road.
note that obs. i is also good when no observatory can be reached from obs. i using just one road. how many good observatories are there? 
"
p02690, I hate Factorization,"give a pair of integers (a, b) such that a^5-b^5 = x.
it is guaranteed that there exists such a pair for the given integer x. 
"
p02691,Destruct in 5s,"you are the top spy of atcoder kingdom. to prevent the stolen secret from being handed to aldebaran kingdom, you have sneaked into the party where the transaction happens. there are n attendees in the party, and they are given attendee numbers from 1 through n. the height of attendee i is a_i. according to an examination beforehand, you know that a pair of attendees satisfying the condition below will make the transaction. the absolute difference of their attendee numbers is equal to the sum of their heights. there are \frac{n(n-1)}{2} ways to choose two from the n attendees and make a pair. among them, how many satisfy the condition above? p.s.: we cannot let you know the secret. 
"
p02692, Three Variables Game,"there is a game that involves three variables, denoted a, b, and c. as the game progresses, there will be n events where you are asked to make a choice.
each of these choices is represented by a string s_i. if s_i is ab, you must add 1 to a or b then subtract 1 from the other; if s_i is ac, you must add 1 to a or c then subtract 1 from the other; if s_i is bc, you must add 1 to b or c then subtract 1 from the other. after each choice, none of a, b, and c should be negative. determine whether it is possible to make n choices under this condition. if it is possible, also give one such way to make the choices. 
"
p02693, We Love Golf,"takahashi the jumbo will practice golf. his objective is to get a carry distance that is a multiple of k, while he can only make a carry distance of between a and b (inclusive). if he can achieve the objective, print ok; if he cannot, print ng. 
"
p02694, 1%,"takahashi has a deposit of 100 yen (the currency of japan) in atcoder bank. the bank pays an annual interest rate of 1 % compounded annually. (a fraction of less than one yen is discarded.) assuming that nothing other than the interest affects takahashi's balance, in how many years does the balance reach x yen or above for the first time? 
"
p02695, Many Requirements,"given are positive integers n, m, q, and q quadruples of integers ( a_i , b_i , c_i , d_i ). consider a sequence a satisfying the following conditions: a is a sequence of n positive integers. 1 \leq a_1 \leq a_2 \le \cdots \leq a_n \leq m. let us define a score of this sequence as follows: the score is the sum of d_i over all indices i such that a_{b_i} - a_{a_i} = c_i. (if there is no such i, the score is 0.) find the maximum possible score of a. 
"
p02696, Floor Function,"given are integers a, b, and n. find the maximum possible value of floor(ax/b) - a × floor(x/b) for a non-negative integer x not greater than n. here floor(t) denotes the greatest integer not greater than the real number t. 
"
p02697, Rotation Matching,"you are going to hold a competition of one-to-one game called atcoder janken. (janken is the japanese name for rock-paper-scissors.)
n players will participate in this competition, and they are given distinct integers from 1 through n.
the arena has m playing fields for two players. you need to assign each playing field two distinct integers between 1 and n (inclusive).
you cannot assign the same integer to multiple playing fields.
the competition consists of n rounds, each of which proceeds as follows: for each player, if there is a playing field that is assigned the player's integer, the player goes to that field and fight the other player who comes there. then, each player adds 1 to its integer. if it becomes n+1, change it to 1. you want to ensure that no player fights the same opponent more than once during the n rounds.
print an assignment of integers to the playing fields satisfying this condition.
it can be proved that such an assignment always exists under the constraints given. 
"
p02698, LIS on Tree,"we have a tree with n vertices, whose i-th edge connects vertex u_i and vertex v_i.
vertex i has an integer a_i written on it.
for every integer k from 1 through n, solve the following problem: we will make a sequence by lining up the integers written on the vertices along the shortest path from vertex 1 to vertex k, in the order they appear. find the length of the longest increasing subsequence of this sequence. here, the longest increasing subsequence of a sequence a of length l is the subsequence a_{i_1} , a_{i_2} , ... , a_{i_m} with the greatest possible value of m such that 1 \leq i_1 &lt; i_2 &lt; ... &lt; i_m \leq l and a_{i_1} &lt; a_{i_2} &lt; ... &lt; a_{i_m}. 
"
p02699, Sheep and Wolves,"there are s sheep and w wolves. if the number of wolves is greater than or equal to that of sheep, the wolves will attack the sheep. if the wolves will attack the sheep, print unsafe; otherwise, print safe. 
"
p02700, Battle,"takahashi and aoki will have a battle using their monsters. the health and strength of takahashi's monster are a and b, respectively, and those of aoki's monster are c and d, respectively. the two monsters will take turns attacking, in the order takahashi's, aoki's, takahashi's, aoki's, ...
here, an attack decreases the opponent's health by the value equal to the attacker's strength.
the monsters keep attacking until the health of one monster becomes 0 or below. the person with the monster whose health becomes 0 or below loses, and the other person wins. if takahashi will win, print yes; if he will lose, print no. 
"
p02701, gacha,"you drew lottery n times. in the i-th draw, you got an item of the kind represented by a string s_i. how many kinds of items did you get? 
"
p02702, Multiple of 2019,"given is a string s consisting of digits from 1 through 9. find the number of pairs of integers (i,j) (1 ≤ i ≤ j ≤ |s|) that satisfy the following condition: condition: in base ten, the i-th through j-th characters of s form an integer that is a multiple of 2019. 
"
p02703, Two Currencies,"there are n cities numbered 1 to n, connected by m railroads. you are now at city 1, with 10^{100} gold coins and s silver coins in your pocket. the i-th railroad connects city u_i and city v_i bidirectionally, and a one-way trip costs a_i silver coins and takes b_i minutes.
you cannot use gold coins to pay the fare. there is an exchange counter in each city. at the exchange counter in city i, you can get c_i silver coins for 1 gold coin.
the transaction takes d_i minutes for each gold coin you give.
you can exchange any number of gold coins at each exchange counter. for each t=2, ..., n, find the minimum time needed to travel from city 1 to city t. you can ignore the time spent waiting for trains. 
"
p02704, I hate Matrix Construction,"given are an integer n and arrays s, t, u, and v, each of length n.
construct an n×n matrix a that satisfy the following conditions: a_{i,j} is an integer. 0 \leq a_{i,j}  \lt 2^{64}. if s_{i} = 0, the bitwise and of the elements in the i-th row is u_{i}. if s_{i} = 1, the bitwise or of the elements in the i-th row is u_{i}. if t_{i} = 0, the bitwise and of the elements in the i-th column is v_{i}. if t_{i} = 1, the bitwise or of the elements in the i-th column is v_{i}. however, there may be cases where no matrix satisfies the conditions. 
"
p02705, Circle Pond,"print the circumference of a circle of radius r. 
"
p02706, Homework,"takahashi has n days of summer vacation. his teacher gave him m summer assignments. it will take a_i days for him to do the i-th assignment. he cannot do multiple assignments on the same day, or hang out on a day he does an assignment. what is the maximum number of days takahashi can hang out during the vacation if he finishes all the assignments during this vacation? if takahashi cannot finish all the assignments during the vacation, print -1 instead. 
"
p02707, management,"a company has n members, who are assigned id numbers 1, ..., n. every member, except the member numbered 1, has exactly one immediate boss with a smaller id number. when a person x is the immediate boss of a person y, the person y is said to be an immediate subordinate of the person x. you are given the information that the immediate boss of the member numbered i is the member numbered a_i. for each member, find how many immediate subordinates it has. 
"
p02708, Sum of Large Numbers,"we have n+1 integers: 10^{100}, 10^{100}+1, ..., 10^{100}+n. we will choose k or more of these integers. find the number of possible values of the sum of the chosen numbers, modulo (10^9+7). 
"
p02709, Active Infants,"there are n children standing in a line from left to right. the activeness of the i-th child from the left is a_i. you can rearrange these children just one time in any order you like. when a child who originally occupies the x-th position from the left in the line moves to the y-th position from the left, that child earns a_x \times |x-y| happiness points. find the maximum total happiness points the children can earn. 
"
p02710, path pass i,"we have a tree with n vertices numbered 1 to n. the i-th edge in this tree connects vertex a_i and b_i.
additionally, each vertex is painted in a color, and the color of vertex i is c_i. here, the color of each vertex is represented by an integer between 1 and n (inclusive). the same integer corresponds to the same color; different integers correspond to different colors. for each k=1, 2, ..., n, solve the following problem: find the number of simple paths that visit a vertex painted in the color k one or more times. note: the simple paths from vertex u to v and from v to u are not distinguished. 
"
p02711, Lucky 7,"given is a three-digit integer n. does n contain the digit 7? if so, print yes; otherwise, print no. 
"
p02712, FizzBuzz Sum,"let us define the fizzbuzz sequence a_1,a_2,... as follows: if both 3 and 5 divides i, a_i=\mbox{fizzbuzz}. if the above does not hold but 3 divides i, a_i=\mbox{fizz}. if none of the above holds but 5 divides i, a_i=\mbox{buzz}. if none of the above holds, a_i=i. find the sum of all numbers among the first n terms of the fizzbuzz sequence. 
"
p02713, Sum of gcd of Tuples (Easy),"find \displaystyle{\sum_{a=1}^{k}\sum_{b=1}^{k}\sum_{c=1}^{k} \gcd(a,b,c)}. here \gcd(a,b,c) denotes the greatest common divisor of a, b, and c. 
"
p02714, RGB Triplets,"we have a string s of length n consisting of r, g, and b. find the number of triples (i,~j,~k)~(1 \leq i &lt; j &lt; k \leq n) that satisfy both of the following conditions: s_i \neq s_j, s_i \neq s_k, and s_j \neq s_k. j - i \neq k - j. 

"
p02715, Sum of gcd of Tuples (Hard),"consider sequences \{a_1,...,a_n\} of length n consisting of integers between 1 and k (inclusive). there are k^n such sequences. find the sum of \gcd(a_1, ..., a_n) over all of them. since this sum can be enormous, print the value modulo (10^9+7). here \gcd(a_1, ..., a_n) denotes the greatest common divisor of a_1, ..., a_n. 
"
p02716, Select Half,"given is an integer sequence a_1, ..., a_n of length n. we will choose exactly \left\lfloor \frac{n}{2} \right\rfloor elements from this sequence so that no two adjacent elements are chosen. find the maximum possible sum of the chosen elements. here \lfloor x \rfloor denotes the greatest integer not greater than x. 
"
p02717, ABC Swap,"we have three boxes a, b, and c, each of which contains an integer.
currently, the boxes a, b, and c contain the integers x, y, and z, respectively.
we will now do the operations below in order. find the content of each box afterward.   swap the contents of the boxes a and b swap the contents of the boxes a and c 

"
p02718, Popular Vote,"we have held a popularity poll for n items on sale. item i received a_i votes. from these n items, we will select m as popular items. however, we cannot select an item with less than \dfrac{1}{4m} of the total number of votes. if m popular items can be selected, print yes; otherwise, print no. 
"
p02719, Replacing Integer,"given any integer x, aoki can do the operation below. operation: replace x with the absolute difference of x and k. you are given the initial value of an integer n. find the minimum possible value taken by n after aoki does the operation zero or more times. 
"
p02720, Lunlun Number,"a positive integer x is said to be a lunlun number if and only if the following condition is satisfied: in the base ten representation of x (without leading zeros), for every pair of two adjacent digits, the absolute difference of those digits is at most 1. for example, 1234, 1, and 334 are lunlun numbers, while none of 31415, 119, or 13579 is. you are given a positive integer k. find the k-th smallest lunlun number. 
"
p02721, Yutori,"takahashi has decided to work on k days of his choice from the n days starting with tomorrow. you are given an integer c and a string s. takahashi will choose his workdays as follows: after working for a day, he will refrain from working on the subsequent c days. if the i-th character of s is x, he will not work on day i, where day 1 is tomorrow, day 2 is the day after tomorrow, and so on. find all days on which takahashi is bound to work. 
"
p02722, Division or Subtraction,"given is a positive integer n. we will choose an integer k between 2 and n (inclusive), then we will repeat the operation below until n becomes less than k. operation: if k divides n, replace n with n/k; otherwise, replace n with n-k. in how many choices of k will n become 1 in the end? 
"
p02723, Coffee,"a string of length 6 consisting of lowercase english letters is said to be coffee-like if and only if its 3-rd and 4-th characters are equal and its 5-th and 6-th characters are also equal.
given a string s, determine whether it is coffee-like. 
"
p02724, Golden Coins,"takahashi loves gold coins. he gains 1000 happiness points for each 500-yen coin he has and gains 5 happiness points for each 5-yen coin he has. (yen is the currency of japan.) takahashi has x yen. if he exchanges his money so that he will gain the most happiness points, how many happiness points will he earn? (we assume that there are six kinds of coins available: 500-yen, 100-yen, 50-yen, 10-yen, 5-yen, and 1-yen coins.) 
"
p02725, Traveling Salesman around Lake,"there is a circular pond with a perimeter of k meters, and n houses around them. the i-th house is built at a distance of a_i meters from the northmost point of the pond, measured clockwise around the pond. when traveling between these houses, you can only go around the pond. find the minimum distance that needs to be traveled when you start at one of the houses and visit all the n houses. 
"
p02726, Line++,"we have an undirected graph g with n vertices numbered 1 to n and n edges as follows: for each i=1,2,...,n-1, there is an edge between vertex i and vertex i+1. there is an edge between vertex x and vertex y. for each k=1,2,...,n-1, solve the problem below: find the number of pairs of integers (i,j) (1 \leq i &lt; j \leq n) such that the shortest distance between vertex i and vertex j in g is k. 

"
p02727, Red and Green Apples,"you are going to eat x red apples and y green apples.
you have a red apples of deliciousness p_1,p_2, \dots, p_a, b green apples of deliciousness q_1,q_2, \dots, q_b, and c colorless apples of deliciousness r_1,r_2, \dots, r_c.
before eating a colorless apple, you can paint it red or green, and it will count as a red or green apple, respectively.
from the apples above, you will choose the apples to eat while making the sum of the deliciousness of the eaten apples as large as possible.
find the maximum possible sum of the deliciousness of the eaten apples that can be achieved when optimally coloring zero or more colorless apples. 
"
p02728, Distributing Integers,"we have a tree with n vertices numbered 1 to n. the i-th edge in this tree connects vertex a_i and b_i.
for each k=1, ..., n, solve the problem below: first, write 1 on vertex k. choose a vertex that still does not have a number written on it and is adjacent to a vertex with a number already written on it. if there are multiple such vertices, choose one of them at random. 

 

 find the number of ways in which we can write the numbers on the vertices, modulo (10^9+7). 

"
p02729, The Number of Even Pairs,"we have n+m balls, each of which has an integer written on it.
it is known that:   the numbers written on n of the balls are even. the numbers written on m of the balls are odd. find the number of ways to choose two of the n+m balls (disregarding order) so that the sum of the numbers written on them is even.
it can be shown that this count does not depend on the actual values written on the balls. 
"
p02730, String Palindrome,"a string s of an odd length is said to be a strong palindrome if and only if all of the following conditions are satisfied: s is a palindrome. let n be the length of s. the string formed by the 1-st through ((n-1)/2)-th characters of s is a palindrome. the string consisting of the (n+3)/2-st through n-th characters of s is a palindrome. determine whether s is a strong palindrome. 
"
p02731, Maximum Volume,"given is a positive integer l.
find the maximum possible volume of a rectangular cuboid whose sum of the dimensions (not necessarily integers) is l. 
"
p02732, Banned K,"we have n balls. the i-th ball has an integer a_i written on it.
for each k=1, 2, ..., n, solve the following problem and print the answer.   find the number of ways to choose two distinct balls (disregarding order) from the n-1 balls other than the k-th ball so that the integers written on them are equal. 

"
p02733, Dividing Chocolate,"we have a chocolate bar partitioned into h horizontal rows and w vertical columns of squares. the square (i, j) at the i-th row from the top and the j-th column from the left is dark if s_{i,j} is 0, and white if s_{i,j} is 1. we will cut the bar some number of times to divide it into some number of blocks. in each cut, we cut the whole bar by a line running along some boundaries of squares from end to end of the bar. how many times do we need to cut the bar so that every block after the cuts has k or less white squares? 
"
p02734, Knapsack for All Segments,"given are a sequence of n integers a_1, a_2, \ldots, a_n and a positive integer s.
for a pair of integers (l, r) such that 1\leq l \leq r \leq n, let us define f(l, r) as follows: f(l, r) is the number of sequences of integers (x_1, x_2, \ldots , x_k) such that l \leq x_1 &lt; x_2 &lt; \cdots &lt; x_k \leq r and a_{x_1}+a_{x_2}+\cdots +a_{x_k} = s. find the sum of f(l, r) over all pairs of integers (l, r) such that 1\leq l \leq r\leq n. since this sum can be enormous, print it modulo 998244353. 
"
p02735, Range Flip Find Route,"consider a grid with h rows and w columns of squares. let (r, c) denote the square at the r-th row from the top and the c-th column from the left.
each square is painted black or white. the grid is said to be good if and only if the following condition is satisfied: from (1, 1), we can reach (h, w) by moving one square right or down repeatedly, while always being on a white square. note that (1, 1) and (h, w) must be white if the grid is good. your task is to make the grid good by repeating the operation below. find the minimum number of operations needed to complete the task. it can be proved that you can always complete the task in a finite number of operations. choose four integers r_0, c_0, r_1, c_1(1 \leq r_0 \leq r_1 \leq h, 1 \leq c_0 \leq c_1 \leq w). for each pair r, c (r_0 \leq r \leq r_1, c_0 \leq c \leq c_1), invert the color of (r, c) - that is, from white to black and vice versa. 

"
p02736, 123 Triangle,"given is a sequence of n digits a_1a_2\ldots a_n, where each element is 1, 2, or 3.
let x_{i,j} defined as follows: x_{1,j} := a_j \quad (1 \leq j \leq n) x_{i,j} := | x_{i-1,j} - x_{i-1,j+1} | \quad (2 \leq i \leq n and 1 \leq j \leq n+1-i) find x_{n,1}. 
"
p02737, Giant Graph,"given are simple undirected graphs x, y, z, with n vertices each and m_1, m_2, m_3 edges, respectively.
the vertices in x, y, z are respectively called x_1, x_2, \dots, x_n, y_1, y_2, \dots, y_n, z_1, z_2, \dots, z_n.
the edges in x, y, z are respectively (x_{a_i}, x_{b_i}), (y_{c_i}, y_{d_i}), (z_{e_i}, z_{f_i}). based on x, y, z, we will build another undirected graph w with n^3 vertices.
there are n^3 ways to choose a vertex from each of the graphs x, y, z. each of these choices corresponds to the vertices in w one-to-one. let (x_i, y_j, z_k) denote the vertex in w corresponding to the choice of x_i, y_j, z_k. we will span edges in w as follows: for each edge (x_u, x_v) in x and each w, l, span an edge between (x_u, y_w, z_l) and (x_v, y_w, z_l). for each edge (y_u, y_v) in y and each w, l, span an edge between (x_w, y_u, z_l) and (x_w, y_v, z_l). for each edge (z_u, z_v) in z and each w, l, span an edge between (x_w, y_l, z_u) and (x_w, y_l, z_v). then, let the weight of the vertex (x_i, y_j, z_k) in w be 1,000,000,000,000,000,000^{(i +j + k)} = 10^{18(i + j + k)}. find the maximum possible total weight of the vertices in an independent set in w, and print that total weight modulo 998,244,353. 
"
p02738, Merge Triplets,"given is a positive integer n.
find the number of permutations (p_1,p_2,\cdots,p_{3n}) of (1,2,\cdots,3n) that can be generated through the procedure below.
this number can be enormous, so print it modulo a prime number m. make n sequences a_1,a_2,\cdots,a_n of length 3 each, using each of the integers 1 through 3n exactly once. among the elements that are at the beginning of one of the sequences a_i that is non-empty, let the smallest be x. remove x from the sequence, and add x at the end of p. 

 

"
p02739, Topology,"given are a positive integer n and a sequence of length 2^n consisting of 0s and 1s: a_0,a_1,\ldots,a_{2^n-1}.
determine whether there exists a closed curve c that satisfies the condition below for all 2^n sets s \subseteq \{0,1,\ldots,n-1 \}. if the answer is yes, construct one such closed curve. let x = \sum_{i \in s} 2^i and b_s be the set of points \{ (i+0.5,0.5) | i \in s \}. if there is a way to continuously move the closed curve c without touching b_s so that every point on the closed curve has a negative y-coordinate, a_x = 1. if there is no such way, a_x = 0. for instruction on printing a closed curve, see output below. 
"
p02740, Jewelry Box,"there are n jewelry shops numbered 1 to n. shop i (1 \leq i \leq n) sells k_i kinds of jewels.
the j-th of these jewels (1 \leq j \leq k_i) has a size and price of s_{i,j} and p_{i,j}, respectively, and the shop has c_{i,j} jewels of this kind in stock. a jewelry box is said to be good if it satisfies all of the following conditions: for each of the jewelry shops, the box contains one jewel purchased there. restriction i (1 \leq i \leq m): (the size of the jewel purchased at shop v_i)\leq (the size of the jewel purchased at shop u_i)+w_i 

 answer q questions.
in the i-th question, given an integer a_i, find the minimum total price of jewels that need to be purchased to make a_i good jewelry boxes. if it is impossible to make a_i good jewelry boxes, report that fact. 
"
p02741, Kth Term,"print the k-th element of the following sequence of length 32: 
1, 1, 1, 2, 1, 2, 1, 5, 2, 2, 1, 5, 1, 2, 1, 14, 1, 5, 1, 5, 2, 2, 1, 15, 2, 2, 5, 4, 1, 4, 1, 51

"
p02742, Bishop,"we have a board with h horizontal rows and w vertical columns of squares.
there is a bishop at the top-left square on this board.
how many squares can this bishop reach by zero or more movements? here the bishop can only move diagonally.
more formally, the bishop can move from the square at the r_1-th row (from the top) and the c_1-th column (from the left) to the square at the r_2-th row and the c_2-th column if and only if exactly one of the following holds: r_1 + c_1 = r_2 + c_2 r_1 - c_1 = r_2 - c_2 for example, in the following figure, the bishop can move to any of the red squares in one move:  
"
p02743, Sqrt Inequality,"does \sqrt{a} + \sqrt{b} &lt; \sqrt{c} hold? 
"
p02744, String Equivalence,"in this problem, we only consider strings consisting of lowercase english letters. strings s and t are said to be isomorphic when the following conditions are satisfied: |s| = |t| holds. s_i = s_j and t_i = t_j. s_i \neq s_j and t_i \neq t_j. 

 for example, abcac and zyxzx are isomorphic, while abcac and ppppp are not. a string s is said to be in normal form when the following condition is satisfied: for every string t that is isomorphic to s, s \leq t holds. here \leq denotes lexicographic comparison. for example, abcac is in normal form, but zyxzx is not since it is isomorphic to abcac, which is lexicographically smaller than zyxzx. you are given an integer n.
print all strings of length n that are in normal form, in lexicographically ascending order. 
"
p02745, Three Substrings,"snuke has a string s.
from this string, anuke, bnuke, and cnuke obtained strings a, b, and c, respectively, as follows: choose a non-empty (contiguous) substring of s (possibly s itself). then, replace some characters (possibly all or none) in it with ?s. for example, if s is mississippi, we can choose the substring ssissip and replace its 1-st and 3-rd characters with ? to obtain ?s?ssip. you are given the strings a, b, and c.
find the minimum possible length of s. 
"
p02746, Fractal Shortest Path,"for a non-negative integer k, we define a fractal of level k as follows: a fractal of level 0 is a grid with just one white square. the central subgrid consists of only black squares. each of the other eight subgrids is a fractal of level k-1. 

 for example, a fractal of level 2 is as follows:  in a fractal of level 30, let (r, c) denote the square at the r-th row from the top and the c-th column from the left. you are given q quadruples of integers (a_i, b_i, c_i, d_i).
for each quadruple, find the distance from (a_i, b_i) to (c_i, d_i). here the distance from (a, b) to (c, d) is the minimum integer n that satisfies the following condition: (x_0, y_0) = (a, b) (x_n, y_n) = (c, d) for every i (0 \leq i \leq n-1), (x_i, y_i) and (x_{i+1}, y_{i+1}) share a side. 

 

"
p02747, Hitachi String,"a hitachi string is a concatenation of one or more copies of the string hi. for example, hi and hihi are hitachi strings, while ha and hii are not. given a string s, determine whether s is a hitachi string. 
"
p02748, Nice Shopping,"you are visiting a large electronics store to buy a refrigerator and a microwave. the store sells a kinds of refrigerators and b kinds of microwaves. the i-th refrigerator ( 1 \le i \le a ) is sold at a_i yen (the currency of japan), and the j-th microwave ( 1 \le j \le b ) is sold at b_j yen. you have m discount tickets. with the i-th ticket ( 1 \le i \le m ), you can get a discount of c_i yen from the total price when buying the x_i-th refrigerator and the y_i-th microwave together. only one ticket can be used at a time. you are planning to buy one refrigerator and one microwave. find the minimum amount of money required. 
"
p02749, ThREE,"we have a tree with n vertices. the vertices are numbered 1 to n, and the i-th edge connects vertex a_i and vertex b_i. takahashi loves the number 3. he is seeking a permutation p_1, p_2, \ldots , p_n of integers from 1 to n satisfying the following condition: for every pair of vertices (i, j), if the distance between vertex i and vertex j is 3, the sum or product of p_i and p_j is a multiple of 3. here the distance between vertex i and vertex j is the number of edges contained in the shortest path from vertex i to vertex j. help takahashi by finding a permutation that satisfies the condition. 
"
p02750, Manga Market,"there are n stores called store 1, store 2, \cdots, store n. takahashi, who is at his house at time 0, is planning to visit some of these stores. it takes takahashi one unit of time to travel from his house to one of the stores, or between any two stores. if takahashi reaches store i at time t, he can do shopping there after standing in a queue for a_i \times t + b_i units of time. (we assume that it takes no time other than waiting.) all the stores close at time t + 0.5. if takahashi is standing in a queue for some store then, he cannot do shopping there. takahashi does not do shopping more than once in the same store. find the maximum number of times he can do shopping before time t + 0.5. 
"
p02751, Odd Sum Rectangles,"we have a grid with (2^n - 1) rows and (2^m-1) columns.
you are asked to write 0 or 1 in each of these squares.
let a_{i,j} be the number written in the square at the i-th row from the top and the j-th column from the left. for a quadruple of integers (i_1, i_2, j_1, j_2) such that 1\leq i_1 \leq i_2\leq 2^n-1, 1\leq j_1 \leq j_2\leq 2^m-1, let
s(i_1, i_2, j_1, j_2) = \displaystyle \sum_{r=i_1}^{i_2}\sum_{c=j_1}^{j_2}a_{r,c}.
then, let the oddness of the grid be the number of quadruples (i_1, i_2, j_1, j_2) such that s(i_1, i_2, j_1, j_2) is odd. find a way to fill in the grid that maximizes its oddness. 
"
p02752, Preserve Diameter,"we have a tree g with n vertices numbered 1 to n.
the i-th edge of g connects vertex a_i and vertex b_i. consider adding zero or more edges in g, and let h be the graph resulted. find the number of graphs h that satisfy the following conditions, modulo 998244353. h does not contain self-loops or multiple edges. the diameters of g and h are equal. for every pair of vertices in h that is not directly connected by an edge, the addition of an edge directly connecting them would reduce the diameter of the graph. 

"
p02753, Station and Bus,"in atcoder city, there are three stations numbered 1, 2, and 3. each of these stations is operated by one of the two railway companies, a and b. a string s of length 3 represents which company operates each station. if s_i is a, company a operates station i; if s_i is b, company b operates station i. to improve the transportation condition, for each pair of a station operated by company a and one operated by company b, there will be a bus service connecting them. determine if there is a pair of stations that will be connected by a bus service. 
"
p02754, Count Balls,"takahashi has many red balls and blue balls. now, he will place them in a row. initially, there is no ball placed. takahashi, who is very patient, will do the following operation 10^{100} times: place a blue balls at the end of the row of balls already placed. then, place b red balls at the end of the row. how many blue balls will be there among the first n balls in the row of balls made this way? 
"
p02755, Tax Increase,"find the price of a product before tax such that, when the consumption tax rate is 8 percent and 10 percent, the amount of consumption tax levied on it is a yen and b yen, respectively. (yen is the currency of japan.) here, the price before tax must be a positive integer, and the amount of consumption tax is rounded down to the nearest integer. if multiple prices satisfy the condition, print the lowest such price; if no price satisfies the condition, print -1. 
"
p02756, String Formation,"takahashi has a string s consisting of lowercase english letters. starting with this string, he will produce a new one in the procedure given as follows. the procedure consists of q operations. in operation i (1 \leq i \leq q), an integer t_i is provided, which means the following: if t_i = 1: reverse the string s. 
 if t_i = 2: an integer f_i and a lowercase english letter c_i are additionally provided. if f_i = 1 : add c_i to the beginning of the string s. if f_i = 2 : add c_i to the end of the string s. 

 help takahashi by finding the final string that results from the procedure. 
"
p02757, Divisible Substring,"takahashi has a string s of length n consisting of digits from 0 through 9. he loves the prime number p. he wants to know how many non-empty (contiguous) substrings of s - there are n \times (n + 1) / 2 of them - are divisible by p when regarded as integers written in base ten. here substrings starting with a 0 also count, and substrings originated from different positions in s are distinguished, even if they are equal as strings or integers. compute this count to help takahashi. 
"
p02758, Removing Robots,"there are n robots numbered 1 to n placed on a number line. robot i is placed at coordinate x_i. when activated, it will travel the distance of d_i in the positive direction, and then it will be removed from the number line. all the robots move at the same speed, and their sizes are ignorable. takahashi, who is a mischievous boy, can do the following operation any number of times (possibly zero) as long as there is a robot remaining on the number line. choose a robot and activate it. this operation cannot be done when there is a robot moving. while robot i is moving, if it touches another robot j that is remaining in the range [x_i, x_i + d_i) on the number line, robot j also gets activated and starts moving. this process is repeated recursively. how many possible sets of robots remaining on the number line are there after takahashi does the operation some number of times? compute this count modulo 998244353, since it can be enormous. 
"
p02759, Duplex Printing,"takahashi wants to print a document with n pages double-sided, where two pages of data can be printed on one sheet of paper. at least how many sheets of paper does he need? 
"
p02760, Bingo,"we have a bingo card with a 3\times3 grid. the square at the i-th row from the top and the j-th column from the left contains the number a_{i, j}. the mc will choose n numbers, b_1, b_2, \cdots, b_n. if our bingo sheet contains some of those numbers, we will mark them on our sheet. determine whether we will have a bingo when the n numbers are chosen, that is, the sheet will contain three marked numbers in a row, column, or diagonal. 
"
p02761, Guess The Number,"if there is an integer not less than 0 satisfying the following conditions, print the smallest such integer; otherwise, print -1. the integer has exactly n digits in base ten. (we assume 0 to be a 1-digit integer. for other integers, leading zeros are not allowed.) the s_i-th digit from the left is c_i. \left(i = 1, 2, \cdots, m\right) 

"
p02762, Friend Suggestions,"an sns has n users - user 1, user 2, \cdots, user n. between these n users, there are some relationships - m friendships and k blockships. for each i = 1, 2, \cdots, m, there is a bidirectional friendship between user a_i and user b_i. for each i = 1, 2, \cdots, k, there is a bidirectional blockship between user c_i and user d_i. we define user a to be a friend candidate for user b when all of the following four conditions are satisfied: a \neq b. there is not a friendship between user a and user b. there is not a blockship between user a and user b. there exists a sequence c_0, c_1, c_2, \cdots, c_l consisting of integers between 1 and n (inclusive) such that c_0 = a, c_l = b, and there is a friendship between user c_i and c_{i+1} for each i = 0, 1, \cdots, l - 1. for each user i = 1, 2, ... n, how many friend candidates does it have? 
"
p02763, Simple String Queries,"you are given a string s of length n consisting of lowercase english letters. process q queries of the following two types: type 1: change the i_q-th character of s to c_q. (do nothing if the i_q-th character is already c_q.) type 2: answer the number of different characters occurring in the substring of s between the l_q-th and r_q-th characters (inclusive). 

"
p02764, Yakiniku Optimization Problem,"takahashi wants to grill n pieces of meat on a grilling net, which can be seen as a two-dimensional plane. the coordinates of the i-th piece of meat are \left(x_i, y_i\right), and its hardness is c_i. takahashi can use one heat source to grill the meat. if he puts the heat source at coordinates \left(x, y\right), where x and y are real numbers, the i-th piece of meat will be ready to eat in c_i \times \sqrt{\left(x - x_i\right)^2 + \left(y-y_i\right)^2} seconds. takahashi wants to eat k pieces of meat. find the time required to have k or more pieces of meat ready if he put the heat source to minimize this time. 
"
p02765, Beginner,"takahashi is a member of a programming competition site, butcoder. each member of butcoder is assigned two values: inner rating and displayed rating. the displayed rating of a member is equal to their inner rating if the member has participated in 10 or more contests. otherwise, the displayed rating will be their inner rating minus 100 \times (10 - k) when the member has participated in k contests. takahashi has participated in n contests, and his displayed rating is r. find his inner rating. 
"
p02766, Digits,"given is an integer n. find the number of digits that n has in base k. 
"
p02767, Rally,"there are n people living on a number line. the i-th person lives at coordinate x_i. you are going to hold a meeting that all n people have to attend. the meeting can be held at any integer coordinate. if you choose to hold the meeting at coordinate p, the i-th person will spend (x_i - p)^2 points of stamina to attend the meeting. find the minimum total points of stamina the n people have to spend. 
"
p02768, Bouquet,"akari has n kinds of flowers, one of each kind. she is going to choose one or more of these flowers to make a bouquet. however, she hates two numbers a and b, so the number of flowers in the bouquet cannot be a or b. how many different bouquets are there that akari can make? find the count modulo (10^9 + 7). here, two bouquets are considered different when there is a flower that is used in one of the bouquets but not in the other bouquet. 
"
p02769, Roaming,"there is a building with n rooms, numbered 1 to n. we can move from any room to any other room in the building. let us call the following event a move: a person in some room i goes to another room j~ (i \neq j). initially, there was one person in each room in the building. after that, we know that there were exactly k moves happened up to now. we are interested in the number of people in each of the n rooms now. how many combinations of numbers of people in the n rooms are possible? find the count modulo (10^9 + 7). 
"
p02770, Modularness,"we have a sequence of k numbers: d_0,d_1,...,d_{k - 1}. process the following q queries in order: the i-th query contains three integers n_i, x_i, and m_i.
let a_0,a_1,...,a_{n_i - 1} be the following sequence of n_i numbers: \begin{eqnarray} a_j =  \begin{cases}    x_i &amp; ( j = 0 ) \\    a_{j - 1} + d_{(j - 1)~\textrm{mod}~k} &amp; ( 0 &lt; j \leq n_i - 1 )  \end{cases}\end{eqnarray}
print the number of j~(0 \leq j &lt; n_i - 1) such that (a_j~\textrm{mod}~m_i) &lt; (a_{j + 1}~\textrm{mod}~m_i). here (y~\textrm{mod}~z) denotes the remainder of y divided by z, for two integers y and z~(z &gt; 0). 
"
p02771, Poor,"a triple of numbers is said to be poor when two of those numbers are equal but the other number is different from those two numbers. you will be given three integers a, b, and c. if this triple is poor, print yes; otherwise, print no. 
"
p02772, Papers  Please,"you are an immigration officer in the kingdom of atcoder. the document carried by an immigrant has some number of integers written on it, and you need to check whether they meet certain criteria. according to the regulation, the immigrant should be allowed entry to the kingdom if and only if the following condition is satisfied: all even numbers written on the document are divisible by 3 or 5. if the immigrant should be allowed entry according to the regulation, output approved; otherwise, print denied. 
"
p02773, Poll,"we have n voting papers. the i-th vote (1 \leq i \leq n) has the string s_i written on it. print all strings that are written on the most number of votes, in lexicographical order. 
"
p02774, Pairs,"we have n integers a_1, a_2, ..., a_n. there are \frac{n(n-1)}{2} ways to choose two of them and form a pair. if we compute the product of each of those pairs and sort the results in ascending order, what will be the k-th number in that list? 
"
p02775, Payment,"in the kingdom of atcoder, only banknotes are used as currency. there are 10^{100}+1 kinds of banknotes, with the values of 1, 10, 10^2, 10^3, \dots, 10^{(10^{100})}. you have come shopping at a mall and are now buying a takoyaki machine with a value of n. (takoyaki is the name of a japanese snack.) to make the payment, you will choose some amount of money which is at least n and give it to the clerk. then, the clerk gives you back the change, which is the amount of money you give minus n. what will be the minimum possible number of total banknotes used by you and the clerk, when both choose the combination of banknotes to minimize this count? assume that you have sufficient numbers of banknotes, and so does the clerk. 
"
p02776, Perils in Parallel,"after being invaded by the kingdom of aldebaran, bombs are planted throughout our country, atcoder kingdom. fortunately, our military team called abc has managed to obtain a device that is a part of the system controlling the bombs. there are n bombs, numbered 1 to n, planted in our country. bomb i is planted at the coordinate a_i. it is currently activated if b_i=1, and deactivated if b_i=0. the device has m cords numbered 1 to m. if we cut cord j, the states of all the bombs planted between the coordinates l_j and r_j (inclusive) will be switched - from activated to deactivated, and vice versa. determine whether it is possible to deactivate all the bombs at the same time. if the answer is yes, output a set of cords that should be cut. 
"
p02777, Remaining Balls,"we have a balls with the string s written on each of them and b balls with the string t written on each of them.
from these balls, takahashi chooses one with the string u written on it and throws it away.
find the number of balls with the string s and balls with the string t that we have now. 
"
p02778, I miss you...,"given is a string s. replace every character in s with x and print the result. 
"
p02779, Distinct or Not,"given is a sequence of integers a_1, a_2, ..., a_n.
if its elements are pairwise distinct, print yes; otherwise, print no. 
"
p02780, Dice in Line,"we have n dice arranged in a line from left to right. the i-th die from the left shows p_i numbers from 1 to p_i with equal probability when thrown. we will choose k adjacent dice, throw each of them independently, and compute the sum of the numbers shown. find the maximum possible value of the expected value of this sum. 
"
p02781, Almost Everywhere Zero,"find the number of integers between 1 and n (inclusive) that contains exactly k non-zero digits when written in base ten. 
"
p02782, Many Many Paths,"snuke is standing on a two-dimensional plane. in one operation, he can move by 1 in the positive x-direction, or move by 1 in the positive y-direction. let us define a function f(r, c) as follows: f(r,c) :=  (the number of paths from the point (0, 0) to the point (r, c) that snuke can trace by repeating the operation above) given are integers r_1, r_2, c_1, and c_2.
find the sum of f(i, j) over all pair of integers (i, j) such that r_1 ≤ i ≤ r_2 and c_1 ≤ j ≤ c_2, and compute this value modulo (10^9+7). 
"
p02783, Serval vs Monster,"serval is fighting with a monster. the health of the monster is h. in one attack, serval can decrease the monster's health by a.
there is no other way to decrease the monster's health. serval wins when the monster's health becomes 0 or below. find the number of attacks serval needs to make before winning. 
"
p02784, Common Raccoon vs Monster,"raccoon is fighting with a monster. the health of the monster is h. raccoon can use n kinds of special moves. using the i-th move decreases the monster's health by a_i.
there is no other way to decrease the monster's health. raccoon wins when the monster's health becomes 0 or below. if raccoon can win without using the same move twice or more, print yes; otherwise, print no. 
"
p02785, Fennec vs Monster,"fennec is fighting with n monsters. the health of the i-th monster is h_i. fennec can do the following two actions: attack: fennec chooses one monster. that monster's health will decrease by 1. special move: fennec chooses one monster. that monster's health will become 0. there is no way other than attack and special move to decrease the monsters' health. fennec wins when all the monsters' healths become 0 or below. find the minimum number of times fennec needs to do attack (not counting special move) before winning when she can use special move at most k times. 
"
p02786, Caracal vs Monster,"caracal is fighting with a monster. the health of the monster is h. caracal can attack by choosing one monster. when a monster is attacked, depending on that monster's health, the following happens: if the monster's health is 1, it drops to 0. if the monster's health, x, is greater than 1, that monster disappears. then, two new monsters appear, each with the health of \lfloor x/2 \rfloor. (\lfloor r \rfloor denotes the greatest integer not exceeding r.) caracal wins when the healths of all existing monsters become 0 or below. find the minimum number of attacks caracal needs to make before winning. 
"
p02787, Crested Ibis vs Monster,"ibis is fighting with a monster. the health of the monster is h. ibis can cast n kinds of spells. casting the i-th spell decreases the monster's health by a_i, at the cost of b_i magic points. the same spell can be cast multiple times. there is no way other than spells to decrease the monster's health. ibis wins when the health of the monster becomes 0 or below. find the minimum total magic points that have to be consumed before winning. 
"
p02788, Silver Fox vs Monster,"silver fox is fighting with n monsters. the monsters are standing in a row, and we can assume them to be standing on a number line. the i-th monster, standing at the coordinate x_i, has the health of h_i. silver fox can use bombs to attack the monsters.
using a bomb at the coordinate x decreases the healths of all monsters between the coordinates x-d and x+d (inclusive) by a.
there is no way other than bombs to decrease the monster's health. silver fox wins when all the monsters' healths become 0 or below. find the minimum number of bombs needed to win. 
"
p02789, AC or WA,"takahashi is participating in a programming contest, axc001. he has just submitted his code to problem a.
the problem has n test cases, all of which must be passed to get an ac verdict.
takahashi's submission has passed m cases out of the n test cases.
determine whether takahashi's submission gets an ac. 
"
p02790, Comparing Strings,"given are 1-digit positive integers a and b. consider these two strings: the concatenation of b copies of the digit a, and the concatenation of a copies of the digit b. which of these is lexicographically smaller? 
"
p02791, Low Elements,"given is a permutation p_1, \ldots, p_n of 1, \ldots, n.
find the number of integers i (1 \leq i \leq n) that satisfy the following condition:   for any integer j (1 \leq j \leq i), p_i \leq p_j. 

"
p02792, Handstand 2,"given is a positive integer n.
find the number of pairs (a, b) of positive integers not greater than n that satisfy the following condition: when a and b are written in base ten without leading zeros, the last digit of a is equal to the first digit of b, and the first digit of a is equal to the last digit of b. 

"
p02793, Flatten,"given are n positive integers a_1,...,a_n. consider positive integers b_1, ..., b_n that satisfy the following condition. condition: for any i, j such that 1 \leq i &lt; j \leq n, a_i b_i = a_j b_j holds. find the minimum possible value of b_1 + ... + b_n for such b_1,...,b_n. since the answer can be enormous, print the sum modulo (10^9 +7). 
"
p02794, Tree and Constraints,"we have a tree with n vertices numbered 1 to n.
the i-th edge in this tree connects vertex a_i and vertex b_i.
consider painting each of these edges white or black. there are 2^{n-1} such ways to paint the edges. among them, how many satisfy all of the following m restrictions?   the i-th (1 \leq i \leq m) restriction is represented by two integers u_i and v_i, which mean that the path connecting vertex u_i and vertex v_i must contain at least one edge painted black. 

"
p02795, Painting,"we have a grid with h rows and w columns, where all the squares are initially white. you will perform some number of painting operations on the grid.
in one operation, you can do one of the following two actions: choose one row, then paint all the squares in that row black. choose one column, then paint all the squares in that column black. at least how many operations do you need in order to have n or more black squares in the grid?
it is guaranteed that, under the conditions in constraints, having n or more black squares is always possible by performing some number of operations. 
"
p02796, Robot Arms,"in a factory, there are n robots placed on a number line.
robot i is placed at coordinate x_i and can extend its arms of length l_i in both directions, positive and negative. we want to remove zero or more robots so that the movable ranges of arms of no two remaining robots intersect.
here, for each i (1 \leq i \leq n), the movable range of arms of robot i is the part of the number line between the coordinates x_i - l_i and x_i + l_i, excluding the endpoints. find the maximum number of robots that we can keep. 
"
p02797, Subarray Sum,"given are three integers n, k, and s. find a sequence a_1, a_2, ..., a_n of n integers between 1 and 10^9 (inclusive) that satisfies the condition below.
we can prove that, under the conditions in constraints, such a sequence always exists. there are exactly k pairs (l, r) of integers such that 1 \leq l \leq r \leq n and a_l + a_{l + 1} + \cdots + a_r = s. 

"
p02798, Swap and Flip,"we have n cards numbered 1, 2, ..., n.
card i (1 \leq i \leq n) has an integer a_i written in red ink on one side and an integer b_i written in blue ink on the other side.
initially, these cards are arranged from left to right in the order from card 1 to card n, with the red numbers facing up. determine whether it is possible to have a non-decreasing sequence facing up from left to right (that is, for each i (1 \leq i \leq n - 1), the integer facing up on the (i+1)-th card from the left is not less than the integer facing up on the i-th card from the left) by repeating the operation below. if the answer is yes, find the minimum number of operations required to achieve it. choose an integer i (1 \leq i \leq n - 1).
swap the i-th and (i+1)-th cards from the left, then flip these two cards. 

"
p02799, Bichromization,"we have a connected undirected graph with n vertices and m edges.
edge i in this graph (1 \leq i \leq m) connects vertex u_i and vertex v_i bidirectionally.
we are additionally given n integers d_1, d_2, ..., d_n. determine whether the conditions below can be satisfied by assigning a color - white or black - to each vertex and an integer weight between 1 and 10^9 (inclusive) to each edge in this graph.
if the answer is yes, find one such assignment of colors and integers, too. there is at least one vertex assigned white and at least one vertex assigned black. the minimum cost to travel from vertex v to a vertex whose color assigned is different from that of vertex v by traversing the edges is equal to d_v. 

 here, the cost of traversing the edges is the sum of the weights of the edges traversed. 
"
p02800, Monochromization,"we have an h \times w grid, where each square is painted white or black in the initial state.
given are strings a_1, a_2, ..., a_h representing the colors of the squares in the initial state.
for each pair (i, j) (1 \leq i \leq h, 1 \leq j \leq w), if the j-th character of a_i is ., the square at the i-th row and j-th column is painted white; if that character is #, that square is painted black. among the 2^{hw} ways for each square in the grid to be painted white or black, how many can be obtained from the initial state by performing the operations below any number of times (possibly zero) in any order? find this count modulo 998,244,353. choose one row, then paint all the squares in that row white. choose one row, then paint all the squares in that row black. choose one column, then paint all the squares in that column white. choose one column, then paint all the squares in that column black. 

"
p02801, Next Alphabet,"given is a lowercase english letter c that is not z. print the letter that follows c in alphabetical order. 
"
p02802, Welcome to AtCoder,"takahashi participated in a contest on atcoder. the contest had n problems. takahashi made m submissions during the contest. the i-th submission was made for the p_i-th problem and received the verdict s_i (ac or wa). the number of takahashi's correct answers is the number of problems on which he received an ac once or more. the number of takahashi's penalties is the sum of the following count for the problems on which he received an ac once or more: the number of was received before receiving an ac for the first time on that problem. find the numbers of takahashi's correct answers and penalties. 
"
p02803, Maze Master,"takahashi has a maze, which is a grid of h \times w squares with h horizontal rows and w vertical columns. the square at the i-th row from the top and the j-th column is a ""wall"" square if s_{ij} is #, and a ""road"" square if s_{ij} is .. from a road square, you can move to a horizontally or vertically adjacent road square. you cannot move out of the maze, move to a wall square, or move diagonally. takahashi will choose a starting square and a goal square, which can be any road squares, and give the maze to aoki. aoki will then travel from the starting square to the goal square, in the minimum number of moves required. in this situation, find the maximum possible number of moves aoki has to make. 
"
p02804,Min Sums,"for a finite set of integers x, let f(x)=\max x - \min x. given are n integers a_1,...,a_n. we will choose k of them and let s be the set of the integers chosen. if we distinguish elements with different indices even when their values are the same, there are {}_n c_k ways to make this choice. find the sum of f(s) over all those ways. since the answer can be enormous, print it \bmod (10^9+7). 
"
p02805, Enclose All,"given are n points (x_i, y_i) in a two-dimensional plane. find the minimum radius of a circle such that all the points are inside or on it. 
"
p02806, Falling Asleep,"niwango created a playlist of n songs.
the title and the duration of the i-th song are s_i and t_i seconds, respectively.
it is guaranteed that s_1,\ldots,s_n are all distinct. niwango was doing some work while playing this playlist. (that is, all the songs were played once, in the order they appear in the playlist, without any pause in between.)
however, he fell asleep during his work, and he woke up after all the songs were played.
according to his record, it turned out that he fell asleep at the very end of the song titled x. find the duration of time when some song was played while niwango was asleep. 
"
p02807, Fusing Slimes,"there are n slimes standing on a number line.
the i-th slime from the left is at position x_i. it is guaruanteed that 1 \leq x_1 &lt; x_2 &lt; \ldots &lt; x_n \leq 10^{9}. niwango will perform n-1 operations. the i-th operation consists of the following procedures: choose an integer k between 1 and n-i (inclusive) with equal probability. move the k-th slime from the left, to the position of the neighboring slime to the right. fuse the two slimes at the same position into one slime. find the total distance traveled by the slimes multiplied by (n-1)! (we can show that this value is an integer), modulo (10^{9}+7). if a slime is born by a fuse and that slime moves, we count it as just one slime. 
"
p02808, Cookie Distribution,"there are n children, numbered 1,2,\ldots,n.
in the next k days, we will give them some cookies.
in the i-th day, we will choose a_i children among the n with equal probability, and give one cookie to each child chosen. (we make these k choices independently.) let us define the happiness of the children as c_1 \times c_2 \times \ldots \times c_n, where c_i is the number of cookies received by child i in the k days.
find the expected happiness multiplied by \binom{n}{a_1} \times \binom{n}{a_2} \times \ldots \times \binom{n}{a_k} (we can show that this value is an integer), modulo (10^{9}+7). 
"
p02809, Arrangement,"niwango has n cards, numbered 1,2,\ldots,n.
he will now arrange these cards in a row. niwango wants to know if there is a way to arrange the cards while satisfying all the n conditions below.
to help him, determine whether such a way exists. if the answer is yes, also find the lexicographically smallest such arrangement. to the immediate right of card 1 (if any) is not card a_1. to the immediate right of card 2 (if any) is not card a_2. \vdots to the immediate right of card n (if any) is not card a_n. 

"
p02810, Span Covering,"niwango bought a piece of land that can be represented as a half-open interval [0, x). niwango will lay out n vinyl sheets on this land. the sheets are numbered 1,2, \ldots, n, and they are distinguishable.
for sheet i, he can choose an integer j such that 0 \leq j \leq x - l_i and cover [j, j + l_i) with this sheet. find the number of ways to cover the land with the sheets such that no point in [0, x) remains uncovered, modulo (10^9+7).
we consider two ways to cover the land different if and only if there is an integer i (1 \leq i \leq n) such that the region covered by sheet i is different. 
"
p02811, 500 Yen Coins,"takahashi has k 500-yen coins. (yen is the currency of japan.)
if these coins add up to x yen or more, print yes; otherwise, print no. 
"
p02812, Count ABC,"we have a string s of length n consisting of uppercase english letters. how many times does abc occur in s as contiguous subsequences (see sample inputs and outputs)? 
"
p02813, Count Order,"we have two permutations p and q of size n (that is, p and q are both rearrangements of (1,~2,~...,~n)). there are n! possible permutations of size n. among them, let p and q be the a-th and b-th lexicographically smallest permutations, respectively. find |a - b|. 
"
p02814, Semi Common Multiple,"given are a sequence a= {a_1,a_2,......a_n} of n positive even numbers, and an integer m. let a semi-common multiple of a be a positive integer x that satisfies the following condition for every k (1 \leq k \leq n): there exists a non-negative integer p such that x= a_k \times (p+0.5). find the number of semi-common multiples of a among the integers between 1 and m (inclusive). 
"
p02815, Change a Little Bit,"for two sequences s and t of length n consisting of 0 and 1, let us define f(s, t) as follows: consider repeating the following operation on s so that s will be equal to t. f(s, t) is the minimum possible total cost of those operations. change s_i (from 0 to 1 or vice versa). the cost of this operation is d \times c_i, where d is the number of integers j such that s_j \neq t_j (1 \leq j \leq n) just before this change. 

 there are 2^n \times (2^n - 1) pairs (s, t) of different sequences of length n consisting of 0 and 1. compute the sum of f(s, t) over all of those pairs, modulo (10^9+7). 
"
p02816, Xor Shift,"given are two sequences a=\{a_0,\ldots,a_{n-1}\} and b=\{b_0,\ldots,b_{n-1}\} of n non-negative integers each. snuke will choose an integer k such that 0 \leq k &lt; n and an integer x not less than 0, to make a new sequence of length n, a'=\{a_0',\ldots,a_{n-1}'\}, as follows: a_i'= a_{i+k \mod n}\ xor \ x find all pairs (k,x) such that a' will be equal to b. when a \mbox{ xor } b is written in base two, the digit in the 2^k's place (k \geq 0) is 1 if either a or b, but not both, has 1 in the 2^k's place, and 0 otherwise. 

for example, 3 \mbox{ xor } 5 = 6. (in base two: 011 \mbox{ xor } 101 = 110.)
 

"
p02817, Strings,"given are two strings s and t consisting of lowercase english letters. concatenate t and s in this order, without space in between, and print the resulting string. 
"
p02818, Greedy Takahashi,"takahashi has a cookies, and aoki has b cookies.
takahashi will do the following action k times: if takahashi has one or more cookies, eat one of his cookies. otherwise, if aoki has one or more cookies, eat one of aoki's cookies. if they both have no cookies, do nothing. in the end, how many cookies will takahashi and aoki have, respectively? 
"
p02819, Next Prime,"find the minimum prime number greater than or equal to x. 
"
p02820, Prediction and Restriction,"at an arcade, takahashi is playing a game called rps battle, which is played as follows: the player plays n rounds of rock paper scissors against the machine. (see notes for the description of rock paper scissors. a draw also counts as a round.) r points for winning with rock; s points for winning with scissors; p points for winning with paper. 

 however, in the i-th round, the player cannot use the hand he/she used in the (i-k)-th round. (in the first k rounds, the player can use any hand.) before the start of the game, the machine decides the hand it will play in each round. with supernatural power, takahashi managed to read all of those hands. the information takahashi obtained is given as a string t. if the i-th character of t (1 \leq i \leq n) is r, the machine will play rock in the i-th round. similarly, p and s stand for paper and scissors, respectively. what is the maximum total score earned in the game by adequately choosing the hand to play in each round? 
"
p02821, Handshake,"takahashi has come to a party as a special guest.
there are n ordinary guests at the party. the i-th ordinary guest has a power of a_i. takahashi has decided to perform m handshakes to increase the happiness of the party (let the current happiness be 0).
a handshake will be performed as follows: takahashi chooses one (ordinary) guest x for his left hand and another guest y for his right hand (x and y can be the same). then, he shakes the left hand of guest x and the right hand of guest y simultaneously to increase the happiness by a_x+a_y. however, takahashi should not perform the same handshake more than once. formally, the following condition must hold: assume that, in the k-th handshake, takahashi shakes the left hand of guest x_k and the right hand of guest y_k. then, there is no pair p, q (1 \leq p &lt; q \leq m) such that (x_p,y_p)=(x_q,y_q). what is the maximum possible happiness after m handshakes? 
"
p02822, Surrounded Nodes,"given is a tree t with n vertices. the i-th edge connects vertex a_i and b_i (1 \leq a_i,b_i \leq n). now, each vertex is painted black with probability 1/2 and white with probability 1/2, which is chosen independently from other vertices. then, let s be the smallest subtree (connected subgraph) of t containing all the vertices painted black. (if no vertex is painted black, s is the empty graph.) let the holeyness of s be the number of white vertices contained in s. find the expected holeyness of s. since the answer is a rational number, we ask you to print it \bmod 10^9+7, as described in notes. 
"
p02823, Table Tennis Training,"2n players are running a competitive table tennis training on n tables numbered from 1 to n. the training consists of rounds.
in each round, the players form n pairs, one pair per table.
in each pair, competitors play a match against each other.
as a result, one of them wins and the other one loses. the winner of the match on table x plays on table x-1 in the next round,
except for the winner of the match on table 1 who stays at table 1. similarly, the loser of the match on table x plays on table x+1 in the next round,
except for the loser of the match on table n who stays at table n. two friends are playing their first round matches on distinct tables a and b.
let's assume that the friends are strong enough to win or lose any match at will.
what is the smallest number of rounds after which the friends can get to play a match against each other? 
"
p02824, Voting Judges,"n problems are proposed for an upcoming contest. problem i has an initial integer score of a_i points. m judges are about to vote for problems they like. each judge will choose exactly v problems, independently from the other judges,
and increase the score of each chosen problem by 1. after all m judges cast their vote, the problems will be sorted in non-increasing order of score, and the first p problems will be chosen for the problemset.
problems with the same score can be ordered arbitrarily, this order is decided by the chief judge. how many problems out of the given n have a chance to be chosen for the problemset? 
"
p02825, Domino Quality,"let us consider a grid of squares with n rows and n columns. you want to put some domino pieces on this grid.
each domino piece covers two squares that have a common side. each square can be covered by at most one piece. for each row of the grid, let's define its quality as the number of domino pieces that cover at least one square in this row.
we define the quality of each column similarly. find a way to put at least one domino piece on the grid so that the quality of every row is equal to the quality of every column,
or determine that such a placement doesn't exist. 
"
p02826, Problem Scores,"n problems have been chosen by the judges, now it's time to assign scores to them! problem i must get an integer score a_i between 1 and n, inclusive.
the problems have already been sorted by difficulty: a_1 \le a_2 \le \ldots \le a_n must hold.
different problems can have the same score, though. being an icpc fan, you want contestants who solve more problems to be ranked higher.
that's why, for any k (1 \le k \le n-1), you want the sum of scores of any k problems to be strictly less than the sum of scores of any k+1 problems. how many ways to assign scores do you have? find this number modulo the given prime m. 
"
p02827, Balancing Network,"a balancing network is an abstract device built up of n wires, thought of as running from left to right,
and m balancers that connect pairs of wires. the wires are numbered from 1 to n from top to bottom,
and the balancers are numbered from 1 to m from left to right.
balancer i connects wires x_i and y_i (x_i &lt; y_i). each balancer must be in one of two states: up or down. consider a token that starts moving to the right along some wire at a point to the left of all balancers.
during the process, the token passes through each balancer exactly once.
whenever the token encounters balancer i, the following happens: if the token is moving along wire x_i and balancer i is in the down state, the token moves down to wire y_i and continues moving to the right. if the token is moving along wire y_i and balancer i is in the up state, the token moves up to wire x_i and continues moving to the right. otherwise, the token doesn't change the wire it's moving along. let a state of the balancing network be a string of length m, describing the states of all balancers.
the i-th character is ^ if balancer i is in the up state, and v if balancer i is in the down state. a state of the balancing network is called uniforming if a wire w exists such that, regardless of the starting wire,
the token will always end up at wire w and run to infinity along it. any other state is called non-uniforming. you are given an integer t (1 \le t \le 2). answer the following question: if t = 1, find any uniforming state of the network or determine that it doesn't exist. if t = 2, find any non-uniforming state of the network or determine that it doesn't exist. note that if you answer just one kind of questions correctly, you can get partial score. 
"
p02828, Histogram Rooks,"let us consider a grid of squares with n rows and n columns.
arbok has cut out some part of the grid so that, for each i = 1, 2, \ldots, n, the bottommost h_i squares are remaining in the i-th column from the left.
now, he wants to place rooks into some of the remaining squares. a rook is a chess piece that occupies one square and can move horizontally or vertically, through any number of unoccupied squares.
a rook can not move through squares that have been cut out by arbok. let's say that a square is covered if it either contains a rook, or a rook can be moved to this square in one move. find the number of ways to place rooks into some of the remaining squares so that every remaining square is covered, modulo 998244353. 
"
p02829, Round One,"takahashi is solving quizzes. he has easily solved all but the last one. the last quiz has three choices: 1, 2, and 3. with his supernatural power, takahashi has found out that the choices a and b are both wrong. print the correct choice for this problem. 
"
p02830, Strings with the Same Length,"given are strings s and t of length n each, both consisting of lowercase english letters. let us form a new string by alternating the characters of s and the characters of t, as follows: the first character of s, the first character of t, the second character of s, the second character of t, ..., the n-th character of s, the n-th character of t. print this new string. 
"
p02831, Snack,"takahashi is organizing a party. at the party, each guest will receive one or more snack pieces. takahashi predicts that the number of guests at this party will be a or b. find the minimum number of pieces that can be evenly distributed to the guests in both of the cases predicted. we assume that a piece cannot be divided and distributed to multiple guests. 
"
p02832, Brick Break,"we have n bricks arranged in a row from left to right. the i-th brick from the left (1 \leq i \leq n) has an integer a_i written on it. among them, you can break at most n-1 bricks of your choice. let us say there are k bricks remaining. snuke will be satisfied if, for each integer i (1 \leq i \leq k), the i-th of those brick from the left has the integer i written on it. find the minimum number of bricks you need to break to satisfy snuke's desire. if his desire is unsatisfiable, print -1 instead. 
"
p02833, Double Factorial,"for an integer n not less than 0, let us define f(n) as follows: f(n) = 1 (if n &lt; 2) f(n) = n f(n-2) (if n \geq 2) given is an integer n. find the number of trailing zeros in the decimal notation of f(n). 
"
p02834, Playing Tag on Tree,"we have a tree with n vertices. the i-th edge connects vertex a_i and b_i bidirectionally. takahashi is standing at vertex u, and aoki is standing at vertex v. now, they will play a game of tag as follows: 1. if takahashi and aoki are standing at the same vertex, the game ends. otherwise, takahashi moves to a vertex of his choice that is adjacent to his current vertex. 
 2. if takahashi and aoki are standing at the same vertex, the game ends. otherwise, aoki moves to a vertex of his choice that is adjacent to his current vertex. 
 3. go back to step 1. 
 takahashi performs his moves so that the game ends as late as possible, while aoki performs his moves so that the game ends as early as possible. find the number of moves aoki will perform before the end of the game if both takahashi and aoki know each other's position and strategy. it can be proved that the game is bound to end. 
"
p02835, Blackjack,"given are three integers a_1, a_2, and a_3. if a_1+a_2+a_3 is greater than or equal to 22, print bust; otherwise, print win. 
"
p02836,philia,"takahashi loves palindromes. non-palindromic strings are unacceptable to him. each time he hugs a string, he can change one of its characters to any character of his choice. given is a string s. find the minimum number of hugs needed to make s palindromic. 
"
p02837, HonestOrUnkind2,"there are n people numbered 1 to n. each of them is either an honest person whose testimonies are always correct or an unkind person whose testimonies may be correct or not. person i gives a_i testimonies. the j-th testimony by person i is represented by two integers x_{ij} and y_{ij}. if y_{ij} = 1, the testimony says person x_{ij} is honest; if y_{ij} = 0, it says person x_{ij} is unkind. how many honest persons can be among those n people at most? 
"
p02838, Xor Sum 4,"we have n integers. the i-th integer is a_i. find \sum_{i=1}^{n-1}\sum_{j=i+1}^{n} (a_i \mbox{ xor } a_j), modulo (10^9+7). when a \mbox{ xor } b is written in base two, the digit in the 2^k's place (k \geq 0) is 1 if either a or b, but not both, has 1 in the 2^k's place, and 0 otherwise. 

for example, 3 \mbox{ xor } 5 = 6. (in base two: 011 \mbox{ xor } 101 = 110.)
 

"
p02839, Balanced Path,"we have a grid with h horizontal rows and w vertical columns. let (i,j) denote the square at the i-th row from the top and the j-th column from the left. the square (i, j) has two numbers a_{ij} and b_{ij} written on it. first, for each square, takahashi paints one of the written numbers red and the other blue. then, he travels from the square (1, 1) to the square (h, w). in one move, he can move from a square (i, j) to the square (i+1, j) or the square (i, j+1). he must not leave the grid. let the unbalancedness be the absolute difference of the sum of red numbers and the sum of blue numbers written on the squares along takahashi's path, including the squares (1, 1) and (h, w). takahashi wants to make the unbalancedness as small as possible by appropriately painting the grid and traveling on it. find the minimum unbalancedness possible. 
"
p02840, Sum Difference,"we have an integer sequence a of length n, where a_1 = x, a_{i+1} = a_i + d (1 \leq  i &lt; n ) holds. takahashi will take some (possibly all or none) of the elements in this sequence, and aoki will take all of the others. let s and t be the sum of the numbers taken by takahashi and aoki, respectively. how many possible values of s - t are there? 
"
p02841, November 30,"in this problem, a date is written as y-m-d. for example, 2019-11-30 means november 30, 2019. integers m_1, d_1, m_2, and d_2 will be given as input.
it is known that the date 2019-m_2-d_2 follows 2019-m_1-d_1.
determine whether the date 2019-m_1-d_1 is the last day of a month. 
"
p02842, Tax Rate,"takahashi bought a piece of apple pie at abc confiserie. according to his memory, he paid n yen (the currency of japan) for it. the consumption tax rate for foods in this shop is 8 percent. that is, to buy an apple pie priced at x yen before tax, you have to pay x \times 1.08 yen (rounded down to the nearest integer). takahashi forgot the price of his apple pie before tax, x, and wants to know it again. write a program that takes n as input and finds x. we assume x is an integer. if there are multiple possible values for x, find any one of them. also, takahashi's memory of n, the amount he paid, may be incorrect. if no value could be x, report that fact. 
"
p02843, 100 to 105,"atcoder mart sells 1000000 of each of the six items below: riceballs, priced at 100 yen (the currency of japan) each sandwiches, priced at 101 yen each cookies, priced at 102 yen each cakes, priced at 103 yen each candies, priced at 104 yen each computers, priced at 105 yen each takahashi wants to buy some of them that cost exactly x yen in total.
determine whether this is possible.
(ignore consumption tax.) 
"
p02844, Lucky PIN,"atcoder inc. has decided to lock the door of its office with a 3-digit pin code. the company has an n-digit lucky number, s. takahashi, the president, will erase n-3 digits from s and concatenate the remaining 3 digits without changing the order to set the pin code. how many different pin codes can he set this way? both the lucky number and the pin code may begin with a 0. 
"
p02845, Colorful Hats 2,"n people are standing in a queue, numbered 1, 2, 3, ..., n from front to back. each person wears a hat, which is red, blue, or green. the person numbered i says: ""in front of me, exactly a_i people are wearing hats with the same color as mine."" assuming that all these statements are correct, find the number of possible combinations of colors of the n people's hats. since the count can be enormous, compute it modulo 1000000007. 
"
p02846, Interval Running,"takahashi and aoki are training for long-distance races in an infinitely long straight course running from west to east. they start simultaneously at the same point and moves as follows towards the east: takahashi runs a_1 meters per minute for the first t_1 minutes,  then runs at a_2 meters per minute for the subsequent t_2 minutes, and alternates between these two modes forever. aoki runs b_1 meters per minute for the first t_1 minutes,  then runs at b_2 meters per minute for the subsequent t_2 minutes, and alternates between these two modes forever. how many times will takahashi and aoki meet each other, that is, come to the same point? we do not count the start of the run. if they meet infinitely many times, report that fact. 
"
p02847, Can't Wait for Holiday,"given is a string s representing the day of the week today. s is sun, mon, tue, wed, thu, fri, or sat, for sunday, monday, tuesday, wednesday, thursday, friday, and saturday, respectively. after how many days is the next sunday (tomorrow or later)? 
"
p02848, ROT N,"we have a string s consisting of uppercase english letters. additionally, an integer n will be given. shift each character of s by n in alphabetical order (see below), and print the resulting string. we assume that a follows z. for example, shifting a by 2 results in c (a \to b \to c), and shifting y by 3 results in b (y \to z \to a \to b). 
"
p02849, Buy an Integer,"takahashi has come to an integer shop to buy an integer. the shop sells the integers from 1 through 10^9. the integer n is sold for a \times n + b \times d(n) yen (the currency of japan), where d(n) is the number of digits in the decimal notation of n. find the largest integer that takahashi can buy when he has x yen. if no integer can be bought, print 0. 
"
p02850, Coloring Edges on Tree,"given is a tree g with n vertices.
the vertices are numbered 1 through n, and the i-th edge connects vertex a_i and vertex b_i. consider painting the edges in g with some number of colors.
we want to paint them so that, for each vertex, the colors of the edges incident to that vertex are all different. among the colorings satisfying the condition above, construct one that uses the minimum number of colors. 
"
p02851, Rem of Sum is Num,"given are a sequence of n positive integers a_1, a_2, \ldots, a_n, and a positive integer k. find the number of non-empty contiguous subsequences in a such that the remainder when dividing the sum of its elements by k is equal to the number of its elements. we consider two subsequences different if they are taken from different positions, even if they are equal sequences. 
"
p02852, Sugoroku,"takahashi is playing a board game called sugoroku. on the board, there are n + 1 squares numbered 0 to n. takahashi starts at square 0, and he has to stop exactly at square n to win the game. the game uses a roulette with the m numbers from 1 to m. in each turn, takahashi spins the roulette. if the number x comes up when he is at square s, he moves to square s+x. if this makes him go beyond square n, he loses the game. additionally, some of the squares are game over squares. he also loses the game if he stops at one of those squares. you are given a string s of length n + 1, representing which squares are game over squares. for each i (0 \leq i \leq n), square i is a game over square if s[i] = 1 and not if s[i] = 0. find the sequence of numbers coming up in the roulette in which takahashi can win the game in the fewest number of turns possible. if there are multiple such sequences, find the lexicographically smallest such sequence. if takahashi cannot win the game, print -1. 
"
p02853, DDCC Finals,"we held two competitions: coding contest and robot maneuver. in each competition, the contestants taking the 3-rd, 2-nd, and 1-st places receive 100000, 200000, and 300000 yen (the currency of japan), respectively. furthermore, a contestant taking the first place in both competitions receives an additional 400000 yen. disco-kun took the x-th place in coding contest and the y-th place in robot maneuver.
find the total amount of money he earned. 
"
p02854, Iron Bar Cutting,"takahashi, who works at disco, is standing before an iron bar.
the bar has n-1 notches, which divide the bar into n sections. the i-th section from the left has a length of a_i millimeters. takahashi wanted to choose a notch and cut the bar at that point into two parts with the same length.
however, this may not be possible as is, so he will do the following operations some number of times before he does the cut: choose one section and expand it, increasing its length by 1 millimeter. doing this operation once costs 1 yen (the currency of japan). choose one section of length at least 2 millimeters and shrink it, decreasing its length by 1 millimeter. doing this operation once costs 1 yen. find the minimum amount of money needed before cutting the bar into two parts with the same length. 
"
p02855, Strawberry Cakes,"chokudai made a rectangular cake for contestants in ddcc 2020 finals. the cake has h - 1 horizontal notches and w - 1 vertical notches, which divide the cake into h \times w equal sections. k of these sections has a strawberry on top of each of them. the positions of the strawberries are given to you as h \times w characters s_{i, j} (1 \leq i \leq h, 1 \leq j \leq w). if s_{i, j} is #, the section at the i-th row from the top and the j-th column from the left contains a strawberry; if s_{i, j} is ., the section does not contain one. there are exactly k occurrences of #s. takahashi wants to cut this cake into k pieces and serve them to the contestants. each of these pieces must satisfy the following conditions: has a rectangular shape. contains exactly one strawberry. one possible way to cut the cake is shown below:  find one way to cut the cake and satisfy the condition. we can show that this is always possible, regardless of the number and positions of the strawberries.   
"
p02856, Digit Sum Replace,"n programmers are going to participate in the preliminary stage of ddcc 20xx. due to the size of the venue, however, at most 9 contestants can participate in the finals. the preliminary stage consists of several rounds, which will take place as follows: all the n contestants will participate in the first round. the organizer will choose two consecutive digits in the decimal notation of x, and replace them with the sum of these digits. the number resulted will be the number of contestants advancing to the next round.
for example, when x = 2378, the number of contestants advancing to the next round will be 578 (if 2 and 3 are chosen), 2108 (if 3 and 7 are chosen), or 2315 (if 7 and 8 are chosen).
when x = 100, the number of contestants advancing to the next round will be 10, no matter which two digits are chosen. 

 the preliminary stage ends when 9 or fewer contestants remain. ringo, the chief organizer, wants to hold as many rounds as possible.
find the maximum possible number of rounds in the preliminary stage. since the number of contestants, n, can be enormous, it is given to you as two integer sequences d_1, \ldots, d_m and c_1, \ldots, c_m, which means the following: the decimal notation of n consists of c_1 + c_2 + \ldots + c_m digits, whose first c_1 digits are all d_1, the following c_2 digits are all d_2, \ldots, and the last c_m digits are all d_m. 
"
p02857, Majority of Balls,"this is an interactive task. we have 2n balls arranged in a row, numbered 1, 2, 3, ..., 2n from left to right, where n is an odd number. among them, there are n red balls and n blue balls. while blindfolded, you are challenged to guess the color of every ball correctly, by asking at most 210 questions of the following form: you choose any n of the 2n balls and ask whether there are more red balls than blue balls or not among those n balls. now, let us begin. 
"
p02858, DISCOSMOS,"in 2937, disco creates a new universe called discosmos to celebrate its 1000-th anniversary. discosmos can be described as an h \times w grid. let (i, j) (1 \leq i \leq h, 1 \leq j \leq w) denote the square at the i-th row from the top and the j-th column from the left. at time 0, one robot will be placed onto each square. each robot is one of the following three types: type-h: does not move at all. type-r: if a robot of this type is in (i, j) at time t, it will be in (i, j+1) at time t+1. if it is in (i, w) at time t, however, it will be instead in (i, 1) at time t+1. (the robots do not collide with each other.) type-d: if a robot of this type is in (i, j) at time t, it will be in (i+1, j) at time t+1. if it is in (h, j) at time t, however, it will be instead in (1, j) at time t+1. there are 3^{h \times w} possible ways to place these robots. in how many of them will every square be occupied by one robot at times 0, t, 2t, 3t, 4t, and all subsequent multiples of t? since the count can be enormous, compute it modulo (10^9 + 7). 
"
p02859, Circle,"given is an integer r. how many times is the area of a circle of radius r larger than the area of a circle of radius 1? it can be proved that the answer is always an integer under the constraints given. 
"
p02860, Echo,"given are a positive integer n and a string s of length n consisting of lowercase english letters. determine whether the string is a concatenation of two copies of some string.
that is, determine whether there is a string t such that s = t + t. 
"
p02861, Average Length,"there are n towns in a coordinate plane. town i is located at coordinates (x_i, y_i). the distance between town i and town j is \sqrt{\left(x_i-x_j\right)^2+\left(y_i-y_j\right)^2}. there are n! possible paths to visit all of these towns once. let the length of a path be the distance covered when we start at the first town in the path, visit the second, third, \dots, towns, and arrive at the last town (assume that we travel in a straight line from a town to another). compute the average length of these n! paths. 
"
p02862, Knight,"there is a knight - the chess piece - at the origin (0, 0) of a two-dimensional grid. when the knight is at the square (i, j), it can be moved to either (i+1,j+2) or (i+2, j+1). in how many ways can the knight reach the square (x, y)? find the number of ways modulo 10^9 + 7. 
"
p02863,eat,"takahashi is at an all-you-can-eat restaurant. the restaurant offers n kinds of dishes. it takes a_i minutes to eat the i-th dish, whose deliciousness is b_i. the restaurant has the following rules: you can only order one dish at a time. the dish ordered will be immediately served and ready to eat. you cannot order the same kind of dish more than once. until you finish eating the dish already served, you cannot order a new dish. after t-0.5 minutes from the first order, you can no longer place a new order, but you can continue eating the dish already served. let takahashi's happiness be the sum of the deliciousness of the dishes he eats in this restaurant. what is the maximum possible happiness achieved by making optimal choices? 
"
p02864, Laminate,"we will create an artwork by painting black some squares in a white square grid with 10^9 rows and n columns.
the current plan is as follows: for the i-th column from the left, we will paint the h_i bottommost squares and will not paint the other squares in that column.
before starting to work, you can choose at most k columns (possibly zero) and change the values of h_i for these columns to any integers of your choice between 0 and 10^9 (inclusive).
different values can be chosen for different columns. then, you will create the modified artwork by repeating the following operation: choose one or more consecutive squares in one row and paint them black. (squares already painted black can be painted again, but squares not to be painted according to the modified plan should not be painted.) find the minimum number of times you need to perform this operation. 
"
p02865, Sum of Two Integers,"how many ways are there to choose two distinct positive integers totaling n, disregarding the order? 
"
p02866, Counting of Trees,"given is an integer sequence d_1,...,d_n of n elements. find the number, modulo 998244353, of trees with n vertices numbered 1 to n that satisfy the following condition: for every integer i from 1 to n, the distance between vertex 1 and vertex i is d_i. 

"
p02867, Swaps,"given are two integer sequences of n elements each: a_1,...,a_n and b_1,...,b_n.
determine if it is possible to do the following operation at most n-2 times (possibly zero) so that, for every integer i from 1 to n, a_i \leq b_i holds: choose two distinct integers x and y between 1 and n (inclusive), and swap the values of a_x and a_y. 

"
p02868, Shortest Path on a Line,"we have n points numbered 1 to n arranged in a line in this order. takahashi decides to make an undirected graph, using these points as the vertices.
in the beginning, the graph has no edge. takahashi will do m operations to add edges in this graph.
the i-th operation is as follows: the operation uses integers l_i and r_i between 1 and n (inclusive), and a positive integer c_i. for every pair of integers (s, t) such that l_i \leq s &lt; t \leq r_i, add an edge of length c_i between vertex s and vertex t. the integers l_1, ..., l_m, r_1, ..., r_m, c_1, ..., c_m are all given as input. takahashi wants to solve the shortest path problem in the final graph obtained. find the length of the shortest path from vertex 1 to vertex n in the final graph. 
"
p02869,triangular Triplets,"given are positive integers n and k. determine if the 3n integers k, k+1, ..., k+3n-1 can be partitioned into n triples (a_1,b_1,c_1), ..., (a_n,b_n,c_n) so that the condition below is satisfied. any of the integers k, k+1, ..., k+3n-1 must appear in exactly one of those triples. for every integer i from 1 to n, a_i + b_i \leq c_i holds. if the answer is yes, construct one such partition. 
"
p02870, Mirror Frame,"in a two-dimensional plane, there is a square frame whose vertices are at coordinates (0,0), (n,0), (0,n), and (n,n).
the frame is made of mirror glass. a ray of light striking an edge of the frame (but not a vertex) will be reflected so that the angle of incidence is equal to the angle of reflection.
a ray of light striking a vertex of the frame will be reflected in the direction opposite to the direction it is coming from. we will define the path for a grid point (a point with integer coordinates) (i,j) (0&lt;i,j&lt;n) strictly within the frame, as follows: the path for (i,j) is the union of the trajectories of four rays of light emitted from (i,j) to (i-1,j-1), (i-1,j+1), (i+1,j-1), and (i+1,j+1). figure: an example of a path for a grid point there is a light bulb at each grid point strictly within the frame. we will assign a state - on or off - to each bulb. the state of the whole set of bulbs are called beautiful if it is possible to turn off all the bulbs by repeating the following operation: choose a grid point strictly within the frame, and switch the states of all the bulbs on its path. takahashi has set the states of some of the bulbs, but not for the remaining bulbs.
find the number of ways to set the states of the remaining bulbs so that the state of the whole set of bulbs is beautiful, modulo 998244353.
the state of the bulb at the grid point (i,j) is set to be on if a_{i,j}=o, off if a_{i,j}=x, and unset if a_{i,j}=?. 
"
p02871, Problem A, 
p02872, Problem B, 
p02873, ><,"given is a string s of length n-1.
each character in s is &lt; or &gt;. a sequence of n non-negative integers, a_1,a_2,\cdots,a_n, is said to be good when the following condition is satisfied for all i (1 \leq i \leq n-1): if s_i= &lt;: a_i&lt;a_{i+1} if s_i= &gt;: a_i&gt;a_{i+1} find the minimum possible sum of the elements of a good sequence of n non-negative integers. 
"
p02874, Two Contests,"10^9 contestants, numbered 1 to 10^9, will compete in a competition.
there will be two contests in this competition. the organizer prepared n problems, numbered 1 to n, to use in these contests.
when problem i is presented in a contest, it will be solved by all contestants from contestant l_i to contestant r_i (inclusive), and will not be solved by any other contestants. the organizer will use these n problems in the two contests.
each problem must be used in exactly one of the contests, and each contest must have at least one problem. the joyfulness of each contest is the number of contestants who will solve all the problems in the contest.
find the maximum possible total joyfulness of the two contests. 
"
p02875, Neither AB nor BA,"given is a positive even number n. find the number of strings s of length n consisting of a, b, and c that satisfy the following condition: choose two consecutive characters in s and erase them. however, choosing ab or ba is not allowed. 

 for example, abbc satisfies the condition for n=4, because we can convert it as follows: abbc → (erase bb) → ac → (erase ac) → (empty). the answer can be enormous, so compute the count modulo 998244353. 
"
p02876, Balance Beam,"we have n balance beams numbered 1 to n.
the length of each beam is 1 meters.
snuke walks on beam i at a speed of 1/a_i meters per second, and ringo walks on beam i at a speed of 1/b_i meters per second. snuke and ringo will play the following game: first, snuke connects the n beams in any order of his choice and makes a long beam of length n meters. then, snuke starts at the left end of the long beam. at the same time, ringo starts at a point chosen uniformly at random on the long beam. both of them walk to the right end of the long beam. snuke wins if and only if he catches up to ringo before ringo reaches the right end of the long beam. that is, snuke wins if there is a moment when snuke and ringo stand at the same position, and ringo wins otherwise. find the probability that snuke wins when snuke arranges the n beams so that the probability of his winning is maximized. this probability is a rational number, so we ask you to represent it as an irreducible fraction p/q (to represent 0, use p=0, q=1). 
"
p02877, Prefix Suffix Addition,"snuke has a sequence of n integers x_1,x_2,\cdots,x_n.
initially, all the elements are 0. he can do the following two kinds of operations any number of times in any order: operation 1: choose an integer k (1 \leq k \leq n) and a non-decreasing sequence of k non-negative integers c_1,c_2,\cdots,c_k.
then, for each i (1 \leq i \leq k), replace x_i with x_i+c_i. operation 2: choose an integer k (1 \leq k \leq n) and a non-increasing sequence of k non-negative integers c_1,c_2,\cdots,c_k.
then, for each i (1 \leq i \leq k), replace x_{n-k+i} with x_{n-k+i}+c_i. his objective is to have x_i=a_i for all i.
find the minimum number of operations required to achieve it. 
"
p02878, Two Pieces,"we have two indistinguishable pieces placed on a number line.
both pieces are initially at coordinate 0. (they can occupy the same position.) we can do the following two kinds of operations: choose a piece and move it to the right (the positive direction) by 1. move the piece with the smaller coordinate to the position of the piece with the greater coordinate.
if two pieces already occupy the same position, nothing happens, but it still counts as doing one operation. we want to do a total of n operations of these kinds in some order so that one of the pieces will be at coordinate a and the other at coordinate b.
find the number of ways to move the pieces to achieve it.
the answer can be enormous, so compute the count modulo 998244353. two ways to move the pieces are considered different if and only if there exists an integer i (1 \leq i \leq n) such that the set of the coordinates occupied by the pieces after the i-th operation is different in those two ways. 
"
p02879, 9x9,"having learned the multiplication table, takahashi can multiply two integers between 1 and 9 (inclusive) together. he cannot do any other calculation. given are two integers a and b. if takahashi can calculate a \times b, print the result; if he cannot, print -1 instead. 
"
p02880, 81,"having learned the multiplication table, takahashi can multiply two integers between 1 and 9 (inclusive) together. given an integer n, determine whether n can be represented as the product of two integers between 1 and 9. if it can, print yes; if it cannot, print no. 
"
p02881, Walk on Multiplication Table,"takahashi is standing on a multiplication table with infinitely many rows and columns. the square (i,j) contains the integer i \times j. initially, takahashi is standing at (1,1). in one move, he can move from (i,j) to either (i+1,j) or (i,j+1). given an integer n, find the minimum number of moves needed to reach a square that contains n. 
"
p02882, Water Bottle,"takahashi has a water bottle with the shape of a rectangular prism whose base is a square of side a~\mathrm{cm} and whose height is b~\mathrm{cm}. (the thickness of the bottle can be ignored.) we will pour x~\mathrm{cm}^3 of water into the bottle, and gradually tilt the bottle around one of the sides of the base. when will the water be spilled? more formally, find the maximum angle in which we can tilt the bottle without spilling any water. 
"
p02883, Gluttony,"takahashi will take part in an eating contest. teams of n members will compete in this contest, and takahashi's team consists of n players numbered 1 through n from youngest to oldest. the consumption coefficient of member i is a_i. in the contest, n foods numbered 1 through n will be presented, and the difficulty of food i is f_i. the details of the contest are as follows: a team should assign one member to each food, and should not assign the same member to multiple foods. it will take x \times y seconds for a member to finish the food, where x is the consumption coefficient of the member and y is the difficulty of the dish. the score of a team is the longest time it takes for an individual member to finish the food. before the contest, takahashi's team decided to do some training. in one set of training, a member can reduce his/her consumption coefficient by 1, as long as it does not go below 0. however, for financial reasons, the n members can do at most k sets of training in total. what is the minimum possible score of the team, achieved by choosing the amounts of members' training and allocating the dishes optimally? 
"
p02884, Fork in the Road,"there is a cave consisting of n rooms and m one-directional passages. the rooms are numbered 1 through n. takahashi is now in room 1, and room n has the exit. the i-th passage connects room s_i and room t_i (s_i &lt; t_i) and can only be traversed in the direction from room s_i to room t_i. it is known that, for each room except room n, there is at least one passage going from that room. takahashi will escape from the cave. each time he reaches a room (assume that he has reached room 1 at the beginning), he will choose a passage uniformly at random from the ones going from that room and take that passage. aoki, a friend of takahashi's, can block one of the passages (or do nothing) before takahashi leaves room 1. however, it is not allowed to block a passage so that takahashi is potentially unable to reach room n. let e be the expected number of passages takahashi takes before he reaches room n. find the value of e when aoki makes a choice that minimizes e. 
"
p02885, Curtain,"the window of takahashi's room has a width of a. there are two curtains hung over the window, each of which has a horizontal length of b. (vertically, the curtains are long enough to cover the whole window.) we will close the window so as to minimize the total horizontal length of the uncovered part of the window.
find the total horizontal length of the uncovered parts of the window then. 
"
p02886, TAKOYAKI FESTIVAL 2019,"it's now the season of takoyaki festival! this year, n takoyaki (a ball-shaped food with a piece of octopus inside) will be served. the deliciousness of the i-th takoyaki is d_i. as is commonly known, when you eat two takoyaki of deliciousness x and y together, you restore x \times y health points. there are \frac{n \times (n - 1)}{2} ways to choose two from the n takoyaki served in the festival. for each of these choices, find the health points restored from eating the two takoyaki, then compute the sum of these \frac{n \times (n - 1)}{2} values. 
"
p02887, Slimes,"there are n slimes lining up from left to right. the colors of these slimes will be given as a string s of length n consisting of lowercase english letters. the i-th slime from the left has the color that corresponds to the i-th character of s. adjacent slimes with the same color will fuse into one larger slime without changing the color. if there were a slime adjacent to this group of slimes before fusion, that slime is now adjacent to the new larger slime. ultimately, how many slimes will be there? 
"
p02888, Triangles,"takahashi has n sticks that are distinguishable from each other. the length of the i-th stick is l_i. he is going to form a triangle using three of these sticks. let a, b, and c be the lengths of the three sticks used. here, all of the following conditions must be satisfied: a &lt; b + c b &lt; c + a c &lt; a + b how many different triangles can be formed? two triangles are considered different when there is a stick used in only one of them. 
"
p02889, Travel by Car,"there are n towns numbered 1 to n and m roads. the i-th road connects town a_i and town b_i bidirectionally and has a length of c_i. takahashi will travel between these towns by car, passing through these roads. the fuel tank of his car can contain at most l liters of fuel, and one liter of fuel is consumed for each unit distance traveled. when visiting a town while traveling, he can full the tank (or choose not to do so). travel that results in the tank becoming empty halfway on the road cannot be done. process the following q queries: the tank is now full. find the minimum number of times he needs to full his tank while traveling from town s_i to town t_i. if town t_i is unreachable, print -1. 

"
p02890, Distinct Numbers,"takahashi has n cards. the i-th of these cards has an integer a_i written on it. takahashi will choose an integer k, and then repeat the following operation some number of times: choose exactly k cards such that the integers written on them are all different, and eat those cards. (the eaten cards disappear.) for each k = 1,2, \ldots, n, find the maximum number of times takahashi can do the operation. 
"
p02891, Connection and Disconnection,"given is a string s. let t be the concatenation of k copies of s.
we can repeatedly perform the following operation: choose a character in t and replace it with a different character.
find the minimum number of operations required to satisfy the following condition: any two adjacent characters in t are different. 
"
p02892, Graph Partition,"given is a connected undirected graph with n vertices and m edges. the vertices are numbered 1 to n, and the edges are described by a grid of characters s.
if s_{i,j} is 1, there is an edge connecting vertex i and j; otherwise, there is no such edge. determine whether it is possible to divide the vertices into non-empty sets v_1, \dots, v_k such that the following condition is satisfied. if the answer is yes, find the maximum possible number of sets, k, in such a division. every edge connects two vertices belonging to two ""adjacent"" sets. more formally, for every edge (i,j), there exists 1\leq t\leq k-1 such that i\in v_t,j\in v_{t+1} or i\in v_{t+1},j\in v_t holds. 

"
p02893, Division by Two with Something,"given are integers n and x. for each integer k between 0 and x (inclusive), find the answer to the following question, then compute the sum of all those answers, modulo 998244353. let us repeat the following operation on the integer k. operation: if the integer is currently odd, subtract 1 from it and divide it by 2; otherwise, divide it by 2 and add 2^{n-1} to it. how many operations need to be performed until k returns to its original value? (the answer is considered to be 0 if k never returns to its original value.) 

"
p02894, Incenters,"given are n points on the circumference of a circle centered at (0,0) in an xy-plane.
the coordinates of the i-th point are (\cos(\frac{2\pi t_i}{l}),\sin(\frac{2\pi t_i}{l})). three distinct points will be chosen uniformly at random from these n points.
find the expected x- and y-coordinates of the center of the circle inscribed in the triangle formed by the chosen points. 
"
p02895, Pairing Points,"there are 2n points generally positioned on the circumference of a circle, numbered 1,\dots,2n in counterclockwise order.
here, a set of points is said to be generally positioned if, for any six distinct points u, v, w, x, y, and z among them, the segments uv, wx, and yz do not intersect at the same point.
additionally, you will be given a 2n\times 2n matrix a. find the number of ways to divide the 2n points into n pairs such that all of the following are satisfied: let us draw a red segment connecting the two points for each pair. then, those red segments form a tree. for each pair (p, q), a_{p,q} = a_{q,p} = 1 holds. here, a set of segments is said to form a tree if they are all connected and form no cycles. for example, see the figure below: upper left: the conditions are satisfied. upper right: the red segments form a cycle, so the conditions are not satisfied. lower left: the red segments are not connected, so the conditions are not satisfied. lower right: some vertices belong to no pair or multiple pairs, so the conditions are not satisfied. figure: a division satisfying the conditions (upper left) and divisions violating them (the others) 

"
p02896, Min Product Sum,"for each of the k^{nm} ways to write an integer between 1 and k (inclusive) in every square in a square grid with n rows and m columns, find the value defined below, then compute the sum of all those k^{nm} values, modulo d. for each of the nm squares, find the minimum among the n+m-1 integers written in the square's row or the square's column. the value defined for the grid is the product of all these nm values. 

"
p02897, Odds of Oddness,"given is an integer n. takahashi chooses an integer a from the positive integers not greater than n with equal probability. find the probability that a is odd. 
"
p02898, Roller Coaster,"n friends of takahashi has come to a theme park. to ride the most popular roller coaster in the park, you must be at least k centimeters tall. the i-th friend is h_i centimeters tall. how many of the takahashi's friends can ride the roller coaster? 
"
p02899, Go to School,"takahashi is a teacher responsible for a class of n students. the students are given distinct student numbers from 1 to n. today, all the students entered the classroom at different times. according to takahashi's record, there were a_i students in the classroom when student number i entered the classroom (including student number i). from these records, reconstruct the order in which the students entered the classroom. 
"
p02900, Disjoint Set of Common Divisors,"given are positive integers a and b. let us choose some number of positive common divisors of a and b. here, any two of the chosen divisors must be coprime. at most, how many divisors can we choose? an integer d is said to be a common divisor of integers x and y when d divides both x and y. integers x and y are said to be coprime when x and y have no positive common divisors other than 1. an integer x is said to divide another integer y when there exists an integer \alpha such that y = \alpha x. 

"
p02901, Get Everything,"we have n locked treasure boxes, numbered 1 to n. a shop sells m keys. the i-th key is sold for a_i yen (the currency of japan), and it can unlock b_i of the boxes: box c_{i1}, c_{i2}, ..., c_{i{b_i}}. each key purchased can be used any number of times. find the minimum cost required to unlock all the treasure boxes. if it is impossible to unlock all of them, print -1. 
"
p02902, Pure,"given is a directed graph g with n vertices and m edges.
the vertices are numbered 1 to n, and the i-th edge is directed from vertex a_i to vertex b_i.
it is guaranteed that the graph contains no self-loops or multiple edges. determine whether there exists an induced subgraph (see notes) of g such that the in-degree and out-degree of every vertex are both 1. if the answer is yes, show one such subgraph.
here the null graph is not considered as a subgraph. 
"
p02903, 01 Matrix,"we have a square grid with h rows and w columns.
snuke wants to write 0 or 1 in each of the squares.
here, all of the following conditions have to be satisfied: for every row, the smaller of the following is a: the number of 0s contained in the row, and the number of 1s contained in the row. (if these two numbers are equal, “the smaller” should be read as “either”.) for every column, the smaller of the following is b: the number of 0s contained in the column, and the number of 1s contained in the column. determine if these conditions can be satisfied by writing 0 or 1 in each of the squares. if the answer is yes, show one way to fill the squares so that the conditions are satisfied. 
"
p02904, Sorting a Segment,"snuke has a permutation (p_0,p_1,\cdots,p_{n-1}) of (0,1,\cdots,n-1). now, he will perform the following operation exactly once: choose k consecutive elements in p and sort them in ascending order. find the number of permutations that can be produced as p after the operation. 
"
p02905, LCMs,"we have an integer sequence of length n: a_0,a_1,\cdots,a_{n-1}. find the following sum (\mathrm{lcm}(a, b) denotes the least common multiple of a and b): \sum_{i=0}^{n-2} \sum_{j=i+1}^{n-1} \mathrm{lcm}(a_i,a_j) since the answer may be enormous, compute it modulo 998244353. 
"
p02906, Unique Path,"snuke's mother gave snuke an undirected graph consisting of n vertices numbered 0 to n-1 and m edges.
this graph was connected and contained no parallel edges or self-loops. one day, snuke broke this graph.
fortunately, he remembered q clues about the graph.
the i-th clue (0 \leq i \leq q-1) is represented as integers a_i,b_i,c_i and means the following: if c_i=0: there was exactly one simple path (a path that never visits the same vertex twice) from vertex a_i to b_i. if c_i=1: there were two or more simple paths from vertex a_i to b_i. snuke is not sure if his memory is correct, and worried whether there is a graph that matches these q clues.
determine if there exists a graph that matches snuke's memory. 
"
p02907, Gachapon,"snuke found a random number generator.
it generates an integer between 0 and n-1 (inclusive).
an integer sequence a_0, a_1, \cdots, a_{n-1}  represents the probability that each of these integers is generated. the integer i (0 \leq i \leq n-1) is generated with probability a_i / s, where s = \sum_{i=0}^{n-1} a_i. the process of generating an integer is done independently each time the generator is executed. now, snuke will repeatedly generate an integer with this generator until the following condition is satisfied: for every i (0 \leq i \leq n-1), the integer i has been generated at least b_i times so far. find the expected number of times snuke will generate an integer, and print it modulo 998244353.
more formally, represent the expected number of generations as an irreducible fraction p/q. then, there exists a unique integer r such that r \times q \equiv p \pmod{998244353},\ 0 \leq r &lt; 998244353, so print this r. from the constraints of this problem, we can prove that the expected number of generations is a finite rational number, and its integer representation modulo 998244353 can be defined. 
"
p02908, Two Permutations,"snuke has permutations (p_0,p_1,\cdots,p_{n-1}) and (q_0,q_1,\cdots,q_{n-1}) of (0,1,\cdots,n-1). now, he will make new permutations a and b of (0,1,\cdots,n-1), under the following conditions: for each i (0 \leq i \leq n-1), a_i should be i or p_i. for each i (0 \leq i \leq n-1), b_i should be i or q_i. let us define the distance of permutations a and b as the number of indices i such that a_i \neq b_i.
find the maximum possible distance of a and b. 
"
p02909, Weather Prediction,"the weather in takahashi's town changes day by day, in the following cycle: sunny, cloudy, rainy, sunny, cloudy, rainy, ... given is a string s representing the weather in the town today. predict the weather tomorrow. 
"
p02910, Tap Dance,"takahashi will do a tap dance. the dance is described by a string s where each character is l, r, u, or d. these characters indicate the positions on which takahashi should step. he will follow these instructions one by one in order, starting with the first character. s is said to be easily playable if and only if it satisfies both of the following conditions: every character in an odd position (1-st, 3-rd, 5-th, \ldots) is r, u, or d. every character in an even position (2-nd, 4-th, 6-th, \ldots) is l, u, or d. your task is to print yes if s is easily playable, and no otherwise. 
"
p02911, Attack Survival,"takahashi has decided to hold fastest-finger-fast quiz games. kizahashi, who is in charge of making the scoreboard, is struggling to write the program that manages the players' scores in a game, which proceeds as follows. a game is played by n players, numbered 1 to n. at the beginning of a game, each player has k points. when a player correctly answers a question, each of the other n-1 players receives minus one (-1) point. there is no other factor that affects the players' scores. at the end of a game, the players with 0 points or lower are eliminated, and the remaining players survive. in the last game, the players gave a total of q correct answers, the i-th of which was given by player a_i.
for kizahashi, write a program that determines whether each of the n players survived this game. 
"
p02912, Powerful Discount Tickets,"takahashi is going to buy n items one by one. the price of the i-th item he buys is a_i yen (the currency of japan). he has m discount tickets, and he can use any number of them when buying an item. if y tickets are used when buying an item priced x yen, he can get the item for \frac{x}{2^y} (rounded down to the nearest integer) yen. what is the minimum amount of money required to buy all the items? 
"
p02913, Who Says a Pun?,"given is a string s of length n. find the maximum length of a non-empty string that occurs twice or more in s as contiguous substrings without overlapping. more formally, find the maximum positive integer len such that there exist integers l_1 and l_2 ( 1 \leq l_1, l_2 \leq n - len + 1 ) that satisfy the following: l_1 + len \leq l_2 
 s[l_1+i] = s[l_2+i] (i = 0, 1, ..., len - 1) 
 if there is no such integer len, print 0. 
"
p02914, Xor Sum 3,"we have n non-negative integers: a_1, a_2, ..., a_n. consider painting at least one and at most n-1 integers among them in red, and painting the rest in blue. let the beauty of the painting be the \mbox{xor} of the integers painted in red, plus the \mbox{xor} of the integers painted in blue. find the maximum possible beauty of the painting.  when x_1 \oplus x_2 \oplus \ldots \oplus x_n is written in base two, the digit in the 2^k's place (k \geq 0) is 1 if the number of integers among x_1, x_2, \ldots, x_n whose binary representations have 1 in the 2^k's place is odd, and 0 if that count is even.  

for example, 3 \oplus 5 = 6.
 

"
p02915, Password,"takahashi is going to set a 3-character password. how many possible passwords are there if each of its characters must be a digit between 1 and n (inclusive)? 
"
p02916, Buffet,"takahashi went to an all-you-can-eat buffet with n kinds of dishes and ate all of them (dish 1, dish 2, \ldots, dish n) once. the i-th dish (1 \leq i \leq n) he ate was dish a_i. when he eats dish i (1 \leq i \leq n), he gains b_i satisfaction points. additionally, when he eats dish i+1 just after eating dish i (1 \leq i \leq n - 1), he gains c_i more satisfaction points. find the sum of the satisfaction points he gained. 
"
p02917, Maximal Value,"there is an integer sequence a of length n whose values are unknown. given is an integer sequence b of length n-1 which is known to satisfy the following:  b_i \geq \max(a_i, a_{i+1})  find the maximum possible sum of the elements of a. 
"
p02918, Face Produces Unhappiness,"there are n people standing in a queue from west to east. given is a string s of length n representing the directions of the people.
the i-th person from the west is facing west if the i-th character of s is l, and east if that character of s is r. a person is happy if the person in front of him/her is facing the same direction.
if no person is standing in front of a person, however, he/she is not happy. you can perform the following operation any number of times between 0 and k (inclusive): operation: choose integers l and r such that 1 \leq l \leq r \leq n, and rotate by 180 degrees the part of the queue: the l-th, (l+1)-th, ..., r-th persons. that is, for each i = 0, 1, ..., r-l, the (l + i)-th person from the west will stand the (r - i)-th from the west after the operation, facing east if he/she is facing west now, and vice versa. what is the maximum possible number of happy people you can have? 
"
p02919, Second Sum,"given is a permutation p of \{1, 2, \ldots, n\}. for a pair (l, r) (1 \le l \lt r \le n), let x_{l, r} be the second largest value among p_l, p_{l+1}, \ldots, p_r. find \displaystyle \sum_{l=1}^{n-1} \sum_{r=l+1}^{n} x_{l,r}. 
"
p02920, Many Slimes,"we have one slime. you can set the health of this slime to any integer value of your choice. a slime reproduces every second by spawning another slime that has strictly less health. you can freely choose the health of each new slime. the first reproduction of our slime will happen in one second. determine if it is possible to set the healths of our first slime and the subsequent slimes spawn so that the multiset of the healths of the 2^n slimes that will exist in n seconds equals a multiset s. here s is a multiset containing 2^n (possibly duplicated) integers: s_1,~s_2,~...,~s_{2^n}. 
"
p02921, Tenki,"you will be given a string s of length 3 representing the weather forecast for three days in the past. the i-th character (1 \leq i \leq 3) of s represents the forecast for the i-th day. s, c, and r stand for sunny, cloudy, and rainy, respectively. you will also be given a string t of length 3 representing the actual weather on those three days. the i-th character (1 \leq i \leq 3) of s represents the actual weather on the i-th day. s, c, and r stand for sunny, cloudy, and rainy, respectively. print the number of days for which the forecast was correct. 
"
p02922, Power Socket,"takahashi's house has only one socket. takahashi wants to extend it with some number of power strips, each with a sockets, into b or more empty sockets. one power strip with a sockets can extend one empty socket into a empty sockets. find the minimum number of power strips required. 
"
p02923, Lower,"there are n squares arranged in a row from left to right. the height of the i-th square from the left is h_i. you will land on a square of your choice, then repeat moving to the adjacent square on the right as long as the height of the next square is not greater than that of the current square. find the maximum number of times you can move. 
"
p02924, ModSum,"for an integer n, we will choose a permutation \{p_1, p_2, ..., p_n\} of \{1, 2, ..., n\}. then, for each i=1,2,...,n, let m_i be the remainder when i is divided by p_i. find the maximum possible value of m_1 + m_2 + \cdots + m_n. 
"
p02925, League,"n players will participate in a tennis tournament. we will call them player 1, player 2, \ldots, player n. the tournament is round-robin format, and there will be n(n-1)/2 matches in total.
is it possible to schedule these matches so that all of the following conditions are satisfied? if the answer is yes, also find the minimum number of days required. each player plays at most one matches in a day. each player i (1 \leq i \leq n) plays one match against player a_{i, 1}, a_{i, 2}, \ldots, a_{i, n-1} in this order. 

"
p02926, Engines,"e869120 is initially standing at the origin (0, 0) in a two-dimensional plane. he has n engines, which can be used as follows: when e869120 uses the i-th engine, his x- and y-coordinate change by x_i and y_i, respectively. in other words, if e869120 uses the i-th engine from coordinates (x, y), he will move to the coordinates (x + x_i, y + y_i). e869120 can use these engines in any order, but each engine can be used at most once. he may also choose not to use some of the engines. he wants to go as far as possible from the origin.
let (x, y) be his final coordinates. find the maximum possible value of \sqrt{x^2 + y^2}, the distance from the origin. 
"
p02927, Takahashi Calendar,"today is august 24, one of the five product days in a year. a date m-d (m is the month, d is the date) is called a product day when d is a two-digit number, and all of the following conditions are satisfied (here d_{10} is the tens digit of the day and d_1 is the ones digit of the day): d_1 \geq 2 d_{10} \geq 2 d_1 \times d_{10} = m takahashi wants more product days, and he made a new calendar called takahashi calendar where a year consists of m month from month 1 to month m, and each month consists of d days from day 1 to day d. in takahashi calendar, how many product days does a year have? 
"
p02928, Kleene Inversion,"we have a sequence of n integers a~=~a_0,~a_1,~...,~a_{n - 1}. let b be a sequence of k \times n integers obtained by concatenating k copies of a. for example, if a~=~1,~3,~2 and k~=~2, b~=~1,~3,~2,~1,~3,~2. find the inversion number of b, modulo 10^9 + 7. here the inversion number of b is defined as the number of ordered pairs of integers (i,~j)~(0 \leq i &lt; j \leq k \times n - 1) such that  b_i &gt; b_j. 
"
p02929, Cell Inversion,"there are 2n squares arranged from left to right. you are given a string of length 2n representing the color of each of the squares. the color of the i-th square from the left is black if the i-th character of s is b, and white if that character is w. you will perform the following operation exactly n times: choose two distinct squares, then invert the colors of these squares and the squares between them. here, to invert the color of a square is to make it white if it is black, and vice versa.   throughout this process, you cannot choose the same square twice or more. that is, each square has to be chosen exactly once. find the number of ways to make all the squares white at the end of the process, modulo 10^9+7. two ways to make the squares white are considered different if and only if there exists i (1 \leq i \leq n) such that the pair of the squares chosen in the i-th operation is different. 
"
p02930, Classified,"atcoder's head office consists of n rooms numbered 1 to n. for any two rooms, there is a direct passage connecting these rooms. for security reasons, takahashi the president asked you to set a level for every passage, which is a positive integer and must satisfy the following condition: for each room i\ (1 \leq i \leq n), if we leave room i, pass through some passages whose levels are all equal and get back to room i, the number of times we pass through a passage is always even. your task is to set levels to the passages so that the highest level of a passage is minimized. 
"
p02931, Card Collector,"there are n cards placed on a grid with h rows and w columns of squares. the i-th card has an integer a_i written on it, and it is placed on the square at the r_i-th row from the top and the c_i-th column from the left. multiple cards may be placed on the same square. you will first pick up at most one card from each row. then, you will pick up at most one card from each column. find the maximum possible sum of the integers written on the picked cards. 
"
p02932, Candy Retribution,"find the number of sequences of n non-negative integers a_1, a_2, ..., a_n that satisfy the following conditions: l \leq a_1 + a_2 + ... + a_n \leq r when the n elements are sorted in non-increasing order, the m-th and (m+1)-th elements are equal. since the answer can be enormous, print it modulo 10^9+7. 
"
p02933, Red or Not,"you will be given an integer a and a string s consisting of lowercase english letters as input. write a program that prints s if a is not less than 3200 and prints red if a is less than 3200. 
"
p02934, Resistors in Parallel,"given is a sequence of n integers a_1, \ldots, a_n. find the (multiplicative) inverse of the sum of the inverses of these numbers, \frac{1}{\frac{1}{a_1} + \ldots + \frac{1}{a_n}}. 
"
p02935, Alchemist,"you have a pot and n ingredients. each ingredient has a real number parameter called value, and the value of the i-th ingredient (1 \leq i \leq n) is v_i. when you put two ingredients in the pot, they will vanish and result in the formation of a new ingredient. the value of the new ingredient will be (x + y) / 2 where x and y are the values of the ingredients consumed, and you can put this ingredient again in the pot. after you compose ingredients in this way n-1 times, you will end up with one ingredient. find the maximum possible value of this ingredient. 
"
p02936, Ki,"given is a rooted tree with n vertices numbered 1 to n.
the root is vertex 1, and the i-th edge (1 \leq i \leq n - 1) connects vertex a_i and b_i. each of the vertices has a counter installed. initially, the counters on all the vertices have the value 0. now, the following q operations will be performed: operation j (1 \leq j \leq q): increment by x_j the counter on every vertex contained in the subtree rooted at vertex p_j. find the value of the counter on each vertex after all operations. 
"
p02937, Strings of Impurity,"given are two strings s and t consisting of lowercase english letters. determine if there exists an integer i satisfying the following condition, and find the minimum such i if it exists. let s' be the concatenation of 10^{100} copies of s. t is a subsequence of the string {s'}_1{s'}_2\ldots{s'}_i (the first i characters in s'). 

"
p02938, Coincidence,"given are integers l and r. find the number, modulo 10^9 + 7, of pairs of integers (x, y) (l \leq x \leq y \leq r) such that the remainder when y is divided by x is equal to y \mbox{ xor } x. when a \mbox{ xor } b is written in base two, the digit in the 2^k's place (k \geq 0) is 1 if either a or b, but not both, has 1 in the 2^k's place, and 0 otherwise. 

for example, 3 \mbox{ xor } 5 = 6. (in base two: 011 \mbox{ xor } 101 = 110.)
 

"
p02939, Dividing a String,"given is a string s consisting of lowercase english letters. find the maximum positive integer k that satisfies the following condition: there exists a partition of s into k non-empty strings s=s_1s_2...s_k such that s_i \neq s_{i+1} (1 \leq i \leq k-1). here s_1s_2...s_k represents the concatenation of s_1,s_2,...,s_k in this order. 
"
p02940, RGB Balls,"we have 3n colored balls with ids from 1 to 3n.
a string s of length 3n represents the colors of the balls. the color of ball i is red if s_i is r, green if s_i is g, and blue if s_i is b. there are n red balls, n green balls, and n blue balls. takahashi will distribute these 3n balls to n people so that each person gets one red ball, one blue ball, and one green ball.
the people want balls with ids close to each other, so he will additionally satisfy the following condition: let a_j &lt; b_j &lt; c_j be the ids of the balls received by the j-th person in ascending order. then, \sum_j (c_j-a_j) should be as small as possible. find the number of ways in which takahashi can distribute the balls. since the answer can be enormous, compute it modulo 998244353.
we consider two ways to distribute the balls different if and only if there is a person who receives different sets of balls. 
"
p02941, Numbers on a Circle,"there are n positive integers arranged in a circle. now, the i-th number is a_i. takahashi wants the i-th number to be b_i. for this objective, he will repeatedly perform the following operation: choose an integer i such that 1 \leq i \leq n. let a, b, c be the (i-1)-th, i-th, and (i+1)-th numbers, respectively. replace the i-th number with a+b+c. here the 0-th number is the n-th number, and the (n+1)-th number is the 1-st number. determine if takahashi can achieve his objective.
if the answer is yes, find the minimum number of operations required. 
"
p02942, Sorting a Grid,"we have a grid with n rows and m columns of squares.
each integer from 1 to nm is written in this grid once.
the number written in the square at the i-th row from the top and the j-th column from the left is a_{ij}. you need to rearrange these numbers as follows: first, for each of the n rows, rearrange the numbers written in it as you like. second, for each of the m columns, rearrange the numbers written in it as you like. finally, for each of the n rows, rearrange the numbers written in it as you like. after rearranging the numbers, you want the number written in the square at the i-th row from the top and the j-th column from the left to be m\times (i-1)+j.
construct one such way to rearrange the numbers. the constraints guarantee that it is always possible to achieve the objective. 
"
p02943, Reversing and Concatenating,"takahashi has a string s of length n consisting of lowercase english letters.
on this string, he will perform the following operation k times: let t be the string obtained by reversing s, and u be the string obtained by concatenating s and t in this order. let s' be some contiguous substring of u with length n, and replace s with s'. among the strings that can be the string s after the k operations, find the lexicographically smallest possible one. 
"
p02944, Counting of Subarrays,"for a sequence s of positive integers and positive integers k and l, s is said to belong to level (k,l) when one of the following conditions is satisfied: the length of s is 1, and its only element is k. there exist sequences t_1,t_2,...,t_m (m \geq l) belonging to level (k-1,l) such that the concatenation of t_1,t_2,...,t_m in this order coincides with s. note that the second condition has no effect when k=1, that is, a sequence belongs to level (1,l) only if the first condition is satisfied. given are a sequence of positive integers a_1,a_2,...,a_n and a positive integer l.
find the number of subsequences a_i,a_{i+1},...,a_j (1 \leq i  \leq j \leq n) that satisfy the following condition: there exists a positive integer k such that the sequence a_i,a_{i+1},...,a_j belongs to level (k,l). 

"
p02945,x,"we have two integers: a and b. print the largest number among a + b, a - b, and a \times b. 
"
p02946, One Clue,"there are 2000001 stones placed on a number line. the coordinates of these stones are -1000000, -999999, -999998, \ldots, 999999, 1000000. among them, some k consecutive stones are painted black, and the others are painted white. additionally, we know that the stone at coordinate x is painted black. print all coordinates that potentially contain a stone painted black, in ascending order. 
"
p02947, Green Bin,"we will call a string obtained by arranging the characters contained in a string a in some order, an anagram of a. for example, greenbin is an anagram of beginner. as seen here, when the same character occurs multiple times, that character must be used that number of times. given are n strings s_1, s_2, \ldots, s_n. each of these strings has a length of 10 and consists of lowercase english characters. additionally, all of these strings are distinct. find the number of pairs of integers i, j (1 \leq i &lt; j \leq n) such that s_i is an anagram of s_j. 
"
p02948, Summer Vacation,"there are n one-off jobs available. if you take the i-th job and complete it, you will earn the reward of b_i after a_i days from the day you do it. you can take and complete at most one of these jobs in a day. however, you cannot retake a job that you have already done. find the maximum total reward that you can earn no later than m days from today. you can already start working today. 
"
p02949, Coins Respawn,"there is a directed graph with n vertices numbered 1 to n and m edges.
the i-th edge is directed from vertex a_i to vertex b_i, and there are c_i coins placed along that edge.
additionally, there is a button on vertex n. we will play a game on this graph.
you start the game on vertex 1 with zero coins, and head for vertex n by traversing the edges while collecting coins.
it takes one minute to traverse an edge, and you can collect the coins placed along the edge each time you traverse it.
as usual in games, even if you traverse an edge once and collect the coins, the same number of coins will reappear next time you traverse that edge, which you can collect again. when you reach vertex n, you can end the game by pressing the button. (you can also choose to leave vertex n without pressing the button and continue traveling.)
however, when you end the game, you will be asked to pay t \times p coins, where t is the number of minutes elapsed since the start of the game. if you have less than t \times p coins, you will have to pay all of your coins instead. your score will be the number of coins you have after this payment.
determine if there exists a maximum value of the score that can be obtained. if the answer is yes, find that maximum value. 
"
p02950, Polynomial Construction,"given are a prime number p and a sequence of p integers a_0, \ldots, a_{p-1} consisting of zeros and ones. find a polynomial of degree at most p-1, f(x) = b_{p-1} x^{p-1} + b_{p-2} x^{p-2} + \ldots + b_0, satisfying the following conditions: for each i (0 \leq i \leq p-1), b_i is an integer such that 0 \leq b_i \leq p-1. for each i (0 \leq i \leq p-1), f(i) \equiv a_i \pmod p. 

"
p02951, Transfer,"we have two bottles for holding water. bottle 1 can hold up to a milliliters of water, and now it contains b milliliters of water. bottle 2 contains c milliliters of water. we will transfer water from bottle 2 to bottle 1 as much as possible. how much amount of water will remain in bottle 2? 
"
p02952, Uneven Numbers,"given is an integer n. find the number of positive integers less than or equal to n that have an odd number of digits (in base ten without leading zeros). 
"
p02953, Build Stairs,"there are n squares arranged in a row from left to right. the height of the i-th square from the left is h_i. for each square, you will perform either of the following operations once: decrease the height of the square by 1. do nothing. determine if it is possible to perform the operations so that the heights of the squares are non-decreasing from left to right. 
"
p02954, Gathering Children,"given is a string s consisting of l and r. let n be the length of s. there are n squares arranged from left to right, and the i-th character of s from the left is written on the i-th square from the left. the character written on the leftmost square is always r, and the character written on the rightmost square is always l. initially, one child is standing on each square. each child will perform the move below 10^{100} times: move one square in the direction specified by the character written in the square on which the child is standing. l denotes left, and r denotes right. find the number of children standing on each square after the children performed the moves. 
"
p02955, Max GCD,"we have a sequence of n integers: a_1, a_2, \cdots, a_n. you can perform the following operation between 0 and k times (inclusive): choose two integers i and j such that i \neq j, each between 1 and n (inclusive). add 1 to a_i and -1 to a_j, possibly producing a negative element. compute the maximum possible positive integer that divides every element of a after the operations. here a positive integer x divides an integer y if and only if there exists an integer z such that y = xz. 
"
p02956, Enclosed Points,"we have a set s of n points in a two-dimensional plane. the coordinates of the i-th point are (x_i, y_i). the n points have distinct x-coordinates and distinct y-coordinates. for a non-empty subset t of s, let f(t) be the number of points contained in the smallest rectangle, whose sides are parallel to the coordinate axes, that contains all the points in t. more formally, we define f(t) as follows: f(t) :=  (the number of integers i (1 \leq i \leq n) such that a \leq x_i \leq b and c \leq y_i \leq d, where a, b, c, and d are the minimum x-coordinate, the maximum x-coordinate, the minimum y-coordinate, and the maximum y-coordinate of the points in t) find the sum of f(t) over all non-empty subset t of s. since it can be enormous, print the sum modulo 998244353. 
"
p02957, Harmony,"we have two distinct integers a and b. print the integer k such that |a - k| = |b - k|. if such an integer does not exist, print impossible instead. 
"
p02958, 0 or 1 Swap,"we have a sequence p = {p_1,\ p_2,\ ...,\ p_n} which is a permutation of {1,\ 2,\ ...,\ n}. you can perform the following operation at most once: choose integers i and j (1 \leq i &lt; j \leq n), and swap p_i and p_j. note that you can also choose not to perform it. print yes if you can sort p in ascending order in this way, and no otherwise. 
"
p02959, City Savers,"there are n+1 towns. the i-th town is being attacked by a_i monsters. we have n heroes. the i-th hero can defeat monsters attacking the i-th or (i+1)-th town, for a total of at most b_i monsters. what is the maximum total number of monsters the heroes can cooperate to defeat? 
"
p02960, Digits Parade,"given is a string s. each character in s is either a digit (0, ..., 9) or ?. among the integers obtained by replacing each occurrence of ? with a digit, how many have a remainder of 5 when divided by 13? an integer may begin with 0. since the answer can be enormous, print the count modulo 10^9+7. 
"
p02961, Golf,"jumbo takahashi will play golf on an infinite two-dimensional grid. the ball is initially at the origin (0, 0), and the goal is a grid point (a point with integer coordinates) (x, y). in one stroke, jumbo takahashi can perform the following operation: choose a grid point whose manhattan distance from the current position of the ball is k, and send the ball to that point. the game is finished when the ball reaches the goal, and the score will be the number of strokes so far. jumbo takahashi wants to finish the game with the lowest score possible. determine if the game can be finished. if the answer is yes, find one way to bring the ball to the goal with the lowest score possible. what is manhattan distance? the manhattan distance between two points (x_1, y_1) and (x_2, y_2) is defined as |x_1-x_2|+|y_1-y_2|.  "
p02962, Strings of Eternity,"given are two strings s and t consisting of lowercase english letters. determine if the number of non-negative integers i satisfying the following condition is finite, and find the maximum value of such i if the number is finite. there exists a non-negative integer j such that the concatenation of i copies of t is a substring of the concatenation of j copies of s. 

"
p02963, Triangle,"given is an integer s.
find a combination of six integers x_1,y_1,x_2,y_2,x_3, and y_3 that satisfies all of the following conditions: 0 \leq x_1,y_1,x_2,y_2,x_3,y_3 \leq 10^9 the area of the triangle in a two-dimensional plane whose vertices are (x_1,y_1),(x_2,y_2), and (x_3,y_3) is s/2. we can prove that there always exist six integers that satisfy the conditions under the constraints of this problem. 
"
p02964, Do Not Duplicate,"we have a sequence of n \times k integers: x=(x_0,x_1,\cdots,x_{n \times k-1}).
its elements are represented by another sequence of n integers: a=(a_0,a_1,\cdots,a_{n-1}). for each pair i, j (0 \leq i \leq k-1,\ 0 \leq j \leq n-1), x_{i \times n + j}=a_j holds. snuke has an integer sequence s, which is initially empty.
for each i=0,1,2,\cdots,n \times k-1, in this order, he will perform the following operation: if s does not contain x_i: add x_i to the end of s. if s does contain x_i: repeatedly delete the element at the end of s until s no longer contains x_i. note that, in this case, we do not add x_i to the end of s. find the elements of s after snuke finished the operations. 
"
p02965, GP 2,"we have a sequence of n integers: x=(x_0,x_1,\cdots,x_{n-1}).
initially, x_i=0 for each i (0 \leq i \leq n-1). snuke will perform the following operation exactly m times: choose two distinct indices i, j (0 \leq i,j \leq n-1,\ i \neq j).
then, replace x_i with x_i+2 and x_j with x_j+1. find the number of different sequences that can result after m operations.
since it can be enormous, compute the count modulo 998244353. 
"
p02966, Negative Cycle,"we have a weighted directed graph with n vertices numbered 0 to n-1. the graph initially has n-1 edges. the i-th edge (0 \leq i \leq n-2) is directed from vertex i to vertex i+1 and has a weight of 0. snuke will now add a new edge (i → j) for every pair i, j (0 \leq i,j \leq n-1,\ i \neq j).
the weight of the edge will be -1 if i &lt; j, and 1 otherwise. ringo is a boy. a negative cycle (a cycle whose total weight is negative) in a graph makes him sad.
he will delete some of the edges added by snuke so that the graph will no longer contain a negative cycle.
the cost of deleting the edge (i → j) is a_{i,j}. he cannot delete edges that have been present from the beginning. find the minimum total cost required to achieve ringo's objective. 
"
p02967, ABC String,"given is a string s consisting of a,b, and c. consider the (not necessarily contiguous) subsequences x of s that satisfy all of the following conditions: a, b, and c all occur the same number of times in x. no two adjacent characters in x are the same. among these subsequences, find one of the longest. here a subsequence of s is a string obtained by deleting zero or more characters from s. 
"
p02968, Square Constraints,"given is an integer n.
how many permutations (p_0,p_1,\cdots,p_{2n-1}) of (0,1,\cdots,2n-1) satisfy the following condition? for each i (0 \leq i \leq 2n-1), n^2 \leq i^2+p_i^2 \leq (2n)^2 holds. since the number can be enormous, compute it modulo m. 
"
p02969, Dodecagon,"it is known that the area of a regular dodecagon inscribed in a circle of radius a is 3a^2. given an integer r, find the area of a regular dodecagon inscribed in a circle of radius r. 
"
p02970, Golden Apple,"there are n apple trees in a row. people say that one of them will bear golden apples. we want to deploy some number of inspectors so that each of these trees will be inspected. each inspector will be deployed under one of the trees. for convenience, we will assign numbers from 1 through n to the trees. an inspector deployed under the i-th tree (1 \leq i \leq n) will inspect the trees with numbers between i-d and i+d (inclusive). find the minimum number of inspectors that we need to deploy to achieve the objective. 
"
p02971, Exception Handling,"you are given a sequence of length n: a_1, a_2, ..., a_n.
for each integer i between 1 and n (inclusive), answer the following question: find the maximum value among the n-1 elements other than a_i in the sequence. 

"
p02972, Preparing Boxes,"there are n empty boxes arranged in a row from left to right.
the integer i is written on the i-th box from the left (1 \leq i \leq n). for each of these boxes, snuke can choose either to put a ball in it or to put nothing in it. we say a set of choices to put a ball or not in the boxes is good when the following condition is satisfied: for every integer i between 1 and n (inclusive), the total number of balls contained in the boxes with multiples of i written on them is congruent to a_i modulo 2. does there exist a good set of choices? if the answer is yes, find one good set of choices. 
"
p02973, Sequence Decomposing,"you are given a sequence with n integers: a = \{ a_1, a_2, \cdots, a_n \}.
for each of these n integers, we will choose a color and paint the integer with that color. here the following condition must be satisfied: if a_i and a_j (i &lt; j) are painted with the same color, a_i &lt; a_j. find the minimum number of colors required to satisfy the condition. 
"
p02974, Permutation Oddness,"let us define the oddness of a permutation p = {p_1,\ p_2,\ ...,\ p_n} of {1,\ 2,\ ...,\ n} as \sum_{i = 1}^n |i - p_i|. find the number of permutations of {1,\ 2,\ ...,\ n} of oddness k, modulo 10^9+7. 
"
p02975, XOR Circle,"snuke has n hats. the i-th hat has an integer a_i written on it. there are n camels standing in a circle.
snuke will put one of his hats on each of these camels. if there exists a way to distribute the hats to the camels such that the following condition is satisfied for every camel, print yes; otherwise, print no. the bitwise xor of the numbers written on the hats on both adjacent camels is equal to the number on the hat on itself. 


what is xor?

the bitwise xor x_1 \oplus x_2 \oplus \ldots \oplus x_n of n non-negative integers x_1, x_2, \ldots, x_n is defined as follows:

- when x_1 \oplus x_2 \oplus \ldots \oplus x_n is written in base two, the digit in the 2^k's place (k \geq 0) is 1 if the number of integers among x_1, x_2, \ldots, x_n whose binary representations have 1 in the 2^k's place is odd, and 0 if that count is even.

for example, 3 \oplus 5 = 6.


"
p02976, Even Degrees,"you are given a simple connected undirected graph with n vertices and m edges. the vertices are numbered 1 to n, and the i-th edge connects vertex a_i and vertex b_i.
takahashi will assign one of the two possible directions to each of the edges in the graph to make a directed graph.
determine if it is possible to make a directed graph with an even number of edges going out from every vertex. if the answer is yes, construct one such graph. 
"
p02977, Skolem XOR Tree,"you are given an integer n. determine if there exists a tree with 2n vertices numbered 1 to 2n satisfying the following condition, and show one such tree if the answer is yes. assume that, for each integer i between 1 and n (inclusive), vertex i and n+i have the weight i. then, for each integer i between 1 and n, the bitwise xor of the weights of the vertices on the path between vertex i and n+i (including themselves) is i. 

"
p02978, Add and Remove,"there is a stack of n cards, each of which has a non-negative integer written on it. the integer written on the i-th card from the top is a_i. snuke will repeat the following operation until two cards remain: choose three consecutive cards from the stack. eat the middle card of the three. for each of the other two cards, replace the integer written on it by the sum of that integer and the integer written on the card eaten. return the two cards to the original position in the stack, without swapping them. find the minimum possible sum of the integers written on the last two cards remaining. 
"
p02979, Develop,"there is a blackboard on which all integers from -10^{18} through 10^{18} are written, each of them appearing once. takahashi will repeat the following sequence of operations any number of times he likes, possibly zero: choose an integer between 1 and n (inclusive) that is written on the blackboard. let x be the chosen integer, and erase x. if x-2 is not written on the blackboard, write x-2 on the blackboard. if x+k is not written on the blackboard, write x+k on the blackboard. find the number of possible sets of integers written on the blackboard after some number of operations, modulo m.
we consider two sets different when there exists an integer contained in only one of the sets. 
"
p02980, Two Histograms,"we have a square grid with n rows and m columns. takahashi will write an integer in each of the squares, as follows: first, write 0 in every square. for each i=1,2,...,n, choose an integer k_i (0\leq k_i\leq m), and add 1 to each of the leftmost k_i squares in the i-th row. for each j=1,2,...,m, choose an integer l_j (0\leq l_j\leq n), and add 1 to each of the topmost l_j squares in the j-th column. now we have a grid where each square contains 0, 1, or 2. find the number of different grids that can be made this way, modulo 998244353.
we consider two grids different when there exists a square with different integers. 
"
p02981, T or T,"n of us are going on a trip, by train or taxi. the train will cost each of us a yen (the currency of japan). the taxi will cost us a total of b yen. how much is our minimum total travel expense? 
"
p02982, Good Distance,"there are n points in a d-dimensional space. the coordinates of the i-th point are (x_{i1}, x_{i2}, ..., x_{id}). the distance between two points with coordinates (y_1, y_2, ..., y_d) and (z_1, z_2, ..., z_d) is \sqrt{(y_1 - z_1)^2 + (y_2 - z_2)^2 + ... + (y_d - z_d)^2}. how many pairs (i, j) (i &lt; j) are there such that the distance between the i-th point and the j-th point is an integer? 
"
p02983, Remainder Minimization 2019,"you are given two non-negative integers l and r.
we will choose two integers i and j such that l \leq i &lt; j \leq r.
find the minimum possible value of (i \times j) \mbox{ mod } 2019. 
"
p02984, Rain Flows into Dams,"there are n mountains in a circle, called mountain 1, mountain 2, ..., mountain n in clockwise order. n is an odd number. between these mountains, there are n dams, called dam 1, dam 2, ..., dam n. dam i (1 \leq i \leq n) is located between mountain i and i+1 (mountain n+1 is mountain 1). when mountain i (1 \leq i \leq n) receives 2x liters of rain, dam i-1 and dam i each accumulates x liters of water (dam 0 is dam n). one day, each of the mountains received a non-negative even number of liters of rain. as a result, dam i (1 \leq i \leq n) accumulated a total of a_i liters of water. find the amount of rain each of the mountains received. we can prove that the solution is unique under the constraints of this problem. 
"
p02985, Virus Tree 2,"you are given a tree with n vertices and n-1 edges. the vertices are numbered 1 to n, and the i-th edge connects vertex a_i and b_i. you have coloring materials of k colors.
for each vertex in the tree, you will choose one of the k colors to paint it, so that the following condition is satisfied: if the distance between two different vertices x and y is less than or equal to two, x and y have different colors. how many ways are there to paint the tree? find the count modulo 1\ 000\ 000\ 007. 
what is tree?
a tree is a kind of graph. for detail, please see: wikipedia ""tree (graph theory)""  "
p02986, Colorful Tree,"there is a tree with n vertices numbered 1 to n.
the i-th edge in this tree connects vertex a_i and vertex b_i, and the color and length of that edge are c_i and d_i, respectively.
here the color of each edge is represented by an integer between 1 and n-1 (inclusive). the same integer corresponds to the same color, and different integers correspond to different colors. answer the following q queries: query j (1 \leq j \leq q): assuming that the length of every edge whose color is x_j is changed to y_j, find the distance between vertex u_j and vertex v_j. (the changes of the lengths of edges do not affect the subsequent queries.) 

"
p02987,Fifty,"you are given a 4-character string s consisting of uppercase english letters.
determine if s consists of exactly two kinds of characters which both appear twice in s. 
"
p02988, Ordinary Number,"we have a permutation p = {p_1,\ p_2,\ ...,\ p_n} of {1,\ 2,\ ...,\ n}. print the number of elements p_i (1 &lt; i &lt; n) that satisfy the following condition: p_i is the second smallest number among the three numbers p_{i - 1}, p_i, and p_{i + 1}. 

"
p02989, Divide the Problems,"takahashi made n problems for competitive programming.
the problems are numbered 1 to n, and the difficulty of problem i is represented as an integer d_i (the higher, the harder). he is dividing the problems into two categories by choosing an integer k, as follows: a problem with difficulty k or higher will be for arcs. a problem with difficulty lower than k will be for abcs. how many choices of the integer k make the number of problems for arcs and the number of problems for abcs the same? 
"
p02990, Blue and Red Balls,"there are k blue balls and n-k red balls. the balls of the same color cannot be distinguished. snuke and takahashi are playing with these balls. first, snuke will arrange the n balls in a row from left to right. then, takahashi will collect only the k blue balls. in one move, he can collect any number of consecutive blue balls. he will collect all the blue balls in the fewest moves possible. how many ways are there for snuke to arrange the n balls in a row so that takahashi will need exactly i moves to collect all the blue balls? compute this number modulo 10^9+7 for each i such that 1 \leq i \leq k. 
"
p02991, Hopscotch Addict,"ken loves ken-ken-pa (japanese version of hopscotch). today, he will play it on a directed graph g.
g consists of n vertices numbered 1 to n, and m edges. the i-th edge points from vertex u_i to vertex v_i. first, ken stands on vertex s. he wants to reach vertex t by repeating ken-ken-pa. in one ken-ken-pa, he does the following exactly three times: follow an edge pointing from the vertex on which he is standing. determine if he can reach vertex t by repeating ken-ken-pa. if the answer is yes, find the minimum number of ken-ken-pa needed to reach vertex t. note that visiting vertex t in the middle of a ken-ken-pa does not count as reaching vertex t by repeating ken-ken-pa. 
"
p02992, Small Products,"find the number of sequences of length k consisting of positive integers such that the product of any two adjacent elements is at most n, modulo 10^9+7. 
"
p02993, Security,"the door of snuke's laboratory is locked with a security code. the security code is a 4-digit number. we say the security code is hard to enter when it contains two consecutive digits that are the same. you are given the current security code s. if s is hard to enter, print bad; otherwise, print good. 
"
p02994, Bite Eating,"you have n apples, called apple 1, apple 2, apple 3, ..., apple n. the flavor of apple i is l+i-1, which can be negative. you can make an apple pie using one or more of the apples. the flavor of the apple pie will be the sum of the flavors of the apples used. you planned to make an apple pie using all of the apples, but being hungry tempts you to eat one of them, which can no longer be used to make the apple pie. you want to make an apple pie that is as similar as possible to the one that you planned to make. thus, you will choose the apple to eat so that the flavor of the apple pie made of the remaining n-1 apples will have the smallest possible absolute difference from the flavor of the apple pie made of all the n apples. find the flavor of the apple pie made of the remaining n-1 apples when you choose the apple to eat as above. we can prove that this value is uniquely determined. 
"
p02995,Division,"you are given four integers a, b, c, and d. find the number of integers between a and b (inclusive) that can be evenly divided by neither c nor d. 
"
p02996, Megalomania,"kizahashi, who was appointed as the administrator of abc at national problem workshop in the kingdom of atcoder, got too excited and took on too many jobs. let the current time be time 0. kizahashi has n jobs numbered 1 to n. it takes a_i units of time for kizahashi to complete job i. the deadline for job i is time b_i, and he must complete the job before or at this time. kizahashi cannot work on two or more jobs simultaneously, but when he completes a job, he can start working on another immediately. can kizahashi complete all the jobs in time? if he can, print yes; if he cannot, print no. 
"
p02997, Friendships,"does there exist an undirected graph with n vertices satisfying the following conditions? the graph is simple and connected. the vertices are numbered 1, 2, ..., n. let m be the number of edges in the graph. the edges are numbered 1, 2, ..., m, the length of each edge is 1, and edge i connects vertex u_i and vertex v_i. there are exactly k pairs of vertices (i,\ j)\ (i &lt; j) such that the shortest distance between them is 2. if there exists such a graph, construct an example. 
"
p02998, Must Be Rectangular!,"there are n dots in a two-dimensional plane. the coordinates of the i-th dot are (x_i, y_i). we will repeat the following operation as long as possible: choose four integers a, b, c, d (a \neq c, b \neq d) such that there are dots at exactly three of the positions (a, b), (a, d), (c, b) and (c, d), and add a dot at the remaining position. we can prove that we can only do this operation a finite number of times. find the maximum number of times we can do the operation. 
"
p02999, Rounding,"x and a are integers between 0 and 9 (inclusive). if x is less than a, print 0; if x is not less than a, print 10. 
"
p03000, Bounding,"a ball will bounce along a number line, making n + 1 bounces. it will make the first bounce at coordinate d_1 = 0, and the i-th bounce (2 \leq i \leq n+1) at coordinate d_i = d_{i-1} + l_{i-1}. how many times will the ball make a bounce where the coordinate is at most x? 
"
p03001, Rectangle Cutting,"there is a rectangle in a coordinate plane. the coordinates of the four vertices are (0,0), (w,0), (w,h), and (0,h).
you are given a point (x,y) which is within the rectangle or on its border. we will draw a straight line passing through (x,y) to cut the rectangle into two parts. find the maximum possible area of the part whose area is not larger than that of the other. additionally, determine if there are multiple ways to cut the rectangle and achieve that maximum. 
"
p03002, Enough Array,"you are given a sequence of positive integers of length n, a=a_1,a_2,…,a_{n}, and an integer k.
how many contiguous subsequences of a satisfy the following condition? (condition) the sum of the elements in the contiguous subsequence is at least k. we consider two contiguous subsequences different if they derive from different positions in a, even if they are the same in content. note that the answer may not fit into a 32-bit integer type. 
"
p03003, Common Subsequence,"you are given two integer sequences s and t of length n and m, respectively, both consisting of integers between 1 and 10^5 (inclusive). in how many pairs of a subsequence of s and a subsequence of t do the two subsequences are the same in content? here the subsequence of a is a sequence obtained by removing zero or more elements from a and concatenating the remaining elements without changing the order. for both s and t, we distinguish two subsequences if the sets of the indices of the removed elements are different, even if the subsequences are the same in content. since the answer can be tremendous, print the number modulo 10^9+7. 
"
p03004, Minimum Bounding Box,"there are n points in a two-dimensional plane. the initial coordinates of the i-th point are (x_i, y_i). now, each point starts moving at a speed of 1 per second, in a direction parallel to the x- or y- axis. you are given a character d_i that represents the specific direction in which the i-th point moves, as follows: if d_i = r, the i-th point moves in the positive x direction; if d_i = l, the i-th point moves in the negative x direction; if d_i = u, the i-th point moves in the positive y direction; if d_i = d, the i-th point moves in the negative y direction. you can stop all the points at some moment of your choice after they start moving (including the moment they start moving).
then, let x_{max} and x_{min} be the maximum and minimum among the x-coordinates of the n points, respectively. similarly, let y_{max} and y_{min} be the maximum and minimum among the y-coordinates of the n points, respectively. find the minimum possible value of (x_{max} - x_{min}) \times (y_{max} - y_{min}) and print it. 
"
p03005, Ball Distribution,"takahashi is distributing n balls to k persons. if each person has to receive at least one ball, what is the maximum possible difference in the number of balls received between the person with the most balls and the person with the fewest balls? 
"
p03006, Picking Up,"there are n balls in a two-dimensional plane. the i-th ball is at coordinates (x_i, y_i). we will collect all of these balls, by choosing two integers p and q such that p \neq 0 or q \neq 0 and then repeating the following operation: choose a ball remaining in the plane and collect it. let (a, b) be the coordinates of this ball. if we collected a ball at coordinates (a - p, b - q) in the previous operation, the cost of this operation is 0. otherwise, including when this is the first time to do this operation, the cost of this operation is 1. find the minimum total cost required to collect all the balls when we optimally choose p and q. 
"
p03007, Successive Subtraction,"there are n integers, a_1, a_2, ..., a_n, written on a blackboard. we will repeat the following operation n-1 times so that we have only one integer on the blackboard. choose two integers x and y on the blackboard and erase these two integers. then, write a new integer x-y. find the maximum possible value of the final integer on the blackboard and a sequence of operations that maximizes the final integer. 
"
p03008, Squirrel Merchant,"the squirrel chokudai has n acorns.
one day, he decides to do some trades in multiple precious metal exchanges to make more acorns. his plan is as follows: get out of the nest with n acorns in his hands. go to exchange a and do some trades. go to exchange b and do some trades. go to exchange a and do some trades. go back to the nest. in exchange x (x = a, b), he can perform the following operations any integer number of times (possibly zero) in any order: lose g_{x} acorns and gain 1 gram of gold. gain g_{x} acorns and lose 1 gram of gold. lose s_{x} acorns and gain 1 gram of silver. gain s_{x} acorns and lose 1 gram of silver. lose b_{x} acorns and gain 1 gram of bronze. gain b_{x} acorns and lose 1 gram of bronze. naturally, he cannot perform an operation that would leave him with a negative amount of acorns, gold, silver, or bronze. what is the maximum number of acorns that he can bring to the nest?
note that gold, silver, or bronze brought to the nest would be worthless because he is just a squirrel. 
"
p03009, Balanced Piles,"there are n squares arranged in a row, numbered 1 to n from left to right. takahashi will stack building blocks on these squares, on which there are no blocks yet. he wants to stack blocks on the squares evenly, so he will repeat the following operation until there are h blocks on every square: let m and m be the maximum and minimum numbers of blocks currently stacked on a square, respectively. choose a square on which m blocks are stacked (if there are multiple such squares, choose any one of them), and add a positive number of blocks on that square so that there will be at least m and at most m + d blocks on that square. tell him how many ways there are to have h blocks on every square by repeating this operation. since there can be extremely many ways, print the number modulo 10^9+7. 
"
p03010, Diverta City,"diverta city is a new city consisting of n towns numbered 1, 2, ..., n. the mayor ringo is planning to connect every pair of two different towns with a bidirectional road. the length of each road is undecided. a hamiltonian path is a path that starts at one of the towns and visits each of the other towns exactly once.
the reversal of a hamiltonian path is considered the same as the original hamiltonian path. there are n! / 2 hamiltonian paths. ringo wants all these paths to have distinct total lengths (the sum of the lengths of the roads on a path), to make the city diverse. find one such set of the lengths of the roads, under the following conditions: the length of each road must be a positive integer. the maximum total length of a hamiltonian path must be at most 10^{11}. 

"
p03011, Airplane,"there are three airports a, b and c, and flights between each pair of airports in both directions. a one-way flight between airports a and b takes p hours, a one-way flight between airports b and c takes q hours, and a one-way flight between airports c and a takes r hours. consider a route where we start at one of the airports, fly to another airport and then fly to the other airport. what is the minimum possible sum of the flight times? 
"
p03012, Balance,"we have n weights indexed 1 to n. the mass of the weight indexed i is w_i. we will divide these weights into two groups: the weights with indices not greater than t, and those with indices greater than t, for some integer 1 \leq t &lt; n. let s_1 be the sum of the masses of the weights in the former group, and s_2 be the sum of the masses of the weights in the latter group. consider all possible such divisions and find the minimum possible absolute difference of s_1 and s_2. 
"
p03013, Typical Stairs,"there is a staircase with n steps. takahashi is now standing at the foot of the stairs, that is, on the 0-th step.
he can climb up one or two steps at a time. however, the treads of the a_1-th, a_2-th, a_3-th, \ldots, a_m-th steps are broken, so it is dangerous to set foot on those steps. how many are there to climb up to the top step, that is, the n-th step, without setting foot on the broken steps?
find the count modulo 1\ 000\ 000\ 007. 
"
p03014, Lamp,"there is a grid with h horizontal rows and w vertical columns, and there are obstacles on some of the squares. snuke is going to choose one of the squares not occupied by an obstacle and place a lamp on it.
the lamp placed on the square will emit straight beams of light in four cardinal directions: up, down, left, and right.
in each direction, the beam will continue traveling until it hits a square occupied by an obstacle or it hits the border of the grid. it will light all the squares on the way, including the square on which the lamp is placed, but not the square occupied by an obstacle. snuke wants to maximize the number of squares lighted by the lamp. you are given h strings s_i (1 \leq i \leq h), each of length w. if the j-th character (1 \leq j \leq w) of s_i is #, there is an obstacle on the square at the i-th row from the top and the j-th column from the left; if that character is ., there is no obstacle on that square. find the maximum possible number of squares lighted by the lamp. 
"
p03015, Sum Equals Xor,"you are given a positive integer l in base two.
how many pairs of non-negative integers (a, b) satisfy the following conditions? a + b \leq l a + b = a \mbox{ xor } b since there can be extremely many such pairs, print the count modulo 10^9 + 7.  what is xor? the xor of integers a and b, a \mbox{ xor } b, is defined as follows: when a \mbox{ xor } b is written in base two, the digit in the 2^k's place (k \geq 0) is 1 if either a or b, but not both, has 1 in the 2^k's place, and 0 otherwise. for example, 3 \mbox{ xor } 5 = 6. (in base two: 011 \mbox{ xor } 101 = 110.)  "
p03016, Takahashi's Basics in Education and Learning,"there is an arithmetic progression with l terms: s_0, s_1, s_2, ... , s_{l-1}. the initial term is a, and the common difference is b. that is, s_i = a + b \times i holds. consider the integer obtained by concatenating the terms written in base ten without leading zeros. for example, the sequence 3, 7, 11, 15, 19 would be concatenated into 37111519. what is the remainder when that integer is divided by m? 
"
p03017, Kenken Race,"there are n squares arranged in a row, numbered 1, 2, ..., n from left to right.
you are given a string s of length n consisting of . and #. if the i-th character of s is #, square i contains a rock; if the i-th character of s is ., square i is empty. in the beginning, snuke stands on square a, and fnuke stands on square b. you can repeat the following operation any number of times: choose snuke or fnuke, and make him jump one or two squares to the right. the destination must be one of the squares, and it must not contain a rock or the other person. you want to repeat this operation so that snuke will stand on square c and fnuke will stand on square d. determine whether this is possible. 
"
p03018, ABC,"you are given a string s consisting of a, b and c. snuke wants to perform the following operation on s as many times as possible: choose a contiguous substring of s that reads abc and replace it with bca. find the maximum possible number of operations. 
"
p03019, Tests,"takahashi and aoki will take n exams numbered 1 to n.
they have decided to compete in these exams.
the winner will be determined as follows: for each exam i, takahashi decides its importance c_i, which must be an integer between l_i and u_i (inclusive). 
 let a be \sum_{i=1}^{n} c_i \times (takahashi's score on exam i), and b be \sum_{i=1}^{n} c_i \times (aoki's score on exam i). takahashi wins if a \geq b, and aoki wins if a &lt; b. 
 takahashi knows that aoki will score b_i on exam i, with his supernatural power. takahashi himself, on the other hand, will score 0 on all the exams without studying more. for each hour of study, he can increase his score on some exam by 1. (he can only study for an integer number of hours.)
however, he cannot score more than x on an exam, since the perfect score for all the exams is x. print the minimum number of study hours required for takahashi to win. 
"
p03020, Manhattan Max Matching,"snuke is playing with red and blue balls, placing them on a two-dimensional plane. first, he performed n operations to place red balls. in the i-th of these operations, he placed rc_i red balls at coordinates (rx_i,ry_i).
then, he performed another n operations to place blue balls. in the i-th of these operations, he placed bc_i blue balls at coordinates (bx_i,by_i).
the total number of red balls placed and the total number of blue balls placed are equal, that is, \sum_{i=1}^{n} rc_i = \sum_{i=1}^{n} bc_i. let this value be s. snuke will now form s pairs of red and blue balls so that every ball belongs to exactly one pair.
let us define the score of a pair of a red ball at coordinates (rx, ry) and a blue ball at coordinates (bx, by) as |rx-bx| + |ry-by|. snuke wants to maximize the sum of the scores of the pairs.
help him by finding the maximum possible sum of the scores of the pairs. 
"
p03021, Complete Compress,"you are given a tree with n vertices numbered 1, 2, ..., n. the i-th edge connects vertex a_i and vertex b_i.
you are also given a string s of length n consisting of 0 and 1. the i-th character of s represents the number of pieces placed on vertex i. snuke will perform the following operation some number of times: choose two pieces the distance between which is at least 2, and bring these pieces closer to each other by 1. more formally, choose two vertices u and v, each with one or more pieces, and consider the shortest path between them. here the path must contain at least two edges. then, move one piece from u to its adjacent vertex on the path, and move one piece from v to its adjacent vertex on the path. by repeating this operation, snuke wants to have all the pieces on the same vertex. is this possible?
if the answer is yes, also find the minimum number of operations required to achieve it. 
"
p03022, RNG and XOR,"snuke found a random number generator.
it generates an integer between 0 and 2^n-1 (inclusive).
an integer sequence a_0, a_1, \cdots, a_{2^n-1}  represents the probability that each of these integers is generated. the integer i (0 \leq i \leq 2^n-1) is generated with probability a_i / s, where s = \sum_{i=0}^{2^n-1} a_i. the process of generating an integer is done independently each time the generator is executed. snuke has an integer x, which is now 0.
he can perform the following operation any number of times: generate an integer v with the generator and replace x with x \oplus v, where \oplus denotes the bitwise xor. for each integer i (0 \leq i \leq 2^n-1), find the expected number of operations until x becomes i, and print it modulo 998244353.
more formally, represent the expected number of operations as an irreducible fraction p/q. then, there exists a unique integer r such that r \times q \equiv p \mod 998244353,\ 0 \leq r &lt; 998244353, so print this r. we can prove that, for every i, the expected number of operations until x becomes i is a finite rational number, and its integer representation modulo 998244353 can be defined. 
"
p03023, Sum of Interior Angles,"given an integer n not less than 3, find the sum of the interior angles of a regular polygon with n sides. print the answer in degrees, but do not print units. 
"
p03024, Sumo,"takahashi is competing in a sumo tournament.
the tournament lasts for 15 days, during which he performs in one match per day.
if he wins 8 or more matches, he can also participate in the next tournament. the matches for the first k days have finished.
you are given the results of takahashi's matches as a string s consisting of o and x.
if the i-th character in s is o, it means that takahashi won the match on the i-th day; if that character is x, it means that takahashi lost the match on the i-th day. print yes if there is a possibility that takahashi can participate in the next tournament, and print no if there is no such possibility. 
"
p03025,1),"takahashi and aoki will play a game. they will repeatedly play it until one of them have n wins in total. when they play the game once, takahashi wins with probability a %, aoki wins with probability b %, and the game ends in a draw (that is, nobody wins) with probability c %.
find the expected number of games that will be played, and print it as follows. we can represent the expected value as p/q with coprime integers p and q.
print the integer r between 0 and 10^9+6 (inclusive) such that r \times q \equiv p\pmod {10^9+7}.
(such an integer r always uniquely exists under the constraints of this problem.) 
"
p03026, Maximum Sum of Minimum,"you are given a tree with n vertices 1,2,\ldots,n, and positive integers c_1,c_2,\ldots,c_n.
the i-th edge in the tree (1 \leq i \leq n-1) connects vertex a_i and vertex b_i. we will write a positive integer on each vertex in t and calculate our score as follows: on each edge, write the smaller of the integers written on the two endpoints. let our score be the sum of the integers written on all the edges. find the maximum possible score when we write each of c_1,c_2,\ldots,c_n on one vertex in t, and show one way to achieve it. if an integer occurs multiple times in c_1,c_2,\ldots,c_n, we must use it that number of times. 
"
p03027, Product of Arithmetic Progression,"consider the following arithmetic progression with n terms: x, x + d, x + 2d, \ldots, x + (n-1)d what is the product of all terms in this sequence?
compute the answer modulo 1\ 000\ 003. you are given q queries of this form.
in the i-th query, compute the answer in case x = x_i, d = d_i, n = n_i. 
"
p03028, Random Tournament,"we will host a rock-paper-scissors tournament with n people. the participants are called person 1, person 2, \ldots, person n.
for any two participants, the result of the match between them is determined in advance.
this information is represented by positive integers a_{i,j} ( 1 \leq j &lt; i \leq n ) as follows: if a_{i,j} = 0, person j defeats person i. if a_{i,j} = 1, person i defeats person j. the tournament proceeds as follows: we will arrange the n participants in a row, in the order person 1, person 2, \ldots, person n from left to right. we will randomly choose two consecutive persons in the row. they will play a match against each other, and we will remove the loser from the row.
we will repeat this process n-1 times, and the last person remaining will be declared the champion. find the number of persons with the possibility of becoming the champion. 
"
p03029, Apple Pie,"we have a apples and p pieces of apple. we can cut an apple into three pieces of apple, and make one apple pie by simmering two pieces of apple in a pan. find the maximum number of apple pies we can make with what we have now. 
"
p03030, Guidebook,"you have decided to write a book introducing good restaurants.
there are n restaurants that you want to introduce: restaurant 1, restaurant 2, ..., restaurant n. restaurant i is in city s_i, and your assessment score of that restaurant on a 100-point scale is p_i.
no two restaurants have the same score. you want to introduce the restaurants in the following order: the restaurants are arranged in lexicographical order of the names of their cities. if there are multiple restaurants in the same city, they are arranged in descending order of score. print the identification numbers of the restaurants in the order they are introduced in the book. 
"
p03031, Switches,"we have n switches with ""on"" and ""off"" state, and m bulbs. the switches are numbered 1 to n, and the bulbs are numbered 1 to m. bulb i is connected to k_i switches: switch s_{i1}, s_{i2}, ..., and s_{ik_i}. it is lighted when the number of switches that are ""on"" among these switches is congruent to p_i modulo 2. how many combinations of ""on"" and ""off"" states of the switches light all the bulbs? 
"
p03032, equeue,"your friend gave you a dequeue d as a birthday present. d is a horizontal cylinder that contains a row of n jewels. the values of the jewels are v_1, v_2, ..., v_n from left to right. there may be jewels with negative values. in the beginning, you have no jewel in your hands. you can perform at most k operations on d, chosen from the following, at most k times (possibly zero): operation a: take out the leftmost jewel contained in d and have it in your hand. you cannot do this operation when d is empty. 
 operation b: take out the rightmost jewel contained in d and have it in your hand. you cannot do this operation when d is empty. 
 operation c: choose a jewel in your hands and insert it to the left end of d. you cannot do this operation when you have no jewel in your hand. 
 operation d: choose a jewel in your hands and insert it to the right end of d. you cannot do this operation when you have no jewel in your hand. 
 find the maximum possible sum of the values of jewels in your hands after the operations. 
"
p03033, Roadwork,"there is an infinitely long street that runs west to east, which we consider as a number line. there are n roadworks scheduled on this street.
the i-th roadwork blocks the point at coordinate x_i from time s_i - 0.5 to time t_i - 0.5. q people are standing at coordinate 0. the i-th person will start the coordinate 0 at time d_i, continue to walk with speed 1 in the positive direction and stop walking when reaching a blocked point. find the distance each of the q people will walk. 
"
p03034, Frog Jump,"there is an infinitely large pond, which we consider as a number line.
in this pond, there are n lotuses floating at coordinates 0, 1, 2, ..., n-2 and n-1.
on the lotus at coordinate i, an integer s_i is written. you are standing on the lotus at coordinate 0. you will play a game that proceeds as follows: 1. choose positive integers a and b. your score is initially 0. if y = n-1, the game ends. if y \neq n-1 and there is a lotus floating at coordinate y, your score increases by s_y. if y \neq n-1 and there is no lotus floating at coordinate y, you drown. your score decreases by 10^{100} points, and the game ends. 

 if y = n-1, the game ends. if y \neq n-1 and there is a lotus floating at coordinate y, your score increases by s_y. if y \neq n-1 and there is no lotus floating at coordinate y, you drown. your score decreases by 10^{100} points, and the game ends. 

 4. go back to step 2. you want to end the game with as high a score as possible.
what is the score obtained by the optimal choice of a and b? 
"
p03035, Ferris Wheel,"takahashi, who is a years old, is riding a ferris wheel. it costs b yen (b is an even number) to ride the ferris wheel if you are 13 years old or older, but children between 6 and 12 years old (inclusive) can ride it for half the cost, and children who are 5 years old or younger are free of charge. (yen is the currency of japan.) find the cost of the ferris wheel for takahashi. 
"
p03036, Algae,"the development of algae in a pond is as follows. let the total weight of the algae at the beginning of the year i be x_i gram. for i≥2000, the following formula holds: x_{i+1} = rx_i - d you are given r, d and x_{2000}. calculate x_{2001}, ..., x_{2010} and print them in order. 
"
p03037, Prison,"we have n id cards, and there are m gates. we can pass the i-th gate if we have one of the following id cards: the l_i-th, (l_i+1)-th, ..., and r_i-th id cards. how many of the id cards allow us to pass all the gates alone? 
"
p03038, Integer Cards,"you have n cards. on the i-th card, an integer a_i is written. for each j = 1, 2, ..., m in this order, you will perform the following operation once: operation: choose at most b_j cards (possibly zero). replace the integer written on each chosen card with c_j. find the maximum possible sum of the integers written on the n cards after the m operations. 
"
p03039, Cell Distance,"we have a grid of squares with n rows and m columns. let (i, j) denote the square at the i-th row from the top and j-th column from the left. we will choose k of the squares and put a piece on each of them. if we place the k pieces on squares (x_1, y_1), (x_2, y_2), ..., and (x_k, y_k), the cost of this arrangement is computed as: \sum_{i=1}^{k-1} \sum_{j=i+1}^k (|x_i - x_j| + |y_i - y_j|) find the sum of the costs of all possible arrangements of the pieces. since this value can be tremendous, print it modulo 10^9+7. we consider two arrangements of the pieces different if and only if there is a square that contains a piece in one of the arrangements but not in the other. 
"
p03040, Absolute Minima,"there is a function f(x), which is initially a constant function f(x) = 0. we will ask you to process q queries in order. there are two kinds of queries, update queries and evaluation queries, as follows: an update query 1 a b: given two integers a and b, let g(x) = f(x) + |x - a| + b and replace f(x) with g(x). an evaluation query 2: print x that minimizes f(x), and the minimum value of f(x). if there are multiple such values of x, choose the minimum such value. we can show that the values to be output in an evaluation query are always integers, so we ask you to print those values as integers without decimal points. 
"
p03041, Changing a Character,"you are given a string s of length n consisting of a, b and c, and an integer k which is between 1 and n (inclusive).
print the string s after lowercasing the k-th character in it. 
"
p03042, YYMM or MMYY,"you have a digit sequence s of length 4. you are wondering which of the following formats s is in: yymm format: the last two digits of the year and the two-digit representation of the month (example: 01 for january), concatenated in this order mmyy format: the two-digit representation of the month and the last two digits of the year, concatenated in this order if s is valid in only yymm format, print yymm; if s is valid in only mmyy format, print mmyy; if s is valid in both formats, print ambiguous; if s is valid in neither format, print na. 
"
p03043, Dice and Coin,"snuke has a fair n-sided die that shows the integers from 1 to n with equal probability and a fair coin. he will play the following game with them: throw the die. the current score is the result of the die. as long as the score is between 1 and k-1 (inclusive), keep flipping the coin. the score is doubled each time the coin lands heads up, and the score becomes 0 if the coin lands tails up. the game ends when the score becomes 0 or becomes k or above. snuke wins if the score is k or above, and loses if the score is 0. you are given n and k. find the probability that snuke wins the game. 
"
p03044, Even Relation,"we have a tree with n vertices numbered 1 to n.
the i-th edge in the tree connects vertex u_i and vertex v_i, and its length is w_i.
your objective is to paint each vertex in the tree white or black (it is fine to paint all vertices the same color) so that the following condition is satisfied: for any two vertices painted in the same color, the distance between them is an even number. find a coloring of the vertices that satisfies the condition and print it. it can be proved that at least one such coloring exists under the constraints of this problem. 
"
p03045, 1 or 2,"there are n cards placed face down in a row. on each card, an integer 1 or 2 is written. let a_i be the integer written on the i-th card. your objective is to guess a_1, a_2, ..., a_n correctly. you know the following facts: for each i = 1, 2, ..., m, the value a_{x_i} + a_{y_i} + z_i is an even number. you are a magician and can use the following magic any number of times: magic: choose one card and know the integer a_i written on it. the cost of using this magic is 1. what is the minimum cost required to determine all of a_1, a_2, ..., a_n? it is guaranteed that there is no contradiction in given input. 
"
p03046, XOR Matching,"construct a sequence a = {a_1,\ a_2,\ ...,\ a_{2^{m + 1}}} of length 2^{m + 1} that satisfies the following conditions, if such a sequence exists. each integer between 0 and 2^m - 1 (inclusive) occurs twice in a. for any i and j (i &lt; j) such that a_i = a_j, the formula a_i \ xor \ a_{i + 1} \ xor \ ... \ xor \ a_j = k holds. 
what is xor (bitwise exclusive or)? the xor of integers c_1, c_2, ..., c_n is defined as follows: when c_1 \ xor \ c_2 \ xor \ ... \ xor \ c_n is written in base two, the digit in the 2^k's place (k \geq 0) is 1 if the number of integers among c_1, c_2, ...c_m whose binary representations have 1 in the 2^k's place is odd, and 0 if that count is even. for example, 3 \ xor \ 5 = 6. (if we write it in base two: 011 xor 101 = 110.)  "
p03047, Consecutive Integers,"snuke has n integers: 1,2,\ldots,n.
he will choose k of them and give those to takahashi. how many ways are there to choose k consecutive integers? 
"
p03048, RGB Boxes,"snuke has come to a store that sells boxes containing balls. the store sells the following three kinds of boxes: red boxes, each containing r red balls green boxes, each containing g green balls blue boxes, each containing b blue balls snuke wants to get a total of exactly n balls by buying r red boxes, g green boxes and b blue boxes.
how many triples of non-negative integers (r,g,b) achieve this? 
"
p03049, AB Substrings,"snuke has n strings. the i-th string is s_i. let us concatenate these strings into one string after arranging them in some order.
find the maximum possible number of occurrences of ab in the resulting string. 
"
p03050, DivRem Number,"snuke received a positive integer n from takahashi.
a positive integer m is called a favorite number when the following condition is satisfied: the quotient and remainder of n divided by m are equal, that is, \lfloor \frac{n}{m} \rfloor = n \bmod m holds. find all favorite numbers and print the sum of those. 
"
p03051, XOR Partitioning,"the beauty of a sequence a of length n is defined as a_1 \oplus \cdots \oplus a_n, where \oplus denotes the bitwise exclusive or (xor). you are given a sequence a of length n.
snuke will insert zero or more partitions in a to divide it into some number of non-empty contiguous subsequences. there are 2^{n-1} possible ways to insert partitions.
how many of them divide a into sequences whose beauties are all equal? find this count modulo 10^{9}+7. 
"
p03052, Edge Ordering,"you are given a simple connected undirected graph g consisting of n vertices and m edges.
the vertices are numbered 1 to n, and the edges are numbered 1 to m. edge i connects vertex a_i and b_i bidirectionally.
it is guaranteed that the subgraph consisting of vertex 1,2,\ldots,n and edge 1,2,\ldots,n-1 is a spanning tree of g. an allocation of weights to the edges is called a good allocation when the tree consisting of vertex 1,2,\ldots,n and edge 1,2,\ldots,n-1 is a minimum spanning tree of g. there are m! ways to allocate the edges distinct integer weights between 1 and m.
for each good allocation among those, find the total weight of the edges in the minimum spanning tree, and print the sum of those total weights modulo 10^{9}+7. 
"
p03053, Darker and Darker,"you are given a grid of squares with h horizontal rows and w vertical columns, where each square is painted white or black.
hw characters from a_{11} to a_{hw} represent the colors of the squares.
a_{ij} is # if the square at the i-th row from the top and the j-th column from the left is black, and a_{ij} is . if that square is white. we will repeatedly perform the following operation until all the squares are black: every white square that shares a side with a black square, becomes black. find the number of operations that will be performed.
the initial grid has at least one black square. 
"
p03054, LRUD Game,"we have a rectangular grid of squares with h horizontal rows and w vertical columns. let (i,j) denote the square at the i-th row from the top and the j-th column from the left.
on this grid, there is a piece, which is initially placed at square (s_r,s_c). takahashi and aoki will play a game, where each player has a string of length n.
takahashi's string is s, and aoki's string is t. s and t both consist of four kinds of letters: l, r, u and d. the game consists of n steps. the i-th step proceeds as follows: first, takahashi performs a move. he either moves the piece in the direction of s_i, or does not move the piece. second, aoki performs a move. he either moves the piece in the direction of t_i, or does not move the piece. here, to move the piece in the direction of l, r, u and d, is to move the piece from square (r,c) to square (r,c-1), (r,c+1), (r-1,c) and (r+1,c), respectively. if the destination square does not exist, the piece is removed from the grid, and the game ends, even if less than n steps are done. takahashi wants to remove the piece from the grid in one of the n steps.
aoki, on the other hand, wants to finish the n steps with the piece remaining on the grid.
determine if the piece will remain on the grid at the end of the game when both players play optimally. 
"
p03055, Removing Coins,"takahashi and aoki will play a game on a tree.
the tree has n vertices numbered 1 to n, and the i-th of the n-1 edges connects vertex a_i and vertex b_i. at the beginning of the game, each vertex contains a coin.
starting from takahashi, he and aoki will alternately perform the following operation: choose a vertex v that contains one or more coins, and remove all the coins from v. then, move each coin remaining on the tree to the vertex that is nearest to v among the adjacent vertices of the coin's current vertex. the player who becomes unable to play, loses the game.
that is, the player who takes his turn when there is no coin remaining on the tree, loses the game.
determine the winner of the game when both players play optimally. 
"
p03056, Complexity,"note the unusual memory limit. for a rectangular grid where each square is painted white or black, we define its complexity as follows: if all the squares are black or all the squares are white, the complexity is 0. otherwise, divide the grid into two subgrids by a line parallel to one of the sides of the grid, and let c_1 and c_2 be the complexities of the subgrids. there can be multiple ways to perform the division, and let m be the minimum value of \max(c_1, c_2) in those divisions. the complexity of the grid is m+1. you are given a grid with h horizontal rows and w vertical columns where each square is painted white or black.
hw characters from a_{11} to a_{hw} represent the colors of the squares.
a_{ij} is # if the square at the i-th row from the top and the j-th column from the left is black, and a_{ij} is . if that square is white. find the complexity of the given grid. 
"
p03057, Go around a Circle,"consider a circle whose perimeter is divided by n points into n arcs of equal length, and each of the arcs is painted red or blue. such a circle is said to generate a string s from every point when the following condition is satisfied: we will arbitrarily choose one of the n points on the perimeter and place a piece on it. then, we will perform the following move m times: move the piece clockwise or counter-clockwise to an adjacent point. here, whatever point we choose initially, it is always possible to move the piece so that the color of the i-th arc the piece goes along is s_i, by properly deciding the directions of the moves. assume that, if s_i is r, it represents red; if s_i is b, it represents blue.
note that the directions of the moves can be decided separately for each choice of the initial point. you are given a string s of length m consisting of r and b.
out of the 2^n ways to paint each of the arcs red or blue in a circle whose perimeter is divided into n arcs of equal length, find the number of ways resulting in a circle that generates s from every point, modulo 10^9+7. note that the rotations of the same coloring are also distinguished. 
"
p03058, Adding Edges,"you are given a tree t with n vertices and an undirected graph g with n vertices and m edges.
the vertices of each graph are numbered 1 to n.
the i-th of the n-1 edges in t connects vertex a_i and vertex b_i, and the j-th of the m edges in g connects vertex c_j and vertex d_j. consider adding edges to g by repeatedly performing the following operation: choose three integers a, b and c such that g has an edge connecting vertex a and b and an edge connecting vertex b and c but not an edge connecting vertex a and c. if there is a simple path in t that contains all three of vertex a, b and c in some order, add an edge in g connecting vertex a and c. print the number of edges in g when no more edge can be added.
it can be shown that this number does not depend on the choices made in the operation. 
"
p03059, Biscuit Generator,"a biscuit making machine produces b biscuits at the following moments: a seconds, 2a seconds, 3a seconds and each subsequent multiple of a seconds after activation. find the total number of biscuits produced within t + 0.5 seconds after activation. 
"
p03060, Resale,"there are n gems. the value of the i-th gem is v_i. you will choose some of these gems, possibly all or none, and get them. however, you need to pay a cost of c_i to get the i-th gem. let x be the sum of the values of the gems obtained, and y be the sum of the costs paid. find the maximum possible value of x-y. 
"
p03061, GCD on Blackboard,"there are n integers, a_1, a_2, ..., a_n, written on the blackboard. you will choose one of them and replace it with an integer of your choice between 1 and 10^9 (inclusive), possibly the same as the integer originally written. find the maximum possible greatest common divisor of the n integers on the blackboard after your move. 
"
p03062, Flipping Signs,"there are n integers, a_1, a_2, ..., a_n, arranged in a row in this order. you can perform the following operation on this integer sequence any number of times: operation: choose an integer i satisfying 1 \leq i \leq n-1. multiply both a_i and a_{i+1} by -1. let b_1, b_2, ..., b_n be the integer sequence after your operations. find the maximum possible value of b_1 + b_2 + ... + b_n. 
"
p03063, Stones,"there are n stones arranged in a row. every stone is painted white or black.
a string s represents the color of the stones. the i-th stone from the left is white if the i-th character of s is ., and the stone is black if the character is #. takahashi wants to change the colors of some stones to black or white so that there will be no white stone immediately to the right of a black stone.
find the minimum number of stones that needs to be recolored. 
"
p03064, Three Colors,"you are given n integers. the i-th integer is a_i.
find the number, modulo 998244353, of ways to paint each of the integers red, green or blue so that the following condition is satisfied: let r, g and b be the sums of the integers painted red, green and blue, respectively. there exists a triangle with positive area whose sides have lengths r, g and b. 

"
p03065, Polynomial Divisors,"you are given a polynomial of degree n with integer coefficients: f(x)=a_nx^n+a_{n-1}x^{n-1}+...+a_0. find all prime numbers p that divide f(x) for every integer x. 
"
p03066, Banned X,"find the number, modulo 998244353, of sequences of length n consisting of 0, 1 and 2 such that none of their contiguous subsequences totals to x. 
"
p03067, On the Way,"there are three houses on a number line: house 1, 2 and 3, with coordinates a, b and c, respectively.
print yes if we pass the coordinate of house 3 on the straight way from house 1 to house 2 without making a detour, and print no otherwise. 
"
p03068, *e**** ********e* *e****e* ****e**,"you are given a string s of length n consisting of lowercase english letters, and an integer k.
print the string obtained by replacing every character in s that differs from the k-th character of s, with *. 
"
p03069, Stones,"there are n stones arranged in a row. every stone is painted white or black.
a string s represents the color of the stones. the i-th stone from the left is white if the i-th character of s is ., and the stone is black if the character is #. takahashi wants to change the colors of some stones to black or white so that there will be no white stone immediately to the right of a black stone.
find the minimum number of stones that needs to be recolored. 
"
p03070, Three Colors,"you are given n integers. the i-th integer is a_i.
find the number, modulo 998244353, of ways to paint each of the integers red, green or blue so that the following condition is satisfied: let r, g and b be the sums of the integers painted red, green and blue, respectively. there exists a triangle with positive area whose sides have lengths r, g and b. 

"
p03071, Buttons,"there are two buttons, one of size a and one of size b. when you press a button of size x, you get x coins and the size of that button decreases by 1. you will press a button twice. here, you can press the same button twice, or press both buttons once. at most how many coins can you get? 
"
p03072, Great Ocean View,"there are n mountains ranging from east to west, and an ocean to the west. at the top of each mountain, there is an inn. you have decided to choose where to stay from these inns. the height of the i-th mountain from the west is h_i. you can certainly see the ocean from the inn at the top of the westmost mountain. for the inn at the top of the i-th mountain from the west (i = 2, 3, ..., n), you can see the ocean if and only if h_1 \leq h_i, h_2 \leq h_i, ..., and h_{i-1} \leq h_i. from how many of these n inns can you see the ocean? 
"
p03073, Coloring Colorfully,"n tiles are arranged in a row from left to right. the initial color of each tile is represented by a string s of length n. the i-th tile from the left is painted black if the i-th character of s is 0, and painted white if that character is 1. you want to repaint some of the tiles black or white, so that any two adjacent tiles have different colors. at least how many tiles need to be repainted to satisfy the condition? 
"
p03074, Handstand,"n people are arranged in a row from left to right. you are given a string s of length n consisting of 0 and 1, and a positive integer k. the i-th person from the left is standing on feet if the i-th character of s is 0, and standing on hands if that character is 1. you will give the following direction at most k times (possibly zero): direction: choose integers l and r satisfying 1 \leq l \leq r \leq n, and flip the l-th, (l+1)-th, ..., and r-th persons. that is, for each i = l, l+1, ..., r, the i-th person from the left now stands on hands if he/she was standing on feet, and stands on feet if he/she was standing on hands. find the maximum possible number of consecutive people standing on hands after at most k directions. 
"
p03075, Five Antennas,"in atcoder city, there are five antennas standing in a straight line. they are called antenna a, b, c, d and e from west to east, and their coordinates are a, b, c, d and e, respectively.
two antennas can communicate directly if the distance between them is k or less, and they cannot if the distance is greater than k.
determine if there exists a pair of antennas that cannot communicate directly.
here, assume that the distance between two antennas at coordinates p and q (p &lt; q) is q - p.   
"
p03076, Five Dishes,"the restaurant atcoder serves the following five dishes: abc don (rice bowl): takes a minutes to serve. arc curry: takes b minutes to serve. agc pasta: takes c minutes to serve. apc ramen: takes d minutes to serve. atc hanbagu (hamburger patty): takes e minutes to serve. here, the time to serve a dish is the time between when an order is placed and when the dish is delivered. this restaurant has the following rules on orders: an order can only be placed at a time that is a multiple of 10 (time 0, 10, 20, ...). only one dish can be ordered at a time. no new order can be placed when an order is already placed and the dish is still not delivered, but a new order can be placed at the exact time when the dish is delivered. e869120 arrives at this restaurant at time 0. he will order all five dishes. find the earliest possible time for the last dish to be delivered.
here, he can order the dishes in any order he likes, and he can place an order already at time 0. 
"
p03077, Five Transportations,"in 2028 and after a continuous growth, atcoder inc. finally built an empire with six cities (city 1, 2, 3, 4, 5, 6)! there are five means of transport in this empire: train: travels from city 1 to 2 in one minute. a train can occupy at most a people. bus: travels from city 2 to 3 in one minute. a bus can occupy at most b people. taxi: travels from city 3 to 4 in one minute. a taxi can occupy at most c people. airplane: travels from city 4 to 5 in one minute. an airplane can occupy at most d people. ship: travels from city 5 to 6 in one minute. a ship can occupy at most e people. for each of them, one vehicle leaves the city at each integer time (time 0, 1, 2, ...). there is a group of n people at city 1, and they all want to go to city 6.
at least how long does it take for all of them to reach there? 
you can ignore the time needed to transfer.   
"
p03078, Cake 123,"the patisserie atcoder sells cakes with number-shaped candles.
there are x, y and z kinds of cakes with 1-shaped, 2-shaped and 3-shaped candles, respectively.
each cake has an integer value called deliciousness, as follows: the deliciousness of the cakes with 1-shaped candles are a_1, a_2, ..., a_x. the deliciousness of the cakes with 2-shaped candles are b_1, b_2, ..., b_y. the deliciousness of the cakes with 3-shaped candles are c_1, c_2, ..., c_z. takahashi decides to buy three cakes, one for each of the three shapes of the candles, to celebrate abc 123.
there are x \times y \times z such ways to choose three cakes.
we will arrange these x \times y \times z ways in descending order of the sum of the deliciousness of the cakes.
print the sums of the deliciousness of the cakes for the first, second, ..., k-th ways in this list. 
"
p03079, Regular Triangle,"you are given three integers a, b and c. determine if there exists an equilateral triangle whose sides have lengths a, b and c. 
"
p03080, Red or Blue,"there are n people numbered 1 to n. each person wears a red hat or a blue hat. you are given a string s representing the colors of the people. person i wears a red hat if s_i is r, and a blue hat if s_i is b. determine if there are more people wearing a red hat than people wearing a blue hat. 
"
p03081, Snuke the Wizard,"there are n squares numbered 1 to n from left to right.
each square has a character written on it, and square i has a letter s_i. besides, there is initially one golem on each square. snuke cast q spells to move the golems. the i-th spell consisted of two characters t_i and d_i, where d_i is l or r.
when snuke cast this spell, for each square with the character t_i, all golems on that square moved to the square adjacent to the left if d_i is l, and moved to the square adjacent to the right if d_i is r. however, when a golem tried to move left from square 1 or move right from square n, it disappeared. find the number of golems remaining after snuke cast the q spells. 
"
p03082, Modulo Operations,"snuke has a blackboard and a set s consisting of n integers.
the i-th element in s is s_i. he wrote an integer x on the blackboard, then performed the following operation n times: choose one element from s and remove it. let x be the number written on the blackboard now, and y be the integer removed from s. replace the number on the blackboard with x \bmod {y}. there are n! possible orders in which the elements are removed from s.
for each of them, find the number that would be written on the blackboard after the n operations, and compute the sum of all those n! numbers modulo 10^{9}+7. 
"
p03083, Black or White,"today, snuke will eat b pieces of black chocolate and w pieces of white chocolate for an afternoon snack. he will repeat the following procedure until there is no piece left: choose black or white with equal probability, and eat a piece of that color if it exists. for each integer i from 1 to b+w (inclusive), find the probability that the color of the i-th piece to be eaten is black.
it can be shown that these probabilities are rational, and we ask you to print them modulo 10^9 + 7, as described in notes. 
"
p03084, More Realistic Manhattan Distance,"in takaha-shi, the capital of republic of atcoder, there are n roads extending east and west, and m roads extending north and south. there are no other roads.
the i-th east-west road from the north and the j-th north-south road from the west cross at the intersection (i, j).
two east-west roads do not cross, nor do two north-south roads.
the distance between two adjacent roads in the same direction is 1. each road is one-way; one can only walk in one direction. the permitted direction for each road is described by a string s of length n and a string t of length m, as follows: if the i-th character in s is w, one can only walk westward along the i-th east-west road from the north; if the i-th character in s is e, one can only walk eastward along the i-th east-west road from the north; if the i-th character in t is n, one can only walk northward along the i-th north-south road from the west; if the i-th character in t is s, one can only walk southward along the i-th south-west road from the west. process the following q queries: in the i-th query, a_i, b_i, c_i and d_i are given. what is the minimum distance to travel to reach the intersection (c_i, d_i) from the intersection (a_i, b_i) by walking along the roads? 

"
p03085, Double Helix,"on the planet atcoder, there are four types of bases: a, c, g and t. a bonds with t, and c bonds with g. you are given a letter b as input, which is a, c, g or t. write a program that prints the letter representing the base that bonds with the base b. 
"
p03086, ATCoder,"you are given a string s consisting of uppercase english letters. find the length of the longest acgt string that is a substring (see notes) of s. here, a acgt string is a string that contains no characters other than a, c, g and t. 
"
p03087, GeT AC,"you are given a string s of length n consisting of a, c, g and t. answer the following q queries: query i (1 \leq i \leq q): you will be given integers l_i and r_i (1 \leq l_i &lt; r_i \leq n). consider the substring of s starting at index l_i and ending at index r_i (both inclusive). in this string, how many times does ac occurs as a substring? 

"
p03088, We Like AGC,"you are given an integer n. find the number of strings of length n that satisfy the following conditions, modulo 10^9+7: the string does not contain characters other than a, c, g and t. the string does not contain agc as a substring. the condition above cannot be violated by swapping two adjacent characters once. 

"
p03089, Limited Insertion,"snuke has an empty sequence a. he will perform n operations on this sequence. in the i-th operation, he chooses an integer j satisfying 1 \leq j \leq i, and insert j at position j in a (the beginning is position 1). you are given a sequence b of length n. determine if it is possible that a is equal to b after n operations. if it is, show one possible sequence of operations that achieves it. 
"
p03090, Balanced Neighbors,"you are given an integer n.
build an undirected graph with n vertices with indices 1 to n that satisfies the following two conditions: the graph is simple and connected. there exists an integer s such that, for every vertex, the sum of the indices of the vertices adjacent to that vertex is s. it can be proved that at least one such graph exists under the constraints of this problem. 
"
p03091, Three Circuits,"you are given a simple connected undirected graph consisting of n vertices and m edges.
the vertices are numbered 1 to n, and the edges are numbered 1 to m. edge i connects vertex a_i and b_i bidirectionally. determine if three circuits (see notes) can be formed using each of the edges exactly once. 
"
p03092, Rotation Sort,"you are given a permutation p = (p_1, \ldots, p_n) of \{ 1, \ldots, n \}.
you can perform the following two kinds of operations repeatedly in any order: pay a cost a. choose integers l and r (1 \leq l &lt; r \leq n), and shift (p_l, \ldots, p_r) to the left by one. that is, replace p_l, p_{l + 1}, \ldots, p_{r - 1}, p_r with p_{l + 1}, p_{l + 2}, \ldots, p_r, p_l, respectively. pay a cost b. choose integers l and r (1 \leq l &lt; r \leq n), and shift (p_l, \ldots, p_r) to the right by one.  that is, replace p_l, p_{l + 1}, \ldots, p_{r - 1}, p_r with p_r, p_l, \ldots, p_{r - 2}, p_{r - 1}, respectively. find the minimum total cost required to sort p in ascending order. 
"
p03093, Modulo Pairing,"let m be a positive integer. you are given 2 n integers a_1, a_2, \ldots, a_{2 n}, where 0 \leq a_i &lt; m for each i. consider dividing the 2 n integers into n pairs.
here, each integer must belong to exactly one pair. we define the ugliness of a pair (x, y) as (x + y) \mod m.
let z be the largest ugliness of the n pairs. find the minimum possible value of z. 
"
p03094, One Third,"we have a round pizza. snuke wants to eat one third of it, or something as close as possible to that. he decides to cut this pizza as follows. first, he divides the pizza into n pieces by making n cuts with a knife. the knife can make a cut along the segment connecting the center of the pizza and some point on the circumference of the pizza. however, he is very poor at handling knives, so the cuts are made at uniformly random angles, independent from each other. then, he chooses one or more consecutive pieces so that the total is as close as possible to one third of the pizza, and eat them. (let the total be x of the pizza. he chooses consecutive pieces so that |x - 1/3| is minimized.) find the expected value of |x - 1/3|. it can be shown that this value is rational, and we ask you to print it modulo 10^9 + 7, as described in notes. 
"
p03095, Colorful Subsequence,"you are given a string s of length n.
among its subsequences, count the ones such that all characters are different, modulo 10^9+7. two subsequences are considered different if their characters come from different positions in the string, even if they are the same as strings. here, a subsequence of a string is a concatenation of one or more characters from the string without changing the order. 
"
p03096, Reversi,"there are n stones arranged in a row. the i-th stone from the left is painted in the color c_i. snuke will perform the following operation zero or more times: choose two stones painted in the same color. repaint all the stones between them, with the color of the chosen stones. find the number of possible final sequences of colors of the stones, modulo 10^9+7. 
"
p03097, Differ by 1 Bit,"you are given integers n,\ a and b.
determine if there exists a permutation (p_0,\ p_1,\ ...\ p_{2^n-1}) of (0,\ 1,\ ...\ 2^n-1) that satisfies all of the following conditions, and create one such permutation if it exists. p_0=a p_{2^n-1}=b for all 0 \leq i &lt; 2^n-1, the binary representations of p_i and p_{i+1} differ by exactly one bit. 

"
p03098, A Sequence of Permutations,"for two permutations p and q of the integers from 1 through n, let f(p,q) be the permutation that satisfies the following: the p_i-th element (1 \leq i \leq n) in f(p,q) is q_i.
here, p_i and q_i respectively denote the i-th element in p and q. you are given two permutations p and q of the integers from 1 through n.
we will now define a sequence {a_n} of permutations of the integers from 1 through n, as follows: a_1=p, a_2=q a_{n+2}=f(a_n,a_{n+1}) ( n \geq 1 ) given a positive integer k, find a_k. 
"
p03099, Snuke the Phantom Thief,"a museum exhibits n jewels, jewel 1, 2, ..., n.
the coordinates of jewel i are (x_i, y_i) (the museum can be regarded as a two-dimensional plane), and the value of that jewel is v_i. snuke the thief will steal some of these jewels. there are m conditions, condition 1, 2, ..., m, that must be met when stealing jewels, or he will be caught by the detective.
each condition has one of the following four forms: (t_i =l, a_i, b_i) : snuke can only steal at most b_i jewels whose x coordinates are a_i or smaller. (t_i =r, a_i, b_i) : snuke can only steal at most b_i jewels whose x coordinates are a_i or larger. (t_i =d, a_i, b_i) : snuke can only steal at most b_i jewels whose y coordinates are a_i or smaller. (t_i =u, a_i, b_i) : snuke can only steal at most b_i jewels whose y coordinates are a_i or larger. find the maximum sum of values of jewels that snuke the thief can steal. 
"
p03100, Walk on Graph,"you are given a connected graph with n vertices and m edges. the vertices are numbered 1 to n. the i-th edge is an undirected edge of length c_i connecting vertex a_i and vertex b_i. additionally, an odd number mod is given. you will be given q queries, which should be processed. the queries take the following form: given in the i-th query are s_i, t_i and r_i. print yes if there exists a path from vertex s_i to vertex t_i whose length is r_i modulo mod, and print no otherwise. a path may traverse the same edge multiple times, or go back using the edge it just used. here, in this problem, the length of a path is not the sum of the lengths of its edges themselves, but the length of the first edge used in the path gets multiplied by 1, the second edge gets multiplied by 2, the third edge gets multiplied by 4, and so on. (more formally, let l_1,...,l_k be the lengths of the edges used, in this order. the length of that path is the sum of l_i \times 2^{i-1}.) 
"
p03101, White Cells,"there are h rows and w columns of white square cells. you will choose h of the rows and w of the columns, and paint all of the cells contained in those rows or columns. how many white cells will remain? it can be proved that this count does not depend on what rows and columns are chosen. 
"
p03102, Can you solve this?,"there are n pieces of source code. the characteristics of the i-th code is represented by m integers a_{i1}, a_{i2}, ..., a_{im}. additionally, you are given integers b_1, b_2, ..., b_m and c. the i-th code correctly solves this problem if and only if a_{i1} b_1 + a_{i2} b_2 + ... + a_{im} b_m + c &gt; 0. among the n codes, find the number of codes that correctly solve this problem. 
"
p03103, Energy Drink Collector,"hearing that energy drinks increase rating in those sites, takahashi decides to buy up m cans of energy drinks. there are n stores that sell energy drinks. in the i-th store, he can buy at most b_i cans of energy drinks for a_i yen (the currency of japan) each. what is the minimum amount of money with which he can buy m cans of energy drinks? it is guaranteed that, in the given inputs, a sufficient amount of money can always buy m cans of energy drinks. 
"
p03104, XOR World,"let f(a, b) be the exclusive or of a, a+1, ..., b. find f(a, b). 
what is exclusive or? the bitwise exclusive or of integers c_1, c_2, ..., c_n (let us call it y) is defined as follows: when y is written in base two, the digit in the 2^k's place (k \geq 0) is 1 if, the number of integers among c_1, c_2, ...c_m whose binary representations have 1 in the 2^k's place, is odd, and 0 if that count is even. for example, the exclusive or of 3 and 5 is 6. (when written in base two: the exclusive or of 011 and 101 is 110.)  "
p03105, Favorite Sound,"takahashi likes the sound when he buys a drink from a vending machine. that sound can be heard by spending a yen (the currency of japan) each time. takahashi has b yen. he will hear the sound as many times as he can with that money, but at most c times, as he would be satisfied at that time. how many times will he hear the sound? 
"
p03106,th Common Divisor,"you are given positive integers a and b. find the k-th largest positive integer that divides both a and b. the input guarantees that there exists such a number. 
"
p03107, Unification,"there are n cubes stacked vertically on a desk. you are given a string s of length n. the color of the i-th cube from the bottom is red if the i-th character in s is 0, and blue if that character is 1. you can perform the following operation any number of times: choose a red cube and a blue cube that are adjacent, and remove them. here, the cubes that were stacked on the removed cubes will fall down onto the object below them. at most how many cubes can be removed? 
"
p03108, Decayed Bridges,"there are n islands and m bridges. the i-th bridge connects the a_i-th and b_i-th islands bidirectionally. initially, we can travel between any two islands using some of these bridges. however, the results of a survey show that these bridges will all collapse because of aging, in the order from the first bridge to the m-th bridge. let the inconvenience be the number of pairs of islands (a, b) (a &lt; b) such that we are no longer able to travel between the a-th and b-th islands using some of the bridges remaining. for each i (1 \leq i \leq m), find the inconvenience just after the i-th bridge collapses. 
"
p03109, Still TBD,"you are given a string s as input. this represents a valid date in the year 2019 in the yyyy/mm/dd format. (for example, april 30, 2019 is represented as 2019/04/30.) write a program that prints heisei if the date represented by s is not later than april 30, 2019, and prints tbd otherwise. 
"
p03110, Digital Gifts,"takahashi received otoshidama (new year's money gifts) from n of his relatives. you are given n values x_1, x_2, ..., x_n and n strings u_1, u_2, ..., u_n as input. each string u_i is either jpy or btc, and x_i and u_i represent the content of the otoshidama from the i-th relative. for example, if x_1 = 10000 and u_1 = jpy, the otoshidama from the first relative is 10000 japanese yen; if x_2 = 0.10000000 and u_2 = btc, the otoshidama from the second relative is 0.1 bitcoins. if we convert the bitcoins into yen at the rate of 380000.0 jpy per 1.0 btc, how much are the gifts worth in total? 
"
p03111, Synthetic Kadomatsu,"you have n bamboos. the lengths (in centimeters) of these are l_1, l_2, ..., l_n, respectively. your objective is to use some of these bamboos (possibly all) to obtain three bamboos of length a, b, c. for that, you can use the following three kinds of magics any number: extension magic: consumes 1 mp (magic point). choose one bamboo and increase its length by 1. shortening magic: consumes 1 mp. choose one bamboo of length at least 2 and decrease its length by 1. composition magic: consumes 10 mp. choose two bamboos and combine them into one bamboo. the length of this new bamboo is equal to the sum of the lengths of the two bamboos combined. (afterwards, further magics can be used on this bamboo.) at least how much mp is needed to achieve the objective? 
"
p03112, Lazy Faith,"along a road running in an east-west direction, there are a shrines and b temples.
the i-th shrine from the west is located at a distance of s_i meters from the west end of the road, and the i-th temple from the west is located at a distance of t_i meters from the west end of the road. answer the following q queries: query i (1 \leq i \leq q): if we start from a point at a distance of x_i meters from the west end of the road and freely travel along the road, what is the minimum distance that needs to be traveled in order to visit one shrine and one temple? (it is allowed to pass by more shrines and temples than required.) 

"
p03113, Magic,"snuke participated in a magic show. a magician prepared n identical-looking boxes.
he put a treasure in one of the boxes, closed the boxes, shuffled them, and numbered them 1 through n. since the boxes are shuffled, now snuke has no idea which box contains the treasure.
snuke wins the game if he opens a box containing the treasure.
you may think that if snuke opens all boxes at once, he can always win the game.
however, there are some tricks: snuke must open the boxes one by one. after he opens a box and checks the content of the box, he must close the box before opening the next box. he is only allowed to open box i at most a_i times. the magician may secretly move the treasure from a closed box to another closed box, using some magic trick.
for simplicity, assume that the magician never moves the treasure while snuke is opening some box.
however, he can move it at any other time (before snuke opens the first box, or between he closes some box and opens the next box). the magician can perform the magic trick at most k times. can snuke always win the game, regardless of the initial position of the treasure and the movements of the magician? 
"
p03114, Multiple of Nine,"count the number of strings s that satisfy the following constraints, modulo 10^9 + 7. the length of s is exactly n. s consists of digits (0...9). you are given q intervals.
for each i (1 \leq i \leq q), the integer represented by s[l_i \ldots r_i] (the substring of s between the l_i-th (1-based) character and the r_i-th character, inclusive) must be a multiple of 9. here, the string s and its substrings may have leading zeroes.
for example, 002019 represents the integer 2019. 
"
p03115, Triangular Lamps Easy,"there is an infinitely large triangular grid, as shown below.
each point with integer coordinates contains a lamp.  initially, only the lamp at (x, 0) was on, and all other lamps were off.
then, snuke performed the following operation zero or more times: choose two integers x and y.
toggle (on to off, off to on) the following three lamps: (x, y), (x, y+1), (x+1, y). after the operations, n lamps (x_1, y_1), \cdots, (x_n, y_n) are on, and all other lamps are off.
find x. 
"
p03116, Triangular Lamps Hard,"red bold fonts show the difference from c1. there is an infinitely large triangular grid, as shown below.
each point with integer coordinates contains a lamp.  initially, only the lamp at (x, y) was on, and all other lamps were off.
then, snuke performed the following operation zero or more times: choose two integers x and y.
toggle (on to off, off to on) the following three lamps: (x, y), (x, y+1), (x+1, y). after the operations, n lamps (x_1, y_1), \cdots, (x_n, y_n) are on, and all other lamps are off.
find x and y. 
"
p03117, Distinct Boxes,"snuke has r red balls and b blue balls.
he distributes them into k boxes, so that no box is empty and no two boxes are identical.
compute the maximum possible value of k. formally speaking, let's number the boxes 1 through k.
if box i contains r_i red balls and b_i blue balls, the following conditions must be satisfied: for each i (1 \leq i \leq k), r_i &gt; 0 or b_i &gt; 0. for each i, j (1 \leq i &lt; j \leq k), r_i \neq r_j or b_i \neq b_j. \sum r_i = r and \sum b_i = b (no balls can be left outside the boxes). 

"
p03118, e,"there is a very long bench.
the bench is divided into m sections, where m is a very large integer. initially, the bench is vacant.
then, m people come to the bench one by one, and perform the following action: we call a section comfortable if the section is currently unoccupied and is not adjacent to any occupied sections.
if there is no comfortable section, the person leaves the bench.
otherwise, the person chooses one of comfortable sections uniformly at random, and sits there.
(the choices are independent from each other). after all m people perform actions, snuke chooses an interval of n consecutive sections uniformly at random (from m-n+1 possible intervals), and takes a photo.
his photo can be described by a string of length n consisting of x and -: the i-th character of the string is x if the i-th section from the left in the interval is occupied, and - otherwise.
note that the photo is directed.
for example, -x--x and x--x- are different photos. what is the probability that the photo matches a given string s?
this probability depends on m.
you need to compute the limit of this probability when m goes infinity. here, we can prove that the limit can be uniquely written in the following format using three rational numbers p, q, r and e = 2.718 \ldots (the base of natural logarithm): p + \frac{q}{e} + \frac{r}{e^2} your task is to compute these three rational numbers, and print them modulo 10^9 + 7, as described in notes section. 
"
p03119, Magic,"snuke participated in a magic show. a magician prepared n identical-looking boxes.
he put a treasure in one of the boxes, closed the boxes, shuffled them, and numbered them 1 through n. since the boxes are shuffled, now snuke has no idea which box contains the treasure.
snuke wins the game if he opens a box containing the treasure.
you may think that if snuke opens all boxes at once, he can always win the game.
however, there are some tricks: snuke must open the boxes one by one. after he opens a box and checks the content of the box, he must close the box before opening the next box. he is only allowed to open box i at most a_i times. the magician may secretly move the treasure from a closed box to another closed box, using some magic trick.
for simplicity, assume that the magician never moves the treasure while snuke is opening some box.
however, he can move it at any other time (before snuke opens the first box, or between he closes some box and opens the next box). the magician can perform the magic trick at most k times. can snuke always win the game, regardless of the initial position of the treasure and the movements of the magician? 
"
p03120, Multiple of Nine,"count the number of strings s that satisfy the following constraints, modulo 10^9 + 7. the length of s is exactly n. s consists of digits (0...9). you are given q intervals.
for each i (1 \leq i \leq q), the integer represented by s[l_i \ldots r_i] (the substring of s between the l_i-th (1-based) character and the r_i-th character, inclusive) must be a multiple of 9. here, the string s and its substrings may have leading zeroes.
for example, 002019 represents the integer 2019. 
"
p03121, Triangular Lamps Easy,"there is an infinitely large triangular grid, as shown below.
each point with integer coordinates contains a lamp.  initially, only the lamp at (x, 0) was on, and all other lamps were off.
then, snuke performed the following operation zero or more times: choose two integers x and y.
toggle (on to off, off to on) the following three lamps: (x, y), (x, y+1), (x+1, y). after the operations, n lamps (x_1, y_1), \cdots, (x_n, y_n) are on, and all other lamps are off.
find x. 
"
p03122, Triangular Lamps Hard,"red bold fonts show the difference from c1. there is an infinitely large triangular grid, as shown below.
each point with integer coordinates contains a lamp.  initially, only the lamp at (x, y) was on, and all other lamps were off.
then, snuke performed the following operation zero or more times: choose two integers x and y.
toggle (on to off, off to on) the following three lamps: (x, y), (x, y+1), (x+1, y). after the operations, n lamps (x_1, y_1), \cdots, (x_n, y_n) are on, and all other lamps are off.
find x and y. 
"
p03123, Distinct Boxes,"snuke has r red balls and b blue balls.
he distributes them into k boxes, so that no box is empty and no two boxes are identical.
compute the maximum possible value of k. formally speaking, let's number the boxes 1 through k.
if box i contains r_i red balls and b_i blue balls, the following conditions must be satisfied: for each i (1 \leq i \leq k), r_i &gt; 0 or b_i &gt; 0. for each i, j (1 \leq i &lt; j \leq k), r_i \neq r_j or b_i \neq b_j. \sum r_i = r and \sum b_i = b (no balls can be left outside the boxes). 

"
p03124, e,"there is a very long bench.
the bench is divided into m sections, where m is a very large integer. initially, the bench is vacant.
then, m people come to the bench one by one, and perform the following action: we call a section comfortable if the section is currently unoccupied and is not adjacent to any occupied sections.
if there is no comfortable section, the person leaves the bench.
otherwise, the person chooses one of comfortable sections uniformly at random, and sits there.
(the choices are independent from each other). after all m people perform actions, snuke chooses an interval of n consecutive sections uniformly at random (from m-n+1 possible intervals), and takes a photo.
his photo can be described by a string of length n consisting of x and -: the i-th character of the string is x if the i-th section from the left in the interval is occupied, and - otherwise.
note that the photo is directed.
for example, -x--x and x--x- are different photos. what is the probability that the photo matches a given string s?
this probability depends on m.
you need to compute the limit of this probability when m goes infinity. here, we can prove that the limit can be uniquely written in the following format using three rational numbers p, q, r and e = 2.718 \ldots (the base of natural logarithm): p + \frac{q}{e} + \frac{r}{e^2} your task is to compute these three rational numbers, and print them modulo 10^9 + 7, as described in notes section. 
"
p03125, A,"you are given positive integers a and b. if a is a divisor of b, print a + b; otherwise, print b - a. 
"
p03126, Foods Loved by Everyone,"katsusando loves omelette rice. besides, he loves crème brûlée, tenderloin steak and so on, and believes that these foods are all loved by everyone. to prove that hypothesis, he conducted a survey on m kinds of foods and asked n people whether they like these foods or not. the i-th person answered that he/she only likes the a_{i1}-th, a_{i2}-th, ..., a_{ik_i}-th food. find the number of the foods liked by all the n people. 
"
p03127, Monsters Battle Royale,"there are n monsters, numbered 1, 2, ..., n. initially, the health of monster i is a_i. below, a monster with at least 1 health is called alive. until there is only one alive monster, the following is repeated: a random alive monster attacks another random alive monster. as a result, the health of the monster attacked is reduced by the amount equal to the current health of the monster attacking. find the minimum possible final health of the last monster alive. 
"
p03128, Match Matching,"find the largest integer that can be formed with exactly n matchsticks, under the following conditions: every digit in the integer must be one of the digits a_1, a_2, ..., a_m (1 \leq a_i \leq 9). the number of matchsticks used to form digits 1, 2, 3, 4, 5, 6, 7, 8, 9 should be 2, 5, 5, 4, 5, 6, 3, 7, 6, respectively. 

"
p03129,Adjacency,"determine if we can choose k different integers between 1 and n (inclusive) so that no two of them differ by 1. 
"
p03130, Path,"there are four towns, numbered 1,2,3 and 4.
also, there are three roads. the i-th road connects different towns a_i and b_i bidirectionally.
no two roads connect the same pair of towns. other than these roads, there is no way to travel between these towns, but any town can be reached from any other town using these roads. determine if we can visit all the towns by traversing each of the roads exactly once. 
"
p03131, When I hit my pocket...,"snuke has one biscuit and zero japanese yen (the currency) in his pocket.
he will perform the following operations exactly k times in total, in the order he likes: hit his pocket, which magically increases the number of biscuits by one. exchange a biscuits to 1 yen. exchange 1 yen to b biscuits. find the maximum possible number of biscuits in snuke's pocket after k operations. 
"
p03132, Ears,"snuke stands on a number line. he has l ears, and he will walk along the line continuously under the following conditions: he never visits a point with coordinate less than 0, or a point with coordinate greater than l. he starts walking at a point with integer coordinate, and also finishes walking at a point with integer coordinate. he only changes direction at a point with integer coordinate. each time when snuke passes a point with coordinate i-0.5, where i is an integer, he put a stone in his i-th ear. after snuke finishes walking, ringo will repeat the following operations in some order so that, for each i, snuke's i-th ear contains a_i stones: put a stone in one of snuke's ears. remove a stone from one of snuke's ears. find the minimum number of operations required when ringo can freely decide how snuke walks. 
"
p03133, Odd Subrectangles,"there is a square grid with n rows and m columns.
each square contains an integer: 0 or 1. the square at the i-th row from the top and the j-th column from the left contains a_{ij}. among the 2^{n+m} possible pairs of a subset a of the rows and a subset b of the columns, find the number of the pairs that satisfy the following condition, modulo 998244353: the sum of the |a||b| numbers contained in the intersection of the rows belonging to a and the columns belonging to b, is odd. 

"
p03134, Pass,"there are n snukes lining up in a row.
you are given a string s of length n. the i-th snuke from the front has two red balls if the i-th character in s is 0; one red ball and one blue ball if the i-th character in s is 1; two blue balls if the i-th character in s is 2. takahashi has a sequence that is initially empty. find the number of the possible sequences he may have after repeating the following procedure 2n times, modulo 998244353: each snuke who has one or more balls simultaneously chooses one of his balls and hand it to the snuke in front of him, or hand it to takahashi if he is the first snuke in the row. takahashi receives the ball and put it to the end of his sequence. 

"
p03135, Entrance Examination,"in order to pass the entrance examination tomorrow, taro has to study for t more hours. fortunately, he can leap to world b where time passes x times as fast as it does in our world (world a). while (x \times t) hours pass in world b, t hours pass in world a. how many hours will pass in world a while taro studies for t hours in world b? 
"
p03136, Polygon,"determine if an n-sided polygon (not necessarily convex) with sides of length l_1, l_2, ..., l_n can be drawn in a two-dimensional plane. you can use the following theorem: theorem: an n-sided polygon satisfying the condition can be drawn if and only if the longest side is strictly shorter than the sum of the lengths of the other n-1 sides. 
"
p03137, Streamline,"we will play a one-player game using a number line and n pieces. first, we place each of these pieces at some integer coordinate. here, multiple pieces can be placed at the same coordinate. our objective is to visit all of the m coordinates x_1, x_2, ..., x_m with these pieces, by repeating the following move: move: choose a piece and let x be its coordinate. put that piece at coordinate x+1 or x-1. note that the coordinates where we initially place the pieces are already regarded as visited. find the minimum number of moves required to achieve the objective. 
"
p03138, XXOR,"you are given n non-negative integers a_1, a_2, ..., a_n and another non-negative integer k. for a integer x between 0 and k (inclusive), let f(x) = (x xor a_1) + (x xor a_2) + ... + (x xor a_n). here, for non-negative integers a and b, a xor b denotes the bitwise exclusive or of a and b. find the maximum value of f. 
what is xor? the bitwise exclusive or of a and b, x, is defined as follows: when x is written in base two, the digit in the 2^k's place (k \geq 0) is 1 if, when written in base two, exactly one of a and b has 1 in the 2^k's place, and 0 otherwise. for example, 3 xor 5 = 6. (when written in base two: 011 xor 101 = 110.)  "
p03139, Subscribers,"we conducted a survey on newspaper subscriptions.
more specifically, we asked each of the n respondents the following two questions: question 1: are you subscribing to newspaper x? question 2: are you subscribing to newspaper y? as the result, a respondents answered ""yes"" to question 1, and b respondents answered ""yes"" to question 2. what are the maximum possible number and the minimum possible number of respondents subscribing to both newspapers x and y? write a program to answer this question. 
"
p03140, Touitsu,"you are given three strings a, b and c. each of these is a string of length n consisting of lowercase english letters. our objective is to make all these three strings equal. for that, you can repeatedly perform the following operation: operation: choose one of the strings a, b and c, and specify an integer i between 1 and n (inclusive). change the i-th character from the beginning of the chosen string to some other lowercase english letter. what is the minimum number of operations required to achieve the objective? 
"
p03141, Different Strokes,"there are n dishes of cuisine placed in front of takahashi and aoki.
for convenience, we call these dishes dish 1, dish 2, ..., dish n. when takahashi eats dish i, he earns a_i points of happiness; when aoki eats dish i, she earns b_i points of happiness. starting from takahashi, they alternately choose one dish and eat it, until there is no more dish to eat.
here, both of them choose dishes so that the following value is maximized: ""the sum of the happiness he/she will earn in the end"" minus ""the sum of the happiness the other person will earn in the end"". find the value: ""the sum of the happiness takahashi earns in the end"" minus ""the sum of the happiness aoki earns in the end"". 
"
p03142, Restore the Tree,"there is a rooted tree (see notes) with n vertices numbered 1 to n.
each of the vertices, except the root, has a directed edge coming from its parent.
note that the root may not be vertex 1. takahashi has added m new directed edges to this graph.
each of these m edges, u \rightarrow v, extends from some vertex u to its descendant v. you are given the directed graph with n vertices and n-1+m edges after takahashi added edges.
more specifically, you are given n-1+m pairs of integers, (a_1, b_1), ..., (a_{n-1+m}, b_{n-1+m}), which represent that the i-th edge extends from vertex a_i to vertex b_i. restore the original rooted tree. 
"
p03143, Weights on Vertices and Edges,"there is a connected undirected graph with n vertices and m edges.
the vertices are numbered 1 to n, and the edges are numbered 1 to m.
also, each of these vertices and edges has a specified weight.
vertex i has a weight of x_i; edge i has a weight of y_i and connects vertex a_i and b_i. we would like to remove zero or more edges so that the following condition is satisfied: for each edge that is not removed, the sum of the weights of the vertices in the connected component containing that edge, is greater than or equal to the weight of that edge. find the minimum number of edges that need to be removed. 
"
p03144, Jewels,"there are n jewels, numbered 1 to n.
the color of these jewels are represented by integers between 1 and k (inclusive), and the color of jewel i is c_i.
also, these jewels have specified values, and the value of jewel i is v_i. snuke would like to choose some of these jewels to exhibit.
here, the set of the chosen jewels must satisfy the following condition: for each chosen jewel, there is at least one more jewel of the same color that is chosen. for each integer x such that 1 \leq x \leq n, determine if it is possible to choose exactly x jewels, and if it is possible, find the maximum possible sum of the values of chosen jewels in that case. 
"
p03145, Right Triangle,"there is a right triangle abc with ∠abc=90°. given the lengths of the three sides, |ab|,|bc| and |ca|, find the area of the right triangle abc. it is guaranteed that the area of the triangle abc is an integer. 
"
p03146, Collatz Problem,"a sequence a=\{a_1,a_2,a_3,......\} is determined as follows: the first term s is given as input. 
 let f(n) be the following function: f(n) = n/2 if n is even, and f(n) = 3n+1 if n is odd. 
 a_i = s when i = 1, and a_i = f(a_{i-1}) when i &gt; 1. 
 find the minimum integer m that satisfies the following condition: there exists an integer n such that a_m = a_n (m &gt; n). 

"
p03147, Grand Garden,"in a flower bed, there are n flowers, numbered 1,2,......,n. initially, the heights of all flowers are 0.
you are given a sequence h=\{h_1,h_2,h_3,......\} as input. you would like to change the height of flower k to h_k for all k (1 \leq  k \leq n), by repeating the following ""watering"" operation: specify integers l and r. increase the height of flower x by 1 for all x such that l \leq x \leq r. find the minimum number of watering operations required to satisfy the condition. 
"
p03148, Various Sushi,"there are n pieces of sushi. each piece has two parameters: ""kind of topping"" t_i and ""deliciousness"" d_i.
you are choosing k among these n pieces to eat.
your ""satisfaction"" here will be calculated as follows: the satisfaction is the sum of the ""base total deliciousness"" and the ""variety bonus"". the base total deliciousness is the sum of the deliciousness of the pieces you eat. the variety bonus is x*x, where x is the number of different kinds of toppings of the pieces you eat. you want to have as much satisfaction as possible.
find this maximum satisfaction. 
"
p03149, Beginning,"you are given four digits n_1, n_2, n_3 and n_4. determine if these can be arranged into the sequence of digits ""1974"". 
"
p03150, KEYENCE String,"a string is called a keyence string when it can be changed to keyence by removing its contiguous substring (possibly empty) only once. given a string s consisting of lowercase english letters, determine if s is a keyence string. 
"
p03151, Exam and Wizard,"a university student, takahashi, has to take n examinations and pass all of them.
currently, his readiness for the i-th examination is a_{i}, and according to his investigation, it is known that he needs readiness of at least b_{i} in order to pass the i-th examination. takahashi thinks that he may not be able to pass all the examinations, and he has decided to ask a magician, aoki, to change the readiness for as few examinations as possible so that he can pass all of them, while not changing the total readiness. for takahashi, find the minimum possible number of indices i such that a_i and c_i are different, for a sequence c_1, c_2, ..., c_{n} that satisfies the following conditions: the sum of the sequence a_1, a_2, ..., a_{n} and the sum of the sequence c_1, c_2, ..., c_{n} are equal. for every i, b_i \leq c_i holds. if such a sequence c_1, c_2, ..., c_{n} cannot be constructed, print -1. 
"
p03152, Double Landscape,"consider writing each of the integers from 1 to n \times m in a grid with n rows and m columns, without duplicates.
takahashi thinks it is not fun enough, and he will write the numbers under the following conditions: the largest among the values in the i-th row (1 \leq i \leq n) is a_i. the largest among the values in the j-th column (1 \leq j \leq m) is b_j. for him, find the number of ways to write the numbers under these conditions, modulo 10^9 + 7. 
"
p03153, Connecting Cities,"there are n cities in republic of atcoder. the size of the i-th city is a_{i}.
takahashi would like to build n-1 bidirectional roads connecting two cities so that any city can be reached from any other city by using these roads. assume that the cost of building a road connecting the i-th city and the j-th city is |i-j| \times d + a_{i} + a_{j}.
for takahashi, find the minimum possible total cost to achieve the objective. 
"
p03154, Paper Cutting,"there is a rectangular sheet of paper with height h+1 and width w+1. we introduce an xy-coordinate system so that the four corners of the sheet are (0, 0), (w + 1, 0), (0, h + 1) and (w + 1, h + 1). this sheet can be cut along the lines x = 1,2,...,w and the lines y = 1,2,...,h. consider a sequence of operations of length k where we choose k of these h + w lines and cut the sheet along those lines one by one in some order. let the score of a cut be the number of pieces of paper that exist just after the cut. the score of a sequence of operations is the sum of the scores of all of the k cuts. find the sum of the scores of all possible sequences of operations of length k. since this value can be extremely large, print the number modulo 10^9 + 7. 
"
p03155, Bulletin Board,"it has been decided that a programming contest sponsored by company a will be held, so we will post the notice on a bulletin board. the bulletin board is in the form of a grid with n rows and n columns, and the notice will occupy a rectangular region with h rows and w columns. how many ways are there to choose where to put the notice so that it completely covers exactly hw squares? 
"
p03156, Contests,"you have written n problems to hold programming contests.
the i-th problem will have a score of p_i points if used in a contest. with these problems, you would like to hold as many contests as possible under the following condition: a contest has three problems. the first problem has a score not greater than a points, the second has a score between a + 1 and b points (inclusive), and the third has a score not less than b + 1 points. the same problem should not be used in multiple contests.
at most how many contests can be held? 
"
p03157, Alternating Path,"there is a grid with h rows and w columns, where each square is painted black or white. you are given h strings s_1, s_2, ..., s_h, each of length w.
if the square at the i-th row from the top and the j-th column from the left is painted black, the j-th character in the string s_i is #; if that square is painted white, the j-th character in the string s_i is .. find the number of pairs of a black square c_1 and a white square c_2 that satisfy the following condition: there is a path from the square c_1 to the square c_2 where we repeatedly move to a vertically or horizontally adjacent square through an alternating sequence of black and white squares: black, white, black, white... 

"
p03158, Nearest Card Game,"there are n cards. the i-th card has an integer a_i written on it.
for any two cards, the integers on those cards are different. using these cards, takahashi and aoki will play the following game: aoki chooses an integer x. takahashi should take the card with the largest integer among the remaining card. aoki should take the card with the integer closest to x among the remaining card. if there are multiple such cards, he should take the card with the smallest integer among those cards. 

 the game ends when there is no card remaining. you are given q candidates for the value of x: x_1, x_2, ..., x_q.
for each i (1 \leq i \leq q), find the sum of the integers written on the cards that takahashi will take if aoki chooses x = x_i. 
"
p03159, Attack to a Tree,"the server in company a has a structure where n devices numbered 1, 2, ..., n are connected with n - 1 cables.
the i-th cable connects device u_i and device v_i.
any two different devices are connected through some number of cables. each device v (1 \leq v \leq n) has a non-zero integer a_v, which represents the following: if a_v &lt; 0, device v is a computer that consumes an electric power of -a_v. if a_v &gt; 0, device v is a battery that supplies an electric power of a_v. you have decided to disconnect some number of cables (possibly zero) to disable the server.
when some cables are disconnected, the devices will be divided into some number of connected components.
the server will be disabled if all of these connected components satisfy one of the following conditions: there is no computer in the connected component. that is, a_v is positive for every device v that belongs to the connected component. there is not enough supply of electric power in the connected component. that is, the sum of a_v over all devices v that belong to the connected component is negative. at least how many cables do you need to disconnect in order to disable the server? 
"
p03160, Frog 1,"there are n stones, numbered 1, 2, \ldots, n.
for each i (1 \leq i \leq n), the height of stone i is h_i. there is a frog who is initially on stone 1.
he will repeat the following action some number of times to reach stone n: if the frog is currently on stone i, jump to stone i + 1 or stone i + 2. here, a cost of |h_i - h_j| is incurred, where j is the stone to land on. find the minimum possible total cost incurred before the frog reaches stone n. 
"
p03161, Frog 2,"there are n stones, numbered 1, 2, \ldots, n.
for each i (1 \leq i \leq n), the height of stone i is h_i. there is a frog who is initially on stone 1.
he will repeat the following action some number of times to reach stone n: if the frog is currently on stone i, jump to one of the following: stone i + 1, i + 2, \ldots, i + k. here, a cost of |h_i - h_j| is incurred, where j is the stone to land on. find the minimum possible total cost incurred before the frog reaches stone n. 
"
p03162, Vacation,"taro's summer vacation starts tomorrow, and he has decided to make plans for it now. the vacation consists of n days.
for each i (1 \leq i \leq n), taro will choose one of the following activities and do it on the i-th day: a: swim in the sea. gain a_i points of happiness. b: catch bugs in the mountains. gain b_i points of happiness. c: do homework at home. gain c_i points of happiness. as taro gets bored easily, he cannot do the same activities for two or more consecutive days. find the maximum possible total points of happiness that taro gains. 
"
p03163, Knapsack 1,"there are n items, numbered 1, 2, \ldots, n.
for each i (1 \leq i \leq n), item i has a weight of w_i and a value of v_i. taro has decided to choose some of the n items and carry them home in a knapsack.
the capacity of the knapsack is w, which means that the sum of the weights of items taken must be at most w. find the maximum possible sum of the values of items that taro takes home. 
"
p03164, Knapsack 2,"there are n items, numbered 1, 2, \ldots, n.
for each i (1 \leq i \leq n), item i has a weight of w_i and a value of v_i. taro has decided to choose some of the n items and carry them home in a knapsack.
the capacity of the knapsack is w, which means that the sum of the weights of items taken must be at most w. find the maximum possible sum of the values of items that taro takes home. 
"
p03165, LCS,"you are given strings s and t.
find one longest string that is a subsequence of both s and t. 
"
p03166, Longest Path,"there is a directed graph g with n vertices and m edges.
the vertices are numbered 1, 2, \ldots, n, and for each i (1 \leq i \leq m), the i-th directed edge goes from vertex x_i to y_i.
g does not contain directed cycles. find the length of the longest directed path in g.
here, the length of a directed path is the number of edges in it. 
"
p03167, Grid 1,"there is a grid with h horizontal rows and w vertical columns.
let (i, j) denote the square at the i-th row from the top and the j-th column from the left. for each i and j (1 \leq i \leq h, 1 \leq j \leq w), square (i, j) is described by a character a_{i, j}.
if a_{i, j} is ., square (i, j) is an empty square; if a_{i, j} is #, square (i, j) is a wall square.
it is guaranteed that squares (1, 1) and (h, w) are empty squares. taro will start from square (1, 1) and reach (h, w) by repeatedly moving right or down to an adjacent empty square. find the number of taro's paths from square (1, 1) to (h, w).
as the answer can be extremely large, find the count modulo 10^9 + 7. 
"
p03168, Coins,"let n be a positive odd number. there are n coins, numbered 1, 2, \ldots, n.
for each i (1 \leq i \leq n), when coin i is tossed, it comes up heads with probability p_i and tails with probability 1 - p_i. taro has tossed all the n coins.
find the probability of having more heads than tails. 
"
p03169, Sushi,"there are n dishes, numbered 1, 2, \ldots, n.
initially, for each i (1 \leq i \leq n), dish i has a_i (1 \leq a_i \leq 3) pieces of sushi on it. taro will perform the following operation repeatedly until all the pieces of sushi are eaten: roll a die that shows the numbers 1, 2, \ldots, n with equal probabilities, and let i be the outcome. if there are some pieces of sushi on dish i, eat one of them; if there is none, do nothing. find the expected number of times the operation is performed before all the pieces of sushi are eaten. 
"
p03170, Stones,"there is a set a = \{ a_1, a_2, \ldots, a_n \} consisting of n positive integers.
taro and jiro will play the following game against each other. initially, we have a pile consisting of k stones.
the two players perform the following operation alternately, starting from taro: choose an element x in a, and remove exactly x stones from the pile. a player loses when he becomes unable to play.
assuming that both players play optimally, determine the winner. 
"
p03171, Deque,"taro and jiro will play the following game against each other. initially, they are given a sequence a = (a_1, a_2, \ldots, a_n).
until a becomes empty, the two players perform the following operation alternately, starting from taro: remove the element at the beginning or the end of a. the player earns x points, where x is the removed element. let x and y be taro's and jiro's total score at the end of the game, respectively.
taro tries to maximize x - y, while jiro tries to minimize x - y. assuming that the two players play optimally, find the resulting value of x - y. 
"
p03172, Candies,"there are n children, numbered 1, 2, \ldots, n. they have decided to share k candies among themselves.
here, for each i (1 \leq i \leq n), child i must receive between 0 and a_i candies (inclusive).
also, no candies should be left over. find the number of ways for them to share candies, modulo 10^9 + 7.
here, two ways are said to be different when there exists a child who receives a different number of candies. 
"
p03173, Slimes,"there are n slimes lining up in a row.
initially, the i-th slime from the left has a size of a_i. taro is trying to combine all the slimes into a larger slime.
he will perform the following operation repeatedly until there is only one slime: choose two adjacent slimes, and combine them into a new slime. the new slime has a size of x + y, where x and y are the sizes of the slimes before combining them. here, a cost of x + y is incurred. the positional relationship of the slimes does not change while combining slimes. find the minimum possible total cost incurred. 
"
p03174, Matching,"there are n men and n women, both numbered 1, 2, \ldots, n. for each i, j (1 \leq i, j \leq n), the compatibility of man i and woman j is given as an integer a_{i, j}.
if a_{i, j} = 1, man i and woman j are compatible; if a_{i, j} = 0, they are not. taro is trying to make n pairs, each consisting of a man and a woman who are compatible.
here, each man and each woman must belong to exactly one pair. find the number of ways in which taro can make n pairs, modulo 10^9 + 7. 
"
p03175, Independent Set,"there is a tree with n vertices, numbered 1, 2, \ldots, n.
for each i (1 \leq i \leq n - 1), the i-th edge connects vertex x_i and y_i. taro has decided to paint each vertex in white or black.
here, it is not allowed to paint two adjacent vertices both in black. find the number of ways in which the vertices can be painted, modulo 10^9 + 7. 
"
p03176, Flowers,"there are n flowers arranged in a row.
for each i (1 \leq i \leq n), the height and the beauty of the i-th flower from the left is h_i and a_i, respectively.
here, h_1, h_2, \ldots, h_n are all distinct. taro is pulling out some flowers so that the following condition is met: the heights of the remaining flowers are monotonically increasing from left to right. find the maximum possible sum of the beauties of the remaining flowers. 
"
p03177, Walk,"there is a simple directed graph g with n vertices, numbered 1, 2, \ldots, n. for each i and j (1 \leq i, j \leq n), you are given an integer a_{i, j} that represents whether there is a directed edge from vertex i to j.
if a_{i, j} = 1, there is a directed edge from vertex i to j; if a_{i, j} = 0, there is not. find the number of different directed paths of length k in g, modulo 10^9 + 7.
we will also count a path that traverses the same edge multiple times. 
"
p03178, Digit Sum,"find the number of integers between 1 and k (inclusive) satisfying the following condition, modulo 10^9 + 7: the sum of the digits in base ten is a multiple of d. 

"
p03179, Permutation,"let n be a positive integer.
you are given a string s of length n - 1, consisting of &lt; and &gt;. find the number of permutations (p_1, p_2, \ldots, p_n) of (1, 2, \ldots, n) that satisfy the following condition, modulo 10^9 + 7: for each i (1 \leq i \leq n - 1), p_i &lt; p_{i + 1} if the i-th character in s is &lt;, and p_i &gt; p_{i + 1} if the i-th character in s is &gt;. 

"
p03180, Grouping,"there are n rabbits, numbered 1, 2, \ldots, n. for each i, j (1 \leq i, j \leq n), the compatibility of rabbit i and j is described by an integer a_{i, j}.
here, a_{i, i} = 0 for each i (1 \leq i \leq n), and a_{i, j} = a_{j, i} for each i and j (1 \leq i, j \leq n). taro is dividing the n rabbits into some number of groups.
here, each rabbit must belong to exactly one group.
after grouping, for each i and j (1 \leq i &lt; j \leq n), taro earns a_{i, j} points if rabbit i and j belong to the same group. find taro's maximum possible total score. 
"
p03181, Subtree,"there is a tree with n vertices, numbered 1, 2, \ldots, n.
for each i (1 \leq i \leq n - 1), the i-th edge connects vertex x_i and y_i. taro has decided to paint each vertex in white or black, so that any black vertex can be reached from any other black vertex by passing through only black vertices. you are given a positive integer m.
for each v (1 \leq v \leq n), answer the following question: assuming that vertex v has to be black, find the number of ways in which the vertices can be painted, modulo m. 

"
p03182, Intervals,"consider a string of length n consisting of 0 and 1.
the score for the string is calculated as follows: for each i (1 \leq i \leq m), a_i is added to the score if the string contains 1 at least once between the l_i-th and r_i-th characters (inclusive). find the maximum possible score of a string. 
"
p03183, Tower,"there are n blocks, numbered 1, 2, \ldots, n.
for each i (1 \leq i \leq n), block i has a weight of w_i, a solidness of s_i and a value of v_i. taro has decided to build a tower by choosing some of the n blocks and stacking them vertically in some order.
here, the tower must satisfy the following condition: for each block i contained in the tower, the sum of the weights of the blocks stacked above it is not greater than s_i. find the maximum possible sum of the values of the blocks contained in the tower. 
"
p03184, Grid 2,"there is a grid with h horizontal rows and w vertical columns.
let (i, j) denote the square at the i-th row from the top and the j-th column from the left. in the grid, n squares (r_1, c_1), (r_2, c_2), \ldots, (r_n, c_n) are wall squares, and the others are all empty squares.
it is guaranteed that squares (1, 1) and (h, w) are empty squares. taro will start from square (1, 1) and reach (h, w) by repeatedly moving right or down to an adjacent empty square. find the number of taro's paths from square (1, 1) to (h, w), modulo 10^9 + 7. 
"
p03185, Frog 3,"there are n stones, numbered 1, 2, \ldots, n.
for each i (1 \leq i \leq n), the height of stone i is h_i.
here, h_1 &lt; h_2 &lt; \cdots &lt; h_n holds. there is a frog who is initially on stone 1.
he will repeat the following action some number of times to reach stone n: if the frog is currently on stone i, jump to one of the following: stone i + 1, i + 2, \ldots, n. here, a cost of (h_j - h_i)^2 + c is incurred, where j is the stone to land on. find the minimum possible total cost incurred before the frog reaches stone n. 
"
p03186, Poisonous Cookies,"takahashi has a untasty cookies containing antidotes, b tasty cookies containing antidotes and c tasty cookies containing poison. eating a cookie containing poison results in a stomachache, and eating a cookie containing poison while having a stomachache results in a death.
as he wants to live, he cannot eat one in such a situation.
eating a cookie containing antidotes while having a stomachache cures it, and there is no other way to cure stomachaches. find the maximum number of tasty cookies that takahashi can eat. 
"
p03187, Tree Burning,"takahashi lake has a perimeter of l. on the circumference of the lake, there is a residence of the lake's owner, takahashi.
each point on the circumference of the lake has a coordinate between 0 and l (including 0 but not l), which is the distance from the takahashi's residence, measured counter-clockwise. there are n trees around the lake; the coordinate of the i-th tree is x_i. there is no tree at coordinate 0, the location of takahashi's residence. starting at his residence, takahashi will repeat the following action: if all trees are burnt, terminate the process. specify a direction: clockwise or counter-clockwise. walk around the lake in the specified direction, until the coordinate of a tree that is not yet burnt is reached for the first time. when the coordinate with the tree is reached, burn that tree, stay at the position and go back to the first step. find the longest possible total distance takahashi walks during the process. 
"
p03188, Coloring Torus,"for an n \times n grid, let (r, c) denote the square at the (r+1)-th row from the top and the (c+1)-th column from the left.
a good coloring of this grid using k colors is a coloring that satisfies the following: each square is painted in one of the k colors. each of the k colors is used for some squares. let us number the k colors 1, 2, ..., k. for any colors i and j (1 \leq i \leq k, 1 \leq j \leq k), every square in color i has the same number of adjacent squares in color j. here, the squares adjacent to square (r, c) are ((r-1)\; mod\; n, c), ((r+1)\; mod\; n, c), (r, (c-1)\; mod\; n) and (r, (c+1)\; mod\; n) (if the same square appears multiple times among these four, the square is counted that number of times). given k, choose n between 1 and 500 (inclusive) freely and construct a good coloring of an n \times n grid using k colors.
it can be proved that this is always possible under the constraints of this problem, 
"
p03189, Inversion Sum,"you are given an integer sequence of length n: a_1,a_2,...,a_n. let us perform q operations in order.
the i-th operation is described by two integers x_i and y_i. in this operation, we will choose one of the following two actions and perform it: swap the values of a_{x_i} and a_{y_i} do nothing there are 2^q ways to perform these operations. find the sum of the inversion numbers of the final sequences for all of these ways to perform operations, modulo 10^9+7. here, the inversion number of a sequence p_1,p_2,...,p_m is the number of pairs of integers (i,j) such that 1\leq i &lt; j\leq m and p_i &gt; p_j. 
"
p03190, Less than 3,"you are given strings s and t, both of length n.
s and t consist of 0 and 1. additionally, in these strings, the same character never occurs three or more times in a row. you can modify s by repeatedly performing the following operation: choose an index i (1 \leq i \leq n) freely and invert the i-th character in s (that is, replace 0 with 1, and 1 with 0), under the condition that the same character would not occur three or more times in a row in s after the operation. your objective is to make s equal to t.
find the minimum number of operations required. 
"
p03191, Permutation and Minimum,"there is a sequence of length 2n: a_1, a_2, ..., a_{2n}.
each a_i is either -1 or an integer between 1 and 2n (inclusive). any integer other than -1 appears at most once in {a_i}. for each i such that a_i = -1, snuke replaces a_i with an integer between 1 and 2n (inclusive), so that {a_i} will be a permutation of 1, 2, ..., 2n.
then, he finds a sequence of length n, b_1, b_2, ..., b_n, as b_i = min(a_{2i-1}, a_{2i}). find the number of different sequences that b_1, b_2, ..., b_n can be, modulo 10^9 + 7. 
"
p03192, 12/22,"you are given an integer n that has exactly four digits in base ten.
how many times does 2 occur in the base-ten representation of n? 
"
p03193, AtCoder Alloy,"there are n rectangular plate materials made of special metal called atcoder alloy.
the dimensions of the i-th material are a_i \times b_i (a_i vertically and b_i horizontally). takahashi wants a rectangular plate made of atcoder alloy whose dimensions are exactly h \times w.
he is trying to obtain such a plate by choosing one of the n materials and cutting it if necessary.
when cutting a material, the cuts must be parallel to one of the sides of the material.
also, the materials have fixed directions and cannot be rotated.
for example, a 5 \times 3 material cannot be used as a 3 \times 5 plate. out of the n materials, how many can produce an h \times w plate if properly cut? 
"
p03194, Product and GCD,"there are n integers a_1, a_2, ..., a_n not less than 1.
the values of a_1, a_2, ..., a_n are not known, but it is known that a_1 \times a_2 \times ... \times a_n = p. find the maximum possible greatest common divisor of a_1, a_2, ..., a_n. 
"
p03195, Harlequin,"there is an apple tree that bears apples of n colors. the n colors of these apples are numbered 1 to n, and there are a_i apples of color i. you and lunlun the dachshund alternately perform the following operation (starting from you): choose one or more apples from the tree and eat them. here, the apples chosen at the same time must all have different colors. the one who eats the last apple from the tree will be declared winner. if both you and lunlun play optimally, which will win? 
"
p03196, Product and GCD,"there are n integers a_1, a_2, ..., a_n not less than 1.
the values of a_1, a_2, ..., a_n are not known, but it is known that a_1 \times a_2 \times ... \times a_n = p. find the maximum possible greatest common divisor of a_1, a_2, ..., a_n. 
"
p03197, Harlequin,"there is an apple tree that bears apples of n colors. the n colors of these apples are numbered 1 to n, and there are a_i apples of color i. you and lunlun the dachshund alternately perform the following operation (starting from you): choose one or more apples from the tree and eat them. here, the apples chosen at the same time must all have different colors. the one who eats the last apple from the tree will be declared winner. if both you and lunlun play optimally, which will win? 
"
p03198, Negative Doubling,"there are n positive integers a_1, a_2, ..., a_n.
takahashi can perform the following operation on these integers any number of times: choose 1 \leq i \leq n and multiply the value of a_i by -2. notice that he multiplies it by minus two. he would like to make a_1 \leq a_2 \leq ... \leq a_n holds.
find the minimum number of operations required. if it is impossible, print -1. 
"
p03199, Square,"takahashi has an n \times n grid. the square at the i-th row and the j-th column of the grid is denoted by (i,j).
particularly, the top-left square of the grid is (1,1), and the bottom-right square is (n,n). an integer, 0 or 1, is written on m of the squares in the takahashi's grid.
three integers a_i,b_i and c_i describe the i-th of those squares with integers written on them: the integer c_i is written on the square (a_i,b_i). takahashi decides to write an integer, 0 or 1, on each of the remaining squares so that the condition below is satisfied.
find the number of such ways to write integers, modulo 998244353. for all 1\leq i &lt; j\leq n, there are even number of 1s in the square region whose top-left square is (i,i) and whose bottom-right square is (j,j). 

"
p03200, Irreversible operation,"there are n reversi pieces arranged in a row. (a reversi piece is a disc with a black side and a white side.)
the state of each piece is represented by a string s of length n.
if s_i=b, the i-th piece from the left is showing black;
if s_i=w, the i-th piece from the left is showing white. consider performing the following operation: choose i (1 \leq i &lt; n) such that the i-th piece from the left is showing black and the (i+1)-th piece from the left is showing white, then flip both of those pieces. that is, the i-th piece from the left is now showing white and the (i+1)-th piece from the left is now showing black. find the maximum possible number of times this operation can be performed. 
"
p03201, Powers of two,"takahashi has n balls with positive integers written on them. the integer written on the i-th ball is a_i.
he would like to form some number of pairs such that the sum of the integers written on each pair of balls is a power of 2.
note that a ball cannot belong to multiple pairs.
find the maximum possible number of pairs that can be formed. here, a positive integer is said to be a power of 2 when it can be written as 2^t using some non-negative integer t. 
"
p03202, Lexicographic constraints,"there are n strings arranged in a row.
it is known that, for any two adjacent strings, the string to the left is lexicographically smaller than the string to the right.
that is, s_1&lt;s_2&lt;...&lt;s_n holds lexicographically, where s_i is the i-th string from the left. at least how many different characters are contained in s_1,s_2,...,s_n, if the length of s_i is known to be a_i? 
"
p03203, Grid game,"takahashi and aoki will play a game using a grid with h rows and w columns of square cells.
there are n obstacles on this grid; the i-th obstacle is at (x_i,y_i).
here, we represent the cell at the i-th row and j-th column (1 \leq i \leq h, 1 \leq j \leq w) by (i,j).
there is no obstacle at (1,1), and there is a piece placed there at (1,1). starting from takahashi, he and aoki alternately perform one of the following actions: move the piece to an adjacent cell.
    here, let the position of the piece be (x,y). then takahashi can only move the piece to (x+1,y), and aoki can only move the piece to (x,y+1).
    if the destination cell does not exist or it is occupied by an obstacle, this action cannot be taken. do not move the piece, and end his turn without affecting the grid. the game ends when the piece does not move twice in a row. takahashi would like to perform as many actions (including not moving the piece) as possible before the game ends, while aoki would like to perform as few actions as possible before the game ends.
how many actions will takahashi end up performing? 
"
p03204, Wandering TKHS,"takahashi's office has n rooms. each room has an id from 1 to n.
there are also n-1 corridors, and the i-th corridor connects room a_i and room b_i.
it is known that we can travel between any two rooms using only these corridors. takahashi has got lost in one of the rooms. let this room be r.
he decides to get back to his room, room 1, by repeatedly traveling in the following manner: travel to the room with the smallest id among the rooms that are adjacent to the rooms already visited, but not visited yet. let c_r be the number of travels required to get back to room 1.
find all of c_2,c_3,...,c_n.
note that, no matter how many corridors he passes through in a travel, it still counts as one travel. 
"
p03205, Construction of a tree,"you are given n-1 subsets of \{1,2,...,n\}. let the i-th set be e_i. let us choose two distinct elements u_i and v_i from each set e_i, and consider a graph t with n vertices and n-1 edges, whose vertex set is \{1,2,..,n\} and whose edge set is (u_1,v_1),(u_2,v_2),...,(u_{n-1},v_{n-1}).
determine if t can be a tree by properly deciding u_i and v_i.
if it can, additionally find one instance of (u_1,v_1),(u_2,v_2),...,(u_{n-1},v_{n-1}) such that t is actually a tree. 
"
p03206, Christmas Eve Eve Eve,"in some other world, today is december d-th. write a program that prints christmas if d = 25, christmas eve if d = 24, christmas eve eve if d = 23 and christmas eve eve eve if d = 22. 
"
p03207, Christmas Eve Eve,"in some other world, today is the day before christmas eve. mr. takaha is buying n items at a department store. the regular price of the i-th item (1 \leq i \leq n) is p_i yen (the currency of japan). he has a discount coupon, and can buy one item with the highest price for half the regular price. the remaining n-1 items cost their regular prices. what is the total amount he will pay? 
"
p03208, Christmas Eve,"in some other world, today is christmas eve. there are n trees planted in mr. takaha's garden. the height of the i-th tree (1 \leq i \leq n) is h_i meters. he decides to choose k trees from these trees and decorate them with electric lights. to make the scenery more beautiful, the heights of the decorated trees should be as close to each other as possible. more specifically, let the height of the tallest decorated tree be h_{max} meters, and the height of the shortest decorated tree be h_{min} meters. the smaller the value h_{max} - h_{min} is, the better. what is the minimum possible value of h_{max} - h_{min}? 
"
p03209, Christmas,"in some other world, today is christmas. mr. takaha decides to make a multi-dimensional burger in his party. a level-l burger (l is an integer greater than or equal to 0) is the following thing: a level-0 burger is a patty. a level-l burger (l \geq 1) is a bun, a level-(l-1) burger, a patty, another level-(l-1) burger and another bun, stacked vertically in this order from the bottom. for example, a level-1 burger and a level-2 burger look like bpppb and bbpppbpbpppbb (rotated 90 degrees), where b and p stands for a bun and a patty. the burger mr. takaha will make is a level-n burger. lunlun the dachshund will eat x layers from the bottom of this burger (a layer is a patty or a bun). how many patties will she eat? 
"
p03210, 753,"shichi-go-san (literally ""seven-five-three"") is a traditional event in a certain country to celebrate the growth of seven-, five- and three-year-old children. takahashi is now x years old. will his growth be celebrated in shichi-go-san this time? 
"
p03211, 754,"there is a string s consisting of digits 1, 2, ..., 9.
lunlun, the dachshund, will take out three consecutive digits from s, treat them as a single integer x and bring it to her master. (she cannot rearrange the digits.) the master's favorite number is 753. the closer to this number, the better.
what is the minimum possible (absolute) difference between x and 753? 
"
p03212, 755,"you are given an integer n. among the integers between 1 and n (inclusive), how many shichi-go-san numbers (literally ""seven-five-three numbers"") are there? here, a shichi-go-san number is a positive integer that satisfies the following condition: when the number is written in base ten, each of the digits 7, 5 and 3 appears at least once, and the other digits never appear. 

"
p03213, 756,"you are given an integer n. among the divisors of n! (= 1 \times 2 \times ... \times n), how many shichi-go numbers (literally ""seven-five numbers"") are there? here, a shichi-go number is a positive integer that has exactly 75 divisors. 
"
p03214, Thumbnail,"niwango-kun is an employee of dwango co., ltd.
one day, he is asked to generate a thumbnail from a video a user submitted.
to generate a thumbnail, he needs to select a frame of the video according to the following procedure: get an integer n and n integers a_0, a_1, ..., a_{n-1} as inputs. n denotes the number of the frames of the video, and each a_i denotes the representation of the i-th frame of the video. select t-th frame whose representation a_t is nearest to the average of all frame representations. if there are multiple such frames, select the frame with the smallest index. find the index t of the frame he should select to generate a thumbnail. 
"
p03215, Sum AND Subarrays,"one day, niwango-kun, an employee of dwango co., ltd., found an integer sequence (a_1, ..., a_n) of length n.
he is interested in properties of the sequence a. for a nonempty contiguous subsequence a_l, ..., a_r (1 \leq l \leq r \leq n) of the sequence a, its beauty is defined as a_l + ... + a_r. niwango-kun wants to know the maximum possible value of the bitwise and of the beauties of k nonempty contiguous subsequences among all n(n+1)/2 nonempty contiguous subsequences. (subsequences may share elements.) find the maximum possible value for him. 
"
p03216,DMC,"in dwango co., ltd., there is a content distribution system named 'dwango media cluster', and it is called 'dmc' for short.
the name 'dmc' sounds cool for niwango-kun, so he starts to define dmc-ness of a string. given a string s of length n and an integer k (k \geq 3),
he defines the k-dmc number of s as the number of triples (a, b, c) of integers that satisfy the following conditions: 0 \leq a &lt; b &lt; c \leq n - 1 s[a] = d s[b] = m s[c] = c c-a &lt; k here s[a] is the a-th character of the string s. indexing is zero-based, that is, 0 \leq a \leq n - 1 holds. for a string s and q integers k_0, k_1, ..., k_{q-1}, calculate the k_i-dmc number of s for each i (0 \leq i \leq q-1). 
"
p03217, Square Rotation,"niwango-kun, an employee of dwango co., ltd., likes niconico tv-chan, so he collected a lot of soft toys of her and spread them on the floor. niwango-kun has n black rare soft toys of niconico tv-chan and they are spread together with ordinary ones. he wanted these black rare soft toys to be close together, so he decided to rearrange them. in an infinitely large two-dimensional plane, every lattice point has a soft toy on it. the coordinates (x_i,y_i) of n black rare soft toys are given. all soft toys are considered to be points (without a length, area, or volume). he may perform the following operation arbitrarily many times: put an axis-aligned square with side length d, rotate the square by 90 degrees with four soft toys on the four corners of the square. more specifically, if the left bottom corner's coordinate is (x, y), rotate four points (x,y) \rightarrow (x+d,y) \rightarrow (x+d,y+d) \rightarrow (x,y+d) \rightarrow (x,y) in this order. each of the four corners of the square must be on a lattice point. let's define the scatteredness of an arrangement by the minimum side length of an axis-aligned square enclosing all black rare soft toys. black rare soft toys on the edges or the vertices of a square are considered to be enclosed by the square. find the minimum scatteredness after he performs arbitrarily many operations. 
"
p03218, Cyclic GCDs,"niwango-kun has \(n\) chickens as his pets. the chickens are identified by numbers \(1\) to \(n\), and the size of the \(i\)-th chicken is a positive integer \(a_i\). \(n\) chickens decided to take each other's hand (wing) and form some cycles. the way to make cycles is represented by a permutation \(p\) of \(1, \ldots , n\). chicken \(i\) takes chicken \(p_i\)'s left hand by its right hand. chickens may take their own hand. let us define the cycle containing chicken \(i\) as the set consisting of chickens \(p_i, p_{p_i}, \ldots, p_{\ddots_i} = i\). it can be proven that after each chicken takes some chicken's hand, the \(n\) chickens can be decomposed into cycles. the beauty \(f(p)\) of a way of forming cycles is defined as the product of the size of the smallest chicken in each cycle.
let \(b_i \ (1 \leq i \leq n)\) be the sum of \(f(p)\) among all possible permutations \(p\) for which \(i\) cycles are formed in the procedure above. find the greatest common divisor of \(b_1, b_2, \ldots, b_n\) and print it \({\rm mod} \ 998244353\). 
"
p03219, Discount Fare,"there is a train going from station a to station b that costs x yen (the currency of japan). also, there is a bus going from station b to station c that costs y yen. joisino got a special ticket. with this ticket, she can take the bus for half the fare if she travels from station a to station b by train and then travels from station b to station c by bus. how much does it cost to travel from station a to station c if she uses this ticket? 
"
p03220, Palace,"a country decides to build a palace. in this country, the average temperature of a point at an elevation of x meters is t-x \times 0.006 degrees celsius. there are n places proposed for the place. the elevation of place i is h_i meters. among them, princess joisino orders you to select the place whose average temperature is the closest to a degrees celsius, and build the palace there. print the index of the place where the palace should be built. it is guaranteed that the solution is unique. 
"
p03221, ID,"in republic of atcoder, there are n prefectures, and a total of m cities that belong to those prefectures. city i is established in year y_i and belongs to prefecture p_i. you can assume that there are no multiple cities that are established in the same year. it is decided to allocate a 12-digit id number to each city. if city i is the x-th established city among the cities that belong to prefecture i, the first six digits of the id number of city i is p_i, and the last six digits of the id number is x. here, if p_i or x (or both) has less than six digits, zeros are added to the left until it has six digits. find the id numbers for all the cities. note that there can be a prefecture with no cities. 
"
p03222, Number of Amidakuji,"amidakuji is a traditional method of lottery in japan. to make an amidakuji, we first draw w parallel vertical lines, and then draw horizontal lines that connect them. the length of each vertical line is h+1 [cm], and the endpoints of the horizontal lines must be at 1, 2, 3, ..., or h [cm] from the top of a vertical line. a valid amidakuji is an amidakuji that satisfies the following conditions: no two horizontal lines share an endpoint. the two endpoints of each horizontal lines must be at the same height. a horizontal line must connect adjacent vertical lines.  find the number of the valid amidakuji that satisfy the following condition, modulo 1\ 000\ 000\ 007: if we trace the path from the top of the leftmost vertical line to the bottom, always following horizontal lines when we encounter them, we reach the bottom of the k-th vertical line from the left. for example, in the following amidakuji, we will reach the bottom of the fourth vertical line from the left.  
"
p03223, Align,"you are given n integers; the i-th of them is a_i.
find the maximum possible sum of the absolute differences between the adjacent elements after arranging these integers in a row in any order you like. 
"
p03224, Crossing,"you are given an integer n. determine if there exists a tuple of subsets of \{1,2,...n\}, (s_1,s_2,...,s_k), that satisfies the following conditions: each of the integers 1,2,...,n is contained in exactly two of the sets s_1,s_2,...,s_k. any two of the sets s_1,s_2,...,s_k have exactly one element in common. if such a tuple exists, construct one such tuple. 
"
p03225, Equilateral,"there are some coins in the xy-plane.
the positions of the coins are represented by a grid of characters with h rows and w columns.
if the character at the i-th row and j-th column, s_{ij}, is #, there is one coin at point (i,j); if that character is ., there is no coin at point (i,j). there are no other coins in the xy-plane. there is no coin at point (x,y) where 1\leq i\leq h,1\leq j\leq w does not hold.
there is also no coin at point (x,y) where x or y (or both) is not an integer.
additionally, two or more coins never exist at the same point. find the number of triples of different coins that satisfy the following condition: choosing any two of the three coins would result in the same manhattan distance between the points where they exist. here, the manhattan distance between points (x,y) and (x',y') is |x-x'|+|y-y'|.
two triples are considered the same if the only difference between them is the order of the coins. 
"
p03226, Circular,"you are given a sequence of n integers: a_1,a_2,...,a_n. find the number of permutations p_1,p_2,...,p_n of 1,2,...,n that can be changed to a_1,a_2,...,a_n by performing the following operation some number of times (possibly zero), modulo 998244353: for each 1\leq i\leq n, let q_i=min(p_{i-1},p_{i}), where p_0=p_n. replace the sequence p with the sequence q. 

"
p03227, Measure,"you are given a string s of length 2 or 3 consisting of lowercase english letters. if the length of the string is 2, print it as is; if the length is 3, print the string after reversing it. 
"
p03228, Exchange,"in the beginning, takahashi has a cookies, and aoki has b cookies.
they will perform the following operation alternately, starting from takahashi: if the number of cookies in his hand is odd, eat one of those cookies; if the number is even, do nothing. then, give one-half of the cookies in his hand to the other person. find the numbers of cookies takahashi and aoki respectively have after performing k operations in total. 
"
p03229, Align,"you are given n integers; the i-th of them is a_i.
find the maximum possible sum of the absolute differences between the adjacent elements after arranging these integers in a row in any order you like. 
"
p03230, Crossing,"you are given an integer n. determine if there exists a tuple of subsets of \{1,2,...n\}, (s_1,s_2,...,s_k), that satisfies the following conditions: each of the integers 1,2,...,n is contained in exactly two of the sets s_1,s_2,...,s_k. any two of the sets s_1,s_2,...,s_k have exactly one element in common. if such a tuple exists, construct one such tuple. 
"
p03231, Two Abbreviations,"you are given a string s of length n and another string t of length m.
these strings consist of lowercase english letters. a string x is called a good string when the following conditions are all met: let l be the length of x. l is divisible by both n and m. concatenating the 1-st, (\frac{l}{n}+1)-th, (2 \times \frac{l}{n}+1)-th, ..., ((n-1)\times\frac{l}{n}+1)-th characters of x, without changing the order, results in s. concatenating the 1-st, (\frac{l}{m}+1)-th, (2 \times \frac{l}{m}+1)-th, ..., ((m-1)\times\frac{l}{m}+1)-th characters of x, without changing the order, results in t. determine if there exists a good string. if it exists, find the length of the shortest such string. 
"
p03232, Removing Blocks,"there are n blocks arranged in a row, numbered 1 to n from left to right.
each block has a weight, and the weight of block i is a_i.
snuke will perform the following operation on these blocks n times: choose one block that is still not removed, and remove it.
the cost of this operation is the sum of the weights of the blocks that are connected to the block being removed (including itself).
here, two blocks x and y ( x \leq y ) are connected when, for all z ( x \leq z \leq y ), block z is still not removed. there are n! possible orders in which snuke removes the blocks.
for all of those n! orders, find the total cost of the n operations, and calculate the sum of those n! total costs.
as the answer can be extremely large, compute the sum modulo 10^9+7. 
"
p03233, Min Cost Cycle,"we have a directed weighted graph with n vertices.
each vertex has two integers written on it, and the integers written on vertex i are a_i and b_i. in this graph, there is an edge from vertex x to vertex y for all pairs 1 \leq x,y \leq n, and its weight is {\rm min}(a_x,b_y). we will consider a directed cycle in this graph that visits every vertex exactly once.
find the minimum total weight of the edges in such a cycle. 
"
p03234, Chords,"there are 2n points evenly spaced on the circumference of a circle.
these points are numbered 1 to 2n in clockwise order, starting from some of them. snuke will divide these points into n pairs, then for each pair, he will draw a line segment connecting the two points.
after the line segments are drawn, two points are connected when one can reach from one of those points to the other by traveling only on the line segments.
the number of the connected parts here is the number of the connected components in the graph with 2n vertices, corresponding to the 2n points, where every pair of vertices corresponding to two connected points is connected with an edge. snuke has already decided k of the pairs, and the i-th of them is a pair of point a_i and point b_i. he is thinking of trying all possible ways to make the remaining n-k pairs and counting the number of the connected parts for each of those ways.
find the sum of those numbers of the connected parts.
as the answer can be extremely large, compute the sum modulo 10^9+7. 
"
p03235, High Elements,"you are given p, a permutation of (1,\ 2,\ ...\ n). a string s of length n consisting of 0 and 1 is a good string when it meets the following criterion: first, let x and y be empty sequences. for each i=1,\ 2,\ ...\ n, in this order, append p_i to the end of x if s_i= 0, and append it to the end of y if s_i= 1. 

 if x and y have the same number of high elements, s is a good string.
here, the i-th element of a sequence is called high when that element is the largest among the elements from the 1-st to i-th element in the sequence. determine if there exists a good string. if it exists, find the lexicographically smallest such string. 
"
p03236, Reachable Cells,"problem f and f2 are the same problem, but with different constraints and time limits. we have a board divided into n horizontal rows and n vertical columns of square cells.
the cell at the i-th row from the top and the j-th column from the left is called cell (i,j).
each cell is either empty or occupied by an obstacle.
also, each empty cell has a digit written on it.
if a_{i,j}= 1, 2, ..., or 9, cell (i,j) is empty and the digit a_{i,j} is written on it.
if a_{i,j}= #, cell (i,j) is occupied by an obstacle. cell y is reachable from cell x when the following conditions are all met: cells x and y are different. cells x and y are both empty. one can reach from cell x to cell y by repeatedly moving right or down to an adjacent empty cell. consider all pairs of cells (x,y) such that cell y is reachable from cell x.
find the sum of the products of the digits written on cell x and cell y for all of those pairs. 
"
p03237, Reachable Cells,"problem f and f2 are the same problem, but with different constraints and time limits. we have a board divided into n horizontal rows and n vertical columns of square cells.
the cell at the i-th row from the top and the j-th column from the left is called cell (i,j).
each cell is either empty or occupied by an obstacle.
also, each empty cell has a digit written on it.
if a_{i,j}= 1, 2, ..., or 9, cell (i,j) is empty and the digit a_{i,j} is written on it.
if a_{i,j}= #, cell (i,j) is occupied by an obstacle. cell y is reachable from cell x when the following conditions are all met: cells x and y are different. cells x and y are both empty. one can reach from cell x to cell y by repeatedly moving right or down to an adjacent empty cell. consider all pairs of cells (x,y) such that cell y is reachable from cell x.
find the sum of the products of the digits written on cell x and cell y for all of those pairs. 
"
p03238, Programming Education,"in 2020, atcoder inc. with an annual sales of more than one billion yen (the currency of japan) has started a business in programming education.
one day, there was an exam where a one-year-old child must write a program that prints hello world, and a two-year-old child must write a program that receives integers a, b and prints a+b.
takahashi, who is taking this exam, suddenly forgets his age.
he decides to write a program that first receives his age n (1 or 2) as input, then prints hello world if n=1, and additionally receives integers a, b and prints a+b if n=2.
write this program for him.   
"
p03239, Time Limit Exceeded,"when mr. x is away from home, he has decided to use his smartwatch to search the best route to go back home, to participate in abc. you, the smartwatch, has found n routes to his home. if mr. x uses the i-th of these routes, he will get home in time t_i at cost c_i. find the smallest cost of a route that takes not longer than time t. 
"
p03240, Pyramid,"in the ancient kingdom of snuke, there was a pyramid to strengthen the authority of takahashi, the president of atcoder inc.
the pyramid had center coordinates (c_x, c_y) and height h. the altitude of coordinates (x, y) is max(h - |x - c_x| - |y - c_y|, 0).   aoki, an explorer, conducted a survey to identify the center coordinates and height of this pyramid. as a result, he obtained the following information:   c_x, c_y was integers between 0 and 100 (inclusive), and h was an integer not less than 1.   additionally, he obtained n pieces of information. the i-th of them is: ""the altitude of point (x_i, y_i) is h_i.""   this was enough to identify the center coordinates and the height of the pyramid. find these values with the clues above.   
"
p03241, Partition,"you are given integers n and m. consider a sequence a of length n consisting of positive integers such that a_1 + a_2 + ... + a_n = m. find the maximum possible value of the greatest common divisor of a_1, a_2, ..., a_n. 
"
p03242, AtCoder Beginner Contest 999,"cat snuke is learning to write characters.
today, he practiced writing digits 1 and 9, but he did it the other way around. you are given a three-digit integer n written by snuke.
print the integer obtained by replacing each digit 1 with 9 and each digit 9 with 1 in n. 
"
p03243, AtCoder Beginner Contest 111,"kurohashi has never participated in atcoder beginner contest (abc). the next abc to be held is abc n (the n-th abc ever held).
kurohashi wants to make his debut in some abc x such that all the digits of x in base ten are the same. what is the earliest abc where kurohashi can make his debut? 
"
p03244, /\/\/\/,"a sequence a_1,a_2,... ,a_n is said to be /\/\/\/ when the following conditions are satisfied: for each i = 1,2,..., n-2, a_i = a_{i+2}. exactly two different numbers appear in the sequence. you are given a sequence v_1,v_2,...,v_n whose length is even.
we would like to make this sequence /\/\/\/ by replacing some of its elements.
find the minimum number of elements that needs to be replaced. 
"
p03245, Robot Arms,"snuke is introducing a robot arm with the following properties to his factory: the robot arm consists of m sections and m+1 joints. the sections are numbered 1, 2, ..., m, and the joints are numbered 0, 1, ..., m. section i connects joint i-1 and joint i. the length of section i is d_i. (x_0, y_0) = (0, 0). if the mode of section i is l, (x_{i}, y_{i}) = (x_{i-1} - d_{i}, y_{i-1}). if the mode of section i is r, (x_{i}, y_{i}) = (x_{i-1} + d_{i}, y_{i-1}). if the mode of section i is d, (x_{i}, y_{i}) = (x_{i-1}, y_{i-1} - d_{i}). if the mode of section i is u, (x_{i}, y_{i}) = (x_{i-1}, y_{i-1} + d_{i}). 

 snuke would like to introduce a robot arm so that the position of joint m can be matched with all of the n points (x_1, y_1), (x_2, y_2), ..., (x_n, y_n) by properly specifying the modes of the sections.
is this possible?
if so, find such a robot arm and how to bring joint m to each point (x_j, y_j). 
"
p03246, /\/\/\/,"a sequence a_1,a_2,... ,a_n is said to be /\/\/\/ when the following conditions are satisfied: for each i = 1,2,..., n-2, a_i = a_{i+2}. exactly two different numbers appear in the sequence. you are given a sequence v_1,v_2,...,v_n whose length is even.
we would like to make this sequence /\/\/\/ by replacing some of its elements.
find the minimum number of elements that needs to be replaced. 
"
p03247, Robot Arms,"snuke is introducing a robot arm with the following properties to his factory: the robot arm consists of m sections and m+1 joints. the sections are numbered 1, 2, ..., m, and the joints are numbered 0, 1, ..., m. section i connects joint i-1 and joint i. the length of section i is d_i. (x_0, y_0) = (0, 0). if the mode of section i is l, (x_{i}, y_{i}) = (x_{i-1} - d_{i}, y_{i-1}). if the mode of section i is r, (x_{i}, y_{i}) = (x_{i-1} + d_{i}, y_{i-1}). if the mode of section i is d, (x_{i}, y_{i}) = (x_{i-1}, y_{i-1} - d_{i}). if the mode of section i is u, (x_{i}, y_{i}) = (x_{i-1}, y_{i-1} + d_{i}). 

 snuke would like to introduce a robot arm so that the position of joint m can be matched with all of the n points (x_1, y_1), (x_2, y_2), ..., (x_n, y_n) by properly specifying the modes of the sections.
is this possible?
if so, find such a robot arm and how to bring joint m to each point (x_j, y_j). 
"
p03248, Tr/ee,"you are given a string s of length n.
does a tree with n vertices that satisfies the following conditions exist? the vertices are numbered 1,2,..., n. the edges are numbered 1,2,..., n-1, and edge i connects vertex u_i and v_i. if the i-th character in s is 1, we can have a connected component of size i by removing one edge from the tree. if the i-th character in s is 0, we cannot have a connected component of size i by removing any one edge from the tree. if such a tree exists, construct one such tree. 
"
p03249, Distance Sums,"you are given a sequence d_1, d_2, ..., d_n of length n.
the values of d_i are all distinct.
does a tree with n vertices that satisfies the following conditions exist? the vertices are numbered 1,2,..., n. the edges are numbered 1,2,..., n-1, and edge i connects vertex u_i and v_i. for each vertex i, the sum of the distances from i to the other vertices is d_i, assuming that the length of each edge is 1. if such a tree exists, construct one such tree. 
"
p03250, Maximize the Formula,"you have decided to give an allowance to your child depending on the outcome of the game that he will play now. the game is played as follows: there are three ""integer panels"", each with a digit between 1 and 9 (inclusive) printed on it, and one ""operator panel"" with a + printed on it. the player should construct a formula of the form x + y, by arranging the four panels from left to right. (the operator panel should not be placed at either end of the formula.) then, the amount of the allowance will be equal to the resulting value of the formula. given the values a, b and c printed on the integer panels used in the game, find the maximum possible amount of the allowance. 
"
p03251, 1 Dimensional World's Tale,"our world is one-dimensional, and ruled by two empires called empire a and empire b. the capital of empire a is located at coordinate x, and that of empire b is located at coordinate y. one day, empire a becomes inclined to put the cities at coordinates x_1, x_2, ..., x_n under its control, and empire b becomes inclined to put the cities at coordinates y_1, y_2, ..., y_m under its control. if there exists an integer z that satisfies all of the following three conditions, they will come to an agreement, but otherwise war will break out. x &lt; z \leq y x_1, x_2, ..., x_n &lt; z y_1, y_2, ..., y_m \geq z determine if war will break out. 
"
p03252, String Transformation,"you are given strings s and t consisting of lowercase english letters. you can perform the following operation on s any number of times: operation: choose two distinct lowercase english letters c_1 and c_2, then replace every occurrence of c_1 with c_2, and every occurrence of c_2 with c_1. determine if s and t can be made equal by performing the operation zero or more times. 
"
p03253, Factorization,"you are given positive integers n and m. how many sequences a of length n consisting of positive integers satisfy a_1 \times a_2 \times ... \times a_n = m? find the count modulo 10^9+7. here, two sequences a' and a'' are considered different when there exists some i such that a_i' \neq a_i''. 
"
p03254, Candy Distribution Again,"there are n children, numbered 1, 2, ..., n. snuke has decided to distribute x sweets among them.
he needs to give out all the x sweets, but some of the children may get zero sweets. for each i (1 \leq i \leq n), child i will be happy if he/she gets exactly a_i sweets.
snuke is trying to maximize the number of happy children by optimally distributing the sweets.
find the maximum possible number of happy children. 
"
p03255, Garbage Collector,"snuke has decided to use a robot to clean his room. there are n pieces of trash on a number line.
the i-th piece from the left is at position x_i.
we would like to put all of them in a trash bin at position 0. for the positions of the pieces of trash, 0 &lt; x_1 &lt; x_2 &lt; ... &lt; x_{n} \leq 10^{9} holds. the robot is initially at position 0.
it can freely move left and right along the number line, pick up a piece of trash when it comes to the position of that piece, carry any number of pieces of trash and put them in the trash bin when it comes to position 0. it is not allowed to put pieces of trash anywhere except in the trash bin. the robot consumes x points of energy when the robot picks up a piece of trash, or put pieces of trash in the trash bin. (putting any number of pieces of trash in the trash bin consumes x points of energy.)
also, the robot consumes (k+1)^{2} points of energy to travel by a distance of 1 when the robot is carrying k pieces of trash. find the minimum amount of energy required to put all the n pieces of trash in the trash bin. 
"
p03256, ABland Yard,"you are given an undirected graph consisting of n vertices and m edges.
the vertices are numbered 1 to n, and the edges are numbered 1 to m.
in addition, each vertex has a label, a or b. the label of vertex i is s_i.
edge i bidirectionally connects vertex a_i and b_i. the phantom thief nusook likes to choose some vertex as the startpoint and traverse an edge zero or more times.
today, he will make a string after traveling as above, by placing the labels of the visited vertices in the order visited, beginning from the startpoint. for example, in a graph where vertex 1 has the label a and vertex 2 has the label b, if nusook travels along the path 1 \rightarrow 2 \rightarrow 1 \rightarrow 2 \rightarrow 2, the resulting string is ababb. determine if nusook can make all strings consisting of a and b. 
"
p03257, Modulo Matrix,"you are given an integer n. construct any one n-by-n matrix a that satisfies the conditions below. it can be proved that a solution always exists under the constraints of this problem. 1 \leq a_{i,j} \leq 10^{15} a_{i,j} are pairwise distinct integers. there exists a positive integer m such that the following holds: let x and y be two elements of the matrix that are vertically or horizontally adjacent. then, {\rm max}(x,y) {\rm mod} {\rm min}(x,y) is always m. 

"
p03258, ABBreviate,"there is a string s consisting of a and b.
snuke can perform the following two kinds of operation any number of times in any order: choose an occurrence of aa as a substring, and replace it with b. choose an occurrence of bb as a substring, and replace it with a. how many strings s can be obtained by this sequence of operations?
find the count modulo 10^9 + 7. 
"
p03259, Grafting,"snuke has found two trees a and b, each with n vertices numbered 1 to n.
the i-th edge of a connects vertex a_i and b_i, and the j-th edge of b connects vertex c_j and d_j.
also, all vertices of a are initially painted white. snuke would like to perform the following operation on a zero or more times so that a coincides with b: choose a leaf vertex that is painted white. (let this vertex be v.) remove the edge incident to v, and add a new edge that connects v to another vertex. paint v black. determine if a can be made to coincide with b, ignoring color. if the answer is yes, find the minimum number of operations required. you are given t cases of this kind. find the answer for each of them. 
"
p03260, ABC333,"you are given integers a and b, each between 1 and 3 (inclusive). determine if there is an integer c between 1 and 3 (inclusive) such that a \times b \times c is an odd number. 
"
p03261, Shiritori,"takahashi is practicing shiritori alone again today. shiritori is a game as follows: in the first turn, a player announces any one word. that word is not announced before. the first character of that word is the same as the last character of the last word announced. 

 in this game, he is practicing to announce as many words as possible in ten seconds. you are given the number of words takahashi announced, n, and the i-th word he announced, w_i, for each i. determine if the rules of shiritori was observed, that is, every word announced by him satisfied the conditions. 
"
p03262, Skip,"there are n cities on a number line. the i-th city is located at coordinate x_i. your objective is to visit all these cities at least once. in order to do so, you will first set a positive integer d. then, you will depart from coordinate x and perform move 1 and move 2 below, as many times as you like: move 1: travel from coordinate y to coordinate y + d. move 2: travel from coordinate y to coordinate y - d. find the maximum value of d that enables you to visit all the cities. here, to visit a city is to travel to the coordinate where that city is located. 
"
p03263, Make Them Even,"there is a grid of square cells with h horizontal rows and w vertical columns. the cell at the i-th row and the j-th column will be denoted as cell (i, j). in cell (i, j), a_{ij} coins are placed. you can perform the following operation any number of times: operation: choose a cell that was not chosen before and contains one or more coins, then move one of those coins to a vertically or horizontally adjacent cell. maximize the number of cells containing an even number of coins. 
"
p03264, Pair,"find the number of ways to choose a pair of an even number and an odd number from the positive integers between 1 and k (inclusive). the order does not matter. 
"
p03265, Ruined Square,"there is a square in the xy-plane. the coordinates of its four vertices are (x_1,y_1),(x_2,y_2),(x_3,y_3) and (x_4,y_4) in counter-clockwise order.
(assume that the positive x-axis points right, and the positive y-axis points up.) takahashi remembers (x_1,y_1) and (x_2,y_2), but he has forgot (x_3,y_3) and (x_4,y_4). given x_1,x_2,y_1,y_2, restore x_3,y_3,x_4,y_4. it can be shown that x_3,y_3,x_4 and y_4 uniquely exist and have integer values. 
"
p03266, Triangular Relationship,"you are given integers n and k. find the number of triples (a,b,c) of positive integers not greater than n such that a+b,b+c and c+a are all multiples of k.
the order of a,b,c does matter, and some of them can be the same. 
"
p03267, All Your Paths are Different Lengths,"you are given an integer l. construct a directed graph that satisfies the conditions below. the graph may contain multiple edges between the same pair of vertices. it can be proved that such a graph always exists. the number of vertices, n, is at most 20. the vertices are given id numbers from 1 to n. the number of edges, m, is at most 60. each edge has an integer length between 0 and 10^6 (inclusive). every edge is directed from the vertex with the smaller id to the vertex with the larger id. that is, 1,2,...,n is one possible topological order of the vertices. there are exactly l different paths from vertex 1 to vertex n. the lengths of these paths are all different, and they are integers between 0 and l-1. here, the length of a path is the sum of the lengths of the edges contained in that path, and two paths are considered different when the sets of the edges contained in those paths are different. 
"
p03268, Triangular Relationship,"you are given integers n and k. find the number of triples (a,b,c) of positive integers not greater than n such that a+b,b+c and c+a are all multiples of k.
the order of a,b,c does matter, and some of them can be the same. 
"
p03269, All Your Paths are Different Lengths,"you are given an integer l. construct a directed graph that satisfies the conditions below. the graph may contain multiple edges between the same pair of vertices. it can be proved that such a graph always exists. the number of vertices, n, is at most 20. the vertices are given id numbers from 1 to n. the number of edges, m, is at most 60. each edge has an integer length between 0 and 10^6 (inclusive). every edge is directed from the vertex with the smaller id to the vertex with the larger id. that is, 1,2,...,n is one possible topological order of the vertices. there are exactly l different paths from vertex 1 to vertex n. the lengths of these paths are all different, and they are integers between 0 and l-1. here, the length of a path is the sum of the lengths of the edges contained in that path, and two paths are considered different when the sets of the edges contained in those paths are different. 
"
p03270, Stop. Otherwise...,"takahashi throws n dice, each having k sides with all integers from 1 to k. the dice are not pairwise distinguishable.
for each i=2,3,...,2k, find the following value modulo 998244353: the number of combinations of n sides shown by the dice such that the sum of no two different sides is i. note that the dice are not distinguishable, that is, two combinations are considered different when there exists an integer k such that the number of dice showing k is different in those two. 
"
p03271, Revenge of BBuBBBlesort!,"you are given a permutation of 1,2,...,n: p_1,p_2,...,p_n. determine if the state where p_i=i for every i can be reached by performing the following operation any number of times: choose three elements p_{i-1},p_{i},p_{i+1} (2\leq i\leq n-1) such that p_{i-1}&gt;p_{i}&gt;p_{i+1} and reverse the order of these three. 

"
p03272, Train,"there is an n-car train. you are given an integer i. find the value of j such that the following statement is true: ""the i-th car from the front of the train is the j-th car from the back."" 
"
p03273, Grid Compression,"there is a grid of squares with h horizontal rows and w vertical columns.
the square at the i-th row from the top and the j-th column from the left is represented as (i, j).
each square is black or white.
the color of the square is given as an h-by-w matrix (a_{i, j}).
if a_{i, j} is ., the square (i, j) is white; if a_{i, j} is #, the square (i, j) is black. snuke is compressing this grid.
he will do so by repeatedly performing the following operation while there is a row or column that consists only of white squares: operation: choose any one row or column that consists only of white squares, remove it and delete the space between the rows or columns. it can be shown that the final state of the grid is uniquely determined regardless of what row or column is chosen in each operation.
find the final state of the grid. 
"
p03274, Candles,"there are n candles placed on a number line.
the i-th candle from the left is placed on coordinate x_i.
here, x_1 &lt; x_2 &lt; ... &lt; x_n holds. initially, no candles are burning.
snuke decides to light k of the n candles. now, he is at coordinate 0.
he can move left and right along the line with speed 1.
he can also light a candle when he is at the same position as the candle, in negligible time. find the minimum time required to light k candles. 
"
p03275, Median of Medians,"we will define the median of a sequence b of length m, as follows: let b' be the sequence obtained by sorting b in non-decreasing order. then, the value of the (m / 2 + 1)-th element of b' is the median of b. here, / is integer division, rounding down. for example, the median of (10, 30, 20) is 20; the median of (10, 30, 20, 40) is 30; the median of (10, 10, 10, 20, 30) is 10. snuke comes up with the following problem. you are given a sequence a of length n.
for each pair (l, r) (1 \leq l \leq r \leq n), let m_{l, r} be the median of the contiguous subsequence (a_l, a_{l + 1}, ..., a_r) of a.
we will list m_{l, r} for all pairs (l, r) to create a new sequence m.
find the median of m. 
"
p03276, Candles,"there are n candles placed on a number line.
the i-th candle from the left is placed on coordinate x_i.
here, x_1 &lt; x_2 &lt; ... &lt; x_n holds. initially, no candles are burning.
snuke decides to light k of the n candles. now, he is at coordinate 0.
he can move left and right along the line with speed 1.
he can also light a candle when he is at the same position as the candle, in negligible time. find the minimum time required to light k candles. 
"
p03277, Median of Medians,"we will define the median of a sequence b of length m, as follows: let b' be the sequence obtained by sorting b in non-decreasing order. then, the value of the (m / 2 + 1)-th element of b' is the median of b. here, / is integer division, rounding down. for example, the median of (10, 30, 20) is 20; the median of (10, 30, 20, 40) is 30; the median of (10, 10, 10, 20, 30) is 10. snuke comes up with the following problem. you are given a sequence a of length n.
for each pair (l, r) (1 \leq l \leq r \leq n), let m_{l, r} be the median of the contiguous subsequence (a_l, a_{l + 1}, ..., a_r) of a.
we will list m_{l, r} for all pairs (l, r) to create a new sequence m.
find the median of m. 
"
p03278, Ribbons on Tree,"let n be an even number. there is a tree with n vertices.
the vertices are numbered 1, 2, ..., n.
for each i (1 \leq i \leq n - 1), the i-th edge connects vertex x_i and y_i. snuke would like to decorate the tree with ribbons, as follows. first, he will divide the n vertices into n / 2 pairs.
here, each vertex must belong to exactly one pair.
then, for each pair (u, v), put a ribbon through all the edges contained in the shortest path between u and v. snuke is trying to divide the vertices into pairs so that the following condition is satisfied: ""for every edge, there is at least one ribbon going through it.""
how many ways are there to divide the vertices into pairs, satisfying this condition?
find the count modulo 10^9 + 7.
here, two ways to divide the vertices into pairs are considered different when there is a pair that is contained in one of the two ways but not in the other. 
"
p03279, Robots and Exits,"there are n robots and m exits on a number line.
the n + m coordinates of these are all integers and all distinct.
for each i (1 \leq i \leq n), the coordinate of the i-th robot from the left is x_i.
also, for each j (1 \leq j \leq m), the coordinate of the j-th exit from the left is y_j. snuke can repeatedly perform the following two kinds of operations in any order to move all the robots simultaneously: increment the coordinates of all the robots on the number line by 1. decrement the coordinates of all the robots on the number line by 1. each robot will disappear from the number line when its position coincides with that of an exit, going through that exit.
snuke will continue performing operations until all the robots disappear. when all the robots disappear, how many combinations of exits can be used by the robots?
find the count modulo 10^9 + 7.
here, two combinations of exits are considered different when there is a robot that used different exits in those two combinations. 
"
p03280, Garden,"there is a farm whose length and width are a yard and b yard, respectively. a farmer, john, made a vertical road and a horizontal road inside the farm from one border to another, as shown below: (the gray part represents the roads.)  what is the area of this yard excluding the roads? find it. 
"
p03281, 105,"the number 105 is quite special - it is odd but still it has eight divisors.
now, your task is this: how many odd numbers with exactly eight positive divisors are there between 1 and n (inclusive)? 
"
p03282, To Infinity,"mr. infinity has a string s consisting of digits from 1 to 9. each time the date changes, this string changes as follows: each occurrence of 2 in s is replaced with 22. similarly, each 3 becomes 333, 4 becomes 4444, 5 becomes 55555, 6 becomes 666666, 7 becomes 7777777, 8 becomes 88888888 and 9 becomes 999999999. 1 remains as 1. for example, if s is 1324, it becomes 1333224444 the next day, and it becomes 133333333322224444444444444444 the day after next.
you are interested in what the string looks like after 5 \times 10^{15} days. what is the k-th character from the left in the string after 5 \times 10^{15} days? 
"
p03283, AtCoder Express 2,"in takahashi kingdom, there is a east-west railroad and n cities along it, numbered 1, 2, 3, ..., n from west to east.
a company called atcoder express possesses m trains, and the train i runs from city l_i to city r_i (it is possible that l_i = r_i).
takahashi the king is interested in the following q matters: the number of the trains that runs strictly within the section from city p_i to city q_i, that is, the number of trains j such that p_i \leq l_j and r_j \leq q_i. although he is genius, this is too much data to process by himself. find the answer for each of these q queries to help him. 
"
p03284, AtCoder Crackers,"takahashi has decided to distribute n atcoder crackers to k users of as evenly as possible.
when all the crackers are distributed, find the minimum possible (absolute) difference between the largest number of crackers received by a user and the smallest number received by a user. 
"
p03285, Cakes and Donuts,"la confiserie d'abc sells cakes at 4 dollars each and doughnuts at 7 dollars each.
determine if there is a way to buy some of them for exactly n dollars. you can buy two or more doughnuts and two or more cakes, and you can also choose to buy zero doughnuts or zero cakes. 
"
p03286,2 Number,"given an integer n, find the base -2 representation of n. here, s is the base -2 representation of n when the following are all satisfied: s is a string consisting of 0 and 1. unless s = 0, the initial character of s is 1. let s = s_k s_{k-1} ... s_0, then s_0 \times (-2)^0 + s_1 \times (-2)^1 + ... + s_k \times (-2)^k = n. it can be proved that, for any integer m, the base -2 representation of m is uniquely determined. 
"
p03287, Candy Distribution,"there are n boxes arranged in a row from left to right. the i-th box from the left contains a_i candies. you will take out the candies from some consecutive boxes and distribute them evenly to m children. such being the case, find the number of the pairs (l, r) that satisfy the following: l and r are both integers and satisfy 1 \leq l \leq r \leq n. a_l + a_{l+1} + ... + a_r is a multiple of m. 

"
p03288, Rated for Me,"a programming competition site atcode regularly holds programming contests. the next contest on atcode is called abc, which is rated for contestants with ratings less than 1200. the contest after the abc is called arc, which is rated for contestants with ratings less than 2800. the contest after the arc is called agc, which is rated for all contestants. takahashi's rating on atcode is r. what is the next contest rated for him? 
"
p03289, AcCepted,"you are given a string s. each character of s is uppercase or lowercase english letter.
determine if s satisfies all of the following conditions: the initial character of s is an uppercase a. there is exactly one occurrence of c between the third character from the beginning and the second to last character (inclusive). all letters except the a and c mentioned above are lowercase. 

"
p03290, All Green,"a programming competition site atcode provides algorithmic problems.
each problem is allocated a score based on its difficulty.
currently, for each integer i between 1 and d (inclusive), there are p_i problems with a score of 100i points.
these p_1 + … + p_d problems are all of the problems available on atcode. a user of atcode has a value called total score.
the total score of a user is the sum of the following two elements: base score: the sum of the scores of all problems solved by the user. perfect bonuses: when a user solves all problems with a score of 100i points, he/she earns the perfect bonus of c_i points, aside from the base score (1 ≤ i ≤ d). takahashi, who is the new user of atcode, has not solved any problem.
his objective is to have a total score of g or more points.
at least how many problems does he need to solve for this objective? 
"
p03291, We Love ABC,"the abc number of a string t is the number of triples of integers (i, j, k) that satisfy all of the following conditions: 1 ≤ i &lt; j &lt; k ≤ |t| (|t| is the length of t.) t_i = a (t_i is the i-th character of t from the beginning.) t_j = b t_k = c for example, when t = abcbc, there are three triples of integers (i, j, k) that satisfy the conditions: (1, 2, 3), (1, 2, 5), (1, 4, 5). thus, the abc number of t is 3. you are given a string s. each character of s is a, b, c or ?. let q be the number of occurrences of ? in s. we can make 3^q strings by replacing each occurrence of ? in s with a, b or c. find the sum of the abc numbers of all these strings. this sum can be extremely large, so print the sum modulo 10^9 + 7. 
"
p03292, Task Scheduling Problem,"you have three tasks, all of which need to be completed. first, you can complete any one task at cost 0. then, just after completing the i-th task, you can complete the j-th task at cost |a_j - a_i|. here, |x| denotes the absolute value of x. find the minimum total cost required to complete all the task. 
"
p03293, String Rotation,"you are given string s and t consisting of lowercase english letters. determine if s equals t after rotation. that is, determine if s equals t after the following operation is performed some number of times: operation: let s = s_1 s_2 ... s_{|s|}. change s to s_{|s|} s_1 s_2 ... s_{|s|-1}. here, |x| denotes the length of the string x. 
"
p03294, Modulo Summation,"you are given n positive integers a_1, a_2, ..., a_n. for a non-negative integer m, let f(m) = (m\ mod\ a_1) + (m\ mod\ a_2) + ... + (m\ mod\ a_n). here, x\ mod\ y denotes the remainder of the division of x by y. find the maximum value of f. 
"
p03295, Islands War,"there are n islands lining up from west to east, connected by n-1 bridges. the i-th bridge connects the i-th island from the west and the (i+1)-th island from the west. one day, disputes took place between some islands, and there were m requests from the inhabitants of the islands: request i: a dispute took place between the a_i-th island from the west and the b_i-th island from the west. please make traveling between these islands with bridges impossible. you decided to remove some bridges to meet all these m requests. find the minimum number of bridges that must be removed. 
"
p03296, Colorful Slimes 2,"takahashi lives in another world. there are slimes (creatures) of 10000 colors in this world. let us call these colors color 1, 2, ..., 10000. takahashi has n slimes, and they are standing in a row from left to right. the color of the i-th slime from the left is a_i.
if two slimes of the same color are adjacent, they will start to combine themselves. because takahashi likes smaller slimes, he has decided to change the colors of some of the slimes with his magic. takahashi can change the color of one slime to any of the 10000 colors by one spell.
how many spells are required so that no slimes will start to combine themselves? 
"
p03297, rng_10s,"ringo mart, a convenience store, sells apple juice. on the opening day of ringo mart, there were a cans of juice in stock in the morning.
snuke buys b cans of juice here every day in the daytime.
then, the manager checks the number of cans of juice remaining in stock every night.
if there are c or less cans, d new cans will be added to the stock by the next morning. determine if snuke can buy juice indefinitely, that is, there is always b or more cans of juice in stock when he attempts to buy them.
nobody besides snuke buy juice at this store. note that each test case in this problem consists of t queries. 
"
p03298, String Coloring,"you are given a string s of length 2n consisting of lowercase english letters. there are 2^{2n} ways to color each character in s red or blue. among these ways, how many satisfy the following condition? the string obtained by reading the characters painted red from left to right is equal to the string obtained by reading the characters painted blue from right to left. 

"
p03299, Histogram Coloring,"let us consider a grid of squares with 10^9 rows and n columns. let (i, j) be the square at the i-th column (1 \leq i \leq n) from the left and j-th row (1 \leq j \leq 10^9) from the bottom. snuke has cut out some part of the grid so that, for each i = 1, 2, ..., n, the bottom-most h_i squares are remaining in the i-th column from the left.
now, he will paint the remaining squares in red and blue.
find the number of the ways to paint the squares so that the following condition is satisfied: every remaining square is painted either red or blue. for all 1 \leq i \leq n-1 and 1 \leq j \leq min(h_i, h_{i+1})-1, there are exactly two squares painted red and two squares painted blue among the following four squares: (i, j), (i, j+1), (i+1, j) and (i+1, j+1). since the number of ways can be extremely large, print the count modulo 10^9+7. 
"
p03300, Synchronized Subsequence,"you are given a string s of length 2n, containing n occurrences of a and n occurrences of b. you will choose some of the characters in s. here, for each i = 1,2,...,n, it is not allowed to choose exactly one of the following two: the i-th occurrence of a and the i-th occurrence of b. (that is, you can only choose both or neither.) then, you will concatenate the chosen characters (without changing the order). find the lexicographically largest string that can be obtained in this way. 
"
p03301, Manju Game,"there are n boxes arranged in a row from left to right. the i-th box from the left contains a_i manju (buns stuffed with bean paste).
sugim and sigma play a game using these boxes.
they alternately perform the following operation. sugim goes first, and the game ends when a total of n operations are performed. choose a box that still does not contain a piece and is adjacent to the box chosen in the other player's last operation, then put a piece in that box. if there are multiple such boxes, any of them can be chosen. if there is no box that satisfies the condition above, or this is sugim's first operation, choose any one box that still does not contain a piece, then put a piece in that box. at the end of the game, each player can have the manju in the boxes in which he put his pieces.
they love manju, and each of them is wise enough to perform the optimal moves in order to have the maximum number of manju at the end of the game. find the number of manju that each player will have at the end of the game. 
"
p03302, F,"you are given two integers a and b.
determine if a+b=15 or a\times b=15 or neither holds. note that a+b=15 and a\times b=15 do not hold at the same time. 
"
p03303, Acrostic,"you are given a string s consisting of lowercase english letters.
we will write down this string, starting a new line after every w letters. print the string obtained by concatenating the letters at the beginnings of these lines from top to bottom. 
"
p03304, Ordinary Beauty,"let us define the beauty of a sequence (a_1,... ,a_n) as the number of pairs of two adjacent elements in it whose absolute differences are d.
for example, when d=1, the beauty of the sequence (3, 2, 3, 10, 9) is 3. there are a total of n^m sequences of length m where each element is an integer between 1 and n (inclusive).
find the beauty of each of these n^m sequences, and print the average of those values. 
"
p03305, Saving Snuuk,"kenkoooo is planning a trip in republic of snuke.
in this country, there are n cities and m trains running.
the cities are numbered 1 through n, and the i-th train connects city u_i and v_i bidirectionally.
any city can be reached from any city by changing trains. two currencies are used in the country: yen and snuuk.
any train fare can be paid by both yen and snuuk.
the fare of the i-th train is a_i yen if paid in yen, and b_i snuuk if paid in snuuk. in a city with a money exchange office, you can change 1 yen into 1 snuuk.
however, when you do a money exchange, you have to change all your yen into snuuk.
that is, if kenkoooo does a money exchange when he has x yen, he will then have x snuuk.
currently, there is a money exchange office in every city, but the office in city i will shut down in i years and can never be used in and after that year. kenkoooo is planning to depart city s with 10^{15} yen in his pocket and head for city t, and change his yen into snuuk in some city while traveling.
it is acceptable to do the exchange in city s or city t. kenkoooo would like to have as much snuuk as possible when he reaches city t by making the optimal choices for the route to travel and the city to do the exchange.
for each i=0,...,n-1, find the maximum amount of snuuk that kenkoooo has when he reaches city t if he goes on a trip from city s to city t after i years.
you can assume that the trip finishes within the year. 
"
p03306, + Graph,"kenkoooo found a simple connected graph.
the vertices are numbered 1 through n.
the i-th edge connects vertex u_i and v_i, and has a fixed integer s_i. kenkoooo is trying to write a positive integer in each vertex so that the following condition is satisfied: for every edge i, the sum of the positive integers written in vertex u_i and v_i is equal to s_i. find the number of such ways to write positive integers in the vertices. 
"
p03307, Multiple of 2 and N,"you are given a positive integer n.
find the minimum positive integer divisible by both 2 and n. 
"
p03308, Maximum Difference,"you are given an integer sequence a of length n.
find the maximum absolute difference of two elements (with different indices) in a. 
"
p03309, Linear Approximation,"snuke has an integer sequence a of length n. he will freely choose an integer b.
here, he will get sad if a_i and b+i are far from each other.
more specifically, the sadness of snuke is calculated as follows: abs(a_1 - (b+1)) + abs(a_2 - (b+2)) + ... + abs(a_n - (b+n)) here, abs(x) is a function that returns the absolute value of x. find the minimum possible sadness of snuke. 
"
p03310, Equal Cut,"snuke has an integer sequence a of length n. he will make three cuts in a and divide it into four (non-empty) contiguous subsequences b, c, d and e.
the positions of the cuts can be freely chosen. let p,q,r,s be the sums of the elements in b,c,d,e, respectively.
snuke is happier when the absolute difference of the maximum and the minimum among p,q,r,s is smaller.
find the minimum possible absolute difference of the maximum and the minimum among p,q,r,s. 
"
p03311, Linear Approximation,"snuke has an integer sequence a of length n. he will freely choose an integer b.
here, he will get sad if a_i and b+i are far from each other.
more specifically, the sadness of snuke is calculated as follows: abs(a_1 - (b+1)) + abs(a_2 - (b+2)) + ... + abs(a_n - (b+n)) here, abs(x) is a function that returns the absolute value of x. find the minimum possible sadness of snuke. 
"
p03312, Equal Cut,"snuke has an integer sequence a of length n. he will make three cuts in a and divide it into four (non-empty) contiguous subsequences b, c, d and e.
the positions of the cuts can be freely chosen. let p,q,r,s be the sums of the elements in b,c,d,e, respectively.
snuke is happier when the absolute difference of the maximum and the minimum among p,q,r,s is smaller.
find the minimum possible absolute difference of the maximum and the minimum among p,q,r,s. 
"
p03313, Or Plus Max,"there is an integer sequence of length 2^n: a_0, a_1, ..., a_{2^n-1}. (note that the sequence is 0-indexed.) for every integer k satisfying 1 \leq k \leq 2^n-1, solve the following problem: let i and j be integers. find the maximum value of a_i + a_j where 0 \leq i &lt; j \leq 2^n-1 and (i or j) \leq k.
here, or denotes the bitwise or. 

"
p03314, Colorful Sequences,"you are given integers n, k, and an integer sequence a of length m. an integer sequence where each element is between 1 and k (inclusive) is said to be colorful when there exists a contiguous subsequence of length k of the sequence that contains one occurrence of each integer between 1 and k (inclusive). for every colorful integer sequence of length n, count the number of the contiguous subsequences of that sequence which coincide with a, then find the sum of all the counts.
here, the answer can be extremely large, so find the sum modulo 10^9+7. 
"
p03315, Eating Symbols Easy,"there is always an integer in takahashi's mind. initially, the integer in takahashi's mind is 0. takahashi is now going to eat four symbols, each of which is + or -. when he eats +, the integer in his mind increases by 1; when he eats -, the integer in his mind decreases by 1. the symbols takahashi is going to eat are given to you as a string s. the i-th character in s is the i-th symbol for him to eat. find the integer in takahashi's mind after he eats all the symbols. 
"
p03316, Digit Sums,"let s(n) denote the sum of the digits in the decimal notation of n.
for example, s(101) = 1 + 0 + 1 = 2. given an integer n, determine if s(n) divides n. 
"
p03317, Minimization,"there is a sequence of length n: a_1, a_2, ..., a_n. initially, this sequence is a permutation of 1, 2, ..., n. on this sequence, snuke can perform the following operation: choose k consecutive elements in the sequence. then, replace the value of each chosen element with the minimum value among the chosen elements. snuke would like to make all the elements in this sequence equal by repeating the operation above some number of times.
find the minimum number of operations required.
it can be proved that, under the constraints of this problem, this objective is always achievable. 
"
p03318, Snuke Numbers,"let s(n) denote the sum of the digits in the decimal notation of n.
for example, s(123) = 1 + 2 + 3 = 6. we will call an integer n a snuke number when, for all positive integers m such that m &gt; n, \frac{n}{s(n)} \leq \frac{m}{s(m)} holds. given an integer k, list the k smallest snuke numbers. 
"
p03319, Minimization,"there is a sequence of length n: a_1, a_2, ..., a_n. initially, this sequence is a permutation of 1, 2, ..., n. on this sequence, snuke can perform the following operation: choose k consecutive elements in the sequence. then, replace the value of each chosen element with the minimum value among the chosen elements. snuke would like to make all the elements in this sequence equal by repeating the operation above some number of times.
find the minimum number of operations required.
it can be proved that, under the constraints of this problem, this objective is always achievable. 
"
p03320, Snuke Numbers,"let s(n) denote the sum of the digits in the decimal notation of n.
for example, s(123) = 1 + 2 + 3 = 6. we will call an integer n a snuke number when, for all positive integers m such that m &gt; n, \frac{n}{s(n)} \leq \frac{m}{s(m)} holds. given an integer k, list the k smallest snuke numbers. 
"
p03321, Independence,"in the state of takahashi in atcoderian federation, there are n cities, numbered 1, 2, ..., n.
m bidirectional roads connect these cities.
the i-th road connects city a_i and city b_i.
every road connects two distinct cities.
also, for any two cities, there is at most one road that directly connects them. one day, it was decided that the state of takahashi would be divided into two states, taka and hashi.
after the division, each city in takahashi would belong to either taka or hashi.
it is acceptable for all the cities to belong taka, or for all the cities to belong hashi.
here, the following condition should be satisfied: any two cities in the same state, taka or hashi, are directly connected by a road. find the minimum possible number of roads whose endpoint cities belong to the same state.
if it is impossible to divide the cities into taka and hashi so that the condition is satisfied, print -1. 
"
p03322, Eating Symbols Hard,"in takahashi's mind, there is always an integer sequence of length 2 \times 10^9 + 1: a = (a_{-10^9}, a_{-10^9 + 1}, ..., a_{10^9 - 1}, a_{10^9}) and an integer p. initially, all the elements in the sequence a in takahashi's mind are 0, and the value of the integer p is 0. when takahashi eats symbols +, -, &gt; and &lt;, the sequence a and the integer p will change as follows: when he eats +, the value of a_p increases by 1; when he eats -, the value of a_p decreases by 1; when he eats &gt;, the value of p increases by 1; when he eats &lt;, the value of p decreases by 1. takahashi has a string s of length n. each character in s is one of the symbols +, -, &gt; and &lt;.
he chose a pair of integers (i, j) such that 1 \leq i \leq j \leq n and ate the symbols that are the i-th, (i+1)-th, ..., j-th characters in s, in this order.
we heard that, after he finished eating, the sequence a became the same as if he had eaten all the symbols in s from first to last.
how many such possible pairs (i, j) are there? 
"
p03323, Happy Birthday!,"e869120's and square1001's 16-th birthday is coming soon.
takahashi from atcoder kingdom gave them a round cake cut into 16 equal fan-shaped pieces. e869120 and square1001 were just about to eat a and b of those pieces, respectively,
when they found a note attached to the cake saying that ""the same person should not take two adjacent pieces of cake"". can both of them obey the instruction in the note and take desired numbers of pieces of cake? 
"
p03324, Ringo's Favorite Numbers,"today, the memorable atcoder beginner contest 100 takes place. on this occasion, takahashi would like to give an integer to ringo.
as the name of the contest is atcoder beginner contest 100, ringo would be happy if he is given a positive integer that can be divided by 100 exactly d times. find the n-th smallest integer that would make ringo happy. 
"
p03325, *3 or /2,"as atcoder beginner contest 100 is taking place, the office of atcoder, inc. is decorated with a sequence of length n, a = {a_1, a_2, a_3, ..., a_n}.
snuke, an employee, would like to play with this sequence. specifically, he would like to repeat the following operation as many times as possible: at most how many operations can be performed? 
"
p03326, Patisserie ABC,"takahashi became a pastry chef and opened a shop la confiserie d'abc to celebrate atcoder beginner contest 100. the shop sells n kinds of cakes.
each kind of cake has three parameters ""beauty"", ""tastiness"" and ""popularity"". the i-th kind of cake has the beauty of x_i, the tastiness of y_i and the popularity of z_i.
these values may be zero or negative. ringo has decided to have m pieces of cakes here. he will choose the set of cakes as follows: do not have two or more pieces of the same kind of cake. under the condition above, choose the set of cakes to maximize (the absolute value of the total beauty) + (the absolute value of the total tastiness)  + (the absolute value of the total popularity). find the maximum possible value of (the absolute value of the total beauty) + (the absolute value of the total tastiness) + (the absolute value of the total popularity) for the set of cakes that ringo chooses. 
"
p03327, ABD,"decades have passed since the beginning of atcoder beginner contest. the contests are labeled as abc001, abc002, ... from the first round, but after the 999-th round abc999, a problem occurred: how the future rounds should be labeled? in the end, the labels for the rounds from the 1000-th to the 1998-th are decided: abd001, abd002, ..., abd999. you are given an integer n between 1 and 1998 (inclusive). print the first three characters of the label of the n-th round of atcoder beginner contest. 
"
p03328, Stone Monument,"in some village, there are 999 towers that are 1,(1+2),(1+2+3),...,(1+2+3+...+999) meters high from west to east, at intervals of 1 meter. it had been snowing for a while before it finally stopped. for some two adjacent towers located 1 meter apart, we measured the lengths of the parts of those towers that are not covered with snow, and the results are a meters for the west tower, and b meters for the east tower. assuming that the depth of snow cover and the altitude are the same everywhere in the village, find the amount of the snow cover. assume also that the depth of the snow cover is always at least 1 meter. 
"
p03329, Strange Bank,"to make it difficult to withdraw money, a certain bank allows its customers to withdraw only one of the following amounts in one operation: 1 yen (the currency of japan) 
 6 yen, 6^2(=36) yen, 6^3(=216) yen, ... 
 9 yen, 9^2(=81) yen, 9^3(=729) yen, ... 
 at least how many operations are required to withdraw exactly n yen in total? it is not allowed to re-deposit the money you withdrew. 
"
p03330, Good Grid,"there is a grid with n rows and n columns of squares. let (i,j) be the square at the i-th row from the top and the j-th column from the left. these squares have to be painted in one of the c colors from color 1 to color c. initially, (i,j) is painted in color c_{i,j}. we say the grid is a good grid when the following condition is met for all i,j,x,y satisfying 1 \leq i,j,x,y \leq n: if (i+j) \% 3=(x+y) \% 3, the color of (i,j) and the color of (x,y) are the same. if (i+j) \%  3 \neq (x+y) \% 3, the color of (i,j) and the color of (x,y) are different. here, x \% y represents x modulo y. we will repaint zero or more squares so that the grid will be a good grid. for a square, the wrongness when the color of the square is x before repainting and y after repainting, is d_{x,y}. find the minimum possible sum of the wrongness of all the squares. 
"
p03331, Digits Sum,"takahashi has two positive integers a and b. it is known that a plus b equals n.
find the minimum possible value of ""the sum of the digits of a"" plus ""the sum of the digits of b"" (in base 10). 
"
p03332, RGB Coloring,"takahashi has a tower which is divided into n layers.
initially, all the layers are uncolored. takahashi is going to paint some of the layers in red, green or blue to make a beautiful tower.
he defines the beauty of the tower as follows: the beauty of the tower is the sum of the scores of the n layers, where the score of a layer is a if the layer is painted red, a+b if the layer is painted green, b if the layer is painted blue, and 0 if the layer is uncolored. here, a and b are positive integer constants given beforehand. also note that a layer may not be painted in two or more colors. takahashi is planning to paint the tower so that the beauty of the tower becomes exactly k.
how many such ways are there to paint the tower? find the count modulo 998244353.
two ways to paint the tower are considered different when there exists a layer that is painted in different colors, or a layer that is painted in some color in one of the ways and not in the other. 
"
p03333, Interval Game,"takahashi and aoki will play a game with a number line and some segments.
takahashi is standing on the number line and he is initially at coordinate 0.
aoki has n segments. the i-th segment is [l_i,r_i], that is, a segment consisting of points with coordinates between l_i and r_i (inclusive). the game has n steps. the i-th step proceeds as follows: first, aoki chooses a segment that is still not chosen yet from the n segments and tells it to takahashi. then, takahashi walks along the number line to some point within the segment chosen by aoki this time. after n steps are performed, takahashi will return to coordinate 0 and the game ends. let k be the total distance traveled by takahashi throughout the game. aoki will choose segments so that k will be as large as possible, and takahashi walks along the line so that k will be as small as possible. what will be the value of k in the end? 
"
p03334, Choosing Points,"takahashi is doing a research on sets of points in a plane.
takahashi thinks a set s of points in a coordinate plane is a good set when s satisfies both of the following conditions: the distance between any two points in s is not \sqrt{d_1}. the distance between any two points in s is not \sqrt{d_2}. here, d_1 and d_2 are positive integer constants that takahashi specified. let x be a set of points (i,j) on a coordinate plane where i and j are integers and satisfy 0 ≤ i,j &lt; 2n. takahashi has proved that, for any choice of d_1 and d_2, there exists a way to choose n^2 points from x so that the chosen points form a good set.
however, he does not know the specific way to choose such points to form a good set.
find a subset of x whose size is n^2 that forms a good set. 
"
p03335, Walking on a Tree,"takahashi loves walking on a tree.
the tree where takahashi walks has n vertices numbered 1 through n.
the i-th of the n-1 edges connects vertex a_i and vertex b_i. takahashi has scheduled m walks. the i-th walk is done as follows: the walk involves two vertices u_i and v_i that are fixed beforehand. takahashi will walk from u_i to v_i or from v_i to u_i along the shortest path. the happiness gained from the i-th walk is defined as follows: in the previous walks, the edge has never been traversed. in the previous walks, the edge has only been traversed in the direction opposite to the direction taken in the i-th walk. 

 takahashi would like to decide the direction of each walk so that the total happiness gained from the m walks is maximized.
find the maximum total happiness that can be gained, and one specific way to choose the directions of the walks that maximizes the total happiness. 
"
p03336, Addition and Andition,"takahashi and aoki love calculating things, so they will play with numbers now. first, they came up with one positive integer each. takahashi came up with x, and aoki came up with y.
then, they will enjoy themselves by repeating the following operation k times: compute the bitwise and of the number currently kept by takahashi and the number currently kept by aoki. let z be the result. then, add z to both of the numbers kept by takahashi and aoki. however, it turns out that even for the two math maniacs this is just too much work.
could you find the number that would be kept by takahashi and the one that would be kept by aoki eventually? note that input and output are done in binary.
especially, x and y are given as strings s and t of length n and m consisting of 0 and 1, respectively, whose initial characters are guaranteed to be 1. 
"
p03337, Add Sub Mul,"you are given two integers a and b.
find the largest value among a+b, a-b and a \times b. 
"
p03338, Cut and Count,"you are given a string s of length n consisting of lowercase english letters.
we will cut this string at one position into two strings x and y.
here, we would like to maximize the number of different letters contained in both x and y.
find the largest possible number of different letters contained in both x and y when we cut the string at the optimal position. 
"
p03339, Attention,"there are n people standing in a row from west to east.
each person is facing east or west.
the directions of the people is given as a string s of length n.
the i-th person from the west is facing east if s_i = e, and west if s_i = w. you will appoint one of the n people as the leader, then command the rest of them to face in the direction of the leader.
here, we do not care which direction the leader is facing. the people in the row hate to change their directions, so you would like to select the leader so that the number of people who have to change their directions is minimized.
find the minimum number of people who have to change their directions. 
"
p03340, Xor Sum 2,"there is an integer sequence a of length n. find the number of the pairs of integers l and r (1 \leq l \leq r \leq n) that satisfy the following condition: a_l\ xor\ a_{l+1}\ xor\ ...\ xor\ a_r = a_l\ +\ a_{l+1}\ +\ ...\ +\ a_r here, xor denotes the bitwise exclusive or. 
definition of xor the xor of integers c_1, c_2, ..., c_m is defined as follows: let the xor be x. in the binary representation of x, the digit in the 2^k's place (0 \leq k; k is an integer) is 1 if there are an odd number of integers among c_1, c_2, ...c_m whose binary representation has 1 in the 2^k's place, and 0 if that number is even. for example, let us compute the xor of 3 and 5. the binary representation of 3 is 011, and the binary representation of 5 is 101, thus the xor has the binary representation 110, that is, the xor is 6.  "
p03341, Attention,"there are n people standing in a row from west to east.
each person is facing east or west.
the directions of the people is given as a string s of length n.
the i-th person from the west is facing east if s_i = e, and west if s_i = w. you will appoint one of the n people as the leader, then command the rest of them to face in the direction of the leader.
here, we do not care which direction the leader is facing. the people in the row hate to change their directions, so you would like to select the leader so that the number of people who have to change their directions is minimized.
find the minimum number of people who have to change their directions. 
"
p03342, Xor Sum 2,"there is an integer sequence a of length n. find the number of the pairs of integers l and r (1 \leq l \leq r \leq n) that satisfy the following condition: a_l\ xor\ a_{l+1}\ xor\ ...\ xor\ a_r = a_l\ +\ a_{l+1}\ +\ ...\ +\ a_r here, xor denotes the bitwise exclusive or. 
definition of xor the xor of integers c_1, c_2, ..., c_m is defined as follows: let the xor be x. in the binary representation of x, the digit in the 2^k's place (0 \leq k; k is an integer) is 1 if there are an odd number of integers among c_1, c_2, ...c_m whose binary representation has 1 in the 2^k's place, and 0 if that number is even. for example, let us compute the xor of 3 and 5. the binary representation of 3 is 011, and the binary representation of 5 is 101, thus the xor has the binary representation 110, that is, the xor is 6.  "
p03343, Range Minimum Queries,"you are given an integer sequence a of length n and an integer k.
you will perform the following operation on this sequence q times: choose a contiguous subsequence of length k, then remove the smallest element among the k elements contained in the chosen subsequence (if there are multiple such elements, choose one of them as you like). let x and y be the values of the largest and smallest element removed in the q operations. you would like x-y to be as small as possible.
find the smallest possible value of x-y when the q operations are performed optimally. 
"
p03344, Donation,"there is a simple undirected graph with n vertices and m edges.
the vertices are numbered 1 through n, and the edges are numbered 1 through m.
edge i connects vertex u_i and v_i.
also, vertex i has two predetermined integers a_i and b_i.
you will play the following game on this graph. first, choose one vertex and stand on it, with w yen (the currency of japan) in your pocket.
here, a_s \leq w must hold, where s is the vertex you choose.
then, perform the following two kinds of operations any number of times in any order: choose one vertex v that is directly connected by an edge to the vertex you are standing on, and move to vertex v. here, you need to have at least a_v yen in your pocket when you perform this move. donate b_v yen to the vertex v you are standing on. here, the amount of money in your pocket must not become less than 0 yen. you win the game when you donate once to every vertex.
find the smallest initial amount of money w that enables you to win the game. 
"
p03345, Fairness,"takahashi, nakahashi and hikuhashi have integers a, b and c, respectively.
after repeating the following operation k times, find the integer takahashi will get minus the integer nakahashi will get: each of them simultaneously calculate the sum of the integers that the other two people have, then replace his own integer with the result. however, if the absolute value of the answer exceeds 10^{18}, print unfair instead. 
"
p03346, Backfront,"you are given a sequence (p_1,p_2,...,p_n) which is a permutation of the integers from 1 through n.
you would like to sort this sequence in ascending order by repeating the following operation: choose an element in the sequence and move it to the beginning or the end of the sequence. find the minimum number of operations required.
it can be proved that it is actually possible to sort the sequence using this operation. 
"
p03347, Sequence Growing Easy,"there is a sequence x of length n, where every element is initially 0. let x_i denote the i-th element of x. you are given a sequence a of length n. the i-th element of a is a_i. determine if we can make x equal to a by repeating the operation below. if we can, find the minimum number of operations required. choose an integer i such that 1\leq i\leq n-1. replace the value of x_{i+1} with the value of x_i plus 1. 

"
p03348, Isomorphism Freak,"coloring of the vertices of a tree g is called a good coloring when, for every pair of two vertices u and v painted in the same color, picking u as the root and picking v as the root would result in isomorphic rooted trees. also, the colorfulness of g is defined as the minimum possible number of different colors used in a good coloring of g. you are given a tree with n vertices. the vertices are numbered 1 through n, and the i-th edge connects vertex a_i and vertex b_i. we will construct a new tree t by repeating the following operation on this tree some number of times: add a new vertex to the tree by connecting it to one of the vertices in the current tree with an edge. find the minimum possible colorfulness of t.
additionally, print the minimum number of leaves (vertices with degree 1) in a tree t that achieves the minimum colorfulness. 
"
p03349, Sequence Growing Hard,"find the number of the possible tuples of sequences (a_0,a_1,...,a_n) that satisfy all of the following conditions, modulo m: for every i (0\leq i\leq n), a_i is a sequence of length i consisting of integers between 1 and k (inclusive); for every i (1\leq i\leq n), a_{i-1} is a subsequence of a_i, that is, there exists 1\leq x_i\leq i such that the removal of the x_i-th element of a_i would result in a sequence equal to a_{i-1}; for every i (1\leq i\leq n), a_i is lexicographically larger than a_{i-1}. 

"
p03350, Simple Subsequence Problem,"you are given a set s of strings consisting of 0 and 1, and an integer k. find the longest string that is a subsequence of k or more different strings in s.
if there are multiple strings that satisfy this condition, find the lexicographically smallest such string. here, s is given in the format below: the data directly given to you is an integer n, and n+1 strings x_0,x_1,...,x_n. for every i (0\leq i\leq n), the length of x_i is 2^i. for every pair of two integers (i,j) (0\leq i\leq n,0\leq j\leq 2^i-1), the j-th character of x_i is 1 if and only if the binary representation of j with i digits (possibly with leading zeros) belongs to s. here, the first and last characters in x_i are called the 0-th and (2^i-1)-th characters, respectively. s does not contain a string with length n+1 or more. here, a string a is a subsequence of another string b when there exists a sequence of integers t_1 &lt; ... &lt; t_{|a|} such that, for every i (1\leq i\leq |a|), the i-th character of a and the t_i-th character of b is equal. 
"
p03351, Colorful Transceivers,"three people, a, b and c, are trying to communicate using transceivers.
they are standing along a number line, and the coordinates of a, b and c are a, b and c (in meters), respectively.
two people can directly communicate when the distance between them is at most d meters.
determine if a and c can communicate, either directly or indirectly.
here, a and c can indirectly communicate when a and b can directly communicate and also b and c can directly communicate. 
"
p03352, Exponential,"you are given a positive integer x.
find the largest perfect power that is at most x.
here, a perfect power is an integer that can be represented as b^p, where b is an integer not less than 1 and p is an integer not less than 2. 
"
p03353,th Substring,"you are given a string s.
among the different substrings of s, print the k-th lexicographically smallest one. a substring of s is a string obtained by taking out a non-empty contiguous part in s.
for example, if s = ababc, a, bab and ababc are substrings of s, while ac, z and an empty string are not.
also, we say that substrings are different when they are different as strings. let x = x_{1}x_{2}...x_{n} and y = y_{1}y_{2}...y_{m} be two distinct strings. x is lexicographically larger than y if and only if y is a prefix of x or x_{j} &gt; y_{j} where j is the smallest integer such that x_{j} \neq y_{j}. 
"
p03354, Equals,"we have a permutation of the integers from 1 through n, p_1, p_2, .., p_n.
we also have m pairs of two integers between 1 and n (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_m,y_m).
atcodeer the deer is going to perform the following operation on p as many times as desired so that the number of i (1 ≤ i ≤ n) such that p_i = i is maximized: choose j such that 1 ≤ j ≤ m, and swap p_{x_j} and p_{y_j}. find the maximum possible number of i such that p_i = i after operations. 
"
p03355,th Substring,"you are given a string s.
among the different substrings of s, print the k-th lexicographically smallest one. a substring of s is a string obtained by taking out a non-empty contiguous part in s.
for example, if s = ababc, a, bab and ababc are substrings of s, while ac, z and an empty string are not.
also, we say that substrings are different when they are different as strings. let x = x_{1}x_{2}...x_{n} and y = y_{1}y_{2}...y_{m} be two distinct strings. x is lexicographically larger than y if and only if y is a prefix of x or x_{j} &gt; y_{j} where j is the smallest integer such that x_{j} \neq y_{j}. 
"
p03356, Equals,"we have a permutation of the integers from 1 through n, p_1, p_2, .., p_n.
we also have m pairs of two integers between 1 and n (inclusive), represented as (x_1,y_1), (x_2,y_2), .., (x_m,y_m).
atcodeer the deer is going to perform the following operation on p as many times as desired so that the number of i (1 ≤ i ≤ n) such that p_i = i is maximized: choose j such that 1 ≤ j ≤ m, and swap p_{x_j} and p_{y_j}. find the maximum possible number of i such that p_i = i after operations. 
"
p03357, Sorted and Sorted,"there are 2n balls, n white and n black, arranged in a row. the integers from 1 through n are written on the white balls, one on each ball, and they are also written on the black balls, one on each ball.
the integer written on the i-th ball from the left (1 ≤ i ≤ 2n) is a_i, and the color of this ball is represented by a letter c_i.
c_i = w represents the ball is white; c_i = b represents the ball is black. takahashi the human wants to achieve the following objective: for every pair of integers (i,j) such that 1 ≤ i &lt; j ≤ n, the white ball with i written on it is to the left of the white ball with j written on it. for every pair of integers (i,j) such that 1 ≤ i &lt; j ≤ n, the black ball with i written on it is to the left of the black ball with j written on it. in order to achieve this, he can perform the following operation: swap two adjacent balls. find the minimum number of operations required to achieve the objective. 
"
p03358, Monochrome Cat,"there is a tree with n vertices numbered 1 through n.
the i-th edge connects vertex x_i and y_i.
each vertex is painted white or black.
the initial color of vertex i is represented by a letter c_i.
c_i = w represents the vertex is white; c_i = b represents the vertex is black. a cat will walk along this tree.
more specifically, she performs one of the following in one second repeatedly: choose a vertex that is adjacent to the vertex where she is currently, and move to that vertex. then, invert the color of the destination vertex. invert the color of the vertex where she is currently. the cat's objective is to paint all the vertices black. she may start and end performing actions at any vertex.
at least how many seconds does it takes for the cat to achieve her objective? 
"
p03359, Day of Takahashi,"in atcoder kingdom, gregorian calendar is used, and dates are written in the ""year-month-day"" order, or the ""month-day"" order without the year.
for example, may 3, 2018 is written as 2018-5-3, or 5-3 without the year.   in this country, a date is called takahashi when the month and the day are equal as numbers. for example, 5-5 is takahashi.
how many days from 2018-1-1 through 2018-a-b are takahashi? 
"
p03360, Maximum Sum,"there are three positive integers a, b and c written on a blackboard. e869120 performs the following operation k times: choose one integer written on the blackboard and let the chosen integer be n. replace the chosen integer with 2n. what is the largest possible sum of the integers written on the blackboard after k operations? 
"
p03361, Grid Repainting 2,"we have a canvas divided into a grid with h rows and w columns. the square at the i-th row from the top and the j-th column from the left is represented as (i, j).
initially, all the squares are white. square1001 wants to draw a picture with black paint. his specific objective is to make square (i, j) black when s_{i, j}= #, and to make square (i, j) white when s_{i, j}= ..
however, since he is not a good painter, he can only choose two squares that are horizontally or vertically adjacent and paint those squares black, for some number of times (possibly zero). he may choose squares that are already painted black, in which case the color of those squares remain black.
determine if square1001 can achieve his objective.   
"
p03362, Five  Five Everywhere,"print a sequence a_1, a_2, ..., a_n whose length is n that satisfies the following conditions: a_i (1 \leq i \leq n) is a prime number at most 55 555. the values of a_1, a_2, ..., a_n are all different. in every choice of five different integers from a_1, a_2, ..., a_n, the sum of those integers is a composite number. if there are multiple such sequences, printing any of them is accepted. 
"
p03363,Sum Ranges,"we have an integer sequence a, whose length is n. find the number of the non-empty contiguous subsequences of a whose sums are 0.
note that we are counting the ways to take out subsequences.
that is, even if the contents of some two subsequences are the same, they are counted individually if they are taken from different positions. 
"
p03364, Find Symmetries,"snuke has two boards, each divided into a grid with n rows and n columns.
for both of these boards, the square at the i-th row from the top and the j-th column from the left is called square (i,j). there is a lowercase english letter written in each square on the first board. the letter written in square (i,j) is s_{i,j}. on the second board, nothing is written yet. snuke will write letters on the second board, as follows: first, choose two integers a and b ( 0 \leq a, b &lt; n ). write one letter in each square on the second board.
specifically, write the letter written in square ( i+a, j+b ) on the first board into square (i,j) on the second board.
here, the k-th row is also represented as the (n+k)-th row, and the k-th column is also represented as the (n+k)-th column. after this operation, the second board is called a good board when, for every i and j ( 1 \leq i, j \leq n ), the letter in square (i,j) and the letter in square (j,i) are equal. find the number of the ways to choose integers a and b ( 0 \leq a, b &lt; n ) such that the second board is a good board. 
"
p03365, Painting Machines,"there are n squares lining up in a row, numbered 1 through n from left to right.
initially, all squares are white.
we also have n-1 painting machines, numbered 1 through n-1.
when operated, machine i paints square i and i+1 black. snuke will operate these machines one by one.
the order in which he operates them is represented by a permutation of (1, 2, ..., n-1), p, which means that the i-th operated machine is machine p_i. here, the score of a permutation p is defined as the number of machines that are operated before all the squares are painted black for the first time, when the machines are operated in the order specified by p.
snuke has not decided what permutation p to use, but he is interested in the scores of possible permutations.
find the sum of the scores over all possible permutations for him.
since this can be extremely large, compute the sum modulo 10^9+7. 
"
p03366, Go Home,"there are n apartments along a number line, numbered 1 through n.
apartment i is located at coordinate x_i.
also, the office of atcoder inc. is located at coordinate s.
every employee of atcoder lives in one of the n apartments.
there are p_i employees who are living in apartment i. all employees of atcoder are now leaving the office all together.
since they are tired from work, they would like to get home by the company's bus.
atcoder owns only one bus, but it can accommodate all the employees.
this bus will leave coordinate s with all the employees and move according to the following rule: everyone on the bus casts a vote on which direction the bus should proceed, positive or negative. (the bus is autonomous and has no driver.) each person has one vote, and abstaining from voting is not allowed. then, the bus moves a distance of 1 in the direction with the greater number of votes. if a tie occurs, the bus moves in the negative direction. if there is an apartment at the coordinate of the bus after the move, all the employees who live there get off. 
 repeat the operation above as long as there is one or more employees on the bus. 
 for a specific example, see sample input 1. the bus takes one seconds to travel a distance of 1.
the time required to vote and get off the bus is ignorable. every employee will vote so that he himself/she herself can get off the bus at the earliest possible time.
strictly speaking, when a vote is taking place, each employee see which direction results in the earlier arrival at his/her apartment, assuming that all the employees follow the same strategy in the future.
based on this information, each employee makes the optimal choice, but if either direction results in the arrival at the same time, he/she casts a vote to the negative direction. find the time the bus will take from departure to arrival at the last employees' apartment.
it can be proved that, given the positions of the apartments, the numbers of employees living in each apartment and the initial position of the bus, the future movement of the bus is uniquely determined, and the process will end in a finite time. 
"
p03367, Inversions,"snuke has an integer sequence a whose length is n.
he likes permutations of (1, 2, ..., n), p, that satisfy the following condition: p_i \leq a_i for all i ( 1 \leq i \leq n ). snuke is interested in the inversion numbers of such permutations.
find the sum of the inversion numbers over all permutations that satisfy the condition.
since this can be extremely large, compute the sum modulo 10^9+7. 
"
p03368, 01 on Tree,"snuke has a rooted tree with n vertices, numbered 1 through n.
vertex 1 is the root of the tree, and the parent of vertex i ( 2\leq i \leq n ) is vertex p_i ( p_i &lt; i ).
there is a number, 0 or 1, written on each vertex. the number written on vertex i is v_i. snuke would like to arrange the vertices of this tree in a horizontal row.
here, for every vertex, there should be no ancestor of that vertex to the right of that vertex. after arranging the vertices, let x be the sequence obtained by reading the numbers written on the vertices from left to right in the arrangement.
snuke would like to minimize the inversion number of x.
find the minimum possible inversion number of x. 
"
p03369, Something on It,"in ""takahashi-ya"", a ramen restaurant, a bowl of ramen costs 700 yen (the currency of japan), plus 100 yen for each kind of topping (boiled egg, sliced pork, green onions). a customer ordered a bowl of ramen and told which toppings to put on his ramen to a clerk. the clerk took a memo of the order as a string s. s is three characters long, and if the first character in s is o, it means the ramen should be topped with boiled egg; if that character is x, it means the ramen should not be topped with boiled egg. similarly, the second and third characters in s mean the presence or absence of sliced pork and green onions on top of the ramen. write a program that, when s is given, prints the price of the corresponding bowl of ramen. 
"
p03370, Bitter Alchemy,"akaki, a patissier, can make n kinds of doughnut using only a certain powder called ""okashi no moto"" (literally ""material of pastry"", simply called moto below) as ingredient. these doughnuts are called doughnut 1, doughnut 2, ..., doughnut n. in order to make one doughnut i (1 ≤ i ≤ n), she needs to consume m_i grams of moto. she cannot make a non-integer number of doughnuts, such as 0.5 doughnuts. now, she has x grams of moto. she decides to make as many doughnuts as possible for a party tonight. however, since the tastes of the guests differ, she will obey the following condition: for each of the n kinds of doughnuts, make at least one doughnut of that kind. at most how many doughnuts can be made here? she does not necessarily need to consume all of her moto. also, under the constraints of this problem, it is always possible to obey the condition. 
"
p03371, Half and Half,"""pizza at"", a fast food chain, offers three kinds of pizza: ""a-pizza"", ""b-pizza"" and ""ab-pizza"". a-pizza and b-pizza are completely different pizzas, and ab-pizza is one half of a-pizza and one half of b-pizza combined together. the prices of one a-pizza, b-pizza and ab-pizza are a yen, b yen and c yen (yen is the currency of japan), respectively. nakahashi needs to prepare x a-pizzas and y b-pizzas for a party tonight. he can only obtain these pizzas by directly buying a-pizzas and b-pizzas, or buying two ab-pizzas and then rearrange them into one a-pizza and one b-pizza. at least how much money does he need for this? it is fine to have more pizzas than necessary by rearranging pizzas. 
"
p03372, Static Sushi,"""teishi-zushi"", a japanese restaurant, is a plain restaurant with only one round counter. the outer circumference of the counter is c meters. customers cannot go inside the counter. nakahashi entered teishi-zushi, and he was guided to the counter. now, there are n pieces of sushi (vinegared rice with seafood and so on) on the counter. the distance measured clockwise from the point where nakahashi is standing to the point where the i-th sushi is placed, is x_i meters. also, the i-th sushi has a nutritive value of v_i kilocalories. nakahashi can freely walk around the circumference of the counter. when he reach a point where a sushi is placed, he can eat that sushi and take in its nutrition (naturally, the sushi disappears). however, while walking, he consumes 1 kilocalories per meter. whenever he is satisfied, he can leave the restaurant from any place (he does not have to return to the initial place). on balance, at most how much nutrition can he take in before he leaves? that is, what is the maximum possible value of the total nutrition taken in minus the total energy consumed? assume that there are no other customers, and no new sushi will be added to the counter. also, since nakahashi has plenty of nutrition in his body, assume that no matter how much he walks and consumes energy, he never dies from hunger. 
"
p03373, Half and Half,"""pizza at"", a fast food chain, offers three kinds of pizza: ""a-pizza"", ""b-pizza"" and ""ab-pizza"". a-pizza and b-pizza are completely different pizzas, and ab-pizza is one half of a-pizza and one half of b-pizza combined together. the prices of one a-pizza, b-pizza and ab-pizza are a yen, b yen and c yen (yen is the currency of japan), respectively. nakahashi needs to prepare x a-pizzas and y b-pizzas for a party tonight. he can only obtain these pizzas by directly buying a-pizzas and b-pizzas, or buying two ab-pizzas and then rearrange them into one a-pizza and one b-pizza. at least how much money does he need for this? it is fine to have more pizzas than necessary by rearranging pizzas. 
"
p03374, Static Sushi,"""teishi-zushi"", a japanese restaurant, is a plain restaurant with only one round counter. the outer circumference of the counter is c meters. customers cannot go inside the counter. nakahashi entered teishi-zushi, and he was guided to the counter. now, there are n pieces of sushi (vinegared rice with seafood and so on) on the counter. the distance measured clockwise from the point where nakahashi is standing to the point where the i-th sushi is placed, is x_i meters. also, the i-th sushi has a nutritive value of v_i kilocalories. nakahashi can freely walk around the circumference of the counter. when he reach a point where a sushi is placed, he can eat that sushi and take in its nutrition (naturally, the sushi disappears). however, while walking, he consumes 1 kilocalories per meter. whenever he is satisfied, he can leave the restaurant from any place (he does not have to return to the initial place). on balance, at most how much nutrition can he take in before he leaves? that is, what is the maximum possible value of the total nutrition taken in minus the total energy consumed? assume that there are no other customers, and no new sushi will be added to the counter. also, since nakahashi has plenty of nutrition in his body, assume that no matter how much he walks and consumes energy, he never dies from hunger. 
"
p03375, Everything on It,"in ""takahashi-ya"", a ramen restaurant, basically they have one menu: ""ramen"", but n kinds of toppings are also offered. when a customer orders a bowl of ramen, for each kind of topping, he/she can choose whether to put it on top of his/her ramen or not. there is no limit on the number of toppings, and it is allowed to have all kinds of toppings or no topping at all. that is, considering the combination of the toppings, 2^n types of ramen can be ordered. akaki entered takahashi-ya. she is thinking of ordering some bowls of ramen that satisfy both of the following two conditions: do not order multiple bowls of ramen with the exactly same set of toppings. each of the n kinds of toppings is on two or more bowls of ramen ordered. you are given n and a prime number m. find the number of the sets of bowls of ramen that satisfy these conditions, disregarding order, modulo m. since she is in extreme hunger, ordering any number of bowls of ramen is fine. 
"
p03376, Sweet Alchemy,"akaki, a patissier, can make n kinds of doughnut using only a certain powder called ""okashi no moto"" (literally ""material of pastry"", simply called moto below) as ingredient. these doughnuts are called doughnut 1, doughnut 2, ..., doughnut n. in order to make one doughnut i (1 ≤ i ≤ n), she needs to consume m_i grams of moto. she cannot make a non-integer number of doughnuts, such as 0.5 doughnuts. the recipes of these doughnuts are developed by repeated modifications from the recipe of doughnut 1. specifically, the recipe of doughnut i (2 ≤ i ≤ n) is a direct modification of the recipe of doughnut p_i (1 ≤ p_i &lt; i). now, she has x grams of moto. she decides to make as many doughnuts as possible for a party tonight. however, since the tastes of the guests differ, she will obey the following condition: let c_i be the number of doughnut i (1 ≤ i ≤ n) that she makes. for each integer i such that 2 ≤ i ≤ n, c_{p_i} ≤ c_i ≤ c_{p_i} + d must hold. here, d is a predetermined value. at most how many doughnuts can be made here? she does not necessarily need to consume all of her moto. 
"
p03377, Cats and Dogs,"there are a total of a + b cats and dogs.
among them, a are known to be cats, but the remaining b are not known to be either cats or dogs. determine if it is possible that there are exactly x cats among these a + b animals. 
"
p03378, Toll Gates,"there are n + 1 squares arranged in a row, numbered 0, 1, ..., n from left to right. initially, you are in square x.
you can freely travel between adjacent squares. your goal is to reach square 0 or square n.
however, for each i = 1, 2, ..., m, there is a toll gate in square a_i, and traveling to square a_i incurs a cost of 1.
it is guaranteed that there is no toll gate in square 0, square x and square n. find the minimum cost incurred before reaching the goal. 
"
p03379, Many Medians,"when l is an odd number, the median of l numbers a_1, a_2, ..., a_l is the (\frac{l+1}{2})-th largest value among a_1, a_2, ..., a_l. you are given n numbers x_1, x_2, ..., x_n, where n is an even number.
for each i = 1, 2, ..., n, let the median of x_1, x_2, ..., x_n excluding x_i, that is, the median of x_1, x_2, ..., x_{i-1}, x_{i+1}, ..., x_n be b_i. find b_i for each i = 1, 2, ..., n. 
"
p03380, Binomial Coefficients,"let {\rm comb}(n,r) be the number of ways to choose r objects from among n objects, disregarding order.
from n non-negative integers a_1, a_2, ..., a_n, select two numbers a_i &gt; a_j so that {\rm comb}(a_i,a_j) is maximized.
if there are multiple pairs that maximize the value, any of them is accepted. 
"
p03381, Many Medians,"when l is an odd number, the median of l numbers a_1, a_2, ..., a_l is the (\frac{l+1}{2})-th largest value among a_1, a_2, ..., a_l. you are given n numbers x_1, x_2, ..., x_n, where n is an even number.
for each i = 1, 2, ..., n, let the median of x_1, x_2, ..., x_n excluding x_i, that is, the median of x_1, x_2, ..., x_{i-1}, x_{i+1}, ..., x_n be b_i. find b_i for each i = 1, 2, ..., n. 
"
p03382, Binomial Coefficients,"let {\rm comb}(n,r) be the number of ways to choose r objects from among n objects, disregarding order.
from n non-negative integers a_1, a_2, ..., a_n, select two numbers a_i &gt; a_j so that {\rm comb}(a_i,a_j) is maximized.
if there are multiple pairs that maximize the value, any of them is accepted. 
"
p03383, Symmetric Grid,"there is an h \times w grid (h vertical, w horizontal), where each square contains a lowercase english letter.
specifically, the letter in the square at the i-th row and j-th column is equal to the j-th character in the string s_i. snuke can apply the following operation to this grid any number of times: choose two different rows and swap them. or, choose two different columns and swap them. snuke wants this grid to be symmetric.
that is, for any 1 \leq i \leq h and 1 \leq j \leq w, the letter in the square at the i-th row and j-th column and the letter in the square at the (h + 1 - i)-th row and (w + 1 - j)-th column should be equal. determine if snuke can achieve this objective. 
"
p03384, Permutation Tree,"takahashi has an ability to generate a tree using a permutation (p_1,p_2,...,p_n) of (1,2,...,n), in the following process: first, prepare vertex 1, vertex 2, ..., vertex n.
for each i=1,2,...,n, perform the following operation: if p_i = 1, do nothing. if p_i \neq 1, let j' be the largest j such that p_j &lt; p_i. span an edge between vertex i and vertex j'. takahashi is trying to make his favorite tree with this ability.
his favorite tree has n vertices from vertex 1 through vertex n, and its i-th edge connects vertex v_i and w_i.
determine if he can make a tree isomorphic to his favorite tree by using a proper permutation.
if he can do so, find the lexicographically smallest such permutation. 
"
p03385, abc of ABC,"you are given a string s of length 3 consisting of a, b and c. determine if s can be obtained by permuting abc. 
"
p03386, Small and Large Integers,"print all the integers that satisfies the following in ascending order: among the integers between a and b (inclusive), it is either within the k smallest integers or within the k largest integers. 

"
p03387, Same Integers,"you are given three integers a, b and c. find the minimum number of operations required to make a, b and c all equal by repeatedly performing the following two kinds of operations in any order: choose two among a, b and c, then increase both by 1. choose one among a, b and c, then increase it by 2. it can be proved that we can always make a, b and c all equal by repeatedly performing these operations. 
"
p03388, Worst Case,"10^{10^{10}} participants, including takahashi, competed in two programming contests.
in each contest, all participants had distinct ranks from first through 10^{10^{10}}-th. the score of a participant is the product of his/her ranks in the two contests. process the following q queries: in the i-th query, you are given two positive integers a_i and b_i. assuming that takahashi was ranked a_i-th in the first contest and b_i-th in the second contest, find the maximum possible number of participants whose scores are smaller than takahashi's. 

"
p03389, Same Integers,"you are given three integers a, b and c. find the minimum number of operations required to make a, b and c all equal by repeatedly performing the following two kinds of operations in any order: choose two among a, b and c, then increase both by 1. choose one among a, b and c, then increase it by 2. it can be proved that we can always make a, b and c all equal by repeatedly performing these operations. 
"
p03390, Worst Case,"10^{10^{10}} participants, including takahashi, competed in two programming contests.
in each contest, all participants had distinct ranks from first through 10^{10^{10}}-th. the score of a participant is the product of his/her ranks in the two contests. process the following q queries: in the i-th query, you are given two positive integers a_i and b_i. assuming that takahashi was ranked a_i-th in the first contest and b_i-th in the second contest, find the maximum possible number of participants whose scores are smaller than takahashi's. 

"
p03391, Tozan and Gezan,"you are given sequences a and b consisting of non-negative integers.
the lengths of both a and b are n, and the sums of the elements in a and b are equal.
the i-th element in a is a_i, and the i-th element in b is b_i. tozan and gezan repeats the following sequence of operations: if a and b are equal sequences, terminate the process. otherwise, first tozan chooses a positive element in a and decrease it by 1. then, gezan chooses a positive element in b and decrease it by 1. then, give one candy to takahashi, their pet. tozan wants the number of candies given to takahashi until the process is terminated to be as large as possible, while gezan wants it to be as small as possible.
find the number of candies given to takahashi when both of them perform the operations optimally. 
"
p03392, Normalization,"you are given a string s consisting of a,b and c. find the number of strings that can be possibly obtained by repeatedly performing the following operation zero or more times, modulo 998244353: choose an integer i such that 1\leq i\leq |s|-1 and the i-th and (i+1)-th characters in s are different. replace each of the i-th and (i+1)-th characters in s with the character that differs from both of them (among a, b and c). 

"
p03393, Diverse Word,"gotou just received a dictionary. however, he doesn't recognize the language used in the dictionary. he did some analysis on the dictionary and realizes that the dictionary contains all possible diverse words in lexicographical order. a word is called diverse if and only if it is a nonempty string of english lowercase letters and all letters in the word are distinct. for example, atcoder, zscoder and agc are diverse words while gotou and connect aren't diverse words. given a diverse word s, determine the next word that appears after s in the dictionary, i.e. the lexicographically smallest diverse word that is lexicographically larger than s, or determine that it doesn't exist. let x = x_{1}x_{2}...x_{n} and y = y_{1}y_{2}...y_{m} be two distinct strings. x is lexicographically larger than y if and only if y is a prefix of x or x_{j} &gt; y_{j} where j is the smallest integer such that x_{j} \neq y_{j}. 
"
p03394, GCD Sequence,"nagase is a top student in high school. one day, she's analyzing some properties of special sets of positive integers.   she thinks that a set s = \{a_{1}, a_{2}, ..., a_{n}\} of distinct positive integers is called special if for all 1 \leq i \leq n, the gcd (greatest common divisor) of a_{i} and the sum of the remaining elements of s is not 1. nagase wants to find a special set of size n. however, this task is too easy, so she decided to ramp up the difficulty. nagase challenges you to find a special set of size n such that the gcd of all elements are 1 and the elements of the set does not exceed 30000. 
"
p03395, Remainder Game,"aoki is playing with a sequence of numbers a_{1}, a_{2}, ..., a_{n}. every second, he performs the following operation : choose a positive integer k. for each element of the sequence v, aoki may choose to replace v with its remainder when divided by k, or do nothing with v. the cost of this operation is 2^{k} (regardless of how many elements he changes). aoki wants to turn the sequence into b_{1}, b_{2}, ..., b_{n} (the order of the elements is important). determine if it is possible for aoki to perform this task and if yes, find the minimum cost required. 
"
p03396, Shopping,"yui loves shopping. she lives in yamaboshi city and there is a train service in the city. the city can be modelled as a very long number line. yui's house is at coordinate 0. there are n shopping centres in the city, located at coordinates x_{1}, x_{2}, ..., x_{n} respectively. there are n + 2 train stations, one located at coordinate 0, one located at coordinate l, and one located at each shopping centre. at time 0, the train departs from position 0 to the positive direction. the train travels at a constant speed of 1 unit per second. at time l, the train will reach the last station, the station at coordinate l. the train immediately moves in the opposite direction at the same speed. at time 2l, the train will reach the station at coordinate 0 and it immediately moves in the opposite direction again. the process repeats indefinitely. when the train arrives at a station where yui is located, yui can board or leave the train immediately. at time 0, yui is at the station at coordinate 0.  yui wants to go shopping in all n shopping centres, in any order, and return home after she finishes her shopping. she needs to shop for t_{i} seconds in the shopping centre at coordinate x_{i}. she must finish her shopping in one shopping centre before moving to the next shopping centre. yui can immediately start shopping when she reaches a station with a shopping centre and she can immediately board the train when she finishes shopping. yui wants to spend the minimum amount of time to finish her shopping. can you help her determine the minimum number of seconds required to complete her shopping? 
"
p03397, Median Replace,"taichi thinks a binary string x of odd length n is beautiful if it is possible to apply the following operation \frac{n-1}{2} times so that the only character of the resulting string is 1 : choose three consecutive bits of x and replace them by their median. for example, we can turn 00110 into 010 by applying the operation to the middle three bits. taichi has a string s consisting of characters 0, 1 and ?. taichi wants to know the number of ways to replace the question marks with 1 or 0 so that the resulting string is beautiful, modulo 10^{9} + 7. 
"
p03398, Checkers,"let x = 10^{100}. inaba has n checker pieces on the number line, where the i-th checker piece is at coordinate x^{i} for all 1 \leq i \leq n. every second, inaba chooses two checker pieces, a and b, and move a to the symmetric point of its current position with respect to b. after that, b is removed. (it is possible that a and b occupy the same position, and it is also possible for a to occupy the same position as another checker piece after the move). after n - 1 seconds, only one checker piece will remain. find the number of distinct possible positions of that checker piece, modulo 10^{9} + 7. 
"
p03399, Traveling Budget,"you planned a trip using trains and buses.
the train fare will be a yen (the currency of japan) if you buy ordinary tickets along the way, and b yen if you buy an unlimited ticket.
similarly, the bus fare will be c yen if you buy ordinary tickets along the way, and d yen if you buy an unlimited ticket. find the minimum total fare when the optimal choices are made for trains and buses. 
"
p03400, Chocolate,"some number of chocolate pieces were prepared for a training camp.
the camp had n participants and lasted for d days.
the i-th participant (1 \leq i \leq n) ate one chocolate piece on each of the following days in the camp: the 1-st day, the (a_i + 1)-th day, the (2a_i + 1)-th day, and so on.
as a result, there were x chocolate pieces remaining at the end of the camp. during the camp, nobody except the participants ate chocolate pieces. find the number of chocolate pieces prepared at the beginning of the camp. 
"
p03401, Traveling Plan,"there are n sightseeing spots on the x-axis, numbered 1, 2, ..., n.
spot i is at the point with coordinate a_i.
it costs |a - b| yen (the currency of japan) to travel from a point with coordinate a to another point with coordinate b along the axis. you planned a trip along the axis.
in this plan, you first depart from the point with coordinate 0, then visit the n spots in the order they are numbered, and finally return to the point with coordinate 0. however, something came up just before the trip, and you no longer have enough time to visit all the n spots, so you decided to choose some i and cancel the visit to spot i.
you will visit the remaining spots as planned in the order they are numbered.
you will also depart from and return to the point with coordinate 0 at the beginning and the end, as planned. for each i = 1, 2, ..., n, find the total cost of travel during the trip when the visit to spot i is canceled. 
"
p03402, Grid Components,"you are given two integers a and b. print a grid where each square is painted white or black that satisfies the following conditions, in the format specified in output section: let the size of the grid be h \times w (h vertical, w horizontal). both h and w are at most 100. the set of the squares painted white is divided into exactly a connected components. the set of the squares painted black is divided into exactly b connected components. it can be proved that there always exist one or more solutions under the conditions specified in constraints section.
if there are multiple solutions, any of them may be printed. 
"
p03403, Traveling Plan,"there are n sightseeing spots on the x-axis, numbered 1, 2, ..., n.
spot i is at the point with coordinate a_i.
it costs |a - b| yen (the currency of japan) to travel from a point with coordinate a to another point with coordinate b along the axis. you planned a trip along the axis.
in this plan, you first depart from the point with coordinate 0, then visit the n spots in the order they are numbered, and finally return to the point with coordinate 0. however, something came up just before the trip, and you no longer have enough time to visit all the n spots, so you decided to choose some i and cancel the visit to spot i.
you will visit the remaining spots as planned in the order they are numbered.
you will also depart from and return to the point with coordinate 0 at the beginning and the end, as planned. for each i = 1, 2, ..., n, find the total cost of travel during the trip when the visit to spot i is canceled. 
"
p03404, Grid Components,"you are given two integers a and b. print a grid where each square is painted white or black that satisfies the following conditions, in the format specified in output section: let the size of the grid be h \times w (h vertical, w horizontal). both h and w are at most 100. the set of the squares painted white is divided into exactly a connected components. the set of the squares painted black is divided into exactly b connected components. it can be proved that there always exist one or more solutions under the conditions specified in constraints section.
if there are multiple solutions, any of them may be printed. 
"
p03405, Bichrome Spanning Tree,"we have an undirected weighted graph with n vertices and m edges.
the i-th edge in the graph connects vertex u_i and vertex v_i, and has a weight of w_i.
additionally, you are given an integer x. find the number of ways to paint each edge in this graph either white or black such that the following condition is met, modulo 10^9 + 7: the graph has a spanning tree that contains both an edge painted white and an edge painted black. furthermore, among such spanning trees, the one with the smallest weight has a weight of x. here, the weight of a spanning tree is the sum of the weights of the edges contained in the spanning tree. 
"
p03406, Dark Horse,"there are 2^n players, numbered 1, 2, ..., 2^n.
they decided to hold a tournament. the tournament proceeds as follows: choose a permutation of 1, 2, ..., 2^n: p_1, p_2, ..., p_{2^n}. the players stand in a row in the order of player p_1, player p_2, ..., player p_{2^n}. play the following matches: the first player in the row versus the second player in the row, the third player versus the fourth player, and so on. the players who lose leave the row. the players who win stand in a row again, preserving the relative order of the players. 

 the last player who remains in the row is the champion. it is known that, the result of the match between two players can be written as follows, using m integers a_1, a_2, ..., a_m given as input: when y = a_i for some i, the winner of the match between player 1 and player y (2 \leq y \leq 2^n) will be player y. when y \neq a_i for every i, the winner of the match between player 1 and player y (2 \leq y \leq 2^n) will be player 1. when 2 \leq x &lt; y \leq 2^n, the winner of the match between player x and player y will be player x. the champion of this tournament depends only on the permutation p_1, p_2, ..., p_{2^n} chosen at the beginning.
find the number of permutation p_1, p_2, ..., p_{2^n} chosen at the beginning of the tournament that would result in player 1 becoming the champion, modulo 10^9 + 7. 
"
p03407, Two Coins,"an elementary school student takahashi has come to a variety store. he has two coins, a-yen and b-yen coins (yen is the currency of japan), and wants to buy a toy that costs c yen. can he buy it? note that he lives in takahashi kingdom, and may have coins that do not exist in japan. 
"
p03408, Two Colors Card Game,"takahashi has n blue cards and m red cards.
a string is written on each card. the string written on the i-th blue card is s_i, and the string written on the i-th red card is t_i. takahashi will now announce a string, and then check every card. each time he finds a blue card with the string announced by him, he will earn 1 yen (the currency of japan); each time he finds a red card with that string, he will lose 1 yen. here, we only consider the case where the string announced by takahashi and the string on the card are exactly the same. for example, if he announces atcoder, he will not earn money even if there are blue cards with atcoderr, atcode, btcoder, and so on. (on the other hand, he will not lose money even if there are red cards with such strings, either.) at most how much can he earn on balance? note that the same string may be written on multiple cards. 
"
p03409, 2D Plane 2N Points,"on a two-dimensional plane, there are n red points and n blue points.
the coordinates of the i-th red point are (a_i, b_i), and the coordinates of the i-th blue point are (c_i, d_i). a red point and a blue point can form a friendly pair when, the x-coordinate of the red point is smaller than that of the blue point, and the y-coordinate of the red point is also smaller than that of the blue point. at most how many friendly pairs can you form? note that a point cannot belong to multiple pairs. 
"
p03410, Two Sequences,"you are given two integer sequences, each of length n: a_1, ..., a_n and b_1, ..., b_n. there are n^2 ways to choose two integers i and j such that 1 \leq i, j \leq n. for each of these n^2 pairs, we will compute a_i + b_j and write it on a sheet of paper.
that is, we will write n^2 integers in total. compute the xor of these n^2 integers. 
definition of xor the xor of integers c_1, c_2, ..., c_m is defined as follows: let the xor be x. in the binary representation of x, the digit in the 2^k's place (0 \leq k; k is an integer) is 1 if there are an odd number of integers among c_1, c_2, ...c_m whose binary representation has 1 in the 2^k's place, and 0 if that number is even. for example, let us compute the xor of 3 and 5. the binary representation of 3 is 011, and the binary representation of 5 is 101, thus the xor has the binary representation 110, that is, the xor is 6.  "
p03411, 2D Plane 2N Points,"on a two-dimensional plane, there are n red points and n blue points.
the coordinates of the i-th red point are (a_i, b_i), and the coordinates of the i-th blue point are (c_i, d_i). a red point and a blue point can form a friendly pair when, the x-coordinate of the red point is smaller than that of the blue point, and the y-coordinate of the red point is also smaller than that of the blue point. at most how many friendly pairs can you form? note that a point cannot belong to multiple pairs. 
"
p03412, Two Sequences,"you are given two integer sequences, each of length n: a_1, ..., a_n and b_1, ..., b_n. there are n^2 ways to choose two integers i and j such that 1 \leq i, j \leq n. for each of these n^2 pairs, we will compute a_i + b_j and write it on a sheet of paper.
that is, we will write n^2 integers in total. compute the xor of these n^2 integers. 
definition of xor the xor of integers c_1, c_2, ..., c_m is defined as follows: let the xor be x. in the binary representation of x, the digit in the 2^k's place (0 \leq k; k is an integer) is 1 if there are an odd number of integers among c_1, c_2, ...c_m whose binary representation has 1 in the 2^k's place, and 0 if that number is even. for example, let us compute the xor of 3 and 5. the binary representation of 3 is 011, and the binary representation of 5 is 101, thus the xor has the binary representation 110, that is, the xor is 6.  "
p03413, Both Sides Merger,"you have an integer sequence of length n: a_1, a_2, ..., a_n. you repeatedly perform the following operation until the length of the sequence becomes 1: first, choose an element of the sequence. if that element is at either end of the sequence, delete the element. if that element is not at either end of the sequence, replace the element with the sum of the two elements that are adjacent to it. then, delete those two elements. you would like to maximize the final element that remains in the sequence. find the maximum possible value of the final element, and the way to achieve it. 
"
p03414, Two Faced Edges,"you are given a directed graph with n vertices and m edges.
the vertices are numbered 1, 2, ..., n, and the edges are numbered 1, 2, ..., m.
edge i points from vertex a_i to vertex b_i. for each edge, determine whether the reversion of that edge would change the number of the strongly connected components in the graph. here, the reversion of edge i means deleting edge i and then adding a new edge that points from vertex b_i to vertex a_i. 
"
p03415, Diagonal String,"we have a 3×3 square grid, where each square contains a lowercase english letters.
the letter in the square at the i-th row from the top and j-th column from the left is c_{ij}. print the string of length 3 that can be obtained by concatenating the letters in the squares on the diagonal connecting the top-left and bottom-right corner of the grid, from the top-left to bottom-right. 
"
p03416, Palindromic Numbers,"find the number of palindromic numbers among the integers between a and b (inclusive).
here, a palindromic number is a positive integer whose string representation in base 10 (without leading zeros) reads the same forward and backward. 
"
p03417, Flip Flip  and Flip......,"there is a grid with infinitely many rows and columns. in this grid, there is a rectangular region with consecutive n rows and m columns, and a card is placed in each square in this region.
the front and back sides of these cards can be distinguished, and initially every card faces up. we will perform the following operation once for each square contains a card: for each of the following nine squares, flip the card in it if it exists: the target square itself and the eight squares that shares a corner or a side with the target square. it can be proved that, whether each card faces up or down after all the operations does not depend on the order the operations are performed.
find the number of cards that face down after all the operations. 
"
p03418, Remainder Reminder,"takahashi had a pair of two positive integers not exceeding n, (a,b), which he has forgotten.
he remembers that the remainder of a divided by b was greater than or equal to k.
find the number of possible pairs that he may have had. 
"
p03419, Flip Flip  and Flip......,"there is a grid with infinitely many rows and columns. in this grid, there is a rectangular region with consecutive n rows and m columns, and a card is placed in each square in this region.
the front and back sides of these cards can be distinguished, and initially every card faces up. we will perform the following operation once for each square contains a card: for each of the following nine squares, flip the card in it if it exists: the target square itself and the eight squares that shares a corner or a side with the target square. it can be proved that, whether each card faces up or down after all the operations does not depend on the order the operations are performed.
find the number of cards that face down after all the operations. 
"
p03420, Remainder Reminder,"takahashi had a pair of two positive integers not exceeding n, (a,b), which he has forgotten.
he remembers that the remainder of a divided by b was greater than or equal to k.
find the number of possible pairs that he may have had. 
"
p03421, LISDL,"determine if there exists a sequence obtained by permuting 1,2,...,n that satisfies the following conditions: the length of its longest increasing subsequence is a. the length of its longest decreasing subsequence is b. if it exists, construct one such sequence. 
"
p03422, Strange Nim,"takahashi and aoki are playing a stone-taking game. initially, there are n piles of stones, and the i-th pile contains a_i stones and has an associated integer k_i. starting from takahashi, takahashi and aoki take alternate turns to perform the following operation: choose a pile. if the i-th pile is selected and there are x stones left in the pile, remove some number of stones between 1 and floor(x/k_i) (inclusive) from the pile. the player who first becomes unable to perform the operation loses the game. assuming that both players play optimally, determine the winner of the game.
here, floor(x) represents the largest integer not greater than x. 
"
p03423, Grouping 2,"there are n students in a school. we will divide these students into some groups, and in each group they will discuss some themes. you think that groups consisting of two or less students cannot have an effective discussion, so you want to have as many groups consisting of three or more students as possible. divide the students so that the number of groups consisting of three or more students is maximized. 
"
p03424, Hina Arare,"in japan, people make offerings called hina arare, colorful crackers, on march 3. we have a bag that contains n hina arare. (from here, we call them arare.) it is known that the bag either contains arare in three colors: pink, white and green, or contains arare in four colors: pink, white, green and yellow. we have taken out the arare in the bag one by one, and the color of the i-th arare was s_i, where colors are represented as follows - pink: p, white: w, green: g, yellow: y. if the number of colors of the arare in the bag was three, print three; if the number of colors was four, print four. 
"
p03425, March,"there are n people. the name of the i-th person is s_i. we would like to choose three people so that the following conditions are met: the name of every chosen person begins with m, a, r, c or h. there are no multiple people whose names begin with the same letter. how many such ways are there to choose three people, disregarding order? note that the answer may not fit into a 32-bit integer type. 
"
p03426, Practical Skill Test,"we have a grid with h rows and w columns. the square at the i-th row and the j-th column will be called square (i,j). the integers from 1 through h×w are written throughout the grid, and the integer written in square (i,j) is a_{i,j}. you, a magical girl, can teleport a piece placed on square (i,j) to square (x,y) by consuming |x-i|+|y-j| magic points. you now have to take q practical tests of your ability as a magical girl. the i-th test will be conducted as follows: initially, a piece is placed on the square where the integer l_i is written. 
 let x be the integer written in the square occupied by the piece. repeatedly move the piece to the square where the integer x+d is written, as long as x is not r_i. the test ends when x=r_i. 
 here, it is guaranteed that r_i-l_i is a multiple of d. 
 for each test, find the sum of magic points consumed during that test. 
"
p03427, Digit Sum 2,"find the maximum possible sum of the digits (in base 10) of a positive integer not greater than n. 
"
p03428, Holes,"there are n holes in a two-dimensional plane. the coordinates of the i-th hole are (x_i,y_i). let r=10^{10^{10^{10}}}. ringo performs the following operation: randomly choose a point from the interior of a circle of radius r centered at the origin, and put snuke there. snuke will move to the hole with the smallest euclidean distance from the point, and fall into that hole. if there are multiple such holes, the hole with the smallest index will be chosen. for every i (1 \leq i \leq n), find the probability that snuke falls into the i-th hole. here, the operation of randomly choosing a point from the interior of a circle of radius r is defined as follows: pick two real numbers x and y independently according to uniform distribution on [-r,r]. if x^2+y^2\leq r^2, the point (x,y) is chosen. otherwise, repeat picking the real numbers x,y until the condition is met. 

"
p03429, Tiling,"takahashi has an n \times m grid, with n horizontal rows and m vertical columns.
determine if we can place a 1 \times 2 tiles (1 vertical, 2 horizontal) and b 2 \times 1 tiles (2 vertical, 1 horizontal) satisfying the following conditions, and construct one arrangement of the tiles if it is possible: all the tiles must be placed on the grid. tiles must not stick out of the grid, and no two different tiles may intersect. neither the grid nor the tiles may be rotated. every tile completely covers exactly two squares. 

"
p03430, Reversed LCS,"takahashi has decided to give a string to his mother. the value of a string t is the length of the longest common subsequence of t and t', where t' is the string obtained by reversing t.
that is, the value is the longest length of the following two strings that are equal: a subsequence of t (possibly non-contiguous), and a subsequence of t' (possibly non-contiguous). takahashi has a string s. he wants to give her mother a string of the highest possible value, so he would like to change at most k characters in s to any other characters in order to obtain a string of the highest possible value.
find the highest possible value achievable. 
"
p03431, Ball Eat Chameleons,"in republic of atcoder, snuke chameleons (family: chamaeleonidae, genus: bartaberia) are very popular pets.
ringo keeps n snuke chameleons in a cage. a snuke chameleon that has not eaten anything is blue. it changes its color according to the following rules: a snuke chameleon that is blue will change its color to red when the number of red balls it has eaten becomes strictly larger than the number of blue balls it has eaten. a snuke chameleon that is red will change its color to blue when the number of blue balls it has eaten becomes strictly larger than the number of red balls it has eaten. initially, every snuke chameleon had not eaten anything. ringo fed them by repeating the following process k times: grab either a red ball or a blue ball. throw that ball into the cage. then, one of the chameleons eats it. after ringo threw in k balls, all the chameleons were red. we are interested in the possible ways ringo could have thrown in k balls. how many such ways are there? find the count modulo 998244353. here, two ways to throw in balls are considered different when there exists i such that the color of the ball that are thrown in the i-th throw is different. 
"
p03432, Trinity,"we have an n \times m grid. the square at the i-th row and j-th column will be denoted as (i,j).
particularly, the top-left square will be denoted as (1,1), and the bottom-right square will be denoted as (n,m).
takahashi painted some of the squares (possibly zero) black, and painted the other squares white. we will define an integer sequence a of length n, and two integer sequences b and c of length m each, as follows: a_i(1\leq i\leq n) is the minimum j such that (i,j) is painted black, or m+1 if it does not exist. b_i(1\leq i\leq m) is the minimum k such that (k,i) is painted black, or n+1 if it does not exist. c_i(1\leq i\leq m) is the maximum k such that (k,i) is painted black, or 0 if it does not exist. how many triples (a,b,c) can occur? find the count modulo 998244353. 
"
p03433, Infinite Coins,"e869120 has a 1-yen coins and infinitely many 500-yen coins.
determine if he can pay exactly n yen using only these coins. 
"
p03434, Card Game for Two,"we have n cards. a number a_i is written on the i-th card.
alice and bob will play a game using these cards. in this game, alice and bob alternately take one card. alice goes first.
the game ends when all the cards are taken by the two players, and the score of each player is the sum of the numbers written on the cards he/she has taken. when both players take the optimal strategy to maximize their scores, find alice's score minus bob's score. 
"
p03435, Takahashi's Information,"we have a 3 \times 3 grid. a number c_{i, j} is written in the square (i, j), where (i, j) denotes the square at the i-th row from the top and the j-th column from the left.
according to takahashi, there are six integers a_1, a_2, a_3, b_1, b_2, b_3 whose values are fixed, and the number written in the square (i, j) is equal to a_i + b_j.
determine if he is correct.   
"
p03436, Grid Repainting,"we have an h \times w grid whose squares are painted black or white. the square at the i-th row from the top and the j-th column from the left is denoted as (i, j).
snuke would like to play the following game on this grid. at the beginning of the game, there is a character called kenus at square (1, 1). the player repeatedly moves kenus up, down, left or right by one square. the game is completed when kenus reaches square (h, w) passing only white squares.
before snuke starts the game, he can change the color of some of the white squares to black. however, he cannot change the color of square (1, 1) and (h, w). also, changes of color must all be carried out before the beginning of the game.
when the game is completed, snuke's score will be the number of times he changed the color of a square before the beginning of the game. find the maximum possible score that snuke can achieve, or print -1 if the game cannot be completed, that is, kenus can never reach square (h, w) regardless of how snuke changes the color of the squares.   the color of the squares are given to you as characters s_{i, j}. if square (i, j) is initially painted by white, s_{i, j} is .; if square (i, j) is initially painted by black, s_{i, j} is #. 
"
p03437, Two Integers,"you are given positive integers x and y.
if there exists a positive integer not greater than 10^{18} that is a multiple of x but not a multiple of y, choose one such integer and print it.
if it does not exist, print -1. 
"
p03438, Two Arrays,"you are given two integer sequences of length n: a_1,a_2,..,a_n and b_1,b_2,..,b_n.
determine if we can repeat the following operation zero or more times so that the sequences a and b become equal. operation: choose two integers i and j (possibly the same) between 1 and n (inclusive), then perform the following two actions simultaneously: add 2 to a_i. add 1 to b_j. 

"
p03439, Vacant Seat,"this is an interactive task. let n be an odd number at least 3. there are n seats arranged in a circle.
the seats are numbered 0 through n-1.
for each i (0 ≤ i ≤ n - 2), seat i and seat i + 1 are adjacent.
also, seat n - 1 and seat 0 are adjacent. each seat is either vacant, or oppupied by a man or a woman.
however, no two adjacent seats are occupied by two people of the same sex.
it can be shown that there is at least one empty seat where n is an odd number at least 3. you are given n, but the states of the seats are not given.
your objective is to correctly guess the id number of any one of the empty seats.
to do so, you can repeatedly send the following query: choose an integer i (0 ≤ i ≤ n - 1). if seat i is empty, the problem is solved. otherwise, you are notified of the sex of the person in seat i. guess the id number of an empty seat by sending at most 20 queries. 
"
p03440, Forest,"you are given a forest with n vertices and m edges. the vertices are numbered 0 through n-1.
the edges are given in the format (x_i,y_i), which means that vertex x_i and y_i are connected by an edge. each vertex i has a value a_i.
you want to add edges in the given forest so that the forest becomes connected.
to add an edge, you choose two different vertices i and j, then span an edge between i and j.
this operation costs a_i + a_j dollars, and afterward neither vertex i nor j can be selected again. find the minimum total cost required to make the forest connected, or print impossible if it is impossible. 
"
p03441, Antennas on Tree,"we have a tree with n vertices.
the vertices are numbered 0 through n - 1, and the i-th edge (0 ≤ i &lt; n - 1) comnnects vertex a_i and b_i.
for each pair of vertices u and v (0 ≤ u, v &lt; n), we define the distance d(u, v) as the number of edges in the path u-v. it is expected that one of the vertices will be invaded by aliens from outer space.
snuke wants to immediately identify that vertex when the invasion happens.
to do so, he has decided to install an antenna on some vertices. first, he decides the number of antennas, k (1 ≤ k ≤ n).
then, he chooses k different vertices, x_0, x_1, ..., x_{k - 1}, on which he installs antenna 0, 1, ..., k - 1, respectively.
if vertex v is invaded by aliens, antenna k (0 ≤ k &lt; k) will output the distance d(x_k, v).
based on these k outputs, snuke will identify the vertex that is invaded.
thus, in order to identify the invaded vertex no matter which one is invaded, the following condition must hold: for each vertex u (0 ≤ u &lt; n), consider the vector (d(x_0, u), ..., d(x_{k - 1}, u)). these n vectors are distinct. find the minumum value of k, the number of antennas, when the condition is satisfied. 
"
p03442, XOR Tree,"you are given a tree with n vertices. the vertices are numbered 0 through n-1, and the edges are numbered 1 through n-1.
edge i connects vertex x_i and y_i, and has a value a_i.
you can perform the following operation any number of times: choose a simple path and a non-negative integer x, then for each edge e that belongs to the path, change a_e by executing a_e ← a_e ⊕ x (⊕ denotes xor). your objective is to have a_e = 0 for all edges e.
find the minimum number of operations required to achieve it. 
"
p03443, Colorful Doors,"there is a bridge that connects the left and right banks of a river.
there are 2 n doors placed at different positions on this bridge, painted in some colors.
the colors of the doors are represented by integers from 1 through n.
for each k (1 \leq k \leq n), there are exactly two doors painted in color k. snuke decides to cross the bridge from the left bank to the right bank.
he will keep on walking to the right, but the following event will happen while doing so: at the moment snuke touches a door painted in color k (1 \leq k \leq n), he teleports to the right side of the other door painted in color k. it can be shown that he will eventually get to the right bank. for each i (1 \leq i \leq 2 n - 1), the section between the i-th and (i + 1)-th doors from the left will be referred to as section i.
after crossing the bridge, snuke recorded whether or not he walked through section i, for each i (1 \leq i \leq 2 n - 1).
this record is given to you as a string s of length 2 n - 1.
for each i (1 \leq i \leq 2 n - 1), if snuke walked through section i, the i-th character in s is 1; otherwise, the i-th character is 0. figure: a possible arrangement of doors for sample input 3 determine if there exists an arrangement of doors that is consistent with the record. if it exists, construct one such arrangement. 
"
p03444, Generalized Insertion Sort,"you are given a rooted tree with n vertices.
the vertices are numbered 0, 1, ..., n-1.
the root is vertex 0, and the parent of vertex i (i = 1, 2, ..., n-1) is vertex p_i. initially, an integer a_i is written in vertex i.
here, (a_0, a_1, ..., a_{n-1}) is a permutation of (0, 1, ..., n-1). you can execute the following operation at most 25 000 times. do it so that the value written in vertex i becomes i. choose a vertex and call it v. consider the path connecting vertex 0 and v. rotate the values written on the path. that is, for each edge (i, p_i) along the path, replace the value written in vertex p_i with the value written in vertex i (just before this operation), and replace the value of v with the value written in vertex 0 (just before this operation). you may choose vertex 0, in which case the operation does nothing. 

"
p03445, Simple APSP Problem,"you are given an h \times w grid.
the square at the top-left corner will be represented by (0, 0), and the square at the bottom-right corner will be represented by (h-1, w-1). of those squares, n squares (x_1, y_1), (x_2, y_2), ..., (x_n, y_n) are painted black, and the other squares are painted white. let the shortest distance between white squares a and b be the minimum number of moves required to reach b from a visiting only white squares, where one can travel to an adjacent square sharing a side (up, down, left or right) in one move. since there are h × w - n white squares in total, there are _{(h×w-n)}c_2 ways to choose two of the white squares. for each of these _{(h×w-n)}c_2 ways, find the shortest distance between the chosen squares, then find the sum of all those distances, modulo 1 000 000 007=10^9+7. 
"
p03446, Rectangles,"we have a rectangular parallelepiped of dimensions a×b×c, divided into 1×1×1 small cubes.
the small cubes have coordinates from (0, 0, 0) through (a-1, b-1, c-1). let p, q and r be integers. consider the following set of abc small cubes: \{(\ (p + i) mod a, (q + j) mod b, (r + k) mod c\ ) | i, j and k are integers satisfying 0 ≤ i &lt; a, 0 ≤ j &lt; b, 0 ≤ k &lt; c \} a set of small cubes that can be expressed in the above format using some integers p, q and r, is called a torus cuboid of size a×b×c. find the number of the sets of torus cuboids of size a×b×c that satisfy the following condition, modulo 10^9+7: no two torus cuboids in the set have intersection. the union of all torus cuboids in the set is the whole rectangular parallelepiped of dimensions a×b×c. 

"
p03447, Buying Sweets,"you went shopping to buy cakes and donuts with x yen (the currency of japan). first, you bought one cake for a yen at a cake shop.
then, you bought as many donuts as possible for b yen each, at a donut shop. how much do you have left after shopping? 
"
p03448, Coins,"you have a 500-yen coins, b 100-yen coins and c 50-yen coins (yen is the currency of japan).
in how many ways can we select some of these coins so that they are x yen in total? coins of the same kind cannot be distinguished. two ways to select coins are distinguished when, for some kind of coin, the numbers of that coin are different. 
"
p03449, Candies,"we have a 2 \times n grid. we will denote the square at the i-th row and j-th column (1 \leq i \leq 2, 1 \leq j \leq n) as (i, j). you are initially in the top-left square, (1, 1).
you will travel to the bottom-right square, (2, n), by repeatedly moving right or down. the square (i, j) contains a_{i, j} candies.
you will collect all the candies you visit during the travel.
the top-left and bottom-right squares also contain candies, and you will also collect them. at most how many candies can you collect when you choose the best way to travel? 
"
p03450, People on a Line,"there are n people standing on the x-axis.
let the coordinate of person i be x_i.
for every i, x_i is an integer between 0 and 10^9 (inclusive).
it is possible that more than one person is standing at the same coordinate. you will given m pieces of information regarding the positions of these people.
the i-th piece of information has the form (l_i, r_i, d_i).
this means that person r_i is to the right of person l_i by d_i units of distance, that is, x_{r_i} - x_{l_i} = d_i holds. it turns out that some of these m pieces of information may be incorrect.
determine if there exists a set of values (x_1, x_2, ..., x_n) that is consistent with the given pieces of information. 
"
p03451, Candies,"we have a 2 \times n grid. we will denote the square at the i-th row and j-th column (1 \leq i \leq 2, 1 \leq j \leq n) as (i, j). you are initially in the top-left square, (1, 1).
you will travel to the bottom-right square, (2, n), by repeatedly moving right or down. the square (i, j) contains a_{i, j} candies.
you will collect all the candies you visit during the travel.
the top-left and bottom-right squares also contain candies, and you will also collect them. at most how many candies can you collect when you choose the best way to travel? 
"
p03452, People on a Line,"there are n people standing on the x-axis.
let the coordinate of person i be x_i.
for every i, x_i is an integer between 0 and 10^9 (inclusive).
it is possible that more than one person is standing at the same coordinate. you will given m pieces of information regarding the positions of these people.
the i-th piece of information has the form (l_i, r_i, d_i).
this means that person r_i is to the right of person l_i by d_i units of distance, that is, x_{r_i} - x_{l_i} = d_i holds. it turns out that some of these m pieces of information may be incorrect.
determine if there exists a set of values (x_1, x_2, ..., x_n) that is consistent with the given pieces of information. 
"
p03453, Avoiding Collision,"we have a graph with n vertices and m edges, and there are two people on the graph: takahashi and aoki. the i-th edge connects vertex u_i and vertex v_i.
the time it takes to traverse this edge is d_i minutes, regardless of direction and who traverses the edge (takahashi or aoki). takahashi departs vertex s and aoki departs vertex t at the same time. takahashi travels to vertex t and aoki travels to vertex s, both in the shortest time possible.
find the number of the pairs of ways for takahashi and aoki to choose their shortest paths such that they never meet (at a vertex or on an edge) during the travel, modulo 10^9 + 7. 
"
p03454, Number of Digits,"for a positive integer n, let us define f(n) as the number of digits in base 10. you are given an integer s.
count the number of the pairs of positive integers (l, r) (l \leq r) such that f(l) + f(l + 1) + ... + f(r) = s, and find the count modulo 10^9 + 7. 
"
p03455, Product,"atcodeer the deer found two positive integers, a and b.
determine whether the product of a and b is even or odd. 
"
p03456, 1 21,"atcodeer the deer has found two positive integers, a and b.
determine whether the concatenation of a and b in this order is a square number. 
"
p03457, Traveling,"atcodeer the deer is going on a trip in a two-dimensional plane.
in his plan, he will depart from point (0, 0) at time 0, then for each i between 1 and n (inclusive), he will visit point (x_i,y_i) at time t_i. if atcodeer is at point (x, y) at time t, he can be at one of the following points at time t+1: (x+1,y), (x-1,y), (x,y+1) and (x,y-1).
note that he cannot stay at his place.
determine whether he can carry out his plan. 
"
p03458, Checker,"atcodeer is thinking of painting an infinite two-dimensional grid in a checked pattern of side k.
here, a checked pattern of side k is a pattern where each square is painted black or white so that each connected component of each color is a k × k square.
below is an example of a checked pattern of side 3: atcodeer has n desires.
the i-th desire is represented by x_i, y_i and c_i.
if c_i is b, it means that he wants to paint the square (x_i,y_i) black; if c_i is w, he wants to paint the square (x_i,y_i) white.
at most how many desires can he satisfy at the same time? 
"
p03459, Traveling,"atcodeer the deer is going on a trip in a two-dimensional plane.
in his plan, he will depart from point (0, 0) at time 0, then for each i between 1 and n (inclusive), he will visit point (x_i,y_i) at time t_i. if atcodeer is at point (x, y) at time t, he can be at one of the following points at time t+1: (x+1,y), (x-1,y), (x,y+1) and (x,y-1).
note that he cannot stay at his place.
determine whether he can carry out his plan. 
"
p03460, Checker,"atcodeer is thinking of painting an infinite two-dimensional grid in a checked pattern of side k.
here, a checked pattern of side k is a pattern where each square is painted black or white so that each connected component of each color is a k × k square.
below is an example of a checked pattern of side 3: atcodeer has n desires.
the i-th desire is represented by x_i, y_i and c_i.
if c_i is b, it means that he wants to paint the square (x_i,y_i) black; if c_i is w, he wants to paint the square (x_i,y_i) white.
at most how many desires can he satisfy at the same time? 
"
p03461, GraphXY,"atcodeer the deer wants a directed graph that satisfies the following conditions: the number of vertices, n, is at most 300. there must not be self-loops or multiple edges. the vertices are numbered from 1 through n. each edge has either an integer weight between 0 and 100 (inclusive), or a label x or y. for every pair of two integers (x,y) such that 1 ≤ x ≤ a, 1 ≤ y ≤ b,
    the shortest distance from vertex s to vertex t in the graph where the edges labeled x have the weight x and the edges labeled y have the weight y, is d_{x,y}. construct such a graph (and a pair of s and t) for him, or report that it does not exist.
refer to output section for output format. 
"
p03462, ColoringBalls,"there are n white balls arranged in a row, numbered 1,2,..,n from left to right.
atcodeer the deer is thinking of painting some of these balls red and blue, while leaving some of them white. you are given a string s of length k.
atcodeer performs the following operation for each i from 1 through k in order: the i-th operation: choose a contiguous segment of balls (possibly empty), and paint these balls red if the i-th character in s is r; paint them blue if the character is b. here, if a ball which is already painted is again painted, the color of the ball will be overwritten.
however, due to the properties of dyes, it is not possible to paint a white, unpainted ball directly in blue.
that is, when the i-th character in s is b, the chosen segment must not contain a white ball. after all the operations, how many different sequences of colors of the balls are possible?
since the count can be large, find it modulo 10^9+7. 
"
p03463, Move and Win,"a game is played on a strip consisting of n cells consecutively numbered from 1 to n.  alice has her token on cell a. borys has his token on a different cell b. players take turns, alice moves first.
the moving player must shift his or her token from its current cell x to the neighboring cell on the left, cell x-1, or on the right, cell x+1.
note that it's disallowed to move the token outside the strip or to the cell with the other player's token.
in one turn, the token of the moving player must be shifted exactly once. the player who can't make a move loses, and the other player wins. both players want to win. who wins if they play optimally? 
"
p03464, Ice Rink Game,"an adult game master and n children are playing a game on an ice rink.
the game consists of k rounds.
in the i-th round, the game master announces: form groups consisting of a_i children each! then the children who are still in the game form as many groups of a_i children as possible.
one child may belong to at most one group.
those who are left without a group leave the game. the others proceed to the next round.
note that it's possible that nobody leaves the game in some round. in the end, after the k-th round, there are exactly two children left, and they are declared the winners. you have heard the values of a_1, a_2, ..., a_k. you don't know n, but you want to estimate it. find the smallest and the largest possible number of children in the game before the start, or determine that no valid values of n exist. 
"
p03465, Median Sum,"you are given n integers a_1, a_2, ..., a_n. consider the sums of all non-empty subsequences of a. there are 2^n - 1 such sums, an odd number. let the list of these sums in non-decreasing order be s_1, s_2, ..., s_{2^n - 1}. find the median of this list, s_{2^{n-1}}. 
"
p03466, Min Max Repetition,"let f(a, b), where a and b are positive integers, be the string satisfying the following conditions: f(a, b) has length a + b; f(a, b) contains exactly a letters a and exactly b letters b; the length of the longest substring of f(a, b) consisting of equal letters (ex., aaaaa or bbbb) is as small as possible under the conditions above; f(a, b) is the lexicographically smallest string satisfying the conditions above. for example, f(2, 3) = babab, and f(6, 4) = aabaabaabb. answer q queries: find the substring of f(a_i, b_i) from position c_i to position d_i (1-based). 
"
p03467, Encoding Subsets,"consider the following set of rules for encoding strings consisting of 0 and 1: strings 0 and 1 can be encoded as 0 and 1, respectively.  if strings a and b can be encoded as p and q, respectively, then string ab can be encoded as pq. if string a can be encoded as p and k \geq 2 is a positive integer, then string aa...a (a repeated k times) can be encoded as (pxk). for example, string 001001001, among other possibilities, can be encoded as 001001001, 00(1(0x2)x2)1 and (001x3). let's call string a a subset of string b if: a and b are equal in length and consist of 0 and 1; for all indices i such that a_i = 1, it's also true that b_i = 1. you are given string s consisting of 0 and 1. find the total number of distinct encodings of all subsets of s, modulo 998244353. 
"
p03468, Arcs on a Circle,"you have a circle of length c, and you are placing n arcs on it. arc i has length l_i. every arc i is placed on the circle uniformly at random:
a random real point on the circle is chosen, then an arc of length l_i centered at this point appears. note that the arcs are placed independently. for example, they may intersect or contain each other. what is the probability that every real point of the circle will be covered by at least one arc?
assume that an arc covers its ends. 
"
p03469, Already 2018,"on some day in january 2018, takaki is writing a document. the document has a column where the current date is written in yyyy/mm/dd format. for example, january 23, 2018 should be written as 2018/01/23. after finishing the document, she noticed that she had mistakenly wrote 2017 at the beginning of the date column. write a program that, when the string that takaki wrote in the date column, s, is given as input, modifies the first four characters in s to 2018 and prints it. 
"
p03470, Kagami Mochi,"an x-layered kagami mochi (x ≥ 1) is a pile of x round mochi (rice cake) stacked vertically where each mochi (except the bottom one) has a smaller diameter than that of the mochi directly below it. for example, if you stack three mochi with diameters of 10, 8 and 6 centimeters from bottom to top in this order, you have a 3-layered kagami mochi; if you put just one mochi, you have a 1-layered kagami mochi. lunlun the dachshund has n round mochi, and the diameter of the i-th mochi is d_i centimeters. when we make a kagami mochi using some or all of them, at most how many layers can our kagami mochi have? 
"
p03471, Otoshidama,"the commonly used bills in japan are 10000-yen, 5000-yen and 1000-yen bills. below, the word ""bill"" refers to only these. according to aohashi, he received an otoshidama (new year money gift) envelope from his grandfather that contained n bills for a total of y yen, but he may be lying. determine whether such a situation is possible, and if it is, find a possible set of bills contained in the envelope. assume that his grandfather is rich enough, and the envelope was large enough. 
"
p03472, Katana Thrower,"you are going out for a walk, when you suddenly encounter a monster. fortunately, you have n katana (swords), katana 1, katana 2, …, katana n, and can perform the following two kinds of attacks in any order: wield one of the katana you have. when you wield katana i (1 ≤ i ≤ n), the monster receives a_i points of damage. the same katana can be wielded any number of times. throw one of the katana you have. when you throw katana i (1 ≤ i ≤ n) at the monster, it receives b_i points of damage, and you lose the katana. that is, you can no longer wield or throw that katana. the monster will vanish when the total damage it has received is h points or more. at least how many attacks do you need in order to vanish it in total? 
"
p03473, New Year,"how many hours do we have until new year at m o'clock (24-hour notation) on 30th, december? 
"
p03474, Postal Code,"the postal code in atcoder kingdom is a+b+1 characters long, its (a+1)-th character is a hyphen -, and the other characters are digits from 0 through 9. you are given a string s. determine whether it follows the postal code format in atcoder kingdom. 
"
p03475, Special Trains,"a railroad running from west to east in atcoder kingdom is now complete. there are n stations on the railroad, numbered 1 through n from west to east. tomorrow, the opening ceremony of the railroad will take place. on this railroad, for each integer i such that 1≤i≤n-1, there will be trains that run from station i to station i+1 in c_i seconds. no other trains will be operated. the first train from station i to station i+1 will depart station i s_i seconds after the ceremony begins. thereafter, there will be a train that departs station i every f_i seconds. here, it is guaranteed that f_i divides s_i. that is, for each time t satisfying s_i≤t and t％f_i=0, there will be a train that departs station i t seconds after the ceremony begins and arrives at station i+1 t+c_i seconds after the ceremony begins, where a％b denotes a modulo b, and there will be no other trains. for each i, find the earliest possible time we can reach station n if we are at station i when the ceremony begins, ignoring the time needed to change trains. 
"
p03476,like Number,"we say that a odd number n is similar to 2017 when both n and (n+1)/2 are prime. you are given q queries. in the i-th query, given two odd numbers l_i and r_i, find the number of odd numbers x similar to 2017 such that l_i ≤ x ≤ r_i. 
"
p03477, Libra,"a balance scale tips to the left if l&gt;r, where l is the total weight of the masses on the left pan and r is the total weight of the masses on the right pan. similarly, it balances if l=r, and tips to the right if l&lt;r. takahashi placed a mass of weight a and a mass of weight b on the left pan of a balance scale, and placed a mass of weight c and a mass of weight d on the right pan. print left if the balance scale tips to the left; print balanced if it balances; print right if it tips to the right. 
"
p03478, Some Sums,"find the sum of the integers between 1 and n (inclusive), whose sum of digits written in base 10 is between a and b (inclusive). 
"
p03479, Multiple Gift,"as a token of his gratitude, takahashi has decided to give his mother an integer sequence.
the sequence a needs to satisfy the conditions below: a consists of integers between x and y (inclusive). for each 1\leq i \leq |a|-1, a_{i+1} is a multiple of a_i and strictly greater than a_i. find the maximum possible length of the sequence. 
"
p03480, Wide Flip,"you are given a string s consisting of 0 and 1.
find the maximum integer k not greater than |s| such that we can turn all the characters of s into 0 by repeating the following operation some number of times. choose a contiguous segment [l,r] in s whose length is at least k (that is, r-l+1\geq k must be satisfied). for each integer i such that l\leq i\leq r, do the following: if s_i is 0, replace it with 1; if s_i is 1, replace it with 0. 

"
p03481, Multiple Gift,"as a token of his gratitude, takahashi has decided to give his mother an integer sequence.
the sequence a needs to satisfy the conditions below: a consists of integers between x and y (inclusive). for each 1\leq i \leq |a|-1, a_{i+1} is a multiple of a_i and strictly greater than a_i. find the maximum possible length of the sequence. 
"
p03482, Wide Flip,"you are given a string s consisting of 0 and 1.
find the maximum integer k not greater than |s| such that we can turn all the characters of s into 0 by repeating the following operation some number of times. choose a contiguous segment [l,r] in s whose length is at least k (that is, r-l+1\geq k must be satisfied). for each integer i such that l\leq i\leq r, do the following: if s_i is 0, replace it with 1; if s_i is 1, replace it with 0. 

"
p03483, Papple Sort,"you are given a string s consisting of lowercase english letters.
determine whether we can turn s into a palindrome by repeating the operation of swapping two adjacent characters. if it is possible, find the minimum required number of operations. 
"
p03484, Christmas Tree,"takahashi has decided to make a christmas tree for the christmas party in atcoder, inc. a christmas tree is a tree with n vertices numbered 1 through n and n-1 edges, whose i-th edge (1\leq i\leq n-1) connects vertex a_i and b_i. he would like to make one as follows: specify two non-negative integers a and b. prepare a christmas paths whose lengths are at most b. here, a christmas path of length x is a graph with x+1 vertices and x edges such that, if we properly number the vertices 1 through x+1, the i-th edge (1\leq i\leq x) will connect vertex i and i+1. select two vertices x and y that belong to different connected components. combine x and y into one vertex. more precisely, for each edge (p,y) incident to the vertex y, add the edge (p,x). then, delete the vertex y and all the edges incident to y. 

 properly number the vertices in the tree. takahashi would like to find the lexicographically smallest pair (a,b) such that he can make a christmas tree, that is, find the smallest a, and find the smallest b under the condition that a is minimized. solve this problem for him. 
"
p03485, Round Up the Mean,"you are given two positive integers a and b.
let x be the average of a and b.
print x rounded up to the nearest integer. 
"
p03486, Two Anagrams,"you are given strings s and t, consisting of lowercase english letters.
you will create a string s' by freely rearranging the characters in s.
you will also create a string t' by freely rearranging the characters in t.
determine whether it is possible to satisfy s' &lt; t' for the lexicographic order. 
"
p03487, Good Sequence,"you are given a sequence of positive integers of length n, a = (a_1, a_2, ..., a_n).
your objective is to remove some of the elements in a so that a will be a good sequence. here, an sequence b is a good sequence when the following condition holds true: for each element x in b, the value x occurs exactly x times in b. for example, (3, 3, 3), (4, 2, 4, 1, 4, 2, 4) and () (an empty sequence) are good sequences, while (3, 3, 3, 3) and (2, 4, 1, 4, 2) are not. find the minimum number of elements that needs to be removed so that a will be a good sequence. 
"
p03488, FT Robot,"a robot is put at the origin in a two-dimensional plane.
initially, the robot is facing in the positive x-axis direction. this robot will be given an instruction sequence s.
s consists of the following two kinds of letters, and will be executed in order from front to back. f : move in the current direction by distance 1. t : turn 90 degrees, either clockwise or counterclockwise. the objective of the robot is to be at coordinates (x, y) after all the instructions are executed.
determine whether this objective is achievable. 
"
p03489, Good Sequence,"you are given a sequence of positive integers of length n, a = (a_1, a_2, ..., a_n).
your objective is to remove some of the elements in a so that a will be a good sequence. here, an sequence b is a good sequence when the following condition holds true: for each element x in b, the value x occurs exactly x times in b. for example, (3, 3, 3), (4, 2, 4, 1, 4, 2, 4) and () (an empty sequence) are good sequences, while (3, 3, 3, 3) and (2, 4, 1, 4, 2) are not. find the minimum number of elements that needs to be removed so that a will be a good sequence. 
"
p03490, FT Robot,"a robot is put at the origin in a two-dimensional plane.
initially, the robot is facing in the positive x-axis direction. this robot will be given an instruction sequence s.
s consists of the following two kinds of letters, and will be executed in order from front to back. f : move in the current direction by distance 1. t : turn 90 degrees, either clockwise or counterclockwise. the objective of the robot is to be at coordinates (x, y) after all the instructions are executed.
determine whether this objective is achievable. 
"
p03491,free Game,"for strings s and t, we will say that s and t are prefix-free when neither is a prefix of the other. let l be a positive integer. a set of strings s is a good string set when the following conditions hold true: each string in s has a length between 1 and l (inclusive) and consists of the characters 0 and 1. any two distinct strings in s are prefix-free. we have a good string set s = \{ s_1, s_2, ..., s_n \}. alice and bob will play a game against each other. they will alternately perform the following operation, starting from alice: add a new string to s. after addition, s must still be a good string set. the first player who becomes unable to perform the operation loses the game. determine the winner of the game when both players play optimally. 
"
p03492, Squirrel Migration,"there is a tree with n vertices. the vertices are numbered 1 through n. the i-th edge (1 \leq i \leq n - 1) connects vertex x_i and y_i. for vertices v and w (1 \leq v, w \leq n), we will define the distance between v and w d(v, w) as ""the number of edges contained in the path v-w"". a squirrel lives in each vertex of the tree. they are planning to move, as follows. first, they will freely choose a permutation of (1, 2, ..., n), p = (p_1, p_2, ..., p_n). then, for each 1 \leq i \leq n, the squirrel that lived in vertex i will move to vertex p_i. since they like long travels, they have decided to maximize the total distance they traveled during the process. that is, they will choose p so that d(1, p_1) + d(2, p_2) + ... + d(n, p_n) will be maximized. how many such ways are there to choose p, modulo 10^9 + 7? 
"
p03493, Placing Marbles,"snuke has a grid consisting of three squares numbered 1, 2 and 3.
in each square, either 0 or 1 is written. the number written in square i is s_i. snuke will place a marble on each square that says 1.
find the number of squares on which snuke will place a marble. 
"
p03494, Shift only,"there are n positive integers written on a blackboard: a_1, ..., a_n. snuke can perform the following operation when all integers on the blackboard are even: replace each integer x on the blackboard by x divided by 2. find the maximum possible number of operations that snuke can perform. 
"
p03495, Not so Diverse,"takahashi has n balls. initially, an integer a_i is written on the i-th ball. he would like to rewrite the integer on some balls so that there are at most k different integers written on the n balls. find the minimum number of balls that takahashi needs to rewrite the integers on them. 
"
p03496,decreasing,"snuke has an integer sequence, a, of length n. the i-th element of a (1-indexed) is a_{i}. he can perform the following operation any number of times: operation: choose integers x and y between 1 and n (inclusive), and add a_x to a_y. he would like to perform this operation between 0 and 2n times (inclusive) so that a satisfies the condition below. show one such sequence of operations.
it can be proved that such a sequence of operations always exists under the constraints in this problem. condition: a_1 \leq a_2 \leq ...  \leq a_{n} 

"
p03497, Not so Diverse,"takahashi has n balls. initially, an integer a_i is written on the i-th ball. he would like to rewrite the integer on some balls so that there are at most k different integers written on the n balls. find the minimum number of balls that takahashi needs to rewrite the integers on them. 
"
p03498,decreasing,"snuke has an integer sequence, a, of length n. the i-th element of a (1-indexed) is a_{i}. he can perform the following operation any number of times: operation: choose integers x and y between 1 and n (inclusive), and add a_x to a_y. he would like to perform this operation between 0 and 2n times (inclusive) so that a satisfies the condition below. show one such sequence of operations.
it can be proved that such a sequence of operations always exists under the constraints in this problem. condition: a_1 \leq a_2 \leq ...  \leq a_{n} 

"
p03499, Smuggling Marbles,"snuke has a rooted tree with n+1 vertices.
the vertices are numbered 0 through n, and vertex 0 is the root of the tree.
the parent of vertex i (1 \leq i \leq n) is vertex p_i. besides this tree, snuke also has an box which is initially empty and many marbles, and playing with them.
the play begins with placing one marble on some of the vertices, then proceeds as follows: if there is a marble on vertex 0, move the marble into the box. move each marble from the vertex to its parent (all at once). for each vertex occupied by two or more marbles, remove all the marbles from the vertex. if there exists a vertex with some marbles, go to step 1. otherwise, end the play. there are 2^{n+1} ways to place marbles on some of the vertices.
for each of them, find the number of marbles that will be in the box at the end of the play, and compute the sum of all those numbers modulo 1,000,000,007. 
"
p03500, Shift and Decrement,"there are n non-negative integers written on the blackboard: a_1, ..., a_n. snuke can perform the following two operations at most k times in total in any order: operation a: replace each integer x on the blackboard with x divided by 2, rounded down to the nearest integer. operation b: replace each integer x on the blackboard with x minus 1. this operation cannot be performed if one or more 0s are written on the blackboard. find the number of the different possible combinations of integers written on the blackboard after snuke performs the operations, modulo 1,000,000,007. 
"
p03501, Parking,"you are parking at a parking lot. you can choose from the following two fee plans: plan 1: the fee will be a×t yen (the currency of japan) when you park for t hours. plan 2: the fee will be b yen, regardless of the duration. find the minimum fee when you park for n hours. 
"
p03502, Harshad Number,"an integer x is called a harshad number if x is divisible by f(x), where f(x) is the sum of the digits in x when written in base 10. given an integer n, determine whether it is a harshad number. 
"
p03503, Shopping Street,"joisino is planning to open a shop in a shopping street. each of the five weekdays is divided into two periods, the morning and the evening. for each of those ten periods, a shop must be either open during the whole period, or closed during the whole period. naturally, a shop must be open during at least one of those periods. there are already n stores in the street, numbered 1 through n. you are given information of the business hours of those shops, f_{i,j,k}. if f_{i,j,k}=1, shop i is open during period k on day j (this notation is explained below); if f_{i,j,k}=0, shop i is closed during that period. here, the days of the week are denoted as follows. monday: day 1, tuesday: day 2, wednesday: day 3, thursday: day 4, friday: day 5. also, the morning is denoted as period 1, and the afternoon is denoted as period 2. let c_i be the number of periods during which both shop i and joisino's shop are open. then, the profit of joisino's shop will be p_{1,c_1}+p_{2,c_2}+...+p_{n,c_n}. find the maximum possible profit of joisino's shop when she decides whether her shop is open during each period, making sure that it is open during at least one period. 
"
p03504, Recording,"joisino is planning to record n tv programs with recorders. the tv can receive c channels numbered 1 through c. the i-th program that she wants to record will be broadcast from time s_i to time t_i (including time s_i but not t_i) on channel c_i. here, there will never be more than one program that are broadcast on the same channel at the same time. when the recorder is recording a channel from time s to time t (including time s but not t), it cannot record other channels from time s-0.5 to time t (including time s-0.5 but not t). find the minimum number of recorders required to record the channels so that all the n programs are completely recorded. 
"
p03505, Kaiden,"butcoder inc. runs a programming competition site called butcoder. in this site, a user is given an integer value called rating that represents his/her skill, which changes each time he/she participates in a contest. the initial value of a new user's rating is 0, and a user whose rating reaches k or higher is called kaiden (""total transmission""). note that a user's rating may become negative. hikuhashi is a new user in butcoder. it is estimated that, his rating increases by a in each of his odd-numbered contests (first, third, fifth, ...), and decreases by b in each of his even-numbered contests (second, fourth, sixth, ...). according to this estimate, after how many contests will he become kaiden for the first time, or will he never become kaiden? 
"
p03506, Evergrowing Tree,"you are given an integer n. consider an infinite n-ary tree as shown below: figure: an infinite n-ary tree for the case n = 3 as shown in the figure, each vertex is indexed with a unique positive integer, and for every positive integer there is a vertex indexed with it. the root of the tree has the index 1. for the remaining vertices, vertices in the upper row have smaller indices than those in the lower row. among the vertices in the same row, a vertex that is more to the left has a smaller index. regarding this tree, process q queries. the i-th query is as follows: find the index of the lowest common ancestor (see notes) of vertex v_i and w_i. 

"
p03507, Garden,"in your garden, there is a long and narrow flowerbed that stretches infinitely to the east. you have decided to plant n kinds of flowers in this empty flowerbed. for convenience, we will call these n kinds of flowers flower 1, 2, …, n. also, we will call the position that is p centimeters from the west end of the flowerbed position p. you will plant flower i (1 ≤ i ≤ n) as follows: first, plant one at position w_i, then plant one every d_i centimeters endlessly toward the east. that is, flower i will be planted at the positions w_i, w_i + d_i, w_i + 2 d_i, … note that more than one flower may be planted at the same position. find the position at which the k-th flower from the west is planted. if more than one flower is planted at the same position, they are counted individually. 
"
p03508, Shock,"you are given an undirected graph g. g has n vertices and m edges. the vertices are numbered from 1 through n, and the i-th edge (1 ≤ i ≤ m) connects vertex a_i and b_i. g does not have self-loops and multiple edges. you can repeatedly perform the operation of adding an edge between two vertices. however, g must not have self-loops or multiple edges as the result. also, if vertex 1 and 2 are connected directly or indirectly by edges, your body will be exposed to a voltage of 1000000007 volts. this must also be avoided. under these conditions, at most how many edges can you add? note that vertex 1 and 2 are never connected directly or indirectly in the beginning. 
"
p03509, White and Blue,"ringo kingdom congress is voting on a bill. n members are present, and the i-th member (1 ≤ i ≤ n) has w_i white ballots and b_i blue ballots. each member i will put all the w_i white ballots into the box if he/she is in favor of the bill, and put all the b_i blue ballots into the box if he/she is not in favor of the bill. no other action is allowed. for example, a member must not forfeit voting, or put only a part of his/her white ballots or a part of his/her blue ballots into the box. after all the members vote, if at least p percent of the ballots in the box is white, the bill is passed; if less than p percent of the ballots is white, the bill is rejected. in order for the bill to pass, at least how many members must be in favor of it? 
"
p03510, Capture,"in a long narrow forest stretching east-west, there are n beasts. below, we will call the point that is p meters from the west end point p. the i-th beast from the west (1 ≤ i ≤ n) is at point x_i, and can be sold for s_i yen (the currency of japan) if captured. you will choose two integers l and r (l ≤ r), and throw a net to cover the range from point l to point r including both ends, [l, r]. then, all the beasts in the range will be captured. however, the net costs r - l yen and your profit will be (the sum of s_i over all captured beasts i) - (r - l) yen. what is the maximum profit that can be earned by throwing a net only once? 
"
p03511, Coinage,"you are given two strings s and t consisting of lowercase english letters and an integer l. we will consider generating a string of length l by concatenating one or more copies of s and t. here, it is allowed to use the same string more than once. for example, when s = at, t = code and l = 6, the strings atatat, atcode and codeat can be generated. among the strings that can be generated in this way, find the lexicographically smallest one. in the cases given as input, it is always possible to generate a string of length l. 
"
p03512, Akashic Records,"consider an infinite sequence a_1, a_2, … initially, the values of all the terms are 0, and from this state we will sequentially perform q operations. the i-th operation (1 ≤ i ≤ q) is as follows: for every positive integer j, add x_i to the value of a_{j × m_i}. find the value of the largest term after these q operations. 
"
p03513, Nice to Meet You,"there are n islands floating in ringo sea, and m travel agents operate ships between these islands. for convenience, we will call these islands island 1, 2, …, n, and call these agents agent 1, 2, …, m. the sea currents in ringo sea change significantly each day. depending on the state of the sea on the day, agent i (1 ≤ i ≤ m) operates ships from island a_i to b_i, or island b_i to a_i, but not both at the same time. assume that the direction of the ships of each agent is independently selected with equal probability. now, takahashi is on island 1, and hikuhashi is on island 2. let p be the probability that takahashi and hikuhashi can travel to the same island in the day by ships operated by the m agents, ignoring the factors such as the travel time for ships. then, p × 2^m is an integer. find p × 2^m modulo 10^9 + 7. 
"
p03514, Indifferent,"we have 2n pots. the market price of the i-th pot (1 ≤ i ≤ 2n) is p_i yen (the currency of japan). now, you and lunlun the dachshund will alternately take one pot. you will go first, and we will continue until all the pots are taken by you or lunlun. since lunlun does not know the market prices of the pots, she will always choose a pot randomly from the remaining pots with equal probability. you know this behavior of lunlun, and the market prices of the pots. let the sum of the market prices of the pots you take be s yen. your objective is to maximize the expected value of s. find the expected value of s when the optimal strategy is adopted. 
"
p03515, Black Cats Deployment,"snuke festival 2017 will be held in a tree with n vertices numbered 1,2, ...,n.
the i-th edge connects vertex a_i and b_i, and has joyfulness c_i. the staff is snuke and n-1 black cats.
snuke will set up the headquarters in some vertex, and from there he will deploy a cat to each of the other n-1 vertices. for each vertex, calculate the niceness when the headquarters are set up in that vertex.
the niceness when the headquarters are set up in vertex i is calculated as follows: let x=0. add c to x, where c is the smallest joyfulness of an edge on the path from vertex i to vertex j. 

 the niceness is the final value of x. 

"
p03516, Unicyclic Graph Counting,"snuke has come up with the following problem. you are given a sequence d of length n.
find the number of the undirected graphs with n vertices labeled 1,2,...,n satisfying the following conditions, modulo 10^{9} + 7: the graph is simple and connected. the degree of vertex i is d_i. when 2 \leq n, 1 \leq d_i \leq n-1, {\rm σ} d_i = 2(n-1), it can be proved that the answer to the problem is \frac{(n-2)!}{(d_{1} -1)!(d_{2} - 1)! ... (d_{n}-1)!}. snuke is wondering what the answer is when 3 \leq n, 1 \leq d_i \leq n-1, { \rm σ} d_i = 2n.
solve the problem under this condition for him. 
"
p03517, Colorful MST,"ringo has an undirected graph g with n vertices numbered 1,2,...,n and m edges numbered 1,2,...,m.
edge i connects vertex a_{i} and b_{i} and has a length of w_i. now, he is in the middle of painting these n vertices in k colors numbered 1,2,...,k. vertex i is already painted in color c_i, except when c_i = 0, in which case vertex i is not yet painted. after he paints each vertex that is not yet painted in one of the k colors, he will give g to snuke. based on g, snuke will make another undirected graph g' with k vertices numbered 1,2,...,k and m edges.
initially, there is no edge in g'. the i-th edge will be added as follows: let x and y be the colors of the two vertices connected by edge i in g. add an edge of length w_i connecting vertex x and y in g'. what is the minimum possible sum of the lengths of the edges in the minimum spanning tree of g'? if g' will not be connected regardless of how ringo paints the vertices, print -1. 
"
p03518, Many Swaps Sorting,"snuke has a sequence p, which is a permutation of (0,1,2, ...,n-1).
the i-th element (0-indexed) in p is p_i. he can perform n-1 kinds of operations labeled 1,2,...,n-1 any number of times in any order.
when the operation labeled k is executed, the procedure represented by the following code will be performed: he would like to sort p in increasing order using between 0 and 10^{5} operations (inclusive).
show one such sequence of operations.
it can be proved that there always exists such a sequence of operations under the constraints in this problem. 
"
p03519, Paired Parentheses,"you are given two sequences a and b, both of length 2n. the i-th elements in a and b are a_i and b_i, respectively.
using these sequences, snuke is doing the job of calculating the beauty of pairs of balanced sequences of parentheses (defined below) of length 2n.
the beauty of a pair (s,t) is calculated as follows: let x=0. for each i between 1 and 2n (inclusive), increment x by a_i if s_i = t_i, and increment x by b_i otherwise. the beauty of (s,t) is the final value of x. you will be given q queries. process them in order.
in the i-th query, update the value of a_{p_i} to x_i, and the value of b_{p_i} to y_i. then, find the maximum possible beauty of a pair of balanced sequences of parentheses. in this problem, only the sequences below are defined to be balanced sequences of parentheses. an empty string the concatenation of (, s, ) in this order, where s is a balanced sequence of parentheses the concatenation of s, t in this order, where s and t are balanced sequences of parentheses 

"
p03520, Ancient Tree Record,"snuke found a record of a tree with n vertices in ancient ruins.
the findings are as follows: the vertices of the tree were numbered 1,2,...,n, and the edges were numbered 1,2,...,n-1. edge i connected vertex a_i and b_i. the length of each edge was an integer between 1 and 10^{18} (inclusive). the sum of the shortest distances from vertex i to vertex 1,...,n was s_i. from the information above, restore the length of each edge.
the input guarantees that it is possible to determine the lengths of the edges consistently with the record.
furthermore, it can be proved that the length of each edge is uniquely determined in such a case. 
"
p03521, Awkward,"butcoder inc. is a startup company whose main business is the development and operation of the programming competition site ""butcoder"". there are n members of the company including the president, and each member except the president has exactly one direct boss. each member has a unique id number from 1 to n, and the member with the id i is called member i. the president is member 1, and the direct boss of member i (2 ≤ i ≤ n) is member b_i (1 ≤ b_i &lt; i). all the members in butcoder have gathered in the great hall in the main office to take a group photo. the hall is very large, and all n people can stand in one line. however, they have been unable to decide the order in which they stand. for some reason, all of them except the president want to avoid standing next to their direct bosses. how many ways are there for them to stand in a line that satisfy their desires? find the count modulo 10^9+7. 
"
p03522, Increment and Swap,"we have a sequence a of length n. on this sequence, we can perform the following two kinds of operations: swap two adjacent elements. 
 select one element, and increment it by 1. 
 we will repeatedly perform these operations so that a will be a non-decreasing sequence. find the minimum required number of operations. 
"
p03523, AKIBA,"you are given a string s. takahashi can insert the character a at any position in this string any number of times. can he change s into akihabara? 
"
p03524,phobia,"snuke has a string s consisting of three kinds of letters: a, b and c. he has a phobia for palindromes, and wants to permute the characters in s so that s will not contain a palindrome of length 2 or more as a substring. determine whether this is possible. 
"
p03525, Time Gap,"in code festival xxxx, there are n+1 participants from all over the world, including takahashi. takahashi checked and found that the time gap (defined below) between the local times in his city and the i-th person's city was d_i hours.
the time gap between two cities is defined as follows. for two cities a and b, if the local time in city b is d o'clock at the moment when the local time in city a is 0 o'clock, then the time gap between these two cities is defined to be min(d,24-d) hours.
here, we are using 24-hour notation.
that is, the local time in the i-th person's city is either d o'clock or 24-d o'clock at the moment when the local time in takahashi's city is 0 o'clock, for example. then, for each pair of two people chosen from the n+1 people, he wrote out the time gap between their cities. let the smallest time gap among them be s hours. find the maximum possible value of s. 
"
p03526, Zabuton,"in the final of code festival in some year, there are n participants.
the height and power of participant i is h_i and p_i, respectively. ringo is hosting a game of stacking zabuton (cushions). the participants will line up in a row in some order, and they will in turn try to add zabuton to the stack of zabuton.
initially, the stack is empty.
when it is participant i's turn, if there are h_i or less zabuton already stacked, he/she will add exactly p_i zabuton to the stack. otherwise, he/she will give up and do nothing. ringo wants to maximize the number of participants who can add zabuton to the stack.
how many participants can add zabuton to the stack in the optimal order of participants? 
"
p03527, Combination Lock,"ringo has a string s. he can perform the following n kinds of operations any number of times in any order. operation i: for each of the characters from the l_i-th through the r_i-th characters in s, replace it with its succeeding letter in the english alphabet. (that is, replace a with b, replace b with c and so on.) for z, we assume that its succeeding letter is a. ringo loves palindromes and wants to turn s into a palindrome.
determine whether this is possible. 
"
p03528, Distribute Numbers,"select any integer n between 1000 and 2000 (inclusive), and any integer k not less than 1, then solve the problem below. 
"
p03529, Mancala,"consider the following game: the game is played using a row of n squares and many stones. first, a_i stones are put in square i\ (1 \leq i \leq n). a player can perform the following operation as many time as desired: ""select an integer i such that square i contains exactly i stones. remove all the stones from square i, and add one stone to each of the i-1 squares from square 1 to square i-1."" the final score of the player is the total number of the stones remaining in the squares. for a sequence a of length n, let f(a) be the minimum score that can be obtained when the game is played on a. find the sum of f(a) over all sequences a of length n where each element is between 0 and k (inclusive).
since it can be extremely large, find the answer modulo 1000000007 (= 10^9+7). 
"
p03530, Poor Penguin,"in some place in the arctic ocean, there are h rows and w columns of ice pieces floating on the sea.
we regard this area as a grid, and denote the square at the i-th row and j-th column as square (i,j).
the ice piece floating in each square is either thin ice or an iceberg, and a penguin lives in one of the squares that contain thin ice.
there are no ice pieces floating outside the grid. the ice piece at square (i,j) is represented by the character s_{i,j}.
s_{i,j} is +, # or p, each of which means the following: +: occupied by thin ice. #: occupied by an iceberg. p: occupied by thin ice. the penguin lives here. when summer comes, unstable thin ice that is not held between some pieces of ice collapses one after another.
formally, thin ice at square (i,j) will collapse when it does not satisfy either of the following conditions: both square (i-1,j) and square (i+1,j) are occupied by an iceberg or uncollapsed thin ice. both square (i,j-1) and square (i,j+1) are occupied by an iceberg or uncollapsed thin ice. when a collapse happens, it may cause another. note that icebergs do not collapse. now, a mischievous tourist comes here. he will do a little work so that, when summer comes, the thin ice inhabited by the penguin will collapse.
he can smash an iceberg with a hammer to turn it to thin ice.
at least how many icebergs does he need to smash? 
"
p03531, Full Tournament,"2^n players competed in a tournament.
each player has a unique id number from 1 through 2^n. when two players play a match, the player with the smaller id always wins. this tournament was a little special, in which losers are not eliminated to fully rank all the players. we will call such a tournament that involves 2^n players a full tournament of level n.
in a full tournament of level n, the players are ranked as follows: in a full tournament of level 0, the only player is ranked first. in a full tournament of level n\ (1 \leq n), initially all 2^n players are lined up in a row. then: first, starting from the two leftmost players, the players are successively divided into 2^{n-1} pairs of two players. each of the pairs plays a match. the winner enters the ""won"" group, and the loser enters the ""lost"" group. the players in the ""won"" group are lined up in a row, maintaining the relative order in the previous row. then, a full tournament of level n-1 is held to fully rank these players. the players in the ""lost"" group are also ranked in the same manner, then the rank of each of these players increases by 2^{n-1}. for example, the figure below shows how a full tournament of level 3 progresses when eight players are lined up in the order 3,4,8,6,2,1,7,5. the list of the players sorted by the final ranking will be 1,3,5,6,2,4,7,8.  takahashi has a sheet of paper with the list of the players sorted by the final ranking in the tournament, but some of it blurred and became unreadable.
you are given the information on the sheet as a sequence a of length n. when a_i is 1 or greater, it means that the i-th ranked player had the id a_i. if a_i is 0, it means that the id of the i-th ranked player is lost. determine whether there exists a valid order in the first phase of the tournament which is consistent with the sheet. if it exists, provide one such order. 
"
p03532, Tree MST,"ringo has a tree with n vertices.
the i-th of the n-1 edges in this tree connects vertex a_i and vertex b_i and has a weight of c_i.
additionally, vertex i has a weight of x_i. here, we define f(u,v) as the distance between vertex u and vertex v, plus x_u + x_v. we will consider a complete graph g with n vertices.
the cost of its edge that connects vertex u and vertex v is f(u,v).
find the minimum spanning tree of g. 
"
p03533, AKIBA,"you are given a string s. takahashi can insert the character a at any position in this string any number of times. can he change s into akihabara? 
"
p03534,phobia,"snuke has a string s consisting of three kinds of letters: a, b and c. he has a phobia for palindromes, and wants to permute the characters in s so that s will not contain a palindrome of length 2 or more as a substring. determine whether this is possible. 
"
p03535, Time Gap,"in code festival xxxx, there are n+1 participants from all over the world, including takahashi. takahashi checked and found that the time gap (defined below) between the local times in his city and the i-th person's city was d_i hours.
the time gap between two cities is defined as follows. for two cities a and b, if the local time in city b is d o'clock at the moment when the local time in city a is 0 o'clock, then the time gap between these two cities is defined to be min(d,24-d) hours.
here, we are using 24-hour notation.
that is, the local time in the i-th person's city is either d o'clock or 24-d o'clock at the moment when the local time in takahashi's city is 0 o'clock, for example. then, for each pair of two people chosen from the n+1 people, he wrote out the time gap between their cities. let the smallest time gap among them be s hours. find the maximum possible value of s. 
"
p03536, Zabuton,"in the final of code festival in some year, there are n participants.
the height and power of participant i is h_i and p_i, respectively. ringo is hosting a game of stacking zabuton (cushions). the participants will line up in a row in some order, and they will in turn try to add zabuton to the stack of zabuton.
initially, the stack is empty.
when it is participant i's turn, if there are h_i or less zabuton already stacked, he/she will add exactly p_i zabuton to the stack. otherwise, he/she will give up and do nothing. ringo wants to maximize the number of participants who can add zabuton to the stack.
how many participants can add zabuton to the stack in the optimal order of participants? 
"
p03537, Combination Lock,"ringo has a string s. he can perform the following n kinds of operations any number of times in any order. operation i: for each of the characters from the l_i-th through the r_i-th characters in s, replace it with its succeeding letter in the english alphabet. (that is, replace a with b, replace b with c and so on.) for z, we assume that its succeeding letter is a. ringo loves palindromes and wants to turn s into a palindrome.
determine whether this is possible. 
"
p03538, Distribute Numbers,"select any integer n between 1000 and 2000 (inclusive), and any integer k not less than 1, then solve the problem below. 
"
p03539, Mancala,"consider the following game: the game is played using a row of n squares and many stones. first, a_i stones are put in square i\ (1 \leq i \leq n). a player can perform the following operation as many time as desired: ""select an integer i such that square i contains exactly i stones. remove all the stones from square i, and add one stone to each of the i-1 squares from square 1 to square i-1."" the final score of the player is the total number of the stones remaining in the squares. for a sequence a of length n, let f(a) be the minimum score that can be obtained when the game is played on a. find the sum of f(a) over all sequences a of length n where each element is between 0 and k (inclusive).
since it can be extremely large, find the answer modulo 1000000007 (= 10^9+7). 
"
p03540, Poor Penguin,"in some place in the arctic ocean, there are h rows and w columns of ice pieces floating on the sea.
we regard this area as a grid, and denote the square at the i-th row and j-th column as square (i,j).
the ice piece floating in each square is either thin ice or an iceberg, and a penguin lives in one of the squares that contain thin ice.
there are no ice pieces floating outside the grid. the ice piece at square (i,j) is represented by the character s_{i,j}.
s_{i,j} is +, # or p, each of which means the following: +: occupied by thin ice. #: occupied by an iceberg. p: occupied by thin ice. the penguin lives here. when summer comes, unstable thin ice that is not held between some pieces of ice collapses one after another.
formally, thin ice at square (i,j) will collapse when it does not satisfy either of the following conditions: both square (i-1,j) and square (i+1,j) are occupied by an iceberg or uncollapsed thin ice. both square (i,j-1) and square (i,j+1) are occupied by an iceberg or uncollapsed thin ice. when a collapse happens, it may cause another. note that icebergs do not collapse. now, a mischievous tourist comes here. he will do a little work so that, when summer comes, the thin ice inhabited by the penguin will collapse.
he can smash an iceberg with a hammer to turn it to thin ice.
at least how many icebergs does he need to smash? 
"
p03541, Full Tournament,"2^n players competed in a tournament.
each player has a unique id number from 1 through 2^n. when two players play a match, the player with the smaller id always wins. this tournament was a little special, in which losers are not eliminated to fully rank all the players. we will call such a tournament that involves 2^n players a full tournament of level n.
in a full tournament of level n, the players are ranked as follows: in a full tournament of level 0, the only player is ranked first. in a full tournament of level n\ (1 \leq n), initially all 2^n players are lined up in a row. then: first, starting from the two leftmost players, the players are successively divided into 2^{n-1} pairs of two players. each of the pairs plays a match. the winner enters the ""won"" group, and the loser enters the ""lost"" group. the players in the ""won"" group are lined up in a row, maintaining the relative order in the previous row. then, a full tournament of level n-1 is held to fully rank these players. the players in the ""lost"" group are also ranked in the same manner, then the rank of each of these players increases by 2^{n-1}. for example, the figure below shows how a full tournament of level 3 progresses when eight players are lined up in the order 3,4,8,6,2,1,7,5. the list of the players sorted by the final ranking will be 1,3,5,6,2,4,7,8.  takahashi has a sheet of paper with the list of the players sorted by the final ranking in the tournament, but some of it blurred and became unreadable.
you are given the information on the sheet as a sequence a of length n. when a_i is 1 or greater, it means that the i-th ranked player had the id a_i. if a_i is 0, it means that the id of the i-th ranked player is lost. determine whether there exists a valid order in the first phase of the tournament which is consistent with the sheet. if it exists, provide one such order. 
"
p03542, Tree MST,"ringo has a tree with n vertices.
the i-th of the n-1 edges in this tree connects vertex a_i and vertex b_i and has a weight of c_i.
additionally, vertex i has a weight of x_i. here, we define f(u,v) as the distance between vertex u and vertex v, plus x_u + x_v. we will consider a complete graph g with n vertices.
the cost of its edge that connects vertex u and vertex v is f(u,v).
find the minimum spanning tree of g. 
"
p03543, Good Integer,"we call a 4-digit integer with three or more consecutive same digits, such as 1118, good. you are given a 4-digit integer n. answer the question: is n good? 
"
p03544, Lucas Number,"it is november 18 now in japan. by the way, 11 and 18 are adjacent lucas numbers. you are given an integer n. find the n-th lucas number. here, the i-th lucas number l_i is defined as follows: l_0=2 l_1=1 l_i=l_{i-1}+l_{i-2} (i≥2) 

"
p03545, Train Ticket,"sitting in a station waiting room, joisino is gazing at her train ticket. the ticket is numbered with four digits a, b, c and d in this order, each between 0 and 9 (inclusive). in the formula a op1 b op2 c op3 d = 7, replace each of the symbols op1, op2 and op3 with + or - so that the formula holds. the given input guarantees that there is a solution. if there are multiple solutions, any of them will be accepted. 
"
p03546, Wall,"joisino the magical girl has decided to turn every single digit that exists on this world into 1. rewriting a digit i with j (0≤i,j≤9) costs c_{i,j} mp (magic points). she is now standing before a wall. the wall is divided into hw squares in h rows and w columns, and at least one square contains a digit between 0 and 9 (inclusive). you are given a_{i,j} that describes the square at the i-th row from the top and j-th column from the left, as follows: if a_{i,j}≠-1, the square contains a digit a_{i,j}. if a_{i,j}=-1, the square does not contain a digit. find the minimum total amount of mp required to turn every digit on this wall into 1 in the end. 
"
p03547, HEX,"in programming, hexadecimal notation is often used. in hexadecimal notation, besides the ten digits 0, 1, ..., 9, the six letters a, b, c, d, e and f are used to represent the values 10, 11, 12, 13, 14 and 15, respectively. in this problem, you are given two letters x and y. each x and y is a, b, c, d, e or f. when x and y are seen as hexadecimal numbers, which is larger? 
"
p03548, ISU,"we have a long seat of width x centimeters.
there are many people who wants to sit here. a person sitting on the seat will always occupy an interval of length y centimeters. we would like to seat as many people as possible, but they are all very shy, and there must be a gap of length at least z centimeters between two people, and between the end of the seat and a person. at most how many people can sit on the seat? 
"
p03549, HSI,"takahashi is now competing in a programming contest, but he received tle in a problem where the answer is yes or no. when he checked the detailed status of the submission, there were n test cases in the problem, and the code received tle in m of those cases. then, he rewrote the code to correctly solve each of those m cases with 1/2 probability in 1900 milliseconds, and correctly solve each of the other n-m cases without fail in 100 milliseconds. now, he goes through the following process: submit the code. wait until the code finishes execution on all the cases. if the code fails to correctly solve some of the m cases, submit it again. repeat until the code correctly solve all the cases in one submission. let the expected value of the total execution time of the code be x milliseconds. print x (as an integer). 
"
p03550, ABS,"we have a deck consisting of n cards. each card has an integer written on it. the integer on the i-th card from the top is a_i. two people x and y will play a game using this deck. initially, x has a card with z written on it in his hand, and y has a card with w written on it in his hand. then, starting from x, they will alternately perform the following action: draw some number of cards from the top of the deck. then, discard the card in his hand and keep the last drawn card instead. here, at least one card must be drawn. the game ends when there is no more card in the deck. the score of the game is the absolute difference of the integers written on the cards in the two players' hand. x will play the game so that the score will be maximized, and y will play the game so that the score will be minimized. what will be the score of the game? 
"
p03551, HSI,"takahashi is now competing in a programming contest, but he received tle in a problem where the answer is yes or no. when he checked the detailed status of the submission, there were n test cases in the problem, and the code received tle in m of those cases. then, he rewrote the code to correctly solve each of those m cases with 1/2 probability in 1900 milliseconds, and correctly solve each of the other n-m cases without fail in 100 milliseconds. now, he goes through the following process: submit the code. wait until the code finishes execution on all the cases. if the code fails to correctly solve some of the m cases, submit it again. repeat until the code correctly solve all the cases in one submission. let the expected value of the total execution time of the code be x milliseconds. print x (as an integer). 
"
p03552, ABS,"we have a deck consisting of n cards. each card has an integer written on it. the integer on the i-th card from the top is a_i. two people x and y will play a game using this deck. initially, x has a card with z written on it in his hand, and y has a card with w written on it in his hand. then, starting from x, they will alternately perform the following action: draw some number of cards from the top of the deck. then, discard the card in his hand and keep the last drawn card instead. here, at least one card must be drawn. the game ends when there is no more card in the deck. the score of the game is the absolute difference of the integers written on the cards in the two players' hand. x will play the game so that the score will be maximized, and y will play the game so that the score will be minimized. what will be the score of the game? 
"
p03553, MUL,"we have n gemstones labeled 1 through n. you can perform the following operation any number of times (possibly zero). select a positive integer x, and smash all the gems labeled with multiples of x. then, for each i, if the gem labeled i remains without getting smashed, you will receive a_i yen (the currency of japan).
however, a_i may be negative, in which case you will be charged money. by optimally performing the operation, how much yen can you earn? 
"
p03554, NRE,"you are given a sequence a = \{a_1, ..., a_n\} with all zeros, and a sequence b = \{b_1, ..., b_n\} consisting of 0 and 1. the length of both is n. you can perform q kinds of operations. the i-th operation is as follows: replace each of a_{l_i}, a_{l_i + 1}, ..., a_{r_i} with 1. minimize the hamming distance between a and b, that is, the number of i such that a_i \neq b_i, by performing some of the q operations. 
"
p03555, Rotation,"you are given a grid with 2 rows and 3 columns of squares.
the color of the square at the i-th row and j-th column is represented by the character c_{ij}. write a program that prints yes if this grid remains the same when rotated 180 degrees, and prints no otherwise. 
"
p03556, Around Square,"find the largest square number not exceeding n. here, a square number is an integer that can be represented as the square of an integer. 
"
p03557, Snuke Festival,"the season for snuke festival has come again this year. first of all, ringo will perform a ritual to summon snuke. for the ritual, he needs an altar, which consists of three parts, one in each of the three categories: upper, middle and lower. he has n parts for each of the three categories. the size of the i-th upper part is a_i, the size of the i-th middle part is b_i, and the size of the i-th lower part is c_i. to build an altar, the size of the middle part must be strictly greater than that of the upper part, and the size of the lower part must be strictly greater than that of the middle part. on the other hand, any three parts that satisfy these conditions can be combined to form an altar. how many different altars can ringo build? here, two altars are considered different when at least one of the three parts used is different. 
"
p03558, Small Multiple,"find the smallest possible sum of the digits in the decimal notation of a positive multiple of k. 
"
p03559, Snuke Festival,"the season for snuke festival has come again this year. first of all, ringo will perform a ritual to summon snuke. for the ritual, he needs an altar, which consists of three parts, one in each of the three categories: upper, middle and lower. he has n parts for each of the three categories. the size of the i-th upper part is a_i, the size of the i-th middle part is b_i, and the size of the i-th lower part is c_i. to build an altar, the size of the middle part must be strictly greater than that of the upper part, and the size of the lower part must be strictly greater than that of the middle part. on the other hand, any three parts that satisfy these conditions can be combined to form an altar. how many different altars can ringo build? here, two altars are considered different when at least one of the three parts used is different. 
"
p03560, Small Multiple,"find the smallest possible sum of the digits in the decimal notation of a positive multiple of k. 
"
p03561, Finite Encyclopedia of Integer Sequences,"in finite encyclopedia of integer sequences (feis), all integer sequences of lengths between 1 and n (inclusive) consisting of integers between 1 and k (inclusive) are listed. let the total number of sequences listed in feis be x. among those sequences, find the (x/2)-th (rounded up to the nearest integer) lexicographically smallest one. 
"
p03562, XorShift,"there are n non-negative integers written on a blackboard. the i-th integer is a_i. takahashi can perform the following two kinds of operations any number of times in any order: select one integer written on the board (let this integer be x). write 2x on the board, without erasing the selected integer. select two integers, possibly the same, written on the board (let these integers be x and y). write x xor y (xor stands for bitwise xor) on the blackboard, without erasing the selected integers. how many different integers not exceeding x can be written on the blackboard? we will also count the integers that are initially written on the board.
since the answer can be extremely large, find the count modulo 998244353. 
"
p03563, Rating Goal,"takahashi is a user of a site that hosts programming contests.
when a user competes in a contest, the rating of the user (not necessarily an integer) changes according to the performance of the user, as follows:   let the current rating of the user be a. suppose that the performance of the user in the contest is b. then, the new rating of the user will be the avarage of a and b. for example, if a user with rating 1 competes in a contest and gives performance 1000, his/her new rating will be 500.5, the average of 1 and 1000. takahashi's current rating is r, and he wants his rating to be exactly g after the next contest.
find the performance required to achieve it.   
"
p03564, Addition and Multiplication,"square1001 has seen an electric bulletin board displaying the integer 1.
he can perform the following operations a and b to change this value: operation a: the displayed value is doubled. operation b: the displayed value increases by k. square1001 needs to perform these operations n times in total.
find the minimum possible value displayed in the board after n operations. 
"
p03565, Dubious Document 2,"e869120 found a chest which is likely to contain treasure.
however, the chest is locked. in order to open it, he needs to enter a string s consisting of lowercase english letters.
he also found a string s', which turns out to be the string s with some of its letters (possibly all or none) replaced with ?.   one more thing he found is a sheet of paper with the following facts written on it:   condition 1: the string s contains a string t as a contiguous substring. condition 2: s is the lexicographically smallest string among the ones that satisfy condition 1. print the string s.
if such a string does not exist, print unrestorable.   
"
p03566, AtCoder Express,"in the year 2168, atcoder inc., which is much larger than now, is starting a limited express train service called atcoder express. in the plan developed by the president takahashi, the trains will run as follows: a train will run for (t_1 + t_2 + t_3 + ... + t_n) seconds. in the first t_1 seconds, a train must run at a speed of at most v_1 m/s (meters per second). similarly, in the subsequent t_2 seconds, a train must run at a speed of at most v_2 m/s, and so on. according to the specifications of the trains, the acceleration of a train must be always within ±1m/s^2. additionally, a train must stop at the beginning and the end of the run. find the maximum possible distance that a train can cover in the run. 
"
p03567, Can you get AC?,"snuke built an online judge to hold a programming contest. when a program is submitted to the judge, the judge returns a verdict, which is a two-character string that appears in the string s as a contiguous substring.
(the judge can return any two-character substring of s.) determine whether the judge can return the string ac as the verdict to a program. 
"
p03568, Similar Arrays,"we will say that two integer sequences of length n, x_1, x_2, ..., x_n and y_1, y_2, ..., y_n, are similar when |x_i - y_i| \leq 1 holds for all i (1 \leq i \leq n). in particular, any integer sequence is similar to itself. you are given an integer n and an integer sequence of length n, a_1, a_2, ..., a_n. how many integer sequences b_1, b_2, ..., b_n are there such that b_1, b_2, ..., b_n is similar to a and the product of all elements, b_1 b_2 ... b_n, is even? 
"
p03569, Inserting 'x',"we have a string s consisting of lowercase english letters.
snuke can perform the following operation repeatedly: insert a letter x to any position in s of his choice, including the beginning and end of s. snuke's objective is to turn s into a palindrome.
determine whether the objective is achievable. if it is achievable, find the minimum number of operations required. 
"
p03570, Yet Another Palindrome Partitioning,"we have a string s consisting of lowercase english letters.
snuke is partitioning s into some number of non-empty substrings.
let the subtrings obtained be s_1, s_2, ..., s_n from left to right. (here, s = s_1 + s_2 + ... + s_n holds.)
snuke wants to satisfy the following condition: for each i (1 \leq i \leq n), it is possible to permute the characters in s_i and obtain a palindrome. find the minimum possible value of n when the partition satisfies the condition. 
"
p03571, Cubes,"we constructed a rectangular parallelepiped of dimensions a \times b \times c built of abc cubic blocks of side 1.
then, we placed the parallelepiped in xyz-space as follows: for every triple i, j, k (0 \leq i &lt; a, 0 \leq j &lt; b, 0 \leq k &lt; c), there exists a block that has a diagonal connecting the points (i, j, k) and (i + 1, j + 1, k + 1). all sides of the block are parallel to a coordinate axis. for each triple i, j, k, we will call the above block as block (i, j, k). for two blocks (i_1, j_1, k_1) and (i_2, j_2, k_2), we will define the distance between them as max(|i_1 - i_2|, |j_1 - j_2|, |k_1 - k_2|). we have passed a wire with a negligible thickness through a segment connecting the points (0, 0, 0) and (a, b, c).
how many blocks (x,y,z) satisfy the following condition? find the count modulo 10^9 + 7. there exists a block (x', y', z') such that the wire passes inside the block (x', y', z') (not just boundary) and the distance between the blocks (x, y, z) and (x', y', z') is at most d. 

"
p03572, Three Gluttons,"three men, a, b and c, are eating sushi together.
initially, there are n pieces of sushi, numbered 1 through n.
here, n is a multiple of 3. each of the three has likes and dislikes in sushi.
a's preference is represented by (a_1,\ ...,\ a_n), a permutation of integers from 1 to n.
for each i (1 \leq i \leq n), a's i-th favorite sushi is sushi a_i.
similarly, b's and c's preferences are represented by (b_1,\ ...,\ b_n) and (c_1,\ ...,\ c_n), permutations of integers from 1 to n. the three repeats the following action until all pieces of sushi are consumed or a fight brakes out (described later): each of the three a, b and c finds his most favorite piece of sushi among the remaining pieces. let these pieces be sushi x, y and z, respectively. if x, y and z are all different, a, b and c eats sushi x, y and z, respectively. otherwise, a fight brakes out. you are given a's and b's preferences, (a_1,\ ...,\ a_n) and (b_1,\ ...,\ b_n).
how many preferences of c, (c_1,\ ...,\ c_n), leads to all the pieces of sushi being consumed without a fight?
find the count modulo 10^9+7. 
"
p03573, One out of Three,"you are given three integers, a, b and c.
among them, two are the same, but the remaining one is different from the rest.
for example, when a=5,b=7,c=5, a and c are the same, but b is different.
find the one that is different from the rest among the given three integers.   
"
p03574, Minesweeper,"you are given an h × w grid.
the squares in the grid are described by h strings, s_1,...,s_h.
the j-th character in the string s_i corresponds to the square at the i-th row from the top and j-th column from the left (1 \leq i \leq h,1 \leq j \leq w).
. stands for an empty square, and # stands for a square containing a bomb.   dolphin is interested in how many bomb squares are horizontally, vertically or diagonally adjacent to each empty square.
(below, we will simply say ""adjacent"" for this meaning. for each square, there are at most eight adjacent squares.)
he decides to replace each . in our h strings with a digit that represents the number of bomb squares adjacent to the corresponding empty square.   print the strings after the process.   
"
p03575, Bridge,"you are given an undirected connected graph with n vertices and m edges that does not contain self-loops and double edges.
the i-th edge (1 \leq i \leq m) connects vertex a_i and vertex b_i.   an edge whose removal disconnects the graph is called a bridge.
find the number of the edges that are bridges among the m edges.   
"
p03576,Parallel Rectangle,"we have n points in a two-dimensional plane.
the coordinates of the i-th point (1 \leq i \leq n) are (x_i,y_i).
let us consider a rectangle whose sides are parallel to the coordinate axes that contains k or more of the n points in its interior.
here, points on the sides of the rectangle are considered to be in the interior.
find the minimum possible area of such a rectangle.   
"
p03577, XXFESTIVAL,"rng is going to a festival. the name of the festival is given to you as a string s, which ends with festival, from input. answer the question: ""rng is going to a festival of what?"" output the answer. here, assume that the name of ""a festival of s"" is a string obtained by appending festival to the end of s.
for example, codefestival is a festival of code. 
"
p03578, Problem Set,"rng is preparing a problem set for a qualification round of codefestival. he has n candidates of problems. the difficulty of the i-th candidate is d_i. there must be m problems in the problem set, and the difficulty of the i-th problem must be t_i. here, one candidate of a problem cannot be used as multiple problems. determine whether rng can complete the problem set without creating new candidates of problems. 
"
p03579, 3 Steps,"rng has a connected undirected graph with n vertices.
currently, there are m edges in the graph, and the i-th edge connects vertices a_i and b_i. rng will add new edges to the graph by repeating the following operation: operation: choose u and v (u \neq v) such that vertex v can be reached by traversing exactly three edges from vertex u, and add an edge connecting vertices u and v. it is not allowed to add an edge if there is already an edge connecting vertices u and v. find the maximum possible number of edges that can be added. 
"
p03580, 101 to 010,"n cells are arranged in a row.
some of them may contain tokens.
you are given a string s that consists of 0s and 1s.
if the i-th character of s is 1, the i-th cell (from left) contains a token.
otherwise, it doesn't contain a token. snuke wants to perform the following operation as many times as possible.
in each operation, he chooses three consecutive cells.
let's call the cells x, y, z from left to right.
in order for the operation to be valid, both x and z must contain tokens and y must not contain a token.
then, he removes these two tokens and puts a new token on y. how many operations can he perform if he performs operations in the optimal way? 
"
p03581, Popping Balls,"a + b balls are arranged in a row.
the leftmost a balls are colored red, and the rightmost b balls are colored blue. you perform the following operation: first, you choose two integers s, t such that 1 \leq s, t \leq a + b. then, you repeat the following step a + b times:
in each step, you remove the first ball or the s-th ball (if it exists) or the t-th ball (if it exists, all indices are 1-based) from left in the row, and give it to snuke. in how many ways can you give the balls to snuke?
compute the answer modulo 10^9 + 7. here, we consider two ways to be different if for some k, the k-th ball given to snuke has different colors.
in particular, the choice of s, t doesn't matter.
also, we don't distinguish two balls of the same color. 
"
p03582, Largest Smallest Cyclic Shift,"for a string s, let f(s) be the lexicographically smallest cyclic shift of s.
for example, if s = babca, f(s) = ababc because this is the smallest among all cyclic shifts (babca, abcab, bcaba, cabab, ababc). you are given three integers x, y, and z.
you want to construct a string t that consists of exactly x as, exactly y bs, and exactly z cs.
if there are multiple such strings, you want to choose one that maximizes f(t) lexicographically. compute the lexicographically largest possible value of f(t). 
"
p03583, 4/N,"you are given an integer n. find a triple of positive integers h, n and w such that 4/n = 1/h + 1/n + 1/w. if there are multiple solutions, any of them will be accepted. 
"
p03584, IntegerotS,"seisu-ya, a store specializing in non-negative integers, sells n non-negative integers. the i-th integer is a_i and has a utility of b_i.
there may be multiple equal integers with different utilities. takahashi will buy some integers in this store. he can buy a combination of integers whose bitwise or is less than or equal to k. he wants the sum of utilities of purchased integers to be as large as possible. find the maximum possible sum of utilities of purchased integers. 
"
p03585, CARtesian Coodinate,"there are n lines in the xy-plane. the i-th line is represented by a_ix+b_iy=c_i.
any two lines among the n+2 lines, the above n lines plus the x-axis and y-axis, cross each other at exactly one point. for each pair 1 \leq i &lt; j \leq n, there is a car at the cross point of the i-th and j-th lines.
even where three or more lines intersect at a point, a car is individually placed for each pair of lines.
that is, there will be k(k-1)/2 cars placed at the intersection of k lines. those cars are already very old, and can only be moved parallel to the x-axis or y-axis. takahashi will hold an exhibition of antique cars at a place on the xy-plane.
in order to avoid damaging the half-broken cars too much, he will select the place of the exhibition so that the total distance covered will be minimized when all the cars are moved to the place.
if such a place is not uniquely determined, among the places that satisfy the condition above, the place with the minimum x-coordinate will be selected.
if the place is still not uniquely determined, among the places that satisfy the two conditions above, the place with the minimum y-coordinate will be selected. find the place of the exhibition that will be selected. 
"
p03586, ModularPowerEquation!!,"process the q queries below. you are given two integers a_i and m_i. determine whether there exists a positive integer k_i not exceeding 2 × 10^{18} such that a_i^{k_i} ≡ k_i (mod m_i), and find one if it exists. 

"
p03587, Accepted...?,"snuke prepared 6 problems for a upcoming programming contest.
for each of those problems, rng judged whether it can be used in the contest or not. you are given a string s of length 6.
if the i-th character of s is 1, it means that the i-th problem prepared by snuke is accepted to be used; 0 means that the problem is not accepted. how many problems prepared by snuke are accepted to be used in the contest? 
"
p03588, Different Distribution,"a group of people played a game. all players had distinct scores, which are positive integers. takahashi knows n facts on the players' scores. the i-th fact is as follows: the a_i-th highest score among the players is b_i. find the maximum possible number of players in the game. 
"
p03589, 4/N,"you are given an integer n. find a triple of positive integers h, n and w such that 4/n = 1/h + 1/n + 1/w. if there are multiple solutions, any of them will be accepted. 
"
p03590, IntegerotS,"seisu-ya, a store specializing in non-negative integers, sells n non-negative integers. the i-th integer is a_i and has a utility of b_i.
there may be multiple equal integers with different utilities. takahashi will buy some integers in this store. he can buy a combination of integers whose bitwise or is less than or equal to k. he wants the sum of utilities of purchased integers to be as large as possible. find the maximum possible sum of utilities of purchased integers. 
"
p03591, Snuke's favorite YAKINIKU,"ringo is giving a present to snuke. ringo has found out that snuke loves yakiniku (a japanese term meaning grilled meat. yaki: grilled, niku: meat). he supposes that snuke likes grilled things starting with yaki in japanese, and does not like other things. you are given a string s representing the japanese name of ringo's present to snuke. determine whether s starts with yaki. 
"
p03592, fLIP,"we have a grid with n rows and m columns of squares. initially, all the squares are white. there is a button attached to each row and each column.
when a button attached to a row is pressed, the colors of all the squares in that row are inverted; that is, white squares become black and vice versa.
when a button attached to a column is pressed, the colors of all the squares in that column are inverted. takahashi can freely press the buttons any number of times. determine whether he can have exactly k black squares in the grid. 
"
p03593, Palindromic Matrix,"we have an h-by-w matrix.
let a_{ij} be the element at the i-th row from the top and j-th column from the left.
in this matrix, each a_{ij} is a lowercase english letter. snuke is creating another h-by-w matrix, a', by freely rearranging the elements in a.
here, he wants to satisfy the following condition: every row and column in a' can be read as a palindrome. determine whether he can create a matrix satisfying the condition. 
"
p03594, Four Coloring,"we have a grid with h rows and w columns of squares.
we will represent the square at the i-th row from the top and j-th column from the left as (i,\ j).
also, we will define the distance between the squares (i_1,\ j_1) and (i_2,\ j_2) as |i_1 - i_2| + |j_1 - j_2|. snuke is painting each square in red, yellow, green or blue.
here, for a given positive integer d, he wants to satisfy the following condition: no two squares with distance exactly d have the same color. find a way to paint the squares satisfying the condition.
it can be shown that a solution always exists. 
"
p03595, Modern Painting,"ringo got interested in modern art. he decided to draw a big picture on the board with n+2 rows and m+2 columns of squares constructed in the venue of code festival 2017, using some people. the square at the (i+1)-th row and (j+1)-th column in the board is represented by the pair of integers (i,j). that is, the top-left square is (0,0), and the bottom-right square is (n+1,m+1).
initially, the squares (x,y) satisfying 1 \leq x \leq n and 1 \leq y \leq m are painted white, and the other (outermost) squares are painted black. ringo arranged people at some of the outermost squares, facing inward.
more specifically, the arrangement of people is represented by four strings a, b, c and d, as follows: for each row except the top and bottom, if the i-th character (1 \leq i \leq n) in a is 1, place a person facing right at the square (i,0); otherwise, do nothing. for each row except the top and bottom, if the i-th character (1 \leq i \leq n) in b is 1, place a person facing left at the square (i,m+1); otherwise, do nothing. for each column except the leftmost and rightmost, if the i-th character (1 \leq i \leq m) in c is 1, place a person facing down at the square (0,i); otherwise, do nothing. for each column except the leftmost and rightmost, if the i-th character (1 \leq i \leq m) in d is 1, place a person facing up at the square (n+1,i); otherwise, do nothing. each person has a sufficient amount of non-white paint. no two people have paint of the same color. an example of an arrangement of people (for convenience, black squares are displayed in gray) ringo repeats the following sequence of operations until all people are dismissed from the venue. select a person who is still in the venue. the selected person repeats the following action while the square in front of him/her is white: move one square forward, and paint the square he/she enters with his/her paint. when the square in front of him/her is not white, he/she stops doing the action. the person is now dismissed from the venue. an example of a way the board is painted how many different states of the board can ringo obtain at the end of the process? find the count modulo 998244353. two states of the board are considered different when there is a square painted in different colors. 
"
p03596, Squeezing Slimes,"there are a slimes lining up in a row.
initially, the sizes of the slimes are all 1. snuke can repeatedly perform the following operation. choose a positive even number m. then, select m consecutive slimes and form m / 2 pairs from those slimes as follows: pair the 1-st and 2-nd of them from the left, the 3-rd and 4-th of them, ..., the (m-1)-th and m-th of them. combine each pair of slimes into one larger slime. here, the size of a combined slime is the sum of the individual slimes before combination. the order of the m / 2 combined slimes remain the same as the m / 2 pairs of slimes before combination. snuke wants to get to the situation where there are exactly n slimes, and the size of the i-th (1 ≤ i ≤ n) slime from the left is a_i.
find the minimum number of operations required to achieve his goal. note that a is not directly given as input. assume a = a_1 + a_2 + ... + a_n. 
"
p03597, Bichrome Cells,"we have an n \times n square grid. we will paint each square in the grid either black or white. if we paint exactly a squares white, how many squares will be painted black? 
"
p03598, Collecting Balls (Easy Version),"there are n balls in the xy-plane. the coordinates of the i-th of them is (x_i, i).
thus, we have one ball on each of the n lines y = 1, y = 2, ..., y = n. in order to collect these balls, snuke prepared 2n robots, n of type a and n of type b.
then, he placed the i-th type-a robot at coordinates (0, i), and the i-th type-b robot at coordinates (k, i).
thus, now we have one type-a robot and one type-b robot on each of the n lines y = 1, y = 2, ..., y = n. when activated, each type of robot will operate as follows. when a type-a robot is activated at coordinates (0, a), it will move to the position of the ball on the line y = a, collect the ball, move back to its original position (0, a) and deactivate itself. if there is no such ball, it will just deactivate itself without doing anything. 
 when a type-b robot is activated at coordinates (k, b), it will move to the position of the ball on the line y = b, collect the ball, move back to its original position (k, b) and deactivate itself. if there is no such ball, it will just deactivate itself without doing anything. 
 snuke will activate some of the 2n robots to collect all of the balls. find the minimum possible total distance covered by robots. 
"
p03599, Sugar Water,"snuke is making sugar water in a beaker.
initially, the beaker is empty. snuke can perform the following four types of operations any number of times. he may choose not to perform some types of operations. operation 1: pour 100a grams of water into the beaker. operation 2: pour 100b grams of water into the beaker. operation 3: put c grams of sugar into the beaker. operation 4: put d grams of sugar into the beaker. in our experimental environment, e grams of sugar can dissolve into 100 grams of water. snuke will make sugar water with the highest possible density. the beaker can contain at most f grams of substances (water and sugar combined), and there must not be any undissolved sugar in the beaker.
find the mass of the sugar water snuke will make, and the mass of sugar dissolved in it.
if there is more than one candidate, any of them will be accepted. we remind you that the sugar water that contains a grams of water and b grams of sugar is \frac{100b}{a + b} percent.
also, in this problem, pure water that does not contain any sugar is regarded as 0 percent density sugar water. 
"
p03600, Restoring Road Network,"in takahashi kingdom, which once existed, there are n cities, and some pairs of cities are connected bidirectionally by roads.
the following are known about the road network: people traveled between cities only through roads. it was possible to reach any city from any other city, via intermediate cities if necessary. different roads may have had different lengths, but all the lengths were positive integers. snuke the archeologist found a table with n rows and n columns, a, in the ruin of takahashi kingdom.
he thought that it represented the shortest distances between the cities along the roads in the kingdom. determine whether there exists a road network such that for each u and v, the integer a_{u, v} at the u-th row and v-th column of a is equal to the length of the shortest path from city u to city v.
if such a network exist, find the shortest possible total length of the roads. 
"
p03601, Sugar Water,"snuke is making sugar water in a beaker.
initially, the beaker is empty. snuke can perform the following four types of operations any number of times. he may choose not to perform some types of operations. operation 1: pour 100a grams of water into the beaker. operation 2: pour 100b grams of water into the beaker. operation 3: put c grams of sugar into the beaker. operation 4: put d grams of sugar into the beaker. in our experimental environment, e grams of sugar can dissolve into 100 grams of water. snuke will make sugar water with the highest possible density. the beaker can contain at most f grams of substances (water and sugar combined), and there must not be any undissolved sugar in the beaker.
find the mass of the sugar water snuke will make, and the mass of sugar dissolved in it.
if there is more than one candidate, any of them will be accepted. we remind you that the sugar water that contains a grams of water and b grams of sugar is \frac{100b}{a + b} percent.
also, in this problem, pure water that does not contain any sugar is regarded as 0 percent density sugar water. 
"
p03602, Restoring Road Network,"in takahashi kingdom, which once existed, there are n cities, and some pairs of cities are connected bidirectionally by roads.
the following are known about the road network: people traveled between cities only through roads. it was possible to reach any city from any other city, via intermediate cities if necessary. different roads may have had different lengths, but all the lengths were positive integers. snuke the archeologist found a table with n rows and n columns, a, in the ruin of takahashi kingdom.
he thought that it represented the shortest distances between the cities along the roads in the kingdom. determine whether there exists a road network such that for each u and v, the integer a_{u, v} at the u-th row and v-th column of a is equal to the length of the shortest path from city u to city v.
if such a network exist, find the shortest possible total length of the roads. 
"
p03603, Bichrome Tree,"we have a tree with n vertices. vertex 1 is the root of the tree, and the parent of vertex i (2 \leq i \leq n) is vertex p_i. to each vertex in the tree, snuke will allocate a color, either black or white, and a non-negative integer weight. snuke has a favorite integer sequence, x_1, x_2, ..., x_n, so he wants to allocate colors and weights so that the following condition is satisfied for all v. the total weight of the vertices with the same color as v among the vertices contained in the subtree whose root is v, is x_v. here, the subtree whose root is v is the tree consisting of vertex v and all of its descendants. determine whether it is possible to allocate colors and weights in this way. 
"
p03604, Collecting Balls,"there are 2n balls in the xy-plane. the coordinates of the i-th of them is (x_i, y_i).
here, x_i and y_i are integers between 1 and n (inclusive) for all i, and no two balls occupy the same coordinates. in order to collect these balls, snuke prepared 2n robots, n of type a and n of type b.
then, he placed the type-a robots at coordinates (1, 0), (2, 0), ..., (n, 0), and the type-b robots at coordinates (0, 1), (0, 2), ..., (0, n), one at each position. when activated, each type of robot will operate as follows. when a type-a robot is activated at coordinates (a, 0), it will move to the position of the ball with the lowest y-coordinate among the balls on the line x = a, collect the ball and deactivate itself. if there is no such ball, it will just deactivate itself without doing anything. 
 when a type-b robot is activated at coordinates (0, b), it will move to the position of the ball with the lowest x-coordinate among the balls on the line y = b, collect the ball and deactivate itself. if there is no such ball, it will just deactivate itself without doing anything. 
 once deactivated, a robot cannot be activated again. also, while a robot is operating, no new robot can be activated until the operating robot is deactivated. when snuke was about to activate a robot, he noticed that he may fail to collect all the balls, depending on the order of activating the robots. among the (2n)! possible orders of activating the robots, find the number of the ones such that all the balls can be collected, modulo 1 000 000 007. 
"
p03605, September 9,"it is september 9 in japan now. you are given a two-digit integer n. answer the question: is 9 contained in the decimal notation of n? 
"
p03606, Theater,"joisino is working as a receptionist at a theater. the theater has 100000 seats, numbered from 1 to 100000. according to her memo, n groups of audiences have come so far, and the i-th group occupies the consecutive seats from seat l_i to seat r_i (inclusive). how many people are sitting at the theater now? 
"
p03607, Write and Erase,"you are playing the following game with joisino. initially, you have a blank sheet of paper. joisino announces a number. if that number is written on the sheet, erase the number from the sheet; if not, write the number on the sheet. this process is repeated n times. then, you are asked a question: how many numbers are written on the sheet now? the numbers announced by joisino are given as a_1, ... ,a_n in the order she announces them. how many numbers will be written on the sheet at the end of the game? 
"
p03608, joisino's travel,"there are n towns in the state of atcoder, connected by m bidirectional roads. the i-th road connects town a_i and b_i and has a length of c_i. joisino is visiting r towns in the state, r_1,r_2,..,r_r (not necessarily in this order). she will fly to the first town she visits, and fly back from the last town she visits, but for the rest of the trip she will have to travel by road. if she visits the towns in the order that minimizes the distance traveled by road, what will that distance be? 
"
p03609, Sandglass2,"we have a sandglass that runs for x seconds. the sand drops from the upper bulb at a rate of 1 gram per second. that is, the upper bulb initially contains x grams of sand. how many grams of sand will the upper bulb contains after t seconds? 
"
p03610, OddString,"you are given a string s consisting of lowercase english letters. extract all the characters in the odd-indexed positions and print the string obtained by concatenating them. here, the leftmost character is assigned the index 1. 
"
p03611, Together,"you are given an integer sequence of length n, a_1,a_2,...,a_n. for each 1≤i≤n, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing. after these operations, you select an integer x and count the number of i such that a_i=x. maximize this count by making optimal choices. 
"
p03612, Derangement,"you are given a permutation p_1,p_2,...,p_n consisting of 1,2,..,n.
you can perform the following operation any number of times (possibly zero): operation: swap two adjacent elements in the permutation. you want to have p_i ≠ i for all 1≤i≤n.
find the minimum required number of operations to achieve this. 
"
p03613, Together,"you are given an integer sequence of length n, a_1,a_2,...,a_n. for each 1≤i≤n, you have three choices: add 1 to a_i, subtract 1 from a_i or do nothing. after these operations, you select an integer x and count the number of i such that a_i=x. maximize this count by making optimal choices. 
"
p03614, Derangement,"you are given a permutation p_1,p_2,...,p_n consisting of 1,2,..,n.
you can perform the following operation any number of times (possibly zero): operation: swap two adjacent elements in the permutation. you want to have p_i ≠ i for all 1≤i≤n.
find the minimum required number of operations to achieve this. 
"
p03615, ConvexScore,"you are given n points (x_i,y_i) located on a two-dimensional plane.
consider a subset s of the n points that forms a convex polygon.
here, we say a set of points s forms a convex polygon when there exists a convex polygon with a positive area that has the same set of vertices as s. all the interior angles of the polygon must be strictly less than 180°. for example, in the figure above, {a,c,e} and {b,d,e} form convex polygons; {a,c,d,e}, {a,b,c,e}, {a,b,c}, {d,e} and {} do not. for a given set s, let n be the number of the points among the n points that are inside the convex hull of s (including the boundary and vertices). then, we will define the score of s as 2^{n-|s|}. compute the scores of all possible sets s that form convex polygons, and find the sum of all those scores. however, since the sum can be extremely large, print the sum modulo 998244353. 
"
p03616, Sandglass,"we have a sandglass consisting of two bulbs, bulb a and bulb b. these bulbs contain some amount of sand.
when we put the sandglass, either bulb a or b lies on top of the other and becomes the upper bulb. the other bulb becomes the lower bulb. the sand drops from the upper bulb to the lower bulb at a rate of 1 gram per second.
when the upper bulb no longer contains any sand, nothing happens. initially at time 0, bulb a is the upper bulb and contains a grams of sand; bulb b contains x-a grams of sand (for a total of x grams). we will turn over the sandglass at time r_1,r_2,..,r_k. assume that this is an instantaneous action and takes no time. here, time t refer to the time t seconds after time 0. you are given q queries.
each query is in the form of (t_i,a_i).
for each query, assume that a=a_i and find the amount of sand that would be contained in bulb a at time t_i. 
"
p03617, Ice Tea Store,"you've come to your favorite store infinitesco to buy some ice tea. the store sells ice tea in bottles of different volumes at different costs.
specifically, a 0.25-liter bottle costs q yen, a 0.5-liter bottle costs h yen, a 1-liter bottle costs s yen, and a 2-liter bottle costs d yen.
the store has an infinite supply of bottles of each type. you want to buy exactly n liters of ice tea. how many yen do you have to spend? 
"
p03618, Reverse and Compare,"you have a string a = a_1 a_2 ... a_n consisting of lowercase english letters. you can choose any two indices i and j such that 1 \leq i \leq j \leq n and reverse substring a_i a_{i+1} ... a_j. you can perform this operation at most once. how many different strings can you obtain? 
"
p03619, Fountain Walk,"in the city of nevermore, there are 10^8 streets and 10^8 avenues, both numbered from 0 to 10^8-1.
all streets run straight from west to east, and all avenues run straight from south to north.
the distance between neighboring streets and between neighboring avenues is exactly 100 meters. every street intersects every avenue. every intersection can be described by pair (x, y), where x is avenue id and y is street id. there are n fountains in the city, situated at intersections (x_i, y_i).
unlike normal intersections, there's a circle with radius 10 meters centered at the intersection, and there are no road parts inside this circle. the picture below shows an example of how a part of the city with roads and fountains may look like. city governors don't like encountering more than one fountain while moving along the same road.
therefore, every street contains at most one fountain on it, as well as every avenue. citizens can move along streets, avenues and fountain perimeters.
what is the shortest distance one needs to cover in order to get from intersection (x_1, y_1) to intersection (x_2, y_2)? 
"
p03620, Shift and Flip,"you have two strings a = a_1 a_2 ... a_n and b = b_1 b_2 ... b_n of the same length consisting of 0 and 1. you can transform a using the following operations in any order and as many times as you want: shift a by one character to the left (i.e., if a = a_1 a_2 ... a_n, replace a with a_2 a_3 ... a_n a_1). shift a by one character to the right (i.e., if a = a_1 a_2 ... a_n, replace a with a_n a_1 a_2 ... a_{n-1}). choose any i such that b_i = 1. flip a_i (i.e., set a_i = 1 - a_i). you goal is to make strings a and b equal. print the smallest number of operations required to achieve this, or -1 if the goal is unreachable. 
"
p03621, Shuffle and Swap,"you have two strings a = a_1 a_2 ... a_n and b = b_1 b_2 ... b_n of the same length consisting of 0 and 1.
the number of 1's in a and b is equal. you've decided to transform a using the following algorithm: let a_1, a_2, ..., a_k be the indices of 1's in a. let b_1, b_2, ..., b_k be the indices of 1's in b. replace a and b with their random permutations, chosen independently and uniformly. for each i from 1 to k, in order, swap a_{a_i} and a_{b_i}. let p be the probability that strings a and b become equal after the procedure above. let z = p \times (k!)^2. clearly, z is an integer. find z modulo 998244353. 
"
p03622, Yes or No,"you are participating in a quiz with n + m questions and yes/no answers. it's known in advance that there are n questions with answer yes and m questions with answer no, but the questions are given to you in random order. you have no idea about correct answers to any of the questions.
you answer questions one by one, and for each question you answer, you get to know the correct answer immediately after answering. suppose you follow a strategy maximizing the expected number of correct answers you give. let this expected number be p/q, an irreducible fraction. let m = 998244353.
it can be proven that a unique integer r between 0 and m - 1 exists such that p = q \times r modulo m,
and it is equal to p \times q^{-1} modulo m, where q^{-1} is the modular inverse of q.
find r. 
"
p03623, Meal Delivery,"snuke lives at position x on a number line.
on this line, there are two stores a and b, respectively at position a and b, that offer food for delivery. snuke decided to get food delivery from the closer of stores a and b.
find out which store is closer to snuke's residence. here, the distance between two points s and t on a number line is represented by |s-t|. 
"
p03624, Not Found,"you are given a string s consisting of lowercase english letters.
find the lexicographically (alphabetically) smallest lowercase english letter that does not occur in s.
if every lowercase english letter occurs in s, print none instead. 
"
p03625, Make a Rectangle,"we have n sticks with negligible thickness.
the length of the i-th stick is a_i. snuke wants to select four different sticks from these sticks and form a rectangle (including a square), using the sticks as its sides.
find the maximum possible area of the rectangle. 
"
p03626, Coloring Dominoes,"we have a board with a 2 \times n grid.
snuke covered the board with n dominoes without overlaps.
here, a domino can cover a 1 \times 2 or 2 \times 1 square. then, snuke decided to paint these dominoes using three colors: red, cyan and green.
two dominoes that are adjacent by side should be painted by different colors.
here, it is not always necessary to use all three colors. find the number of such ways to paint the dominoes, modulo 1000000007. the arrangement of the dominoes is given to you as two strings s_1 and s_2 in the following manner: each domino is represented by a different english letter (lowercase or uppercase). the j-th character in s_i represents the domino that occupies the square at the i-th row from the top and j-th column from the left. 

"
p03627, Make a Rectangle,"we have n sticks with negligible thickness.
the length of the i-th stick is a_i. snuke wants to select four different sticks from these sticks and form a rectangle (including a square), using the sticks as its sides.
find the maximum possible area of the rectangle. 
"
p03628, Coloring Dominoes,"we have a board with a 2 \times n grid.
snuke covered the board with n dominoes without overlaps.
here, a domino can cover a 1 \times 2 or 2 \times 1 square. then, snuke decided to paint these dominoes using three colors: red, cyan and green.
two dominoes that are adjacent by side should be painted by different colors.
here, it is not always necessary to use all three colors. find the number of such ways to paint the dominoes, modulo 1000000007. the arrangement of the dominoes is given to you as two strings s_1 and s_2 in the following manner: each domino is represented by a different english letter (lowercase or uppercase). the j-th character in s_i represents the domino that occupies the square at the i-th row from the top and j-th column from the left. 

"
p03629, Don't Be a Subsequence,"a subsequence of a string s is a string that can be obtained by deleting zero or more characters from s without changing the order of the remaining characters.
for example, arc, artistic and (an empty string) are all subsequences of artistic; abc and ci are not. you are given a string a consisting of lowercase english letters.
find the shortest string among the strings consisting of lowercase english letters that are not subsequences of a.
if there are more than one such string, find the lexicographically smallest one among them. 
"
p03630, Flip and Rectangles,"we have a board with an h \times w grid.
each square in the grid is painted in black or white. the square at the i-th row from the top and j-th column from the left is black if the j-th character in s_i is #, and white if that character is .. snuke can perform the following operation on the grid any number of times: select a row or column in the grid, and invert the color of all the squares in that row or column (that is, black squares become white and vice versa). then, snuke draws a rectangle along grid lines. here, all the squares contained in the rectangle must be painted in black. find the maximum possible area of snuke's rectangle when the operation is performed optimally. 
"
p03631, Palindromic Number,"you are given a three-digit positive integer n.
determine whether n is a palindromic number.
here, a palindromic number is an integer that reads the same backward as forward in decimal notation. 
"
p03632, Two Switches,"alice and bob are controlling a robot. they each have one switch that controls the robot.
alice started holding down her button a second after the start-up of the robot, and released her button b second after the start-up.
bob started holding down his button c second after the start-up, and released his button d second after the start-up.
for how many seconds both alice and bob were holding down their buttons? 
"
p03633, Multiple Clocks,"we have n clocks. the hand of the i-th clock (1≤i≤n) rotates through 360° in exactly t_i seconds.
initially, the hand of every clock stands still, pointing directly upward.
now, dolphin starts all the clocks simultaneously.
in how many seconds will the hand of every clock point directly upward again? 
"
p03634, Transit Tree Path,"you are given a tree with n vertices.
here, a tree is a kind of graph, and more specifically, a connected undirected graph with n-1 edges, where n is the number of its vertices.
the i-th edge (1≤i≤n-1) connects vertices a_i and b_i, and has a length of c_i. you are also given q queries and an integer k. in the j-th query (1≤j≤q): find the length of the shortest path from vertex x_j and vertex y_j via vertex k. 

"
p03635,City,"in k-city, there are n streets running east-west, and m streets running north-south. each street running east-west and each street running north-south cross each other. we will call the smallest area that is surrounded by four streets a block. how many blocks there are in k-city? 
"
p03636, i18n,"the word internationalization is sometimes abbreviated to i18n.
this comes from the fact that there are 18 letters between the first i and the last n. you are given a string s of length at least 3 consisting of lowercase english letters.
abbreviate s in the same way. 
"
p03637,adjacent,"we have a sequence of length n, a = (a_1, a_2, ..., a_n).
each a_i is a positive integer. snuke's objective is to permute the element in a so that the following condition is satisfied: for each 1 ≤ i ≤ n - 1, the product of a_i and a_{i + 1} is a multiple of 4. determine whether snuke can achieve his objective. 
"
p03638, Grid Coloring,"we have a grid with h rows and w columns of squares.
snuke is painting these squares in colors 1, 2, ..., n.
here, the following conditions should be satisfied: for each i (1 ≤ i ≤ n), there are exactly a_i squares painted in color i. here, a_1 + a_2 + ... + a_n = h w. for each i (1 ≤ i ≤ n), the squares painted in color i are 4-connected. that is, every square painted in color i can be reached from every square painted in color i by repeatedly traveling to a horizontally or vertically adjacent square painted in color i. find a way to paint the squares so that the conditions are satisfied.
it can be shown that a solution always exists. 
"
p03639,adjacent,"we have a sequence of length n, a = (a_1, a_2, ..., a_n).
each a_i is a positive integer. snuke's objective is to permute the element in a so that the following condition is satisfied: for each 1 ≤ i ≤ n - 1, the product of a_i and a_{i + 1} is a multiple of 4. determine whether snuke can achieve his objective. 
"
p03640, Grid Coloring,"we have a grid with h rows and w columns of squares.
snuke is painting these squares in colors 1, 2, ..., n.
here, the following conditions should be satisfied: for each i (1 ≤ i ≤ n), there are exactly a_i squares painted in color i. here, a_1 + a_2 + ... + a_n = h w. for each i (1 ≤ i ≤ n), the squares painted in color i are 4-connected. that is, every square painted in color i can be reached from every square painted in color i by repeatedly traveling to a horizontally or vertically adjacent square painted in color i. find a way to paint the squares so that the conditions are satisfied.
it can be shown that a solution always exists. 
"
p03641, Young Maids,"let n be a positive even number. we have a permutation of (1, 2, ..., n), p = (p_1, p_2, ..., p_n).
snuke is constructing another permutation of (1, 2, ..., n), q, following the procedure below. first, let q be an empty sequence.
then, perform the following operation until p becomes empty: select two adjacent elements in p, and call them x and y in order. remove x and y from p (reducing the length of p by 2), and insert x and y, preserving the original order, at the beginning of q. when p becomes empty, q will be a permutation of (1, 2, ..., n). find the lexicographically smallest permutation that can be obtained as q. 
"
p03642, Prime Flip,"there are infinitely many cards, numbered 1, 2, 3, ...
initially, cards x_1, x_2, ..., x_n are face up, and the others are face down. snuke can perform the following operation repeatedly: select a prime p greater than or equal to 3. then, select p consecutive cards and flip all of them. snuke's objective is to have all the cards face down.
find the minimum number of operations required to achieve the objective. 
"
p03643, ABCxxx,"this contest, atcoder beginner contest, is abbreviated as abc. when we refer to a specific round of abc, a three-digit number is appended after abc. for example, abc680 is the 680th round of abc. what is the abbreviation for the n-th round of abc? write a program to output the answer. 
"
p03644, Break Number,"takahashi loves numbers divisible by 2. you are given a positive integer n. among the integers between 1 and n (inclusive), find the one that can be divisible by 2 for the most number of times. the solution is always unique. here, the number of times an integer can be divisible by 2, is how many times the integer can be divided by 2 without remainder. for example, 6 can be divided by 2 once: 6 -&gt; 3. 8 can be divided by 2 three times: 8 -&gt; 4 -&gt; 2 -&gt; 1. 3 can be divided by 2 zero times. 

"
p03645, Cat Snuke and a Voyage,"in takahashi kingdom, there is an archipelago of n islands, called takahashi islands.
for convenience, we will call them island 1, island 2, ..., island n. there are m kinds of regular boat services between these islands.
each service connects two islands. the i-th service connects island a_i and island b_i. cat snuke is on island 1 now, and wants to go to island n.
however, it turned out that there is no boat service from island 1 to island n, so he wants to know whether it is possible to go to island n by using two boat services. help him. 
"
p03646, Decrease (Contestant ver.),"we have a sequence of length n consisting of non-negative integers. consider performing the following operation on this sequence until the largest element in this sequence becomes n-1 or smaller. determine the largest element in the sequence (if there is more than one, choose one). decrease the value of this element by n, and increase each of the other elements by 1. it can be proved that the largest element in the sequence becomes n-1 or smaller after a finite number of operations. you are given an integer k. find an integer sequence a_i such that the number of times we will perform the above operation is exactly k. it can be shown that there is always such a sequence under the constraints on input and output in this problem. 
"
p03647, Cat Snuke and a Voyage,"in takahashi kingdom, there is an archipelago of n islands, called takahashi islands.
for convenience, we will call them island 1, island 2, ..., island n. there are m kinds of regular boat services between these islands.
each service connects two islands. the i-th service connects island a_i and island b_i. cat snuke is on island 1 now, and wants to go to island n.
however, it turned out that there is no boat service from island 1 to island n, so he wants to know whether it is possible to go to island n by using two boat services. help him. 
"
p03648, Decrease (Contestant ver.),"we have a sequence of length n consisting of non-negative integers. consider performing the following operation on this sequence until the largest element in this sequence becomes n-1 or smaller. determine the largest element in the sequence (if there is more than one, choose one). decrease the value of this element by n, and increase each of the other elements by 1. it can be proved that the largest element in the sequence becomes n-1 or smaller after a finite number of operations. you are given an integer k. find an integer sequence a_i such that the number of times we will perform the above operation is exactly k. it can be shown that there is always such a sequence under the constraints on input and output in this problem. 
"
p03649, Decrease (Judge ver.),"we have a sequence of length n consisting of non-negative integers. consider performing the following operation on this sequence until the largest element in this sequence becomes n-1 or smaller. (the operation is the same as the one in problem d.) determine the largest element in the sequence (if there is more than one, choose one). decrease the value of this element by n, and increase each of the other elements by 1. it can be proved that the largest element in the sequence becomes n-1 or smaller after a finite number of operations. you are given the sequence a_i. find the number of times we will perform the above operation. 
"
p03650, Namori Grundy,"there is a directed graph with n vertices and n edges. the vertices are numbered 1, 2, ..., n. the graph has the following n edges: (p_1, 1), (p_2, 2), ..., (p_n, n), and the graph is weakly connected. here, an edge from vertex u to vertex v is denoted by (u, v), and a weakly connected graph is a graph which would be connected if each edge was bidirectional. we would like to assign a value to each of the vertices in this graph so that the following conditions are satisfied. here, a_i is the value assigned to vertex i. each a_i is a non-negative integer. for each edge (i, j), a_i \neq a_j holds. for each i and each integer x(0 ≤ x &lt; a_i), there exists a vertex j such that the edge (i, j) exists and x = a_j holds. determine whether there exists such an assignment. 
"
p03651, Getting Difference,"there is a box containing n balls. the i-th ball has the integer a_i written on it.
snuke can perform the following operation any number of times: take out two balls from the box. then, return them to the box along with a new ball, on which the absolute difference of the integers written on the two balls is written. determine whether it is possible for snuke to reach the state where the box contains a ball on which the integer k is written. 
"
p03652, Sports Festival,"takahashi is hosting an sports meet.
there are n people who will participate. these people are conveniently numbered 1 through n.
also, there are m options of sports for this event. these sports are numbered 1 through m.
among these options, takahashi will select one or more sports (possibly all) to be played in the event. takahashi knows that person i's j-th favorite sport is sport a_{ij}.
each person will only participate in his/her most favorite sport among the ones that are actually played in the event, and will not participate in the other sports. takahashi is worried that one of the sports will attract too many people.
therefore, he would like to carefully select sports to be played so that the number of the participants in the sport with the largest number of participants is minimized.
find the minimum possible number of the participants in the sport with the largest number of participants. 
"
p03653, Coins,"there are x+y+z people, conveniently numbered 1 through x+y+z.
person i has a_i gold coins, b_i silver coins and c_i bronze coins. snuke is thinking of getting gold coins from x of those people, silver coins from y of the people and bronze coins from z of the people.
it is not possible to get two or more different colors of coins from a single person.
on the other hand, a person will give all of his/her coins of the color specified by snuke. snuke would like to maximize the total number of coins of all colors he gets.
find the maximum possible number of coins. 
"
p03654, Tree and Hamilton Path,"there is a tree with n vertices, numbered 1 through n.
the i-th edge in this tree connects vertices a_i and b_i and has a length of c_i. joisino created a complete graph with n vertices.
the length of the edge connecting vertices u and v in this graph, is equal to the shortest distance between vertices u and v in the tree above. joisino would like to know the length of the longest hamiltonian path (see notes) in this complete graph.
find the length of that path. 
"
p03655, Sightseeing Plan,"joisino is planning on touring takahashi town.
the town is divided into square sections by north-south and east-west lines.
we will refer to the section that is the x-th from the west and the y-th from the north as (x,y). joisino thinks that a touring plan is good if it satisfies the following conditions: let (p,q) be the section where she starts the tour. then, x_1 \leq p \leq x_2 and y_1 \leq q \leq y_2 hold. 
 let (s,t) be the section where she has lunch. then, x_3 \leq s \leq x_4 and y_3 \leq t \leq y_4 hold. 
 let (u,v) be the section where she ends the tour. then, x_5 \leq u \leq x_6 and y_5 \leq v \leq y_6 hold. 
 by repeatedly moving to the adjacent section (sharing a side), she travels from the starting section to the ending section in the shortest distance, passing the lunch section on the way. 
 two touring plans are considered different if at least one of the following is different: the starting section, the lunch section, the ending section, and the sections that are visited on the way.
joisino would like to know how many different good touring plans there are.
find the number of the different good touring plans.
since it may be extremely large, find the count modulo 10^9+7. 
"
p03656, Two Trees,"there are two rooted trees, each with n vertices.
the vertices of each tree are numbered 1 through n.
in the first tree, the parent of vertex i is vertex a_i.
here, a_i=-1 if vertex i is the root of the first tree.
in the second tree, the parent of vertex i is vertex b_i.
here, b_i=-1 if vertex i is the root of the second tree. snuke would like to construct an integer sequence of length n, x_1 , x_2 , ... , x_n, that satisfies the following condition: for each vertex on each tree, let the indices of its descendants including itself be a_1 , a_2 , ..., a_k. then, abs(x_{a_1} + x_{a_2} + ... + x_{a_k})=1 holds. determine whether it is possible to construct such a sequence. if the answer is possible, find one such sequence. 
"
p03657, Sharing Cookies,"snuke is giving cookies to his three goats. he has two cookie tins. one contains a cookies, and the other contains b cookies. he can thus give a cookies, b cookies or a+b cookies to his goats (he cannot open the tins). your task is to determine whether snuke can give cookies to his three goats so that each of them can have the same number of cookies. 
"
p03658, Snake Toy,"snuke has n sticks.
the length of the i-th stick is l_i. snuke is making a snake toy by joining k of the sticks together. the length of the toy is represented by the sum of the individual sticks that compose it.
find the maximum possible length of the toy. 
"
p03659, Splitting Pile,"snuke and raccoon have a heap of n cards. the i-th card from the top has the integer a_i written on it. they will share these cards.
first, snuke will take some number of cards from the top of the heap, then raccoon will take all the remaining cards.
here, both snuke and raccoon have to take at least one card. let the sum of the integers on snuke's cards and raccoon's cards be x and y, respectively.
they would like to minimize |x-y|.
find the minimum possible value of |x-y|. 
"
p03660, Fennec VS. Snuke,"fennec and snuke are playing a board game. on the board, there are n cells numbered 1 through n, and n-1 roads, each connecting two cells. cell a_i is adjacent to cell b_i through the i-th road. every cell can be reached from every other cell by repeatedly traveling to an adjacent cell. in terms of graph theory, the graph formed by the cells and the roads is a tree. initially, cell 1 is painted black, and cell n is painted white. the other cells are not yet colored.
fennec (who goes first) and snuke (who goes second) alternately paint an uncolored cell.
more specifically, each player performs the following action in her/his turn: fennec: selects an uncolored cell that is adjacent to a black cell, and paints it black. snuke: selects an uncolored cell that is adjacent to a white cell, and paints it white. a player loses when she/he cannot paint a cell. determine the winner of the game when fennec and snuke play optimally. 
"
p03661, Splitting Pile,"snuke and raccoon have a heap of n cards. the i-th card from the top has the integer a_i written on it. they will share these cards.
first, snuke will take some number of cards from the top of the heap, then raccoon will take all the remaining cards.
here, both snuke and raccoon have to take at least one card. let the sum of the integers on snuke's cards and raccoon's cards be x and y, respectively.
they would like to minimize |x-y|.
find the minimum possible value of |x-y|. 
"
p03662, Fennec VS. Snuke,"fennec and snuke are playing a board game. on the board, there are n cells numbered 1 through n, and n-1 roads, each connecting two cells. cell a_i is adjacent to cell b_i through the i-th road. every cell can be reached from every other cell by repeatedly traveling to an adjacent cell. in terms of graph theory, the graph formed by the cells and the roads is a tree. initially, cell 1 is painted black, and cell n is painted white. the other cells are not yet colored.
fennec (who goes first) and snuke (who goes second) alternately paint an uncolored cell.
more specifically, each player performs the following action in her/his turn: fennec: selects an uncolored cell that is adjacent to a black cell, and paints it black. snuke: selects an uncolored cell that is adjacent to a white cell, and paints it white. a player loses when she/he cannot paint a cell. determine the winner of the game when fennec and snuke play optimally. 
"
p03663, Awkward Response,"this is an interactive task. snuke has a favorite positive integer, n. you can ask him the following type of question at most 64 times: ""is n your favorite integer?"" identify n. snuke is twisted, and when asked ""is n your favorite integer?"", he answers ""yes"" if one of the two conditions below is satisfied, and answers ""no"" otherwise: both n \leq n and str(n) \leq str(n) hold. both n &gt; n and str(n) &gt; str(n) hold. here, str(x) is the decimal representation of x (without leading zeros) as a string. for example, str(123) = 123 and str(2000) = 2000.
strings are compared lexicographically. for example, 11111 &lt; 123 and 123456789 &lt; 9. 
"
p03664, Mole and Abandoned Mine,"mole decided to live in an abandoned mine. the structure of the mine is represented by a simple connected undirected graph which consists of n vertices numbered 1 through n and m edges.
the i-th edge connects vertices a_i and b_i, and it costs c_i yen (the currency of japan) to remove it. mole would like to remove some of the edges so that there is exactly one path from vertex 1 to vertex n that does not visit the same vertex more than once. find the minimum budget needed to achieve this. 
"
p03665, Biscuits,"there are n bags of biscuits. the i-th bag contains a_i biscuits. takaki will select some of these bags and eat all of the biscuits inside.
here, it is also possible to select all or none of the bags. he would like to select bags so that the total number of biscuits inside is congruent to p modulo 2.
how many such ways to select bags there are? 
"
p03666, Moderate Differences,"there are n squares in a row.
the leftmost square contains the integer a, and the rightmost contains the integer b. the other squares are empty. aohashi would like to fill the empty squares with integers so that the following condition is satisfied: for any two adjacent squares, the (absolute) difference of the two integers in those squares is between c and d (inclusive). as long as the condition is satisfied, it is allowed to use arbitrarily large or small integers to fill the squares.
determine whether it is possible to fill the squares under the condition. 
"
p03667, Snuke and Spells,"there are n balls in a row.
initially, the i-th ball from the left has the integer a_i written on it. when snuke cast a spell, the following happens: let the current number of balls be k. all the balls with k written on them disappear at the same time. snuke's objective is to vanish all the balls by casting the spell some number of times.
this may not be possible as it is. if that is the case, he would like to modify the integers on the minimum number of balls to make his objective achievable. by the way, the integers on these balls sometimes change by themselves.
there will be m such changes. in the j-th change, the integer on the x_j-th ball from the left will change into y_j. after each change, find the minimum number of modifications of integers on the balls snuke needs to make if he wishes to achieve his objective before the next change occurs. we will assume that he is quick enough in modifying integers. here, note that he does not actually perform those necessary modifications and leaves them as they are. 
"
p03668, Game on Tree,"there is a tree with n vertices numbered 1, 2, ..., n.
the edges of the tree are denoted by (x_i, y_i). on this tree, alice and bob play a game against each other.
starting from alice, they alternately perform the following operation: select an existing edge and remove it from the tree, disconnecting it into two separate connected components. then, remove the component that does not contain vertex 1. a player loses the game when he/she is unable to perform the operation.
determine the winner of the game assuming that both players play optimally. 
"
p03669, Jigsaw,"we have n irregular jigsaw pieces. each piece is composed of three rectangular parts of width 1 and various heights joined together. more specifically: the i-th piece is a part of height h, with another part of height a_i joined to the left, and yet another part of height b_i joined to the right, as shown below. here, the bottom sides of the left and right parts are respectively at c_i and d_i units length above the bottom side of the center part.  snuke is arranging these pieces on a square table of side 10^{100}. here, the following conditions must be held: all pieces must be put on the table. the entire bottom side of the center part of each piece must touch the front side of the table. the entire bottom side of the non-center parts of each piece must either touch the front side of the table, or touch the top side of a part of some other piece. the pieces must not be rotated or flipped. determine whether such an arrangement is possible. 
"
p03670, Zigzag,"there are n(n+1)/2 dots arranged to form an equilateral triangle whose sides consist of n dots, as shown below.
the j-th dot from the left in the i-th row from the top is denoted by (i, j) (1 \leq i \leq n, 1 \leq j \leq i).
also, we will call (i+1, j) immediately lower-left to (i, j), and (i+1, j+1) immediately lower-right to (i, j).  takahashi is drawing m polygonal lines l_1, l_2, ..., l_m by connecting these dots.
each l_i starts at (1, 1), and visits the dot that is immediately lower-left or lower-right to the current dots n-1 times.
more formally, there exist x_{i,1}, ..., x_{i,n} such that: l_i connects the n points (1, x_{i,1}), (2, x_{i,2}), ..., (n, x_{i,n}), in this order. for each j=1, 2, ..., n-1, either x_{i,j+1} = x_{i,j} or x_{i,j+1} = x_{i,j}+1 holds. takahashi would like to draw these lines so that no part of l_{i+1} is to the left of l_{i}.
that is, for each j=1, 2, ..., n, x_{1,j} \leq x_{2,j} \leq ... \leq x_{m,j} must hold. additionally, there are k conditions on the shape of the lines that must be followed.
the i-th condition is denoted by (a_i, b_i, c_i), which means: if c_i=0, l_{a_i} must visit the immediately lower-left dot for the b_i-th move. if c_i=1, l_{a_i} must visit the immediately lower-right dot for the b_i-th move. that is, x_{a_i, {b_i}+1} = x_{a_i, b_i} + c_i must hold. in how many ways can takahashi draw m polygonal lines? find the count modulo 1000000007. 
"
p03671, ringring,"snuke is buying a bicycle.
the bicycle of his choice does not come with a bell, so he has to buy one separately. he has very high awareness of safety, and decides to buy two bells, one for each hand. the store sells three kinds of bells for the price of a, b and c yen (the currency of japan), respectively.
find the minimum total price of two different bells. 
"
p03672, ss,"we will call a string that can be obtained by concatenating two equal strings an even string.
for example, xyzxyz and aaaaaa are even, while ababab and xyzxy are not. you are given an even string s consisting of lowercase english letters.
find the length of the longest even string that can be obtained by deleting one or more characters from the end of s.
it is guaranteed that such a non-empty string exists for a given input. 
"
p03673, pushpush,"you are given an integer sequence of length n, a_1, ..., a_n.
let us consider performing the following n operations on an empty sequence b. the i-th operation is as follows: append a_i to the end of b. reverse the order of the elements in b. find the sequence b obtained after these n operations. 
"
p03674, 11,"you are given an integer sequence of length n+1, a_1,a_2,...,a_{n+1}, which consists of the n integers 1,...,n.
it is known that each of the n integers 1,...,n appears at least once in this sequence. for each integer k=1,...,n+1, find the number of the different subsequences (not necessarily contiguous) of the given sequence with length k, modulo 10^9+7. 
"
p03675, pushpush,"you are given an integer sequence of length n, a_1, ..., a_n.
let us consider performing the following n operations on an empty sequence b. the i-th operation is as follows: append a_i to the end of b. reverse the order of the elements in b. find the sequence b obtained after these n operations. 
"
p03676, 11,"you are given an integer sequence of length n+1, a_1,a_2,...,a_{n+1}, which consists of the n integers 1,...,n.
it is known that each of the n integers 1,...,n appears at least once in this sequence. for each integer k=1,...,n+1, find the number of the different subsequences (not necessarily contiguous) of the given sequence with length k, modulo 10^9+7. 
"
p03677, guruguru,"snuke is buying a lamp.
the light of the lamp can be adjusted to m levels of brightness, represented by integers from 1 through m, by the two buttons on the remote control. the first button is a ""forward"" button. when this button is pressed, the brightness level is increased by 1, except when the brightness level is m, in which case the brightness level becomes 1. the second button is a ""favorite"" button. when this button is pressed, the brightness level becomes the favorite brightness level x, which is set when the lamp is purchased. snuke is thinking of setting the favorite brightness level x so that he can efficiently adjust the brightness.
he is planning to change the brightness n-1 times. in the i-th change, the brightness level is changed from a_i to a_{i+1}. the initial brightness level is a_1.
find the number of times snuke needs to press the buttons when x is set to minimize this number. 
"
p03678, SS,"we will call a string that can be obtained by concatenating two equal strings an even string.
for example, xyzxyz and aaaaaa are even, while ababab and xyzxy are not. for a non-empty string s, we will define f(s) as the shortest even string that can be obtained by appending one or more characters to the end of s.
for example, f(abaaba)=abaababaab.
it can be shown that f(s) is uniquely determined for a non-empty string s. you are given an even string s consisting of lowercase english letters.
for each letter in the lowercase english alphabet, find the number of its occurrences from the l-th character through the r-th character of f^{10^{100}} (s). here, f^{10^{100}} (s) is the string f(f(f( ... f(s) ... ))) obtained by applying f to s 10^{100} times. 
"
p03679, Expired?,"takahashi has a strong stomach. he never gets a stomachache from eating something whose ""best-by"" date is at most x days earlier.
he gets a stomachache if the ""best-by"" date of the food is x+1 or more days earlier, though. other than that, he finds the food delicious if he eats it not later than the ""best-by"" date. otherwise, he does not find it delicious. takahashi bought some food a days before the ""best-by"" date, and ate it b days after he bought it. write a program that outputs delicious if he found it delicious, safe if he did not found it delicious but did not get a stomachache either, and dangerous if he got a stomachache. 
"
p03680, Trained?,"takahashi wants to gain muscle, and decides to work out at atcoder gym. the exercise machine at the gym has n buttons, and exactly one of the buttons is lighten up.
these buttons are numbered 1 through n.
when button i is lighten up and you press it, the light is turned off, and then button a_i will be lighten up. it is possible that i=a_i.
when button i is not lighten up, nothing will happen by pressing it. initially, button 1 is lighten up. takahashi wants to quit pressing buttons when button 2 is lighten up. determine whether this is possible. if the answer is positive, find the minimum number of times he needs to press buttons. 
"
p03681, Reconciled?,"snuke has n dogs and m monkeys. he wants them to line up in a row. as a japanese saying goes, these dogs and monkeys are on bad terms. (""ken'en no naka"", literally ""the relationship of dogs and monkeys"", means a relationship of mutual hatred.) snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys. how many such arrangements there are? find the count modulo 10^9+7 (since animals cannot understand numbers larger than that).
here, dogs and monkeys are both distinguishable. also, two arrangements that result from reversing each other are distinguished. 
"
p03682, Built?,"there are n towns on a plane. the i-th town is located at the coordinates (x_i,y_i). there may be more than one town at the same coordinates. you can build a road between two towns at coordinates (a,b) and (c,d) for a cost of min(|a-c|,|b-d|) yen (the currency of japan). it is not possible to build other types of roads. your objective is to build roads so that it will be possible to travel between every pair of towns by traversing roads. at least how much money is necessary to achieve this? 
"
p03683, Reconciled?,"snuke has n dogs and m monkeys. he wants them to line up in a row. as a japanese saying goes, these dogs and monkeys are on bad terms. (""ken'en no naka"", literally ""the relationship of dogs and monkeys"", means a relationship of mutual hatred.) snuke is trying to reconsile them, by arranging the animals so that there are neither two adjacent dogs nor two adjacent monkeys. how many such arrangements there are? find the count modulo 10^9+7 (since animals cannot understand numbers larger than that).
here, dogs and monkeys are both distinguishable. also, two arrangements that result from reversing each other are distinguished. 
"
p03684, Built?,"there are n towns on a plane. the i-th town is located at the coordinates (x_i,y_i). there may be more than one town at the same coordinates. you can build a road between two towns at coordinates (a,b) and (c,d) for a cost of min(|a-c|,|b-d|) yen (the currency of japan). it is not possible to build other types of roads. your objective is to build roads so that it will be possible to travel between every pair of towns by traversing roads. at least how much money is necessary to achieve this? 
"
p03685, Connected?,"snuke is playing a puzzle game.
in this game, you are given a rectangular board of dimensions r × c, filled with numbers. each integer i from 1 through n is written twice, at the coordinates (x_{i,1},y_{i,1}) and (x_{i,2},y_{i,2}). the objective is to draw a curve connecting the pair of points where the same integer is written, for every integer from 1 through n.
here, the curves may not go outside the board or cross each other. determine whether this is possible. 
"
p03686, Exhausted?,"there are m chairs arranged in a line. the coordinate of the i-th chair (1 ≤ i ≤ m) is i. n people of the takahashi clan played too much games, and they are all suffering from backaches. they need to sit in chairs and rest, but they are particular about which chairs they sit in. specifically, the i-th person wishes to sit in a chair whose coordinate is not greater than l_i, or not less than r_i. naturally, only one person can sit in the same chair. it may not be possible for all of them to sit in their favorite chairs, if nothing is done.
aoki, who cares for the health of the people of the takahashi clan, decides to provide additional chairs so that all of them can sit in chairs at their favorite positions. additional chairs can be placed at arbitrary real coordinates. find the minimum required number of additional chairs. 
"
p03687, Shrinking,"snuke can change a string t of length n into a string t' of length n - 1 under the following rule: for each i (1 ≤ i ≤ n - 1), the i-th character of t' must be either the i-th or (i + 1)-th character of t. there is a string s consisting of lowercase english letters.
snuke's objective is to apply the above operation to s repeatedly so that all the characters in s are the same.
find the minimum necessary number of operations. 
"
p03688, Colorful Hats,"there are n cats.
we number them from 1 through n. each of the cats wears a hat.
cat i says: ""there are exactly a_i different colors among the n - 1 hats worn by the cats except me."" determine whether there exists a sequence of colors of the hats that is consistent with the remarks of the cats. 
"
p03689, Rectangle,"you are given four integers: h, w, h and w (1 ≤ h ≤ h, 1 ≤ w ≤ w).
determine whether there exists a matrix such that all of the following conditions are held, and construct one such matrix if the answer is positive: the matrix has h rows and w columns. each element of the matrix is an integer between -10^9 and 10^9 (inclusive). the sum of all the elements of the matrix is positive. the sum of all the elements within every subrectangle with h rows and w columns in the matrix is negative. 

"
p03690, XOR Replace,"there is a sequence of length n: a = (a_1, a_2, ..., a_n).
here, each a_i is a non-negative integer. snuke can repeatedly perform the following operation: let the xor of all the elements in a be x. select an integer i (1 ≤ i ≤ n) and replace a_i with x. snuke's objective is to match a with another sequence b = (b_1, b_2, ..., b_n).
here, each b_i is a non-negative integer. determine whether the objective is achievable, and find the minimum necessary number of operations if the answer is positive. 
"
p03691, Poor Turkeys,"there are n turkeys.
we number them from 1 through n. m men will visit here one by one.
the i-th man to visit will take the following action: if both turkeys x_i and y_i are alive: selects one of them with equal probability, then eats it. if either turkey x_i or y_i is alive (but not both): eats the alive one. if neither turkey x_i nor y_i is alive: does nothing. find the number of pairs (i,\ j) (1 ≤ i &lt; j ≤ n) such that the following condition is held: the probability of both turkeys i and j being alive after all the men took actions, is greater than 0. 

"
p03692, Games on DAG,"there is a directed graph g with n vertices and m edges.
the vertices are numbered 1 through n, and the edges are numbered 1 through m.
edge i is directed from x_i to y_i.
here, x_i &lt; y_i holds.
also, there are no multiple edges in g. consider selecting a subset of the set of the m edges in g, and removing these edges from g to obtain another graph g'.
there are 2^m different possible graphs as g'. alice and bob play against each other in the following game played on g'.
first, place two pieces on vertices 1 and 2, one on each.
then, starting from alice, alice and bob alternately perform the following operation: select an edge i such that there is a piece placed on vertex x_i, and move the piece to vertex y_i (if there are two pieces on vertex x_i, only move one). the two pieces are allowed to be placed on the same vertex. the player loses when he/she becomes unable to perform the operation.
we assume that both players play optimally. among the 2^m different possible graphs as g', how many lead to alice's victory?
find the count modulo 10^9+7. 
"
p03693, RGB Cards,"atcodeer has three cards, one red, one green and one blue.
an integer between 1 and 9 (inclusive) is written on each card: r on the red card, g on the green card and b on the blue card.
we will arrange the cards in the order red, green and blue from left to right, and read them as a three-digit integer.
is this integer a multiple of 4?   
"
p03694, Traveling AtCoDeer Problem,"it is only six months until christmas, and atcodeer the reindeer is now planning his travel to deliver gifts.
there are n houses along topcodeer street. the i-th house is located at coordinate a_i. he has decided to deliver gifts to all these houses.
find the minimum distance to be traveled when atcodeer can start and end his travel at any positions.   
"
p03695, Colorful Leaderboard,"in atcoder, a person who has participated in a contest receives a color, which corresponds to the person's rating as follows:   rating 1-399 : gray rating 400-799 : brown rating 800-1199 : green rating 1200-1599 : cyan rating 1600-1999 : blue rating 2000-2399 : yellow rating 2400-2799 : orange rating 2800-3199 : red other than the above, a person whose rating is 3200 or higher can freely pick his/her color, which can be one of the eight colors above or not.
currently, there are n users who have participated in a contest in atcoder, and the i-th user has a rating of a_i.
find the minimum and maximum possible numbers of different colors of the users.   
"
p03696, Insertion,"you are given a string s of length n consisting of ( and ). your task is to insert some number of ( and ) into s to obtain a correct bracket sequence.
here, a correct bracket sequence is defined as follows:   () is a correct bracket sequence. if x is a correct bracket sequence, the concatenation of (, x and ) in this order is also a correct bracket sequence. if x and y are correct bracket sequences, the concatenation of x and y in this order is also a correct bracket sequence. every correct bracket sequence can be derived from the rules above. find the shortest correct bracket sequence that can be obtained. if there is more than one such sequence, find the lexicographically smallest one. 
"
p03697, Restricted,"you are given two integers a and b as the input. output the value of a + b. however, if a + b is 10 or greater, output error instead. 
"
p03698, Varied,"you are given a string s consisting of lowercase english letters. determine whether all the characters in s are different. 
"
p03699, Bugged,"you are taking a computer-based examination. the examination consists of n questions, and the score allocated to the i-th question is s_i. your answer to each question will be judged as either ""correct"" or ""incorrect"", and your grade will be the sum of the points allocated to questions that are answered correctly. when you finish answering the questions, your answers will be immediately judged and your grade will be displayed... if everything goes well. however, the examination system is actually flawed, and if your grade is a multiple of 10, the system displays 0 as your grade. otherwise, your grade is displayed correctly. in this situation, what is the maximum value that can be displayed as your grade? 
"
p03700, Widespread,"you are going out for a walk, when you suddenly encounter n monsters. each monster has a parameter called health, and the health of the i-th monster is h_i at the moment of encounter. a monster will vanish immediately when its health drops to 0 or below. fortunately, you are a skilled magician, capable of causing explosions that damage monsters. in one explosion, you can damage monsters as follows: select an alive monster, and cause an explosion centered at that monster. the health of the monster at the center of the explosion will decrease by a, and the health of each of the other monsters will decrease by b. here, a and b are predetermined parameters, and a &gt; b holds. at least how many explosions do you need to cause in order to vanish all the monsters? 
"
p03701, Bugged,"you are taking a computer-based examination. the examination consists of n questions, and the score allocated to the i-th question is s_i. your answer to each question will be judged as either ""correct"" or ""incorrect"", and your grade will be the sum of the points allocated to questions that are answered correctly. when you finish answering the questions, your answers will be immediately judged and your grade will be displayed... if everything goes well. however, the examination system is actually flawed, and if your grade is a multiple of 10, the system displays 0 as your grade. otherwise, your grade is displayed correctly. in this situation, what is the maximum value that can be displayed as your grade? 
"
p03702, Widespread,"you are going out for a walk, when you suddenly encounter n monsters. each monster has a parameter called health, and the health of the i-th monster is h_i at the moment of encounter. a monster will vanish immediately when its health drops to 0 or below. fortunately, you are a skilled magician, capable of causing explosions that damage monsters. in one explosion, you can damage monsters as follows: select an alive monster, and cause an explosion centered at that monster. the health of the monster at the center of the explosion will decrease by a, and the health of each of the other monsters will decrease by b. here, a and b are predetermined parameters, and a &gt; b holds. at least how many explosions do you need to cause in order to vanish all the monsters? 
"
p03703, Meaningful Mean,"you are given an integer sequence of length n, a = {a_1, a_2, …, a_n}, and an integer k. a has n(n+1)/2 non-empty contiguous subsequences, {a_l, a_{l+1}, …, a_r} (1 ≤ l ≤ r ≤ n). among them, how many have an arithmetic mean that is greater than or equal to k? 
"
p03704, Mirrored,"for a positive integer n, we denote the integer obtained by reversing the decimal notation of n (without leading zeroes) by rev(n). for example, rev(123) = 321 and rev(4000) = 4. you are given a positive integer d. how many positive integers n satisfy rev(n) = n + d? 
"
p03705, A+...+B Problem,"snuke has n integers. among them, the smallest is a, and the largest is b.
we are interested in the sum of those n integers. how many different possible sums there are? 
"
p03706, Evilator,"skenu constructed a building that has n floors. the building has an elevator that stops at every floor. there are buttons to control the elevator, but skenu thoughtlessly installed only one button on each floor - up or down.
this means that, from each floor, one can only go in one direction.
if s_i is u, only ""up"" button is installed on the i-th floor and one can only go up; if s_i is d, only ""down"" button is installed on the i-th floor and one can only go down. the residents have no choice but to go to their destination floors via other floors if necessary.
find the sum of the following numbers over all ordered pairs of two floors (i,j): the minimum number of times one needs to take the elevator to get to the j-th floor from the i-th floor. 
"
p03707, Nuske vs Phantom Thnook,"nuske has a grid with n rows and m columns of squares. the rows are numbered 1 through n from top to bottom, and the columns are numbered 1 through m from left to right.
each square in the grid is painted in either blue or white. if s_{i,j} is 1, the square at the i-th row and j-th column is blue; if s_{i,j} is 0, the square is white.
for every pair of two blue square a and b, there is at most one path that starts from a, repeatedly proceeds to an adjacent (side by side) blue square and finally reaches b, without traversing the same square more than once. phantom thnook, nuske's eternal rival, gives q queries to nuske. the i-th query consists of four integers x_{i,1}, y_{i,1}, x_{i,2} and y_{i,2} and asks him the following: when the rectangular region of the grid bounded by (and including) the x_{i,1}-th row, x_{i,2}-th row, y_{i,1}-th column and y_{i,2}-th column is cut out, how many connected components consisting of blue squares there are in the region? process all the queries. 
"
p03708, A or...or B Problem,"nukes has an integer that can be represented as the bitwise or of one or more integers between a and b (inclusive).
how many possible candidates of the value of nukes's integer there are? 
"
p03709, Mr.Aoki Incubator,"takahashi is an expert of clone jutsu, a secret art that creates copies of his body. on a number line, there are n copies of takahashi, numbered 1 through n.
the i-th copy is located at position x_i and starts walking with velocity v_i in the positive direction at time 0. kenus is a master of transformation jutsu, and not only can he change into a person other than himself, but he can also transform another person into someone else. kenus can select some of the copies of takahashi at time 0, and transform them into copies of aoki, another ninja.
the walking velocity of a copy does not change when it transforms.
from then on, whenever a copy of takahashi and a copy of aoki are at the same coordinate, that copy of takahashi transforms into a copy of aoki. among the 2^n ways to transform some copies of takahashi into copies of aoki at time 0, in how many ways will all the copies of takahashi become copies of aoki after a sufficiently long time?
find the count modulo 10^9+7. 
"
p03710, Kenus the Ancient Greek,"kenus, the organizer of international euclidean olympiad, is seeking a pair of two integers that requires many steps to find its greatest common divisor using the euclidean algorithm. you are given q queries. the i-th query is represented as a pair of two integers x_i and y_i, and asks you the following: among all pairs of two integers (x,y) such that 1 ≤ x ≤ x_i and 1 ≤ y ≤ y_i, find the maximum euclidean step count (defined below), and how many pairs have the maximum step count, modulo 10^9+7. process all the queries. here, the euclidean step count of a pair of two non-negative integers (a,b) is defined as follows: (a,b) and (b,a) have the same euclidean step count. (0,a) has a euclidean step count of 0. if a &gt; 0 and a ≤ b, let p and q be a unique pair of integers such that b=pa+q and 0 ≤ q &lt; a. then, the euclidean step count of (a,b) is the euclidean step count of (q,a) plus 1. 

"
p03711, Grouping,"based on some criterion, snuke divided the integers from 1 through 12 into three groups as shown in the figure below.
given two integers x and y (1 ≤ x &lt; y ≤ 12), determine whether they belong to the same group. 



"
p03712, Picture Frame,"you are given a image with a height of h pixels and a width of w pixels.
each pixel is represented by a lowercase english letter.
the pixel at the i-th row from the top and j-th column from the left is a_{ij}. put a box around this image and output the result. the box should consist of # and have a thickness of 1. 
"
p03713, Chocolate Bar,"there is a bar of chocolate with a height of h blocks and a width of w blocks.
snuke is dividing this bar into exactly three pieces.
he can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle. snuke is trying to divide the bar as evenly as possible.
more specifically, he is trying to minimize s_{max} - s_{min}, where s_{max} is the area (the number of blocks contained) of the largest piece, and s_{min} is the area of the smallest piece.
find the minimum possible value of s_{max} - s_{min}. 
"
p03714, 3N Numbers,"let n be a positive integer. there is a numerical sequence of length 3n, a = (a_1, a_2, ..., a_{3n}).
snuke is constructing a new sequence of length 2n, a', by removing exactly n elements from a without changing the order of the remaining elements.
here, the score of a' is defined as follows: (the sum of the elements in the first half of a') - (the sum of the elements in the second half of a'). find the maximum possible score of a'. 
"
p03715, Chocolate Bar,"there is a bar of chocolate with a height of h blocks and a width of w blocks.
snuke is dividing this bar into exactly three pieces.
he can only cut the bar along borders of blocks, and the shape of each piece must be a rectangle. snuke is trying to divide the bar as evenly as possible.
more specifically, he is trying to minimize s_{max} - s_{min}, where s_{max} is the area (the number of blocks contained) of the largest piece, and s_{min} is the area of the smallest piece.
find the minimum possible value of s_{max} - s_{min}. 
"
p03716, 3N Numbers,"let n be a positive integer. there is a numerical sequence of length 3n, a = (a_1, a_2, ..., a_{3n}).
snuke is constructing a new sequence of length 2n, a', by removing exactly n elements from a without changing the order of the remaining elements.
here, the score of a' is defined as follows: (the sum of the elements in the first half of a') - (the sum of the elements in the second half of a'). find the maximum possible score of a'. 
"
p03717, RGB Sequence,"there are n squares arranged in a row.
the squares are numbered 1, 2, ..., n, from left to right. snuke is painting each square in red, green or blue.
according to his aesthetic sense, the following m conditions must all be satisfied.
the i-th condition is: there are exactly x_i different colors among squares l_i, l_i + 1, ..., r_i. in how many ways can the squares be painted to satisfy all the conditions?
find the count modulo 10^9+7. 
"
p03718, Lotus Leaves,"there is a pond with a rectangular shape.
the pond is divided into a grid with h rows and w columns of squares.
we will denote the square at the i-th row from the top and j-th column from the left by (i,\ j). some of the squares in the pond contains a lotus leaf floating on the water.
on one of those leaves, s, there is a frog trying to get to another leaf t.
the state of square (i,\ j) is given to you by a character a_{ij}, as follows: . : a square without a leaf. o : a square with a leaf floating on the water. s : a square with the leaf s. t : a square with the leaf t. the frog will repeatedly perform the following action to get to the leaf t: ""jump to a leaf that is in the same row or the same column as the leaf where the frog is currently located."" snuke is trying to remove some of the leaves, other than s and t, so that the frog cannot get to the leaf t.
determine whether this objective is achievable. if it is achievable, find the minimum necessary number of leaves to remove. 
"
p03719, Between Two Integers,"you are given three integers a, b and c.
determine whether c is not less than a and not greater than b. 
"
p03720, Counting Roads,"there are n cities and m roads.
the i-th road (1≤i≤m) connects two cities a_i and b_i (1≤a_i,b_i≤n) bidirectionally.
there may be more than one road that connects the same pair of two cities.
for each city, how many roads are connected to the city? 
"
p03721, Big Array,"there is an empty array.
the following n operations will be performed to insert integers into the array.
in the i-th operation (1≤i≤n), b_i copies of an integer a_i are inserted into the array.
find the k-th smallest integer in the array after the n operations.
for example, the 4-th smallest integer in the array \{1,2,2,3,3,3\} is 3. 
"
p03722, Score Attack,"there is a directed graph with n vertices and m edges.
the i-th edge (1≤i≤m) points from vertex a_i to vertex b_i, and has a weight c_i.
we will play the following single-player game using this graph and a piece. initially, the piece is placed at vertex 1, and the score of the player is set to 0.
the player can move the piece as follows: when the piece is placed at vertex a_i, move the piece along the i-th edge to vertex b_i. after this move, the score of the player is increased by c_i. the player can end the game only when the piece is placed at vertex n.
the given graph guarantees that it is possible to traverse from vertex 1 to vertex n. when the player acts optimally to maximize the score at the end of the game, what will the score be?
if it is possible to increase the score indefinitely, print inf. 
"
p03723, Cookie Exchanges,"takahashi, aoki and snuke love cookies. they have a, b and c cookies, respectively. now, they will exchange those cookies by repeating the action below: each person simultaneously divides his cookies in half and gives one half to each of the other two persons. this action will be repeated until there is a person with odd number of cookies in hand. how many times will they repeat this action?
note that the answer may not be finite. 
"
p03724, Unplanned Queries,"takahashi is not good at problems about trees in programming contests, and aoki is helping him practice. first, takahashi created a tree with n vertices numbered 1 through n, and wrote 0 at each edge. then, aoki gave him m queries. the i-th of them is as follows: increment the number written at each edge along the path connecting vertices a_i and b_i, by one. after takahashi executed all of the queries, he told aoki that, for every edge, the written number became an even number.
however, aoki forgot to confirm that the graph takahashi created was actually a tree, and it is possible that takahashi made a mistake in creating a tree or executing queries. determine whether there exists a tree that has the property mentioned by takahashi. 
"
p03725, Closed Rooms,"takahashi is locked within a building. this building consists of h×w rooms, arranged in h rows and w columns.
we will denote the room at the i-th row and j-th column as (i,j). the state of this room is represented by a character a_{i,j}. if a_{i,j}= #, the room is locked and cannot be entered; if a_{i,j}= ., the room is not locked and can be freely entered.
takahashi is currently at the room where a_{i,j}= s, which can also be freely entered. each room in the 1-st row, 1-st column, h-th row or w-th column, has an exit.
each of the other rooms (i,j) is connected to four rooms: (i-1,j), (i+1,j), (i,j-1) and (i,j+1). takahashi will use his magic to get out of the building. in one cast, he can do the following: move to an adjacent room at most k times, possibly zero. here, locked rooms cannot be entered. then, select and unlock at most k locked rooms, possibly zero. those rooms will remain unlocked from then on. his objective is to reach a room with an exit. find the minimum necessary number of casts to do so. it is guaranteed that takahashi is initially at a room without an exit. 
"
p03726, Black and White Tree,"there is a tree with n vertices numbered 1 through n.
the i-th of the n-1 edges connects vertices a_i and b_i. initially, each vertex is uncolored. takahashi and aoki is playing a game by painting the vertices. in this game, they alternately perform the following operation, starting from takahashi: select a vertex that is not painted yet. if it is takahashi who is performing this operation, paint the vertex white; paint it black if it is aoki. then, after all the vertices are colored, the following procedure takes place: repaint every white vertex that is adjacent to a black vertex, in black. note that all such white vertices are repainted simultaneously, not one at a time. if there are still one or more white vertices remaining, takahashi wins; if all the vertices are now black, aoki wins.
determine the winner of the game, assuming that both persons play optimally. 
"
p03727, Blue and Red Tree,"there is a tree with n vertices numbered 1 through n.
the i-th of the n-1 edges connects vertices a_i and b_i. initially, each edge is painted blue.
takahashi will convert this blue tree into a red tree, by performing the following operation n-1 times: select a simple path that consists of only blue edges, and remove one of those edges. then, span a new red edge between the two endpoints of the selected path. his objective is to obtain a tree that has a red edge connecting vertices c_i and d_i, for each i. determine whether this is achievable. 
"
p03728, Strange Sorting,"takahashi loves sorting. he has a permutation (p_1,p_2,...,p_n) of the integers from 1 through n. now, he will repeat the following operation until the permutation becomes (1,2,...,n): first, we will define high and low elements in the permutation, as follows. the i-th element in the permutation is high if the maximum element between the 1-st and i-th elements, inclusive, is the i-th element itself, and otherwise the i-th element is low. then, let a_1,a_2,...,a_k be the values of the high elements, and b_1,b_2,...,b_{n-k} be the values of the low elements in the current permutation, in the order they appear in it. lastly, rearrange the permutation into (b_1,b_2,...,b_{n-k},a_1,a_2,...,a_k). how many operations are necessary until the permutation is sorted? 
"
p03729, Shiritori,"you are given three strings a, b and c. check whether they form a word chain. more formally, determine whether both of the following are true: the last character in a and the initial character in b are the same. the last character in b and the initial character in c are the same. if both are true, print yes. otherwise, print no. 
"
p03730, Choose Integers,"we ask you to select some number of positive integers, and calculate the sum of them. it is allowed to select as many integers as you like, and as large integers as you wish.
you have to follow these, however: each selected integer needs to be a multiple of a, and you need to select at least one integer. your objective is to make the sum congruent to c modulo b.
determine whether this is possible. if the objective is achievable, print yes. otherwise, print no. 
"
p03731, Sentou,"in a public bath, there is a shower which emits water for t seconds when the switch is pushed. if the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for t seconds.
note that it does not mean that the shower emits water for t additional seconds. n people will push the switch while passing by the shower.
the i-th person will push the switch t_i seconds after the first person pushes it. how long will the shower emit water in total? 
"
p03732, Simple Knapsack,"you have n items and a bag of strength w.
the i-th item has a weight of w_i and a value of v_i. you will select some of the items and put them in the bag.
here, the total weight of the selected items needs to be at most w. your objective is to maximize the total value of the selected items. 
"
p03733, Sentou,"in a public bath, there is a shower which emits water for t seconds when the switch is pushed. if the switch is pushed when the shower is already emitting water, from that moment it will be emitting water for t seconds.
note that it does not mean that the shower emits water for t additional seconds. n people will push the switch while passing by the shower.
the i-th person will push the switch t_i seconds after the first person pushes it. how long will the shower emit water in total? 
"
p03734, Simple Knapsack,"you have n items and a bag of strength w.
the i-th item has a weight of w_i and a value of v_i. you will select some of the items and put them in the bag.
here, the total weight of the selected items needs to be at most w. your objective is to maximize the total value of the selected items. 
"
p03735, Ball Coloring,"there are n bags, each containing two white balls. the i-th box contains two balls with integers x_i and y_i written on them, respectively. for each of these bags, you will paint one of the balls red, and paint the other blue. afterwards, the 2n balls will be classified according to color. then, we will define the following: r_{max}: the maximum integer written on a ball painted in red r_{min}: the minimum integer written on a ball painted in red b_{max}: the maximum integer written on a ball painted in blue b_{min}: the minimum integer written on a ball painted in blue find the minimum possible value of (r_{max} - r_{min}) \times (b_{max} - b_{min}). 
"
p03736, Many Moves,"there are n squares in a row. the squares are numbered 1, 2, ..., n from left to right. you have two pieces, initially placed on square a and b, respectively.
you will be asked to process q queries of the following kind, in the order received: given an integer x_i, move one of the two pieces of your choice to square x_i. here, it takes you one second to move a piece one square.
that is, the time it takes to move a piece from square x to y is |x-y| seconds. your objective is to process all the queries in the shortest possible time. you may only move the pieces in response to queries, and you may not move both pieces at the same time.
also, it is not allowed to rearrange the order in which queries are given.
it is, however, allowed to have both pieces in the same square at the same time. 
"
p03737,letter acronym,"you are given three words s_1, s_2 and s_3, each composed of lowercase english letters, with spaces in between.
print the acronym formed from the uppercased initial letters of the words. 
"
p03738, Comparison,"you are given two positive integers a and b. compare the magnitudes of these numbers. 
"
p03739, Sequence,"you are given an integer sequence of length n. the i-th term in the sequence is a_i.
in one operation, you can select a term and either increment or decrement it by one. at least how many operations are necessary to satisfy the following conditions? for every i (1≤i≤n), the sum of the terms from the 1-st through i-th term is not zero. for every i (1≤i≤n-1), the sign of the sum of the terms from the 1-st through i-th term, is different from the sign of the sum of the terms from the 1-st through (i+1)-th term. 

"
p03740, Alice&Brown,"alice and brown loves games. today, they will play the following game. in this game, there are two piles initially consisting of x and y stones, respectively.
alice and bob alternately perform the following operation, starting from alice: take 2i stones from one of the piles. then, throw away i of them, and put the remaining i in the other pile. here, the integer i (1≤i) can be freely chosen as long as there is a sufficient number of stones in the pile. the player who becomes unable to perform the operation, loses the game. given x and y, determine the winner of the game, assuming that both players play optimally. 
"
p03741, Sequence,"you are given an integer sequence of length n. the i-th term in the sequence is a_i.
in one operation, you can select a term and either increment or decrement it by one. at least how many operations are necessary to satisfy the following conditions? for every i (1≤i≤n), the sum of the terms from the 1-st through i-th term is not zero. for every i (1≤i≤n-1), the sign of the sum of the terms from the 1-st through i-th term, is different from the sign of the sum of the terms from the 1-st through (i+1)-th term. 

"
p03742, Alice&Brown,"alice and brown loves games. today, they will play the following game. in this game, there are two piles initially consisting of x and y stones, respectively.
alice and bob alternately perform the following operation, starting from alice: take 2i stones from one of the piles. then, throw away i of them, and put the remaining i in the other pile. here, the integer i (1≤i) can be freely chosen as long as there is a sufficient number of stones in the pile. the player who becomes unable to perform the operation, loses the game. given x and y, determine the winner of the game, assuming that both players play optimally. 
"
p03743, Alice in linear land,"alice lives on a line. today, she will travel to some place in a mysterious vehicle.
initially, the distance between alice and her destination is d. when she input a number x to the vehicle, it will travel in the direction of the destination by a distance of x if this move would shorten the distance between the vehicle and the destination, and it will stay at its position otherwise. note that the vehicle may go past the destination when the distance between the vehicle and the destination is less than x. alice made a list of n numbers. the i-th number in this list is d_i. she will insert these numbers to the vehicle one by one. however, a mischievous witch appeared. she is thinking of rewriting one number in the list so that alice will not reach the destination after n moves. she has q plans to do this, as follows: rewrite only the q_i-th number in the list with some integer so that alice will not reach the destination. write a program to determine whether each plan is feasible. 
"
p03744, Dam,"you are in charge of controlling a dam. the dam can store at most l liters of water. initially, the dam is empty. some amount of water flows into the dam every morning, and any amount of water may be discharged every night, but this amount needs to be set so that no water overflows the dam the next morning. it is known that v_i liters of water at t_i degrees celsius will flow into the dam on the morning of the i-th day.
you are wondering about the maximum possible temperature of water in the dam at noon of each day, under the condition that there needs to be exactly l liters of water in the dam at that time. for each i, find the maximum possible temperature of water in the dam at noon of the i-th day. here, consider each maximization separately, that is, the amount of water discharged for the maximization of the temperature on the i-th day, may be different from the amount of water discharged for the maximization of the temperature on the j-th day (j≠i). also, assume that the temperature of water is not affected by anything but new water that flows into the dam. that is, when v_1 liters of water at t_1 degrees celsius and v_2 liters of water at t_2 degrees celsius are mixed together, they will become v_1+v_2 liters of water at \frac{t_1*v_1+t_2*v_2}{v_1+v_2} degrees celsius, and the volume and temperature of water are not affected by any other factors. 
"
p03745, Sorted Arrays,"you are given an array a of length n.
your task is to divide it into several contiguous subarrays.
here, all subarrays obtained must be sorted in either non-decreasing or non-increasing order.
at least how many subarrays do you need to divide a into? 
"
p03746, Hamiltonish Path,"you are given a connected undirected simple graph, which has n vertices and m edges.
the vertices are numbered 1 through n, and the edges are numbered 1 through m.
edge i connects vertices a_i and b_i.
your task is to find a path that satisfies the following conditions: the path traverses two or more vertices. the path does not traverse the same vertex more than once. a vertex directly connected to at least one of the endpoints of the path, is always contained in the path. it can be proved that such a path always exists.
also, if there are more than one solution, any of them will be accepted. 
"
p03747, Ants on a Circle,"there is a circle with a circumference of l.
each point on the circumference has a coordinate value, which represents the arc length from a certain reference point clockwise to the point.
on this circumference, there are n ants.
these ants are numbered 1 through n in order of increasing coordinate, and ant i is at coordinate x_i. the n ants have just started walking.
for each ant i, you are given the initial direction w_i. ant i is initially walking clockwise if w_i is 1; counterclockwise if w_i is 2.
every ant walks at a constant speed of 1 per second.
sometimes, two ants bump into each other.
each of these two ants will then turn around and start walking in the opposite direction. for each ant, find its position after t seconds. 
"
p03748, Piling Up,"joisino has a lot of red and blue bricks and a large box.
she will build a tower of these bricks in the following manner. first, she will pick a total of n bricks and put them into the box.
here, there may be any number of bricks of each color in the box, as long as there are n bricks in total.
particularly, there may be zero red bricks or zero blue bricks.
then, she will repeat an operation m times, which consists of the following three steps: take out an arbitrary brick from the box. put one red brick and one blue brick into the box. take out another arbitrary brick from the box. after the m operations, joisino will build a tower by stacking the 2 \times m bricks removed from the box, in the order they are taken out.
she is interested in the following question: how many different sequences of colors of these 2 \times m bricks are possible?
write a program to find the answer.
since it can be extremely large, print the count modulo 10^9+7. 
"
p03749, Placing Squares,"joisino has a bar of length n, which has m marks on it.
the distance from the left end of the bar to the i-th mark is x_i. she will place several squares on this bar.
here, the following conditions must be met: only squares with integral length sides can be placed. each square must be placed so that its bottom side touches the bar. the bar must be completely covered by squares.
that is, no square may stick out of the bar, and no part of the bar may be left uncovered. the boundary line of two squares may not be directly above a mark. examples of arrangements that satisfy/violate the conditions the beauty of an arrangement of squares is defined as the product of the areas of all the squares placed.
joisino is interested in the sum of the beauty over all possible arrangements that satisfy the conditions.
write a program to find it.
since it can be extremely large, print the sum modulo 10^9+7. 
"
p03750, Two Faced Cards,"there are n cards. the two sides of each of these cards are distinguishable.
the i-th of these cards has an integer a_i printed on the front side, and another integer b_i printed on the back side.
we will call the deck of these cards x.
there are also n+1 cards of another kind.
the i-th of these cards has an integer c_i printed on the front side, and nothing is printed on the back side.
we will call this another deck of cards y. you will play q rounds of a game.
each of these rounds is played independently.
in the i-th round, you are given a new card. the two sides of this card are distinguishable.
it has an integer d_i printed on the front side, and another integer e_i printed on the back side.
a new deck of cards z is created by adding this card to x.
then, you are asked to form n+1 pairs of cards, each consisting of one card from z and one card from y.
each card must belong to exactly one of the pairs.
additionally, for each card from z, you need to specify which side to use.
for each pair, the following condition must be met: (the integer printed on the used side of the card from z)  \leq  (the integer printed on the card from y) if it is not possible to satisfy this condition regardless of how the pairs are formed and which sides are used, the score for the round will be -1.
otherwise, the score for the round will be the count of the cards from z whose front side is used. find the maximum possible score for each round. 
"
p03751, Atcoder Handles,"
					mr.x, who the handle name is t, looked at the list which written n handle names, s_1, s_2, ..., s_n. 
					but he couldn't see some parts of the list. invisible part is denoted ?. 

					please calculate all possible index of the handle name of mr.x when you sort n+1 handle names (s_1, s_2, ..., s_n and t) in lexicographical order. 
					note: if there are pair of people with same handle name, either one may come first. 
"
p03752, Buildings are Colorful!,"
					there are n buildings along the line. the i-th building from the left is colored in color i, and its height is currently a_i meters. 
					chokudai is a mayor of the city, and he loves colorful thigs. and now he wants to see at least k buildings from the left. 

					you can increase height of buildings, but it costs 1 yens to increase 1 meters. it means you cannot make building that height is not integer. 
					you cannot decrease height of buildings. 
					calculate the minimum cost of satisfying chokudai's objective. 
					note: ""building i can see from the left"" means there are no j exists that (height of building j) ≥ (height of building i) and j &lt; i. 
"
p03753, Calendar 2,"
					we have a grid with n rows and 7 columns. we call it a calendar. the cell at i-th row and j-th column is denoted (i, j). 



					initially, each cell at (i, j) contains the integer 7i + j - 8, and each cell is white. 

					snuke likes painting, so he decided integer m, and did q operations with a calendar. 
					・in i-th operation, he paint black on the cell in which an integer is written such remainder of dividing by m is a_i. 

					please count the number of connected white parts. 
					note that if two adjacent cells are white, the cells belong to the same connected part. 
"
p03754, Driving on a Tree,"he move to adjacent vertex, but he can't a visit vertex two or more times. he ends move when there is no way to move. otherwise, he moves randomly. (equal probability) if he has $p$ way to move this turn, he choose each vertex with $1/p$ probability. 





					calculate the expected value of the number of turns, when e869120 starts from vertex i, for all i (1 ≤ i ≤ n). 
"
p03755, Enormous Atcoder Railroad,"the center of atcoder kingdom is station 0, and you have to be able to go to station i atmost x minutes. if the express stops at the station, semi-express should stops at the station. 

					print the number of ways of the set of the station where semi-express stops (sequence t). 
					since the answer can be large, print the number modulo 10^9 + 7. 
"
p03756, Find the Route!,"he can't change the start point of this arrow. it costs $e_i$ if he change the direction of this arrow. it costs $f \times |d_i-g|$ if he change d_i to $g$. 




					he can't add or erase arrows.

					please calculate the minimum cost that he can move to $(gx,gy)$."
p03757, Get the Salary of Atcoder,"query 1: you are given v_i, d_i, x_i. increase the salary of worker v_i, and all j-th (1 ≤ j ≤ d_i) lower subordinates by x_i. query 2: you are given v_i, d_i. calculate the sum of salary of worker v_i and all j-th (1 ≤ j ≤ d_i) lower subordinates. query 3: you are given pr_i, ar_i. now atcoder has a new worker c! (c is the current number of workers) the boss is pr_i, and the first salary is ar_i. 

					process all queries!!! 
"
p03758, Huge Kingdom: Atcoder,"you can output a string $s$. length of $s$ must be $n$ and the character of string $s$ must be represented by '$0$' or '$1$'. computer paint the towns with white or black according to the character string you output. if $i$-th character of $s$ is '0', computer paint town $i$ white. if $i$-th character of $s$ is '1', computer paint town $i$ black. please consider an undirected graph $g$. for each edge, computer do the following processing: if both ends painted black, computer adds this edge to $g$. computer returns value $x$: sum of ""diameter of tree""$^2$ about each connected components. 

					for example, when $s$=""11001111"" and the kingdom's structure is this, computer returns 10.



					please detect the structure of $atcoder$ as few questions as possible.
"
p03759, ι⊥l,"three poles stand evenly spaced along a line. their heights are a, b and c meters, from left to right.
we will call the arrangement of the poles beautiful if the tops of the poles lie on the same line, that is, b-a = c-b. determine whether the arrangement of the poles is beautiful. 
"
p03760, ∵∴∵,"snuke signed up for a new website which holds programming competitions.
he worried that he might forget his password, and he took notes of it.
since directly recording his password would cause him trouble if stolen,
he took two notes: one contains the characters at the odd-numbered positions, and the other contains the characters at the even-numbered positions. you are given two strings o and e. o contains the characters at the odd-numbered positions retaining their relative order, and e contains the characters at the even-numbered positions retaining their relative order.
restore the original password. 
"
p03761, Dubious Document,"snuke loves ""paper cutting"": he cuts out characters from a newspaper headline and rearranges them to form another string. he will receive a headline which contains one of the strings s_1,...,s_n tomorrow.
he is excited and already thinking of what string he will create.
since he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains. find the longest string that can be created regardless of which string among s_1,...,s_n the headline contains.
if there are multiple such strings, find the lexicographically smallest one among them. 
"
p03762, ###,"on a two-dimensional plane, there are m lines drawn parallel to the x axis, and n lines drawn parallel to the y axis.
among the lines parallel to the x axis, the i-th from the bottom is represented by y = y_i.
similarly, among the lines parallel to the y axis, the i-th from the left is represented by x = x_i. for every rectangle that is formed by these lines, find its area, and print the total area modulo 10^9+7. that is, for every quadruple (i,j,k,l) satisfying 1\leq i &lt; j\leq n and 1\leq k &lt; l\leq m, find the area of the rectangle formed by the lines x=x_i, x=x_j, y=y_k and y=y_l, and print the sum of these areas modulo 10^9+7. 
"
p03763, Dubious Document,"snuke loves ""paper cutting"": he cuts out characters from a newspaper headline and rearranges them to form another string. he will receive a headline which contains one of the strings s_1,...,s_n tomorrow.
he is excited and already thinking of what string he will create.
since he does not know the string on the headline yet, he is interested in strings that can be created regardless of which string the headline contains. find the longest string that can be created regardless of which string among s_1,...,s_n the headline contains.
if there are multiple such strings, find the lexicographically smallest one among them. 
"
p03764, ###,"on a two-dimensional plane, there are m lines drawn parallel to the x axis, and n lines drawn parallel to the y axis.
among the lines parallel to the x axis, the i-th from the bottom is represented by y = y_i.
similarly, among the lines parallel to the y axis, the i-th from the left is represented by x = x_i. for every rectangle that is formed by these lines, find its area, and print the total area modulo 10^9+7. that is, for every quadruple (i,j,k,l) satisfying 1\leq i &lt; j\leq n and 1\leq k &lt; l\leq m, find the area of the rectangle formed by the lines x=x_i, x=x_j, y=y_k and y=y_l, and print the sum of these areas modulo 10^9+7. 
"
p03765, TrBBnsformBBtion,"let us consider the following operations on a string consisting of a and b: select a character in a string. if it is a, replace it with bb. if it is b, replace with aa. select a substring that is equal to either aaa or bbb, and delete it from the string. for example, if the first operation is performed on aba and the first character is selected, the string becomes bbba.
if the second operation is performed on bbbaaaa and the fourth through sixth characters are selected, the string becomes bbba. these operations can be performed any number of times, in any order. you are given two string s and t, and q queries a_i, b_i, c_i, d_i.
for each query, determine whether s_{a_i} s_{{a_i}+1} ... s_{b_i}, a substring of s, can be made into t_{c_i} t_{{c_i}+1} ... t_{d_i}, a substring of t. 
"
p03766, Infinite Sequence,"how many infinite sequences a_1, a_2, ... consisting of {{1, ... ,n}} satisfy the following conditions? the n-th and subsequent elements are all equal. that is, if n \leq i,j, a_i = a_j. for every integer i, the a_i elements immediately following the i-th element are all equal. that is, if i &lt; j &lt; k\leq i+a_i, a_j = a_k. find the count modulo 10^9+7. 
"
p03767, AtCoder Group Contest,"there are 3n participants in atcoder group contest.
the strength of the i-th participant is represented by an integer a_i.
they will form n teams, each consisting of three participants.
no participant may belong to multiple teams. the strength of a team is defined as the second largest strength among its members.
for example, a team of participants of strength 1, 5, 2 has a strength 2, and a team of three participants of strength 3, 2, 3 has a strength 3. find the maximum possible sum of the strengths of n teams. 
"
p03768, Splatter Painting,"squid loves painting vertices in graphs. there is a simple undirected graph consisting of n vertices numbered 1 through n, and m edges.
initially, all the vertices are painted in color 0. the i-th edge bidirectionally connects two vertices a_i and b_i. the length of every edge is 1. squid performed q operations on this graph. in the i-th operation, he repaints all the vertices within a distance of d_i from vertex v_i, in color c_i. find the color of each vertex after the q operations. 
"
p03769, Tautonym Puzzle,"we will call a string x good if it satisfies the following condition: condition: x can be represented as a concatenation of two copies of another string y of length at least 1. for example, aa and bubobubo are good; an empty string, a, abcabcabc and abba are not good. eagle and owl created a puzzle on good strings.
find one string s that satisfies the following conditions. it can be proved that such a string always exists under the constraints in this problem. 1 ≤ |s| ≤ 200 each character of s is one of the 100 characters represented by the integers 1 through 100. among the 2^{|s|} subsequences of s, exactly n are good strings. 

"
p03770, Colorful Balls,"snuke arranged n colorful balls in a row.
the i-th ball from the left has color c_i and weight w_i. he can rearrange the balls by performing the following two operations any number of times, in any order: operation 1: select two balls with the same color. if the total weight of these balls is at most x, swap the positions of these balls. operation 2: select two balls with different colors. if the total weight of these balls is at most y, swap the positions of these balls. how many different sequences of colors of balls can be obtained? find the count modulo 10^9 + 7. 
"
p03771, Camel and Oases,"there are n oases on a number line. the coordinate of the i-th oases from the left is x_i. camel hopes to visit all these oases.
initially, the volume of the hump on his back is v. when the volume of the hump is v, water of volume at most v can be stored. water is only supplied at oases. he can get as much water as he can store at a oasis, and the same oasis can be used any number of times. camel can travel on the line by either walking or jumping: walking over a distance of d costs water of volume d from the hump. a walk that leads to a negative amount of stored water cannot be done. let v be the amount of water stored at the moment. when v&gt;0, camel can jump to any point on the line of his choice. after this move, the volume of the hump becomes v/2 (rounded down to the nearest integer), and the amount of stored water becomes 0. for each of the oases, determine whether it is possible to start from that oasis and visit all the oases. 
"
p03772, Prefix Median,"snuke received an integer sequence a of length 2n-1. he arbitrarily permuted the elements in a, then used it to construct a new integer sequence b of length n, as follows: b_1 = the median of (a_1) b_2 = the median of (a_1, a_2, a_3) b_3 = the median of (a_1, a_2, a_3, a_4, a_5) : b_n = the median of (a_1, a_2, a_3, ..., a_{2n-1}) how many different sequences can be obtained as b? find the count modulo 10^{9} + 7. 
"
p03773, Remaining Time,"dolphin loves programming contests. today, he will take part in a contest in atcoder.
in this country, 24-hour clock is used. for example, 9:00 p.m. is referred to as ""21 o'clock"".
the current time is a o'clock, and a contest will begin in exactly b hours.
when will the contest begin? answer in 24-hour time. 
"
p03774, Checkpoints,"there are n students and m checkpoints on the xy-plane.
the coordinates of the i-th student (1 \leq i \leq n) is (a_i,b_i), and the coordinates of the checkpoint numbered j (1 \leq j \leq m) is (c_j,d_j).
when the teacher gives a signal, each student has to go to the nearest checkpoint measured in manhattan distance. 
the manhattan distance between two points (x_1,y_1) and (x_2,y_2) is |x_1-x_2|+|y_1-y_2|.
here, |x| denotes the absolute value of x.
if there are multiple nearest checkpoints for a student, he/she will select the checkpoint with the smallest index.
which checkpoint will each student go to? 
"
p03775, Digits in Multiplication,"you are given an integer n.
for two positive integers a and b, we will define f(a,b) as the larger of the following: the number of digits in the decimal notation of a, and the number of digits in the decimal notation of b.
for example, f(3,11) = 2 since 3 has one digit and 11 has two digits.
find the minimum value of f(a,b) as (a,b) ranges over all pairs of positive integers such that n = a \times b. 
"
p03776, Maximum Average Sets,"you are given n items.
the value of the i-th item (1 \leq i \leq n) is v_i.
your have to select at least a and at most b of these items.
under this condition, find the maximum possible arithmetic mean of the values of selected items.
additionally, find the number of ways to select items so that the mean of the values of selected items is maximized.   
"
p03777, HonestOrDishonest,"two deer, atcodeer and topcodeer, are playing a game called honest or dishonest.
in this game, an honest player always tells the truth, and an dishonest player always tell lies.
you are given two characters a and b as the input. each of them is either h or d, and carries the following information: if a=h, atcodeer is honest; if a=d, atcodeer is dishonest.
if b=h, atcodeer is saying that topcodeer is honest; if b=d, atcodeer is saying that topcodeer is dishonest. given this information, determine whether topcodeer is honest. 
"
p03778, NarrowRectanglesEasy,"atcodeer the deer found two rectangles lying on the table, each with height 1 and width w.
if we consider the surface of the desk as a two-dimensional plane, the first rectangle covers the vertical range of [0,1] and the horizontal range of [a,a+w], and the second rectangle covers the vertical range of [1,2] and the horizontal range of [b,b+w], as shown in the following figure:  atcodeer will move the second rectangle horizontally so that it connects with the first rectangle.
find the minimum distance it needs to be moved. 
"
p03779, Go Home,"there is a kangaroo at coordinate 0 on an infinite number line that runs from left to right, at time 0.
during the period between time i-1 and time i, the kangaroo can either stay at his position, or perform a jump of length exactly i to the left or to the right.
that is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.
the kangaroo's nest is at coordinate x, and he wants to travel to coordinate x as fast as possible.
find the earliest possible time to reach coordinate x. 
"
p03780, No Need,"atcodeer the deer has n cards with positive integers written on them. the number on the i-th card (1≤i≤n) is a_i.
because he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is k or greater. then, for each card i, he judges whether it is unnecessary or not, as follows: if, for any good subset of the cards containing card i, the set that can be obtained by eliminating card i from the subset is also good, card i is unnecessary. otherwise, card i is not unnecessary. find the number of the unnecessary cards. here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary. 
"
p03781, Go Home,"there is a kangaroo at coordinate 0 on an infinite number line that runs from left to right, at time 0.
during the period between time i-1 and time i, the kangaroo can either stay at his position, or perform a jump of length exactly i to the left or to the right.
that is, if his coordinate at time i-1 is x, he can be at coordinate x-i, x or x+i at time i.
the kangaroo's nest is at coordinate x, and he wants to travel to coordinate x as fast as possible.
find the earliest possible time to reach coordinate x. 
"
p03782, No Need,"atcodeer the deer has n cards with positive integers written on them. the number on the i-th card (1≤i≤n) is a_i.
because he loves big numbers, he calls a subset of the cards good when the sum of the numbers written on the cards in the subset, is k or greater. then, for each card i, he judges whether it is unnecessary or not, as follows: if, for any good subset of the cards containing card i, the set that can be obtained by eliminating card i from the subset is also good, card i is unnecessary. otherwise, card i is not unnecessary. find the number of the unnecessary cards. here, he judges each card independently, and he does not throw away cards that turn out to be unnecessary. 
"
p03783, NarrowRectangles,"atcodeer the deer found n rectangle lying on the table, each with height 1.
if we consider the surface of the desk as a two-dimensional plane, the i-th rectangle i(1≤i≤n) covers the vertical range of [i-1,i] and the horizontal range of [l_i,r_i], as shown in the following figure:  atcodeer will move these rectangles horizontally so that all the rectangles are connected.
for each rectangle, the cost to move it horizontally by a distance of x, is x.
find the minimum cost to achieve connectivity.
it can be proved that this value is always an integer under the constraints of the problem. 
"
p03784, HonestOrUnkind,"this is an interactive task. atcodeer the deer came across n people. for convenience, the people are numbered 0 through n-1.
among them, a are honest and the remaining b(=n-a) are unkind.
all of these n people know who are honest and who are unkind, but atcodeer only knows that there are a honest and b unkind people.
he is trying to identify all of the honest people by asking questions to these n people.
for one question, atcodeer selects a and b (0≤a,b≤n-1), and asks person a the following question: ""is person b honest?"" an honest person will always answer correctly by ""yes"" or ""no"".
an unkind person, however, will answer by selecting ""yes"" or ""no"" arbitrarily.
that is, the algorithm used by an unkind person may not be simple one such as always lying or giving random fifty-fifty answers. atcodeer can ask at most 2n questions. he will ask questions one by one, and the responses to the previous questions can be used when deciding the next question to ask. identify all of the honest people.
if it is impossible (more formally, if, for any strategy of asking 2n questions, there exists a strategy for unkind people to answer the questions so that there are two or more possible sets of the honest people), report that fact. 
"
p03785, Airport Bus,"every day, n passengers arrive at takahashi airport.
the i-th passenger arrives at time t_i. every passenger arrived at takahashi airport travels to the city by bus. each bus can accommodate up to c passengers.
naturally, a passenger cannot take a bus that departs earlier than the airplane arrives at the airport.
also, a passenger will get angry if he/she is still unable to take a bus k units of time after the arrival of the airplane.
for that reason, it is necessary to arrange buses so that the i-th passenger can take a bus departing at time between t_i and t_i + k (inclusive). when setting the departure times for buses under this condition, find the minimum required number of buses.
here, the departure time for each bus does not need to be an integer, and there may be multiple buses that depart at the same time. 
"
p03786, Colorful Creatures,"snuke found n strange creatures.
each creature has a fixed color and size. the color and size of the i-th creature are represented by i and a_i, respectively. every creature can absorb another creature whose size is at most twice the size of itself.
when a creature of size a and color b absorbs another creature of size c and color d (c \leq 2 \times a), they will merge into one creature of size a+c and color b.
here, depending on the sizes of two creatures, it is possible that both of them can absorb the other. snuke has been watching these creatures merge over and over and ultimately become one creature.
find the number of the possible colors of this creature. 
"
p03787, Squared Graph,"takahashi has received an undirected graph with n vertices, numbered 1, 2, ..., n.
the edges in this graph are represented by (u_i, v_i).
there are no self-loops and multiple edges in this graph. based on this graph, takahashi is now constructing a new graph with n^2 vertices, where each vertex is labeled with a pair of integers (a, b) (1 \leq a \leq n, 1 \leq b \leq n).
the edges in this new graph are generated by the following rule: span an edge between vertices (a, b) and (a', b') if and only if both of the following two edges exist in the original graph: an edge between vertices a and a', and an edge between vertices b and b'. how many connected components are there in this new graph? 
"
p03788, Half Reflector,"takahashi has a lot of peculiar devices.
these cylindrical devices receive balls from left and right.
each device is in one of the two states a and b, and for each state, the device operates as follows: when a device in state a receives a ball from either side (left or right), the device throws out the ball from the same side, then immediately goes into state b. when a device in state b receives a ball from either side, the device throws out the ball from the other side, then immediately goes into state a. the transition of the state of a device happens momentarily and always completes before it receives another ball. takahashi built a contraption by concatenating n of these devices. in this contraption, a ball that was thrown out from the right side of the i-th device from the left (1 \leq i \leq n-1) immediately enters the (i+1)-th device from the left side. a ball that was thrown out from the left side of the i-th device from the left (2 \leq i \leq n) immediately enters the (i-1)-th device from the right side. the initial state of the i-th device from the left is represented by the i-th character in a string s.
from this situation, takahashi performed the following k times: put a ball into the leftmost device from the left side, then wait until the ball comes out of the contraption from either end.
here, it can be proved that the ball always comes out of the contraption after a finite time.
find the state of each device after k balls are processed. 
"
p03789, Increasing Numbers,"we will call a non-negative integer increasing if, for any two adjacent digits in its decimal representation, the digit to the right is greater than or equal to the digit to the left.
for example, 1558, 11, 3 and 0 are all increasing; 10 and 20170312 are not. snuke has an integer n. find the minimum number of increasing integers that can represent n as their sum. 
"
p03790, Train Service Planning,"there is a railroad in takahashi kingdom.
the railroad consists of n sections, numbered 1, 2, ..., n, and n+1 stations, numbered 0, 1, ..., n. section i directly connects the stations i-1 and i.
a train takes exactly a_i minutes to run through section i, regardless of direction.
each of the n sections is either single-tracked over the whole length, or double-tracked over the whole length.
if b_i = 1, section i is single-tracked; if b_i = 2, section i is double-tracked.
two trains running in opposite directions can cross each other on a double-tracked section, but not on a single-tracked section.
trains can also cross each other at a station. snuke is creating the timetable for this railroad. in this timetable, the trains on the railroad run every k minutes, as shown in the following figure. here, bold lines represent the positions of trains running on the railroad. (see sample 1 for clarification.)  when creating such a timetable, find the minimum sum of the amount of time required for a train to depart station 0 and reach station n, and the amount of time required for a train to depart station n and reach station 0.
it can be proved that, if there exists a timetable satisfying the conditions in this problem, this minimum sum is always an integer. formally, the times at which trains arrive and depart must satisfy the following: each train either departs station 0 and is bound for station n, or departs station n and is bound for station 0. each train takes exactly a_i minutes to run through section i. for example, if a train bound for station n departs station i-1 at time t, the train arrives at station i exactly at time t+a_i. assume that a train bound for station n arrives at a station at time s, and departs the station at time t. then, the next train bound for station n arrives at the station at time s+k, and departs the station at time t+k. additionally, the previous train bound for station n arrives at the station at time s-k, and departs the station at time t-k. this must also be true for trains bound for station 0. trains running in opposite directions must not be running on the same single-tracked section (except the stations at both ends) at the same time. 

"
p03791, Robot Racing,"you are developing frog-shaped robots, and decided to race them against each other. first, you placed n robots onto a number line.
these robots are numbered 1 through n.
the current coordinate of robot i is x_i.
here, all x_i are integers, and 0 &lt; x_1 &lt; x_2 &lt; ... &lt; x_n. you will repeatedly perform the following operation: select a robot on the number line. let the coordinate of the robot be x. select the destination coordinate, either x-1 or x-2, that is not occupied by another robot. the robot now jumps to the selected coordinate. when the coordinate of a robot becomes 0 or less, the robot is considered finished and will be removed from the number line immediately.
you will repeat the operation until all the robots finish the race. depending on your choice in the operation, the n robots can finish the race in different orders.
in how many different orders can the n robots finish the race?
find the answer modulo 10^9+7. 
"
p03792, Row to Column,"there is a square-shaped grid with n vertical rows and n horizontal columns.
we will denote the square at the i-th row from the top and the j-th column from the left as (i,\ j). initially, each square is either white or black.
the initial color of the grid is given to you as characters a_{ij}, arranged in a square shape.
if the square (i,\ j) is white, a_{ij} is .. if it is black, a_{ij} is #. you are developing a robot that repaints the grid.
it can repeatedly perform the following operation: select two integers i, j (1 ≤ i,\ j ≤ n). memorize the colors of the squares (i,\ 1), (i,\ 2), ..., (i,\ n) as c_1, c_2, ..., c_n, respectively. then, repaint the squares (1,\ j), (2,\ j), ..., (n,\ j) with the colors c_1, c_2, ..., c_n, respectively. your objective is to turn all the squares black.
determine whether it is possible, and find the minimum necessary number of operations to achieve it if the answer is positive. 
"
p03793, Robot and String,"you are developing a robot that processes strings.
when the robot is given a string t consisting of lowercase english letters, it processes the string by following the procedure below: let i be the smallest index such that t_i = t_{i + 1}. if such an index does not exist, terminate the procedure. if t_i is z, remove t_i and t_{i + 1} from t. otherwise, let c be the next letter of t_i in the english alphabet, and replace t_i and t_{i + 1} together with c, reducing the length of t by 1. go back to step 1. for example, when the robot is given the string axxxxza, it will be processed as follows: axxxxza → ayxxza → ayyza → azza → aa → b. you are given a string s consisting of lowercase english letters.
answer q queries. the i-th query is as follows: assume that the robot is given a substring of s that runs from the l_i-th character and up to the r_i-th character (inclusive). will the string be empty after processing? 

"
p03794, Oriented Tree,"there is a tree t with n vertices, numbered 1 through n.
for each 1 ≤ i ≤ n - 1, the i-th edge connects vertices a_i and b_i. snuke is constructing a directed graph t' by arbitrarily assigning direction to each edge in t. (there are 2^{n - 1} different ways to construct t'.) for a fixed t', we will define d(s,\ t) for each 1 ≤ s,\ t ≤ n, as follows: d(s,\ t) = (the number of edges that must be traversed against the assigned direction when traveling from vertex s to vertex t) in particular, d(s,\ s) = 0 for each 1 ≤ s ≤ n.
also note that, in general, d(s,\ t) ≠ d(t,\ s). we will further define d as the following: snuke is constructing t' so that d will be the minimum possible value.
how many different ways are there to construct t' so that d will be the minimum possible value, modulo 10^9 + 7? 
"
p03795, Restaurant,"snuke has a favorite restaurant. the price of any meal served at the restaurant is 800 yen (the currency of japan), and each time a customer orders 15 meals, the restaurant pays 200 yen back to the customer. so far, snuke has ordered n meals at the restaurant.
let the amount of money snuke has paid to the restaurant be x yen, and let the amount of money the restaurant has paid back to snuke be y yen.
find x-y. 
"
p03796, Training Camp,"snuke loves working out. he is now exercising n times. before he starts exercising, his power is 1. after he exercises for the i-th time, his power gets multiplied by i. find snuke's power after he exercises n times. since the answer can be extremely large, print the answer modulo 10^{9}+7. 
"
p03797, Scc Puzzle,"snuke loves puzzles. today, he is working on a puzzle using s- and c-shaped pieces.
in this puzzle, you can combine two c-shaped pieces into one s-shaped piece, as shown in the figure below: snuke decided to create as many scc groups as possible by putting together one s-shaped piece and two c-shaped pieces. find the maximum number of scc groups that can be created when snuke has n s-shaped pieces and m c-shaped pieces. 
"
p03798, Menagerie,"snuke, who loves animals, built a zoo. there are n animals in this zoo. they are conveniently numbered 1 through n, and arranged in a circle.
the animal numbered i (2≤i≤n-1) is adjacent to the animals numbered i-1 and i+1. also, the animal numbered 1 is adjacent to the animals numbered 2 and n, and the animal numbered n is adjacent to the animals numbered n-1 and 1. there are two kinds of animals in this zoo: honest sheep that only speak the truth, and lying wolves that only tell lies. snuke cannot tell the difference between these two species, and asked each animal the following question: ""are your neighbors of the same species?"" the animal numbered i answered s_i. here, if s_i is o, the animal said that the two neighboring animals are of the same species, and if s_i is x, the animal said that the two neighboring animals are of different species. more formally, a sheep answered o if the two neighboring animals are both sheep or both wolves, and answered x otherwise.
similarly, a wolf answered x if the two neighboring animals are both sheep or both wolves, and answered o otherwise. snuke is wondering whether there is a valid assignment of species to the animals that is consistent with these responses. if there is such an assignment, show one such assignment. otherwise, print -1. 
"
p03799, Scc Puzzle,"snuke loves puzzles. today, he is working on a puzzle using s- and c-shaped pieces.
in this puzzle, you can combine two c-shaped pieces into one s-shaped piece, as shown in the figure below: snuke decided to create as many scc groups as possible by putting together one s-shaped piece and two c-shaped pieces. find the maximum number of scc groups that can be created when snuke has n s-shaped pieces and m c-shaped pieces. 
"
p03800, Menagerie,"snuke, who loves animals, built a zoo. there are n animals in this zoo. they are conveniently numbered 1 through n, and arranged in a circle.
the animal numbered i (2≤i≤n-1) is adjacent to the animals numbered i-1 and i+1. also, the animal numbered 1 is adjacent to the animals numbered 2 and n, and the animal numbered n is adjacent to the animals numbered n-1 and 1. there are two kinds of animals in this zoo: honest sheep that only speak the truth, and lying wolves that only tell lies. snuke cannot tell the difference between these two species, and asked each animal the following question: ""are your neighbors of the same species?"" the animal numbered i answered s_i. here, if s_i is o, the animal said that the two neighboring animals are of the same species, and if s_i is x, the animal said that the two neighboring animals are of different species. more formally, a sheep answered o if the two neighboring animals are both sheep or both wolves, and answered x otherwise.
similarly, a wolf answered x if the two neighboring animals are both sheep or both wolves, and answered o otherwise. snuke is wondering whether there is a valid assignment of species to the animals that is consistent with these responses. if there is such an assignment, show one such assignment. otherwise, print -1. 
"
p03801, Frequency,"snuke loves constructing integer sequences. there are n piles of stones, numbered 1 through n.
the pile numbered i consists of a_i stones. snuke will construct an integer sequence s of length σa_i, as follows: among the piles with the largest number of stones remaining, let x be the index of the pile with the smallest index. append x to the end of s. select a pile with one or more stones remaining, and remove a stone from that pile. if there is a pile with one or more stones remaining, go back to step 1. otherwise, terminate the process. we are interested in the lexicographically smallest sequence that can be constructed. for each of the integers 1,2,3,...,n, how many times does it occur in the lexicographically smallest sequence? 
"
p03802, Flags,"snuke loves flags. snuke is placing n flags on a line. the i-th flag can be placed at either coordinate x_i or coordinate y_i. snuke thinks that the flags look nicer when the smallest distance between two of them, d, is larger. find the maximum possible value of d. 
"
p03803, One Card Poker,"alice and bob are playing one card poker.
one card poker is a two-player game using playing cards.   each card in this game shows an integer between 1 and 13, inclusive.
the strength of a card is determined by the number written on it, as follows:   weak 2 &lt; 3 &lt; 4 &lt; 5 &lt; 6 &lt; 7 &lt; 8 &lt; 9 &lt; 10 &lt; 11 &lt; 12 &lt; 13 &lt; 1 strong   one card poker is played as follows:   each player picks one card from the deck. the chosen card becomes the player's hand. the players reveal their hands to each other. the player with the stronger card wins the game.
if their cards are equally strong, the game is drawn.   you are watching alice and bob playing the game, and can see their hands.
the number written on alice's card is a, and the number written on bob's card is b.
write a program to determine the outcome of the game.   
"
p03804, Template Matching,"you are given an image a composed of n rows and n columns of pixels, and a template image b composed of m rows and m columns of pixels.
a pixel is the smallest element of an image, and in this problem it is a square of size 1×1.
also, the given images are binary images, and the color of each pixel is either white or black.   in the input, every pixel is represented by a character: . corresponds to a white pixel, and # corresponds to a black pixel.
the image a is given as n strings a_1,...,a_n.
the j-th character in the string a_i corresponds to the pixel at the i-th row and j-th column of the image a (1≦i,j≦n).
similarly, the template image b is given as m strings b_1,...,b_m.
the j-th character in the string b_i corresponds to the pixel at the i-th row and j-th column of the template image b (1≦i,j≦m).   determine whether the template image b is contained in the image a when only parallel shifts can be applied to the images.   
"
p03805,stroke Path,"you are given an undirected unweighted graph with n vertices and m edges that contains neither self-loops nor double edges.
here, a self-loop is an edge where a_i = b_i (1≤i≤m), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1≤i&lt;j≤m).
how many different paths start from vertex 1 and visit all the vertices exactly once?
here, the endpoints of a path are considered visited.   for example, let us assume that the following undirected graph shown in figure 1 is given. figure 1: an example of an undirected graph the following path shown in figure 2 satisfies the condition. figure 2: an example of a path that satisfies the condition however, the following path shown in figure 3 does not satisfy the condition, because it does not visit all the vertices. figure 3: an example of a path that does not satisfy the condition neither the following path shown in figure 4, because it does not start from vertex 1. figure 4: another example of a path that does not satisfy the condition 

"
p03806, Mixing Experiment,"dolphin is planning to generate a small amount of a certain chemical substance c.
in order to generate the substance c, he must prepare a solution which is a mixture of two substances a and b in the ratio of m_a:m_b.
he does not have any stock of chemicals, however, so he will purchase some chemicals at a local pharmacy.
the pharmacy sells n kinds of chemicals. for each kind of chemical, there is exactly one package of that chemical in stock.
the package of chemical i contains a_i grams of the substance a and b_i grams of the substance b, and is sold for c_i yen (the currency of japan).
dolphin will purchase some of these packages. for some reason, he must use all contents of the purchased packages to generate the substance c.
find the minimum amount of money required to generate the substance c.
if it is not possible to generate the substance c by purchasing any combination of packages at the pharmacy, report that fact.   
"
p03807, Addition,"there are n integers written on a blackboard. the i-th integer is a_i. takahashi will repeatedly perform the following operation on these numbers: select a pair of integers, a_i and a_j, that have the same parity (that is, both are even or both are odd) and erase them. then, write a new integer on the blackboard that is equal to the sum of those integers, a_i+a_j. determine whether it is possible to have only one integer on the blackboard. 
"
p03808, Boxes,"there are n boxes arranged in a circle. the i-th box contains a_i stones. determine whether it is possible to remove all the stones from the boxes by repeatedly performing the following operation: select one box. let the box be the i-th box. then, for each j from 1 through n, remove exactly j stones from the (i+j)-th box. here, the (n+k)-th box is identified with the k-th box. note that the operation cannot be performed if there is a box that does not contain enough number of stones to be removed. 
"
p03809, Cleaning,"there is a tree with n vertices, numbered 1 through n.
the i-th of the n-1 edges connects vertices a_i and b_i. currently, there are a_i stones placed on vertex i.
determine whether it is possible to remove all the stones from the vertices by repeatedly performing the following operation: select a pair of different leaves. then, remove exactly one stone from every vertex on the path between those two vertices.
  here, a leaf is a vertex of the tree whose degree is 1, and the selected leaves themselves are also considered as vertices on the path connecting them. note that the operation cannot be performed if there is a vertex with no stone on the path. 
"
p03810, Decrementing,"there are n integers written on a blackboard. the i-th integer is a_i, and the greatest common divisor of these integers is 1. takahashi and aoki will play a game using these integers. in this game, starting from takahashi the two player alternately perform the following operation: select one integer on the blackboard that is not less than 2, and subtract 1 from the integer. then, divide all the integers on the black board by g, where g is the greatest common divisor of the integers written on the blackboard. the player who is left with only 1s on the blackboard and thus cannot perform the operation, loses the game.
assuming that both players play optimally, determine the winner of the game. 
"
p03811, Rearranging,"there are n integers written on a blackboard. the i-th integer is a_i. takahashi and aoki will arrange these integers in a row, as follows: first, takahashi will arrange the integers as he wishes. then, aoki will repeatedly swap two adjacent integers that are coprime, as many times as he wishes. we will assume that takahashi acts optimally so that the eventual sequence will be lexicographically as small as possible, and we will also assume that aoki acts optimally so that the eventual sequence will be lexicographically as large as possible.
find the eventual sequence that will be produced. 
"
p03812, Tree Game,"there is a tree with n vertices, numbered 1 through n.
the i-th of the n-1 edges connects vertices a_i and b_i. currently, there are a_i stones placed on vertex i.
takahashi and aoki will play a game using this tree. first, takahashi will select a vertex and place a piece on it.
then, starting from takahashi, they will alternately perform the following operation: remove one stone from the vertex currently occupied by the piece. then, move the piece to a vertex that is adjacent to the currently occupied vertex. the player who is left with no stone on the vertex occupied by the piece and thus cannot perform the operation, loses the game.
find all the vertices v such that takahashi can place the piece on v at the beginning and win the game. 
"
p03813, ABC/ARC,"smeke has decided to participate in atcoder beginner contest (abc) if his current rating is less than 1200, and participate in atcoder regular contest (arc) otherwise. you are given smeke's current rating, x. print abc if smeke will participate in abc, and print arc otherwise. 
"
p03814, A to Z String,"snuke has decided to construct a string that starts with a and ends with z, by taking out a substring of a string s (that is, a consecutive part of s). find the greatest length of the string snuke can construct. here, the test set guarantees that there always exists a substring of s that starts with a and ends with z. 
"
p03815, X: Yet Another Die Game,"snuke has decided to play with a six-sided die. each of its six sides shows an integer 1 through 6, and two numbers on opposite sides always add up to 7. snuke will first put the die on the table with an arbitrary side facing upward, then repeatedly perform the following operation: operation: rotate the die 90° toward one of the following directions: left, right, front (the die will come closer) and back (the die will go farther). then, obtain y points where y is the number written in the side facing upward. for example, let us consider the situation where the side showing 1 faces upward, the near side shows 5 and the right side shows 4, as illustrated in the figure.
if the die is rotated toward the right as shown in the figure, the side showing 3 will face upward.
besides, the side showing 4 will face upward if the die is rotated toward the left, the side showing 2 will face upward if the die is rotated toward the front, and the side showing 5 will face upward if the die is rotated toward the back. find the minimum number of operation snuke needs to perform in order to score at least x points in total. 
"
p03816, Card Eater,"snuke has decided to play a game using cards.
he has a deck consisting of n cards. on the i-th card from the top, an integer a_i is written. he will perform the operation described below zero or more times, so that the values written on the remaining cards will be pairwise distinct. find the maximum possible number of remaining cards. here, n is odd, which guarantees that at least one card can be kept. operation: take out three arbitrary cards from the deck. among those three cards, eat two: one with the largest value, and another with the smallest value. then, return the remaining one card to the deck. 
"
p03817, X: Yet Another Die Game,"snuke has decided to play with a six-sided die. each of its six sides shows an integer 1 through 6, and two numbers on opposite sides always add up to 7. snuke will first put the die on the table with an arbitrary side facing upward, then repeatedly perform the following operation: operation: rotate the die 90° toward one of the following directions: left, right, front (the die will come closer) and back (the die will go farther). then, obtain y points where y is the number written in the side facing upward. for example, let us consider the situation where the side showing 1 faces upward, the near side shows 5 and the right side shows 4, as illustrated in the figure.
if the die is rotated toward the right as shown in the figure, the side showing 3 will face upward.
besides, the side showing 4 will face upward if the die is rotated toward the left, the side showing 2 will face upward if the die is rotated toward the front, and the side showing 5 will face upward if the die is rotated toward the back. find the minimum number of operation snuke needs to perform in order to score at least x points in total. 
"
p03818, Card Eater,"snuke has decided to play a game using cards.
he has a deck consisting of n cards. on the i-th card from the top, an integer a_i is written. he will perform the operation described below zero or more times, so that the values written on the remaining cards will be pairwise distinct. find the maximum possible number of remaining cards. here, n is odd, which guarantees that at least one card can be kept. operation: take out three arbitrary cards from the deck. among those three cards, eat two: one with the largest value, and another with the smallest value. then, return the remaining one card to the deck. 
"
p03819, Snuke Line,"snuke has decided to play a game, where the player runs a railway company.
there are m+1 stations on snuke line, numbered 0 through m.
a train on snuke line stops at station 0 and every d-th station thereafter, where d is a predetermined constant for each train.
for example, if d = 3, the train stops at station 0, 3, 6, 9, and so forth. there are n kinds of souvenirs sold in areas around snuke line. the i-th kind of souvenirs can be purchased when the train stops at one of the following stations: stations l_i, l_i+1, l_i+2, ..., r_i. there are m values of d, the interval between two stops, for trains on snuke line: 1, 2, 3, ..., m.
for each of these m values, find the number of the kinds of souvenirs that can be purchased if one takes a train with that value of d at station 0.
here, assume that it is not allowed to change trains. 
"
p03820, Solitaire,"snuke has decided to play with n cards and a deque (that is, a double-ended queue).
each card shows an integer from 1 through n, and the deque is initially empty. snuke will insert the cards at the beginning or the end of the deque one at a time, in order from 1 to n.
then, he will perform the following action n times: take out the card from the beginning or the end of the deque and eat it. afterwards, we will construct an integer sequence by arranging the integers written on the eaten cards, in the order they are eaten. among the sequences that can be obtained in this way, find the number of the sequences such that the k-th element is 1. print the answer modulo 10^{9} + 7. 
"
p03821, Multiple Array,"there are an integer sequence a_1,...,a_n consisting of n terms, and n buttons.
when the i-th (1 ≦ i ≦ n) button is pressed, the values of the i terms from the first through the i-th are all incremented by 1. there is also another integer sequence b_1,...,b_n. takahashi will push the buttons some number of times so that for every i, a_i will be a multiple of b_i. find the minimum number of times takahashi will press the buttons. 
"
p03822, Tournament,"n contestants participated in a competition. the total of n-1 matches were played in a knockout tournament.
for some reasons, the tournament may not be ""fair"" for all the contestants.
that is, the number of the matches that must be played in order to win the championship may be different for each contestant. the structure of the tournament is formally described at the end of this statement. after each match, there were always one winner and one loser. the last contestant standing was declared the champion. figure: an example of a tournament for convenience, the contestants were numbered 1 through n. the contestant numbered 1 was the champion, and the contestant numbered i(2 ≦ i ≦ n) was defeated in a match against the contestant numbered a_i. we will define the depth of the tournament as the maximum number of the matches that must be played in order to win the championship over all the contestants. find the minimum possible depth of the tournament. the formal description of the structure of the tournament is as follows. in the i-th match, one of the following played against each other: two predetermined contestants one predetermined contestant and the winner of the j-th match, where j(j&lt;i) was predetermined the winner of the j-th match and the winner of the k-th match, where j and k (j,k&lt;i, j ≠ k) were predetermined such structure is valid structure of the tournament, if and only if no contestant who has already been defeated in a match will never play in a match, regardless of the outcome of the matches. 
"
p03823, Division into Two,"there is a set consisting of n distinct integers. the i-th smallest element in this set is s_i. we want to divide this set into two sets, x and y, such that: the absolute difference of any two distinct elements in x is a or greater. the absolute difference of any two distinct elements in y is b or greater. how many ways are there to perform such division, modulo 10^9 + 7? note that one of x and y may be empty. 
"
p03824, Uninity,"we will recursively define uninity of a tree, as follows: (uni is a japanese word for sea urchins.) a tree consisting of one vertex is a tree of uninity 0. suppose there are zero or more trees of uninity k, and a vertex v. if a vertex is selected from each tree of uninity k and connected to v with an edge, the resulting tree is a tree of uninity k+1. it can be shown that a tree of uninity k is also a tree of uninity k+1,k+2,..., and so forth. you are given a tree consisting of n vertices.
the vertices of the tree are numbered 1 through n, and the i-th of the n-1 edges connects vertices a_i and b_i. find the minimum k such that the given tree is a tree of uninity k. 
"
p03825, Eternal Average,"there are n zeros and m ones written on a blackboard.
starting from this state, we will repeat the following operation: select k of the rational numbers written on the blackboard and erase them, then write a new number on the blackboard that is equal to the arithmetic mean of those k numbers.
here, assume that n + m - 1 is divisible by k - 1. then, if we repeat this operation until it is no longer applicable, there will be eventually one rational number left on the blackboard. find the number of the different possible values taken by this rational number, modulo 10^9 + 7. 
"
p03826, Two Rectangles,"there are two rectangles.
the lengths of the vertical sides of the first rectangle are a, and the lengths of the horizontal sides of the first rectangle are b.
the lengths of the vertical sides of the second rectangle are c, and the lengths of the horizontal sides of the second rectangle are d. print the area of the rectangle with the larger area.
if the two rectangles have equal areas, print that area. 
"
p03827, Increment Decrement,"you have an integer variable x.
initially, x=0. some person gave you a string s of length n, and using the string you performed the following operation n times.
in the i-th operation, you incremented the value of x by 1 if s_i=i, and decremented the value of x by 1 if s_i=d. find the maximum value taken by x during the operations (including before the first operation, and after the last operation). 
"
p03828, Factors of Factorial,"you are given an integer n.
find the number of the positive divisors of n!, modulo 10^9+7. 
"
p03829, Walk and Teleport,"there are n towns on a line running east-west.
the towns are numbered 1 through n, in order from west to east.
each point on the line has a one-dimensional coordinate, and a point that is farther east has a greater coordinate value.
the coordinate of town i is x_i. you are now at town 1, and you want to visit all the other towns.
you have two ways to travel: walk on the line.
your fatigue level increases by a each time you travel a distance of 1, regardless of direction. 
 teleport to any location of your choice.
your fatigue level increases by b, regardless of the distance covered. 
 find the minimum possible total increase of your fatigue level when you visit all the towns in these two ways. 
"
p03830, Factors of Factorial,"you are given an integer n.
find the number of the positive divisors of n!, modulo 10^9+7. 
"
p03831, Walk and Teleport,"there are n towns on a line running east-west.
the towns are numbered 1 through n, in order from west to east.
each point on the line has a one-dimensional coordinate, and a point that is farther east has a greater coordinate value.
the coordinate of town i is x_i. you are now at town 1, and you want to visit all the other towns.
you have two ways to travel: walk on the line.
your fatigue level increases by a each time you travel a distance of 1, regardless of direction. 
 teleport to any location of your choice.
your fatigue level increases by b, regardless of the distance covered. 
 find the minimum possible total increase of your fatigue level when you visit all the towns in these two ways. 
"
p03832, Grouping,"there are n people, conveniently numbered 1 through n.
we want to divide them into some number of groups, under the following two conditions: every group contains between a and b people, inclusive. 
 let f_i be the number of the groups containing exactly i people. then, for all i, either f_i=0 or c≤f_i≤d holds. 
 find the number of these ways to divide the people into groups.
here, two ways to divide them into groups is considered different if and only if there exists two people such that they belong to the same group in exactly one of the two ways.
since the number of these ways can be extremely large, print the count modulo 10^9+7. 
"
p03833, Yakiniku Restaurants,"there are n barbecue restaurants along a street.
the restaurants are numbered 1 through n from west to east, and the distance between restaurant i and restaurant i+1 is a_i. joisino has m tickets, numbered 1 through m.
every barbecue restaurant offers barbecue meals in exchange for these tickets.
restaurant i offers a meal of deliciousness b_{i,j} in exchange for ticket j.
each ticket can only be used once, but any number of tickets can be used at a restaurant. joisino wants to have m barbecue meals by starting from a restaurant of her choice, then repeatedly traveling to another barbecue restaurant and using unused tickets at the restaurant at her current location.
her eventual happiness is calculated by the following formula: ""(the total deliciousness of the meals eaten) - (the total distance traveled)"".
find her maximum possible eventual happiness. 
"
p03834, Haiku,"as a new year's gift, dolphin received a string s of length 19.
the string s has the following format: [five lowercase english letters],[seven lowercase english letters],[five lowercase english letters].
dolphin wants to convert the comma-separated string s into a space-separated string.
write a program to perform the conversion for him.   
"
p03835, Sum of Three Integers,"you are given two integers k and s.
three variable x, y and z takes integer values satisfying 0≤x,y,z≤k.
how many different assignments of values to x, y and z are there such that x + y + z = s?   
"
p03836, Back and Forth,"dolphin resides in two-dimensional cartesian plane, with the positive x-axis pointing right and the positive y-axis pointing up.
currently, he is located at the point (sx,sy). in each second, he can move up, down, left or right by a distance of 1.
here, both the x- and y-coordinates before and after each movement must be integers.
he will first visit the point (tx,ty) where sx &lt; tx and sy &lt; ty, then go back to the point (sx,sy), then visit the point (tx,ty) again, and lastly go back to the point (sx,sy).
here, during the whole travel, he is not allowed to pass through the same point more than once, except the points (sx,sy) and (tx,ty).
under this condition, find a shortest path for him.   
"
p03837, Candidates of No Shortest Paths,"you are given an undirected connected weighted graph with n vertices and m edges that contains neither self-loops nor double edges.
the i-th (1≤i≤m) edge connects vertex a_i and vertex b_i with a distance of c_i.
here, a self-loop is an edge where a_i = b_i (1≤i≤m), and double edges are two edges where (a_i,b_i)=(a_j,b_j) or (a_i,b_i)=(b_j,a_j) (1≤i&lt;j≤m).
a connected graph is a graph where there is a path between every pair of different vertices.
find the number of the edges that are not contained in any shortest path between any pair of different vertices.   
"
p03838, Simple Calculator,"snuke has a calculator. it has a display and two buttons. initially, the display shows an integer x.
snuke wants to change this value into another integer y, by pressing the following two buttons some number of times in arbitrary order: button a: when pressed, the value on the display is incremented by 1. button b: when pressed, the sign of the value on the display is reversed. find the minimum number of times snuke needs to press the buttons to achieve his objective.
it can be shown that the objective is always achievable regardless of the values of the integers x and y. 
"
p03839, Contiguous Repainting,"there are n squares aligned in a row.
the i-th square from the left contains an integer a_i. initially, all the squares are white.
snuke will perform the following operation some number of times: select k consecutive squares. then, paint all of them white, or paint all of them black. here, the colors of the squares are overwritten. after snuke finishes performing the operation, the score will be calculated as the sum of the integers contained in the black squares.
find the maximum possible score. 
"
p03840, Tetromino Tiling,"a tetromino is a figure formed by joining four squares edge to edge.
we will refer to the following seven kinds of tetromino as i-, o-, t-, j-, l-, s- and z-tetrominos, respectively: snuke has many tetrominos. the number of i-, o-, t-, j-, l-, s- and z-tetrominos in his possession are a_i, a_o, a_t, a_j, a_l, a_s and a_z, respectively.
snuke will join k of his tetrominos to form a rectangle that is two squares tall and 2k squares wide.
here, the following rules must be followed: when placing each tetromino, rotation is allowed, but reflection is not. each square in the rectangle must be covered by exactly one tetromino. no part of each tetromino may be outside the rectangle. snuke wants to form as large a rectangle as possible.
find the maximum possible value of k. 
"
p03841,th K,"you are given an integer sequence x of length n.
determine if there exists an integer sequence a that satisfies all of the following conditions, and if it exists, construct an instance of a. a is n^2 in length, containing n copies of each of the integers 1, 2, ..., n. for each 1 ≤ i ≤ n, the i-th occurrence of the integer i from the left in a is the x_i-th element of a from the left. 

"
p03842, Next or Nextnext,"you are given an integer sequence a of length n.
how many permutations p of the integers 1 through n satisfy the following condition? for each 1 ≤ i ≤ n, at least one of the following holds: p_i = a_i and p_{p_i} = a_i. find the count modulo 10^9 + 7. 
"
p03843, Black Radius,"there is a tree with n vertices.
the vertices are numbered 1 through n.
for each 1 ≤ i ≤ n - 1, the i-th edge connects vertices a_i and b_i.
the lengths of all the edges are 1. snuke likes some of the vertices.
the information on his favorite vertices are given to you as a string s of length n.
for each 1 ≤ i ≤ n, s_i is 1 if snuke likes vertex i, and 0 if he does not like vertex i. initially, all the vertices are white.
snuke will perform the following operation exactly once: select a vertex v that he likes, and a non-negative integer d. then, paint all the vertices black whose distances from v are at most d. find the number of the possible combinations of colors of the vertices after the operation. 
"
p03844, Addition and Subtraction Easy,"joisino wants to evaluate the formula ""a op b"".
here, a and b are integers, and the binary operator op is either + or -.
your task is to evaluate the formula instead of her. 
"
p03845, Contest with Drinks Easy,"joisino is about to compete in the final round of a certain programming competition.
in this contest, there are n problems, numbered 1 through n.
joisino knows that it takes her t_i seconds to solve problem i(1≦i≦n). also, there are m kinds of drinks offered to the contestants, numbered 1 through m.
if joisino takes drink i(1≦i≦m), her brain will be stimulated and the time it takes for her to solve problem p_i will become x_i seconds.
it does not affect the time to solve the other problems. a contestant is allowed to take exactly one of the drinks before the start of the contest.
for each drink, joisino wants to know how many seconds it takes her to solve all the problems if she takes that drink.
here, assume that the time it takes her to solve all the problems is equal to the sum of the time it takes for her to solve individual problems.
your task is to write a program to calculate it instead of her. 
"
p03846, Lining Up,"there are n people, conveniently numbered 1 through n.
they were standing in a row yesterday, but now they are unsure of the order in which they were standing.
however, each person remembered the following fact: the absolute difference of the number of the people who were standing to the left of that person, and the number of the people who were standing to the right of that person.
according to their reports, the difference above for person i is a_i. based on these reports, find the number of the possible orders in which they were standing.
since it can be extremely large, print the answer modulo 10^9+7.
note that the reports may be incorrect and thus there may be no consistent order.
in such a case, print 0. 
"
p03847, Xor Sum,"you are given a positive integer n.
find the number of the pairs of integers u and v (0≦u,v≦n) such that there exist two non-negative integers a and b satisfying a xor b=u and a+b=v.
here, xor denotes the bitwise exclusive or.
since it can be extremely large, compute the answer modulo 10^9+7. 
"
p03848, Lining Up,"there are n people, conveniently numbered 1 through n.
they were standing in a row yesterday, but now they are unsure of the order in which they were standing.
however, each person remembered the following fact: the absolute difference of the number of the people who were standing to the left of that person, and the number of the people who were standing to the right of that person.
according to their reports, the difference above for person i is a_i. based on these reports, find the number of the possible orders in which they were standing.
since it can be extremely large, print the answer modulo 10^9+7.
note that the reports may be incorrect and thus there may be no consistent order.
in such a case, print 0. 
"
p03849, Xor Sum,"you are given a positive integer n.
find the number of the pairs of integers u and v (0≦u,v≦n) such that there exist two non-negative integers a and b satisfying a xor b=u and a+b=v.
here, xor denotes the bitwise exclusive or.
since it can be extremely large, compute the answer modulo 10^9+7. 
"
p03850, Addition and Subtraction Hard,"joisino has a formula consisting of n terms: a_1 op_1 a_2 ... op_{n-1} a_n.
here, a_i is an integer, and op_i is an binary operator either + or -.
because joisino loves large numbers, she wants to maximize the evaluated value of the formula by inserting an arbitrary number of pairs of parentheses (possibly zero) into the formula.
opening parentheses can only be inserted immediately before an integer, and closing parentheses can only be inserted immediately after an integer.
it is allowed to insert any number of parentheses at a position.
your task is to write a program to find the maximum possible evaluated value of the formula after inserting an arbitrary number of pairs of parentheses. 
"
p03851, Contest with Drinks Hard,"joisino is about to compete in the final round of a certain programming competition.
in this contest, there are n problems, numbered 1 through n.
joisino knows that it takes her t_i seconds to solve problem i(1≦i≦n). in this contest, a contestant will first select some number of problems to solve.
then, the contestant will solve the selected problems.
after that, the score of the contestant will be calculated as follows: (the score) = (the number of the pairs of integers l and r (1≦l≦r≦n) such that for every i satisfying l≦i≦r, problem i is solved) - (the total number of seconds it takes for the contestant to solve the selected problems) note that a contestant is allowed to choose to solve zero problems, in which case the score will be 0. also, there are m kinds of drinks offered to the contestants, numbered 1 through m.
if joisino takes drink i(1≦i≦m), her brain will be stimulated and the time it takes for her to solve problem p_i will become x_i seconds.
here, x_i may be greater than the length of time originally required to solve problem p_i.
taking drink i does not affect the time required to solve the other problems. a contestant is allowed to take exactly one of the drinks before the start of the contest.
for each drink, joisino wants to know the maximum score that can be obtained in the contest if she takes that drink.
your task is to write a program to calculate it instead of her. 
"
p03852, UOIAUAI,"given a lowercase english letter c, determine whether it is a vowel. here, there are five vowels in the english alphabet: a, e, i, o and u. 
"
p03853, Thin,"there is an image with a height of h pixels and a width of w pixels. each of the pixels is represented by either . or *. the character representing the pixel at the i-th row from the top and the j-th column from the left, is denoted by c_{i,j}. extend this image vertically so that its height is doubled. that is, print a image with a height of 2h pixels and a width of w pixels where the pixel at the i-th row and j-th column is equal to c_{(i+1)/2,j} (the result of division is rounded down). 
"
p03854, Daydream,"you are given a string s consisting of lowercase english letters.
another string t is initially empty.
determine whether it is possible to obtain s = t by performing the following operation an arbitrary number of times: append one of the following at the end of t: dream, dreamer, erase and eraser. 

"
p03855, Connectivity,"there are n cities. there are also k roads and l railways, extending between the cities.
the i-th road bidirectionally connects the p_i-th and q_i-th cities, and the i-th railway bidirectionally connects the r_i-th and s_i-th cities.
no two roads connect the same pair of cities. similarly, no two railways connect the same pair of cities. we will say city a and b are connected by roads if city b is reachable from city a by traversing some number of roads. here, any city is considered to be connected to itself by roads.
we will also define connectivity by railways similarly. for each city, find the number of the cities connected to that city by both roads and railways. 
"
p03856, Daydream,"you are given a string s consisting of lowercase english letters.
another string t is initially empty.
determine whether it is possible to obtain s = t by performing the following operation an arbitrary number of times: append one of the following at the end of t: dream, dreamer, erase and eraser. 

"
p03857, Connectivity,"there are n cities. there are also k roads and l railways, extending between the cities.
the i-th road bidirectionally connects the p_i-th and q_i-th cities, and the i-th railway bidirectionally connects the r_i-th and s_i-th cities.
no two roads connect the same pair of cities. similarly, no two railways connect the same pair of cities. we will say city a and b are connected by roads if city b is reachable from city a by traversing some number of roads. here, any city is considered to be connected to itself by roads.
we will also define connectivity by railways similarly. for each city, find the number of the cities connected to that city by both roads and railways. 
"
p03858, Manhattan Compass,"there are n pinholes on the xy-plane. the i-th pinhole is located at (x_i,y_i). we will denote the manhattan distance between the i-th and j-th pinholes as d(i,j)(=|x_i-x_j|+|y_i-y_j|). you have a peculiar pair of compasses, called manhattan compass.
this instrument always points at two of the pinholes.
the two legs of the compass are indistinguishable, thus we do not distinguish the following two states: the state where the compass points at the p-th and q-th pinholes, and the state where it points at the q-th and p-th pinholes. when the compass points at the p-th and q-th pinholes and d(p,q)=d(p,r), one of the legs can be moved so that the compass will point at the p-th and r-th pinholes. initially, the compass points at the a-th and b-th pinholes.
find the number of the pairs of pinholes that can be pointed by the compass. 
"
p03859, Shuffling,"there is a string s of length n consisting of characters 0 and 1. you will perform the following operation for each i = 1, 2, ..., m: arbitrarily permute the characters within the substring of s starting at the l_i-th character from the left and extending through the r_i-th character. here, the sequence l_i is non-decreasing. how many values are possible for s after the m operations, modulo 1000000007(= 10^9+7)? 
"
p03860, AtCoder *** Contest,"snuke is going to open a contest named ""atcoder s contest"".
here, s is a string of length 1 or greater, where the first character is an uppercase english letter, and the second and subsequent characters are lowercase english letters. snuke has decided to abbreviate the name of the contest as ""axc"".
here, x is the uppercase english letter at the beginning of s. given the name of the contest, print the abbreviation of the name. 
"
p03861, Between a and b ...,"you are given nonnegative integers a and b (a ≤ b), and a positive integer x.
among the integers between a and b, inclusive, how many are divisible by x? 
"
p03862, Boxes and Candies,"there are n boxes arranged in a row.
initially, the i-th box from the left contains a_i candies. snuke can perform the following operation any number of times: choose a box containing at least one candy, and eat one of the candies in the chosen box. his objective is as follows: any two neighboring boxes contain at most x candies in total. find the minimum number of operations required to achieve the objective. 
"
p03863, An Ordinary Game,"there is a string s of length 3 or greater.
no two neighboring characters in s are equal. takahashi and aoki will play a game against each other.
the two players alternately performs the following operation, takahashi going first: remove one of the characters in s, excluding both ends. however, a character cannot be removed if removal of the character would result in two neighboring equal characters in s. the player who becomes unable to perform the operation, loses the game. determine which player will win when the two play optimally. 
"
p03864, Boxes and Candies,"there are n boxes arranged in a row.
initially, the i-th box from the left contains a_i candies. snuke can perform the following operation any number of times: choose a box containing at least one candy, and eat one of the candies in the chosen box. his objective is as follows: any two neighboring boxes contain at most x candies in total. find the minimum number of operations required to achieve the objective. 
"
p03865, An Ordinary Game,"there is a string s of length 3 or greater.
no two neighboring characters in s are equal. takahashi and aoki will play a game against each other.
the two players alternately performs the following operation, takahashi going first: remove one of the characters in s, excluding both ends. however, a character cannot be removed if removal of the character would result in two neighboring equal characters in s. the player who becomes unable to perform the operation, loses the game. determine which player will win when the two play optimally. 
"
p03866, Cosmic Rays,"on the xy-plane, snuke is going to travel from the point (x_s, y_s) to the point (x_t, y_t).
he can move in arbitrary directions with speed 1.
here, we will consider him as a point without size. there are n circular barriers deployed on the plane.
the center and the radius of the i-th barrier are (x_i, y_i) and r_i, respectively.
the barriers may overlap or contain each other. a point on the plane is exposed to cosmic rays if the point is not within any of the barriers. snuke wants to avoid exposure to cosmic rays as much as possible during the travel.
find the minimum possible duration of time he is exposed to cosmic rays during the travel. 
"
p03867, Rotated Palindromes,"takahashi and aoki are going to together construct a sequence of integers. first, takahashi will provide a sequence of integers a, satisfying all of the following conditions: the length of a is n. each element in a is an integer between 1 and k, inclusive. a is a palindrome, that is, reversing the order of elements in a will result in the same sequence as the original. then, aoki will perform the following operation an arbitrary number of times: move the first element in a to the end of a. how many sequences a can be obtained after this procedure, modulo 10^9+7? 
"
p03868, 1D Matching,"there are n computers and n sockets in a one-dimensional world.
the coordinate of the i-th computer is a_i, and the coordinate of the i-th socket is b_i.
it is guaranteed that these 2n coordinates are pairwise distinct. snuke wants to connect each computer to a socket using a cable.
each socket can be connected to only one computer. in how many ways can he minimize the total length of the cables?
compute the answer modulo 10^9+7. 
"
p03869, Inscribed Bicycle,"snuke received a triangle as a birthday present.
the coordinates of the three vertices were (x_1, y_1), (x_2, y_2), and (x_3, y_3). he wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch).
compute the maximum possible radius of the circles. 
"
p03870, Cheating Nim,"a cheetah and a cheater are going to play the game of nim.
in this game they use n piles of stones.
initially the i-th pile contains a_i stones.
the players take turns alternately, and the cheetah plays first.
in each turn, the player chooses one of the piles, and takes one or more stones from the pile.
the player who can't make a move loses. however, before the game starts, the cheater wants to cheat a bit to make sure that he can win regardless of the moves by the cheetah.
from each pile, the cheater takes zero or one stone and eats it before the game.
in case there are multiple ways to guarantee his winning, he wants to minimize the number of stones he eats. compute the number of stones the cheater will eat.
in case there is no way for the cheater to win the game even with the cheating, print -1 instead. 
"
p03871, Dice Game,"there are two (6-sided) dice: a red die and a blue die.
when a red die is rolled, it shows i with probability p_i percents, and when a blue die is rolled, it shows j with probability q_j percents. petr and tourist are playing the following game.
both players know the probabilistic distributions of the two dice.
first, petr chooses a die in his will (without showing it to tourist), rolls it, and tells tourist the number it shows.
then, tourist guesses the color of the chosen die.
if he guesses the color correctly, tourist wins. otherwise petr wins. if both players play optimally, what is the probability that tourist wins the game? 
"
p03872, Water Distribution,"there are n cities in a two-dimensional plane.
the coordinates of the i-th city is (x_i, y_i).
initially, the amount of water stored in the i-th city is a_i liters. snuke can carry any amount of water from a city to another city.
however, water leaks out a bit while he carries it.
if he carries l liters of water from the s-th city to the t-th city, only max(l-d_{s,t}, 0) liters of water remains when he arrives at the destination.
here d_{s,t} denotes the (euclidean) distance between the s-th city and the t-th city.
he can perform arbitrary number of operations of this type. snuke wants to maximize the minimum amount of water among the n cities.
find the maximum x such that he can distribute at least x liters of water to each city. 
"
p03873, Intervals,"snuke received n intervals as a birthday present.
the i-th interval was [-l_i, r_i].
it is guaranteed that both l_i and r_i are positive.
in other words, the origin is strictly inside each interval. snuke doesn't like overlapping intervals, so he decided to move some intervals.
for any positive integer d, if he pays d dollars, he can choose one of the intervals and move it by the distance of d.
that is, if the chosen segment is [a, b], he can change it to either [a+d, b+d] or [a-d, b-d]. he can repeat this type of operation arbitrary number of times.
after the operations, the intervals must be pairwise disjoint (however, they may touch at a point).
formally, for any two intervals, the length of the intersection must be zero. compute the minimum cost required to achieve his goal. 
"
p03874, FESTIVAL,"welcome to code festival 2016!
in order to celebrate this contest, find a string s that satisfies the following conditions: the length of s is between 1 and 5000, inclusive. s consists of uppercase letters. s contains exactly k occurrences of the string ""festival"" as a subsequence.
in other words, there are exactly k tuples of integers (i_0, i_1, ..., i_7) such that 0 ≤ i_0 &lt; i_1 &lt; ... &lt; i_7 ≤ |s|-1 and s[i_0]='f', s[i_1]='e', ..., s[i_7]='l'. it can be proved that under the given constraints, the solution always exists.
in case there are multiple possible solutions, you can output any. 
"
p03875, AB=C Problem,"snuke received two matrices a and b as birthday presents.
each of the matrices is an n by n matrix that consists of only 0 and 1. then he computed the product of the two matrices, c = ab.
since he performed all computations in modulo two, c was also an n by n matrix that consists of only 0 and 1.
for each 1 ≤ i, j ≤ n, you are given c_{i, j}, the (i, j)-element of the matrix c. however, snuke accidentally ate the two matrices a and b, and now he only knows c.
compute the number of possible (ordered) pairs of the two matrices a and b, modulo 10^9+7. 
"
p03876, 90 and 270,"construct an n-gon that satisfies the following conditions: the polygon is simple (see notes for the definition). each edge of the polygon is parallel to one of the coordinate axes. each coordinate is an integer between 0 and 10^9, inclusive. the vertices are numbered 1 through n in counter-clockwise order. the internal angle at the i-th vertex is exactly a_i degrees. in case there are multiple possible answers, you can output any. 
"
p03877, 123 Pairs,"consider all integers between 1 and 2n, inclusive.
snuke wants to divide these integers into n pairs such that: each integer between 1 and 2n is contained in exactly one of the pairs. in exactly a pairs, the difference between the two integers is 1. in exactly b pairs, the difference between the two integers is 2. in exactly c pairs, the difference between the two integers is 3. note that the constraints guarantee that n = a + b + c, thus no pair can have the difference of 4 or more. compute the number of ways to do this, modulo 10^9+7. 
"
p03878, 1D Matching,"there are n computers and n sockets in a one-dimensional world.
the coordinate of the i-th computer is a_i, and the coordinate of the i-th socket is b_i.
it is guaranteed that these 2n coordinates are pairwise distinct. snuke wants to connect each computer to a socket using a cable.
each socket can be connected to only one computer. in how many ways can he minimize the total length of the cables?
compute the answer modulo 10^9+7. 
"
p03879, Inscribed Bicycle,"snuke received a triangle as a birthday present.
the coordinates of the three vertices were (x_1, y_1), (x_2, y_2), and (x_3, y_3). he wants to draw two circles with the same radius inside the triangle such that the two circles do not overlap (but they may touch).
compute the maximum possible radius of the circles. 
"
p03880, Cheating Nim,"a cheetah and a cheater are going to play the game of nim.
in this game they use n piles of stones.
initially the i-th pile contains a_i stones.
the players take turns alternately, and the cheetah plays first.
in each turn, the player chooses one of the piles, and takes one or more stones from the pile.
the player who can't make a move loses. however, before the game starts, the cheater wants to cheat a bit to make sure that he can win regardless of the moves by the cheetah.
from each pile, the cheater takes zero or one stone and eats it before the game.
in case there are multiple ways to guarantee his winning, he wants to minimize the number of stones he eats. compute the number of stones the cheater will eat.
in case there is no way for the cheater to win the game even with the cheating, print -1 instead. 
"
p03881, Dice Game,"there are two (6-sided) dice: a red die and a blue die.
when a red die is rolled, it shows i with probability p_i percents, and when a blue die is rolled, it shows j with probability q_j percents. petr and tourist are playing the following game.
both players know the probabilistic distributions of the two dice.
first, petr chooses a die in his will (without showing it to tourist), rolls it, and tells tourist the number it shows.
then, tourist guesses the color of the chosen die.
if he guesses the color correctly, tourist wins. otherwise petr wins. if both players play optimally, what is the probability that tourist wins the game? 
"
p03882, Water Distribution,"there are n cities in a two-dimensional plane.
the coordinates of the i-th city is (x_i, y_i).
initially, the amount of water stored in the i-th city is a_i liters. snuke can carry any amount of water from a city to another city.
however, water leaks out a bit while he carries it.
if he carries l liters of water from the s-th city to the t-th city, only max(l-d_{s,t}, 0) liters of water remains when he arrives at the destination.
here d_{s,t} denotes the (euclidean) distance between the s-th city and the t-th city.
he can perform arbitrary number of operations of this type. snuke wants to maximize the minimum amount of water among the n cities.
find the maximum x such that he can distribute at least x liters of water to each city. 
"
p03883, Intervals,"snuke received n intervals as a birthday present.
the i-th interval was [-l_i, r_i].
it is guaranteed that both l_i and r_i are positive.
in other words, the origin is strictly inside each interval. snuke doesn't like overlapping intervals, so he decided to move some intervals.
for any positive integer d, if he pays d dollars, he can choose one of the intervals and move it by the distance of d.
that is, if the chosen segment is [a, b], he can change it to either [a+d, b+d] or [a-d, b-d]. he can repeat this type of operation arbitrary number of times.
after the operations, the intervals must be pairwise disjoint (however, they may touch at a point).
formally, for any two intervals, the length of the intersection must be zero. compute the minimum cost required to achieve his goal. 
"
p03884, FESTIVAL,"welcome to code festival 2016!
in order to celebrate this contest, find a string s that satisfies the following conditions: the length of s is between 1 and 5000, inclusive. s consists of uppercase letters. s contains exactly k occurrences of the string ""festival"" as a subsequence.
in other words, there are exactly k tuples of integers (i_0, i_1, ..., i_7) such that 0 ≤ i_0 &lt; i_1 &lt; ... &lt; i_7 ≤ |s|-1 and s[i_0]='f', s[i_1]='e', ..., s[i_7]='l'. it can be proved that under the given constraints, the solution always exists.
in case there are multiple possible solutions, you can output any. 
"
p03885, AB=C Problem,"snuke received two matrices a and b as birthday presents.
each of the matrices is an n by n matrix that consists of only 0 and 1. then he computed the product of the two matrices, c = ab.
since he performed all computations in modulo two, c was also an n by n matrix that consists of only 0 and 1.
for each 1 ≤ i, j ≤ n, you are given c_{i, j}, the (i, j)-element of the matrix c. however, snuke accidentally ate the two matrices a and b, and now he only knows c.
compute the number of possible (ordered) pairs of the two matrices a and b, modulo 10^9+7. 
"
p03886, 90 and 270,"construct an n-gon that satisfies the following conditions: the polygon is simple (see notes for the definition). each edge of the polygon is parallel to one of the coordinate axes. each coordinate is an integer between 0 and 10^9, inclusive. the vertices are numbered 1 through n in counter-clockwise order. the internal angle at the i-th vertex is exactly a_i degrees. in case there are multiple possible answers, you can output any. 
"
p03887, 123 Pairs,"consider all integers between 1 and 2n, inclusive.
snuke wants to divide these integers into n pairs such that: each integer between 1 and 2n is contained in exactly one of the pairs. in exactly a pairs, the difference between the two integers is 1. in exactly b pairs, the difference between the two integers is 2. in exactly c pairs, the difference between the two integers is 3. note that the constraints guarantee that n = a + b + c, thus no pair can have the difference of 4 or more. compute the number of ways to do this, modulo 10^9+7. 
"
p03888, Equivalent Resistance,"in an electric circuit, when two resistors r_1 and r_2 are connected in parallel, the equivalent resistance r_3 can be derived from the following formula: \frac{1}{r_1} + \frac{1}{r_2} = \frac{1}{r_3} given r_1 and r_2, find r_3. 
"
p03889, Mirror String,"you are given a string s consisting of letters b, d, p and q.
determine whether s is a mirror string. here, a mirror string is a string s such that the following sequence of operations on s results in the same string s: reverse the order of the characters in s. 
 replace each occurrence of b by d, d by b, p by q, and q by p, simultaneously. 
 

"
p03890, Kode Festival,"kode festival is an anual contest where the hardest stone in the world is determined. (kode is a japanese word for ""hardness"".) this year, 2^n stones participated. the hardness of the i-th stone is a_i. in the contest, stones are thrown at each other in a knockout tournament. when two stones with hardness x and y are thrown at each other, the following will happen: when x &gt; y:
  the stone with hardness y will be destroyed and eliminated.
  the hardness of the stone with hardness x will become x-y. 
 when x = y:
  one of the stones will be destroyed and eliminated.
  the hardness of the other stone will remain the same. 
 when x &lt; y:
  the stone with hardness x will be destroyed and eliminated.
  the hardness of the stone with hardness y will become y-x. 
 the 2^n stones will fight in a knockout tournament as follows: the following pairs will fight: (the 1-st stone versus the 2-nd stone), (the 3-rd stone versus the 4-th stone), ... 
 the following pairs will fight: (the winner of (1-st versus 2-nd) versus the winner of (3-rd versus 4-th)), (the winner of (5-th versus 6-th) versus the winner of (7-th versus 8-th)), ... 
 and so forth, until there is only one stone remaining. 
 determine the eventual hardness of the last stone remaining. 
"
p03891, Magic Square 2,"a 3×3 grid with a integer written in each square, is called a magic square if and only if the integers in each row, the integers in each column, and the integers in each diagonal (from the top left corner to the bottom right corner, and from the top right corner to the bottom left corner), all add up to the same sum. you are given the integers written in the following three squares in a magic square: the integer a at the upper row and left column the integer b at the upper row and middle column the integer c at the middle row and middle column determine the integers written in the remaining squares in the magic square. it can be shown that there exists a unique magic square consistent with the given information. 
"
p03892, Segment on Grid Paper,"takahashi is drawing a segment on grid paper. from a certain square, a square that is x squares to the right and y squares above, is denoted as square (x, y). when takahashi draws a segment connecting the lower left corner of square (a, b) and the lower left corner of square (c, d), find the number of the squares crossed by the segment. here, the segment is said to cross a square if the segment has non-empty intersection with the region within the square, excluding the boundary. 
"
p03893, Trichotomy,"we have a cord whose length is a positive integer. we will perform the following condition until the length of the cord becomes at most 2: operation:
  cut the rope at two positions to obtain three cords, each with a length of a positive integer.
  among these, discard one with the longest length and one with the shortest length, and keep the remaining one. let f(n) be the maximum possible number of times to perform this operation, starting with a cord with the length n. you are given a positive integer x. find the maximum integer n such that f(n)=x. 
"
p03894, Magician,"you have n cups and 1 ball. the cups are arranged in a row, from left to right. you turned down all the cups, then inserted the ball into the leftmost cup. then, you will perform the following q operations: the i-th operation: swap the positions of the a_i-th and b_i-th cups from the left. if one of these cups contains the ball, the ball will also move. since you are a magician, you can cast a magic described below: magic: when the ball is contained in the i-th cup from the left, teleport the ball into the adjacent cup (that is, the (i-1)-th or (i+1)-th cup, if they exist). the magic can be cast before the first operation, between two operations, or after the last operation, but you are allowed to cast it at most once during the whole process. find the number of cups with a possibility of containing the ball after all the operations and possibly casting the magic. 
"
p03895, Early Bird,"takahashi recorded his daily life for the last few days as a integer sequence of length 2n, as follows: a_1, b_1, a_2, b_2, ... , a_n, b_n this means that, starting from a certain time t, he was: sleeping for exactly a_1 seconds then awake for exactly b_1 seconds then sleeping for exactly a_2 seconds : then sleeping for exactly a_n seconds then awake for exactly b_n seconds in this record, he waked up n times. takahashi is wondering how many times he waked up early during the recorded period. here, he is said to wake up early if he wakes up between 4:00 am and 7:00 am, inclusive. if he wakes up more than once during this period, each of these awakenings is counted as waking up early. unfortunately, he forgot the time t. find the maximum possible number of times he waked up early during the recorded period. for your information, a day consists of 86400 seconds, and the length of the period between 4:00 am and 7:00 am is 10800 seconds. 
"
p03896, 3y3s Challenge,"there are n persons, conveniently numbered 1 through n. they will take 3y3s challenge for n-1 seconds. during the challenge, each person must look at each of the n-1 other persons for 1 seconds, in some order. if any two persons look at each other during the challenge, the challenge ends in failure. find the order in which each person looks at each of the n-1 other persons, to be successful in the challenge. 
"
p03897, Connected Checkerboard,"we have an n×n checkerboard. from the square at the upper left corner, a square that is i squares to the right and j squares below is denoted as (i, j). particularly, the square at the upper left corner is denoted as (0, 0). each square (i, j) such that i+j is even, is colored black, and the other squares are colored white. we will satisfy the following condition by painting some of the white squares: any black square can be reached from square (0, 0) by repeatedly moving to a black square that shares a side with the current square. achieve the objective by painting at most 170000 squares black. 
"
p03898, Problem on Tree,"there is a tree with n vertices, numbered 1 through n. the i-th of the n-1 edges connects the vertices p_i and q_i. among the sequences of distinct vertices v_1, v_2, ..., v_m that satisfy the following condition, find the maximum value of m. for every 1 \leq i &lt; m, the path connecting the vertices v_i and v_{i+1} do not contain any vertex in v, except for v_i and v_{i+1}. 

"
p03899, Struck Out,"there are n panels arranged in a row in takahashi's house, numbered 1 through n. the i-th panel has a number a_i written on it. takahashi is playing by throwing balls at these panels. takahashi threw a ball k times. let the panel hit by a boll in the i-th throw be panel p_i. he set the score for the i-th throw as i \times a_{p_i}. he was about to calculate the total score for his throws, when he realized that he forgot the panels hit by balls, p_1,p_2,...,p_k. the only fact he remembers is that for every i (1 ≦ i ≦ k-1), 1 ≦ p_{i+1}-p_i ≦ m holds. based on this fact, find the maximum possible total score for his throws. 
"
p03900, Compression,"takahashi found an integer sequence (a_1,a_2,...,a_n) with n terms. since it was too heavy to carry, he decided to compress it into a single integer. the compression takes place in n-1 steps, each of which shorten the length of the sequence by 1. let s be a string describing the steps, and the sequence on which the i-th step is performed be (a_1,a_2,...,a_k), then the i-th step will be as follows: when the i-th character in s is m, let b_i = max(a_i,a_{i+1}) (1 ≦ i ≦ k-1), and replace the current sequence by (b_1,b_2,...,b_{k-1}). when the i-th character in s is m, let b_i = min(a_i,a_{i+1}) (1 ≦ i ≦ k-1), and replace the current sequence by (b_1,b_2,...,b_{k-1}). takahashi decided the steps s, but he is too tired to carry out the compression. on behalf of him, find the single integer obtained from the compression. 
"
p03901, Takahashi is Missing!,"aoki is in search of takahashi, who is missing in a one-dimentional world.
initially, the coordinate of aoki is 0, and the coordinate of takahashi is known to be x, but his coordinate afterwards cannot be known to aoki. time is divided into turns. in each turn, aoki and takahashi take the following actions simultaneously: let the current coordinate of aoki be a, then aoki moves to a coordinate he selects from a-1, a and a+1. 
 let the current coordinate of takahashi be b, then takahashi moves to the coordinate b-1 with probability of p percent, and moves to the coordinate b+1 with probability of 100-p percent. 
 when the coordinates of aoki and takahashi coincide, aoki can find takahashi.
when they pass by each other, aoki cannot find takahashi. aoki wants to minimize the expected number of turns taken until he finds takahashi. find the minimum possible expected number of turns. 
"
p03902, Takahashi the Magician,"takahashi is a magician. he can cast a spell on an integer sequence (a_1,a_2,...,a_m) with m terms, to turn it into another sequence (s_1,s_2,...,s_m), where s_i is the sum of the first i terms in the original sequence. one day, he received n integer sequences, each with m terms, and named those sequences a_1,a_2,...,a_n. he will try to cast the spell on those sequences so that a_1 &lt; a_2 &lt; ... &lt; a_n will hold, where sequences are compared lexicographically.
let the action of casting the spell on a selected sequence be one cast of the spell. find the minimum number of casts of the spell he needs to perform in order to achieve his objective. here, for two sequences a = (a_1,a_2,...,a_m), b = (b_1,b_2,...,b_m) with m terms each, a &lt; b holds lexicographically if and only if there exists i (1 ≦ i ≦ m) such that a_j = b_j (1 ≦ j &lt; i) and a_i &lt; b_i. 
"
p03903, Graph,"takahashi found an undirected connected graph with n vertices and m edges. the vertices are numbered 1 through n. the i-th edge connects vertices a_i and b_i, and has a weight of c_i. he will play q rounds of a game using this graph. in the i-th round, two vertices s_i and t_i are specified, and he will choose a subset of the edges such that any vertex can be reached from at least one of the vertices s_i or t_i by traversing chosen edges. for each round, find the minimum possible total weight of the edges chosen by takahashi. 
"
p03904, Problem where Commas Separate Digits,"you are given a string s consisting of digits between 1 and 9, inclusive.
you will insert at most k commas (,) into this string to separate it into multiple numbers. your task is to minimize the maximum number among those produced by inserting commas. find minimum possible such value. 
"
p03905, Distance Pairs,"there is an undirected connected graph with n vertices numbered 1 through n.
the lengths of all edges in this graph are 1.
it is known that for each i (1≦i≦n), the distance between vertex 1 and vertex i is a_i, and the distance between vertex 2 and vertex i is b_i.
determine whether there exists such a graph.
if it exists, find the minimum possible number of edges in it. 
"
p03906, Exact Payment,"the currency used in takahashi kingdom is myon.
there are 1-, 10-, 100-, 1000- and 10000-myon coins, and so forth. formally, there are 10^n-myon coins for any non-negative integer n. there are n items being sold at ex store.
the price of the i-th (1≦i≦n) item is a_i myon. takahashi is going to buy some, at least one, possibly all, of these n items.
he hates receiving change, so he wants to bring coins to the store so that he can pay the total price without receiving change, no matter what items he chooses to buy.
also, since coins are heavy, he wants to bring as few coins as possible. find the minimum number of coins he must bring to the store. it can be assumed that he has an infinite supply of coins. 
"
p03907, Distance Pairs,"there is an undirected connected graph with n vertices numbered 1 through n.
the lengths of all edges in this graph are 1.
it is known that for each i (1≦i≦n), the distance between vertex 1 and vertex i is a_i, and the distance between vertex 2 and vertex i is b_i.
determine whether there exists such a graph.
if it exists, find the minimum possible number of edges in it. 
"
p03908, Exact Payment,"the currency used in takahashi kingdom is myon.
there are 1-, 10-, 100-, 1000- and 10000-myon coins, and so forth. formally, there are 10^n-myon coins for any non-negative integer n. there are n items being sold at ex store.
the price of the i-th (1≦i≦n) item is a_i myon. takahashi is going to buy some, at least one, possibly all, of these n items.
he hates receiving change, so he wants to bring coins to the store so that he can pay the total price without receiving change, no matter what items he chooses to buy.
also, since coins are heavy, he wants to bring as few coins as possible. find the minimum number of coins he must bring to the store. it can be assumed that he has an infinite supply of coins. 
"
p03909, Where's Snuke?,"there is a grid with h rows and w columns. the square at the i-th row and j-th column contains a string s_{i,j} of length 5. the rows are labeled with the numbers from 1 through h, and the columns are labeled with the uppercase english letters from a through the w-th letter of the alphabet.  exactly one of the squares in the grid contains the string snuke. find this square and report its location. for example, the square at the 6-th row and 8-th column should be reported as h6. 
"
p03910, Exactly N points,"the problem set at code festival 20xx finals consists of n problems. the score allocated to the i-th (1≦i≦n) problem is i points. takahashi, a contestant, is trying to score exactly n points. for that, he is deciding which problems to solve. as problems with higher scores are harder, he wants to minimize the highest score of a problem among the ones solved by him. determine the set of problems that should be solved. 
"
p03911, Interpretation,"on a planet far, far away, m languages are spoken. they are conveniently numbered 1 through m. for code festival 20xx held on this planet, n participants gathered from all over the planet. the i-th (1≦i≦n) participant can speak k_i languages numbered l_{i,1}, l_{i,2}, ..., l_{i,{}k_i}. two participants a and b can communicate with each other if and only if one of the following conditions is satisfied: there exists a language that both a and b can speak. there exists a participant x that both a and b can communicate with. determine whether all n participants can communicate with all other participants. 
"
p03912, Pair Cards,"takahashi is playing with n cards. the i-th card has an integer x_i on it. takahashi is trying to create as many pairs of cards as possible satisfying one of the following conditions: the integers on the two cards are the same. the sum of the integers on the two cards is a multiple of m. find the maximum number of pairs that can be created. note that a card cannot be used in more than one pair. 
"
p03913, Cookies,"rng is baking cookies. initially, he can bake one cookie per second. he can also eat the cookies baked by himself.
when there are x cookies not yet eaten, he can choose to eat all those cookies. after he finishes eating those cookies, the number of cookies he can bake per second becomes x. note that a cookie always needs to be baked for 1 second, that is, he cannot bake a cookie in 1/x seconds when x &gt; 1.
when he choose to eat the cookies, he must eat all of them; he cannot choose to eat only part of them.
it takes him a seconds to eat the cookies regardless of how many, during which no cookies can be baked. he wants to give n cookies to grandma.
find the shortest time needed to produce at least n cookies not yet eaten. 
"
p03914, Road of the King,"there are n towns in takahashi kingdom. they are conveniently numbered 1 through n. takahashi the king is planning to go on a tour of inspection for m days. he will determine a sequence of towns c, and visit town c_i on the i-th day. that is, on the i-th day, he will travel from his current location to town c_i. if he is already at town c_i, he will stay at that town. his location just before the beginning of the tour is town 1, the capital. the tour ends at town c_m, without getting back to the capital.  the problem is that there is no paved road in this kingdom. he decided to resolve this issue by paving the road himself while traveling. when he travels from town a to town b, there will be a newly paved one-way road from town a to town b. since he cares for his people, he wants the following condition to be satisfied after his tour is over: ""it is possible to travel from any town to any other town by traversing roads paved by him"". how many sequences of towns c satisfy this condition? 
"
p03915, Zigzag MST,"we have a graph with n vertices, numbered 0 through n-1. edges are yet to be added. we will process q queries to add edges.
in the i-th (1≦i≦q) query, three integers a_i, b_i and c_i will be given, and we will add infinitely many edges to the graph as follows: the two vertices numbered a_i and b_i will be connected by an edge with a weight of c_i. the two vertices numbered b_i and a_i+1 will be connected by an edge with a weight of c_i+1. the two vertices numbered a_i+1 and b_i+1 will be connected by an edge with a weight of c_i+2. the two vertices numbered b_i+1 and a_i+2 will be connected by an edge with a weight of c_i+3. the two vertices numbered a_i+2 and b_i+2 will be connected by an edge with a weight of c_i+4. the two vertices numbered b_i+2 and a_i+3 will be connected by an edge with a weight of c_i+5. the two vertices numbered a_i+3 and b_i+3 will be connected by an edge with a weight of c_i+6. ... here, consider the indices of the vertices modulo n.
for example, the vertice numbered n is the one numbered 0, and the vertice numbered 2n-1 is the one numbered n-1. the figure below shows the first seven edges added when n=16, a_i=7, b_i=14, c_i=1:  after processing all the queries, find the total weight of the edges contained in a minimum spanning tree of the graph. 
"
p03916, Tokaido,"there are n squares in a row, numbered 1 through n from left to right.
snuke and rng are playing a board game using these squares, described below: first, snuke writes an integer into each square. each of the two players possesses one piece. snuke places his piece onto square 1, and rng places his onto square 2. the player whose piece is to the left of the opponent's, moves his piece. the destination must be a square to the right of the square where the piece is currently placed, and must not be a square where the opponent's piece is placed. repeat step 3. when the pieces cannot be moved any more, the game ends. the score of each player is calculated as the sum of the integers written in the squares where the player has placed his piece before the end of the game. snuke has already written an integer a_i into square i (1≦i≦n-1), but not into square n yet.
he has decided to calculate for each of m integers x_1,x_2,...,x_m, if he writes it into square n and the game is played, what the value ""(snuke's score) - (rng's score)"" will be.
here, it is assumed that each player moves his piece to maximize the value ""(the player's score) - (the opponent's score)"". 
"
p03917, Reverse Grid,"snuke has a grid with h rows and w columns. the square at the i-th row and j-th column contains a character s_{i,j}. he can perform the following two kinds of operation on the grid: row-reverse: reverse the order of the squares in a selected row. column-reverse: reverse the order of the squares in a selected column. for example, reversing the 2-nd row followed by reversing the 4-th column will result as follows:  by performing these operations any number of times in any order, how many placements of characters on the grid can be obtained? 
"
p03918, Neue Spiel,"snuke has a board with an n \times n grid, and n \times n tiles. each side of a square that is part of the perimeter of the grid is attached with a socket.
that is, each side of the grid is attached with n sockets, for the total of 4 \times n sockets.
these sockets are labeled as follows: the sockets on the top side of the grid: u1, u2, ..., un from left to right the sockets on the bottom side of the grid: d1, d2, ..., dn from left to right the sockets on the left side of the grid: l1, l2, ..., ln from top to bottom the sockets on the right side of the grid: r1, r2, ..., rn from top to bottom snuke can insert a tile from each socket into the square on which the socket is attached.
when the square is already occupied by a tile, the occupying tile will be pushed into the next square, and when the next square is also occupied by another tile, that another occupying tile will be pushed as well, and so forth.
snuke cannot insert a tile if it would result in a tile pushed out of the grid.
the behavior of tiles when a tile is inserted is demonstrated in detail at sample input/output 1. snuke is trying to insert the n \times n tiles one by one from the sockets, to reach the state where every square contains a tile.
here, he must insert exactly u_i tiles from socket ui, d_i tiles from socket di, l_i tiles from socket li and r_i tiles from socket ri.
determine whether it is possible to insert the tiles under the restriction. if it is possible, in what order the tiles should be inserted from the sockets? 
"
p03919, Where's Snuke?,"there is a grid with h rows and w columns. the square at the i-th row and j-th column contains a string s_{i,j} of length 5. the rows are labeled with the numbers from 1 through h, and the columns are labeled with the uppercase english letters from a through the w-th letter of the alphabet.  exactly one of the squares in the grid contains the string snuke. find this square and report its location. for example, the square at the 6-th row and 8-th column should be reported as h6. 
"
p03920, Exactly N points,"the problem set at code festival 20xx finals consists of n problems. the score allocated to the i-th (1≦i≦n) problem is i points. takahashi, a contestant, is trying to score exactly n points. for that, he is deciding which problems to solve. as problems with higher scores are harder, he wants to minimize the highest score of a problem among the ones solved by him. determine the set of problems that should be solved. 
"
p03921, Interpretation,"on a planet far, far away, m languages are spoken. they are conveniently numbered 1 through m. for code festival 20xx held on this planet, n participants gathered from all over the planet. the i-th (1≦i≦n) participant can speak k_i languages numbered l_{i,1}, l_{i,2}, ..., l_{i,{}k_i}. two participants a and b can communicate with each other if and only if one of the following conditions is satisfied: there exists a language that both a and b can speak. there exists a participant x that both a and b can communicate with. determine whether all n participants can communicate with all other participants. 
"
p03922, Pair Cards,"takahashi is playing with n cards. the i-th card has an integer x_i on it. takahashi is trying to create as many pairs of cards as possible satisfying one of the following conditions: the integers on the two cards are the same. the sum of the integers on the two cards is a multiple of m. find the maximum number of pairs that can be created. note that a card cannot be used in more than one pair. 
"
p03923, Cookies,"rng is baking cookies. initially, he can bake one cookie per second. he can also eat the cookies baked by himself.
when there are x cookies not yet eaten, he can choose to eat all those cookies. after he finishes eating those cookies, the number of cookies he can bake per second becomes x. note that a cookie always needs to be baked for 1 second, that is, he cannot bake a cookie in 1/x seconds when x &gt; 1.
when he choose to eat the cookies, he must eat all of them; he cannot choose to eat only part of them.
it takes him a seconds to eat the cookies regardless of how many, during which no cookies can be baked. he wants to give n cookies to grandma.
find the shortest time needed to produce at least n cookies not yet eaten. 
"
p03924, Road of the King,"there are n towns in takahashi kingdom. they are conveniently numbered 1 through n. takahashi the king is planning to go on a tour of inspection for m days. he will determine a sequence of towns c, and visit town c_i on the i-th day. that is, on the i-th day, he will travel from his current location to town c_i. if he is already at town c_i, he will stay at that town. his location just before the beginning of the tour is town 1, the capital. the tour ends at town c_m, without getting back to the capital.  the problem is that there is no paved road in this kingdom. he decided to resolve this issue by paving the road himself while traveling. when he travels from town a to town b, there will be a newly paved one-way road from town a to town b. since he cares for his people, he wants the following condition to be satisfied after his tour is over: ""it is possible to travel from any town to any other town by traversing roads paved by him"". how many sequences of towns c satisfy this condition? 
"
p03925, Zigzag MST,"we have a graph with n vertices, numbered 0 through n-1. edges are yet to be added. we will process q queries to add edges.
in the i-th (1≦i≦q) query, three integers a_i, b_i and c_i will be given, and we will add infinitely many edges to the graph as follows: the two vertices numbered a_i and b_i will be connected by an edge with a weight of c_i. the two vertices numbered b_i and a_i+1 will be connected by an edge with a weight of c_i+1. the two vertices numbered a_i+1 and b_i+1 will be connected by an edge with a weight of c_i+2. the two vertices numbered b_i+1 and a_i+2 will be connected by an edge with a weight of c_i+3. the two vertices numbered a_i+2 and b_i+2 will be connected by an edge with a weight of c_i+4. the two vertices numbered b_i+2 and a_i+3 will be connected by an edge with a weight of c_i+5. the two vertices numbered a_i+3 and b_i+3 will be connected by an edge with a weight of c_i+6. ... here, consider the indices of the vertices modulo n.
for example, the vertice numbered n is the one numbered 0, and the vertice numbered 2n-1 is the one numbered n-1. the figure below shows the first seven edges added when n=16, a_i=7, b_i=14, c_i=1:  after processing all the queries, find the total weight of the edges contained in a minimum spanning tree of the graph. 
"
p03926, Tokaido,"there are n squares in a row, numbered 1 through n from left to right.
snuke and rng are playing a board game using these squares, described below: first, snuke writes an integer into each square. each of the two players possesses one piece. snuke places his piece onto square 1, and rng places his onto square 2. the player whose piece is to the left of the opponent's, moves his piece. the destination must be a square to the right of the square where the piece is currently placed, and must not be a square where the opponent's piece is placed. repeat step 3. when the pieces cannot be moved any more, the game ends. the score of each player is calculated as the sum of the integers written in the squares where the player has placed his piece before the end of the game. snuke has already written an integer a_i into square i (1≦i≦n-1), but not into square n yet.
he has decided to calculate for each of m integers x_1,x_2,...,x_m, if he writes it into square n and the game is played, what the value ""(snuke's score) - (rng's score)"" will be.
here, it is assumed that each player moves his piece to maximize the value ""(the player's score) - (the opponent's score)"". 
"
p03927, Reverse Grid,"snuke has a grid with h rows and w columns. the square at the i-th row and j-th column contains a character s_{i,j}. he can perform the following two kinds of operation on the grid: row-reverse: reverse the order of the squares in a selected row. column-reverse: reverse the order of the squares in a selected column. for example, reversing the 2-nd row followed by reversing the 4-th column will result as follows:  by performing these operations any number of times in any order, how many placements of characters on the grid can be obtained? 
"
p03928, Neue Spiel,"snuke has a board with an n \times n grid, and n \times n tiles. each side of a square that is part of the perimeter of the grid is attached with a socket.
that is, each side of the grid is attached with n sockets, for the total of 4 \times n sockets.
these sockets are labeled as follows: the sockets on the top side of the grid: u1, u2, ..., un from left to right the sockets on the bottom side of the grid: d1, d2, ..., dn from left to right the sockets on the left side of the grid: l1, l2, ..., ln from top to bottom the sockets on the right side of the grid: r1, r2, ..., rn from top to bottom snuke can insert a tile from each socket into the square on which the socket is attached.
when the square is already occupied by a tile, the occupying tile will be pushed into the next square, and when the next square is also occupied by another tile, that another occupying tile will be pushed as well, and so forth.
snuke cannot insert a tile if it would result in a tile pushed out of the grid.
the behavior of tiles when a tile is inserted is demonstrated in detail at sample input/output 1. snuke is trying to insert the n \times n tiles one by one from the sockets, to reach the state where every square contains a tile.
here, he must insert exactly u_i tiles from socket ui, d_i tiles from socket di, l_i tiles from socket li and r_i tiles from socket ri.
determine whether it is possible to insert the tiles under the restriction. if it is possible, in what order the tiles should be inserted from the sockets? 
"
p03929, Calendar,"the cell at the $i$-th row and $j$-th column contains the integer $7i+j-7$. 

					a good sub-grid is a $3 \times 3$ sub-grid and the sum of integers in this sub-grid mod $11$ is $k$. 
					how many good sub-grid are there? write a program and help him. 
"
p03930, Falling Stone Game,"when $k$ or more stones in horizontally adjacent cells are engraved with the same digit, the stones will disappear. disappearances of all such groups of stones take place simultaneously. when stones are in the cells above the emptied cells, these stones drop down so that the emptied cells are filled. after the completion of all stone drops, if one or more groups of stones satisfy the disappearance condition, repeat by returning to the step 1. score is $\sum_i 2^i \times \left(\text{sum of numbers in the stones which disappeared in the $i$-th chain (0-indexed)}\right)$. 

						please answer the points if he erased the optimal place.
"
p03931,Puzzles,"all elements in $b$ are distinct.  all elements in $b$ is in $a$. $b_1 \oplus b_2 \oplus \cdots \oplus b_r = k$. ($r$ is length of sequence $b$) [$\oplus$ means xor] 


						for example, if $a = { 1, 2, 3 }$ and $k = 1$, he can make $b = { 1 }, { 2, 3 }, { 3, 2 }$. 
						he wants to restore sequence $b$, but he says that there are too many ways and he can't restore it.
						please calculate the ways to make $b$ and help him. 
						since the answer can be large, print the answer modulo $1,000,000,007$. 
"
p03932, Souvenirs,"
					sigma and his brother sugim are in the $h \times w$ grid. they wants to buy some souvenirs. 
					their start position is upper-left cell, and the goal position is lower-right cell. 
					some cells has a souvenir shop. at $i$-th row and $j$-th column, there is $a_{i, j}$ souvenirs. 
					in one move, they can go left, right, down, and up cell. 
					but they have little time, so they can move only $h+w-2$ times. 
					they wanted to buy souvenirs as many as possible, but they had no computer, so they couldn't get the maximal numbers of souvenirs. 
					write a program and calculate the maximum souvenirs they can get, and help them. 
"
p03933, Circle and Many Triangles,"if you select vertices $1$, $2$, and $3$, the area of triangle $= 1$. if you select vertices $1$, $2$, and $4$, the area of triangle $= 1$. if you select vertices $1$, $3$, and $4$, the area of triangle $= 1$. if you select vertices $2$, $3$, and $4$, the area of triangle $= 1$. 

						as a result, the 3rd smallest triangle's area $= 1$.
"
p03934, Sushi,"the sushi chef chooses a customer whose number of dishes of sushi eaten is minimum, in customer $1, 2, 3, \dots, a_i$. if there are multiple customers who are minimum numbers of dishes, he selects the minimum-numbered customers.  he puts a dish of sushi on the selected seats. a customer who have selected for professional eats this sushi. repeat 1-3, $b_i$ times. 


						please calculate the number of dishes of sushi that have been eaten by each customer.
"
p03935, Sum of Fibonacci Sequence,"$a_1=a_2=1$, $a_{k+2}=a_{k+1}+a_k \ (k \ge 1)$ $d_{1, j} = a_j$ $d_{i, j} = \sum_{k = 1}^j d_{i - 1, k} \ (i \ge 2)$ 


					you are given integers $n$ and $m$. please calculate the value of $d_{n, m}$. 
					since the answer can be large number, print the answer modulo $998,244,353$. 
					can you solve this problem??? 
"
p03936, Bombs Searching Game,"you can ask the number of bombs in the rectangular area in which upper-left cell is $(a, b)$ and lower-right cell is $(c, d)$. 


						please find all bombs' positions asking as few questions as possible. 

						note: this problem input/output type is special. please read input/output. if you want to use scanf/printf, you have to write fflush(stdout).
"
p03937, Shik and Stone,"we have a grid of h rows and w columns. initially, there is a stone in the top left cell. shik is trying to move the stone to the bottom right cell. in each step, he can move the stone one cell to its left, up, right, or down (if such cell exists). it is possible that the stone visits a cell multiple times (including the bottom right and the top left cell). you are given a matrix of characters a_{ij} (1 \leq i \leq h, 1 \leq j \leq w). after shik completes all moving actions, a_{ij} is # if the stone had ever located at the i-th row and the j-th column during the process of moving. otherwise, a_{ij} is .. please determine whether it is possible that shik only uses right and down moves in all steps. 
"
p03938, Construct Sequences,"you are given a permutation p of the set {1, 2, ..., n}. please construct two sequences of positive integers a_1, a_2, ..., a_n and b_1, b_2, ..., b_n satisfying the following conditions: 1 \leq a_i, b_i \leq 10^9 for all i a_1 &lt; a_2 &lt; ... &lt; a_n b_1 &gt; b_2 &gt; ... &gt; b_n a_{p_1}+b_{p_1} &lt; a_{p_2}+b_{p_2} &lt; ... &lt; a_{p_n}+b_{p_n} 

"
p03939, Pushing Balls,"there are n balls and n+1 holes in a line. balls are numbered 1 through n from left to right. holes are numbered 1 through n+1 from left to right. the i-th ball is located between the i-th hole and (i+1)-th hole. we denote the distance between neighboring items (one ball and one hole) from left to right as d_i (1 \leq i \leq 2 \times n). you are given two parameters d_1 and x. d_i - d_{i-1} is equal to x for all i (2 \leq i \leq 2 \times n). we want to push all n balls into holes one by one. when a ball rolls over a hole, the ball will drop into the hole if there is no ball in the hole yet. otherwise, the ball will pass this hole and continue to roll. (in any scenario considered in this problem, balls will never collide.) in each step, we will choose one of the remaining balls uniformly at random and then choose a direction (either left or right) uniformly at random and push the ball in this direction. please calculate the expected total distance rolled by all balls during this process. for example, when n = 3, d_1 = 1, and x = 1, the following is one possible scenario: first step: push the ball numbered 2 to its left, it will drop into the hole numbered 2. the distance rolled is 3. second step: push the ball numbered 1 to its right, it will pass the hole numbered 2 and drop into the hole numbered 3. the distance rolled is 9. third step: push the ball numbered 3 to its right, it will drop into the hole numbered 4. the distance rolled is 6. so the total distance in this scenario is 18. note that in all scenarios every ball will drop into some hole and there will be a hole containing no ball in the end. 
"
p03940, Shik and Game,"imagine a game played on a line. initially, the player is located at position 0 with n candies in his possession, and the exit is at position e. there are also n bears in the game. the i-th bear is located at x_i. the maximum moving speed of the player is 1 while the bears do not move at all. when the player gives a candy to a bear, it will provide a coin after t units of time. more specifically, if the i-th bear is given a candy at time t, it will put a coin at its position at time t+t. the purpose of this game is to give candies to all the bears, pick up all the coins, and go to the exit. note that the player can only give a candy to a bear if the player is at the exact same position of the bear. also, each bear will only produce a coin once. if the player visits the position of a coin after or at the exact same time that the coin is put down, the player can pick up the coin. coins do not disappear until collected by the player. shik is an expert of this game. he can give candies to bears and pick up coins instantly. you are given the configuration of the game. please calculate the minimum time shik needs to collect all the coins and go to the exit. 
"
p03941, Shik and Travel,"in the country there are n cities numbered 1 through n, which are connected by n-1 bidirectional roads. in terms of graph theory, there is a unique simple path connecting every pair of cities. that is, the n cities form a tree. besides, if we view city 1 as the root of this tree, the tree will be a full binary tree (a tree is a full binary tree if and only if every non-leaf vertex in the tree has exactly two children). roads are numbered 1 through n-1. the i-th road connects city i+1 and city a_i. when you pass through road i, the toll you should pay is v_i (if v_i is 0, it indicates the road does not require a toll). a company in city 1 will give each employee a family travel and cover a large part of the tolls incurred. each employee can design the travel by themselves. that is, which cities he/she wants to visit in each day and which city to stay at each night. however, there are some constraints. more details are as follows: the travel must start and end at city 1. if there are m leaves in the tree formed by the cities, then the number of days in the travel must be m+1. at the end of each day, except for the last day, the employee must stay at some hotel in a leaf city. during the whole travel, the employee must stay at all leaf cities exactly once. 
 during the whole travel, all roads of the country must be passed through exactly twice. 
 the amount that the employee must pay for tolls by him/herself is the maximum total toll incurred in a single day during the travel, except the first day and the last day. the remaining tolls will be covered by the company. 
 shik, as an employee of this company, has only one hope for his travel. he hopes that the amount he must pay for tolls by himself will be as small as possible. please help shik to design the travel which satisfies his hope. 
"
p03942, Shik and Copying String,"shik's job is very boring. at day 0, his boss gives him a string s_0 of length n which consists of only lowercase english letters. in the i-th day after day 0, shik's job is to copy the string s_{i-1} to a string s_i. we denote the j-th letter of s_i as s_i[j]. shik is inexperienced in this job. in each day, when he is copying letters one by one from the first letter to the last letter, he would make mistakes. that is, he sometimes accidentally writes down the same letter that he wrote previously instead of the correct one. more specifically, s_i[j] is equal to either s_{i-1}[j] or s_{i}[j-1]. (note that s_i[1] always equals to s_{i-1}[1].) you are given the string s_0 and another string t.
please determine the smallest integer i such that s_i could be equal to t. if no such i exists, please print -1. 
"
p03943, Fighting over Candies,"two students of atcoder kindergarten are fighting over candy packs. there are three candy packs, each of which contains a, b, and c candies, respectively. teacher evi is trying to distribute the packs between the two students so that each student gets the same number of candies. determine whether it is possible. note that evi cannot take candies out of the packs, and the whole contents of each pack must be given to one of the students. 
"
p03944, Snuke's Coloring 2 (ABC Edit),"there is a rectangle in the xy-plane, with its lower left corner at (0, 0) and its upper right corner at (w, h). each of its sides is parallel to the x-axis or y-axis. initially, the whole region within the rectangle is painted white. snuke plotted n points into the rectangle. the coordinate of the i-th (1 ≦ i ≦ n) point was (x_i, y_i). then, he created an integer sequence a of length n, and for each 1 ≦ i ≦ n, he painted some region within the rectangle black, as follows: if a_i = 1, he painted the region satisfying x &lt; x_i within the rectangle. if a_i = 2, he painted the region satisfying x &gt; x_i within the rectangle. if a_i = 3, he painted the region satisfying y &lt; y_i within the rectangle. if a_i = 4, he painted the region satisfying y &gt; y_i within the rectangle. find the area of the white region within the rectangle after he finished painting. 
"
p03945, 1D Reversi,"two foxes jiro and saburo are playing a game called 1d reversi. this game is played on a board, using black and white stones. on the board, stones are placed in a row, and each player places a new stone to either end of the row. similarly to the original game of reversi, when a white stone is placed, all black stones between the new white stone and another white stone, turn into white stones, and vice versa. in the middle of a game, something came up and saburo has to leave the game. the state of the board at this point is described by a string s. there are |s| (the length of s) stones on the board, and each character in s represents the color of the i-th (1 ≦ i ≦ |s|) stone from the left. if the i-th character in s is b, it means that the color of the corresponding stone on the board is black. similarly, if the i-th character in s is w, it means that the color of the corresponding stone is white. jiro wants all stones on the board to be of the same color. for this purpose, he will place new stones on the board according to the rules. find the minimum number of new stones that he needs to place. 
"
p03946, An Invisible Hand,"there are n towns located in a line, conveniently numbered 1 through n. takahashi the merchant is going on a travel from town 1 to town n, buying and selling apples. takahashi will begin the travel at town 1, with no apple in his possession. the actions that can be performed during the travel are as follows: move: when at town i (i &lt; n), move to town i + 1. merchandise: buy or sell an arbitrary number of apples at the current town. here, it is assumed that one apple can always be bought and sold for a_i yen (the currency of japan) at town i (1 ≦ i ≦ n), where a_i are distinct integers. also, you can assume that he has an infinite supply of money. for some reason, there is a constraint on merchandising apple during the travel: the sum of the number of apples bought and the number of apples sold during the whole travel, must be at most t. (note that a single apple can be counted in both.) during the travel, takahashi will perform actions so that the profit of the travel is maximized. here, the profit of the travel is the amount of money that is gained by selling apples, minus the amount of money that is spent on buying apples. note that we are not interested in apples in his possession at the end of the travel. aoki, a business rival of takahashi, wants to trouble takahashi by manipulating the market price of apples. prior to the beginning of takahashi's travel, aoki can change a_i into another arbitrary non-negative integer a_i' for any town i, any number of times. the cost of performing this operation is |a_i - a_i'|. after performing this operation, different towns may have equal values of a_i. aoki's objective is to decrease takahashi's expected profit by at least 1 yen. find the minimum total cost to achieve it. you may assume that takahashi's expected profit is initially at least 1 yen. 
"
p03947, 1D Reversi,"two foxes jiro and saburo are playing a game called 1d reversi. this game is played on a board, using black and white stones. on the board, stones are placed in a row, and each player places a new stone to either end of the row. similarly to the original game of reversi, when a white stone is placed, all black stones between the new white stone and another white stone, turn into white stones, and vice versa. in the middle of a game, something came up and saburo has to leave the game. the state of the board at this point is described by a string s. there are |s| (the length of s) stones on the board, and each character in s represents the color of the i-th (1 ≦ i ≦ |s|) stone from the left. if the i-th character in s is b, it means that the color of the corresponding stone on the board is black. similarly, if the i-th character in s is w, it means that the color of the corresponding stone is white. jiro wants all stones on the board to be of the same color. for this purpose, he will place new stones on the board according to the rules. find the minimum number of new stones that he needs to place. 
"
p03948, An Invisible Hand,"there are n towns located in a line, conveniently numbered 1 through n. takahashi the merchant is going on a travel from town 1 to town n, buying and selling apples. takahashi will begin the travel at town 1, with no apple in his possession. the actions that can be performed during the travel are as follows: move: when at town i (i &lt; n), move to town i + 1. merchandise: buy or sell an arbitrary number of apples at the current town. here, it is assumed that one apple can always be bought and sold for a_i yen (the currency of japan) at town i (1 ≦ i ≦ n), where a_i are distinct integers. also, you can assume that he has an infinite supply of money. for some reason, there is a constraint on merchandising apple during the travel: the sum of the number of apples bought and the number of apples sold during the whole travel, must be at most t. (note that a single apple can be counted in both.) during the travel, takahashi will perform actions so that the profit of the travel is maximized. here, the profit of the travel is the amount of money that is gained by selling apples, minus the amount of money that is spent on buying apples. note that we are not interested in apples in his possession at the end of the travel. aoki, a business rival of takahashi, wants to trouble takahashi by manipulating the market price of apples. prior to the beginning of takahashi's travel, aoki can change a_i into another arbitrary non-negative integer a_i' for any town i, any number of times. the cost of performing this operation is |a_i - a_i'|. after performing this operation, different towns may have equal values of a_i. aoki's objective is to decrease takahashi's expected profit by at least 1 yen. find the minimum total cost to achieve it. you may assume that takahashi's expected profit is initially at least 1 yen. 
"
p03949, Integers on a Tree,"we have a tree with n vertices. the vertices are numbered 1, 2, ..., n. the i-th (1 ≦ i ≦ n - 1) edge connects the two vertices a_i and b_i. takahashi wrote integers into k of the vertices. specifically, for each 1 ≦ j ≦ k, he wrote the integer p_j into vertex v_j. the remaining vertices are left empty. after that, he got tired and fell asleep. then, aoki appeared. he is trying to surprise takahashi by writing integers into all empty vertices so that the following condition is satisfied: condition: for any two vertices directly connected by an edge, the integers written into these vertices differ by exactly 1. determine if it is possible to write integers into all empty vertices so that the condition is satisfied. if the answer is positive, find one specific way to satisfy the condition. 
"
p03950, Snuke's Coloring 2,"there is a rectangle in the xy-plane, with its lower left corner at (0, 0) and its upper right corner at (w, h). each of its sides is parallel to the x-axis or y-axis. initially, the whole region within the rectangle is painted white. snuke plotted n points into the rectangle. the coordinate of the i-th (1 ≦ i ≦ n) point was (x_i, y_i). then, for each 1 ≦ i ≦ n, he will paint one of the following four regions black: the region satisfying x &lt; x_i within the rectangle the region satisfying x &gt; x_i within the rectangle the region satisfying y &lt; y_i within the rectangle the region satisfying y &gt; y_i within the rectangle find the longest possible perimeter of the white region of a rectangular shape within the rectangle after he finishes painting. 
"
p03951, Prefix and Suffix,"snuke is interested in strings that satisfy the following conditions: the length of the string is at least n. the first n characters equal to the string s. the last n characters equal to the string t. find the length of the shortest string that satisfies the conditions. 
"
p03952, Median Pyramid Easy,"we have a pyramid with n steps, built with blocks.
the steps are numbered 1 through n from top to bottom.
for each 1≤i≤n, step i consists of 2i-1 blocks aligned horizontally.
the pyramid is built so that the blocks at the centers of the steps are aligned vertically. a pyramid with n=4 steps snuke wrote a permutation of (1, 2, ..., 2n-1) into the blocks of step n.
then, he wrote integers into all remaining blocks, under the following rule: the integer written into a block b must be equal to the median of the three integers written into the three blocks directly under b, or to the lower left or lower right of b. writing integers into the blocks afterwards, he erased all integers written into the blocks.
now, he only remembers that the integer written into the block of step 1 was x. construct a permutation of (1, 2, ..., 2n-1) that could have been written into the blocks of step n, or declare that snuke's memory is incorrect and such a permutation does not exist. 
"
p03953, Rabbit Exercise,"there are n rabbits on a number line.
the rabbits are conveniently numbered 1 through n.
the coordinate of the initial position of rabbit i is x_i. the rabbits will now take exercise on the number line, by performing sets described below.
a set consists of m jumps. the j-th jump of a set is performed by rabbit a_j (2≤a_j≤n-1).
for this jump, either rabbit a_j-1 or rabbit a_j+1 is chosen with equal probability (let the chosen rabbit be rabbit x), then rabbit a_j will jump to the symmetric point of its current position with respect to rabbit x. the rabbits will perform k sets in succession.
for each rabbit, find the expected value of the coordinate of its eventual position after k sets are performed. 
"
p03954, Median Pyramid Hard,"we have a pyramid with n steps, built with blocks.
the steps are numbered 1 through n from top to bottom.
for each 1≤i≤n, step i consists of 2i-1 blocks aligned horizontally.
the pyramid is built so that the blocks at the centers of the steps are aligned vertically. a pyramid with n=4 steps snuke wrote a permutation of (1, 2, ..., 2n-1) into the blocks of step n.
then, he wrote integers into all remaining blocks, under the following rule: the integer written into a block b must be equal to the median of the three integers written into the three blocks directly under b, or to the lower left or lower right of b. writing integers into the blocks afterwards, he erased all integers written into the blocks.
now, he only remembers that the permutation written into the blocks of step n was (a_1, a_2, ..., a_{2n-1}). find the integer written into the block of step 1. 
"
p03955, Rotate 3x3,"we have a grid with 3 rows and n columns.
the cell at the i-th row and j-th column is denoted (i, j).
initially, each cell (i, j) contains the integer i+3j-3. a grid with n=5 columns snuke can perform the following operation any number of times: choose a 3×3 subrectangle of the grid. the placement of integers within the subrectangle is now rotated by 180°. an example sequence of operations (each chosen subrectangle is colored blue) snuke's objective is to manipulate the grid so that each cell (i, j) contains the integer a_{i,j}.
determine whether it is achievable. 
"
p03956, Blackout,"we have a grid with n rows and n columns.
the cell at the i-th row and j-th column is denoted (i, j). initially, m of the cells are painted black, and all other cells are white.
specifically, the cells (a_1, b_1), (a_2, b_2), ..., (a_m, b_m) are painted black. snuke will try to paint as many white cells black as possible, according to the following rule: if two cells (x, y) and (y, z) are both black and a cell (z, x) is white for integers 1≤x,y,z≤n, paint the cell (z, x) black. find the number of black cells when no more white cells can be painted black. 
"
p03957, CF,"this contest is codefestival, which can be shortened to the string cf by deleting some characters.   mr. takahashi, full of curiosity, wondered if he could obtain cf from other strings in the same way.   you are given a string s consisting of uppercase english letters.
determine whether the string cf can be obtained from the string s by deleting some characters. 
"
p03958, K Cakes,"there are k pieces of cakes.
mr. takahashi would like to eat one cake per day, taking k days to eat them all. there are t types of cake, and the number of the cakes of type i (1 ≤ i ≤ t) is a_i.   eating the same type of cake two days in a row would be no fun,
so mr. takahashi would like to decide the order for eating cakes that minimizes the number of days on which he has to eat the same type of cake as the day before.   compute the minimum number of days on which the same type of cake as the previous day will be eaten. 
"
p03959, Two Alpinists,"mountaineers mr. takahashi and mr. aoki recently trekked across a certain famous mountain range.
the mountain range consists of n mountains, extending from west to east in a straight line as mt. 1, mt. 2, ..., mt. n.
mr. takahashi traversed the range from the west and mr. aoki from the east.   the height of mt. i is h_i, but they have forgotten the value of each h_i.
instead, for each i (1 ≤ i ≤ n), they recorded the maximum height of the mountains climbed up to the time they reached the peak of mt. i (including mt. i).
mr. takahashi's record is t_i and mr. aoki's record is a_i.   we know that the height of each mountain h_i is a positive integer.
compute the number of the possible sequences of the mountains' heights, modulo 10^9 + 7. note that the records may be incorrect and thus there may be no possible sequence of the mountains' heights.
in such a case, output 0. 
"
p03960, Friction,"mr. takahashi has in his room an art object with h rows and w columns, made up of h \times w blocks.
each block has a color represented by a lowercase english letter (a-z).
the color of the block at the i-th row and j-th column is c_{i,j}.   mr. takahashi would like to dismantle the object, finding it a bit kitschy for his tastes.
the dismantling is processed by repeating the following operation:   choose one of the w columns and push down that column one row.
the block at the bottom of that column disappears. each time the operation is performed, a cost is incurred.
since blocks of the same color have a property to draw each other together, the cost of the operation is the number of the pairs of blocks (p, q) such that: the block p is in the selected column. the two blocks p and q are horizontally adjacent (before pushing down the column). the two blocks p and q have the same color. mr. takahashi dismantles the object by repeating the operation h \times w times to get rid of all the blocks.
compute the minimum total cost to dismantle the object. 
"
p03961, Encyclopedia of Permutations,"one day mr. takahashi picked up a dictionary containing all of the n! permutations of integers 1 through n.
the dictionary has n! pages, and page i (1 ≤ i ≤ n!) contains the i-th permutation in the lexicographical order. mr. takahashi wanted to look up a certain permutation of length n in this dictionary, but he forgot some part of it. his memory of the permutation is described by a sequence p_1, p_2, ..., p_n.
if p_i = 0, it means that he forgot the i-th element of the permutation; otherwise, it means that he remembered the i-th element of the permutation and it is p_i. he decided to look up all the possible permutations in the dictionary.
compute the sum of the page numbers of the pages he has to check, modulo 10^9 + 7. 
"
p03962, AtCoDeer and Paint Cans,"atcodeer the deer recently bought three paint cans.
the color of the one he bought two days ago is a, the color of the one he bought yesterday is b, and the color of the one he bought today is c.
here, the color of each paint can is represented by an integer between 1 and 100, inclusive. since he is forgetful, he might have bought more than one paint can in the same color.
count the number of different kinds of colors of these paint cans and tell him. 
"
p03963, Painting Balls with AtCoDeer,"there are n balls placed in a row.
atcodeer the deer is painting each of these in one of the k colors of his paint cans.
for aesthetic reasons, any two adjacent balls must be painted in different colors. find the number of the possible ways to paint the balls. 
"
p03964, AtCoDeer and Election Report,"atcodeer the deer is seeing a quick report of election results on tv.
two candidates are standing for the election: takahashi and aoki.
the report shows the ratio of the current numbers of votes the two candidates have obtained, but not the actual numbers of votes.
atcodeer has checked the report n times, and when he checked it for the i-th (1≦i≦n) time, the ratio was t_i:a_i.
it is known that each candidate had at least one vote when he checked the report for the first time. find the minimum possible total number of votes obtained by the two candidates when he checked the report for the n-th time.
it can be assumed that the number of votes obtained by each candidate never decreases. 
"
p03965,Paper,"atcodeer the deer and his friend topcodeer is playing a game.
the game consists of n turns.
in each turn, each player plays one of the two gestures, rock and paper, as in rock-paper-scissors, under the following condition: (※) after each turn, (the number of times the player has played paper)≦(the number of times the player has played rock). each player's score is calculated by (the number of turns where the player wins) - (the number of turns where the player loses), where the outcome of each turn is determined by the rules of rock-paper-scissors. (for those who are not familiar with rock-paper-scissors: if one player plays rock and the other plays paper, the latter player will win and the former player will lose. if both players play the same gesture, the round is a tie and neither player will win nor lose.) with his supernatural power, atcodeer was able to foresee the gesture that topcodeer will play in each of the n turns, before the game starts.
plan atcodeer's gesture in each turn to maximize atcodeer's score. the gesture that topcodeer will play in each turn is given by a string s. if the i-th (1≦i≦n) character in s is g, topcodeer will play rock in the i-th turn. similarly, if the i-th (1≦i≦n) character of s in p, topcodeer will play paper in the i-th turn. 
"
p03966, AtCoDeer and Election Report,"atcodeer the deer is seeing a quick report of election results on tv.
two candidates are standing for the election: takahashi and aoki.
the report shows the ratio of the current numbers of votes the two candidates have obtained, but not the actual numbers of votes.
atcodeer has checked the report n times, and when he checked it for the i-th (1≦i≦n) time, the ratio was t_i:a_i.
it is known that each candidate had at least one vote when he checked the report for the first time. find the minimum possible total number of votes obtained by the two candidates when he checked the report for the n-th time.
it can be assumed that the number of votes obtained by each candidate never decreases. 
"
p03967,Paper,"atcodeer the deer and his friend topcodeer is playing a game.
the game consists of n turns.
in each turn, each player plays one of the two gestures, rock and paper, as in rock-paper-scissors, under the following condition: (※) after each turn, (the number of times the player has played paper)≦(the number of times the player has played rock). each player's score is calculated by (the number of turns where the player wins) - (the number of turns where the player loses), where the outcome of each turn is determined by the rules of rock-paper-scissors. (for those who are not familiar with rock-paper-scissors: if one player plays rock and the other plays paper, the latter player will win and the former player will lose. if both players play the same gesture, the round is a tie and neither player will win nor lose.) with his supernatural power, atcodeer was able to foresee the gesture that topcodeer will play in each of the n turns, before the game starts.
plan atcodeer's gesture in each turn to maximize atcodeer's score. the gesture that topcodeer will play in each turn is given by a string s. if the i-th (1≦i≦n) character in s is g, topcodeer will play rock in the i-th turn. similarly, if the i-th (1≦i≦n) character of s in p, topcodeer will play paper in the i-th turn. 
"
p03968, Building Cubes with AtCoDeer,"atcodeer the deer has n square tiles. the tiles are numbered 1 through n, and the number given to each tile is written on one side of the tile. also, each corner of each tile is painted in one of the 1000 colors, which are represented by the integers 0 between 999. the top-left, top-right, bottom-right and bottom-left corner of the tile with the number i are painted in color c_{i,0}, c_{i,1}, c_{i,2} and c_{i,3}, respectively, when seen in the direction of the number written on the tile (see figure 1). figure 1: the correspondence between the colors of a tile and the input atcodeer is constructing a cube using six of these tiles, under the following conditions: for each tile, the side with the number must face outward. for each vertex of the cube, the three corners of the tiles that forms it must all be painted in the same color. help him by finding the number of the different cubes that can be constructed under the conditions.
since each tile has a number written on it, two cubes are considered different if the set of the used tiles are different, or the tiles are used in different directions, even if the formation of the colors are the same. (each tile can be used in one of the four directions, obtained by 90° rotations.) two cubes are considered the same only if rotating one in the three dimensional space can obtain an exact copy of the other, including the directions of the tiles. figure 2: the four directions of a tile 

"
p03969, Painting Graphs with AtCoDeer,"one day, atcodeer the deer found a simple graph (that is, a graph without self-loops and multiple edges) with n vertices and m edges, and brought it home.
the vertices are numbered 1 through n and mutually distinguishable, and the edges are represented by (a_i,b_i) (1≦i≦m). he is painting each edge in the graph in one of the k colors of his paint cans. as he has enough supply of paint, the same color can be used to paint more than one edge. the graph is made of a special material, and has a strange property. he can choose a simple cycle (that is, a cycle with no repeated vertex), and perform a circular shift of the colors along the chosen cycle. more formally, let e_1, e_2, ..., e_a be the edges along a cycle in order, then he can perform the following simultaneously: paint e_2 in the current color of e_1, paint e_3 in the current color of e_2, ..., paint e_a in the current color of e_{a-1}, and paint e_1 in the current color of e_{a}. figure 1: an example of a circular shift two ways to paint the edges, a and b, are considered the same if a can be transformed into b by performing a finite number of circular shifts. find the number of ways to paint the edges. since this number can be extremely large, print the answer modulo 10^9+7. 
"
p03970, Signboard,"code festival 2016 is going to be held. for the occasion, mr. takahashi decided to make a signboard. he intended to write codefestival2016 on it, but he mistakenly wrote a different string s. fortunately, the string he wrote was the correct length. so mr. takahashi decided to perform an operation that replaces a certain character with another in the minimum number of iterations, changing the string to codefestival2016. find the minimum number of iterations for the rewrite operation. 
"
p03971, Qualification simulator,"there are n participants in the code festival 2016 qualification contests. the participants are either students in japan, students from overseas, or neither of these. only japanese students or overseas students can pass the qualification contests. the students pass when they satisfy the conditions listed below, from the top rank down. participants who are not students cannot pass the qualification contests. a japanese student passes the qualification contests if the number of the participants who have already definitively passed is currently fewer than a+b. an overseas student passes the qualification contests if the number of the participants who have already definitively passed is currently fewer than a+b and the student ranks b-th or above among all overseas students. a string s is assigned indicating attributes of all participants. if the i-th character of string s is a, this means the participant ranked i-th in the qualification contests is a japanese student; b means the participant ranked i-th is an overseas student; and c means the participant ranked i-th is neither of these. write a program that outputs for all the participants in descending rank either yes if they passed the qualification contests or no if they did not pass. 
"
p03972,idian MST,"on an xy plane, in an area satisfying 0 ≤ x ≤ w, 0 ≤ y ≤ h, there is one house at each and every point where both x and y are integers. there are unpaved roads between every pair of points for which either the x coordinates are equal and the difference between the y coordinates is 1, or the y coordinates are equal and the difference between the x coordinates is 1. the cost of paving a road between houses on coordinates (i,j) and (i+1,j) is p_i for any value of j, while the cost of paving a road between houses on coordinates (i,j) and (i,j+1) is q_j for any value of i. mr. takahashi wants to pave some of these roads and be able to travel between any two houses on paved roads only. find the solution with the minimum total cost. 
"
p03973, Greedy customers,"n people are waiting in a single line in front of the takahashi store. the cash on hand of the i-th person from the front of the line is a positive integer a_i. mr. takahashi, the shop owner, has decided on the following scheme: he picks a product, sets a positive integer p indicating its price, and shows this product to customers in order, starting from the front of the line. this step is repeated as described below. at each step, when a product is shown to a customer, if price p is equal to or less than the cash held by that customer at the time, the customer buys the product and mr. takahashi ends the current step. that is, the cash held by the first customer in line with cash equal to or greater than p decreases by p, and the next step begins. mr. takahashi can set the value of positive integer p independently at each step. he would like to sell as many products as possible. however, if a customer were to end up with 0 cash on hand after a purchase, that person would not have the fare to go home. customers not being able to go home would be a problem for mr. takahashi, so he does not want anyone to end up with 0 cash. help out mr. takahashi by writing a program that determines the maximum number of products he can sell, when the initial cash in possession of each customer is given. 
"
p03974, Lexicographical disorder,"there are n strings of lowercase alphabet only. the i-th string is s_i. every string is unique. provide answers for the q queries below. the i-th query has the following format: query: an integer k_i and a string p_{i,1}p_{i,2}...p_{i,26} that results from permuting {a,b,...,z} are given. output the sequence of the string s_{k_i} among the n strings in lexicographical order when the literal sequence is p_{i,1}&lt;p_{i,2}&lt;...&lt;p_{i,26}. 
"
p03975, A Barricade,"
  summer vacation ended at last and the second semester has begun.
  you, a kyoto university student, came to university and heard a rumor that somebody will barricade the entrance of your classroom.
  the barricade will be built just before the start of the a-th class and removed by kyoto university students just before the start of the b-th class.
  all the classes conducted when the barricade is blocking the entrance will be cancelled and you will not be able to attend them.
  today you take n classes and class i is conducted in the t_i-th period.
  you take at most one class in each period.
  find the number of classes you can attend.
 
"
p03976, Problem Committee,"
		                kyoto university programming contest is a programming contest voluntarily held by some kyoto university students.
		                this contest is abbreviated as kyoto university programming contest and called kupc.
                     
		                source: kyoto university programming contest information
 
		            the problem-preparing committee met to hold this year's kupc and n problems were proposed there.
		            the problems are numbered from 1 to n and the name of i-th problem is p_i.
		            however, since they proposed too many problems, they decided to divide them into some sets for several contests.
                  one kupc provides k problems.   each problem appears at most once among all the kupcs.   all the first letters of the problem names in one kupc must be different.  

 
		            you, one of the committee members, want to hold as many kupcs as possible.
		            write a program to find the maximum number of kupcs that can be held this year.
                 
"
p03977, Cookie Breeding Machine,"a professor invented cookie breeding machine for his students who like cookies very much.  when one cookie with the taste of x is put into the machine and a non-negative integer y less than or equal to 127 is input on the machine,
        it consumes the cookie and generates two cookies with the taste of y and (x xor y).  here, xor represents bitwise exclusive or.  at first, there is only one cookie and the taste of it is d .  find the maximum value of the sum of the taste of the exactly n cookies generated after the following operation is conducted n-1 times.  put one of the cookies into the machine.  input a non-negative integer less than or equal to 127 on the machine.  

"
p03978, Long Blackboard,"
  there is a long blackboard with 2 rows and n columns in a classroom of kyoto university. 
  this blackboard is so long that it is impossible to tell which cells are already used and which unused. 
 
  recently, a blackboard retrieval device was installed at the classroom. 
  to use this device, you type a search query that forms a rectangle with 2 rows and any length of columns, where each cell is used or unused. 
  when you input a query, the decive answers whether the rectangle that corresponds to the query exists in the blackboard. 
  here, for a rectangle that corresponds to a search query, if two integer i, j ( i &lt; j ) exist
  and the rectangle equals to the partial blackboard between column i and j ,
  the rectangle is called a sub-blackboard of the blackboard. 
 
  you are currently preparing for a presentation at this classroom.
  to make the presentation go well, you decided to write a program to detect the status of the whole blackboard using the retrieval device. 
  since it takes time to use the device, you want to use it as few times as possible. 
 
  the status of the whole blackboard is already determined at the beginning and does not change while you are using the device. 
 
"
p03979, Fences,"
  there are some goats on a grid with h rows and w columns. 
  alice wants to put some fences at some cells where goats do not exist so that no goat can get outside the grid. 
  goats can move in the four directions, that is, up, down, right and left.
  goats can not move onto the cells where fences are placed. 
  if a goat exists at one of the outermost cells in the grid, it can move outside.
  goats do not move until all fences are placed.  
  find the minimum number of fences to be placed. 
 
"
p03980, Speed Solving,"
            gorillas in kyoto university are good at math.
            they are currently trying to solve problems to find the value of an expression that contains two functions, _ , ^.
            each of these functions takes two input values. _ function returns the smaller of the two input values and ^ function returns the larger.
            gorillas know that integers in the expression are non-negative and less than or equal to 99,
            but can not find out the length of the expression until they read a terminal symbol ? that represents the end of the expression. the number of characters included in each expression is less than or equal to 1000, but they do not even know this fact.
            ai, a smart gorilla, noticed that she may be able to know the value of the expression even if they don't read the whole expression.
           
            for example,
           assume you read the following sentence from the left. when you read the sixth character, that is, when you read the following expression, you can tell the second input value of the funcion is whether 3 or an integer between 30 and 39, and the value turns out 41.  
            since ai wants to solve problems earlier than other gorillas, she decided to solve the problems such that she reads as fewer characters as possible from the left.
            for each expression, find the value of the expression and the minimum number of characters ai needs to read to know the value.
           
"
p03981, Exam,"
          you are going to take the entrance examination of kyoto university tomorrow 
          and have decided to memorize a set of strings s that is expected to appear in the examination. 
          since it is really tough to memorize s as it is, 
          you have decided to memorize a single string t that efficiently contains all the strings in s.
         every string in s is a consecutive subsequence(1) in t .  for every pair of strings x, y (x \neq y) in s , 
            x is not a subsequence(2) of y.   note that (1) is ''consecutive subsequence'', while (2) is ''subsequence''.  
          the next day, you opened the problem booklet at the examination 
          and found that you can get a full score only if you remember s. 
          however, you have forgot how to reconstruct s from t .
          since all you remember is that t satisfies the above conditions, 
          first you have decided to find the maximum possible number of elements in s . 
         
"
p03982, WAAAAAAAAAAAAALL,"
            kyoto university decided to build a straight wall on the west side of the university to protect against gorillas that attack the university from the west every night.
            since it is difficult to protect the university at some points along the wall where gorillas attack violently, reinforcement materials are also built at those points.
            although the number of the materials is limited, the state-of-the-art technology can make a prediction about the points where gorillas will attack next and the number of gorillas that will attack at each point.
            the materials are moved along the wall everyday according to the prediction.
            you, a smart student majoring in computer science, are called to find the way to move the materials more efficiently.
         
            theare are n points where reinforcement materials can be build along the straight wall. they are numbered 1 through n.
            because of the protection against the last attack of gorillas, a_i materials are build at point i (1 \leq i \leq n).
            for the next attack, the materials need to be rearranged such that at least b_i materials are built at point i (1 \leq i \leq n).
            it costs |i - j| to move 1 material from point i to point j.
            find the minimum total cost required to satisfy the condition by moving materials.
            you do not need to consider the attack after the next.
         
"
p03983, Handing out leaflets,"
          eli- 1 started a part-time job handing out leaflets for n seconds. 
          eli- 1 wants to hand out as many leaflets as possible with her special ability, cloning.  
          eli- gen can perform two kinds of actions below. 
	  clone herself and generate eli- (gen + 1) .  (one eli- gen (cloning) and one eli- (gen + 1) (cloned) exist as a result of eli-gen 's cloning.)
            this action takes gen \times c ( c is a coefficient related to cloning. ) seconds.   hand out one leaflet. this action takes one second regardress of the generation ( =gen ).  
          they can not hand out leaflets while cloning. 
          given n and c , find the maximum number of leaflets eli- 1 and her clones can hand out in total modulo 1000000007 (= 10^9 + 7). 
	 
"
p03984, Coloring,"
mikan's birthday is coming soon. since mikan likes graphs very much, aroma decided to give her a undirected graph this year too. 
 
aroma bought a connected undirected graph, which consists of n vertices and n edges. 
the vertices are numbered from 1 to n and for each i(1 \leq i \leq n), vertex i and vartex a_i are connected with an undirected edge. 
aroma thinks it is not interesting only to give the ready-made graph and decided to paint it. 
count the number of ways to paint the vertices of the purchased graph in k colors modulo 10^9 + 7. 
two ways are considered to be the same if the graph painted in one way can be identical to the graph painted in the other way by permutating the numbers of the vertices. 
 
"
p03985, Hundred Eyes Monster,"what an great honor it is to contribute to the prosperity of the primate research of kyoto university!
i decided to paint an extremely high-quarity monster to the best of my ability.  i have already painted the forehead and mouth and this time i am going to paint as many eyes as possible between the forehead and mouth. 
well...i cannot wait to see the complete painting. 

"
p03986, STring,"we have a string x, which has an even number of characters. half the characters are s, and the other half are t. takahashi, who hates the string st, will perform the following operation 10^{10000} times: among the occurrences of st in x as (contiguous) substrings, remove the leftmost one. if there is no occurrence, do nothing. find the eventual length of x. 
"
p03987, Minimum Sum,"one day, snuke was given a permutation of length n, a_1, a_2, ..., a_n, from his friend. find the following:  
"
p03988, Tree Restoring,"aoki loves numerical sequences and trees. one day, takahashi gave him an integer sequence of length n, a_1, a_2, ..., a_n, which made him want to construct a tree. aoki wants to construct a tree with n vertices numbered 1 through n, such that for each i = 1,2,...,n, the distance between vertex i and the farthest vertex from it is a_i, assuming that the length of each edge is 1. determine whether such a tree exists. 
"
p03989, ~K Perm Counting,"snuke loves permutations. he is making a permutation of length n. since he hates the integer k, his permutation will satisfy the following: let the permutation be a_1, a_2, ..., a_n. for each i = 1,2,...,n, |a_i - i| \neq k. among the n! permutations of length n, how many satisfies this condition? since the answer may be extremely large, find the answer modulo 924844033(prime). 
"
p03990, Sugigma: The Showdown,"sigma and sugim are playing a game. the game is played on a graph with n vertices numbered 1 through n. the graph has n-1 red edges and n-1 blue edges, and the n-1 edges in each color forms a tree. the red edges are represented by pairs of integers (a_i, b_i), and the blue edges are represented by pairs of integers (c_i, d_i). each player has his own piece. initially, sigma's piece is at vertex x, and sugim's piece is at vertex y. the game is played in turns, where turns are numbered starting from turn 1. sigma takes turns 1, 3, 5, ..., and sugim takes turns 2, 4, 6, .... in each turn, the current player either moves his piece, or does nothing. here, sigma can only move his piece to a vertex that is directly connected to the current vertex by a red edge. similarly, sugim can only move his piece to a vertex that is directly connected to the current vertex by a blue edge. when the two pieces come to the same vertex, the game ends immediately. if the game ends just after the operation in turn i, let i be the total number of turns in the game. sigma's objective is to make the total number of turns as large as possible, while sugim's objective is to make it as small as possible. determine whether the game will end in a finite number of turns, assuming both players plays optimally to achieve their respective objectives. if the answer is positive, find the number of turns in the game. 
"
p03991, Many Easy Problems,"one day, takahashi was given the following problem from aoki: you are given a tree with n vertices and an integer k. the vertices are numbered 1 through n. the edges are represented by pairs of integers (a_i, b_i). for a set s of vertices in the tree, let f(s) be the minimum number of the vertices in a subtree of the given tree that contains all vertices in s. there are  ways to choose k vertices from the trees. for each of them, let s be the set of the chosen vertices, and find the sum of f(s) over all  ways. since the answer may be extremely large, print it modulo 924844033(prime). since it was too easy for him, he decided to solve this problem for all k = 1,2,...,n. 
"
p03992, CODEFESTIVAL 2016,"this contest is code festival.
however, mr. takahashi always writes it codefestival, omitting the single space between code and festival. so he has decided to make a program that puts the single space he omitted. you are given a string s with 12 letters.
output the string putting a single space between the first 4 letters and last 8 letters in the string s. 
"
p03993, Friendly Rabbits,"there are n rabbits, numbered 1 through n. the i-th (1≤i≤n) rabbit likes rabbit a_i.
note that no rabbit can like itself, that is, a_i≠i. for a pair of rabbits i and j (i＜j), we call the pair (i，j) a friendly pair if the following condition is met. rabbit i likes rabbit j and rabbit j likes rabbit i. calculate the number of the friendly pairs. 
"
p03994, Next Letter,"mr. takahashi has a string s consisting of lowercase english letters.
he repeats the following operation on s exactly k times. choose an arbitrary letter on s and change that letter to the next alphabet. note that the next letter of z is a. for example, if you perform an operation for the second letter on aaz, aaz becomes abz.
if you then perform an operation for the third letter on abz, abz becomes aba. mr. takahashi wants to have the lexicographically smallest string after performing exactly k operations on s.
find the such string. 
"
p03995, Grid and Integers,"there is a grid with r rows and c columns.
we call the cell in the r-th row and c-th column (r，c). mr. takahashi wrote non-negative integers into n of the cells, that is, he wrote a non-negative integer a_i into (r_i，c_i) for each i (1≤i≤n).
after that he fell asleep. mr. aoki found the grid and tries to surprise mr. takahashi by writing integers into all remaining cells.
the grid must meet the following conditions to really surprise mr. takahashi. condition 1: each cell contains a non-negative integer. condition 2: for any 2×2 square formed by cells on the grid, the sum of the top left and bottom right integers must always equal to the sum of the top right and bottom left integers. determine whether it is possible to meet those conditions by properly writing integers into all remaining cells. 
"
p03996, LRU Puzzle,"there are n arrays.
the length of each array is m and initially each array contains integers (1，2，...，m) in this order. mr. takahashi has decided to perform q operations on those n arrays.
for the i-th (1≤i≤q) time, he performs the following operation. choose an arbitrary array from the n arrays and move the integer a_i (1≤a_i≤m) to the front of that array. for example, after performing the operation on a_i=2 and the array (5，4，3，2，1), this array becomes (2，5，4，3，1). mr. takahashi wants to make n arrays exactly the same after performing the q operations.
determine if it is possible or not. 
"
p03997, Trapezoids,"you are given a trapezoid. the lengths of its upper base, lower base, and height are a, b, and h, respectively. an example of a trapezoid find the area of this trapezoid. 
"
p03998, Card Game for Three (ABC Edit),"alice, bob and charlie are playing card game for three, as below: at first, each of the three players has a deck consisting of some number of cards. each card has a letter a, b or c written on it. the orders of the cards in the decks cannot be rearranged. the players take turns. alice goes first. if the current player's deck contains at least one card, discard the top card in the deck. then, the player whose name begins with the letter on the discarded card, takes the next turn. (for example, if the card says a, alice takes the next turn.) if the current player's deck is empty, the game ends and the current player wins the game. you are given the initial decks of the players.
more specifically, you are given three strings s_a, s_b and s_c. the i-th (1≦i≦|s_a|) letter in s_a is the letter on the i-th card in alice's initial deck. s_b and s_c describes bob's and charlie's initial decks in the same way. determine the winner of the game. 
"
p03999, Many Formulas,"you are given a string s consisting of digits between 1 and 9, inclusive.
you can insert the letter + into some of the positions (possibly none) between two letters in this string.
here, + must not occur consecutively after insertion. all strings that can be obtained in this way can be evaluated as formulas. evaluate all possible formulas, and print the sum of the results. 
"
p04000, Snuke's Coloring,"we have a grid with h rows and w columns. at first, all cells were painted white. snuke painted n of these cells. the i-th ( 1 \leq i \leq n ) cell he painted is the cell at the a_i-th row and b_i-th column. compute the following: for each integer j ( 0 \leq j \leq 9 ), how many subrectangles of size 3×3 of the grid contains exactly j black cells, after snuke painted n cells? 

"
p04001, Many Formulas,"you are given a string s consisting of digits between 1 and 9, inclusive.
you can insert the letter + into some of the positions (possibly none) between two letters in this string.
here, + must not occur consecutively after insertion. all strings that can be obtained in this way can be evaluated as formulas. evaluate all possible formulas, and print the sum of the results. 
"
p04002, Snuke's Coloring,"we have a grid with h rows and w columns. at first, all cells were painted white. snuke painted n of these cells. the i-th ( 1 \leq i \leq n ) cell he painted is the cell at the a_i-th row and b_i-th column. compute the following: for each integer j ( 0 \leq j \leq 9 ), how many subrectangles of size 3×3 of the grid contains exactly j black cells, after snuke painted n cells? 

"
p04003, Snuke's Subway Trip,"snuke's town has a subway system, consisting of n stations and m railway lines. the stations are numbered 1 through n. each line is operated by a company. each company has an identification number. the i-th ( 1 \leq i \leq m ) line connects station p_i and q_i bidirectionally. there is no intermediate station. this line is operated by company c_i. you can change trains at a station where multiple lines are available. the fare system used in this subway system is a bit strange. when a passenger only uses lines that are operated by the same company, the fare is 1 yen (the currency of japan). whenever a passenger changes to a line that is operated by a different company from the current line, the passenger is charged an additional fare of 1 yen. in a case where a passenger who changed from some company a's line to another company's line changes to company a's line again, the additional fare is incurred again. snuke is now at station 1 and wants to travel to station n by subway. find the minimum required fare. 
"
p04004, Card Game for Three,"alice, bob and charlie are playing card game for three, as below: at first, each of the three players has a deck consisting of some number of cards. alice's deck has n cards, bob's deck has m cards, and charlie's deck has k cards. each card has a letter a, b or c written on it. the orders of the cards in the decks cannot be rearranged. the players take turns. alice goes first. if the current player's deck contains at least one card, discard the top card in the deck. then, the player whose name begins with the letter on the discarded card, takes the next turn. (for example, if the card says a, alice takes the next turn.) if the current player's deck is empty, the game ends and the current player wins the game. there are 3^{n+m+k} possible patters of the three player's initial decks. among these patterns, how many will lead to alice's victory? since the answer can be large, print the count modulo 1\,000\,000\,007 (=10^9+7). 
"
p04005, Divide a Cuboid,"we have a rectangular parallelepiped of size a×b×c, built with blocks of size 1×1×1. snuke will paint each of the a×b×c blocks either red or blue, so that: there is at least one red block and at least one blue block. the union of all red blocks forms a rectangular parallelepiped. the union of all blue blocks forms a rectangular parallelepiped. snuke wants to minimize the difference between the number of red blocks and the number of blue blocks. find the minimum possible difference. 
"
p04006, Colorful Slimes,"snuke lives in another world, where slimes are real creatures and kept by some people.
slimes come in n colors. those colors are conveniently numbered 1 through n.
snuke currently has no slime. his objective is to have slimes of all the colors together. snuke can perform the following two actions: select a color i (1≤i≤n), such that he does not currently have a slime in color i, and catch a slime in color i. this action takes him a_i seconds. 
 cast a spell, which changes the color of all the slimes that he currently has. the color of a slime in color i (1≤i≤n-1) will become color i+1, and the color of a slime in color n will become color 1. this action takes him x seconds. 
 find the minimum time that snuke needs to have slimes in all n colors. 
"
p04007, AND Grid,"snuke and ciel went to a strange stationery store. each of them got a transparent graph paper with h rows and w columns. snuke painted some of the cells red in his paper. here, the cells painted red were 4-connected, that is, it was possible to traverse from any red cell to any other red cell, by moving to vertically or horizontally adjacent red cells only. ciel painted some of the cells blue in her paper. here, the cells painted blue were 4-connected. afterwards, they precisely overlaid the two sheets in the same direction. then, the intersection of the red cells and the blue cells appeared purple. you are given a matrix of letters a_{ij} (1≤i≤h, 1≤j≤w) that describes the positions of the purple cells. if the cell at the i-th row and j-th column is purple, then a_{ij} is #, otherwise a_{ij} is .. here, it is guaranteed that no outermost cell is purple. that is, if i=1, h or j = 1, w, then a_{ij} is .. find a pair of the set of the positions of the red cells and the blue cells that is consistent with the situation described. it can be shown that a solution always exists. 
"
p04008, Teleporter,"there are n towns in snuke kingdom, conveniently numbered 1 through n.
town 1 is the capital. each town in the kingdom has a teleporter, a facility that instantly transports a person to another place.
the destination of the teleporter of town i is town a_i (1≤a_i≤n).
it is guaranteed that one can get to the capital from any town by using the teleporters some number of times. king snuke loves the integer k.
the selfish king wants to change the destination of the teleporters so that the following holds: starting from any town, one will be at the capital after using the teleporters exactly k times in total. find the minimum number of the teleporters whose destinations need to be changed in order to satisfy the king's desire. 
"
p04009, Salvage Robots,"we have a grid with h rows and w columns.
the state of the cell at the i-th (1≤i≤h) row and j-th (1≤j≤w) column is represented by a letter a_{ij}, as follows: . : this cell is empty. o : this cell contains a robot. e : this cell contains the exit. e occurs exactly once in the whole grid. snuke is trying to salvage as many robots as possible, by performing the following operation some number of times: select one of the following directions: up, down, left, right. all remaining robots will move one cell in the selected direction, except when a robot would step outside the grid, in which case the robot will explode and immediately disappear from the grid. if a robot moves to the cell that contains the exit, the robot will be salvaged and immediately removed from the grid. find the maximum number of robots that can be salvaged. 
"
p04010, Namori,"you are given an undirected graph with n vertices and m edges.
here, n-1≤m≤n holds and the graph is connected.
there are no self-loops or multiple edges in this graph. the vertices are numbered 1 through n, and the edges are numbered 1 through m.
edge i connects vertices a_i and b_i. the color of each vertex can be either white or black.
initially, all the vertices are white.
snuke is trying to turn all the vertices black by performing the following operation some number of times: select a pair of adjacent vertices with the same color, and invert the colors of those vertices. that is, if the vertices are both white, then turn them black, and vice versa. determine if it is possible to turn all the vertices black. if the answer is positive, find the minimum number of times the operation needs to be performed in order to achieve the objective. 
"
p04011, Tak and Hotels (ABC Edit),"there is a hotel with the following accommodation fee: x yen (the currency of japan) per night, for the first k nights y yen per night, for the (k+1)-th and subsequent nights tak is staying at this hotel for n consecutive nights.
find his total accommodation fee. 
"
p04012, Beautiful Strings,"let w be a string consisting of lowercase letters.
we will call w beautiful if the following condition is satisfied: each lowercase letter of the english alphabet occurs even number of times in w. you are given the string w. determine if w is beautiful. 
"
p04013, Tak and Cards,"tak has n cards. on the i-th (1 \leq i \leq n) card is written an integer x_i.
he is selecting one or more cards from these n cards, so that the average of the integers written on the selected cards is exactly a.
in how many ways can he make his selection? 
"
p04014, Digit Sum,"for integers b (b \geq 2) and n (n \geq 1), let the function f(b,n) be defined as follows: f(b,n) = n, when n &lt; b f(b,n) = f(b,\,{\rm floor}(n / b)) + (n \ {\rm mod} \ b), when n \geq b here, {\rm floor}(n / b) denotes the largest integer not exceeding n / b,
and n \ {\rm mod} \ b denotes the remainder of n divided by b. less formally, f(b,n) is equal to the sum of the digits of n written in base b.
for example, the following hold: f(10,\,87654)=8+7+6+5+4=30 f(100,\,87654)=8+76+54=138 you are given integers n and s.
determine if there exists an integer b (b \geq 2) such that f(b,n)=s.
if the answer is positive, also find the smallest such b. 
"
p04015, Tak and Cards,"tak has n cards. on the i-th (1 \leq i \leq n) card is written an integer x_i.
he is selecting one or more cards from these n cards, so that the average of the integers written on the selected cards is exactly a.
in how many ways can he make his selection? 
"
p04016, Digit Sum,"for integers b (b \geq 2) and n (n \geq 1), let the function f(b,n) be defined as follows: f(b,n) = n, when n &lt; b f(b,n) = f(b,\,{\rm floor}(n / b)) + (n \ {\rm mod} \ b), when n \geq b here, {\rm floor}(n / b) denotes the largest integer not exceeding n / b,
and n \ {\rm mod} \ b denotes the remainder of n divided by b. less formally, f(b,n) is equal to the sum of the digits of n written in base b.
for example, the following hold: f(10,\,87654)=8+7+6+5+4=30 f(100,\,87654)=8+76+54=138 you are given integers n and s.
determine if there exists an integer b (b \geq 2) such that f(b,n)=s.
if the answer is positive, also find the smallest such b. 
"
p04017, Tak and Hotels,"n hotels are located on a straight line. the coordinate of the i-th hotel (1 \leq i \leq n) is x_i. tak the traveler has the following two personal principles: he never travels a distance of more than l in a single day. he never sleeps in the open. that is, he must stay at a hotel at the end of a day. you are given q queries. the j-th (1 \leq j \leq q) query is described by two distinct integers a_j and b_j.
for each query, find the minimum number of days that tak needs to travel from the a_j-th hotel to the b_j-th hotel following his principles.
it is guaranteed that he can always travel from the a_j-th hotel to the b_j-th hotel, in any given input. 
"
p04018, Best Representation,"let x be a string of length at least 1.
we will call x a good string, if for any string y and any integer k (k \geq 2), the string obtained by concatenating k copies of y is different from x.
for example, a, bbc and cdcdc are good strings, while aa, bbbb and cdcdcd are not. let w be a string of length at least 1.
for a sequence f=(\,f_1,\,f_2,\,...,\,f_m) consisting of m elements,
we will call f a good representation of w, if the following conditions are both satisfied: for any i \, (1 \leq i \leq m), f_i is a good string. the string obtained by concatenating f_1,\,f_2,\,...,\,f_m in this order, is w. for example, when w=aabb, there are five good representations of w: (aabb) (a,abb) (aab,b) (a,ab,b) (a,a,b,b) among the good representations of w, the ones with the smallest number of elements are called the best representations of w.
for example, there are only one best representation of w=aabb: (aabb). you are given a string w. find the following: the number of elements of a best representation of w the number of the best representations of w, modulo 1000000007 \, (=10^9+7) (it is guaranteed that a good representation of w always exists.) 
"
p04019, Wanna go back home,"snuke lives on an infinite two-dimensional plane. he is going on an n-day trip.
at the beginning of day 1, he is at home. his plan is described in a string s of length n.
on day i(1 ≦ i ≦ n), he will travel a positive distance in the following direction: north if the i-th letter of s is n west if the i-th letter of s is w south if the i-th letter of s is s east if the i-th letter of s is e he has not decided each day's travel distance. determine whether it is possible to set each day's travel distance so that he will be back at home at the end of day n. 
"
p04020, Simplified mahjong,"snuke has a large collection of cards. each card has an integer between 1 and n, inclusive, written on it.
he has a_i cards with an integer i. two cards can form a pair if the absolute value of the difference of the integers written on them is at most 1. snuke wants to create the maximum number of pairs from his cards, on the condition that no card should be used in multiple pairs. find the maximum number of pairs that he can create. 
"
p04021, BBuBBBlesort!,"snuke got an integer sequence of length n from his mother, as a birthday present. the i-th (1 ≦ i ≦ n) element of the sequence is a_i. the elements are pairwise distinct.
he is sorting this sequence in increasing order.
with supernatural power, he can perform the following two operations on the sequence in any order: operation 1: choose 2 consecutive elements, then reverse the order of those elements. operation 2: choose 3 consecutive elements, then reverse the order of those elements. snuke likes operation 2, but not operation 1. find the minimum number of operation 1 that he has to perform in order to sort the sequence in increasing order. 
"
p04022, Anticube,"snuke got positive integers s_1,...,s_n from his mother, as a birthday present. there may be duplicate elements. he will circle some of these n integers. since he dislikes cubic numbers, he wants to ensure that if both s_i and s_j (i ≠ j) are circled, the product s_is_j is not cubic. for example, when s_1=1,s_2=1,s_3=2,s_4=4, it is not possible to circle both s_1 and s_2 at the same time. it is not possible to circle both s_3 and s_4 at the same time, either. find the maximum number of integers that snuke can circle. 
"
p04023, Sequential operations on Sequence,"snuke got an integer sequence from his mother, as a birthday present. the sequence has n elements, and the i-th of them is i.
snuke performs the following q operations on this sequence. the i-th operation, described by a parameter q_i, is as follows: take the first q_i elements from the sequence obtained by concatenating infinitely many copy of the current sequence, then replace the current sequence with those q_i elements. after these q operations, find how many times each of the integers 1 through n appears in the final sequence. 
"
p04024, Fraction of Fractal,"snuke got a grid from his mother, as a birthday present. the grid has h rows and w columns. each cell is painted black or white. all black cells are 4-connected, that is, it is possible to traverse from any black cell to any other black cell by just visiting black cells, where it is only allowed to move horizontally or vertically. the color of the cell at the i-th row and j-th column (1 ≦ i ≦ h, 1 ≦ j ≦ w) is represented by a character s_{ij}. if s_{ij} is #, the cell is painted black. if s_{ij} is ., the cell is painted white. at least one cell is painted black. we will define fractals as follows.
the fractal of level 0 is a 1 × 1 grid with a black cell.
the fractal of level k+1 is obtained by arranging smaller grids in h rows and w columns, following the pattern of the snuke's grid.
at a position that corresponds to a black cell in the snuke's grid, a copy of the fractal of level k is placed.
at a position that corresponds to a white cell in the snuke's grid, a grid whose cells are all white, with the same dimensions as the fractal of level k, is placed. you are given the description of the snuke's grid, and an integer k. find the number of connected components of black cells in the fractal of level k, modulo 10^9+7. 
"
p04025, Be Together,"evi has n integers a_1,a_2,..,a_n. his objective is to have n equal integers by transforming some of them. he may transform each integer at most once. transforming an integer x into another integer y costs him (x-y)^2 dollars. even if a_i=a_j (i≠j), he has to pay the cost separately for transforming each of them (see sample 2). find the minimum total cost to achieve his objective. 
"
p04026, Unbalanced,"given a string t, we will call it unbalanced if and only if the length of t is at least 2, and more than half of the letters in t are the same. for example, both voodoo and melee are unbalanced, while neither noon nor a is. you are given a string s consisting of lowercase letters. determine if there exists a (contiguous) substring of s that is unbalanced. if the answer is positive, show a position where such a substring occurs in s. 
"
p04027, Children and Candies,"12:17 (utc): the sample input 1 and 2 were swapped. the error is now fixed. we are very sorry for your inconvenience. there are n children in atcoder kindergarten, conveniently numbered 1 through n. mr. evi will distribute c indistinguishable candies to the children. if child i is given a candies, the child's happiness will become x_i^a, where x_i is the child's excitement level. the activity level of the kindergarten is the product of the happiness of all the n children. for each possible way to distribute c candies to the children by giving zero or more candies to each child, calculate the activity level of the kindergarten. then, calculate the sum over all possible way to distribute c candies. this sum can be seen as a function of the children's excitement levels x_1,..,x_n, thus we call it f(x_1,..,x_n). you are given integers a_i,b_i (1≦i≦n). find  modulo 10^9+7. 
"
p04028, Unhappy Hacking,"sig has built his own keyboard. designed for ultimate simplicity, this keyboard only has 3 keys on it: the 0 key, the 1 key and the backspace key. to begin with, he is using a plain text editor with this keyboard. this editor always displays one string (possibly empty). just after the editor is launched, this string is empty. when each key on the keyboard is pressed, the following changes occur to the string: the 0 key: a letter 0 will be inserted to the right of the string. the 1 key: a letter 1 will be inserted to the right of the string. the backspace key: if the string is empty, nothing happens. otherwise, the rightmost letter of the string is deleted. sig has launched the editor, and pressed these keys n times in total. as a result, the editor displays a string s. find the number of such ways to press the keys, modulo 10^9 + 7. 
"
p04029, Children and Candies (ABC Edit),"there are n children in atcoder kindergarten. mr. evi will arrange the children in a line, then give 1 candy to the first child in the line, 2 candies to the second child, ..., n candies to the n-th child. how many candies will be necessary in total? 
"
p04030, Unhappy Hacking (ABC Edit),"sig has built his own keyboard. designed for ultimate simplicity, this keyboard only has 3 keys on it: the 0 key, the 1 key and the backspace key. to begin with, he is using a plain text editor with this keyboard. this editor always displays one string (possibly empty). just after the editor is launched, this string is empty. when each key on the keyboard is pressed, the following changes occur to the string: the 0 key: a letter 0 will be inserted to the right of the string. the 1 key: a letter 1 will be inserted to the right of the string. the backspace key: if the string is empty, nothing happens. otherwise, the rightmost letter of the string is deleted. sig has launched the editor, and pressed these keys several times. you are given a string s, which is a record of his keystrokes in order. in this string, the letter 0 stands for the 0 key, the letter 1 stands for the 1 key and the letter b stands for the backspace key. what string is displayed in the editor now? 
"
p04031, Be Together,"evi has n integers a_1,a_2,..,a_n. his objective is to have n equal integers by transforming some of them. he may transform each integer at most once. transforming an integer x into another integer y costs him (x-y)^2 dollars. even if a_i=a_j (i≠j), he has to pay the cost separately for transforming each of them (see sample 2). find the minimum total cost to achieve his objective. 
"
p04032, Unbalanced,"given a string t, we will call it unbalanced if and only if the length of t is at least 2, and more than half of the letters in t are the same. for example, both voodoo and melee are unbalanced, while neither noon nor a is. you are given a string s consisting of lowercase letters. determine if there exists a (contiguous) substring of s that is unbalanced. if the answer is positive, show a position where such a substring occurs in s. 
"
p04033, Range Product,"you are given two integers a and b (a≤b). determine if the product of the integers a, a+1, …, b is positive, negative or zero. 
"
p04034, Box and Ball,"we have n boxes, numbered 1 through n. at first, box 1 contains one red ball, and each of the other boxes contains one white ball. snuke will perform the following m operations, one by one. in the i-th operation, he randomly picks one ball from box x_i, then he puts it into box y_i. find the number of boxes that may contain the red ball after all operations are performed. 
"
p04035, Knot Puzzle,"we have n pieces of ropes, numbered 1 through n. the length of piece i is a_i. at first, for each i (1≤i≤n-1), piece i and piece i+1 are tied at the ends, forming one long rope with n-1 knots. snuke will try to untie all of the knots by performing the following operation repeatedly: choose a (connected) rope with a total length of at least l, then untie one of its knots. is it possible to untie all of the n-1 knots by properly applying this operation? if the answer is positive, find one possible order to untie the knots. 
"
p04036, Stamp Rally,"we have an undirected graph with n vertices and m edges. the vertices are numbered 1 through n, and the edges are numbered 1 through m. edge i connects vertices a_i and b_i. the graph is connected. on this graph, q pairs of brothers are participating in an activity called stamp rally. the stamp rally for the i-th pair will be as follows: one brother starts from vertex x_i, and the other starts from vertex y_i. the two explore the graph along the edges to visit z_i vertices in total, including the starting vertices. here, a vertex is counted only once, even if it is visited multiple times, or visited by both brothers. the score is defined as the largest index of the edges traversed by either of them. their objective is to minimize this value. find the minimum possible score for each pair. 
"
p04037, Candy Piles,"there are n piles of candies on the table. the piles are numbered 1 through n. at first, pile i contains a_i candies. snuke and ciel are playing a game. they take alternating turns. snuke goes first. in each turn, the current player must perform one of the following two operations: choose a pile with the largest number of candies remaining, then eat all candies of that pile. from each pile with one or more candies remaining, eat one candy. the player who eats the last candy on the table, loses the game. determine which player will win if both players play the game optimally. 
"
p04038, Leftmost Ball,"snuke loves colorful balls. he has a total of n×k balls, k in each of his favorite n colors. the colors are numbered 1 through n. he will arrange all of the balls in a row from left to right, in arbitrary order. then, for each of the n colors, he will paint the leftmost ball of that color into color 0, a color different from any of the n original colors. after painting, how many sequences of the colors of the balls are possible? find this number modulo 10^9+7. 
"
p04039, Iroha's Obsession,"iroha is very particular about numbers. there are k digits that she dislikes: d_1, d_2, ..., d_k. she is shopping, and now paying at the cashier.
her total is n yen (the currency of japan), thus she has to hand at least n yen to the cashier (and possibly receive the change). however, as mentioned before, she is very particular about numbers. when she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes. under this condition, she will hand the minimum amount of money. find the amount of money that she will hand to the cashier. 
"
p04040, Iroha and a Grid,"we have a large square grid with h rows and w columns.
iroha is now standing in the top-left cell.
she will repeat going right or down to the adjacent cell, until she reaches the bottom-right cell. however, she cannot enter the cells in the intersection of the bottom a rows and the leftmost b columns. (that is, there are a×b forbidden cells.) there is no restriction on entering the other cells. find the number of ways she can travel to the bottom-right cell. since this number can be extremely large, print the number modulo 10^9+7. 
"
p04041, Iroha and Haiku,"haiku is a short form of japanese poetry. a haiku consists of three phrases with 5, 7 and 5 syllables, in this order. iroha is looking for x,y,z-haiku (defined below) in integer sequences. consider all integer sequences of length n whose elements are between 1 and 10, inclusive. out of those 10^n sequences, how many contain an x,y,z-haiku? here, an integer sequence a_0, a_1, ..., a_{n-1} is said to contain an x,y,z-haiku if and only if there exist four indices x, y, z, w (0 ≦ x &lt; y &lt; z &lt; w ≦ n) such that all of the following are satisfied: a_x + a_{x+1} + ... + a_{y-1} = x a_y + a_{y+1} + ... + a_{z-1} = y a_z + a_{z+1} + ... + a_{w-1} = z since the answer can be extremely large, print the number modulo 10^9+7. 
"
p04042, Iroha Loves Strings,"iroha has a sequence of n strings s_1, s_2, ..., s_n. she will choose some (possibly all) strings from the sequence, then concatenate those strings retaining the relative order, to produce a long string. among all strings of length k that she can produce in this way, find the lexicographically smallest one. 
"
p04043, Iroha and Haiku (ABC Edition),"iroha loves haiku. haiku is a short form of japanese poetry. a haiku consists of three phrases with 5, 7 and 5 syllables, in this order. to create a haiku, iroha has come up with three different phrases. these phrases have a, b and c syllables, respectively. determine whether she can construct a haiku by using each of the phrases once, in some order. 
"
p04044, Iroha Loves Strings (ABC Edition),"iroha has a sequence of n strings s_1, s_2, ..., s_n. the length of each string is l. she will concatenate all of the strings in some order, to produce a long string. among all strings that she can produce in this way, find the lexicographically smallest one. there exists an index i(1≦i≦min(n,m)), such that s_j = t_j for all indices j(1≦j&lt;i), and s_i&lt;t_i. s_i = t_i for all integers i(1≦i≦min(n,m)), and n&lt;m. 
 
"
p04045, Iroha's Obsession,"iroha is very particular about numbers. there are k digits that she dislikes: d_1, d_2, ..., d_k. she is shopping, and now paying at the cashier.
her total is n yen (the currency of japan), thus she has to hand at least n yen to the cashier (and possibly receive the change). however, as mentioned before, she is very particular about numbers. when she hands money to the cashier, the decimal notation of the amount must not contain any digits that she dislikes. under this condition, she will hand the minimum amount of money. find the amount of money that she will hand to the cashier. 
"
p04046, Iroha and a Grid,"we have a large square grid with h rows and w columns.
iroha is now standing in the top-left cell.
she will repeat going right or down to the adjacent cell, until she reaches the bottom-right cell. however, she cannot enter the cells in the intersection of the bottom a rows and the leftmost b columns. (that is, there are a×b forbidden cells.) there is no restriction on entering the other cells. find the number of ways she can travel to the bottom-right cell. since this number can be extremely large, print the number modulo 10^9+7. 
"
p04047, BBQ Easy,"snuke is having a barbeque party. at the party, he will make n servings of skewer meal. example of a serving of skewer meal he has a stock of 2n skewers, all of which will be used in skewer meal. the length of the i-th skewer is l_i.
also, he has an infinite supply of ingredients. to make a serving of skewer meal, he picks 2 skewers and threads ingredients onto those skewers.
let the length of the shorter skewer be x, then the serving can hold the maximum of x ingredients. what is the maximum total number of ingredients that his n servings of skewer meal can hold, if he uses the skewers optimally? 
"
p04048, Mysterious Light,"snuke is conducting an optical experiment using mirrors and his new invention, the rifle of mysterious light. three mirrors of length n are set so that they form an equilateral triangle.
let the vertices of the triangle be a, b and c. inside the triangle, the rifle is placed at the point p on segment ab such that ap = x.
(the size of the rifle is negligible.)
now, the rifle is about to fire a ray of mysterious light in the direction of bc. the ray of mysterious light will travel in a straight line, and will be reflected by mirrors, in the same ways as ""ordinary"" light.
there is one major difference, though: it will be also reflected by its own trajectory as if it is a mirror!
when the ray comes back to the rifle, the ray will be absorbed. the following image shows the ray's trajectory where n = 5 and x = 2. it can be shown that the ray eventually comes back to the rifle and is absorbed, regardless of the values of n and x.
find the total length of the ray's trajectory. 
"
p04049, Shorten Diameter,"given an undirected tree, let the distance between vertices u and v be the
number of edges on the simple path from u to v.
the diameter of a tree is the maximum among the distances between any two vertices.
we will call a tree good if and only if its diameter is at most k. you are given an undirected tree with n vertices numbered 1 through n.
for each i (1≦i≦n-1), there is an edge connecting vertices a_i and b_i. you want to remove zero or more vertices from the tree, so that the resulting tree is good.
when a vertex is removed, all incident edges will also be removed.
the resulting graph must be connected. find the minimum number of vertices that you need to remove in order to produce a good tree. 
"
p04050, Arrays and Palindrome,"snuke got a present from his mother on his birthday.
the present was a pair of two sequences a and b, consisting of positive integers.
they satisfied all of the following properties: the sum of all elements of a is n. the sum of all elements of b is n. any string of length n that satisfies the following two conditions (1) and (2) will also satisfy the condition (3). (1) any of the following forms a palindrome: the first a_1 letters, the following a_2 letters, the following a_3 letters and so on. (2) any of the following forms a palindrome: the first b_1 letters, the following b_2 letters, the following b_3 letters and so on. (3) all n letters are the same. he was happy, until one day he lost both of the sequences.
now, he only remembers that the sequence a was a permutation of another sequence a of length m. to bring him happiness again, his mother has decided to give him another pair of sequences a and b that satisfies his favorite properties and is consistent with his memory. 
"
p04051, BBQ Hard,"snuke is having another barbeque party. this time, he will make one serving of skewer meal. he has a stock of n skewer meal packs. the i-th skewer meal pack contains one skewer, a_i pieces of beef and b_i pieces of green pepper.
all skewers in these packs are different and distinguishable, while all pieces of beef and all pieces of green pepper are, respectively, indistinguishable. to make a skewer meal, he chooses two of his skewer meal packs, and takes out all of the contents from the chosen packs, that is, two skewers and some pieces of beef or green pepper.
(remaining skewer meal packs will not be used.)
then, all those pieces of food are threaded onto both skewers, one by one, in any order. (see the image in the sample section for better understanding.) in how many different ways can he make a skewer meal? two ways of making a skewer meal is different if and only if the sets of the used skewers are different, or the orders of the pieces of food are different.
since this number can be extremely large, find it modulo 10^9+7. 
"
p04052, Wide Swap,"you are given a permutation p_1 ... p_n of the set {1, 2, ..., n}. you can apply the following operation to this permutation, any number of times (possibly zero): choose two indices i,j (1 ≦ i &lt; j ≦ n), such that j - i ≧ k and |p_i - p_j| = 1.
then, swap the values of p_i and p_j. among all permutations that can be obtained by applying this operation to the given permutation, find the lexicographically smallest one. 
"
